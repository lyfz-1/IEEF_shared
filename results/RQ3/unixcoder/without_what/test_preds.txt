refactor SocketAppender initialization to use default host and port settings to improve flexibility by allowing dynamic configuration of remote host and port
refactor header handling in BasicAuthPlugin to use a separate method for setting prompt headers to improve code readability and maintainability
replaced RecordDescriptor . msgLengthOffset with direct access to msgLength in ManyToOneRingBuffer . java to streamline code by removing unnecessary class reference
server : fix overcommit detail not take into account cluster overcommit ratio
added flags parameter and implemented getFlags method in ShadowPaint class to enable customizable behavior of shadowPaint based on flags
updated the title of the MassSetFieldsDialog to use localization for better localization support
do n ' t fail the test if eclipse be n ' t support it
add x - auth support for realm with no scheme
added a RemoteInputListener interface and modified RemoteInput constructor to handle both connected and disconnection events to provide a mechanism for notify listeners of connection states
refactor conditional statements in OrcEncodedDataReader . java to improve readability to enhance code clarity and maintainability
[ homeconnect ] do n ' t start thing if it ' s disabled
added null checks before removing and adding policies in AuthorizeAdminServlet to prevent potential NullPointerExceptions during policy management
updated date assertions in tests to use ` matches ` instead of ` isEqualTo ` for various date formats to ensure compatibility with Java 9 and newer
added JSON processing for DAG information in TezTask . java to enable debugging and logging of DAG information during execution
updated time calculation in ComputedSummary . java and added methods in HprofHeap . java to retrieve heap and tag time to improve accuracy of time representation
replaced the RxJava2Tasks class with a direct call to CommonsApplication ' sMWApi for upload count retrieval to streamline the code
do n ' t lock mvstore if we do n ' t support it
[ rip - 10 ] fix commitlog offset overflow
updated folder opening logic in Launcher . java to check if the folder is open and log the status to improve debugging and ensure the folder is marked as
added a test method to verify the ordering of PGProperty objects to ensure that PGProperty names are sorted in ascending order to maintain the correct ordering of property
remove the hover message for studentgive
updated method parameters and logic in UninstallDropTarget . java to use ItemInfo instead of Object to improve type safety and clarity in handling item types
updated error message assertion in RequestBuilderTest to improve clarity and accuracy of error message validation
refactor NearbyActivity to use NearbyListFragment and NearbyMapFragment instead of RetainedFragment to improve clarity
[ hotfix ] [ runtime ] fix the typo in the constructor of flatprofilecontainerfree
added a new boolean field ` sendZeroAnomalyEmail ` and its corresponding getter and setter methods in ` EmailConfiguration ` to allow configuration of the email
[ hotfix ] [ kafka ] fix checkstyle violation in flinkkafkaconsumerbase
remove dead code . no functional change
added a constructor to ` BlockingResponseListener ` that accepts a maximum length parameter to enhance flexibility in configuring response length
remove thread name from member broadcast since it ' s not need
[ java ] close reader in a finally block .
updated the URL in the test from " https : / / example . com / ? error = access _ denied " to " https : / / example
fix checkstyle issue in block / package / configmetadataprovidertest . java
updated the parameter name from ' reminder ' to ' reminderToUpdate ' in the updateNoteReminder method to improve clarity and consistency in method
added an AcceptAllFilter class to encapsulate directory stream filtering to improve code readability and maintainability by reducing boilerplate code
refactor JdbcTestDataSet class to improve code readability and maintainability
do n ' t throw noclassdeffounderror when lookup a type fail .
added DockerImageName validation to validate Docker image names to ensure that only valid Docker image tags are provided to avoid runtime errors
updated the login error messages in LoginActivity to differentiate between incorrect and wrong credentials
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48105 set autofocus
added a test method for verifying SamlConfig ' s properties in SamlIDPRefreshMockMvcTests . java to ensure that the
added logic to create a new list item if the list is empty and not a digit to ensure proper handling of empty lists in ComparableVersion
set margin and padding to zero for Sheet class , and update return values to use minimum dimensions to ensure sheet dimensions do not exceed preferred sizes
updated imports and package structure for ParallelUniverse and its test classes to improve organization and clarity of the codebase
refactor constructor handling in LocalCacheFactory and NodeFactory to simplify method call syntax to enhance code readability and maintainability
change fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve visual clarity
added functionality to draw self - loops in ProcessingPreview . java to enhance visual representation of self - loops in the graph
updated the constants and their usage from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM
rename the method ` addManaged ` to ` manage ` to improve clarity of the method ' s purpose
set translation of drag handle indicator to zero to ensure the drag handle indicator starts from the correct position in the UI
remove some debug code that be no longer need
updated the query optimization configuration description in HiveConf . java to clarify that filters are only pushed down when specified in Hive . optimize . ppd
added an assumption to skip the ScanningAppProviderRuntimeUpdatesTest on non - OS X to address issues related to build server issues
added Maven bundles for Jetty ALPN client support and a debug option to TestJettyOSGiAnnotationParser to enable better integration with
fix : retry async job in case of exception
refactor transaction handling methods to improve code readability and maintainability
replaced @ AddToRuleKey annotation with @ ExcludeFromRuleKey annotation in GenruleBuildable . java to exclude specific artifacts from artifact caching configuration
simonstewart : try to fix the firefox test error on window
added a check to avoid adding duplicate entries to the columnFamToDynamicColumnsMapping map to optimize performance by avoiding redundant additions
[ hotfix ] [ core ] fix checkstyle violation in hadooptupleunwrappingiterator
added a condition to check if the client version is below MIN _ SPLITTABLE _ SYSTEM _ CATALOG and modified table properties to include derived columns from
update student entity with googleid when it do n ' t already exist
updated import statements for TestCellReference in AllXSSFTests . java to ensure compatibility with the latest POI structure
fix piston mana lens do n ' t respect mob lens .
added a new file LongPointerPressTest3049 . java that implements a long pointer press test with error handling and networking error logging to
truffle : do not report the full graph if the direct call node resolve too big .
None
simplified the condition in the ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve code clarity and ensure
refactor ` OptionalAssert ` class into a new abstract class ` AbstractOptionalAssert ` for improved error handling to enhance code organization and
added JUnit Ignore annotation to WebfluxNotIncludedTests to temporarily disable tests related to issue # 1070
[ java ] remove unnecessary conversion from string to jsstring .
remove trail whitespace to improve code readability
added a condition to check if the media format is video when retrieving web subtitles to ensure proper handling of video formats in the media playback
disable tls in comhostnameverifier and javaxhostnameverifier
do n ' t destroy a vm in a disconnected or local cluster
added cacheEntry to log output and improved string formatting in QueryResultsCache to enhance debugging by providing more context about cache entries
add an option to manage dependency model when run standalone
added a test for sending an intent with a request code in ShadowActivityTest . java and implemented the send method in ShadowActivity . java to
updated GLCanvas initialization and introduced overlay graphics setup in RocketFigure3d . java to enhance rendering performance by enabling and disabling the F
modified the initialization of ` controllerListeners ` to use a synchronized list and added synchronization for thread safety to ensure thread safety when accessing ` controllerListeners ` to
solr - 9893 : make testcoreadminapis only run with java 9 as well
update year retrieval logic in TimestampUtils and improve date formatting in SetObject310Test to enhance accuracy in determining the year of the local date and ensure
fix possible npe on shutdown
updated the property key used in the TxnHandler class to ensure consistency in property naming conventions
replaced ByteChunk with ByteBuffer and updated related methods to improve performance and memory management
[ scb - 2687 ] add asyncutils . tasync ( completablefuture < t > ) . tosync ( completablefuture < t
added ActionGraphBuilder to multiple compiler factory classes and updated method signatures to incorporate ActionGraphBuilder to enhance dependency management and improve action
[ java ] adding test for hidden file input .
removed duplicate exception handling for table creation to improve code readability and maintainability
added a check to return the local Maven directory if the file does not exist to ensure the application can determine its local Maven directory
ggb - 2118 hide algebra label for hidden element
fix ( kubernetes - client - api ) : fix npe in ctelementimpl . getmetadata ( ) ( # 2131 )
fix issue with buffer flag not be set correctly in defaulttrackoutput
fix : do n ' t re reorder entity if caching be disabled
updated error message for missing method call in verify ( mock ) to improve clarity of error reporting
added null check for backupFolder before logging to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to ensure that the ` void ` type
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to ensure toolType is added to the rule key during compilation
replaced hardcoded timestamp threshold with a constant PINCODE _ TIMEOUT to improve code readability and maintainability
disabled isSampled ( ) method in PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to ensure consistent behavior across test cases
removed @ Ignore annotations from multiple test classes to ensure compatibility with the required MongoDB server requirement
no - jira - fix compilation error
changed the condition from checking if the table name starts with a string with an empty string to checking if it is an artifical table instead of a
updated file type checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty attribute checks for session attributes in MongoSessionManager to ensure proper handling of session attributes to avoid potential errors
replace setFixedSize ( 240 , 240 ) with setSizeFromLayout ( ) in CameraSurfaceView . java to improve responsiveness of the surface layout
refactor stopping logic in AbstractConnector to use CountDownLatch for better null checks to enhance code readability and prevent potential NullPointerExceptions
removed unnecessary whitespace in the method signature to improve code readability and maintain consistency
camel - 14284 : camel - core - optimize to reduce object allocation .
( chore ) camel - salesforce : cleanup code duplication in test
updated error handling in WebsocketTest . java to ensure proper validation of WebSocketHandshakeException type
added View . OnLayoutChangeListener to AllAppsTransitionController and refactored the layout change listener implementation to simplify the code structure and improve readability
refactor variable names from ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability
int - 1489 add support for ' default - output - channel ' attribute on < xpath - router >
updated cacheSeconds type from int to String and added DurationCapable annotation to enhance cache duration flexibility and improve configurability
update openapi version to 3.0 . 0 ( rc1 - > 3.0 . 0 )
updated the append method call in ByteBufferPool . java to enhance performance by optimizing buffer appending operations
added a check for the presence of the " alt - rt . jar " jar in the boot class path to print a warning if it is detected to
updated database queries and assertions in JdbcScimUserProvisioningTests to use uppercase ' JO ' and ' JONAH ' instead of
turn on debug - only for java 1.7
[ webcam ] do n ' t drop image if stream be empty
added a condition to check if the content view has content in HttpParser . java and implemented a test for chunked PUT in ProxyServletTest .
refactor AtmosEndpoint class to improve code readability and maintainability
added checks for " printf " , " println " , and " print " methods in Java2TypeScriptAdapter . java to enhance method handling to
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods ` incMetaspaceCapacityUntilGC ` and ` metaspace
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
do n ' t update the end time if the stat have be stamp at start
added unit test base on user forum issue
tmi - 254 : jpeg2000 : invalid icc _ profile sequence number lead to unhandled ioexception
fix terra shatterers not cause reequip animation
removed bindings for Config , Environment , and Config . class in JoobyModule , and added a check to ignore specific entry types in SpringModule to
use container . getparentclassloader ( ) instead of call thread . currentthread ( ) . getcontextclassloader ( ) in web application
allow nameupdater to be able to load additional nameupdater . properties
* make ellipsoidregionselector thread - safe
updated protocol URLs from HTTP to HTTPS in JavaSEPort . java to enhance security by using secure connections
[ geos - 10641 ] make sortby a valid feature parameter for wfs get request
updated the condition for retrieving the grantor from the grantTuple array to handle potential null values correctly
added imports for GraphicsConfiguration , GraphicsEnvironment , and Transparency , and modified image rendering logic in DiagramGenerationTest . java to ensure compatibility with the
throw a runtime exception if we do n ' t like fml to use .
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
make locktest less flaky by use assert eventually
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenizing strings to enhance functionality for splitting strings
use senderror instead of logaccess to handle 404 error
refactor command parsing and highlighting logic in SystemHighlighter . java to improve clarity and maintainability of command handling
update version to 1.0 . 1 - SNAPSHOT and set version date to PENDING to prepare for a new release of the software
updated buffer position to use dimensionSize instead of idx to ensure correct dimension size handling
added drag - and - drop functionality to manage shell drag - and - drop interactions to enhance user experience by providing access to drag -
[ java ] add test for java 7 only .
added support for PSK - AES256 - GCM - SHA384 + TLSv1.2 cipher in TestCipher . java to enhance security
updated the method to retrieve the long description for a place to ensure accurate display of place descriptions for better user experience
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the value field
updated HqlQueryRenderer to handle reserved words and added schema scoping functionality to improve query parsing accuracy and ensure compatibility with schema sco
( chore ) camel - subscription : fix npe message
refactor Parser class to improve code readability and maintainability
modified the ` offsetStreamIndex ` method to include an additional parameter for track selection to enhance functionality by allowing adjusting the index based on the first
tika - 697 - add mime magic for arOftext detection and fix unit test
[ hotfix ] [ table - planner - blink ] remove unused method in flinksqloperatortable
added ` EqualsBuilder ` , ` HashCodeBuilder ` , and ` toString ` methods to ` OneTimeTokenAccount ` and updated ` One
added a condition to check if the assistant is not launched before flinging to ensure that fling only occurs when not currently launched
added a new file SolarisShortDSA . java that implements DSA key pair generation and verification to address issues related to key pair generation and signature errors
added toggleSearchLabel ( false ) method call to disable search label functionality in ListFragment
server : fix take snapshot for volume with volume that do n ' t have the right status set
refactor connection handling in FileDetailActivity to use a dedicated DetailsServiceConnection class to improve code clarity and maintainability by separating connection management
refactor error handling in HttpClientTLSTest to use AtomicReference for request failure to improve clarity and maintainability of exception handling logic
removed the equals method from the ConjunctionScorer class to simplify the class by eliminating unnecessary complexity
added null check for item before binding to prevent potential NullPointerExceptions during item binding
wait for all leader election to complete to avoid race condition
log a warning if the cache be full , shrink to 90 %
updated API paths from v2 to v3 and modified order properties in CryptoFacilities and CryptoFacilitiesAccountInfo classes to enhance API
added an empty ( ) method to the Freenect2 class to provide a convenient way to check for empty datasets
drill - 8023 : release page data on empty dictionary read ( # 8023 )
refactor SerumStreamingService to improve argument validation and add a new buildChannelName method to enhance code clarity and ensure correct market
add a config option to disable the animation when an item be charge on top of a mana pool .
[ java ] do n ' t allow cluster restart to fail if the client do n ' t have a chance to connect .
updated exception handling to log errors instead of ignoring them to improve error reporting for better debugging
make defaultservlettest less flaky on window
modified the insertion of styles in ResourcesInjectorFull . java to ensure consistent styling injection across the application
changed ` String ` to ` FileResource ` for ` changeLogFile ` and ` outputFile ` in ` BaseLiquibaseTask ` , `
use getx ( ) and gety ( ) instead of get y ( ) and get z ( ) in blockworldvector .
removed TODO comments and made CacheEntry class final to enhance code clarity and ensure immutability of CacheEntry
( chore ) camel - core : use pattern . quote when add to resourceconfiguration
modified FileCredentialsCache and EmptyCC to improve cache retrieval logic to enhance cache management by restricting environment variable access and improving argument handling
updated the database path in ValidateMultiSignContractTest . java to reflect the correct test output directory structure
enable fast sync only when there be enough peer to sync
danielwagnerhall for http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
do n ' t expand isequal for segment [ segment [ x , y ] , segment [ z , w ] ] expression
added a condition to clear pendingRenderingOperations when the optimized state has been removed to optimize performance by reducing unnecessary operations
increase sleep time in hazelcasttestsupport to reduce flakiness
fix concurrentmodificationexception in write - behind - queue
set the icon of a JLabel to null in GroupTreeCellRenderer to free up unused icon to improve memory management and prevent potential memory leaks
updated method names in TestBlacklistAwareRedirectResolver for consistency to improve clarity and maintainability of redirect handling logic
added unit tests for ShutdownMonitor and ShutdownMonitorTest classes to ensure proper resource management and validate shutdown behavior
updated the calculation of moveSize and adjusted the fill rate for chunk rewriting in RandomAccessStore . java to improve memory movements to enhance efficiency
refactor field retrieval and exception handling in Json . java to improve clarity and maintainability to enhance error reporting by using the correct class
[ hotfix ] [ runtime ] move componentclosingutil thread to coordination package
cloudstack - 8470 : destroy vm volume when snapshot creation fail
fix assign vlan ip range fail to assign
refactor variable names from userDetailsBeanNames to beanNames for clarity to improve code readability and maintainability
increased the timeout duration for leader retry for a specific shard from 15 seconds to 30 seconds to allow more time for leader operations to complete successfully
added logging for invalid input errors and updated method signatures accordingly to improve error handling and clarity in parameter validation
change image positioning from positive to negative values in URLImage . java to ensure images are drawn in the correct direction
updated field name comparison from solrDocument1 to solrDocument2 to ensure accurate validation of field names in tests
no effective change - code cleanup - remove unnecessary catch block
[ hotfix ] [ stream ] propagate exception cause in case of task failure .
improve performance of hashtag processing in preprocess
updated formatting of the read method in MessagePack . java to improve code readability and maintain consistency
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized mapping of
do n ' t encode empty extension list
updated split method to handle external names and improved readability in LibraryManager . java to enhance code clarity and ensure proper handling of
added an alias for node _ popup _ scripting in the entry navigation to enhance clarity and organization of scripting functionalities
updated constants for HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN in OverviewActionsView . java and re
camel - jms fixed the test error of camel - jms
[ hotfix ] fix checkstyle violation in core package
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` to remove deprecated code to streamline the codebase
changed variable declarations from ` String ` to ` final String ` and added a new servlet for handling micro - gzip requests to ensure immutability
fix concurrentmodificationexception in repeat ( )
added logging functionality and improved formatting in SpeedmentImpl . java to enhance debugging and maintain consistent code style
[ ds - 3952 ] move dspace - config to dspace - config module , and add oai - config file
refactor StoreScanner and TestWideScanner to improve handling of null kv and streamline iteration limits to enhance performance and reduce resource usage by
disable jmx when use camel test
replace hardcoded slash with a constant CANONICAL _ PACKAGE _ SEPARATOR to improve code readability and maintainability
added methods for determining the YARN binary path and Hadoop home path in HiveConf . java and implemented application info logging in RemoteSparkJob
added support for " maria " database in addition to " mysql " to enable compatibility with Maria - specific database configurations
hbase - 2593 fix the masterwalmanager and splitlogmanager log interval bug ( # 2593 )
added a new test class ExecuteAndReturnStringTest to validate networking errors to ensure proper handling of networking errors during form execution
added a new file ` InvokespecialInterface . java ` implementing an interface with invocation methods to demonstrate dynamic method invocation on a specific interface
[ hotfix ] fix checkstyle violation in evictingboundedlist
use edge base directory traversal if turn cost support be available
added a check for backgroundDisabled being non - null in the disabled state of SelectBox to ensure that invalid selection values do not lead to runtime errors
added a null check for md in RpcServer . java to ensure that UnsupportedOperationException is thrown when md is null
updated the calculation of hotseat cell size and spacing in TaskbarViewController . java to improve layout consistency and alignment of hotseat icons
updated partition value retrieval logic in ExpressionTree . java to use values map instead of partitionName to improve clarity and maintainability of the code
implement versioned interface in nametdaskdecorator and taskdefinition
updated the directory reference from getIndexDir to getNewIndexDir to ensure the application uses the correct index directory for replication operations
updated the equality check logic in DisplayModeTest . java to ensure proper comparison of display modes
updated UnicodeToLatexFormatter to handle non - BMP codepoints correctly and added a new test for high codepoints to ensure proper formatting of Unicode characters
added ISO control character checks in OAIDCCrosswalk . java and refactored value assignment in Item . java to ensure proper formatting and
danielwagnerhall : fixing race condition in selenium emulation that could cause a nullpointerexception
added a button to clear all tables and modified conditions in BookmarksPanel and DataBrowser classes to enhance user experience by providing a clear option
replaced manual port handling with UrlUtils for constructing the base URL to improve URL handling consistency and maintainability
updated date parsing in SoftAssertionsTest to use AssertJ ' s parseDatetime method and improved error messages to enhance date validation accuracy and
updated adaptOrders method to include an additional boolean parameter for order adaptation to enhance functionality by allowing the order adaptation in reverse order order order order
delombok now print ` ` var ' ' when the variable type be null or pos ! = - 1 .
[ java ] removing unused import .
changed the Configuration initialization from ` Configuration ( ) ` to ` Configuration ( false ) ` and added a conditional check for the Hive default value to ensure proper
replaced ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) ` in ` WidgetGroup .
added unit test base on user forum issue
use context . getcatalinabase ( ) instead of globals . catalina _ base _ prop
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the return logic in ` ShadowICU ` to handle
updated the initialization of the PlotSquared class to include additional color codes to enhance the visual appearance by providing additional color options
added zuulProperties bean to traceRestClientRibbonCommandFactory to enable configuration of Zuul settings for enhanced monitoring capabilities
tika - 4079 -- ensure default locale be utc for parser test
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to utilize ` getBuildTime ( ) `
updated the calculation of xDist in PagedView . java to improve accuracy in positioning calculations
remove the unused guirw tester
removed the @ NullableDecl annotation from the constructor of LazyMessage and StandardSubjectBuilder classes to simplify the constructor signature and improve readability
updated error message formatting in TestStream . java to improve clarity of error messages for better debugging
move thymeleaf / thymeleaf / itemplateparser to org . thymeleaf . thymeleaf . templateparser .
added unit tests for XPath evaluation in XPathTest . java to ensure correct handling of XPath expressions in the application
[ hotfix ] [ core ] fix checkstyle violation in futureutils
add warning when invokedynamic be not resolve during call - graph construction
updated the domain from " gmail . com " to " example . com " in ContextTest . java to align email references with the intended domain
updated HTTP encoding handling in HttpConnectionTest . java and simplified URI comparison in URIUtil . java to improve response validation and ensure correct URI comparison
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultTableResultSet ` , and ` ResultTableResultSet ` classes to provide a way
fix : add default implementation of unsupportedoperationexception to client interface
refactor HSSFPictureData class to improve code readability and maintainability
use java . time . duration to calculate elapsed time
updated version handling in LibMediaInfoParser to support newer media info versions to ensure compatibility with newer media info features and enhance flexibility
removed unused imports and refactored proxy creation logic in ProjectReader . java to streamline code and improve dependency injection handling
added a new class SerialHeap and updated the heap mapping to use it to facilitate serialization of collected heap instances in the application
added multiple @ SuppressWarnings ( " serial " ) annotations in the GsonTypes . java file to suppress warnings about serialization issues
use mouse . getposition ( ) instead of mouse . getposition ( ) for mouse wheel
updated the MongoQueryCreator to handle null values for the next parameter to ensure that the method returns an empty string when the next parameter is null
[ hotfix ] [ table - common ] [ table - planner - blink ] add multitesettypeinfo to make blink planner
added a method to retrieve an identity provider by its issuer to enhance error handling for missing or duplicate identity providers
http : / / issues . apache . org / jira / browse / amq - 4237 - cmap / browse / amq -
refactor ContactsBackupJob to use a separate OperationsServiceConnection for managing operations to improve service management and resource cleanup during backup operations
refactor type constraints in ` ForAll ` and introduce new classes ` T6938454a ` and ` T6938454b `
add account config hidden flag to account list
add log for inconsistent number of display
updated the schema removal method in PMetaDataImpl to use getSchemaKey directly to simplify schema retrieval logic and improve code clarity
mow - 162 fire login passive login event , not just load event
added a new ` Box2DTest ` class and integrated it into the existing ` GDXTester ` and ` Box2DTest
make local by partitioner log more debuggable
[ hotfix ] increase default buffer request timeout to 5 minute
chore : update sample code to set total timeout , add api client header test
added help button to the help panel to improve user experience by providing contextual help
[ java ] add tcp _ nodelay option to channel for server .
updated method signatures to use wildcard generics for type safety to enhance code readability and maintainability
added a transient classRef field and modified class loading logic in ScanResultObject . java to improve class reference handling and enhance class loading efficiency
refactor connection handling in DecodeServlet . java to improve error handling and streamline image decoding logic to enhance code readability and maintainability
updated Querydsl . java to utilize a new method for converting null handling to improve null handling flexibility in query processing
added null check for actor in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions during action execution
test ( refactor ) : fix checkstyle violation in cttypetest
added synchronization around the closing of BucketWriter instances to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its implementations ` JJ ` , ` JJ ` , and ` KJ ` while
added functionality to revoke existing agent certificates in the CertificateManager class to enhance security by allowing certificate revocation from the agent
added a set to track response codes and modified conditional logic in AbstractHttpTest . java ; implemented a test for writing body after no body response
added error handling and improved message formatting for script execution in ScriptTransformer . java to enhance debugging capabilities by providing more context in error messages
updated connection pooling type configuration and added HikariConfig integration for connection pooling to enhance database connection management and improve test coverage for Hik
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to ensure consistency in
added lock management functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing users to lock or unlock files based
refactor Version class to improve code readability and maintainability
clear endpoint cache on keyspace update
refactor synchronization logic by introducing a new ` waitForState ` method and making the ` waiting ` variable volatile to improve code readability and maintain
updated SkylarkRuleContext and SkylarkDescription classes to use SkylarkRuleContextAttr instead of Map < String , Object > for attribute
simonstewart : create a common storage interface for the selenium - backed webdriver backed storage implementation that can be use by
fix nullpointerexception when use CREATE / REPLACE VIEW with existing view
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling for file generation failures
updated query string retrieval logic in SpellCheckComponent . java to ensure a valid query string is used when available
added validation to check for illegal characters in headers to ensure that headers do not contain duplicate headers values
replaced instanceSize with arrayBaseOffset in HybridLayout . java and added getter and setter methods in HostedInstanceClass . java and HostedInstance
[ apex ] fix compilation error in apex
hhh - 14791 : log eager association with fetchtype . join when eager = true
refactor filters in NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter
added database and table name assertions in TestCompactionTxnHandler . java to ensure database and table names match expected values
added unit test base on user forum issue
added a conditional check before adding traces in TraceBuilder . java to ensure only processed blocks are added to the traces collection
replaced null check with CollectionUtils . contains for improved readability to enhance code clarity and ensure proper handling of null elements in ProviderManager
simplified the database version check in InsertOrUpdateGeneratorPostgres . java to enhance code readability and maintainability
added new SQL queries and logic to handle local index limits in LocalIndexIT . java and modified page limit handling in BaseScannerRegionObserver .
added validation to prevent adding duplicate collection types to avoid conflicts
updated cursor positioning logic in VDUBuffer . java and vt320 . java to correct cursor positioning and ensure proper screen base handling
added a new constant USE _ RETRIES in HttpShardHandlerFactory . java to provide a mechanism for managing retries during shard processing
updated the VERSION _ NUMBER string in JavaVersion . java to include a new regex pattern to ensure compatibility with version 11.0 . 7 . 0 .
[ hotfix ] fix check for empty input gate in streamtask
( chore ) camel - core : cleanup unused test class
added null check for properties before retrieving a value to avoid potential NullPointerException when properties is null
replaced throwing an exception with a custom IOException initialization to improve error handling by providing more informative and descriptive causes
updated the terminology from " rolling " to " stack " in multiple Java files to improve clarity and consistency in terminology usage
txidtextfield now remove the address address if it ' s already address .
bugfix # 20901 , add jmx support for g1 perm generation
removed unused imports and simplified the return logic in NearbyController . java to improve code clarity and maintainability
pdfbox - 4892 : make clonefornewdocument public , a suggest by valerybokov
added checks to ensure that only home activities are processed in the gesture state validation
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and consistency in the
updated method names and improved country country handling in ShadowTelephonyManager to enhance clarity and ensure consistent behavior for network and sim country codes
added functionality to set unfreeze amount in UnfreezeBalanceV2Actuator to improve the handling of frozen balances
fix typo ( per minute , per match )
simonstewart : use fileutils instead of guava to copy directory
refactor multiple assertion classes to improve code organization and maintainability
refactor Observable class to improve code readability and maintainability
refactor the $ pushAll operation into a separate method and add tests for it to enhance code readability and ensure that multiple pushAll
added a null check for the UUID before setting it in the hubChangeLog to ensure that a valid UUID is used to avoid null pointer exceptions
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user interaction by responding to hover events
added a sleep delay before confirming the bootstrap configuration in CoreContainer . java to improve reliability of configuration updates during ZooKeeper execution
camel - 14284 : camel - netty - http - fixed maxheaderssize option name
hbase - 2593 increase the number of retries from 5 to 15 in hbtutestingclusterautostarter
updated file path construction for templateFile in SourceSnippetHelper . java to improve clarity and consistency in file path handling
truffle : fix flaky test graph cache test .
updated query command from " customer _ count " to " all _ tables " and modified the SQL query to use " INFORMATION _ SCHEMA . SYSTEM
added currency metadata adaptation for Kraken assets to correctly associate currency metadata with asset counts
added a toString ( ) method to the AnyOf class and a new AnyOf _ toString _ Test class to provide a string representation of conditions to en
[ te ] [ te ] fix group name in email template for alert ( # 4078 )
do n ' t publish empty measurement
renamed doTransform methods to downcast across multiple converter classes to improve clarity and consistency in method naming conventions
netutils . isloopbackaddress ( ) should only return true for valid local address .
added a method to quote column names in DataTextFormatter to ensure that column names are properly formatted to prevent SQL injection vulnerabilities
added methods for setting and getting system properties in WrapSystem . java and modified StrUtils . java to handle string - to - string conversion to
added a constructor to the UpdateRequest class that accepts a URL string to enhance flexibility by allowing users to specify a POST request method
changed enum declaration from static to non - static in ProtoTypeAdapter . java to allow EnumSerialization to be declared in the project
added a method ` addExperimentalFormatWarning ` to ` RequestHandlerUtils ` and invoked it in both ` DataImportHandler ` and ` ReplicationHandler
updated debug logging format to improve readability and maintainability of module name logging
fix row height to match default label font
[ hotfix ] fix checkstyle violation in defaultbrokerheartbeatmanager
fix npe in cqlinputformat when row be null
removed unnecessary condition checking for the ' Test ' image in the name validation logic
implement hashcode and equal ( ) and equal ( ) for ruleterminalnodelefttuple
added stage ID rearranger functionality in TezCompiler . java to enable dynamic stage ID resolution based on configuration
rename org . apache . cassandra . concurrent . concurrent to org . apache . cassandra . net . messagingservice to avoid
updated memory consumption logic in LotsOfOutput . java to include detailed memory consumption messages to improve debugging and monitoring of memory consumption changes
added imports of ` org . apache . lucene . document . Document ` and ` org . apache . lucene . codecs .
updated LdapAutoConfiguration and LdapProperties to improve anonymous read - only handling and modified variable names for clarity to enhance code readability and
refactor DatabaseMetaData class to improve code readability and maintainability
( chore ) camel - example - echo : fix checkstyle violation
added a ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` and ` StubbingWarningsTest ` to handle
refactor dependency handling in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve code clarity and ensure correct
refactor SPDYAsyncConnection to use readBuffer and writeBuffer instead of conditional handler and handler management to improve clarity and control over buffer
use getflowingblock ( ) instead of getstaticblock ( ) in liquidwrapper
updated intent handling to use data URI for background location listener to improve flexibility in managing location listeners
fix typo find by codespell on fossies . org
[ hotfix ] [ cli ] fix clifrontend support for optimizedplan and streamingplan
tweak craftingmanager . iscraftingorrerecipes ( ) to be more efficient
flume - 1343 . fix test failure on window .
removed unnecessary check for line breaks in whitespace handling to simplify code logic for better readability and maintainability
added a pattern to match " pg _ temp _ . * " in NeuteredLinesFilter . java to enhance filtering capabilities to improve line filtering
chore ( regen ) : update license year for generated file ( # 32 )
added a check for data type name " INTERVAL " or " NCLOB " in DataTypeFactory and updated condition checks in UnknownType and ColumnSnapshotGenerator
disabled gauge metric publishing for wavefront if not publish
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` to set and set ` springCloudSelectorHandle ` in ` ShenyuClientRegisterSpring
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable the registration of sensor listener with specified parameters
added exception handling and logging for SocketException and full URI tests in SelectChannelServerSslTest . java to ensure graceful closure of SSL connections to handle
camel - 14284 : camel - itest - add support for camel - itest - camel - ignite to run on all platform .
added a check for zero lines in the result set and modified the logic for determining if the result set is reached
pdfbox - 4892 : do n ' t throw exception , just return false
added tests for setting display hdr capabilities and exception handling in ShadowDisplay to ensure proper functionality and error management of display hardware capabilities
added a finally block to clear the classLoader variable to ensure proper resource management and prevent potential memory leaks
improved error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to enhance clarity of semantic exceptions and implement a custom
added a default constructor to the Message class to initialize the Message class properly
make writeobject and writearray serializable if implementSerializableDirectly
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and improved BigDecimal conversion to ensure precision and scale enforcement during decimal conversion to enhance
replaced GZIPOutputStream with an OutputStream based on the response ' s committed status to ensure proper handling of GZIP compression when the response is already
wwAuthenticate rename to authenticateheader to improve clarity
simonstewart : remove some dead code that break the build
added a method to retrieve the thread group name from the thread ' s thread group to ensure proper handling of thread group status during thread execution
added logging functionality and improved method formatting in MethodInvocationPrivilegeEvaluator . java to enhance debugging capabilities and maintain code consistency
updated package and logger reference in DmozParser . java to align the package structure with the new tool organization
removed unused imports from ` ChainingRegisteredServiceDelegatedAuthenticationPolicy . java ` to clean up the code and improve readability
fix migration from iso to db
[ hotfix ] [ test ] remove duplicate handler registration in sigint
[ hotfix ] fix checkstyle violation in nodetool
update test to use spring boot 3.0 . 0
add miss @ override to fix javadoc warning
planning : remove deprecate planningentityselector # resetinitializedplanningentities
added build time information to the ArtifactInfo builder and updated related classes to include it to enhance tracking of artifact build time for better metadata management
updated the handling of fields in GroupByOperator to use declared fields instead of generic fields to improve type safety and clarity in field calculations
added null checks before adding block appearance and transaction to prevent potential NullPointerExceptions during execution
added a new currency pair ` CNC _ BTC ` and its corresponding currency pair definition to support additional currency functionalities in the trading system
updated skewAllowance to a default value of 15 and refactored related classes to utilize CasConfigurationProperties for skew allowance management
added sorting functionality for songs by name in SongListActivity and Utils classes to enhance user experience by providing a consistent sorting option
added a method to read and convert the request body to a byte array to improve request handling for better data transfer efficiency
create legacybaseblockwrapper for backwards compatibility
refactor snapshot retrieval logic in IcebergBranchExec . java to improve clarity and handle tag existence more gracefully to enhance error handling for branch
replaced ` newArrayList ` with ` Collections . singletonList ` for setting external groups whitelist to simplify code and improve readability
ray trace shader now use the shader resource for the bouncing .
updated password change validation logic in IdentityProviderEndpoints . java to ensure proper handling of password change requirements based on payload type
added functionality to remove uninitialized constructors from the notInitializedInConstructors collection
modify the error handling in JdbcExecutor to differentiate between closed and closed connections to provide clearer error messages related to SQL execution issues
added a new method ` testRequiredBody ` to validate the presence of a user data endpoint in the Spring MVC client to ensure that the necessary body
updated regex patterns for user and password patterns in CredentialInjector . java to ensure correct parsing of user and password in pattern matching
added a new menu item " Item4 " and a new key binding for the enter key in ActionListenerCalledTwiceTest . java to enhance
updated print statements to include the query class name and modified test assertion logic to check for produced results to enhance debugging capabilities by providing more context about the
truffle - dsl : fix npe in simplenode . equals ( )
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the class from other packages
updated the document retrieval logic in MoreLikeThis . java to use getDocCount ( fieldName ) and added a new test case in TestMore
refactor code to improve readability and maintainability of the quest condition handling logic
[ hotfix ] let networkbufferpooltest extend from testlogger .
consolidated multiple query additions into a single query statement to improve code readability and maintainability
add substitution for unsafe get long from object receiver .
replaced the representation of " ARAST " with " EET " for " Asia / Amman " across multiple language files to ensure consistent
updated the id value from 90000010 to 90000011 to reflect the new version of the deprecated feature
hhh - 1978 - fix regression in session . lock ( ) when use jdbc
fix link with empty or null suffix in external file download
set apple . laf . usescreenmenubar to true for macosx
integration test : add piecewiseintegration test
fix recent animation not get complete sometimes when use 3p launcher .
updated the modWhiteListPattern assignment in HiveConf . java and added a new test case in TestJdbcWithSQLAuthorization . java to
remove duplicate invalid class entry
update mobileinput to use player . team ( ) instead of team . sharded .
updated the domain configuration in CookieImplementationTest . java to use domain helper to improve flexibility in cookie domain management
added nullable validation logic in multiple classes to ensure that non - null values are handled correctly based on the validation criteria
chore ( regen ) : update copyright year to match last edit
refactor CustomCollectionTest and CompositeIdRouter for improved query handling and constant usage to enhance code readability and maintainability while ensuring
added snapshot handling and scratch data management in ` ExecutablePreparedStatementBase ` and updated tests in ` PostgreSQLIntegrationTest ` to enhance data
updated conditional checks and formatting in DefaultServlet . java to ensure accurate validation of cache size and improve code readability
fix drag - and - drop of bib section in the tabbed pane ( # 2499 )
updated description creation method in ExecutionUnitRunner and adjusted test assertions in CucumberTest to improve clarity of descriptions and correct expected values in
[ hotfix ] [ core ] fix checkstyle violation in commandlineutils
removed public access modifier from methods in TimeUtils class to restrict access to these methods for better encapsulation
added a method to determine if the current class indicates a security frame or injected invoker to improve compatibility with different Java versions and enhance test accuracy
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with all image formats
fix nativeimagedebuginfoprovider for host method
added icon loading functionality to ` Data ` and updated ` ClassDisplayed ` initialization in ` DataTableTopComponent ` to enhance visual accessibility by
refactor substring extraction logic in CounterRequestAggregation . java to handle cases where the last part of the request name is not present to improve robustness by
updated the ` FindAndReplace ` recipe to tolerate dollar signs by using a specific replacement string to ensure correct handling of dollar signs in
fix npe in smack packet debugger when connection be null .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to the ` IO ` class for copying files from a source directory to a destination directory to streamline
added exception handling for unknown datum classes in JacksonUtils to improve error reporting for unknown datum types
refactor ABI retrieval logic in DefaultJavaLibraryBuilder to improve clarity and maintainability of ABI dependency handling
simplified height calculation in SelectBox to improve code readability and maintainability
normalize database and table names in ObjectStore . java to ensure consistent formatting for database and table names during processing
added handling for Oracle database type in DbSqlSession to ensure a default schema is used when the database type is " postgres " or " oracle
removed the logout logic in HomeFragment . java to simplify the activity completion process by directly calling ` getActivity ( ) . finish ( ) ` to avoid unnecessary
[ hotfix ] [ test ] fix test instability
fix npe in fastimporthaction when no toolkit be select
updated managed bean check to use a boolean variable to improve clarity and maintainability of managed bean management logic
rename iexecutionattributesdialect to iexecutionattributedialect ( thanks to robert )
clear the metadata object in AlterTest . java to ensure proper resource management and prevent memory leaks
fix nullpointerexception when parse time
added null check for measurement before continuing in TabletInsertionDataContainer . java and introduced DisruptorQueueExceptionHandler . java with custom exception handling
deleted the Session2Token . java file to the class is no longer needed in the project
remove volume from db if we fail to create a volume from the secondary storage
added Install method to SystemShortcut and integrated it into PopupDataProvider to enable instant app functionality in the launcher
added null authority population functionality to LdapAuthenticationProvider to enhance security by preventing exceptions when retrieving user roles
add fallback to default version 2.5 . 1 that may have issues building Android .
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to improve clarity and consistency in method usage
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and improved the handling of live documents to enhance
fix for npe in jmespath when matchnumber = = null
updated import statements in AuthorizeTag . java and added a null check for authority lists in AuthorizeTag . java to enhance code clarity and
refactor assertions in DefaultLogoutManagerTests and DefaultSingleLogoutServiceLogoutUrlBuilderTests for consistency and clarity to improve code readability and
server : fix wrong error message for unsupported vm snapshot memory option ( # 5978 )
updated configuration handling in RobolectricTestRunner to merge class and method configurations to ensure correct merging of configuration between classes and methods in Robo
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more appropriate socket connector for improved connection handling
added a method to compare partial partition keys and updated partition key checks in HiveAlterHandler . java to improve partition key validation logic and ensure accurate
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to enable the display of icons in text headers
updated the conditional check for component activation to ensure correct evaluation of the component activation logic
replaced SharedBlockingCallback with Callback in StandardDeployer and StandardUndeployer , and updated method names for clarity to improve code readability
added workspace listener to PreviewControllerImpl to manage workspace updates during preview lifecycle events
added a check for non - VM anonymous classes in ReflectionFactory and modified the class name matching logic in ReflectUtil to ensure proper handling of VM anonymous classes
refactor TransportHelper to improve code readability to enhance maintainability and reduce complexity
updated file path formatting in CatalinaAcegiUserRealm . java to enhance readability and maintainability of the code
updated logging statements in AmbariServer . java to clarify the initialization process of the server and agent components
added null checks for initialization and modify nodes in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions during node processing
refactor ` run ` and ` invokeHDFSClientRunnable ` methods to accept a ` FileSystem ` parameter and improve user handling logic to en
added a check to ensure the background manager is not attached before attaching it to avoid potential memory leaks
set the current tab in AllAppsTabbed . java and adjust child dimensions in PagedView . java and adjust alpha calculation in Workspace . java to
added null URL validation in BaseDataSource and a corresponding test case in SimpleDataSourceTest to ensure proper error handling for invalid URLs and validate functionality
added JRE check for JRE 8 and 11 in PebbleModuleTest . java and refactored the construction of PebbleTemplateEngine to improve
added a new ` EditNameDialog ` to handle directory creation in ` FileDisplayActivity ` to improve user experience by providing a clear directory name
implemented the toggle bar border functionality in multiple chart activities to enable users to toggle between bar borders in the chart
updated SSL URI and host from " okcoin . com " to " okex . com " in OkCoinExchange . java to align with the new
jbrules - 2054 : add support for naturalselectorscore to acceptedforager test and fix a couple of test failure
refactor file handling to use ByteReadableByteChannel instead of FileChannel for improved efficiency to enhance performance and reduce resource consumption
refactor ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and update related logic to improve code clarity and
rename ` MockHandler ` to ` MockHandlerImpl ` and update related imports and references to improve clarity and align with the new package structure
do n ' t register proxy serializerspecification type if they do n ' t exist
added support for watching heap limits in QuickstepProcessInitializer based on debug device to enhance performance monitoring during development and troubleshooting
refactor sumWithCompensation logic for clarity to improve code readability and maintainability by reducing redundancy
do n ' t re - throw log4j2 exception in abstractloadbundlegestest if the test fail
added a null check for top - level deletion before serialization in PrecompactedRow . java to ensure proper handling of data output buffer during serialization
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added InvalidRenderIntentTest . java to improve code
ensure that meterregistry be clean up when stop ( ) be call
[ 3.0 ] set log level to info when config center be not specify ( # 4078 )
added tests for certificate generation to ensure proper exception handling for invalid certificate inputs
fix issue with simple language binary expression with ambiguous binary operator
removed redundant code in ` EditorActivity . java ` and added focus change handling in ` IDEEditor . java ` to streamline tab selection handling and ensure
add user . name to log message when open fail
updated file paths and scaling factor in SkeletonModelGpuSkinningTest . java , modified mesh name retrieval in OgreXmlLoader . java , and
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature for better usability
marked classes as deprecated to indicate that these classes are outdated and should not be used
added functionality to generate and store declaration files in a specified directory to enhance the transpiler ' s flexibility by allowing users to specify
[ flink - 20536 ] [ kinesis ] fix default fetch timeout for kinesis stream
added . html file extension to the timestamp parameter in StreamingDataflowWorker . java to ensure proper HTML representation of the timestamp
updated the default value of METASTORESERVERMAXThreads from 100000 to 1000 to increase the maximum number of threads for the metastore server
changed the return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate if the snapshot was changed
updated shadow radius parameter in SwipeUpAnimationLogic . java to improve clarity by using a more descriptive variable name
added a new test method ` chainNestingAndAggregation ` in ` ChainParserTests ` to verify the functionality of sending and receiving messages with a specified correlation
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure tests accurately reflect
fix polyglotcontextimpl # getsource ( ) should check for interactive rather than internal .
updated condition to check for null or equal instead of null to ensure accurate comparison of cached file paths
added DisplayController import and modified WindowManagerProxy instance retrieval to enhance functionality by integrating DisplayController into the preview rendering process
updated tooltip text logic for root directory in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent user interface behavior across different root directories
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize ( ) ` to
[ api ] change return type of ` ` recognise ( inputstream stream ) ' ' to ` ` list < captionobject > ' ' ( #
add some extra test for factory expression in jpasqlbase
removed conditional logic for drag index in FreeformFinSetConfig . java to streamline drag handling and improve code clarity
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest release of the software
improve error message when constant canot be set
updated error messages to use platform - specific line separators to ensure consistent formatting across different operating systems
marked a method as deprecated to indicate that the method should no longer be used in favor of an alternative implementation
refactor unsafe registration logic in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to use platform - specific registrations to improve code maintainability and
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancerArgs
change the value of mCenterPagesVertically from true to false to adjust the layout behavior to improve user interface responsiveness
updated migrationInfo . doneProcessing ( ) calls in MigrationRequestOperation . java to ensure proper handling of migration results
[ mqtt . konnected ] use ` ` baseurl ' ' config property instead of ` ` ipaddress ' ' ( #
updated WSFederationClaimsReleasePolicy to utilize a list of resolved attributes instead of a single object to enhance flexibility in attribute management
modified database table creation and query processing in TestJdbcWithMiniLlap . java and added database configuration in LlapBaseInputFormat . java to en
added a new test case in CaseExpressionTest to handle SQL case expressions with brackets to ensure correct parsing and deparsing of CASE expressions within complex expressions
added copy mode functionality in ConsoleActivity . java to handle mouse events specifically for mouse interactions
updated XML output handling in TestCommand . java to use DocumentBuilder and Transformer classes to improve XML output formatting and ensure proper resource management
camel - 16400 : camel - core - optimize list aggregation to reduce object allocation .
( chore ) camel - base - engine : move creation of exception message from exchangehelper to camelexchangeexception
- move basicconfigurator to classic so it can be use with junit
[ fix ] type qualifier dataflow analysis : do n ' t ignore phi node
remove unused import to fix build
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with tracing and argument handling
renamed multiple classes related to box and whisker calculations to improve clarity and consistency in naming conventions
[ hotfix ] migrate readablewritableconfigurationtest to junit 5
None
changed access modifiers of the singleton IndexFileNameFilter to private to enhance encapsulation and restrict instantiation
refactor test cases in IfStatementTest . java to improve plugin definition handling and simplify equality checks to enhance code clarity and maintainability
changed the method used to retrieve the table header row from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` to ensure the correct header
replaced the static method ` nullSafe ` with a direct method call to ` nullSafe ` in the ` GsonBuilder ` for registering the type adapter
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of items in the distribution
added a new class EXIFReader to handle EXIF metadata processing to provide functionality for reading and processing specific EXIF files in the upload process
set default to none for unknown unit in cloudwatchmeterregistry
[ drools - 4892 ] applypmmlmodelcommand should apply parameter type to data object ( # 4892 )
improve error message in fluentprotocol to be more helpful
added a check to return early if the bubble bar visibility is not enabled to optimize performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 46478 ] aarch64 : do not swallow branchtargetoutofboundsexception in emit LabelOffsets .
added a try - finally block around the initialization of JDK log manager in ` JDKXRLogger . java ` to ensure that the log manager is
added a new method ` find ( Class < Ticket > ticketClass ) ` to ` TicketCatalog ` and modified logging in ` Default
refactor SSL connection parameters and improve readability in TestSSL . java to enhance code clarity and maintainability by standardizing string concatenation
[ hotfix ] [ runtime ] fix synchronization in sort - shuffle result partition
( chore ) camel - jms : use non - deprecated constructors instead of empty class
updated the ` queryAllPluginHandlesByPluginId ` method to include a ` type ` parameter and modified sorting logic in the ` PluginHandle
added ` start ( ) ` method to ` DefaultSpanCreator ` and modified span creation in ` SleuthAdvisorConfig ` to ensure consistent behavior
added support for customizable GLK view drawable formats in IOSApplicationConfiguration and IOSGraphics to enhance flexibility by allowing customizable
replaced direct login attempts with a reusable attempt method in LoginIT . java to improve code readability and maintainability by reducing duplication
fix ( pytorch ) : add check for real ( )
removed interruption check from synchronization statistics and replaced lock name retrieval with a loop that continues until the lock name is retrieved to simplify the loop structure and
refactor implementation methods in ShadowPicker and Implements classes to improve code clarity and maintainability
refactor HttpClientOptions creation into a separate method for configuration to improve code readability and maintainability by reducing duplication
added handling for DynamicArray in DynamicStruct . java and improved type resolution in SolidityFunctionWrapper . java to ensure proper handling of dynamic array types
updated text alignment property retrieval to include a default value of true to ensure consistent font size and alignment behavior
added constructor overloads for CopyStep to support recursive directory traversal to enhance flexibility in copying functionality
fixed - rsemaphore . addpermits ( ) and releasepermits ( ) method do n ' t call after acquire ( ) . #
camel - core - fix fail test on window
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code organization
changed List < String > to List < ByteString > for multiple methods in WitnessScheduleStore . java to utilize ByteString instead of String to improve data
added a check for non - empty resultsMeta before printing results to avoid printing empty results
refactor ConcurrentLinkedQueue to improve item removal logic and add a new class for testing memory leak scenarios to enhance reliability of linked queue
batch encode ( ) and batchencode ( ) method add possibility to add token to token list
[ hotfix ] [ runtime ] use collections . ncopy instead of manual list creation
update chunk data handling in LoadSingleTsFileNode to include data size to ensure accurate chunk metadata is added to alignd chunk data
added session storage context handling and entry actions to the DuoSecurity multifactor webflow configurer to enhance session management for better user experience
add a disabled unit test for schema validation in TestJspDocumentParser . java
added a default constructor to TypeAdapter and updated annotations in Java17RecordTest and ReflectionAccessTest for compatibility with Java 17 to address deprecation warnings to
refactor event dispatching and kill handling in Debugger . java and introduce a new KillException in SuspendedEvent . java to improve code cl
refactor AntPathRequestMatcher for improved clarity to enhance maintainability and readability of the code
[ ds - 3952 ] remove null parameter from createresourcepolicy method .
added null check before releasing the deflater entry and replaced manual release calls with a null check before releasing to avoid potential NullPointerException
added the @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
updated the method to normalize Unicode characters in the CheckSum computation to ensure consistent compliance with NFC standards for checksum validation
refactor command handling and add null checks for completer and description generation to improve code robustness and prevent potential NullPointerExceptions
changed ` keyListener ` to be ` final ` in ` BasicProfilerState . java ` and added multiple ` @ Override ` annotations in ` BaseApp
replaced the generic type ` T ` with ` DBObject ` in ` MongoTemplate ` and added a new test for JSON serialization in ` MongoTemplateTests
[ core ] fix issue with multiple proxy client ip in requestutils
changed return type of getJobArgs methods from String to ObjectBuilder and updated method calls accordingly to improve type safety and consistency in the codebase
refactor CookieManagerTest and UnmodifiableMaps to improve host address retrieval and logging to enhance code reliability and clarity in host address
refactor glyph wrapping logic in GlyphLayout and update BitmapFontTest with a new test case to improve readability and ensure correct text formatting to enhance
added methods to pause or resuming splits in ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReaderBase ` to ensure that
added a new configuration variable for script operator ID in HiveConf and updated ScriptOperator to use it to ensure consistent environment variable management during script execution
refactor ` getListedTermCounts ` method to utilize streams for sorting and retrieving term counts to improve performance and readability by lever
added a new file ` UseSeparateStepSizeAction . java ` to implement a new action for JOGL step size settings to enhance user
changed member variables in FileMenuFilter to be final and added filtering logic for unlock actions to enhance immutability and ensure only relevant files
replaced LinkedList with ArrayList for regionServerSplits in RoundRobinTableInputFormat . java and updated related test cases in TestTableSplit . java
updated header values in HttpClientRequestAdapter to " 0 " and " 1 " instead of " false " and " true " to ensure consistency in header representation
pdfbox - 4892 : use ioutils . closequietly instead of manual null check
added fullscreen handling and improved method implementations in GwtGraphics and GwtApplication to enhance user experience by ensuring fullscreen mode is properly managed
updated ` LoadingCache ` to use ` URI ` instead of ` String ` for managing URIs and modified the ` normalizeResource ` method to
add unit tests for SoulApacheDubboClientConfiguration in a new file SoulApacheDubboClientConfigurationTest .
updated file path resolution in SkinLoader by replacing Gdx . files . internal with a direct call to resolve for asset management to improve code clarity
added trace logging for attributes in ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCacheLoader to
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in PlayerApiServlet , BrowseHandler , and PlayHandler classes to
updated package declaration for clarity to improve code readability and maintainability
fix : do n ' t report redundant dereferences in redundant comparison
use defaulthttpdatasource for backwards compatibility
added a configuration property for the maximum number of prepared statements cached per database connection to enhance flexibility in managing database connection performance
change return type of set ( ) method from WritableConfig to Configuration to improve flexibility in configuration handling
added a method to check for command errors in AutoScalingHandler to improve error handling for command operations
refactor CombinedDataset class to improve code readability and maintainability
updated variable name from ' buf ' to ' b ' for consistency to improve code readability and maintainability
added methods to remove cryptography restrictions in Utilities . java to enhance security by managing cryptographic permissions effectively
fix entity not be able to place when cancel .
added a test for long text transform in TextVisualRegressionTest . java to ensure proper functionality of page margin calculations
added a null check for vContext and removed redundant variable assignments to streamline context handling to improve code efficiency and reduce redundancy
fix speed unit in walon
hbase - 27420 disable metric user - aggregates by default
added isEmpty ( ) method to JsonObject and corresponding test in JsonObjectTest to provide a way to check if the JsonObject is empty
replaced instance variables mUserPresent , mVisible , and mAttached with new boolean variables mUserPresent , mVisible , and mAttached to streamline
refactor multiple classes related to HTTP requests and responses to improve code organization and maintainability
zadd ( ) should pass params to zadd , not just the score
[ ds - 3952 ] fix compilation error in test code
rename test to reflect that it pass
added a method to retrieve an optional TargetNode and updated the logic for handling target parameters in VersionedTargetGraphBuilder to improve code clarity
updated time zone constants in TimeZoneProvider . java to improve accuracy of time zone validations
updated the return statement in EscherBlipRecord . java and added a new test class TestOLE2Embedding . java to ensure correct handling of picture
initialize variables ' row ' and ' column ' in JSONParser . java to correct default values to ensure proper parsing behavior
refactor type matching logic to use a regex pattern instead of a fully qualified match to improve type matching flexibility and maintainability
updated DETAIL _ THUMB _ HEIGHT and added trailer playback logic in BaseItemDetailsFragment . java to enhance functionality for playback
added a method to remove glyph information from cache based on long value and pointer conditions to improve cache management by allowing removal of glyph information when necessary
fix : terminateallbehavior should record end of scope execution
camel - 16462 : camel - jaxb - allow to specify awareness of xml namespace .
updated the URL in the test from " http : / / www . abc1234 . org " to " https : / / abc1234 . org "
added option to reset preference to default
hbase - 25836 thriftmetrics should be protect so that it can be subclass
removed deprecated channel ` CHANNEL _ MANUAL _ FAN _ SPEED ` and its references from ` DanfossAirUnitHandler . java ` to
use hamcrest assertion instead of junit in examples / integrations / neo4j / neo4j - neo4j
removed duplicate code for stopping expansionHelper to streamline code by eliminating redundancy
added null and hash code implementations in PartitionFactory and a null index check in PartitionPanel to ensure proper handling of partition objects to avoid potential NullPointerExceptions
server : fix disk size not be set in vm custom params
added conditional logic to display suggested apps based on user preferences to enhance visibility based on user preferences for better user experience
[ geos - 10678 ] check for invalid cr when parse bbox .
added methods to validate parameter values in LibrustzcashParam . java and updated ivk [ 31 in LibrustzcashTest . java
deprecate ithrowableentity since it be no longer use
added randomness to the x and y coordinates generated by Math . random ( ) to enhance randomnessness of the NodeData implementation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should _ fail _
refactor JavacStep to use try - with - resources for initialization of Javac . Invocation and firstOrderStdout and firstOrderStderr variables to ensure
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the release version of the software
added a condition to check for ITEM _ TYPE _ DEEP _ SHORTCUT in LoaderCursor . java to enhance functionality to support deep shortcuts in the
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for different data types and columns
changed access modifiers from private to protected for BooleanWeight and DisjunctionMaxWeight classes to allow subclasses to access these classes for extensibility
added a boolean flag to control proxy response code usage in HttpURLConnection to ensure proper handling of NTLM proxy connections
aarch64 : use aarch64 . sp instead of aarch64 . zr
server : do n ' t count domr and ssvm usage when host be not up to date
added a null check for the max score in JSONResponseWriter to ensure that the response writer only includes documents with a valid score
updated audio recording from 22050 to 44100 in AudioRecorderTest . java to ensure compatibility with audio - specific configurations
update calculation of newOriginX to include scaling factors to ensure correct origin positioning according to scaling factors
updated null and empty checks for the Druid data source and changed the default interval list to DruidStorageHandlerUtils . DEFAULT _ INTERVAL to ensure
added ORIGINAL _ TYPE ( " Original Type " ) to CustomProperty . java and updated regex pattern in Pattern . java to enhance
added a static method to create an instance of Index with specified parent and data to facilitate the creation of Index objects from raw data
simplified the return statement for boundary period checks to improve code readability and maintainability
updated schema compatibility handling by introducing an index and improving test coverage for schema compatibility to ensure correct incompatibility between reader and writer types to en
updated QueryUtils to handle entity paths and persistent attribute types more efficiently to improve query accuracy and maintainability for different entity relationships
refactor TestSpanHandler to synchronize access to the spans list and improve synchronization to enhance thread safety and prevent potential issues with concurrent modifications
use wildcard instead of object for message parameter
updated exception handling in ViewContextImpl . java to use InvocationTargetException instead of Exception for improved error logging to enhance error reporting and provide more in
refactor OAuth2AccessTokenEntity class implementation to improve code readability and maintainability
updated error messages to clarify service request rejection status to improve user understanding of service operations
added iOS resource files for Default - 1024w - 1366h and Default - 1024w - 1366h in GdxSetup . java to support
replaced MockAnalyzer with ConcurrentMergeScheduler in TestSearcherManager . java to enhance the merge scheduler configuration to improve performance efficiency
added a condition to check if the session state is 0 and modified the handling of list items in GenericUDTFInline . java to improve session state management
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ticket # 2495 : preventing default key from long press in the spreadsheet
fix osgi test failure and resource leak
use connectiontimeout instead of elapsedtimems when calculate timeout
move create voice - component . xml to a non - packaged resource directory and remove it
updated file path handling in Compat . java and added directory checks in FileOpener . java to improve file validation and ensure robust file processing
change return type of row ( ) method from Cell < T > to void to simplify method signature and improve code clarity
check that p2p - port be not set multiple than zero in cli
added a new boolean field ` _ isNullMask ` and its getter / setter in ` WebSocketClient . java ` , and updated the connection initialization to use
modified the return type of genUDTFPlan to return a Pair < RelNode , RowResolver > instead of a RelNode to improve the handling of
added counters for bucketed preferred and non - preferred node selection counts to enhance monitoring and management of node selection states
added a new class Person with a method to set and get the name to facilitate the management of a person ' s name in the application
added a boolean flag ` hasOwnerPtr ` to track the presence of an owner pointer and modified its execution logic to ensure proper handling of the owner pointer
added a clock feature to the PlaybackOverlayFragment to enhance user experience by providing a visual transition effect
remove duplicate call to world . updatecomparatoroutputlevel .
changed the visibility of the IMPL variable from private static final to private static final and modified exception handling for loading SegmentReader class to improve encapsulation and
updated cell event firing to run on the Event Dispatch Thread using SwingUtilities to ensure UI updates occur on the Event Dispatch Thread for better responsiveness
refactor ` INET _ ADDRESS _ ADAPTER ` and ` COLLECTION _ TYPE _ ADAPTER ` to use ` CollectionTypeAdapter `
added single - element value handling and tests for double , long , boolean , and string values in the Series class to ensure proper exception handling for
updated the argument for the audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated boundary conditions in GeoRelationUtils and improved GeoRect calculations in GeoUtils to enhance accuracy of geometric calculations and ensure proper boundary
get disk offering by service offering id , not by id
added cleanup method to HazelcastTest to ensure proper resource management after tests are executed
added checks for NoSuchPadding exceptions in BlockCipherTest . java to ensure proper handling of cipher modes with or without padding to avoid errors during execution
[ hotfix ] [ q ] add q . log output to qfileclient
fix aop injection issue with type argument
initialize currentconnectionaddress if it ' s not already set
replaced manual addition of demand with MathUtils . cappedAdd to simplify code and improve maintainability
refactor file handling to use try - with - resources for ImageOutputStream to ensure proper resource management and avoid potential resource leaks
refactor search functionality by replacing TvApp with BaseActivity and EnhancedBrowseFragment to streamline search handling and improve code maintainability
refactored the ` toString ` method in ` GrepOptions ` and ` SchemaCrawlerCommandLine ` for improved readability to enhance
http : / / issues . apache . org / jira / browse / amq - 6037 - use osgi service registry for
added a PersonRepository field to the RepositoryIndexCreationIntegrationTests class to enable dependency injection for repository management
changed the exception type from Exception to InterruptedException in UIServer . java to ensure proper handling of interruptions during the stop method
fix switch / cases indentation see camel - 14540
refactor mouse event handling in ThemeSelector . java to use MouseMotionListener for better responsiveness to improve code readability and maintainability
added a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` and refactored existing fields in ` AbstractMinMulticastFlowControl ` to
added alignment and vertical alignment parameters to the editStringAt method in IOSNative . java to enhance functionality by providing additional text alignment options
throw an illegalargumentexception instead of an exception if the modelfile be null
added checks for distinct queries and modified query generation logic in ClusterIntegrationTestUtils and QueryGenerator classes to ensure proper handling of distinct queries and improve query
[ gr - 31397 ] jni implementation : improve jninativeLinkage performance .
fix checkstyle issue
added null check for children in PartitionPruner . java to prevent potential NullPointerException when accessing children elements
added tokenPosition and currentPosition variables , modified the return statement in MessagePackParser , and added assertions in MessagePackParserTest to ensure proper
added locale management to AbstractSolrMorphlineTestBase to ensure default locale is restored after each test execution
simplified status bar size calculation for different Android versions to enhance code readability and maintainability by reducing complexity
add unit tests for the MetricsReporter class to ensure proper metric registration and handling in the application
( chore ) camel - mock : remove unused field
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
[ hotfix ] [ test ] make kafka test more stable
updated DSAParameterGenerator to handle non - block prime strengths and simplified BigInteger calculations to improve clarity and correctness of the algorithm ' s behavior
added FQDN configuration to LLAP daemon and refactored address handling in LlapTaskCommunicator and LlapInputFormat to improve
fix flaky test in clientoutofmemoryhandlertest
updated ObjectId setting to use a calculated counter for shape IDs to ensure consistent identification of shape types across the application
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the distinct query functionality in the database to
updated multiple Java files related to the search functionality to improve code organization and maintainability
fix : remove unused extensionadapter from managedkubernetesclient
updated subtitle and info row logic in DetailsDescriptionPresenter and Utils classes to use a new utility method to improve code readability and maintainability by
updated JUnit imports and annotations to use the Jupiter API for enhanced test lifecycle management
do n ' t throw exception when summary generation fails
consolidated pool reset calls into single calls to improve code readability and maintainability
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated the ` ShadowWindowManagerGlobal ` to handle ` WindowSessionDelegateV2 ` for API level TIRAMISU and added a new ` Window
fix forceaddscheme ( ) for non - standard port
added support for MSSQLDatabase in foreign key constraint generation to enhance compatibility with MSSQL database handling
hbase - 20536 fix checkstyle violation in hbase - replication
[ 1.19 . x ] fix filter item disappear when switch pipe .
alexeibarantselenium : do n ' t hardcode debug mode by default
[ flink - 20536 ] [ table - planner - blink ] [ hive ] fix hivelookup ] fix the bug of hivelookupjoin
add javadocs and deprecate null check in some player .
updated SCHEMANAME construction in SequenceSnapshotGenerator to use CatalogAndSchema to customize the schema name for improved clarity and flexibility
updated color calculations and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugStarter to enhance color accuracy and improve testing accuracy
fixed - java . lang . classcastexception : java . lang . classcastexception : java . lang . classcastexception : java .
added base core URL replacement and conditional addition of it to statistic year cores to ensure that only relevant Solr cores are recorded in the statistics year system
updated method names and logic in TaskActionController , TaskAdapter , IconRecentsView , and TaskActionController to improve clarity and functionality
updated MorfologikFilter to use a dynamic dictionary resource instead of a hardcoded string to enhance flexibility and maintainability by allowing
updated sort option keys in GridFragment . java to improve clarity and consistency in sorting options
added imports for ViewKt and ListRow , and modified visibility logic for ListRow in CustomListRowPresenter . java to enhance visibility control for List
refactor client initialization in StressAction . java to use try - finally blocks to ensure proper cleanup to enhance resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability and maintainability
updated CatalogAndSchema , AbstractDb2Database , and CatalogComparator to use instanceof for DB2Database checks to enhance compatibility with DB2 database types
add support for jsr310 serialization
( chore ) camel - log4j : use slf4j instead of log4j in slf4j api
changed the type variable from TypeBearer to Type in PhiTypeResolver . java to ensure compatibility with updated type handling framework
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintain consistency
added a method ` getBuildTargetList ` in ` BuckConfig ` to retrieve a list of build targets based on a specified section or key
removed redundant initialization of idleStrategy in Ping . java to streamline code by eliminating unnecessary duplication
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile . java ` and updated log messages in ` FileSyncAdapter . java
removed redundant check for selection events in the ReportPanel class to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix the assignment of slot owner in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` that implements a recipe to remove calls to ` System . gc ( ) `
removed redundant calls to super ( ) in multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added a method to set the icon in ScaleImageLabel to ensure the correct UIID is used during scaling operations
updated variable name from ' foundEntry ' to ' update ' for clarity and consistency to improve code readability and maintainability
added support for the " - cp " argument alongside " - classpath " in the argument parsing logic to enhance command - line option handling for
svm : fix deprecation warning in avutil
set initialized variable to true to ensure proper initialization of the storage service
modified Test7196045 . java file to improve test coverage and maintainability
change the light ' s density and decay from 1.5 f to 1.0 f and from 0.9 f to 0.95 f to
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and updated ` OidcRedirectActionBuilder ` to utilize
# 208 - unique constraint ddl generation for globally _ quoted _ identifiers and globally _ unquoted _ identifiers do n ' t work for non -
added file sharing functionality for federated users in UsersAndGroupsSearchProvider and modified share type checks in EditShareFragment to enhance user experience by
added a method ` needsDocValues ` that always returns true in the ` TestBBoxStrategy ` class to ensure that document values are always available for processing
updated buffer alignment logic and introduced a new package - info . java file to improve clarity and maintainability of alignment error messages
added a method ` intForEach ` to ` Int2ObjectHashMap ` for processing integer values to enhance functionality by allowing null values to be
fix share scoreboard data even if global mapstorage be not use
change return type of count methods from Long to long in multiple repository classes to accommodate larger datasets and improve performance
refactor MTree snapshot creation logic to improve clarity and structure to enhance readability and maintainability of the code
updated the dot product calculation in VectorUtil . java and corresponding test cases in TestVectorUtil . java to improve accuracy in score calculations and ensure correctness of
added functionality to control the IREVERSIBLE _ THRESHOLD parameter in DynamicPropertiesStore and integrated it into Manager to enhance block verification
replaced the ` setLocale ( ) ` method with a call to ` Systems . setLocale ( ) ` in ` GpsMainActivity `
added a check for whether the database was created in the LauncherProvider class to ensure that the migration migration is not performed during the migration process
refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve readability and maintainability of the code
added a null check for the operating system architecture before setting ` is64Bit ` to ensure proper initialization of ` is64Bit ` to prevent potential null
added a check to ensure the current thread is the same before proceeding to avoid unnecessary execution when the thread ' s thread is the same
changed the visibility of the closeDatabase method from private to protected to restrict access to the method for better encapsulation
updated import statements and method calls to use ` ModelCompat . asSdk ` instead of ` apiclient . model . dto . BaseItem
added functionality to set node attributes from SVG elements to the document
added a try - catch block around the user configuration warning log statement to handle potential exceptions when parsing user configuration
modified the waitingForResult logic in CodenameOneActivity and AndroidImplementation to incorporate an extra check for " WaitForResult " from intent extras to
refactor constructors in ` HitQueue ` , ` SpanPositionQueue ` , and ` PriorityQueue ` to use a ` Supplier < T
added widget description display functionality in WidgetCell . java to enhance user feedback when the widget description is present
added a maximum attribute count limit to the attribute registration process to ensure that the application does not exceed the allowed number of registered attributes
update package and import in predicatestest . java to com . hazelcast . query . impl . predicates .
camel - 14284 : add case - insensitive option to allow camel - default header name to be lowercase .
modified InlineLayout and Breaker classes to improve boundary condition handling and break after logic to enhance code clarity and ensure correct processing of unbreakable
None
refactor setup to remove dependency on javassist for now
added a condition to check if associations are insert before the source to ensure correct column count is returned for insert scenarios
updated memory limit command in ` CmdModifierTest . java ` to use dynamic file path retrieval based on Docker container version to improve flexibility in memory limit
updated AbstractCxxDeps to use CxxDeps . EMPTY _ INSTANCE instead of CxxDeps . of ( ) and added EMPTY _ INSTANCE
added a HumanReadableException for null rule in JavaTestRule to improve error messaging when the specified source under test is not among its dependencies
add a mapping of mc version to a string - > icrossversionproxy
remove unnecessary check for negative index in StringUtils . java to simplify code and improve readability
increased timeout duration from 100ms to 500ms and increased sleep duration from 1000ms to 5000ms to improve test stability and allow more time for
refactor TaskOverlayFactoryGo to include AssistContentRequester for better dependency management to enhance code clarity and maintainability by utilizing a
updated the encoding of the witness address in VoteWitnessProcessor . java to ensure compatibility with 58 - bit address format
updated DefaultMethodRegressionTests to improve test coverage for method regression scenarios
[ hotfix ] [ runtime ] fix checkstyle violation in workloadmanagermxbean
align kafka test with new exception cause
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent potential memory leaks
added a ` clear ` method to ` ExceptionThrowingTaskletStub ` and multiple rollback test cases in ` FaultTolerantExceptionClasses
include beam - specific runner when generate config
updated applyTunerConfigs method signatures to include an extraProperties parameter to enhance functionality by allowing configuration addition with additional properties
added logic to check for in - progress instances of real - time segments before adding them to the listOfSegmentsToAdd list to ensure that only active real -
added a touchable check to prevent processing when the table is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to verify the support
throw a retryable exception if cache config for cache name have not be create yet
refactor module installation checks into a separate method for clarity to improve code readability and maintainability by reducing duplication
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance monitoring capabilities for component lifecycle management
added a conditional statement to check ` false ` before evaluating the ` inAppBrowser ` setting in ` LongClickableSpan . java ` to ensure that
replaced ` equals ` method calls with ` . equals ( ) ` for string comparisons in EspMilightHubDiscoveryService and EspM
updated the isReifiable check logic and added two new classes T6558559a and T6558559b to improve type safety and demonstrate
add some more debug info to help track down the position change
camel - kafka : properly shutdown the kafka executor
added example ( ) method to the Schema class to provide a way to retrieve example values
modified thread interruption logic and added a break statement in AgentRunner . java to improve robustness by ensuring proper handling of timeout conditions
removed the time column from both DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper cleanup of data source configurations
updated conditional logic for checking the length of shards to improve code readability and maintainability
replace linker provider retrieval with a call to CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription . java
added ' name ' property with getter and setter methods to JdbcAuthenticationProperties , JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties
improve error message when igv fail to start
phoenix - 1343 allow disable small scan for point lookup in query planning
added routeId to the returned filter string in RetryGatewayFilterFactory to include the routeId to enhance the clarity of the returned filter details
replaced repeated calls to ` redisplay ( ) ` with a single call to ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java
replaced ` onOverviewShown ` method implementations with ` DiscoveryBounce . showForOverviewIfNeeded ` for improved control flow to enhance user experience
refactor conditional checks for ` globalMinPackedValue ` and ` globalMaxPackedValue ` in ` CheckIndex . java ` and add a
updated the parameter in the publish method from true to updateLastState to ensure the state reflects the latest state changes
updated string concatenation syntax in MetastoreDirectSqlUtils . java to improve code readability and maintainability
added a null element to the exp list in SpliteratorCollisions . java to ensure the previous element is not null before adding a new one
implement webelement . gettext ( ) and webelement . exacttextcaseinsensitive ( ) for webelement .
removed redundant loops in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
no effective change - avoid set default fetch size for mysql and orm
camel - 7999 ignore closedchannelexception in httpservermultiplexchannelhandler
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization in QuickstepAppTransitionManagerImpl . java to support rounded corners support to ensure proper rounding behavior for window transitions
replaced ` mBackground ` with ` mBackgroundView ` and updated related methods in ` DesktopTaskView . java ` to improve clarity and
added instantiation of UpstreamCheckService and set properties directly to shenyuRegisterCenterConfig to ensure proper configuration settings for the UpstreamCheckService
changed log level from warn to debug for session logging in AbstractSession and AbstractSessionManager classes to improve logging granularity for better debugging and clarity
replace error logging with a direct return of locks to simplify the code and improve clarity
[ hotfix ] fix checkstyle violation in executionconfig
added a check for custom data before generating texture mipmaps to ensure texture array mipmaps are generated to avoid unnecessary mipmaps when using mipMaps
updated assertion strings to include single quotes around " xxxxx " to ensure consistency in test formatting
added selection management methods to the List class to enhance user experience by allowing selection behavior when no items are selected
removed a condition checking for an empty field vector count in LlapArrowBatchRecordReader . java to simplify the code by eliminating unnecessary checks
added file separator handling and improved logging messages in PolicyContext . java to enhance cross - platform compatibility and provide better debugging information during evaluation
replaced Set with List for flatQueries and expandQueries in FieldQuery . java to use a more appropriate data structure for storing queries
pdfbox - 4892 : fix typo find by codespell on fossies . org
camel - 20297 : camel - kafka should use a daemon thread to shutdown the kafka consumer
updated the assertNodeStateProvider method to include a freedisk string parameter and modified the instantiation of twoVals to include ignorableNodeValues to enhance
added functionality to delete a lock file in RocksdbMavenPomCache . java to ensure proper resource management and prevent potential memory leaks
updated the client port assignment in MiniZooKeeperCluster to use InetSocketAddress for better type safety to ensure proper handling of client port configuration
added a method to retrieve a response from the HTTP connection to improve error handling and logging for web service connection issues
updated the way segment tar URIs are handled by converting them to an array to improve code readability and maintainability
fix test break by change password
added a null check for the item ID in the EnhancedBrowseFragment and StdBrowseFragment to ensure that the item is not null before proceed
reduced the number of strings from 500 to 100 to optimize performance and reduce execution time
updated ByteArrayInStream initialization and removed hexToBytes method from WKBAttributeIO . java to streamline byte array handling and improve code clarity
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity regarding the purpose of the method ' s purpose
added a method to check if a transition is a direct substate and updated expectations in the AbstractStateMachine class to handle direct substates to enhance state
added checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation to enable join operations in the post join process
added a new test method for verifying PostgreSQL data handling in AdditionalPostgreSQLTest . java to ensure that the postgresql test is complete and
resolve : http : / / issues . apache . org / activemq / browse / amq - 5035 - make sure durable subscription be
[ hotfix ] fix typo in avaticadatabasemetadata
updated MongoDbConnectionPoolProperties to use String representations for lifeTime , idleTime , and maxWait instead of integer values to enhance readability and
remove unnecessary cast to mediaformatfactory
refactor FacetProcessor to improve filter handling and evaluation logic to enhance clarity and correctness of filter application process
added a timeout handler to the ShuffleHandler class to allow configurable idle state timeout behavior
replaced hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability by using a named constant
( chore ) camel - xpath : add deprecation warning and add log statement
fix broken link to data resource in javadoc
pmd : fix # 1751 cpd fail to tokenizer on backslash .
added a validation check for the presence of the " atlas " property in the map before processing its properties to ensure that the ' atlas ' property is correctly
camel - 14284 : camel - core - component property placeholder should be resolve once component start .
added a database closure in BlockchainTest . java and removed specific Kafka messages from KafkaTest . java to ensure proper resource management and avoid potential
refactor code to use a new method ` getLines ` for extracting lines from a literal to improve code readability and maintainability to enhance maintain
int - 167 fixed checkstyle violation of unused import
replaced ImmutableList . Builder with List for args and modified SQLBindings and SQLBindings classes to use unmodifiable lists to enhance immutability and
added support for identifying OpenJDK in the virtual machine detection logic
added keepAlive configuration to ReactorClient to manage network connections effectively
replaced string attribute names with constants from ShaderProgram to improve code readability and maintainability by centralizing attribute access
camel - 14284 : camel - core - optimize to reduce object allocation .
modified the handling of the account capsule retrieval in UnfreezeBalanceActuator . java to ensure a null check for the account capsule to avoid potential
prepare 3.8 . 1 alpha version for release
updated type return statements to use ` unannotatedType ( ) ` for ` t ` and ` WildcardType ` to ensure proper handling of annotated
refactored assertions and flushing manager initialization in StorageGroupProcessorTest . java to improve code clarity and maintainability to enhance maintainability and ensure
updated class names and import statements to reflect the current Jetty environment versions to ensure compatibility with the latest Jetty versions and improve code
added parameter ` waitbeforestart ` to control video timing before starting playback
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor to simplify the constructor by eliminating unnecessary parameters
updated import statements and refactored test method names in AccessorsTest . java for clarity to improve code readability and maintainability by
add a method to compile a method in the graalcompiler and expose the framemap in the lirgenerator
updated imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningContinuousIntegrationCondition to enhance
fix the boat not be able to place water . close # 153
updated the ` toString ( ) ` method in ` Directory ` and ` RAMDirectory ` classes to include a class name and hash code to improve clarity
simplified the check for experimental options by removing the ` allowExperimentalOptions ( ) ` method to improve code readability and maintainability
added new static methods for asserting paths in BDDAssertions . java to enhance assertion capabilities for Path and AssertDelegateTarget targets to improve code modularity
updated variable names and ports in ForwardedRequestCustomizer and ForwardedRequestCustomizerTest to improve clarity and consistency to enhance code readability
updated logging messages to provide clearer guidance on the absence of Kubernetes config files to enhance user guidance on how to manage Kubernetes
added file upload status handling and cancellation logic in UploadListActivity to improve file management and enhance user feedback during upload processes
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it for provider installation to streamline the provider installation
updated import statements and headers in StreamEnvironmentPostProcessor and StreamEnvironmentPostProcessorTests to use TraceMessageHeaders instead of Span to ensure compatibility with the latest
updated SelectFromDatabaseChangeLogStatement to use a computed column name instead of a hardcoded value to improve flexibility in the data retrieval process
hhh - 13550 postgresql 11 upgrade to support postgresql 11
ignore partition that do n ' t have data member . fix javadoc warning .
added checks for scheduler state and improved error handling in ExecutionScheduler classes to ensure proper scheduling behavior and provide clearer diagnostics when the scheduler is
updated InlineBox instantiation to use the text directly instead of converting it to a string to simplify the code and improve readability
refactor checkArgument calls for better readability to improve code clarity and maintainability
updated the staged rectangle slide end value from 383 to 500 to improve animation timing accuracy
add miss i18n support to waveinfo dialog
updated condition in BukkitMain . java to check for both plotArea and its owned plot to ensure KILL _ ROAD _ ITEMS to
added unit tests for enabling touch exploration state changes in ShadowAccessibilityManager to ensure correct behavior of TouchExplorationStateChangeListener
pdfbox - 5328 : fix arrayindexoutofboundsexception , a suggest by valerybokov
use testelement . getname ( ) instead of testelement . getpropertyasstring ( )
use poifs . create ( ) instead of poifsfilesystem . newinstance ( ) for test
added plot area retrieval logic to ensure correct plot positioning based on the specified argument
updated version regex pattern in TestWebHCatE2e . java to enhance version matching flexibility for better compatibility
updated the range check for ` count ` to allow zero to ensure that ` count ` is valid and avoids negative values
include clientid in consumer config if there be more then one thread use kafka
updated import statements and added error handling in JavacCompiler . java to improve clarity of error messages and ensure proper execution flow
ggb - 2118 do n ' t repaint the list immediately when the list be visible
fix checkstyle issue with if condition
added a method to check if an animation is finished based on its frame number to enhance animation control functionality
added a new test method for custom fav icon with line breaks in LoginMockMvcTests . java to ensure proper functionality of logo branding with line
added null check for otherUrl before comparing with empty string to prevent potential NullPointerException when otherUrl is null
bug fix : space should be replace with space , not comma
refactor ObjectHashSet implementation to improve performance and maintainability of the code
refactor null checks and simplify equality checks in DataUtilities . java to improve code readability and maintainability
fix mc - 12770 ( compare nbt data , allow for deletion of enchanted book )
add microprofile test for asyncresource ( # 4073 )
rename ` target - flat - headers . hmap ` and ` target - user - headers . hmap ` to ` target - user -
added error handling for send failures and improved logging format to enhance debugging capabilities and provide more informative error messages
replace ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` and introduce ` EMPTY _ LABEL ` in ` TaskItemView . java
added tests for retrieving partitions by names with multiple batches to ensure correct functionality and error handling in the HiveMetaStore client API
added a closing brace in FileListListAdapter . java to ensure proper syntax and prevent potential compilation issues
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OCFileListAdapter . java
update the index used for removing views in BubbleBarView to ensure the correct child view is removed from the layout
removed unnecessary imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline code by eliminating unused dependencies
change s3request . isexpired ( ) from true to false
fix jfxradiobutton skin crash when timeline be null
updated the condition for handling zero or one splits in DeweyNumber . java and added a test case in DeweyNumberTest . java to
modified the return statement in MwVolleyApi . java to remove " Category : " prefix and convert it to a string to ensure proper formatting of
corrected the spelling of " close " in the assertion to ensure consistency and accuracy in error reporting
fix npe in webapploader when classloader be null
removed duplicate code for collecting persistent fields in ` PersistentAttributeTransformer . java ` to streamline the code and improve maintainability
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to the ` org . apache . lucene . analysis ` package to verify the
write index update only if successful
corrected the package name from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix a threading issue with the chatwindowmanager
move system . touch ( ) to a static block in apiutil
updated the HgCmdLineInterface to use " - mardu " for the status command and removed the untrackedFiles method implementations to stream
camel - 14354 : camel - netty - optimize to reduce object allocation .
added a ` range ` parameter to several light - related fields in ` DirectionalLight ` , ` PointLight ` , and ` SpotLight `
updated width and height retrieval logic in X11GraphicsConfig . java and WGLGraphicsConfig . java to ensure a minimum value for width and height to
added toString ( ) methods for DelegatingSecurityContextCallable and DelegatingSecurityContextRunnable classes and corresponding tests to standardize string representation across callable and runnable implementations
added a new AnnoFilterTreeSet class to manage annotations to enhance class hierarchy by identifying inner classes and their methods
modify the logic for handling newLength in BytesColumnVector to ensure newLength is only multiply 2 when it is greater than Integer . MAX _ VALUE to
[ hotfix ] [ test ] fix write behind mapstore eviction test
changed the parameter type of ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI ` and `
[ giac ] add polyfunction . isequal ( polyfunction ) to compare polynomial function .
added null check for the table before retrieving column class to avoid potential NullPointerException when table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException when instantiating a custom class to ensure that the application fails gracefully
added methods to retrieve BuckConfig and modified DistBuildConfig to use DistBuildConfig instead of ConfigPathGetter to enhance flexibility in
show warn on double entry if double entry be enable
added JUnit Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a known issue
changed return type of doJoin methods from void to boolean and updated return logic in JoinTemplate and MergeJoinBatch classes to improve method clarity
added a method ` getAutodeps ( ) ` to the ` JavaLibraryDescription ` class to provide additional control over the autodeps functionality
modified intent creation and added FLAG _ ACTIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter . java to ensure proper handling of
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable pagination order checking for improved query performance
updated assertions in RepositoryConventionPluginTests to verify the URL of the first repository and its associated Maven repository to ensure correct retrieval of the correct Maven
openfire should be able to run multiple instance of pubsub node with the same affiliate .
improve error reporting in case of malformed jsp uri
change method visibility from private to public to allow access to the method from outside the class
added array handling and refactored the doUpdate method in CacheKey to improve object comparison logic and maintain code consistency
updated file type detection methods to use the default FileSystemProvider to enhance compatibility with Unix - like systems
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
updated virtual sensor callback handling in ShadowVirtualDeviceManager and ShadowVirtualDeviceManagerTest to improve code clarity and maintainability by using reflector
added a condition to check if the current context is not the same as the default context before execution in ` HttpSessionSecurityContextRepository ` to ensure that the
refactor loopback address retrieval logic in NetUtil . java to improve clarity and efficiency in loopback address selection
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and updated related buffer and inflater logic to improve code clarity and
added secure validation and updated key reference checks in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to
added a boolean flag to track the installation status of the icon change listener to ensure thread safety when adding or removing the action listener
added russian language support in the application
hhh - 15464 - fix second to nanosecond conversion for second duration
disable frame state verification during native image generation
added system property management in RobolectricTestRunnerTest and a teardown method in TestUtil to ensure proper system properties are cleared after tests to enhance resource
added system class addition to ViewClassLoader and corresponding assertions in ViewClassLoaderTest to ensure proper logging functionality and class loading behavior
added handling for " jar " packaging in ChangePackaging . java and implemented a test case in ChangePackagingTest . java to ensure correct removal
updated download method calls in FileDownloadViaHttpGetTest and FileDownloadViaProxyTest to use withExtension ( " txt " ) to ensure correct file extension
fix ( demo ) : clear buffer in demo
updated unit handling from default units to preferred units in JogService and Settings classes to improve clarity and functionality of unit management
updated DatePatternConverterTest to use UTC timezone for date formatting to improve accuracy in date calculations to ensure accurate date representation with adjusted savings time
removed redundant return statement to improve code readability and maintainability
updated error messages in FileSystem and added handling for UnknownHostException in DistributedFileSystem to provide clearer guidance on file URI formats and improve
use javafx timer to show track notification in one minute
( chore ) camel - ftp : fix test which randomly fail on slow ci server
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` to extend ` ConcurrentSkipListMap ` to improve performance and
log4j2 - 1343 add log . ignore ( throwable ignored ) method to javautillog
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for item ' s damage data to simplify code and improve readability
removed the cleanImage method call to ensure images are properly cleaned before rendering
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing directory mapping to enable support for unmapping files on the current JVM without
added null check for base color before instantiation in PdfCleanUpProcessor . java to avoid potential NullPointerException when ic is null
updated the expected value in the assertion from ' field1 ' to ' field1 _ s ' in QueryEqualityTest . java to ensure accurate comparison of
modified the ExtendedOperatingSystemMXBeanImpl class to enhance performance monitoring capabilities
added functionality to install left commands in the SideMenuBar to enhance user interaction by allowing actions to be added to the title area
added a new boolean variable ` advanceWindowed ` and conditionally calls ` setUpWindow ( ) ` in ` TweetActivity ` and ` UserProfile
added SybaseDatabase support in the DropPrimaryKeyGenerator to enhance compatibility with Sybase database handling
refactor Client class to improve code readability and maintainability
[ java ] : wait for leadership to become ready before send heartbeat .
replaced ` invalidate ( ) ` method with ` setCellLayoutPressedOrFocusedIcon ( ) ` and added ` shouldDelayChildPressedState ( ) `
added a return statement in NearCachedClientMapProxy . java to prevent further processing in the method
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
shutdown http server on exception
camel - 15836 - camel - aws2 - s3 : use more descriptive class name for producer , regen
[ hotfix ] fix webmonitor metric path
bug 10605 : fix 226 to 227 upgrade failure
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to handle password validation to ensure correct password handling
added maxEnergyLimit variable and updated its assignment from CommonParameter to maxEnergyLimit in VMActuator . java to ensure energy limit is accur
added maxInMemorySize property and its getter / setter methods to HttpClientProperties , and updated webClientPlugin to accept HttpClientProperties to allow configuration of in -
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
added new Cucumber test and step definitions classes to establish unit testing framework for Cucumber testing framework
updated TypeJsonUtils to handle JSON parsing errors to fallback to default values if parsing fails to improve robustness by providing fallback values when parsing fails
pdfbox - 4892 : remove unused code , a suggest by valerybokov
added checks for parameter existence before encoding and replacing parameters to ensure only valid parameters are processed to avoid potential errors during request processing
fixed issue with max number of output on circuit breaker load balancer .
updated the maximum buffered document count in TestIndexWriterExceptions to ensure that the document frequency is accurately retrieved based on configuration settings
replaced instances of ` String ` with ` Sha1HashCode ` for hashing resource APK , primary dex , string assets , and string symbols to
removed unused methods for enum value conversion in AsmRuntime . java to clean up the code and improve maintainability
add is _ world and is _ deep tag to forgebiomagetags . close # 1108
replace asyncimageloader with a thread pool for good performance
changed private fields to protected and refactored methods for better accessibility in BaseTableUpsertMetadataManager to enhance encapsulation and simplify initialization logic
replaced occurrences of " \ u0627 \ u0627 " with " \ u0623 \ u064a \ u0627 " in multiple language - specific Java
updated image comparison from ` vid . getImage ( ) . equals ( varName ) ` to ` vid . hasImageEqualTo ( varName ) ` to
camel - jbang - add repos = option to run command
added handling for NaN scores in CrawlDbReader to improve error reporting for invalid score values
added a cleanup method to track and delete temporary files after tests to ensure proper resource management and prevent file leaks
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and refactored focus handling
[ hotfix ] [ checkpoint ] make checkpointcleaner thread safe
added a new test class ` XPathWhiteSpaceTest ` to validate XML schema validation to ensure proper handling of whitespace handling in XPath processing
[ bonsai ] do not override trie log layer if there be no trie
refactor FilledNewArrayInstruction class to improve code readability and maintainability
add timeouts to slow test
updated the path handling logic in OCFile . java to use ` endsWith ` instead of ` substring ` for better string matching to improve accuracy in determining
added debug print statement for skin file loading failure to improve troubleshooting by providing insights into the skin file loading failure
added dirty state management to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to enhance data integrity checks during level 2 processing
added a new constant UNDEFINED to the Result class and updated TestStep to use it instead of creating a new Result instance to improve code clarity and
updated test cases in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of null pointer exceptions in database operations
make uploadjobmulticontonization serializable again ( # 1892 )
do n ' t fail recovery if the recovery location could n ' t be recover
take care of child node when calculate summary level
removed the volatile modifier from the pos variable and introduced a sizeMask variable and a nextPowTwo method in DataOutput2 . java to simplify the code
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark these tests as ignored due to a known issue to
http : / / issues . apache . org / jira / browse / amq - 4892 - fix regression cause by amq -
[ hotfix ] fix checkstyle violation in filemanager
updated transform function type mappings to include additional mathematical functions alongside addition , subtraction , times , division , and log transformations
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to ` VariableElement ` and ` getPackageInfo ( ) `
8037550 : update rfc reference in javadoc to rfc 5280
fix : wrong type cast in searchannotationvisitor . value ( )
None
removed unnecessary braces in conditional statements to improve code readability and maintainability
updated path validation logic in ConfigFileApplicationListener and added a new test for absolute resource default file handling in ConfigFileApplicationListenerTests to ensure correct file
refactor PreviewPositionHelper initialization to accept a Context parameter and update inset calculations based on multi - window mode to improve flexibility in preview positioning
[ java ] do n ' t publish new leadership term when prepare for election .
pmdcoveragetest : improve error message
refactor ByteArrayInputStream logic and add a new Skip class for testing byte skipping functionality to improve code readability and provide a demonstration of byte skipping
refactor promptUpdate logic in UpdaterTask . java to improve readability and maintainability of the code
peer : make ` ` max _ headers ' ' header message public
add rt . jar to modloader standard library list
refactor connection handling in AbstractHandshakeHandler to improve readability and structure to enhance clarity and maintainability of the handshake logic
[ geos - 10641 ] fix geos - 10641 break backward compatibility
added a check to ensure the response is committed before sending an error response to avoid issues with already committed responses
updated conditions for handling pending elements and connection queue size in HttpSession . java to improve logic flow and ensure correct polling behavior
changed fade - out behavior of the FakeTaskView in HomeGestureTutorialController and added gesture navigation tutorial functionality to enhance user experience
- fixed error log for unknown component
updated ScimExternalGroupBootstrap setup to include " internal . superuser " and " internal . superuser " entries in external group sets to enhance
updated thirtyDays initialization in FreezeBalanceActuator . java and added validation in TransferActuator . java to ensure that a non - existent
updated path separator usage in FileResolverTestBase . java to improve compatibility with different operating systems
ggb - 2118 make sure ` ` show help ' ' and ` ` hide ' ' work again
updated GpsMainActivity to retrieve session description instead of an empty string and modified AnnotationViewFragment to use EventBus for event - driven actions to
added a conditional check for the number of pages before asserting the page count in JsoupNonVisualRegressionTest to ensure the test accurately reflects
androidbufferallocator : introduce androidnativebufferallocator for direct buffer release
added checks for flag names that start with " ! " in Main , PrimaryItem , and Util classes to improve flag validation logic to ensure proper handling of
added a NOPMD comment to the executeQuery method in JDBCHistoryCache . java to suppress PMD warnings during query execution
updated the comparison for ITEM _ USE _ GRANT _ GRANT _ SELECT _ REWARD from equals to = = in BattlePassManager . java to ensure
http : / / issues . apache . org / jira / browse / amq - 3892 - fix test bug .
cloudstack - 5973 : fixed unit test to work with new affinity api
added a null check for the command and modified argument prefix check to enhance command handling and improve argument processing logic
increased the size of the LightOutputStream instances from 7 to 4 in PropertyTypes , ByteIterableBase , and LongBinding classes to accommodate larger
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a showBlank flag and modified conditional logic in ClassWriter . java , and created a new test class T8032819 . java to
added an assertion to check the length of the person ' s sn attribute to ensure that the person ' s sn attribute is correctly configured for validation purposes
added null check for file extension before comparing it to the existing file extensions to avoid potential NullPointerExceptions when checking file extensions
replace return statement with continue in ContactRightButtonMenu . java to ensure proper iteration behavior
[ hotfix ] fix cancel logic in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
refactor the binding and closing logic in PlainSocketImpl to improve clarity and ensure proper resource management by releasing the original file descriptor to enhance resource
added functionality to remove items from the ` BookmarkListRootFragment ` and ` MediaDetailPagerFragment ` based on their IDs in ` BookmarkList
updated log message to reference " element ' s in - view center point " instead of " center of element ' s in - view center point " to
added a new file ` bug4865918 . java ` to test the scrollbar behavior with a specific increment value to verify that the scrollbar block
ambari - 21174 . remove velocityengine from adkerberosoperationhandler ( rlevas )
replaced specific imports with a wildcard import and added functionality to display group triggers in QuestCommand . java to streamline imports and enhance user feedback for group
fix crash when select gnucash account file
added Lombok ' s ` @ ToString ` annotation to ` PartitionChangeEvent ` and ` TbApplicationEvent ` classes to enable the use of
updated the description URI for the CloudService configuration to use a constant from CloudService to improve maintainability and clarity by centralizing configuration URI
removed viewport component and j scroll pane from the BrowserPanel to streamline the UI by eliminating unnecessary components
[ add ] keyboard . key _ forward _ del to lwjglinput .
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " configuration before retrieving parts to conditionally index MIME types to enhance flexibility
added author pattern to extract author from comment text to enhance the functionality of the JSDoc by extracting author from comments
updated metric constants in MetricsConstant . java to use CREATE _ TOTAL _ TABLES and DEPRECATED DELETE _ TOTAL _ DATABASES
updated HiveDatabaseSchema and HiveSchemaFactory to incorporate DrillHiveMetaStoreClient and SchemaConfig for improved schema management to en
updated oauth2LoginLinks method to accept query parameters to enhance error handling by capturing error details
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al - Q
added a check for Firefox in the supported condition of WebAudioWrapper to ensure compatibility with different browser types
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` to enable adding server interceptors to the server builder
added default character set specification in the CREATE TABLE statements to ensure compatibility with database schema changes
updated formatting and structure in WriterRecordBatch and StreamingAggTemplate classes to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in variable name in executiongraph
added a ` hasFrom ` flag and corresponding getter / setter methods in ` Delete . java ` , and modified ` DeleteDeParser . java ` and
refactor synchronization logic to handle multi - status and improve error logging to enhance synchronization accuracy and clarity in error reporting
refactor recipe applicability checks by introducing a new method ` applicableListTests ` in ` RecipeScheduler ` to improve code readability
updated regex pattern for matching log lines in LogAnalyser . java to improve the accuracy of log line formatting to enhance the accuracy of log line recogn
( chore ) camel - test - infra - google - cloud - gcp : add miss google cloud integration test
fixed - rsearch . get ( ) and rsearch . scan ( ) method throw indexoutofboundsexception
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a null check for the global ID before adding it to the guidIndex to avoid potential NullPointerExceptions when the global ID is null
updated the comparison logic in OptionalAssert to use comparison strategy for improved accuracy to enhance reliability of optional assertions
htmlworker : fix margin issue
added a new test class TestArrayCopyToFromObject to evaluate array copy behavior to ensure proper exception handling and object creation in array copy operations
replace bash - based bash script with python - based script in buckjava
do n ' t close ajp / nio on the connector if it be already close .
add new overload for findfiles ( ) that take a modcontainer , and deprecate old version .
added JUnit Ignore annotation to TestLlapSignerImpl . java to mark the test as unstable due to instability of the test case
fix intermittent failure in testinternalinputbuffer
modified the ` autoloadCall ` method to include a ` lowerName ` parameter and introduced a ` autoloadLocks ` set to track class loading locks
updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to ensure compatibility with server versions prior to 10.8 .
updated localhost handling in KDC and BasicKrb5Test classes to dynamically retrieve the canonical host name from the system ' s local address to improve reli
updated Jsr250Voter to conditionally return ACCESS _ DENIED based on a boolean flag for Jsr250AttributeFound to ensure
updated import statements in MP4Parser . java to include specific boxes and removed unused ones to streamline the code and enhance maintainability by
added a constant for HS2 proxy user and modified session parameter handling to ensure session parameters are correctly assigned based on the presence of a proxy user
camel - 7999 : camel - hdfs - add snappy codec for camel - hdfs
added a 1 - second delay in HttpClientTest . java to introduce a delay during test execution
[ bug - 66425 ] xssfcell . setcelltype ( cell . cell _ type _ blank ) do n ' t
updated glyph offset calculation and added appending of text to the buffer in GlyphLayout . java , and changed a test message in BitmapFontTest . java to
updated references to ` K3S ` to use ` Commons . ISTIO _ VERSION ` throughout the code to ensure consistency and
replaced ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . getPlaybackManager ( ) . reportPlaybackStart
fix potential resource leak
fix maploader hitting eviction on initial load
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579 : responseflag .
[ ds - 3952 ] fix for ds - 3952 , add read policy to default policy list
added a ConcurrentHashMap to optimize performance by caching CompositeFont instances for efficiency
updated preferred height calculation in Tree . java to ensure consistent height adjustment across the tree layout
drools - 3131 dmn dmn validation error message should include the variable name
removed unused imports and refactored the isVacant method in CellLayout . java to improve code clarity and maintainability
changed the access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated method calls to use ` MAIN _ EXECUTOR
added null checks for node ID and improved edge type handling in the ElementFactoryImpl and ImportContainerImpl classes to enhance error handling and
chore : add log for unknown unknown response from sdk harness
updated the constructor of ` Bin ` in ` BinFiles . java ` and added a new test case in ` TestMergeContent . java ` to ensure
replaced the method of retrieving the closest core build to improve accuracy in core building detection by using dst2 to enhance accuracy in core building calculations
resttemplatecopyheaderfilter : skip content - length header when copy request
updated Java2TypeScriptTranslator to handle string conversion for class , character , and character types , and added assertions in SyntaxTests for better test coverage to
updated filter and channel sizes and adjusted sample sizes in various classes to improve the adaptability of the code and ensure better resource management
hbase - 17455 canary - add - allregion option to enable all region on a regionserver
( chore ) camel - cassandra : remove unused module from cassandraconnectorfactory
no - jira - reset the cursor position on close
set minimum size of dialogs to ensure new frame dimensions do not exceed the current window size to improve layout consistency with the minimum window size
fix vanilla bug where fall block would lose state information on world gen .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static fields and improve test suite initialization to enhance test reliability and maintainability by
added injection for KerberosPrincipalHostDAO and modified entity removal logic in KerberosPrincipalDAO to improve management of Kerberos principal entities efficiently
removed the ' true ' argument from the getTableSnapshot method call to simplify the method signature for better usability
do n ' t increment the keep alive counter if an error occur during the poll
update error message to specify " Monetization setup " instead of " Service & Apis " and paste the Base64 - encoded RSA public key in
updated the ` FileTranscodeVirtualFolder ` constructor to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed the ` is
[ drools - 6663 ] allow kie - app to be load from multiple resource path for spring - boot - root
added an assumption to skip tests on version 19 and above to ensure compatibility with newer features in the codebase
removed the context parameter from the assignTargetsForSplitScreen method and updated its logic to streamline the code by simplifying the target assignment process
[ hotfix ] fix checkstyle violation in leaderlatch
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService to facilitate dynamic configuration of ZkSNARK parameters
transactionconfidencetest : add getdepthfuture to wait for the depth change
corrected the spelling of " longitude " in multiple locations and added a new method to create a media recorder to improve code readability and
set default platform name to ios in simulator
pdfbox - 4892 : fix typo find by codespell on fossies . org
added missing braces in conditional statements to improve code readability and maintainability
refactor CreateVisibleSignature class for improved readability to enhance maintainability and ease future development
added a try - catch block around the nextOutgoingFrame method call to handle potential exceptions during frame processing
refactor class loader access in ContextHandler to use AccessController for privileged actions to enhance security by ensuring the caller ' s class loader is accessed
added logic to reset the parent category references in FeedCategory objects when they are changed to ensure that all child categories are removed from the feed category hierarchy
updated the ContributionManagerDialog to use a variable for the title based on the contribution type to improve clarity and maintainability of the title displayed
added a new field ` vwap ` to the ` Ticker ` class and updated related constructors and methods to incorporate it to provide a dynamic
added functionality to display a no widgets view along with a bottom inset in SearchAndRecommendationsScrollController and updated WidgetsFullSheet to
move gsoc . rendergraph api out of the loop
fix wrong text color in dark mode
updated ShadowUsbManagerTest . java file to improve test coverage for USB manager functionality
add some logging to help diagnose problem
added a call to update the selected configuration to ensure the selected configuration reflects the current settings
updated bounds calculation to ensure a minimum of 1 pixel to improve visual stability by preventing rendering issues with invalid dimensions
use linkedhashmap instead of hashmap to preserve order
replaced nativeClosureManager with closurePool for improved closure management to enhance code clarity and maintainability by using a dedicated closure pool
( chore ) camel - spring - boot - starter : migrate component to junit5 ( # 4382 )
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , implementing a Websocket integration test to
remove unused code . no functional change
refactor authentication comparison logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added a condition to check the system property " jnr . ffi . compile . x86asm " to ensure that X86asm compilation is disabled by
refactor calls to use a local variable ` callNodeType ` instead of calling ` callNode . getType ( ) ` directly to improve code read
added a new ` Insecure ` annotation and modified the ` MessageBuffer ` constructor to incorporate it to enhance security by preventing serialization of
added configuration variables for Hive settings in HiveConf . java to enhance flexibility in managing Hive settings related to file management
initialize the scopes and policies collections in ResourceSet . java and add a null check for policy collections in DefaultResourceSetService . java to ensure that the
changed the visibility of ` decrefOnClose ` and ` readerFinishedListeners ` in ` MultiReader ` to be final and modified the constructor to accept a
updated multiple classes related to asynchronous socket channel implementations to improve code consistency and maintainability across file systems
# 189 remove selenium test that fail in 2.49
refactor ` EntrySet ` , ` LinkedHashTreeMap ` , ` LinkedTreeMap ` , and ` GsonTypesTest ` to
changed return types of keySet ( ) and values ( ) methods in Int2IntHashMap from Set to KeySet and Collection to enhance type safety
added duration property to FlipTransition class to allow customizable animation durations for better control over transition effects
remove unnecessary trace logging in DLNAResource . java to streamline code for better readability and maintainability
update forge version to 9.10 . 10
use java version - specific warning instead of system . err . println
update parser configuration to support java 16
updated padding logic in ExpansionViewHelper . java to improve UI appearance based on the number of replies to enhance user interface responsiveness
[ hotfix ] [ runtime ] do not invoke backup replica callback if version be less than 3.9
added metadata handling in SeedUrl and SeedResource classes to store and manage additional seed metadata data
fix npe in patternbuilder when no binding
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
ww - 4237 add package name to the name of annotation action
updated assertions in IterableTest to explicitly cast null to Object and added a new test for handling null values to enhance type safety and improve test coverage for
added default stream ( ) and parallelStream ( ) methods to MapIterable and PrimitiveObjectMap classes to enhance stream functionality for improved performance and
return a clone of notifInfo instead of the original reference to itself to ensure that the original reference remains unmodified
make sure command list do n ' t contain duplicate entry
rename AEADBlockCipher class for consistency to improve code clarity and maintainability
added isVariableLocal method to ILocalVariableAwareVariablesMap and modified related methods in VariablesMap and WebVariablesMap to enhance variable local identification
added null check and resource retrieval logic in PackageResourceTable . java ; updated ResourcesMode default in RobolectricTestRunner . java from best to legacy
added a check for ulSize before retrieving head table buffer and setting underline metrics accordingly to optimize performance by skipping unnecessary processing when ulPos is zero
refactor SignPlugin to accept a list of HTTP message readers instead of a static message readers to enhance flexibility in handling message readers during construction
refactor Int2ObjectCache implementation to improve performance and memory efficiency
added validation for the remote repository in StandardMavenAuthenticationProvider to ensure that the remote repository is a valid MavenDeployer instance
fix a typo in the javadoc of audionode .
added SSL support in LinkyHandlerFactory and updated error handling in EnedisHttpApi to improve SSL context initialization to enhance security and provide clearer
refactor HiveFunctionRegistry to use Stream and improve function name handling to enhance code readability and maintainability by utilizing a stream -
http : / / issues . apache . org / jira / browse / amq - 4722 - fix typo in amq
updated the method name from ` getBuildTargetForAlias ` to ` getBuildTargetForAlias ` and added logic to handle partially - flavored aliases to
camel - 14263 : camel - olingo2 - do not try to consume empty odata file
updated HiveVersionInfo retrieval to use a map for equivalent versions to improve compatibility with different Hive versions
no effective change - code style change - remove trail space
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used
updated notification title handling in ONDashClockExtension and AlarmReceiver classes to use a new method for retrieving note titles to improve code clarity and
renamed ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and updated column definitions in ` GoogleAuthUserConfigTableTest
replaced instances of ` commit ( ) ` with ` apply ( ) ` in multiple Java files to standardize method usage and improve code clarity
added TestIdleListener class to the StandardSession initialization to handle session idle events more effectively during tests
add unique test table name to integration test
added background resource and reset functionality in HotseatPredictionController and cleared the background in BubbleTextView to improve visual feedback during the prediction process
mondrian : fix typo in mondrianproperties . java ( getFlushAfterQuery - > FlushAfterQuery )
[ native ] add abstract test for system query
[ lime ] fix nullpointerexception in romexplanation
added command - line arguments support to AppleSimulatorController and InstallCommand classes to enhance flexibility in configuring command execution options
fixed npe in lineselection when the line span be negative .
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 663 by check if the
added clipping to the QSB background in QsbWidgetHostView to improve the visual appearance of the QSB background
added timing logic for flag conversion in SQLManager and improved string splitting in BlockTypeListFlag to enhance performance tracking and ensure correct handling of
update floatingtextrenderer to use the depth function for occlusion .
[ gr - 36425 ] fix libffi engine be not available on non - linux platform .
add getter and setter for propagationbehavior in jdbcaggregationrepository
add l1 / l2 regularization support to the layer validation
added try - catch blocks around readWrite and readWrite methods to handle potential exceptions to improve error handling and ensure graceful execution of connection closure
changed colorStack from static to instance variable and updated its assignment to improve flexibility by allowing dynamic access to the colorStack variable
changed method calls from ` getMappedStatement ( id , false ) ` to ` getMappedStatement ( id , true ) ` and ` hasStatement (
modified the BTCEDepth retrieval to use case - insensitive comparison for tradableIdentifier to ensure consistent case handling when retrieving depth information
updated expected values in ChannelStateTests to ensure accuracy in testing against new command values
[ 3.0 ] remove the versionedhashes from the new enginenewpayload
reset trigger price when change trigger price
modify studentfeedbacksubmissioneditsaveaction to redirect to student home page when an error occur
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2058 addendum addendum fix checkstyle violation
fix : deleteall ( ) and getchangedprops ( ) for a bean that be previously mark a read only
added a boolean field ` alwaysSave ` and corresponding getter / setter methods ` getAlwaysSaveUri ` to ` FormAuthenticator ` to control the behavior of
added two protected methods , nSetLayerType and nSetLayerPaint , to the ShadowRenderNode class to provide functionality for setting layer type and paint
replaced specific imports with wildcard imports and added functionality to display a popup menu with visibility control based on accessibility context
removed redundant code that checks for null before processing the insert variable to streamline the code and improve readability
replaced static import of ` scala . collection . asScalaIterable ` with static import of ` collectionAsScalaIterable ` in multiple Java test
added null check for ` requests ` in ` MockServerEventLog . java ` and improved logging in ` HttpForwardObjectCallbackActionHandler .
add warn log if properties file can not be load
refactor session dataset initialization to use a try - with - resources statement to ensure proper resource management to prevent potential memory leaks
updated conditional check to include multicast support and NIC status to ensure outgoing connections are only established on valid and capable network interfaces
updated String constructor to specify buffer size to optimize memory usage during command execution
added methods to set the latest consume time for energy in UnDelegateResourceActuator and removed outdated methods from BandwidthProcessor and EnergyProcessor to
added an invalidSessionStrategy method to SessionManagementConfigurer to allow configuration of the invalid session strategy
include label count when fail to serialize protobuf annotation .
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of the ` containsKeys ` method in the API to ensure
replaced the ` stgen ` with ` psgen ` and introduced a new ` JDBC4TemporaryPreparedStatementMethods ` interface with a new ` J
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` Context
cxx : use ` ImmutableListMultimap ` instead of ` ImmutableMultimap ` in ` cxxflags `
pdfbox - 4892 : do n ' t use point2d . float until need
replaced the initialization of MethodHook [ 0 ] with a static final empty array in Method . java and added a static final empty array in Method . java
added a grantAccess flag to MockAuthenticationManager to control access control to enhance security by allowing or disallowing authentication attempts
modified the afterJob method to accept a JobExecution parameter to enhance job execution handling by associating job execution with job executions
added a check for file execution in the SharedLibraryLoader to ensure that writable files are only returned when the file can execute
update protoc to v3.15 . 3 ( # 344 )
bug 60689 - change parameter name to improve clarity
added constants for battery level , annotation , time with offset , and PROFILE _ NAME in BundleConstants . java and updated CustomUrlManager . java to
fix compilation error in searchexpression
g3d - 212 : use absolute screen locatable instead of geovisuallocatable when move audio
updated texture and UI implementations in JoglGraphics and ProjectiveTextureTest classes to enhance image processing capabilities and improve performance
modified the ` setResourceToDelegate ` method to return a ` File ` object and updated its return statement to improve resource management by ensuring the file is
camel - 7999 : fixed property component to support property placeholder .
updated the condition to check for last attempt time in ActionScheduler to include equality with the actual last attempt time to ensure that the correct attempt count is returned
updated dbg _ log assignment to use a temporary directory and added null check for debug _ log to ensure debug _ log is not null before replacing it to
add debug config option to hide debug screen
add pipe . resetgate ( ) to reset pipe gate properly
encapsulate TestSupplementary execution in a try - finally block to ensure consistent locale management during test execution
fix bulletproof team color generation
replaced Set with Collection for active matched states and added logging checks for performance improvements to enhance performance and clarity in logging output during concurrent
simplified the condition for checking if there are expected exceptions to enhance code readability and maintainability
updated JSON error handling to include the exception message and added error logging for plugin saving errors
[ iotdb - 6978 ] dump call tree data in csv format ( # 6978 )
added null checks for note and noteTmp before retrieving them to improve code robustness and prevent potential NullPointerExceptions
added peakTasks tracking and modified load percentage calculation in AssetManager . java to improve load accuracy tracking and maintain accurate loading percentage
simonstewart : make the native event for the firefox driver windows - independent
added new constants for nutchScoreMDName , nutchFetchIntervalMDName , and customScore in Injector . java and
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in multiple
modified CoreContainer . java to check if zkController is null and added isShareSchema ( ) method to enhance schema sharing functionality to improve schema sharing
updated method calls to use ` sizeInBytes ( true ) ` instead of ` sizeInBytes ( ) ` across multiple classes to ensure consistency in size
added null check for version1 _ 2 in VersioningTest . java to ensure version1 _ 2 is not null to avoid potential NullPointerExceptions during
updated SQL queries in Field and AbstractJdbc2DatabaseMetaData classes to include additional conditions for checking non - null values to ensure compatibility with PostgreSQL
[ java ] track commit position when append new leadership term event .
removed the buildMediaType method to streamline the code by eliminating unused media type handling
updated method names from ` fillUsingLengthPrefix ` to ` fillSlice ` across multiple classes to improve clarity and consistency in naming conventions
added a new boolean variable ` isCompactedBase ` for better readability and updated condition checks in ` AcidUtils . java ` to
updated the handling of ` immutableStorageScheme ` and ` qualifierEncodingScheme ` to default to ` NON _ ENCODED _ QUALIFIERS `
added two new classes , PojoProducersCustomized and RestProducersCutomized , to the servicecomb demo package to implement customized producer
updated configuration retrieval to use CACHE _ SECTION _ NAME instead of a hardcoded string to improve maintainability and reduce potential errors in configuration management
disable aes gcm siv key by default
add an ore dictionary with wooden slab to the oredictionary ' s oredictionary replacement list . close # 489
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from the ` UndefinedSymbolsLinkerScript ` class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 15454 - fix test failure on oracle and mariadb
updated sprite drawing positioning in HelloWorld . java to correct the sprite positioning relative to the texture dimensions
updated player function logic and improved plot ID handling in PlayerFunctions . java and PlotId . java to enhance performance and clarity in region removal
added a deprecated version constant for Lucene 8.5 . 0 to signal that this version should no longer be used
updated println statement formatting in SSLSocketImpl . java to improve code readability and consistency
add a test for casting a SQL integer to a signed integer in SelectTest . java to ensure proper handling of signed integer types in SQL queries
make dependency type in conlluoutputter configurable
refactored target creation methods in ` NoSuchBuildTargetException ` to use ` parseContext ` directly to improve code clarity and maintainability by
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild ( args ) . test ( ) ` to simplify the test
reduced the size of the ` configBlocks ` array and corrected a loop counter from ` Block . blocksList . length ` to ` 256 - 1 `
updated logging messages to use ` System . out . println ` and modified version checks in ` BukkitMain . java ` to enhance
updated SQL statement escaping logic for PostgresDatabase in AbstractSQLChange . java and added corresponding tests in AbstractSQLChangeTest . java to ensure
added methods for creating ` MutableBag ` instances from an iterable in ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl `
added HTML escape code checks and improved error handling for file names in BuildNavAndPDFBody . java to ensure proper file naming and prevent runtime
( chore ) camel - nhc : avoid use deprecated mqttbrokerconnection constructor
refactor change set retrieval logic to use a cached version to improve performance by reducing unnecessary method calls
( chore ) camel - rocketmq : fix build issue
added HiveMetaStoreClient to test database cleanup and enhanced logging in TestObjectStore and TestHiveMetaStorePartitionSpecs to improve database management and en
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated its usage in the BithumbAccountServiceRaw class to
remove thymeleaf / thymeleaf / spring5 configuration from thymeleaf sandbox
updated method return type checks to use ` isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName ( ) ` to
replaced YAML _ READER with YAML and added a new REST endpoint for listing YAML objects to streamline YAML loading and enhance RESTful API
removed public access modifier from equals and hashCode methods in the Marker class to restrict access to these methods for better encapsulation
refactor thread factory to use a lambda expression and introduce a new ` awaitTermination ` method for improved readability to enhance code clarity and
added unit tests for the ` PersonWithAList ` class and created a new ` PersonWithAList ` class to enhance functionality and
[ web ] use separate screen for applet size sync
replaced immediate visibility updates with a delayed execution to ensure the toolbar visibility is properly delayed
refactor ` initFirstPageReader ` and ` unpackAllOverlappedPage ` methods into private ` unpackFirstPageReader ` and ` isExist
server : save vm password if vr fail to start
initialize useOutputStream , usingWriter , and isCharacterEncodingSet to false to ensure proper handling of response encoding settings
add a side effect check before proceeding with assignment to improve user experience by preventing unintended side effects
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the icon width and height comparison logic in FileUploadApiController . java to use maxWidthWithMargin instead of maxHeight to ensure the icon size does not
refactor ` RegisteredServiceProperty ` and ` JwtTokenCipherSigningPublicKeyEndpoint ` to improve public key fetching and enhance test coverage
added content type checks and improved error handling for file content types in Basic . java to enhance reliability of content type validation and provide
added JZlibDecoder and JZlibEncoder imports and modified compression handling in NettyConnection to enhance compression functionality and improve code clarity
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and refactored conditional checks in ` MethodHandles . java `
removed dependency on Netty ' s proxy handler in ChannelProvider and ProxyChannelProvider classes to simplify the connection logic and improve code clarity
added a new test for handling empty final columns in CSV queries to ensure correct processing of empty final columns in the query
added compass gravity and margins to NearbyMapFragment to enhance the map ' s positioning capabilities
added a new test method ` testInterpolation ` in ` GeoPathTest . java ` to validate distance calculations for GeoPath shapes to ensure accurate
added exception handling to methods in ` LeafFilterFactory ` , ` ParquetFilterPredicateConverter ` , and ` TestParquetRecordReaderWrapper
added language handling for video tracks in LibMediaInfoParser to ensure correct language settings for video playback
added a warning log for schema version compatibility issues in MicroserviceRegisterTask to address potential issues with schema version compatibility issues
replaced manual array copying and resizing with ` addAll ` method in Array , FloatArray , IntArray , LongArray , and LongArray classes
make sure connection be close even if exception be throw .
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a Map of client registrations to enhance flexibility
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state reflects the initial state of the cluster
added handling for pending exceptions in JUnitReporter and corresponding test cases to ensure proper reporting of failure scenarios based on strict mode and pending exceptions
fix entity selectors not allow dot .
added the Closeable interface to the Selector class to enable resource management for the Selector class
updated the connection pool implementation in MaxConcurrentStreamsTest . java to use MultiplexConnectionPool with increased parallelism and iterations to improve connection management and performance
added multiple calls to stringType ( ) in CoreOptions . java to ensure consistent method chaining for type handling
updated HqlQueryRenderer to handle character and parameter inputs more efficiently to improve query rendering flexibility based on input context
updated HTTP status checks and renamed methods for clarity and consistency to improve code readability and maintainability
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
fix test which randomly fail on slow ci server
updated ParquetFormatPlugin to expand files and metadata directories more efficiently to improve file selection handling and ensure compatibility with updated metadata processing
updated the success status handling in Jsr199Javac . java to reflect successful compilation and improve error logging to enhance compilation reliability and provide cle
added a new listener class ` BaseTableModelListener ` to the ` DefaultSortedTableModel ` to notify when a table changes to enhance event handling and respons
change serverconfig ' s default port range from 49152 to 65535
added document provider authority handling in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running Android KitKat and above
removed the startLogging call from MainApp to streamline logging functionality for improved performance
modified the exception handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to ensure that the request rejection handler correctly handles and raises
updated StringBuilder to use ' this . length ' for better clarity and consistency to improve code readability and maintainability
( chore ) camel - filter : improve error message when filterlist be empty
add a stopwatch instead of a plain stopwatch for performance measurement
set initialization status to true in PListStore . java to ensure proper initialization of the PListStore class
added @ Deprecated annotation to multiple classes and marked certain classes as deprecated to indicate that these classes are outdated and should not be used in future development
[ zeppelin - 4978 ] restore the current thread ' s context classloader in remoteinterpreterserver
fix checkstyle issue in forgehooks . java
updated minSdk version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with newer Android versions
updated variable and method names in DeadlineTimerWheel . java for consistency to improve code readability and maintainability
# 167 - enh : add beanpropertyassocmany bean property to be able to specify bean name
updated JavaScript and CSS resource paths in BasePage . java and added WroSassProvider . java with preprocessing and post - processor providers to improve resource
added a test for showing the latest timeseries in IoTDBMetadataFetchIT . java to ensure that the latest timeseries data is correctly
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " in multiple files to improve clarity and specificity regarding the
modified exception handling in OCSPChecker to check for specific exception type before throwing the ` CertPathValidatorException ` to improve error handling clarity and ensure proper
benchmarker : make it possible to disable output result set write
bulk client regen : set default maxinboundmessagesize to max int ( # 6022022 )
added a new test class ` Issue _ 815 ` to validate the behavior of ` SortedTableMap ` resizing with page size and node size to ensure
added pipe waterproof recipe to the game registry to enhance the modularity of the teleportable pipeline
mahout - 570 - fix for sequential access vector iterator .
added entity metadata handling for Shulker entities in BukkitMain . java and EntitySpawnListener . java to ensure proper cleanup of entities
added getDebugLogger ( ) method to DIHWriter and SolrWriter classes to provide access to the debug logger for better logging control
added maximum file name length checks and refactored import statements in IOHelper . java and MultiKahaDBPersistenceAdapter . java to enhance code
added a new UpToTagChangeSetFilter and modified its usage in Liquibase . java and UpToTagChangeSetFilter . java to en
[ beam - 8470 ] use arraylist instead of linkedlist in fn
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of the routing mechanism
changed volumePaint and upPaint from gray to GREEN to improve visual consistency in the candlestick renderer
renamed variable ` flp ` to ` lp ` and introduced a new ` LayoutParams ` class for margin calculations to improve clarity and
added a duration parameter to the BuildTargetDurationListener and updated related tests to include the duration in the rule information to enhance rule duration tracking by
replaced ` @ Profile ` annotations with ` assumeTrue ` in multiple migration test classes to ensure tests are skipped when the required profiles are not enabled
added null check for user before processing in OAuthConfirmationController . java to avoid potential NullPointerException when user is null
camel - 16400 : added method to replace a route from another endpoint .
use nonblockinghashset instead of concurrenthskiplistset for cassandraconnection
api : allow to list public ip address by sourcenativenetworkid for the source network ( # 596 )
added battery optimization methods to ShadowPowerManager and ShadowPowerManagerTest to enable better control over battery optimization behavior for specific packages
update version property retrieval in Jetty . java to ensure compatibility with the current build properties configuration
added tests to verify the behavior of the verification methods in ` NumberOfInvocationsVerifierTest ` to ensure that the verification process correctly handles cases where
improve performance of regexp expression evaluation
added a " - foreground " parameter to the process startProfile method to enable foreground mode for profile profiles
replaced TimeUnit with IOUtils for better resource management to improve code clarity and ensure proper resource cleanup
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related method calls to
updated log statements in CodeEditorView . java and modified view removal logic in EditorTextActionWindow . java to enhance logging clarity and ensure proper
enhanced error message formatting in ClassFileReader and JdepsTask to include additional context for skipped entries to improve debugging by providing more detailed error messages
added LinkStorage and updated document storage setup in Fetcher and FetcherTask classes to improve handling of different content types and enhance document storage
modified the ` populateBubble ` method to include an optional ` existingBubble ` parameter and updated related method calls to enhance bubble handling by allowing
updated warning messages in CronScheduledRoutePolicy to throw IllegalArgumentException and modified job execution exception handling in ScheduledJob to improve error handling clarity and
refactor ` buildRpcExt ` and ` buildRpcExtJson ` methods to remove the ` Method [ ] ` parameter and streamline the
[ java ] add nak support to the receiver .
updated Gson initialization and added JSON serialization for the client information response to improve data handling and ensure proper serialization of client information
added a conditional check before setting the average price for orders to ensure that the order ' s average price is set only when the field amount is non -
removed the method ` rawExecutionReports ( ) ` and directlysubscribed to ` binanceUserDataStreamingService ` in ` BinanceStreamingMarketDataService . java
added a fail method that throws an exception and modified the failure handling in LdapTimeoutTest . java to include an exception parameter to improve test failure diagnostics and
add a check to see if the user dictionary file exists before read it .
added a check for a password file alias before updating the password in the Ambari server configuration handler to ensure that the password file is only updated when
added a check for already parsed segments in ParseSegment . java and implemented the isParsed method in SegmentChecker . java to optimize segment parsing by skipping redundant
[ hotfix ] [ yarn ] make attempt - failures - validity - interval configurable
[ geos - 10770 ] improve logging when h2 driver can not be load
phoenix - 1978 tablesnapshotinputformat # scanner . readtype should default to stream for snapshot - based inputformat
added fixed height and width options to instance login info request to enhance flexibility in layout configuration
added corner radius parameter to the update methods across multiple classes to provide additional control over corner radius calculations
updated COMMANDS _ TO _ REMOVE array to include additional commands and added filtering for additional jobs to enhance functionality by allowing retrieval of additional job tracker
added a retry mechanism for database connection handling in TxnHandler . java to allow for retry logic around connection attempts to work around BONECP bug
added a new method ` txnEnsureBackupReserve ` to ` QueueContainer ` and updated its usage in both ` TxnPrepareBackupOperation ` and `
added a new field named ` strings ` to the ` FirstOfStringsMatcher ` class with a default value of ` char [ ] [ ] ` to
updated DELETE statements in multiple files to replace " DELETE ROWS " with " DELETE ROWS CLIENT SELECT " and added a new test class for
do n ' t retry socketexception when retryable
added ` rapidInstallTypes ` parameter to several methods in ` AdbHelper ` , ` AndroidDevicesHelperFactory ` , ` RealAndroid
updated the regex pattern for generating the seed pattern in SortTest . java to allow for variability in seed generation logic
refactor MultimapSubject to improve handling of iterable values by using generics for better type safety to enhance code clarity and maintainability
simplified the return statement for real display size calculation to improve code readability and maintainability
add ` ` transmux ' ' property to indicate whether transcoding should be do
added localization support for strings in the Picker class to enhance user experience by ensuring localized strings are used
camel - 8470 fixed the unit test error of cxfrsconsumertest
hhh - 13550 postgresql throw sqlexception when lock acquisition fails
updated test cases in TestJdbcDriver2 . java and modified HiveStatement . java to enhance test visibility annotations and error handling to improve test reliability
[ beam - 8470 ] add usesunboundedpcollections category to all test in pardo .
updated HTML tags in GpsSimpleViewFragment to use Strings . getFormattedFileName ( ) instead of PreferenceHelper . getGpsLoggerFolder ( )
[ java ] remove unused leadershiptermid from service interface .
refactor HttpSender to use a member variable for the HttpExchange instance to improve code readability and maintainability
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` and updated its implementation in ` AppOpticsPropertiesConfigAdapter ` to
added null check for the tree object and improved equality checks in multiple classes to enhance robustness and prevent potential NullPointerExceptions
pdfbox - 4892 : fix for font - size in xwpf character run
addressbook doco - mo improvement : do n ' t wrap email address if it be empty
refactor exclusions handling in RawMavenResolver to improve clarity and efficiency to streamline the creation of GroupArtifact instances based on task
added error handling and currency pair information to DSXAdapters , DSXPairInfo , DSXPairInfo , and DSXAdapters classes to
[ beam - 8470 ] fix checkstyle violation in test
[ drools - 90 ] fix incremental compilation for kbase1
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` before defining properties in ` NativeArray `
camel - 16400 : add javadoc to model class so we have eip documentation out of it
truffle / instrumentation : replace findstatic getter and setter with unreflect . unreflect .
add miss annotation for java . util . concurrent . completablefuture
adjust freeze check point calculation in PlaybackController . java to correct the duration threshold to accommodate longer playback durations
removed unused imports and added a call to Whitebox . setInternalState in AbstractCommonPowerMockRunner . java while removing PowerMockRunner . java to
updated the method call from ` getTypeCode ( ) ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure compatibility with the
refactor indentation logic in TabsAndIndentsVisitor to improve clarity and structure to enhance readability and maintainability of the code
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to align with the latest testing framework standards
replaced ` newColumn ` with ` < td > < wrappedText > ` in ` HtmlProcessInformationsReport . java ` to enhance the
added Jdbc and Map execution context handling in JdbcStepExecutionDao and MapStepExecutionDao to enhance database interactions and ensure proper
added a condition to check if the new media folder should be hidden before adding it to the root folder to ensure that hidden media folders are only appended to
replace UnsupportedOperationException with IllegalArgumentException for null actors in SplitPane to improve error handling and prevent unsupported operations on null actors
added handling for parameterized Java types in RemoveUnusedImports . java to improve type management and eliminate unused imports when necessary
fix arrayindexoutofboundsexception when generate unique mod list
changed the logger from final to static final in TicketGrantingTicketImpl . java to ensure that the logger is accessible from other classes
updated the SQL string in PhysicalPlanTest . java to include an additional ' + 12 ' for the timestamp attribute to ensure compatibility with the new timeseries
added a method to check if a string is a value and updated valueFor assignment logic in Converter . java , and introduced new constants in R . java
added support for US International PC keyboard layout in CPlatformResponder . java and implemented character modifier checks in LWCToolkit . java to enhance functionality
[ java ] add aeron _ publication _ connection _ timeout to spysimulatedconnectiontest .
added a check to prevent processing for specific request URIs in GTVGFilter . java to ensure that only certain web requests are processed further
added JUnit assertion to validate the installation of apk to ensure that the installation process is successful to verify that the device is a rooted environment to
no effective change - remove oracle ansi row limiter
added a MultiMap mock in TestSimpleBodyHandler and updated test assertions in TestVertxTLSBuilder to reflect the correct number of enabled transport
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest Java dependencies
added a boolean flag to control haptic dismissal during task completion to ensure proper handling of haptic dismissing during task completion
fix nullpointerexception when exploder = = null . close # 153
removed unused imports and updated getItemId method in SymbolInputAdapter to streamline code and improve readability
updated Bitfinex API methods to use QueryParam instead of PathParam to improve flexibility and compatibility with query parameters
camel - 7999 fixed the c error of staxconvertertest
enhance the ` toString ( ) ` method in ` KubernetesLeaderElectionDriver ` , ` ZooKeeperLeaderElectionDriver `
refactor SqlSessionFactoryBean to improve code readability and maintainability
[ 3.0 ] fix tripleinvoker do n ' t support method with generic argument ( # 9452 )
replace error logging with a runtime exception in PolygonRegionLoader . java to improve error handling by throwing a more informative exception message
added a method ` isStarted ( ) ` to check if the threadlocal is started and started a timer in ` RawStoreProxy . java ` to
improve error message when channel be be close .
updated text view to handle null genres gracefully to improve robustness by avoiding potential null pointer exceptions
[ hotfix ] [ checkpoint ] fix reset hook in region recovery
added mock support for map with a collection of mappedcontainers .
[ iotdb - 6661 ] fix npe when restart wal due to unpinned checkpoint
added a test for retrying same host on callback failure in HttpTest to ensure that the client correctly handles requests with different host configurations
fix checkstyle issue with package - info . java
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server query escaping functionality to ensure proper handling of escaped characters in SQL Server queries
fix potential npe in camelmodule when no route be configure .
replaced synchronized block with a utility method for waiting on the byte buffer to simplify code and improve readability
updated package and import statements to reflect the new provider structure to ensure compatibility with the correct package structure for parameter handling
tweak cropperutils . finishviewsetup to call post instead of requestlayout
removed the appName parameter from the configure methods in InputRC to simplify configuration by eliminating unnecessary appName parameter
add ignore deps test for component installer
[ java ] use ` ` -- headless = chrome ' ' instead of ` ` setheadless ( true ) ' '
change value assignment to use intern ( ) method to ensure value is properly formatted for better readability
added support for detecting " MOVE " in the receive status check to enhance the robustness of database interactions
updated date formatting patterns in FixedDateFormat . java to ensure consistent date representation across different locales
updated import statements for Google Commons libraries to streamline dependencies by removing shaded imports
[ hotfix ] [ runtime ] make startspilling ( ) and startspillingbuffer ( ) return a boolean
updated permission checks in the plot ' s untrusted permission handling to include the untrusted permission for enhanced security and access control
do n ' t start jabber if it be already disable .
updated the condition in BasicURLNormalizer to include additional character checks for curly braces to enhance URL normalization accuracy
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a check to ensure ` res ` is set to ` 0 ` if it is equal to ` clockRate ` if it is ` DEFAULT _ CLOCK
added a method to retrieve the project path and modified the ` generateProjects ` method to return an immutable set of generated project paths to enhance
removed unnecessary conditional check for setting the zero digit and improved calendar type retrieval to streamline validation and enhance code clarity
added a new file MSwingUtilities . java to utilize MSwingUtilities for displaying error messages to enhance the system ' s error handling
camel mail consumer should use asynccallback instead of defaultasyncproducer to avoid blocking
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to enhance configurability and scope management for better resource management
added unit test base on user forum issue
added Main . java and ScriptRenderer . java files to implement a scripting integration test to facilitate the creation and rendering of scripts using
added a condition to check if ` _ inputState ` is ` __ NONE ` in the ` mmm Request . java ` file and implemented
added checks for glyph dimensions and introduced isDescendant method in Group , FlickScrollPane , and SelectBox classes to ensure proper handling of non -
make sure context close hook be run after deployment failure
add ` ` forceignore ' ' parameter to ` ` stacktostring ' ' and ` ` stacktostring ( ) ' ' to ` ` lexiconrecipe
increase timeout after interrupt in constanttimebackofftest
replaced specific utility imports with a wildcard import and added a check for non - blank display names to simplify import statements and enhance code readability
use classloader to load holiday xml file instead of url
added a new file ` FieldUtils . java ` with utility methods for field access and manipulation to facilitate easier access and manipulation
removed the condition for checking the speculative type in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding calculation for custom content to improve UI appearance and ensure proper
added method to update account setting with save last account .
add a new method ` setvar ` to facilitate setting variable values in a ` LineReader ` to provide users with command - line argument parsing
fix catentity event not be fire on vanilla te ' s death . close # 233687
improve performance of window frame . getvalue ( ) by check for null value
pdfbox - 4892 : add test to verify that bugzilla 4892 be fix
update mode setting in PageListController to reflect the current application mode
added methods for managing build arguments in the ImageFromDockerfile class and created a new DockerfileBuildTest class to enhance functionality and
added a null check before initializing threadInfos and threadNames to avoid potential NullPointerExceptions when threadInfos and threadName
update the condition for sweepAngleOuter in PieChartRenderer . java to improve precision in sweep calculations
[ hotfix ] [ checkpointing ] add log for recovered input channel during checkpoint
added new table properties to the Schema class to enhance schema management and support for additional database interactions
added a minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes to allow configurable minimum similarity values for fuzzy queries
updated method names from ` addActionsView ( ) ` to ` setActionsView ( ) ` to improve clarity and consistency in method naming
logback - 390 : move immediateflush to outputstreamappender , add warn to enclosingappender
updated AutoConfigureAfter annotations to include additional auto configurations for better resource management
modified the condition in JLayer to handle null cases and added a new test class bug6875716 . java for bug6875716 to ensure proper
updated import statements to use the non - shaded version of Google common libraries to streamline dependencies and improve code maintainability
refactor block mapping logic and add return and unwind block handling in BciBlockMapping and GraphBuilderPhase to improve block management and enhance
refactor legacy rendering logic and add getter / setter for legacyRenderer to improve code clarity and encapsulate legacy rendering state management
replaced intToFourBytes method with Ints . toByteArray for byte conversion to improve code readability and reduce boilerplate code
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
updated the generic type in the ` thenComparing ` method and added a new ` Department ` class with a test method in ` TypeTest `
refactor DocIdSet class to improve code readability and maintainability
[ te ] user rule anomaly function : use currentkey instead of null
ignore invalid number in test
added setting the class loader for enhancer in MockFactory to ensure the enhancer uses the correct class loader for class loading
added support for enum format in the ConverterWithEnumFormat class to enhance flexibility in handling object types during type conversion
replaced hardcoded date format strings with a constant variable to improve maintainability and readability of the code
update jawtrenderer javadoc to point to renderer
camel - 14850 - camel - aws2 - lambda : enable autowire on the lambda client , fixed test
server : if mac address be empty , generate a next available mac address for this network in user vms
removed the check for " Authorization " header to simplify the header validation logic
replaced ` submit ` method with ` execute ` in ` TraceableExecutorService ` to enable execution of commands when context is in creation
added getDetails ( ) and setDetails ( String details ) methods to multiple authentication classes to provide detailed context for authentication requests
modified the randomUsePoints initialization to use a probability of zero instead of a random boolean to improve test stability by avoiding false positives
[ web ] use ` ` end sentence ' ' instead of ` ` append dot ' '
updated TimeFormat methods to include Locale parameter for better localization support to ensure consistent formatting of time output across different locales
updated GroovyParserVisitor to handle unparsed arguments with line and column numbers and sorted them based on last line and column numbers to improve argument parsing accuracy
added bounds checking for insetPx calculations to ensure that insetPx values do not exceed defined limits
refactor gesture handling in TouchInteractionService to use a dedicated default state to improve code organization and maintainability by centralizing gesture state initialization
replaced Joda - Time with Java ' s DateTime and DateTimeFormatter for version formatting to improve compatibility with newer date representations
updated Openblas and Openblas _ Nolapack Java files for consistency to improve code maintainability and readability
correctly close the piece storage in torrent
added synchronized keyword to the initTxnMgr method to ensure thread safety during initialization of the transaction manager
increased the wait time in ` AbstractDistribZkTestBase ` and increased the socket timeout in ` AbstractFullDistribZkTestBase ` from 15 seconds
add a new class ` SearchResults ` to handle search results to provide a structured way to manage search results based on specified indices
do n ' t re - instantiate threadcpuview when threadscpu be null
initialize body if necessary .
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " and " 8.10 . 0
updated the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the method for retrieving package
added a new API endpoint to retrieve tenant pools for a single instance to enhance functionality by allowing retrieval of instance pools associated with a given instance
do n ' t terminate early if we do n ' t have doc id or prefix
added support for mock interfaces with string handling in InlineBytecodeGenerator and InlineByteddyMockMakerTest to enhance mock functionality and ensure correct behavior of
added logging statements in CxxCompileStep and CxxPreprocessStep to improve debugging and error handling during compilation and preprocessing processes
fix stringutil . removecharacter ( string , char ) to not replace non - existant character
[ 3.0 ] fix npe when metadataprotocol = tri be not configure . ( # 5978 )
[ drools - 6663 ] add datatransformer interface to allow kie - api to be use for incremental compilation
fix compilation error in distributiongraph
removed the conditional check for interesting opcodes in FormatStringChecker . java to simplify the code and improve readability
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintain consistency
refactor ITestDbTxnManager class structure to improve code readability and maintainability
refactor database connection handling to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added test cases for MapModel functionality in CodeFirstPojo and CodeFirstPojoClient classes to ensure proper handling and validation of MapModel
pdfbox - 4892 : do n ' t fail on invalid / missing object , a suggest by valerybokov
updated selection handling and item listener logic in ScaleDialog . java to improve clarity and ensure correct selection state management
fix potential npe when the player have no step height
do n ' t throw an exception if there be no appearance stream , just log a warning
replaced SortedSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to maintain insertion order for key uniqueness
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 in CancelEventTimer . java and added multiple comments in
updated preload libraries in dc1394 . java to ensure compatibility with the latest camera versions
added a conditional check for agentSupport before setting all constructors in MainMockTransformer and created new classes for mocking static methods with private constructors to enhance
pdfbox - 4892 : avoid npe , a suggest by valerybokov
add awt - specific title to the main window , if available
modify depth calculation based on pixel size to ensure correct depth is set based on the color model ' s pixel size to accommodate different transparency requirements
added error response body as a byte array in OkHttpDataSource to enhance error handling by providing more detailed response details
added a static exit method in TopLogging and simplified error handling in TopThreadGroup to improve error management by passing the throwable as a parameter
updated the calculation of the start index in NativeRegExp . java to correctly handle cases where the regex is not global
disable fail test until upgrade to optaplanner 6.3 . 1 +
update variable from lowIndex to highIndex in DefaultAllocator . java to ensure correct allocation retrieval from availableAllocations
added a method to clean entries without feeds in DatabaseCleaner and a corresponding method in FeedEntryDAO to delete entries without feeds to enhance data management
modified the return type of the appendToLabel method from void to AtomicCounter to enable method chaining for better usability
[ java ] : replace busy spin idle strategy with noop idle strategy .
added handling for ` NOT _ MODIFIED ` status in ` CacheControlHeadersWriter ` and corresponding tests in ` CacheControlServerHttpHeadersWriterTests `
truffle / instrumentation : fix bug in instrumentationpartialevaluationtest
modified the paintTabArea method to correctly calculate the width and height of the tab area to ensure proper rendering of the tab area based on its insets
refactor ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept variable arguments for orderbook size and
( chore ) camel - ftp : fix file separator usage
added a new method ` build ` in ` JavaProvenance ` and removed unused imports in ` MavenProjectParser ` to facilitate
added trace logging for Registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java to enhance visibility into UDFs and
increased the loop iteration from 100 to 200 in CloudStateUpdateTest . java to accommodate larger state changes efficiently
rename unserializablecassandraexception to unknowncassandraexception to avoid confusion
added a check to skip writing to the output file if the test is run as root and the output file is writable to avoid unauthorized access to ensure
added package info retrieval logic in LauncherModel . java to handle cases where the component ' s package is not enabled to ensure that the application does not
cloudstack - 4892 : fix database upgrade path for 4.2
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and adjust imports in FaultTolerantChunkOrientedTasklet
replaced ` startsWith ` with ` regionMatches ` for string matching in ` LineReaderImpl . java ` to improve case - insensitive comparison to enhance
added GLOBAL _ DATA _ TABLES to manage data table descriptors and updated return statement to include GLOBAL _ DATA _ TABLES to streamline data table handling
added import for Overview and modified task dismissal logic in TaplTestsTaskbar . java to ensure all tasks are dismissed when the overview
add dbupgradevicetemplate interface to update system vm templates
removed unnecessary null checks for the connection object to simplify code and improve readability
refactor action handling logic in SequenceAction . java to improve clarity and maintainability to enhance code readability and maintainability
disable login if the keyspace do not exist
added a check to skip synthetic fields in ReflectUtils . java to optimize performance by avoiding unnecessary processing
added LoggerProvider class and integrated it into ApplicationController and configuration to enable logging functionality for the Ninja application
changed the type of the ` builder ` and ` port ` from ` String ` to ` int ` in ` ServerStatusCommand . java ` and updated
added deprecation warning handling and improved error messaging in SpringFactory and SpringFactoryTest to provide clear warnings for multiple glue class configurations
added a new method ` deepStart ` to process a list of ` Startable ` objects to enhance functionality by allowing deep starting of nested startables
remove shape . reserveprimitiveextensionarray ( ) , deprecate since 20.2
only allow laser table to be placed on block / laser table , not tile .
refactor the condition for validating object names in AbstractJdbcDatabase to improve readability and maintainability of the code logic
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
setExpireMessagesPeriod to zero in MemoryLimitTest . java to prevent test timeouts by controlling expiration periods
removed null checks for handlerName and norm length in RequestHandlers . java to simplify code logic and improve readability
modified the method to normalize the servlet name by replacing hyphens with periods to ensure consistent logging format
updated Python environment variable handling and imports in ProjectBuildFileParser . java to improve code clarity and ensure consistent environment variable usage
updated audio frame size calculations and error handling in DirectAudioDevice . java and Toolkit . java to improve robustness by ensuring proper handling of
added null check for enums before returning an Optional to avoid potential NullPointerException when enums is null
updated error message format in CommitLogReader . java to improve clarity of error context for better debugging
added assignment of the WebSocket session policy to ensure proper configuration of the WebSocket session
simplified the initialization logic for static fields in the Java to TypeScript translation to enhance readability and maintainability of the translation process
updated webroot argument in StaticHandler instantiation to allow dynamic configuration of the webroot directory
( chore ) migrate swagger - generator - spring to junit5 ( # 4382 )
[ netbeans - 4088 ] use the editorregistry instead of the registry to check for component attachibility
replaced ` printHeaderObject ` with ` createHeader ` in multiple formatter classes and refactored the ` createHeader ` method in ` Text
consolidated multiple import statements into a single wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future
added multiple buffer reset calls in ReduceRecordProcessor . java to ensure data integrity during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when setting foreground and background
updated comparison in FloatingDecimal . java from ` < = - 3 ` to ` < - 3 ` in ` FloatingDecimal . java ` and added a
updated the property type validation logic in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper type compatibility and validate
removed the maxVersion parameter from the getVersions method call to streamline version retrieval by directly using nVersions
update origin handling in NettyRequestFactory to correctly set the ORIGIN header based on the scheme to ensure correct origin formatting for secured URIs
updated animations in RecentsView and TaskView to use an alpha parameter for improved visual feedback to enhance user experience by providing s
updated error messages in ORCRecordReader to include field information to enhance clarity in error reporting for better debugging
remove demo video for gtv
removed HIBERNATE _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE _ JPA _ METAMODE
hbase - 27432 fix log message in hbase - rpc ( addendum )
added logging functionality and diagnostic listener to the TestSpecificCompiler class to improve error handling and diagnostics during Java compilation
added session creation logic in WebSocketEndpoint and implemented a session closed test in WebSocketIT to ensure proper handling of WebSocket session closure based on user authentication
change dao state listener from ondaostateblockchaingroupchanged to changechangelistener after batch processing
replace occurrences of " OpenSymphony Group " with " Apache Struts " in XmlConfigurationProvider . java to ensure compatibility with the
added conditional checks for stream . stop ( ) before calling stop methods in WebCamInputPanel . java to ensure proper handling of video stream termination
changed the type of chartData from List to ArrayList in BittrexChartDataResponse . java and added BittrexChartDataPeriodType
[ geot - 5904 ] fix build after geot - 5904 update
fix targettype58 to use skip rather than stream
hhh - 10956 - throw exception if no identifier be find for composite identifier
rename ` ` find full text ' ' action to ` ` download full text ' '
refactor URI registration logic to include host and port details in a list to enhance URI registration by including relevant host and port details
refactor WebSocketMapping and UpgradeFilter classes to improve code clarity and maintainability
added a check for a non - blank OSDB hash before retrieving info from the OSDB and changed ArrayList declarations to use generics to improve type safety
added token transfer functionality and validation in RuntimeImpl and MUtil to handle deposit transfers to enhance asset transfer capabilities and ensure asset transfer integrity
camel - 14284 : camel - ftp - fixed file deletion in stepwise mode
fix typo find by codespell on fossies . org
added validation for joinResult and improved join condition checks in MapJoinOperator . java ; introduced BloomFilter in HybridHashTableContainer .
updated the ` ServerHTTPSPDYAsyncEndPoint ` class to accept an ` AsyncEndPoint ` parameter and added methods to retrieve its properties to en
added tweetId to intent extras in multiple classes to ensure unique tweet identifiers across the application
refactor disconnect logic into a separate method ` disconnectWeb ` to improve code readability and maintainability by consolidating disconnect logic
replaced the integer variable ` _ numChildren ` with an ` AtomicInteger ` for thread safety to ensure thread - safe access to ` _ numChildren `
[ waf ] fix checkstyle issue in io / json / waf / plugin
disable the null pointer test by setting the test as disabled to improve test reliability by avoiding unnecessary exceptions
resolve split - packages : update java microgenerator to 1.0 . 2
replaced instances of PredicateType . IN with PredicateType . NOT _ IN in multiple predicate classes to clarify that the predicate is intended for
updated exception handling and modified account display titles in Preferences and ReceiveExternalFilesActivity to improve error handling clarity and enhance user experience by providing
added null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to include the expression string from the column expression to improve clarity in the representation of column expressions
added a check to ensure the Javadoc presence before setting it to avoid potential NullPointerExceptions
renamed ` holderMethod ` and ` holderKlass ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder . java `
refactor revalidate calls to revalidateWithAnimationSafety ( ) to enhance safety checks during animation transitions
[ hotfix ] [ kafka ] fix compile error in kafkarecordserializationschemabuildertest
updated the calculation of the y - coordinate in the Polygon class to ensure correct sine - wave approximation of the polygon coordinates
added type parameter to cache creation method to ensure compatibility with cache configuration types
fix for sourceforge bug 22974855 .
refactor ShadowCookieManager to improve code readability and maintainability
added a new authorization check for external tables in Hive configuration to ensure proper authorization checks before dropping tables for managed tables
added braces to the conditional statement in Stage . java and modified the calculation in ProgressBar . java to improve code readability and ensure proper positioning of
truffle : cache byte order information for sulong .
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider
updated initWebViewLogin method to accept a baseURL parameter and improved login handling based on the server ' s web login support to enhance flexibility
corrected the spelling of " Parameter " in the ExecutorException message to improve clarity and accuracy of error reporting
updated the DateTimeFormat annotation to remove the ' after ' parameter and modified the request parameter handling in AuditEventMvcEndpoint . java , while adding a new
[ java ] introduce precisethroughputtimer for precise throughput .
remove softbody from dynamics world on test failure
changed interfaces to be public to allow access to these interfaces from outside the package
[ zeppelin - 2223 ] fix log message in case of remote websocket error
add test case to prove that the ' content - accept ' element do n ' t exist anymore
fix npe when oil ca n ' t be load and redplasma be n ' t set
include x - http2 header in response of http / 2
refactor conditional checks for membership removal based on trusted and member lists to improve code readability and maintainability
updated delimiter and formatted string concatenation in SimpleReport . java to improve readability and maintain consistency in formatting
removed the option to ignore symbol files in the JavapTask and modified related classes to streamline the code to streamline the processing of symbol file
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo . java ` file to improve clarity
added null checks for contract creation and address in the switch statement to improve error handling and prevent potential NullPointerExceptions
do n ' t create 3d input for applet without realsense
added an @ Ignore annotation to the KinesisIntegrationTests class to temporarily disable the test due to instability
let scripttagpayloadreader . parsepayload return false instead of throw an exception
added the @ Override annotation to the getRepositoryFactoryClassName method to ensure proper overriding of the method in subclasses
modified the ` getExecutableCommand ` method to return a list of strings instead of a single string to enhance command formatting to support multiple executable
refactor initialization of IOSGLES20 properties to improve code readability and consistency
removed UploadPathActivity and its dependency from ComponentsModule . java to streamline the codebase by eliminating unused components
update return statements to conditionally return - 1 for totalTermFreq and sumTotalTermFreq based on indexOptions to ensure correct behavior when indexing is on
fix ( jdttreebuilder ) : set implicit constructor flag when add a constructor ( # 2131 )
skip column snapshot generation for oracle when not in oracle database
refactor Database class to improve code readability and maintainability
refactor SpringApplicationBuilder to improve code organization to enhance maintainability and readability of the code
updated iterator initialization in PointInSetQuery to ensure consistent reference to the sortedPackedPoints iterator
removed truncation of rawName to ensure rawName is consistent with expected length
added handling for additional collection types in AbstractCollectionAssert . java and updated test cases in CollectionAssert _ isUnmodifiable _ Test . java to ensure proper
changed the enum declaration from static to non - static to allow for broader flexibility in enum usage
added a twitlonger feature toggle in the Compose . java file and removed it from ComposeActivity . java to enhance user
replaced the ` toggleKeepInSync ( ) ` method with a call to ` getFile ( ) ` using ` getFileOperationsHelper ( ) . toggleKeep
replaced DatatypeConverter with Base64 decoding in ImageUtil . java and added unit tests in ImageUtilTest . java to enhance image processing
added new classes ` ControllerCounter ` and ` DBCallback ` to handle database operations to provide functionality for managing controller and database operations within the application
added final keyword to the parameter in deleteTicket method to enhance code readability and maintainability
added a new file FlywayMigrationRunner . java that contains a main method for configuring Flyway in the application to facilitate migration of
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap . java ` and added a new class ` Override
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to release a new version with the
made modifiers nullable in CompressionCodec and ZlibCodec classes to enhance code safety by preventing null pointer exceptions
added null check for main attributes and refactored jar creation logic in LauncherHelper , Arrrghs , and TestHelper classes to improve robust
rename test classes for consistency to improve readability and maintainability of the test suite
make compilation graph size for inlined graal method configurable
cellcopypolicy : do n ' t clone the cellcopypolicy , just create a cellcopypolicy from it
added a method to reset the icon load result in FloatingIconView and invoked it in Launcher to improve the handling of icon loading results
fix entityCapsmanager to use raw string encode instead of raw string
updated IconRecentsView . java to adjust margin dimensions based on device orientation to ensure correct item decoration is displayed for landscape mode
deleted the AddAdapter . java file to remove unused code that is no longer needed for the project
fix indexoutofboundsexception in nonstaticliifter .
added a boolean parameter ` processSortCols ` to the ` selectOp ` method and modified the logic for adding bucket column names to enhance
refactor TestLogWatcher to improve message registration checks to ensure that there is no unexpected message registrations for the watcher
added a print statement for closing an angle bracket in Java2TypeScriptTranslator to enhance code readability and prevent potential syntax errors
updated the SDK version from " 4799589 " to " 4913185 " to reflect the latest stable version of the software
set the Spring AOP proxy target class to true if not already set to ensure proper configuration of the proxying mechanism
removed the ` singletonLock ` boolean variable and its associated logic from ` TypeCachingBytecodeGenerator . java ` to simplify the code by eliminating
add example withclass and responseclasscallback to action documentation .
add a new method to append a file to a specified directory without affect the file name
updated MavenExecutionContextView and MavenRepositoryMirror to improve mirror retrieval logic and added unit tests to enhance functionality and ensure correct handling of
added a name parameter to several SourcePath classes and updated constructors accordingly to enhance the clarity and usability of the source path management in
updated the service client comparison logic in ` OAuth20CallbackAuthorizeEndpointController ` to use ` matches ` instead of ` equals ` to ensure proper matching of
refactor annotation handling by introducing a new method ` AnnotationParser . toArray ` in ` AnnotationParser . java ` to improve code readability and
updated methods in UserManagerCompatVL to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawableForUser and getBad
[ hotfix ] [ core ] fix default line separator description
update cma test to account for derive class
validate input for serverid , serverbase , and other request attribute in basecontroller .
chore : update java and python dependency ( # 219 )
updated the method signature of ` buildFileNamesCanBeDifferentCrossCell ` to include ` throws IOException ` and added functionality to retrieve and assert the expected output from
[ hotfix ] fix checkstyle violation in countersreader
refactor methods to directly set containerType for SEARCHRESULT , PREDICTION , and ALLAPPS to improve code clarity and maintainability
hbase - 20536 deprecate configuration key and warn user
fix native window test failure
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types and updated its usage in the ` Parameter ` class to improve
refactor TestFSTs class to improve code readability and maintainability
updated label positioning and method visibility in multiple classes to improve label rendering accuracy and enhance readability of the code
hbase - 26936 increase the initial size of increasingtoupperboundregionsplitpolicy ( # 265 )
removed unnecessary model method calls in LauncherClings . java to streamline code and improve resource management
replaced the initialization of keys and updates lists with simplified variable assignments to improve code readability and maintainability
added functionality to exclude specified data sources in SpringDataSourceBeanPostProcessor to enhance data source management by preventing unwanted data sources from being processed
store undo info so undo point wo n ' t get lose
( chore ) camel - aws2 - kinesis : use awsclient instead of sdkclientexception
refactor channel event handling to use a loop for bitwise operations to improve code readability and maintainability
added comments to clarify the reason for disabling unfavorable cache benchmarks and modified the delayable logic in the BoundedLocalCache to improve
added unit tests for database creation and deletion in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure proper
added call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly initialized
refactor workspace margins into separate variables for horizontal and vertical layout compatibility to improve margin handling for different screen orientations in scalable grid layouts
refactor CharTokenizer . java for improved code formatting and consistency to enhance readability and maintainability of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 86 )
api : fix xenserver network label
updated libGDX and libGDX nightly versions to version 1.5 . 6 and 1.5 . 7 - SNAPSHOT to
removed the metricNames set and its associated method from SolrCore . java to streamline the code by eliminating unused metrics tracking
replaced ` URI ` usage with ` Path ` for constructing the manifest file path to simplify code and improve compatibility with modern Java practices
replaced the direct check for macOS with a constant IS _ MAC to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in jdbcaggregationrepository
fix race condition in frame . copy ( ) .
initialize m _ predCount to - 1 to ensure proper initialization of PredicatedNodeTest
added a mergeProperties method to ConfigurationSpringInitializer to merge configuration properties to enhance configuration management by retaining existing properties
updated the parameter type for ` setupLogging ` in ` CommandLineOutputAppender ` and modified logging condition in ` Main ` to ensure compatibility with the correct logging
replaced instances of HashMap with LinkedHashMap for aliasToWork in multiple classes to maintain the order of elements in the data structure
added logic to search for a JDBC handler map by its class hierarchy to improve type safety and avoid potential ClassCircularity issues
added debug logging in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , JmsItemWriter , and JmsItemWriter classes
removed the trailing semi - colon from the language range string in LocaleUtils . java to handle the last character of the language range correctly
updated handler execution in VertxHttp2Handler to execute on the IO thread to ensure proper context handling during server closure
cache xssfevaluationworkbook instance to improve performance
updated schema detail type check from VERBOSE to BASIC and simplified the symbol assignment logic to enhance clarity and maintainability of the code
updated MongoFactoryBean and MongoClientFactoryBean to use MongoClient instead of Mongo to enhance compatibility with newer MongoDB client management
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order and ensure consistent iteration order
removed assertion and validation for table scan operations in SkewJoinOptimizer . java to streamline code and improve error handling during operator cloning
added a null check for the client before processing in DynamicRegistrationClientConfigurationService . java and updated imports in JsonFileRegisteredClientService . java
clear achievementlist when they be no longer need
initialize ` userName ` , ` productName ` , ` productVersion ` , and ` driverName ` with empty strings in ` MutableDatabaseInfo ` and
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in multiple files to align with the new
added LongBuffer functionality to ByteBuffersDataInput for handling long data to improve memory management and support for larger data sizes
renamed attributes from ` st _ atime ` , ` st _ mtime ` , and ` st _ ctime ` to ` st _ atime
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` that tests eager reclaim of humongous regions with
added search bar visibility logic based on user preferences to enhance user experience by controlling the visibility of the search bar based on user preferences
( chore ) camel - env : use routes ( ) instead of router ( )
added null checks for cur and next in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new action for reloading the page menu to enhance user experience by allowing page reloading
updated log level from info to warn for missing database entries in SQLManager . java to improve clarity and accuracy of log messages regarding missing database entries
updated the minimum required Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure proper handling of configuration types without a selected version
[ geos - 8480 ] use serviceloader to load extension point from geoserver . xml
added a closeTable ( ) method to HiveHBaseTableInputFormat to ensure proper resource cleanup to enhance resource management and prevent potential memory leaks
added a method to stop the statement executor in JdbcConnector and introduced logging for setting settings in HiveViewImpl to ensure proper resource management and enhance
updated feature settings and hints in DocumentFactory , XMLSAXHandler , ComplexElementHandler , ElementHandlerFactory , and MockSaxParserFactory classes
8313978 : jdbstopthreadidtest . java fail to start due to timeout
added a method to ShadowContentResolver to retrieve the type of a ContentProvider based on a URI to enhance the ContentResolver ' s functionality to ensure
refactor removal of runnable in ExpressionThreadPoolManager to improve clarity and maintainability of the code
updated the property key for the HTTP port from " port " to " vertx . httpPort " to ensure the correct configuration is used for testing
replaced ` addCaptureListener ( new ChangeListener ( ) ) ` with ` addListener ( new ChangeListener ( ) ) ` in ` buttonTable .
increase the default batch size from 10 to the number of threads multiplied by 3 to improve performance by reducing the number of threads used
[ hotfix ] log error if resource manager connection fails
initialize classFile to null and modify exception handling logic to improve error handling and ensure proper fallback behavior when classFile is null
updated error message formatting in IllegalArgumentException to improve clarity and consistency in error reporting
updated onMessage method signatures to include the owner parameter for better context in multiple classes to enhance message handling by associating the telegram with
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` while creating a ` Cursor ` and ` Row ` classes to provide
refactor assertion classes for improved readability to enhance maintainability and clarity of the codebase
# 154 - enh : add setbeanid ( ) and getbeanid ( ) ... for convenience
updated the method call from " tools / xslt / add - menu - to - site - descriptor . xsl " to " getAddToSiteDescriptorX
replaced the direct instantiation of requestMatchers with a new list to store request matchers to improve flexibility in handling multiple request matchers
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing for the ContactResource object
move getrequest ( ) and getresponse ( ) to abstractprocessor so it can be override by subclass
updated log messages and improved error logging in FileManager . java to enhance clarity of log messages regarding the checks for Persistable validity
added reset functionality in TestJdbcDataSource and implemented a teardown method in TestIndexSearcher to ensure proper resource management and clean up after tests
updated source file references in SyntaxTests . java for consistency and clarity to enhance code readability and maintainability by standardizing source file
refactor ConnectionModel and ModeledConnection classes to improve code readability and maintainability
parserdecorator now use the fallback parser , not the empty one .
fix fmlSecurityManager . checkCallingmethods not work with vanilla ' none ' class
reformatted variable declarations in AccountUtils . java for consistency to improve code readability and maintainability
updated method call from " swap " to " rename " in TestCoreAdminApis . java and modified the parameter name in CoreApiMapping . java
added a new test for parsing JavaScriptX comments and modified the parser logic to handle assignment checks for JSX assignments to improve token parsing accuracy and
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for test case b / 195263971
added methods to handle missing Buck configuration in ` BuildEndToEndTest ` and ` CxxEndToEndTest ` to improve error messaging
added physical memory checks in TestStringBufferAndBuilderGrowth . java to verify that the test environment has enough physical memory to run the test
deprecate conversionservice in favor of mapToLocaldateconverter
added a success flag set to true in HiveMetaStoreClient . java to ensure that the operation is successful
updated the condition to use ` equals ( " * " ) ` instead of ` = = ` for value comparison in ` ResourceReferenceInfo . java `
updated tweet text checks to include " amp . twimg . com / v / " in addition to " vine . co / v /
mark AreaReference as deprecated to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code readability and maintainability
added assertions and ref kind changes in MemberName . java to enhance method reference handling and improve debugging clarity
updated the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization around the key update execution to ensure thread
ggb - 2118 fix ` ` select multiple node ' ' bug
camel - 16400 : fix camel - bean to support static method in beanstaticmethod
refactor multiple Java classes related to benchmarking and protocol handling to improve code organization and maintainability
[ hotfix ] fix checkstyle violation in agentrunnertest
added overridden ` getDescription ( ) ` methods for various classes and updated descriptions in ` ChangePropertyValue ` to provide clearer descriptions to enhance code
[ fix ] objloader for obj file with no face .
refactor ProcessEngine class to improve code readability and maintainability
rename variable ' reentrantlock ' to ' lock ' for good readability
added support for " jar " packaging in the ` PrintMavenAsCycloneDxBom ` class and its corresponding test to en
updated the back ( ) method to include the event ' s component to ensure the correct component is processed during back operations
reordered conditional checks for server certificate verification in SASLAuthentication . java to improve code readability and maintainability
updated annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to remove unnecessary @ Nullable annotations to enhance type safety to improve code cl
updated configuration retrieval methods to use ` getConf ( ) ` instead of ` NutchConf ` to ensure consistency in configuration access across the application
remove the board pane from the tab and update the assembly selection logic in StubsController to improve user experience by ensuring the selected stub is updated appropriately
[ java ] adding getsessionid ( ) method to the remotewebdriver .
added null checks for time interval before setting nodes and edges in ImportContainerImpl . java to prevent potential NullPointerExceptions during time interval initialization
removed the logging level from the command in MockServerContainer to simplify the command for improved clarity
updated error logging to use the exception message directly to improve clarity in error reporting for resource loading failures
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in ` DispositionProcessor ` to utilize the ` CrawlMetadata `
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable the test due to instability
camel - 14284 : camel - itest - infra - spring - boot - stop camel - itest - infra - spring -
added import statements and a method to provide an alternative path for input stream handling in ExpectNewDemo . java to provide a fallback alternative for file operations when
updated initialization from ` input . init ( ) ` to ` input . getFirstFilter ( ) . init ( ) ` in ` LogEntryParseTester .
added a protectionDomain parameter to the BufferAlignmentAgent method to enhance security by restricting access to protected resources
added dispose method to properly release resources to ensure proper resource management and prevent memory leaks
added configuration for disabling unsafe external table operations in Hive to optimize performance by optimizing optimization on external tables
updated authorization header description to clarify that the request is not required for public keys
updated wallpaper offset setting from - 30 to 0 to align the wallpaper offset with the intended scroll range
updated return values in SybaseASADatabase and modified SQL query conditions in SequenceSnapshotGenerator to ensure correct behavior for SybaseASADatabase and Create
nifi - 259 : added automatic commit / rollback to pputsql
added directory creation logic for master and slave configurations in SnapPuller . java and corresponding tests in TestReplicationHandler . java to ensure proper directory creation
updated AppTarget identifier format from " id : launcher " to " launcher : launcher " to ensure consistency with project naming conventions
[ java ] do n ' t allocate network space when write frame .
reordered parameters in OAuth2 - related classes for consistency to enhance code readability and maintainability
updated the GenericUDFStringToMap class to include an extended description for splitting text into key - value pairs to enhance clarity and usability by providing
truncate instant to millisecond to avoid truncation .
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and added a retry mechanism for closing the agent to improve resilience
use methodhandles . privatelookupin instead of reflective invocation in classloadingstrategyhelper
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
change log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the event file being logged
disable samplingnamingtest due to flakiness
updated the error message for IllegalArgumentException in GridLayout . java to clarify the requirement that rows and columns must be greater than zero
add try / catch to prevent classcastexception
added functionality to sort and display BoundSheetRecords based on their position in XLS2CSVmra . java and implemented the BOFComparator
refactor thrust calculation and average impulse calculation in ThrustCurveMotor . java to improve clarity and correctness of thrust curve calculations
niftyjmedisplay : use inputsystemjme constructor instead of setinputmanager ( )
refactor hash code field setting logic in UniverseBuilder . java for clarity and ensure offset validation to improve code readability and maintainability
remove deprecate block mesh generation
[ flink - 18552 ] [ flink - yarn ] change yarnapplicationmasterrunner to use localkeytabpath instead of
[ core ] add empty word option
fix write _ commit _ log when push view replica update
disable web sharing by default
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to validate batching functionality to ensure proper handling of posts
added handling for EntityExistsException when persisting items to improve error logging to differentiate between entity persistence errors
deprecated the ` format ` method in ` CucumberOptions ` and updated plugin handling in ` RuntimeOptions ` to ensure compatibility with the latest Cuc
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary functionality
simplified back key logic in ExtendedEditText . java to improve code readability and maintainability
updated the capacity calculation in AbstractStringBuilder and added a new Capacity class for testing to enhance capacity management and improve test coverage for StringBuffer and
replace goHome ( ) method with onNoteSaved ( noteTmp ) in DetailFragment . java to improve note saving functionality
add support for endnote reference in xwpf , see bugzilla # 55248
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent to enhance event details for better traceability
added a test method to verify the version of the GDAL library to ensure compatibility with the latest version of gdal functionality
added a new file ` Lifecycle . java ` to implement network error handling in the system to enhance user experience by managing network -
- deviantart ripper no longer crash on 404 error
removed unused imports and simplified the for loop in RocketFigure . java to improve code clarity and reduce unnecessary debugging output
improve performance of pjogl by not use glcopy
auto - select offline when create a flutter project ( # 643 )
refactor DiskDocValuesConsumer to replace PackedInts . FormatAndBits with BlockPackedWriter and streamline value writing process to improve performance
( chore ) camel - defaultroute : use a sortset instead of an arraylist to preserve order
removed unused imports and streamlined data handling in GoAwayTest . java to simplify code and improve readability
added support for setting properties for map fields in ` ReflectionUtils ` and created a new ` FluentSetterBean ` class to enhance flexibility
updated the ` post ` method in ` BlockingHttpEndpoint ` to return a ` HttpResponse ` object instead of a generic ` ListenableFuture
updated file sorting logic to use a dynamic folder path instead of a hardcoded value to improve flexibility and maintainability of the file sorting process
print lastappearedtasktargetid instead of lastappearedtasktarget in log
added new boolean flags and setter methods for image scaling information in RtfDocumentSettings . java to enhance image rendering options for PDF generation to improve flex
updated the logic for adding paths to columns based on aggregation parameter to enhance flexibility in handling aggregate functions
updated Nested2 and Base classes to extend WithNestedTests . AbstractNestedTest and added cleanup method to improve test structure and resource management during tests
added functionality to select and update the xCapEnableBox based on the XCAP registration status to ensure the user interface reflects the correct configuration settings for
ww - 4237 add option to not throw servlet exception
added a method to stop text editing in CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to handle finishing text editing to improve
nifi - 1067 : fix npe in controlrate when grouping _ attribute be null
modified the ` showDialog ` method to distinguish between creating a new component and adding a new preset to enhance user experience by allowing the dialog
added error handling and synchronization to the ChatAnnotation class to ensure thread safety when sending messages to the client
added a check to ensure the test runs only on Windows to avoid running tests on non - Windows platforms
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the transaction isolation level configuration to enable snapshotting of the database for testing purposes
replace direct addition of newRecids to newRecids with a wait loop for offering a new recid to improve thread management to ensure proper handling
replace jrecompat with java . util . zip in favor of java . util . zip
added a null check for the command class before creating a new instance of ` RegisteredServiceImpl ` to ensure that the command class is set before use
set default disk _ failure _ policy to ignore instead of best _ effort
remove this ' public ' modifier from the rip ( ) method and make it package - private .
[ java ] filter out 127 . 0 . 0.1 a a valid ipv4 address .
removed the method setJobIdentifierFactory from SimpleCommandLineJobRunner to simplify the class implementation
updated import statements for AutoRebalanceStrategy and added ClusterDataCache to computePartitionAssignment to ensure compatibility with the latest Helix API changes
[ java ] adding auto - remove option to allow container to be remove .
[ java ] refactor defaultselenesecommand to support pipe - separated input
attempt to fix flaky test
updated schema reference keys in ModelResolver . java to improve clarity by using descriptive constants instead of hardcoded strings
updated the ` EntityDeletedEvent ` class to use ` JsonUtils . writeValueAsString ( ) ` for serialization and improved data handling to enhance
added a constant for " gop " in FormatConfiguration and integrated it into DLNAMediaInfo and LibMediaInfoParser to enhance GOP support
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing behavior of different class types
mondrian : fix concurrency issue in parseconfigutils
refactor operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper release of resources to prevent potential memory leaks during operator execution
simonstewart : unignoring a test that break the build .
added @ return annotations and changed the return type of getSystemBars method from String to Map < String , String > to Map < String , Object >
do n ' t add dead bug to projectstats
updated the color used for displaying disabled text in the ImportPanel based on the Look and Feel to enhance the visual appearance of the latest release
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a future date in ScheduledAction to handle empty recurrences and ensure correct scheduling execution time
replaced upload button assignment with action menu for single upload functionality to enable users to upload via a single upload action
refactor multiple classes related to message expression evaluation to improve code organization and maintainability
added InputStream handling to loadExchangeMetaData method in MeXBTExchange and RippleExchange classes to enhance metadata loading functionality
added a custom SerializableSerializer for Hadoop Writable types in CrawlDbReader . java to enable proper serialization of Hadoop Writable types in JSON
remove unused test class
added configuration pid for mdns discovery service
fix npe in chatviewerfragment when there be no message
fix wrong forkjoinpool usage in test
removed assertions for DATANODE and NAMENODE roles in RoleCommandOrderTest to ensure correct handling of dependencies for DATANODE and NAM
added a method to restore local information from table information and refactored the writeObject method to enhance clarity and maintainability of the code
[ hotfix ] fix checkstyle violation in vmutils
added transformation logic for spriteBatch in BitmapFontTest . java to ensure proper sprite positioning during rendering
[ flink - 20536 ] [ python ] [ table - planner - blink ] fix the bug that streamphysicalpythongroupwindow
no need to track pending echo since it ' s already mark a alive .
do n ' t report unreachable token owner when gossip be down
mondrian : fix integral [ f ( x ) ^ 2 , x ^ 3 , y ^ 3 ] to not change to multiplication
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure correct content type is used based on saved state
refactor display variable declarations and initialization in XToolkit . java to improve code clarity and ensure proper handling of the display variable
[ minor ] fix typo in comment
replaced synchronized lock implementation with ReentrantReadWriteLock for improved concurrency to enhance thread safety and performance in concurrent scenarios
added a test for reading an identity provider in a specific identity zone using the Zones token to ensure that the correct behavior of the identity provider
[ change ] pointintimetrigger now return null if the timestamp be null .
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 6088 ] optimize rebalance push rebalance ( # 6088 )
chore ( core ) : add configurable property to control detached mkdirs
[ java ] add a test for when follower be go to restart .
change default label from [ authors3 ] [ year ] to [ auth ] [ year ]
refactor DBinaryDescription and DLibraryDescription to utilize CxxPlatforms and ImplicitDepsInferringDescription for improved platform dependency management to
refactor GoogleTTSService initialization and disposal logic to ensure proper cleanup of OAuthClientService and improve resource management
camel - 16400 : fix genericfileoncompletion to not delete the complete file
added reopenReaders configuration to SolrConfig and updated SolrCore accordingly to allow dynamic reopening of reader files based on Solr configuration settings
add dialect version to mapparser . xml ( part 4 )
added methods to retrieve current date and timestamp in the Update class to enhance functionality for handling date and timestamp types in MongoDB updates
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest . java
refactor Condition from an abstract class to an interface and update related method implementations to enhance flexibility and maintainability of condition management
replaced TermQuery with ConstantScoreQuery and updated search query implementation to use MatchAllDocsQuery to improve query performance and accuracy in testing
removed several unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added a method to provide direct nearby upload preferences in CommonsApplicationModule to enhance user experience by providing shared preferences for uploads
added support for handling " SYSIBM " and " SYSDUMMY1 " in the parser and mode classes to enhance compatibility checks
refactor logging statements for improved readability and consistency to enhance maintainability and clarity of log messages
patch from josh from bug # 56904 - add ability to add property to poixmlproperties , see bugzilla 56904
[ geot - 5904 ] do n ' t ignore nan for infinity no data
refactor CliDriver and SessionState to improve error handling and return values to enhance code clarity and ensure proper resource management during execution
refactor MockRestAdapter to use rx . schedulers for HTTP execution instead of java . util . concurrent . Executor to improve code read
added a default method ` selectByRuleIdSet ` and a new method ` selectByRuleIdSet0 ` to ` RuleConditionMapper ` ,
added a method ` addExitDescription ` to ` ExitStatus ` and removed stack trace printing from ` AbstractJob ` and ` AbstractStep `
fix right _ click for multiblock that be not the minecraft player
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity and consistency in naming conventions
removed unnecessary import of collections in PlotConfiguration . java to streamline code and improve readability
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` for better clarity and functionality to
replace params . getBuildTarget ( ) with nativeLinkable . getBuildTarget ( ) in PythonUtil . java to ensure the correct build target is used for
updated parameter name from ' arrayValue ' to ' values ' in the ofArray method to improve clarity and consistency in method naming
added a null assertion for the message in AdvServiceTest to ensure that the message is correctly retrieved from the service
updated key handling and conversion logic in MappingMongoConverter . java to improve clarity and correctness in key processing logic
updated Timber logging statements in NearbyMapFragment . java to improve clarity of log messages for better debugging
( chore ) camel - base - engine : fix wrong key of deprecated option
refactor FuzzyLikeThisQuery to directly use terms from MultiFields and improve query handling to enhance code clarity and maintainability by
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for tabular list representation to enhance flexibility in handling app link generation based on
createmissingidentities : use dspace . identifier . factory instead of dspace . utils . dspace . utils . dspace
updated the method calls to use the length of the buffer instead of the byte length to ensure compatibility with the buffer ' s length method
changed the getDisplayScript method from an abstract to a concrete implementation to provide a default implementation that returns null for the method
replaced occurrences of keyToPress and keyToRelease with sequence variables in RemoteWebDriver . java and updated ignore annotations in BasicKeyboardInterfaceTest . java to
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added synchronization and null checks in NetworkConfigurationWatcher and NetworkManagerListenerImpl to ensure proper waiting behavior when no active interfaces are available
refactor HSSFWorkbook to read embedded objects more efficiently using a dedicated method to improve code readability and maintainability by separating container types
removed import of Shdr from ShaderNodeLoaderDelegate . java to streamline dependencies by eliminating unused imports
rename hostParams to roleParams for consistency to improve code clarity and maintainability
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font properties
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourglass . java ` to
refactor LiveTvGuideActivity to use a local Calendar instance for current guide start time to improve code readability and maintainability by reducing
updated method invocation in MockGateway and added new classes CommonParentTest , ChildA , ChildB , and Parent to enhance method accessibility
add lib freetype and fontmanager to presets for jreutils
fix power ( ) for multi - variable function
loop safepoint elimination : add guard for non - overflow guard .
fix a bug in typeframemodelingvisitor that could cause type analysis to fail
added a new ` LocalizedString ` class and refactored several methods in ` Attr ` and ` Resolve ` classes to utilize it
added a boolean property ` disableClasspathSearch ` along with its getter and setter methods in ` ServerConfig . java ` , and modified the condition in
make dataline fields final and use arrays . copyof ( )
changed the default number of retries from 0 to 2 in Reference . java and updated the default value of retries in AnnotationPropertyValuesAdapterTest . java to
added JSON file handling for settings in TexturePacker to allow users to specify settings for processing input files
added views for uploaded images and wiki text in AchievementsFragment to improve user experience by providing visual feedback during upload process
added logging calls for annotation processing and processing rounds in TranslatingJavacPhaseTracerTest . java to enhance debugging capabilities during the tracing phase to
updated the URL generation in CategoryInterface . java and added a new private class CategoryInfo in MwQueryPage . java to enhance category information retrieval
swapped the presence of mandatory fields for username and password in AuthzAuthenticationRequest to ensure consistency in validation logic
added accessibility support to TaskbarStashController by utilizing the AccessibilityManager to enhance accessibility features for improved user experience
added a condition to check for the presence of the ' ^ ' character in the signature to ensure proper handling of the ' ^ ' character in the signature
added tests for generics and enum stubbing in StubJarTest . java and modified access flags handling in ClassVisitorDriverFromElement .
replaced direct assignment of ' in ' with ` Objects . requireNonNull ( in ) ` and added null check in ` LowpassIntervalsSource . java `
added tests for the entry set iterator behavior to ensure that the iterator correctly handles UnsupportedOperationException and NoSuchElementException
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization and deserialization
updated image creation time from milliseconds to seconds in ImageData . java to improve accuracy of image creation time representation
mondrian : update singularws to use new locus command
added key deletion for private and public keys in AccountRemovalJob to ensure data integrity by removing sensitive keys during account removal
do n ' t set ` ` connection : close ' ' header when use pool connection
do n ' t trigger mapcontainer init if there be no interceptor or litemember join . fix # 1387
no effective change - remove dead code
removed the spillEnabled parameter and related checks from several classes in the HybridHashTable , BinaryHashTable , and LongHybridHashTable files to simplify
refactor EnvironmentVariableHelper to improve environment variable access to enhance flexibility by allowing dynamic configuration of environment variables
fix checkstyle issue with import
added SerializableMode import and modified a closing brace in PluginSwitch . java to enhance mock serialization handling and improve code clarity
added annotation processing for field injection point and modified error handling in AbstractBeanDefinition to improve code clarity and ensure proper handling of nullable field injection points
added isolation level support to the parser and mode classes to enhance SQL query flexibility and compatibility
replaced direct references to HiveConf with static final constants for transport and HTTP paths to simplify code and improve maintainability
added an implementation of the ` isCacheable ` method in ` GlobalOrdinalsWithScoreQuery ` class to disable caching for instances of ` LeafReaderContext
added a new file TestStrangeControl . java that contains a simple thread executing StrangeControl . java to test the functionality of StrangeControl .
updated the file extension from " . json " to " . jsfile " in JsFile . java and JsLibrary . java to ensure the correct file
added selectionStart and selectionEnd variables to ShadowEditText to provide functionality for managing selection indices in the ShadowEditText class
updated the ` startGRPCServer ` method to return a ` Closeable ` and improved server shutdown logic to enhance resource management by ensuring proper shutdown
added a new method ` use ( String path , Class < ? > routeClass ) ` and updated the ` Router ` and ` Jooby `
added a null check for fst in FreeTextSuggester . java to throw an IllegalStateException if lookup is not supported
updated newline handling in ` T4975569 . java ` and improved URL handling in ` T6729471 . java ` to ensure consistent
added functionality to load and utilize an ABI writer class to enhance the processing framework ' s ability to handle ABI writing operations
suppress warn about booleanmethodisalwaysinverted
check if the thread have be stop and log a warning if it happen
[ hotfix ] fix checkstyle violation in energyendpointer
refactor component preset selection logic to improve clarity and efficiency to enhance readability and maintainability of the code
fix checkstyle issue after review
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadataFactory `
deleted the files Constants . java and DistanceUtils . java to remove unused or redundant code
replaced the diskDelimiter parsing logic with a more straightforward substring extraction to improve code readability and maintainability by simplifying the key processing
initialize fallback class loader at build - time .
fix ( openshift client ) : read inline rolebinding directly from resource
added logging statements for various session cookie configurations in UaaSessionCookieConfig . java to enhance visibility into cookie configuration details for better debugging and monitoring
updated file name generation logic in HotseatFileLog . java to ensure consistent retrieval of log files based on the current year
fix typo ( wrong variable name )
added error handling for invalid options in ` JavapTask ` and created a new test class ` T8033711 ` to improve robustness by
removed redundant calls to collect ( toList ( ) ) in multiple Java files to simplify code and improve readability
updated logging level from error to warn and modified error handling logic in TaskDriver . java to improve error handling and ensure proper shutdown behavior during task fetching
[ flink - 20536 ] [ network ] enable tiered storage in the input gate spec if enable .
( chore ) camel - mailgrid : fix code analysis issue
updated LwjglApplication instantiation in CubocDesktop . java to enable GL20 rendering for improved performance
removed unnecessary check for VoidType in method return type handling to simplify code logic for better readability and maintainability
replaced DefaultSourcePathResolver with SourcePathResolver and updated method signatures in OutputMacroExpander . java to enhance code clarity and maintainability by
fix log exception sql test for light job
added a condition to check for non - empty file paths in MergeWordsListTask . java to ensure the input file path does not contain duplicate words to
[ # 7788 ] instructor : add instructorfeedbacksessionresultsbundle and instructorfeedbackresponseloadpagedata ( # 7889
removed unnecessary whitespace in the Container class to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java that implements a class to test escape method behavior between instances of an object and its saved value to ensure
replaced direct stream skipping with Apache Commons IO utility methods to improve code readability and maintainability
http : / / code . google . com / p / mybatis / issues / detail ? id = 353 : add interceptor to
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of error conditions
hbase - 20513 lirblockcache # removeblock should return 0 on eviction failure
removed unnecessary check for task count in RecentsView . java to simplify code and improve readability
added instance config change listener in HelixBrokerStarter and increased sleep duration in HelixServerStarter to improve responsiveness during broker configuration changes
added CoinmateMetadataServiceRaw and CoinmateStatic classes , and implemented remoteInit method in CoinmateExchange to initialize exchange metadata
[ mng - 6670 ] add warn when system path point to dependent project
pdfbox - 4892 : do n ' t overwrite key if they differ
[ beam - 8470 ] allow display data to be set via ptransform
replace DefaultSubject with assertThat for null checks to enhance readability and maintainability of the test code
updated the security property to disable MD2 and RSA algorithms to enhance security by reducing unnecessary certificate path validation
fix error message when sub - commands and option ca n ' t be create .
updated module - info . java files for mmm and ppp modules to improve module dependencies and organization
added error handling for unknown server errors in IOSImplementation . java to improve robustness by providing meaningful error messages for server issues
None
refactor exception handling and improve error logging in FileSinkOperator . java to enhance error management and logging clarity during file operations
added diagnostic output to SchemaGenerator . java to enhance debugging by providing diagnostic information during task execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to use ` OptiqSemanticException ` to improve error
updated test cases in DataSourceMonitorTests . java to improve test coverage for database monitoring functionality
added a set to track loaded resource paths and updated scanning logic to prevent duplicate resource paths to improve performance by avoiding redundant scanning
[ hotfix ] [ test ] fix npe in testserviceutil
added null check for response object and improved response handling logic in RoutingInBoundHandler . java to ensure robust handling of null responses and enhance
added a nullable natIp field to EkeyConfiguration and updated logging in EkeyUdpPacketReceiver to include the source IP address to enhance flexibility
[ hotfix ] [ connector / streaming ] move arrowbytebufallocator from baseallocator to allocator
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added checks for header and body lengths in HttpConnection and implemented a new test for an expectation with body in RFC2616BaseTest to ensure
[ java ] fix race condition in multitimeout . request ( ) .
exclude starved sstables when decide how to compact
added a test annotation to TestOrcTimezone1 . java to facilitate testing of the OrcTimezone functionality
improve performance of debug . parsemetricandtimersystemproperties ( )
updated JSON handling in PinotSegmentRestletResource to use objectToString method and added error handling for JSON processing to improve robustness by catching JSON
modify the default renderer retrieval logic in JTable . java to handle null and non - object class cases to ensure proper rendering of objects in J
check for existence of shell before add it to args
updated the deletion limit of feeds from 10 to 1 to allow more data to be deleted without unnecessary subscriptions
replaced ` LinkedList ` with ` LinkedHashSet ` and changed the data structure for ` testInstances ` from ` List ` to ` Set ` to improve performance
refactor FieldMonitor class to improve code readability and maintainability
updated BTreeMapTest configuration by modifying method calls to enhance clarity and functionality of the test execution
modified the iterator initialization logic in SortedIntList to return an iterator and added a reset method to reset the iterator to ensure proper resource management and prevent memory
unregister the object name in DefaultRemoteProxy and modify exception handling in JMXHelper to improve resource management and error handling clarity
[ hotfix ] [ rocksdb ] increase default writebuffer size from 4mb to 64mb for on - disk file conversion
updated constructor parameters in Style . java to simplify the constructor call and improve readability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message arguments without encoding
[ beam - 8470 ] remove json graph porting from samza runner
* helloaudio now use mouseinput . wheel ( instead of vector3f . zero )
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new method ` convertToMongoType ` to various converter classes and modified the ` convertToMongoType ` method to accept a ` TypeInformation
apps - 1010 do n ' t replace i if it ' s complex
simonstewart : fix a bug in sendkeys to the active element that would cause an exception when send empty key .
added a method to get a scaled version of a BufferedImage to enhance image processing by allowing dynamic resizing based on specified dimensions
removed extensive engine argument checks from DBMaker to streamline code by eliminating unused methods
update shift state when return from keyboard
removed the handling of the DETECTED _ ACTIVITY constant and updated related logic across multiple classes to streamline activity detection handling and
updated import statements to reflect the new package structure for ExtensionConfig to ensure compatibility with the latest Jetty package organization
removed import of Buildable from AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to track unused variables and methods to improve code clarity and maintainability
improve error message for invalid upgrade protocol
corrected spacing in the blockMode assignment to improve code readability and maintain consistency
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
updated permission check for plot ownership in Merge . java to ensure correct ownership verification before proceeding with the merge operation
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code and improve maintainability
pdfbox - 4892 : fix unit selection test , a suggest by valerybokov
refactor stripQuotes method in BaseSemanticAnalyzer and PartitionSpec to use PlanUtils for quoting quotes to improve code maintainability and reduce duplication
refactor rendering handling in DLNAResource and update rendering logic in Request classes to improve rendering management and ensure proper resource updates
include all repository from project , not just resolutiongroup .
camel - 8470 fix the unit test error of camel - cxf
refactor PhysicsClient class to improve code readability and maintainability
added JUnit Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failures
added a new File object instantiation to ensure the correct file is created for the specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to provide a placeholder for future implementation
check that uid be non - null before use it in channel . createchannel ( ) ( # 4078 )
added logging functionality and a new utility class for stack trace handling to enhance debugging capabilities by providing insight into transaction calls
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary test execution
mondrian : fix for mondrian - 1243 , where an extra paren be present in the expression
updated SQL query to use a Multimap for storing configurations instead of a Set to improve organization and clarity of configuration selection logic
[ hotfix ] [ runtime ] add jdk . internal . misc . innocuousthread to unsafe automatic processor suppression
refactor JsonTreeReader to improve exception handling for unexpected JSON elements to enhance clarity in error reporting when reading JsonElements
added command option " -- " with dash arguments in TestCommand . java and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest . java to ensure
added two new methods ` dedup ` in ` SolrDeleteDuplicates ` and ` indexSolr ` to ` SolrIndexer ` for processing solr URLs to
[ hotfix ] [ examples ] make streamsqlexample use blink planner
added clearDatabase ( ) method to MssqlIntegrationTest . java to ensure the database state is reset before use
improvement to the progress bar to make it more responsive to the user
added a check to ensure the parent file exists before processing to prevent potential errors when the parent directory does not exist
add convenience method for write ( outputstream ) and writeandclose ( outputstream , outputstream ) in ioutils .
add newlines to print statements in JavaBuild . java to improve formatting of output for better readability
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter and setter methods in ` ITextRenderer ` to
modified the ` apply ` method in ` CustomQueryFilterFactory ` to improve user search query handling and updated test cases in ` TestLdapAt
added default ports handling to routes in various classes to ensure default ports are applied to route configurations
updated SnmpTargetHandler to check if the handler is initialized before updating its status and refactored related tests to improve code reliability and
update comment to clarify that only instructor with submit privilege will be included in the list
added @ Incubating annotation to AvailableSettings class to indicate that the class is outdated and may be removed in future development
refactor path handling in FileResolverImpl and add WarFileResolverTest to improve clarity and maintainability of file resolution logic
updated the format of newFlushedSize to include docstores to enhance clarity in logging output
fix typo in dirt block output ( # 1873 )
corrected the spelling of " stripWhitespaceX " to " stripWhitespaceY " in ImageProcessor . java to ensure accurate processing of whitespace settings
increased the timeout duration for lazy - loaded locks from 30 seconds to 60 seconds to allow more time for operations to complete before timing out
updated the deserialization method in TsFileSequenceReader and added a test for measurement chunk metadata list iterator in MeasurementChunkMetadataListMapIteratorTest to ensure
no effective change - code cleanup - remove unused parameter
added import for java . awt . Dimension and modified preferred size setting for the pane in NavigationShareTab . java to improve UI layout by adjusting
replaced OffsetAttribute usage with State management in BeiderMorseFilter . java and added a test for KeywordAttribute in TestBeiderMorse
updated UpnpAudioSinkReg , UpnpHandler , UpnpRendererHandler , and UpnpEntryQueue files to improve code organization and maintainability
fix warp lens lens use blockpos .
updated JsonTest . java to include dynamic tests for Json . toJson to enhance test coverage for JSON serialization functionality
refactor MutableContextDataSupplier for improved clarity to enhance maintainability and readability of the code
changed exception handling from Exception to Throwable in CoreContainer . java to improve error handling by logging a warning when loading the LogWatcher fails
added https parameter to KubernetesMockServer constructor to enable HTTPS connections for enhanced functionality
convert math . value to a unary math intrinsic node before it be send to the graph .
updated DefaultServlet to handle multiple HTTP method requests more accurately to improve response handling and ensure correct status codes are returned
make lat _ long _ format locale - sensitive
replaced exception throwing for BAD _ REQUEST with setting a response in ShowFileRequestHandler . java and added a new test case in ShowFileRequestHandlerTest
added try - catch functionality to handle exceptions using try - catch blocks in ReflectorClassWriter to enhance error handling by capturing and managing
added a clamp method to the Vector and Vector2 classes to enable clamping between specified min and max values in the Vector2 class
added OAuth2 client details and modified access token creation logic in ChainedTokenGranter . java to improve token handling and ensure proper authentication flow
refactor BC _ instanceof method implementation to improve code readability and maintainability
remove call to setsaveflags ( save _ all ) , use logger instead
updated UaaUrlUtilsTest to use JUnit 5 annotations and modified setup / teardown methods to improve test structure and compatibility with the Pollution
hhh - 13414 use basicdomaindomaintype instead of type parameter in nativequery
added caching mechanism for font anti - aliasing information to improve performance by reducing redundant calculations
use intarraylist to improve performance
simonstewart : fix the remote webdriver to work with the safaridriver
[ hotfix ] fix checkstyle violation in brokerrequestutils
fix injectorbuilderimpl to handle duplicate object
updated the method calls in RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use getBasePath ( ) instead of getAbsolutePathToBuildFile (
improve handling of null value in echomessage to avoid npe
fix jabber keepaliveteranager leak .
updated the DEFAULT _ LOAD _ FACTOR value from 0.67F to 0.67 in IntHashSet . java to adjust load factor for impro
added a method to retrieve all data type physical variations in VectorizationContext and updated related classes to utilize this method to improve data handling
move some translator class to correct package
refactor conditionals in OverviewState . java for clarity to improve readability and maintainability of the code
added the @ Entity annotation to BaseActivityEventEntity . java to enable the use of entity - specific data in the database operations
added tracing for various touch event states in TraceHelper to enhance debugging capabilities during interactions
added a new file ` InvalidOptions . java ` that tests the usage of the ` - h ` and ` - b ` options to ensure
add log for inconsistent number of display
refactor OAuth20UsernamePasswordAuthenticator to centralize client ID and client secret extraction into OAuth20Utils to improve code organization and maintainability by
change the default value of the _ unwrapServletException variable to true to enable the unwrapping of servlet exceptions in error handling
updated shortcut status and infoUpdated flag in PackageUpdatedTask . java to ensure proper state management during shortcut updates
camel - 16400 : fixed the unit test error of camel - seda
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to Kernel and App classes to facilitate batch updates in the application
added HttpClient setup and configuration to ThirdEyeApplication to enable HTTP client integration with the application using Dropwizard ' s HttpClient
added sorting functionality to JobInstanceFetchRequest and JpaJobPersistenceImpl to enhance job execution control by incorporating sorting capabilities
modified the CryptoFacilitiesTradeService to correctly handle canceling orders by retrieving the currency pair from open orders instead of using a specific order method to improve
ggb - 2118 hide the keyboard when click on algebra view web ( web )
sulong : use native function pointer for unsafe pointer move .
removed unnecessary line breaks in the bindLdapAuthenticationHandler . java file to improve code readability and maintainability
make block tooltip configurable ( undo / redo )
updated DefaultDateTypeAdapter and GsonBuilder to support customizable date and time styles to enhance flexibility in date formatting flexibility in
updated the playerSet format to include parentheses around the UID to enhance the output format for better user experience
added a check for empty lists in the List class to prevent potential ClassCastException when processing empty input
added handling for CommandException in ParametricCallable . java to improve error management by ensuring wrapped command exceptions are wrapped in wrapped command exceptions
updated the ` getLikeExpression ` method to include a boolean parameter and adjusted related logic to handle like expressions based on the ` isLike ` flag to
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to standardize method invocation across components
added locale handling in the runChild method of LuceneTestCase to ensure default locale is set correctly based on available locales
refactor multiple Java classes to improve code organization and maintainability
refactor context handler initialization into a separate method to improve code readability and ensure type safety
add a test case for osgi blueprint
updated assertions in TestExecuteStreamCommand to check for presence of error attribute instead of substring to improve accuracy of error attribute validation in tests
refactor ` returnTypeSubstitutable ` method to include a ` Warner ` parameter and simplify return type checks to enhance type safety and
added throttleType enum and updated throttling logic in TestExecutor . java to support different throttle types for template processing
removed unnecessary variable assignment for ' pixel ' in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to streamline code
refactor Annotation and AnnotatedElement classes to improve code readability and maintainability
added a new interface ` Model ` and modified ` Sheet ` , ` Workbook ` , and ` Workbook ` classes to implement it to enhance
( chore ) camel - http : use constant instead of regexp
added a configurable entity manager clearing feature in JpaItemWriter and JpaItemWriterBuilder to allow flexible configuration of entity management behavior
added null checks for shortcut installation and intent in multiple classes to prevent potential NullPointerExceptions during shortcut installation
make triggerer pattern trigger thread - safe
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange context
added null checks for column readers in OrcEncodedDataConsumer and enhanced null checks in EncodedTreeReaderFactory to improve robustness and prevent potential
added null check for segment files in SegmentInfos . java and implemented a test for opening a reader after deletion in TestIndexReader . java to ensure robust
fix bug in elasticsearch integration test ( # 2441 )
refactor percent value calculation in DeviceHandler . java to handle negative percent values more accurately
updated limit validation to allow zero to improve robustness by preventing invalid limits
camel - 15836 : camel - yaml - dsl - optimize route configurer to reduce object allocation .
improve performance of hl chunk source
updated test classes to extend from LuceneTestCase instead of TestCase to standardize test structure and improve compatibility with the Lucene framework
[ hotfix ] [ stream ] fix the bug that keyedstreamoperator do not set the next input in outputhandler .
area and line shaders shaders now set bitmap shaders to the origin of the way to avoid unnecessary null check
added dbExists ( ) method to check for the existence of a blockchain to ensure that the blockchain is only created when it doesn ' t already
trim whitespace from the matcher group when retrieving the value to ensure consistent formatting of input values
set the socket ' s async settings to false in Http11AprProtocol . java to ensure that the socket ' s asynchronous behavior is consistently managed
bugfix : last divider should be center on the left , not on the bottom
added health check metrics in ControllerMeter and updated PinotControllerHealthCheck with a new health check method to enhance the metrics tracking for service status and improve
hide the shared avatar view in LocalFileListAdapter to improve user interface by hiding the avatar option
[ web ] remove @ clientbundle . source ( ` ` mebis / web / resources ' ' ) from mebisresources . java
[ java ] use less than or equal operator to compare argument in place .
added logging level checks in LogInterceptor . java to ensure commands are only executed when logging is enabled
replaced CountDownLatch usage with assertWaitUntil for span assertion to simplify code and improve readability
modified the Locale handling in QueryParser and added getter / setter methods for locale in QueryParser to enhance flexibility in locale configuration
use a list instead of an array for entry type ( # 3995 )
jbrules - 2088 : fix test case and add test case for betanodeconstraint
added a new class ` OcspUnauthorized ` and modified existing OCSP response handling in ` PKIXRevocationChecker ` and ` OCSPResponse ` to en
added server state management in SSL . java to ensure proper handling of server failure scenarios
added support for tracking open connection counts in SourceCounter and AvroSource classes to enhance monitoring capabilities for the source connection status
add executionstrategy . fields ( list < graphqlfielddefinition > ) to allow override of field definition
refactor createDefaultJavaPackageFinder method to return srcRoots directly to improve clarity and encapsulate functionality for better maintainability
replaced OutputWriter with PrintWriter for improved formatting to enhance readability and maintainability of the code
fix filesourcetextlinesitcase to work on window
added support for DataTable in JRubyStepDefinition to enable conversion between Java and Ruby data structures
updated visibility settings for author in SearchImagesRenderer . java and modified API query parameters in ApacheHttpClientMediaWikiApi . java to enhance visibility
doc ( regen ) : fix typo in readsentimentdataset javadoc
improve error message when parse formula fails
added binding functionality to WebSocketClient with configurable socket address to enhance flexibility in connecting to the WebSocket server
[ java ] close cluster medium driver in consensusmoduleharness before it be close .
simplified the size setting logic in WidgetGroup . java to improve code readability and maintainability
changed the type conversion of sessionFixationAttribute from a raw boolean to a Boolean object to ensure proper handling of session fixation settings
fix crash when switch la mode
danielwagnerhall : implement a linear backoff mechanism for chrome .
added HTTP method and HTTP route handling to the ` TraceExchangeFilterFunction ` to enhance the functionality of the web client by allowing dynamic route
fix possible integer overflow in precompactedrow
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added InvalidRenderIntentTest . java to improve code
[ # 7743 ] contribution question : improve template ( # 7843 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java ` to ensure
added SuppressFBWarnings annotation in KafkaExactlyOnceSink . java and removed Serializable interface from KafkaRecord . java to suppress findbugs warnings and simplify
added PostgreSQL connection support in PooledConnectionImpl and implemented a test for PGConnection method in BaseDataSourceTest to ensure compatibility with PostgreSQL ' s
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging levels from warn to info and changed log level from warn to trace in TokenAuthenticationHandler . java to provide clearer feedback on service configuration issues
marked the Hazelcast class as deprecated to indicate that the class is outdated and should no longer be used
added handling for UNLIMITED _ KEY _ JCE _ REQUIRED in AmbariManagementControllerImpl and refactored related methods in
updated NamedListCodec to support different iterator types and added a test for iterator functionality to enhance functionality and ensure proper handling of iterables and
fix nullpointerexception when assign completely lose partition
added schema inclusion rule to ApiExample to enhance access control for public schemas
updated the expected value from 3.0 to 7.0 in the StreamExpressionTest to ensure the test reflects the correct expected result
refactor coordinate sequence handling in SDO . java and add new test cases in SDOCreateTest . java to ensure correct handling of closed
added methods to retrieve base name and dimension count in the ConstantPool class to enhance functionality for better pool management
bug 66425 : add method to set debug evaluation output
test : migrate ` testmodule ` to junit 5 ( # 4382 )
updated ExoPlayerProfile instantiation and modified condition for live TV playback in PlaybackController to ensure correct playback behavior based on user preferences
added a return statement in DynamicStyleBar . java to ensure proper exit from method execution
[ hotfix ] add log for repl dump state change
refactor ReactiveAuthorizationManager to improve code organization to enhance maintainability and readability of authorization logic
updated condition to check for boolean type in MethodEmitter to ensure compatibility with both object and boolean types
truffle : make llvmpressressnuller public again .
refactor multiple Java classes to improve code organization and maintainability
add test case for caffeine cache default configuration
added a method to calculate the bounding box of a mesh to improve geometric bounding box calculations based on vertex attributes
add -- target - hash - function option to targets command
refactor DefaultConfigurationProperties to improve code readability and maintainability
added high light color and alpha settings in ListViewMultiChartActivity , modified highlighting behavior in BarChart , and imported necessary graphics classes to enhance visual feedback
[ hotfix ] [ runtime ] remove unused assignment in clusterplanrouter
[ hotfix ] [ test ] fix test instability in infinispan producer
added locking mechanism in MavenDependencyFetcher and improved dependency resolution in MavenDependencyResolver to enhance concurrency and reliability of dependency fetching
modified the fragment shader definition in SpriteBatch . java to include an optional precision specification to enhance compatibility with OpenGL ES features
hbase - 26936 fix findbugs warning in hbase - rsgroup module
added a try - catch block to load the JSP page class and changed log level from warn to debug in TagLibConfiguration . java to improve error
updated CustomAnalyzer to handle default match versions and introduced a version aware token filter in TestCustomAnalyzer to improve version handling and enhance test coverage
added a test to retrieve application info from setPackageArchiveInfo method in ShadowPackageManagerTest to ensure accurate retrieval of application information from package archive information
replaced direct method invocation with MethodUtil . invoke for consistency and access control to enhance code maintainability and ensure security compliance
added event imports and modified progress listener to include progress updates in GradleBuildService to enhance event handling for project configuration and task start events
simonstewart : remove unnecessary sync
fix initialization fail time out bug .
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method to handle HTTP responses to simplify the method signature and
changed the ` isNative ` field to be transient and modified its usage in the ` addEntry ` method to ensure immutability of the ` is
fix typo in exception handler log message
automation : rename ` ruleenablethandler ` to ` ruleenablementactionhandler ` ( # 3971 )
pdfbox - 4892 : fix typo find by codespell on fossies . org , improve javadoc
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager for clarity to enhance readability and maintainability of authentication request handling
updated method names from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and refactored source and sink options handling
added null check for the registrant repository before checking ownership to improve error handling and provide user feedback when the registrant is not found
added support for additional font file extensions ( . OTF and . OTF ) in SunFontManager to enhance compatibility with additional font file formats
refactor type matching logic in AnnotationMatcher to improve clarity and maintainability of type checking to enhance readability and ensure accurate comparison of fully qualified
replace " OFF " with " SEVERE " in Grep . java to improve error handling for severe messages
added conditional checks before logging messages in FaultTolerantChunkProcessor . java to improve logging performance by avoiding unnecessary string concatenation
make surefire plugin ' s includes / excludes default to empty list
added conditions to check if the home intent should move the folder to the default screen when it ' s null to enhance user experience by ensuring the correct
updated maximum bitrate from " 110 " to " 30 " to improve the quality of bitrate configuration
simplified the options retrieval process in CommandLineParser . java to improve code readability and maintainability
trim whitespace from the return value of description to ensure consistent formatting by removing leading and trailing spaces
updated the output filename path in XOMParserTest . java to streamline file handling by removing unnecessary file path concatenation
[ minor ] remove unused process pid logging
added protected methods to retrieve loaded music and sound in MusicLoader and SoundLoader classes to improve access to music and sound data
removed unused imports and added type casting in OnBeanCondition . java to improve code clarity and ensure type safety
added ScreenRecord annotations to RequestPinItemTest . java to facilitate screen recording during tests for issue b / 215673732
make cpu and memory pause button unselected if they do n ' t exist
refactor preferences handling to use a single method for adding accounts to improve code readability and maintainability by reducing duplication
send an available presence to the muc service .
modified StringBuilder initialization to use an initial capacity based on utflen to optimize memory usage by allocating a smaller StringBuilder when utflen is negative
disable statsd export by default
refactor InterruptedException handling to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in serviceticket
refactor SSL connection handling logic in ConnectionCheckOperation . java to improve readability and maintainability of the code
resolve http : / / issues . apache . org / activemq / browse / amq - 2441 - apply patch with thanks to
[ ds - 3952 ] fix xml workflow test and change test expectation
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to PasscodeManager to simplify intent handling for authenticator activity
feat ( template ) : remove deprecation in patternparameterconfigurator . java ( # 2382 )
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check before proceeding with widget initialization to ensure proper handling of
added JUnit Ignore annotation to TestPackedInts . java to temporarily disable the test due to known issue LUCENE - 4488
added a null check for the root variable and collected components from the tabbed pane to ensure safe handling of null values and avoid potential NullPointerExceptions
add a way to update the confusion matrix in the sentiment model
bug 66425 - change variable name to reflect that it ' s ok
added unit tests to validate Bluetooth headset connection states to ensure robustness and correctness of Bluetooth connection handling
fix checkstyle issue in ` propertybindingsupport `
updated the collection of object methods and added a new constant for the finalize method in ResultObjectProxy . java to improve clarity and functionality to enhance
added null checks for Counters object and writer in IntegrationTestBigLinkedList . java to ensure that verification only occurs when Counters object is available
implement cangetinstanceinfo for handle refERRING _ OBJECTS command
updated the setRegisteredServiceFilter method to include serviceId matching check to enhance service filtering functionality
added a null check for the activity before invoking showStorageIssue ( ) to prevent potential NullPointerException when accessing the activity
fix typo in logger name
added getter and setter methods for stringType in DatabaseAdaptor and modified visibility of several fields in JDBCSessionDataStore to protected to enhance flexibility
updated UIMAUpdateRequestProcessorTest to replace the " language : english " field with " suggested _ category : * " and modified the
refactor thread name management by introducing ` updateThreadName ` and ` resetThreadName ` methods to improve clarity and maintainability
refactor TaskletAdapter class structure to improve code readability and maintainability
drools - 3442 fix dmn formula evaluation when use dmn 2.0
texturemap . glflush ( ) need to be call to make sure the texture map creation finish on all system , not just mac
added tooltip text for the ' showCGCP ' checkbox in RocketPanel to improve user experience by providing a more informative tooltip
[ j2kt ] fix bug in interface and enum # create ( ) .
add text and description parameter to hot reload action ( # 5981 )
try to fix problem with spreadsheet label not use the default template
changed BRIGHTNESS _ FACTOR type from int to double to ensure BRIGHTNESS _ MAX remains consistent with the intended data type
do n ' t try to parse history entry if there be no ` ` add to branch ' ' entry
added an ` isAdmin ` parameter to the ` createUser ` method and implemented user list retrieval methods to enhance user management capabilities
added return type validation for indexed and property write methods and improved equality checks in Introspector to ensure proper handling of void return types and
no effective change - code cleanup - remove unused placeholder
renamed parameters in ` Context . java ` and modified return statements in ` Response . java ` to improve clarity and consistency to enhance code read
bump common for fix with sponge builder support .
fix broken test due to change in lifecycleutilstest
added contract type checks and validation for creating smart contracts in Wallet . java and updated GetContractServlet . java to enhance contract validation and
added new package - info . java files for various components under the com . ibm . dtfj and com . ibm . lang . management packages to
refactor the add method in DocumentsWriterDeleteQueue to improve concurrency handling to enhance performance by avoiding unnecessary operations on the tail node
added duplicate file handling in JavadocTool and refactored test method in T7091528 to improve robustness of file parsing and enhance test
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to ensure consistent behavior for IPv6 address
added support for adding new user parameters to the LoginServerTokenEndpointFilter to enhance flexibility in handling request parameters in the login process
added support for the ` ` c ' ' language in the language factory .
replaced direct instantiation of ThreadPoolExecutor with a new utility class MoreExecutors to simplify thread management and improve code organization
added Cache - Control HTTP headers and assertions in ConstraintTest to enhance caching control and ensure proper response validation in the authentication process
improve error log to include exception message
updated HSSFTests to replace AllHSSFUtilTests with TestAreaReference , TestRangeAddress , TestCellReference , and TestSheetReferences
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output before retrieving the class directory to avoid potential NullPointerExceptions when processing output
added ExternalResourceControlPriority settings in Java2DRenderer . java to enhance resource management during external resource resolution
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure robustness by preventing application crashes due to specific font issues
updated HotspotThreadMBean to be final and refactored CPU time validation logic to improve thread CPU time handling and enhance error handling
added a check for empty comments before validating the last whitespace in TabsAndIndentsVisitor to avoid unnecessary whitespace checks on empty space declarations
updated collection rate assertions from 5.0 to 100.0 in TestTriggerIntegration . java and removed logging statement in SimDistribStateManager . java to
updated change set equality checks to be case - insensitive in DatabaseChangeLog , RanChangeSet , and AlreadyRanChangeSetFilter to
implemented the ` getString ` method to return a default value if the key is not found in the map to improve robustness by preventing potential null pointer
added locale - specific date and time formatting based on user preferences in TweetActivity to improve user experience by ensuring consistent date and time display across different locales
return an empty list if there be no active process connection to avoid deadlock
refactor keyboard request logic into a separate method to improve code readability and maintainability
another attempt at fix the classpath issue
make sure point - to - point fix be solve too often
int - 163 add import for message from spring framework
updated SQL queries in PostgresConnector , MapReduceJobHistoryUpdater , and TaskAttempt classes for improved clarity and functionality to enhance
updated file filter handling in AquaFileChooserUI . java to ensure selected filter is validated before applying file filter updates
[ rip - 10 ] fix synchronization issue with rtp extension
replaced ` toString ( ) ` method with ` booleanValue ( ) ` method in ` ArrayPtg ` class and added a new test case in `
( chore ) camel - pg : fix checkstyle violation
refactor variable handling in Java2TypeScriptTranslator for improved clarity and structure to enhance readability and maintainability of the code
added support for auto - increment columns in PostgreSQL by introducing new SQL statements to enhance database schema management for auto - increment operations
updated byte reading logic in DataInput . java to ensure correct handling of invalid byte values and improve performance
removed assertions for vertical and horizontal physical pixel spacing dimensions in ImageParserTest . java to streamline test cases by eliminating redundant assertions
updated parent retrieval logic in Component . java to ensure correct parent context is used
refactor equality check in StandardDiffGenerator to improve readability to enhance code clarity and maintainability
fix engine init in unit test .
added iteration event handling throughout the controller and updated related classes to enhance iteration functionality and improve event firing capabilities
fix potential memory leak
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of temporary logs during recovery
added conditional logic to handle URLs containing " twitter : / / " in BrowserActivity to enable the web view to launch based on the URL format
[ hotfix ] [ test ] make deploymentgrouptest more reliable
updated logResult to reflect a successful log statement to ensure that the log reflects the successful status of label listing operations
increased the maximum number of auto retries from 0 to 25 in RestTemplateRetryTests to allow for more reliable error handling during testing
camel - core - optimize component to reduce object allocation
added functionality to handle the " fraction " resource and its associated converter to enhance resource loading capabilities for fraction resources in the application
added a confirmation check for file writing in BasicFrame . java to ensure that file operations are valid before proceeding
added assertions to ensure groupId , artifactId , and tagGroupId are not null to improve code robustness and prevent potential NullPointerExceptions
ambari - 21174 . do n ' t retry attempt to create table if namespace do n ' t meet table quota limit (
refactor multiple Java classes to improve code organization and maintainability
updated TestFuzzPreLoop . java file to improve performance testing efficiency
added a check to ensure f0 is non - negative before assigning it to 0.0 to avoid potential errors due to invalid float values
updated catalog retrieval logic in SchemaRetriever and added null checks for primary and foreign key columns in TableRetriever to ensure proper handling of foreign
add a getcharset ( ) method to the b2cconverter interface and make it thread safe
added SharedPreferences functionality to allow empty screens based on user preferences
added a warning log indicating the cucumber - needle is deprecated to inform users to migrate to using the newer CDI versions
refactor theme handling in ShadowThemeTest and ShadowArscAssetManager for improved clarity and functionality to enhance code maintainability and
updated Byte Array field mismatch messages to use ` Arrays . toString ( ) ` for better readability to improve clarity of error messages for better debugging
no effective change - remove db migration for now
added support for GETPROXY and SETPROTOCHECK methods in ScriptObject and Global classes to enhance prototype property accessibility in the script engine
updated the randomness in the Collections . shuffle method to include a random parameter to enhance randomness in the randomness generation process
updated the display name logic to differentiate between remote clarification and known remote clarification based on user context to enhance user experience by providing
updated path formatting to use StringUtils to ensure default values are set for path variables
remove redundant closing brackets in multiple Java files to improve code readability and maintainability
change cache backup count check from backup count to total backup count to ensure accurate validation of cache configurations
pdfbox - 4892 : fix typo , a suggest by valerybokov
uidropdown : fix highlighting of highlighted widget
fix checkstyle issue in util / soundutil . java ( # 795 )
refactor ApplePackageDescription and related classes to utilize a new method for retrieving AppleCxxPlatform flavors to improve code maintainability and
fix test break by previous commit
updated method names from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity and consistency in session handling
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a new file TestGetLoggerNPE . java to test the behavior of Logger . getLogger and LogManager . getLogManager to ensure
fixed memory leak in path sharing context
make sure volatile field be always cast to object [ ] . class .
added support for identifying " NEXT VALUE FOR " based on the next value pattern in the NextValExpression class to enhance the flexibility of
add link to the resource bundle documentation .
refactor BoundedLocalCache to improve handling of write buffers and add a new test for clearing pending writes to enhance cache efficiency and ensure
added order direction to QuoineNewMarginOrderRequest and set it in QuoineExchange to " netout " to enable dynamic configuration of order
added boundInitialization method to PropertyDescriptor and created a new Test7192955 class with property binding tests to ensure proper initialization of beans and
added a mode mode callback interface in LwjglGraphics and updated LwjglApplicationConfiguration to handle it to improve flexibility in configuring display mode settings
added nullification for buttonsAwatingRelease in the parent form if it exists to prevent potential NullPointerExceptions during execution
fix wrap width not take into account font size
updated the error message in XSLTErrorResources _ it . java to remove extra quotation marks for consistency
replaced HashMap with LinkedHashMap for paramValues in CustomChangeWrapper and CustomPreconditionWrapper to maintain insertion order to ensure consistent iteration order
danielwagnerhall : use string . format ( ) to avoid quoting .
replaced namespace context retrieval with a direct method call to getNamespace to simplify code and improve readability
added nestedJoins configuration to multiple test classes to enable nested join functionality in tests
server : allow list by root admin , not list by normal
added JavacFileManager support and updated CompletionTaskProcesor constructor to include a cursor parameter to enable better control over the completion processing cursor
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure proper authorization
use hamcrest assertion instead of junit in integration test
use util . createhandler instead of new handler in metadatarenderer and textrenderer
fix ( ilp ) : fix symbol map reader offset calculation
removed print statements for term filters to clean up the code and improve readability
removed the Reflection class and updated imports in Jooby . java and TypeConverters . java to streamline codebase by removing unused reflection functionality
do n ' t wrap threadlessexecutor in threadlessexecutor if it be not a threadlessexecutor
[ java ] do n ' t throw indexoutofboundsexception when format a date string with null value .
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related references to improve clarity and consistency in termin
added a case for WILDCARD in mmm Types . java and created a new class T7034495 . java with generic interfaces A and
replaced ' do ' loop with ' while ' loop in LotsOfEvents . java to improve code readability and maintainability
fix transclusion decision rule for ref & hop
do not print micronaut version in stdout
added unit tests for the " Print _ Area " name record in the Workbooks to ensure that the name definition for " Print _ Area " responds to
modified the creation of MindIcon to include a description if the name does not contain a slash to enhance clarity by providing a default description when
updated onHomeIntent method to include internalStateHandled parameter to enhance home intent callback functionality
refactor dependency tree preference logic in CxxBuckConfig . java to improve readability and maintainability of dependency tree handling
added a method to display files in a specified active tab across multiple activities to enhance user experience by allowing users to navigate files in a specific
updated method names from " $ apply " and " $ applyStatic " to " apply " and " applyStatic " across multiple files to improve clarity
fix arrayindexoutofboundsexception when codeword < 254
updated header and parameter information formatting in SourceBuilder . java to include optional fields and replace " | " with " | - " to enhance clarity
added a call to notifyDataSetChanged in FolderSyncActivity to ensure the adapter reflects changes in data handling
removed the ` setDefaultWALSyncMode ` method from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
updated type checks in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to enhance type safety and ensure correct functionality with expected values
( chore ) camel - aws2 - s3 : remove unused method
pdfbox - 4071 : fix test that break on jdk11
add miss ' found - content ' to the assertion failure message
do n ' t bail out if one of the condition do n ' t match .
mow - 163 make sure the pen image be big enough to fit on the screen
refactor SQLXML class to improve code readability and maintainability
added a limit parameter to the getOrderBook method across multiple classes to allow for pagination in the order book retrieval process
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in multiple files to better reflect the specificity of exception handling related to heap
nifi - 3978 set max string length to integer . max _ value for stream read constraint
updated engine retrieval and locking mechanism in PmsConfiguration . java to ensure default values are set before accessing configuration properties
renamed ` FullIterator ` to ` WheelIterator ` and updated import statements for consistency to improve clarity and maintainability of the code
log an error if we can not generate a bug description
increased timeout duration for assertion in LocalChunkProviderTest from 3 seconds to 10 seconds to improve test reliability by allowing for longer execution time
changed the visibility of the uncomplete checklists menu item from true to false to disable the item for better user experience
refactor DefaultResultSetHandler to resolve discriminated result maps and add a new Contract class with associated tests to improve code clarity and ensure
added null check for defaultHome and updated receiver unregistration logic to ensure proper handling of null cases and prevent potential NullPointerExceptions
added @ VertxGen annotation to PumpImpl . java to facilitate the use of Vert . x code generation features
removed unnecessary casting to FileDisplayActivity to simplify code and improve readability
trim leading and trailing whitespace from tokens in ConfigAttributeEditor and added a test for trimming leading and trailing whitespace in ConfigAttributeEditorTests to ensure consistent
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux files to improve code organization and readability
svm : add substitution for classloader . getname ( ) for unnamed classloader
modify the handling of the " r " case in DatabaseMetaData to distinguish between " TABLE " and " SYSTEM TABLE " based on the device ' s string
feat ( agent ) : update protoc to v3.15 . 3
updated import statements and modified the exception handling in HiveMetaStore . java to improve code clarity and ensure proper exception handling
added a new module - info . java file for the core module to define module exports and dependencies within the com . speedment . runtime . core package
modify the flush state handling and fill interest logic in SslConnection . java to improve connection state management during idle and waiting states
log4j2 : fix noclassdeffounderror in some case
7029048 : fix test that depend on server vm
refactor MongoOperations and ReactiveMongoOperations classes to improve code organization and maintainability
added import for LibPQFactory in PGProperty . java to provide a specific implementation for pq factory functionality
disable the currently failing test ( currently fail )
added sorting functionality for resource names and keys in EditableResources . java to ensure consistent ordering of resource names during processing
added OSvTerminal class and integrated it into TerminalFactory to support OSV terminal functionality in the application
added support for additional file extensions in the class type check to enhance compatibility with additional file formats
replaced HashMap with TreeMap for combinedVectors and adjusted associated test implementations to ensure predictable iteration order and maintain consistent test ordering
updated the loop condition to include both names and values to ensure that the loop does not skip elements beyond the expected size
refactor WebSocketPolicy class to improve code readability and maintainability
changed ` readPhoneStatePermissionGranted ` to ` readPhoneStatePermission ` and ` accessWifiStatePermission ` to instance variables in ` Shadow
add the ability to perform template - based resolution instead of template - based resolution
updated class instantiation to use generics for MethodVisitor and ClassVisitor to enhance type safety and flexibility in the AsmUtil class
added a new class LoggingAuditService to handle user authentication events to provide structured logging for user auditing during user authentication
[ tado ] fix nullpointerexception when temperature data point be outside valid range ( # 1892 )
do n ' t generate proxy method declaration for abstract class . fix # 4078
camel - 14284 : added support for use http proxy in camel - http
updated the maximum encoding version from 1.1 to 1.2 in TemplateDTO . java to ensure compatibility with the latest features and improvements
added a call to ` StaticProperty . jdkSerialFilter ( ) ` in ` System . java ` to enhance the system ' s serial filtering
improve log message when pooled mode be enable
replaced calls to ` forceFinishedScroller ( true ) ` with ` forceFinishScroller ( ) ` across multiple classes to simplify method calls and improve readability
updated the method name from ` ensureRealtimeClusterIsSetUp ` to ` ensureRealtimeClusterIsSetUp ` and applied environment variable settings to enhance clarity
refvalidator : improve error reporting
updated the handling of inline QSB settings in InvariantDeviceProfile . java to incorporate new constants and improve clarity to enhance
added exception handling to createClassPath methods to improve robustness by ensuring proper URL encoding and decoding
updated regex patterns in TransformSteps . java to allow single quotes around method arguments to enhance accuracy in parameter passing
fix for image with null pgraphics2d
increase timeout in test to reduce flakiness
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL to enhance image configuration flexibility
add call to system . gc ( ) to clean up temporary file
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced ` createHardLink ( ) ` with ` copyFile ( ) ` in ` SnapshotTaker . java ` and added a ` copyFile (
renamed methods and variables from " appendToDescription " to " getDescription " across multiple classes to improve clarity and consistency in documentation generation
[ api ] fix arrayindexoutofboundsexception in mxnet
added a condition to check if the XML is an instance of ` Xml . Document ` before processing to ensure that XML processing only occurs when necessary
replaced ` InstrumentationTestCase ` with ` @ RunWith ` and ` @ Ignore ` annotations across multiple test files to ensure compatibility with Android testing
do n ' t add gaslimit rule to the frontier if not in frontier
changed access modifier of setupData method from public to private and removed redundant calls in multiple test classes to enhance encapsulation and improve code readability
replaced the ` autocommit ` boolean with ` runInTransaction ` in the ` ChangeSet ` class to distinguish between transactional and non - transactional
fix nullpointerexception if listener be null
fix : add miss documentation for site base url
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure proper handling of discount
refactor Common class to improve code readability and maintainability
added context layer to log messages before launching an app in Launchable . java to improve error handling and ensure app launches are properly managed
[ hotfix ] fix typo in streamexdeduplicate
log exception when send kafka message fails
no effective change - add isimmutable ( ) to simpleelasticsearchpersistent property
make sure setcoord return true even if the point be undefined
added velocity barrier and swipe event handling in AskGestureEventsListener . java to improve user interaction responsiveness during scrolling
refactor comparison logic in NGramEstimator to use sorted lists to improve the accuracy of phrase comparisons
[ core ] move scenario scoped class to io . cucumber . core . runtime package
updated method calls in StatsLogCompatManager to retrieve folder icon properties from the new info object to improve clarity and consistency in accessing folder icon properties
replace occurrences of ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure the correct
svm : add skeleton test for loop predicates
refactor SelectionHighlighter by adding a setter method and improving equals and hashCode methods to enhance code clarity and ensure proper comparison logic for object equality
added a new class ` StringResultConverter ` to handle conversion between ` String ` and ` Pointer ` with a specified character set to enhance
camel - 19751 : split unit and integration test for camel - 19751 ( # 19751 )
inverted the condition for WaitForSingleObject in JansiWinSysTerminal . java to correct the logic to check for object existence
added null checks and improved buffer limit handling to enhance robustness and prevent potential NullPointerExceptions during buffer operations
update data directory assertion to use File . separator to ensure consistency in directory path handling across different operating systems
updated operating system detection logic in AutoUpdaterServerProperties . java to ensure compatibility with macOS and pre - catalina environments
updated Lock class to use lockName instead of lockFile to improve clarity and accuracy in handling lock names
replaced appIcon with allApps to retrieve the visible bounds of the all apps view to improve clarity and accuracy of the app icon positioning
updated references from ` Invocable . InvocationType ` to ` ClientDatagramEndPoint . this ` for consistency to improve code clarity and maintain
updated the SQL query string from " oreder by STEP _ EXECUTION _ ID " to " order by STEP _ EXECUTION _ ID " to
modified button handling in LwjglInput . java to ignore unknown buttons to simplify button assignment logic
[ task ] add test for reject by admin
replaced instances of ` logger ` with a private static final logger in ` OpenIdServiceResponseBuilder ` and ` GoogleAccountsServiceResponseBuilder `
removed the adjustment of the expiration time in ` SsoAccessTokenProvider ` and updated test method visibility in ` SsoAccessTokenProviderTest ` to
[ geos - 10641 ] ignore test on macos if macos build fails
added AlarmSuppression methods to GreetResourceMockedTest and integrated them into OciMetricsCdiExtensionTest to enhance alarm
rearranged conditional checks in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to ensure proper resource management and avoid potential NullPointerExceptions
updated the initialization of ` metricsContext ` to use ` solrMetricsContext ` instead of accessing it directly to ensure consistency in metrics context management
refactor file and folder output logic in OCFileListFragment to improve clarity and maintainability of the code
camel - 14284 : camel - core - optimize to reduce object allocation .
refactor SourceVersion class to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` to verify thread creation and error handling to ensure that the ` MyThreadFactory ` behaves as
refactor lock period retrieval to use a dedicated method to improve code readability and maintainability by centralizing lock period logic
added a new TicketModel instance in EditTicketPage . java to enhance ticket management functionality
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature for dimiss apps from predicted list
updated constructors in assertion classes to accept a self - type parameter to enhance flexibility by allowing specific assertion types
added a new menu item for quoting users in TweetActivity to enhance user experience by allowing users to enter tweet content
make sure interrupt lock be protect to prevent multiple start .
rename codec passthrough to decrypt - only
added a conditional check for the result before offering failure and closing the consumer to ensure failure is only handled if the result is true
updated German and French error messages in XSLTErrorResources to improve clarity and accuracy of the user interface text
[ hotfix ] make checkpointcleaner thread - safe
upgrade dependency and fix compile error
reformatted the code for improved readability by maintaining consistent formatting to enhance code maintainability and readability
added configuration for using unique column names in result set configurations to enhance flexibility in handling unique column names in result sets
fix for ticket : 141 -- do not call fillexampletexts ( ) during voice selection
added session validity check in ` Session . java ` and improved test for invalid session exceptions in ` SessionHandlerTest . java ` to ensure that invalid
hhh - 1542 - remove exceptionhelper . getrootcause because it be not use
updated keyPairGenerator initialization from 256 to 255 to enhance security by stronger key generation
added a call to set the codec using Lucene41PostingsFormat to ensure consistent codec usage across test cases
[ hotfix ] print empty checkpointrange header in debug
added support for RSA / ECB / OAEP padding algorithm in the OperatorHelper class to enhance security by enforcing consistent algorithm parameters
svm : use macos instead of darwin
added handling for SecurityException and improved error logging in DebugSourcesResolver . java to enhance error reporting for URI resolution failures
modified the condition for returning Transport values based on OS type to ensure correct handling of Transport values regardless of operating operating system type
updated file handling and upload logic to use generated files instead of segment files to improve file management and ensure segment files are correctly uploaded
[ fix ] bufferutils . newbytebuffer ( ) should free memory .
change the value of USE _ PIPELINE _ DOWNLOADER from false to true to enable the chain downloader functionality
updated dstOffset setting in SimpleDateFormat and added a new Bug7130335 class for testing date formatting to simplify DST offset handling and ensure accurate
refactor variables to use local variables for iconCount and currentSelection in AllAppsView . java to improve code readability and maintainability by
fix npe in adddefaultvirtualmachine api when there be no default xenserver
refactor StringBuffer class to improve code readability and maintainability
added assignment of ruleUID to rule to correctly associate the rule with the updated identifier
added a null check for the listener before unsubscribing from the registry to prevent potential NullPointerExceptions when the listener is not present
added a new property ` PRETTY _ PRINT ` with a configuration option ` pretty _ print ` to enable or disable pretty printing for JSON transformations to
change access _ table from private to public for access _ table in instrumentbranchssphase .
corrected the spelling of " Resource " to " No " in error messages to improve clarity and accuracy in the error reporting
( chore ) camel - core : minor refactorings to reduce code duplication
fix some javadoc warning and error
added ` effectiveClusterVersion ` and ` isUpgradeSuspended ` as parameters and modified related logic in ` AmbariManagementControllerImpl . java ` to
simonstewart : after a code grant , the code be copyright the sfc and the selenium commit , the code be copyright the
removed retrieval of writer fields to streamline code by eliminating unnecessary fields
updated OAuthProperties to use default key sizes for encryption and signing to enhance security by ensuring sensitive data integrity
hbase - 26904 fix findbugs warning in hbase - server ( addendum )
replaced ` AllowedResourceAliasChecker ` instantiation with a lambda expression to simplify the code and improve readability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , Serializable , and package - info classes to improve code organization and maintainability
[ java ] make cluster interface extend idlestrategy to reset idle strategy .
modified the initialization of SequenceFile . Writer to correctly increment the currentChunkID variable to ensure proper handling of file paths during writer initialization
added a new abstract class AbstractJobExecutor to handle job execution in batch processing to improve job management and error handling in batch processing
[ java ] do n ' t return until recovery be complete .
rename variable and method related to huge static base to static base to improve clarity and consistency in naming conventions to enhance code readability and maintainability
[ type : fix ] consul client should not try to connect if not enable .
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) . nextInt ( ) ` for
improve reporting when parser detect bailouts during parse
adjusted time calculations for currentStart and baselineStart to ensure correct aggregation and baseline initialization
added functionality to handle abstract methods in ` CallsRealMethods . java ` and created test cases in ` CreatingMocksWithConstructorTest . java `
refactor package access checks to accept Class objects instead of String names to enhance security by ensuring proper access control based on the class hierarchy
refactor ContextPathPluginTest to extend AbstractPluginDataInit and improve error configuration setup to enhance test structure and ensure proper initialization of plugin
updated variable names from ` dtm ` to ` model ` for consistency and clarity to enhance code readability and maintainability by using
added a new request for " has - touch - interaction - service " and updated related conditions to accurately reflect the state of the touch interaction service
removed unnecessary try - catch block around connection action to improve code readability and maintainability
change the type of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions >
[ wasm ] fix javadoc error and add miss license header .
added handling for the ' & ' character in the Home key and implemented functionality for navigation to the end key in the terminal map to improve user experience by
replaced synchronized set with a direct call to get connected plots in PlotHandler . java to improve performance by avoiding unnecessary synchronization
replaced the direct creation of a share intent with an Intent chooser that opens a new activity to enhance user experience by allowing the application to
remove ` public ` access modifier from the constructor of ` roster ` so that it ' s not need .
added basic constraints to certGen in TestUtils . java to ensure compliance with certificate validation requirements
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to handle cases where nested transformations are used incorrectly
removed unnecessary multiValued checks in TrieDateField and TrieField classes to simplify code and improve readability by directly using precisionStep
removed the TaskbarStateHandler class and its associated references from BaseQuickstepLauncher to streamline codebase by eliminating unnecessary components
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ( ) ` and ` getFields ( ) ` methods for array
make hzstartit tolerant to slow machine
replaced the Singleton annotation with @ ApplicationScoped and added an init method to initialize application settings before saving or loading them
fix : safepoint # setvalue always return 1 .
updated thread name field type from char array to string to improve type handling for thread name retrieval
updated the default random seed from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90HnswGraphBuilder . java
use stroke object instead of call strokeimpl ( )
[ mondrian - 1202 ] refactor ( sqlvalidatorimpl ) : extract method expanddynamicstar ( sqlidentifier id , sql
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to find relevant child records to enhance the functionality of
added import for Message API and set status code to warning to enhance user feedback by informing users of specific status codes
fix ( opengl ) : use getmodifiersex ( ) instead of getmodifiers ( )
amd64countLeadingZerosNode and amd64countTrailingZerosNode : use cycles _ 3 instead of cycles _ 6 for good performance
( chore ) camel - as2 : fix nullpointerexception when disposition notification be enable
refactor Locale class to improve code readability and maintainability
added a clearLog method to ErrorConsoleController and implemented logging clearing functionality in ErrorConsoleViewModel to enhance error handling by allowing clear of log messages
set mRecentsAnimationController to null to ensure proper initialization of the animation controller
updated Debug . java , CaptionMap . java , DummyCaptionMap . java , and TextFormattingTest . java to use LocaleHolder and
updated test cases to use connection pooling and increased execution count from 10 to 50 to improve test reliability and enhance performance by allowing connections to
[ java ] adding opera berry to the list of supported driver for operaBlink .
improve error message when download fail
added new Lifx product items to the LifxProduct . java file to support additional Lifx product configurations
added asynchronous request handling and improved logging in OverseerCollectionProcessor , CollectionsHandler , CollectionsAPIAsyncDistributedZkTest , and CoreAdmin
refactor access modifiers for PGSQL _ PK _ BYTES _ LIMIT and PGSQL _ PK _ SUFFIX in PostgresDatabase . java and
updated LogPage , SummaryPage , and LinkPanel to use repositoryModel ' s HEAD instead of null for refid and LinkPanel to ensure correct identification
skeletoninterbedwire now use unit _ xYZ instead of unit _ y for parent bone position
added a browserDestroy method to properly stop the web component to ensure proper resource management and prevent memory leaks
added a wait for the active collection " readApiTestViolations " in AutoScalingHandlerTest . java to ensure proper synchronization during testing
refactor screen processing logic in ScreenTerminal . java and update import statements in Tmux . java to improve code readability and maintainability by
updated SoftResetAction to use controller state checks instead of idle / paused conditions to enhance reliability of SoftResetAction functionality
disable on - disc stream cache to speed up texture pack reloading .
added a conditional check for the parent folder in Request . java and RequestV2 . java to ensure the correct parent folder is retrieved based on the media
cloudstack - 6893 : rename ispersistent to persistent in network offering
modified the FileOutputStream initialization to include a close method to ensure proper resource management by closing the temp file after use
added error handling for REST client exceptions in StandardGitHubRepository . java to improve robustness by catching forbidden responses from the HTTP client
log4j2 - 1343 add messagefactory2adapter . getoriginal ( ) for backwards compatibility
suppress warn about non - serializable non - transient instance field in test
updated the regex pattern in mmm Version . java and ppp Version . java to match minor releases more accurately
added initial and dismiss delay settings for the tooltip manager in ExtractionModelFrame to improve user experience by providing better feedback during tooltip updates
refactor target handling in ProjectCommand to utilize ImmutableSet for passed - in targets to improve code clarity and maintainability by reducing
added UTC timezone handling in TimeTest . java to ensure correct time zone formatting for better compatibility
updated the MediaSessionConnector class to enhance session management functionality
refactor to reduce dependency on jsse in nio connector
updated the method for retrieving distance accuracy in GpsLoggingService to use accuracy instead of altitude to ensure accurate display accuracy based on user preference settings
added a method to check if futures are enabled and updated metadata adaptation accordingly to enable conditional handling of future exchanges based on the exchange
update adminaccountmanagementhelper and adminaccountmanagementservlet to use teammates . common . datatransfer . accountdata
added support for configuring worker queue size in ThriftHttpCLIService to enhance performance and scalability of worker processes
replaced the call to ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` in ` PathWatcher
camel - jms fixed the test error of camel - jms
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions
updated calculation of duration in GCInspector . java to improve accuracy of duration representation
fix : fix getJavadocComment on method with line comment
added OS detection method and modified memory handling in ReserveMemory . java and WhiteBox . java to improve memory management and provide a clearer output for SIG
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner to ensure proper handling of region closing or splitting scenarios
hbase - 2593 add procid to help debug flaky test
camel - 16400 : camel - cxf - allow to inject the service class into the wsdl service factory bean so it can be use by
refactor YamlChangeLogSerializer to use a container for databaseChangeLog serialization to improve clarity and maintainability of the serialization process
updated print statements in SchemaPrinter . java to use consistent formatting to improve code readability and maintainability
replaced manual road regeneration code with a call to ` C . NOT _ IN _ PLOT . send ( player ) ` to simplify player
updated references from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure compatibility with the current activity context
added a ` @ GenericGenerator ` annotation and updated the ` @ GeneratedValue ` annotation to include a ` name ` parameter to enhance the
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature and improve code clarity
bzbz2 : fix outputstream . write ( bytebuffer , position , remaining ) when write uncompressed data
douniaberrada : do n ' t start web app ' s logging by default
added a new constant ` VALUE _ TYPE _ EMPTY ` and modified the initialization logic in ` Value . java ` to introduce a placeholder for an empty type
updated equality checks for groups to use ` equals ` method to improve null safety and prevent potential null pointer exceptions
refactor Liquibase and LiquibaseDropAll classes to improve code organization to enhance maintainability and readability of the codebase
refactor SimplexNoise class to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetNode ` with exact dependencies to provide a
rename columnfamilystore . getminrowcompactsize ( ) - > columnfamilystore . getminrowsize ( )
add gson adapter for artifactversion to make sure we can handle versioning .
updated the logic for managing the current element in the NativeArray by introducing a boolean flag and modifying the element at a specific index to improve
updated file upload logic to set the parent ID of a file to ensure the current upload file has the correct relationship with the parent directory
added a new file UTF8ReaderBug . java that includes a test for supporting supplementary character encoding in XML data
added unit test base on user forum issue
updated assertions in BinanceIntegration and BinanceCoinIntegration to include depth20 as a new test case to ensure the test accurately reflects the
added resetAllocation method to Wrapper class and invoked it in SimpleParallelizer to improve resource management by resetting allocation states
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
synchronized access to system properties to ensure thread safety when modifying configuration and properties
[ hotfix ] fix checkstyle violation in modelutils
refactor methods in AbstractDoubleArrayAssert to improve code readability and maintainability
added conditional width and height adjustments for mLabels in Legend . java to ensure correct layout adjustments based on last label positioning
added test delay and abort methods to ` CodeFirstSpringmvcIntf ` , ` TestResponse ` , and ` CodeFirstSpringmvc ` classes
replace retrieval of text values with a separate array for better performance to improve efficiency by directly accessing values from the data object
replaced CxxLink with BuildTargetSourcePath in Omnibus . java to improve dependency management by utilizing the new class structure
disable version plugin if versioning be disabled .
updated ` MediaFolder ` to use ` List ` instead of ` Collection ` and added ` numberOfFiles ` to ` MediaProvider ` to en
remove the ' - b ' argument from the command line arguments in AidlStep . java and update the string format in GenAidlTest . java
add test case for issue # 979 . obligation analysis do n ' t work correctly
updated FakeHttpLayer . java with new test cases to improve test coverage for HTTP request handling
[ java ] re - revoke leadership after error .
2 . x : replace combinable stream with flatmap in compositediscoveryclient # getinstances ( # 7961 )
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` to improve clarity and consistency in method naming
[ hotfix ] [ doc ] improve the description of jobmanager option
refactor visibility handling of widgets and search results in WidgetsFullSheet . java to improve readability and maintainability of the code
added error handling for loading WstxOutputFactory and WstxInputFactory classes to improve robustness by logging the absence of W
refactor test setup in AuditAliasCommandIntegrationTest to use a setup method and initialize the ProjectWorkspace to improve test structure and ensure proper resource management
added logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to track header view height and recommendation table properties to improve
( chore ) camel - cxf : cleanup unused test
added a try - catch block around the update ( ) method to handle potential exceptions during the periodical refresh process
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and improve
added a method to check default background fills in HSSFCellStyle and refactored color retrieval logic in HSSFPalette to improve background
updated ZonedDateTimeFormatterBenchmark . java to improve test coverage for ZonedDateTime functionality
refactor the update buffering logic in ` DistributedUpdateProcessor ` and add a new test class ` DistributedUpdateProcessorTest ` to
added a null check for the rocket stage in the motor validation logic to ensure that a valid stage is present before proceeding
change / editreplace to / editscript to replace all exist block .
updated ExtendedMasterSecretExtension . java file to improve clarity and maintainability of the code
changed the declaration of ` processor ` to be final in ` AndroidInput . java ` to ensure immutability of the processor variable
added a listener call for handling a write failure event in WritableKeyProcessor to notify the listener when the stream reaches the end of the stream to improve error
added a new MySQL database constant " CUBE " to MySQLDatabase . java to enhance functionality for testing purposes
added a try - catch block around the rm ( ) method call to handle potential IOException to ensure robust resource management and prevent application crashes
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related references to improve cl
replace reflection - based getter calls with direct field access in DefaultOkHttpClientFactoryTest to improve code readability and reduce boilerplate code
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the operating system to prevent potential NullPointerExceptions during execution
mow - 195 check for avparent in avsplitpane , if it ' s zero , do not resize av
modified the jailerMain method to include a boolean parameter for distinguishing between the extraction and extraction of the data model to enhance flexibility in
refactor HTTP request handling methods to improve code readability and maintainability
added functionality to store unread notifications in shared preferences to track pull notifications effectively
fix isnullnode to handle object of kind . object
updated physics camera initialization and improved text rendering in Box2DTest . java , Pong . java , and World2DTest .
refactor conditional statements in ViewPostDetailFragment to streamline layout manager initialization to improve code readability and maintainability by reducing redund
changed log level from trace to warn for background operation cancellation to improve logging granularity for better debugging
fix a bug that would cause a classcastexception when a method be abstract .
ggb - 2118 fix for touch event in ie10 +
updated getNotificationUsers method to include device ID as a parameter to enhance notification user retrieval by filtering users based on their specific device ID
use srtm _ data _ geotiff instead of droppr . org / srtm / v4.1 / 6 _ 5 _ tifs
removed unnecessary file chooser cleanup in MotifFileChooserUI . java and added a new test class bug6520101 . java to improve
hollowuirouter now return true / false on failure to connect to ui .
refactor ` getRuleOptional ` methods to ` getRuleOptionalWithType ` and ` getRuleOptionalWithType ` for improved type
hide the transportSpinner when making a shortcut to improve user experience by hiding the spinner when making a shortcut
added null check for attributes _ field in mmm Attr . java and created two new classes T7073477 . java and T7073477 .
fix back button not work in some case
added support for long view index in QueryServices and related classes to enable or disable long view index indexing based on configuration settings
updated string from " V " to " v " in SDRTrunk . java to ensure consistency with Java naming conventions
replaced the method of cleaning the path in PrivateKeyParserTests to ensure the path is clean before processing its content
removed columnPosition parameter from diffDropColumn method and related calls to simplify method signature and improve code clarity
updated IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the current version of the code
hbase - 27415 add an option to ignore non - existent column family in importtsv
[ java ] use long instead of string for logrecordingchannel .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " startActivitySafely ( intent , " startApplicationDetailsActivity
added a condition to check if a specific JSON node is of type ' i ' to prevent further processing when processing a specific input
refactor Procedure class to improve code readability and maintainability
updated resource bundle loading to include default locale and system class loader to enhance compatibility with different locales in resource bundles
[ wasm ] added normalization pas for array creation .
added checks for minimum and maximum count conditions in PerSegmentSingleValuedFaceting . java to ensure counts are only incremented when there are no counts to avoid
fix nullpointerexception in modmetadata . getauthorsource ( ) ( # 1975 )
added OSGiTest class and modified module dependencies in module - info . java to ensure proper handling of Gson annotations and improve test coverage for
resolved - issue batch - 1010 : add support for concurrent processing of controller service graph
hbase - 20513 htable # waitforallretrydetailspartialogs should n ' t auto flush when htable # waitfor
fix ( compilation ) : fix type inference issue with annotation
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and a corresponding test in ` SimpleFeatureImplTest ` to check for user data
removed exception handling from method signatures in DDLPlanUtils and ExplainTask to simplify method signatures and improve code clarity
refactor RelyingPartyRegistration class structure to improve code readability and maintainability
removed the ` enableLogging ` method and its associated logging configuration to streamline the code by eliminating unnecessary logging setup
added a new class InJavaSourceSet that extends JavaIsoVisitor to filter JavaSourceSet markers for specific source sets to enhance the compilation process by
updated file loading logic in TestGDALParser . java to use a specific filename for gdal info to ensure compatibility with external parser checks before loading the file
added helper method creategetters ( ) to make it easy to reuse
removed the check for useExtStorage in the conditional statement to simplify the logic for SDK version compatibility
added a new constant INDEXER _ NO _ COMMIT and modified index writer handling in IndexerMapReduce and updated cache usage in IndexingJob to
api : make diskofferingid or snapshotid must be pass whilst create a volume
None
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime `
added a new file ` Issue382 . java ` that tests error handling for specific HTTP error codes to ensure that the application correctly handles specific
replaced custom comparison method with static import of ` Integer . signum ` to simplify code and improve readability
added visibility control for the text holder in AttachmentAdapter to improve user interface responsiveness by hiding the text when certain conditions are met
fix : use getimportkindfor ( ) instead of use elementof ( ) to get kind of a reference
simonstewart : use a lambda expression instead of a method reference to get the profile
feat ( blockpickup ) : add blockpickup support for liquidblock ( # 54691 )
resolve intermittent ci failure
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to align with
log4j2 - 1343 log4j2 - 1343 improve robustness of distinct error handle
updated system property retrieval to incorporate annotation values based on the enabled status of TestGroup and BadApple annotations to enhance flexibility in configuring test
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and modified the logger initialization logic in ` SQLEditorSupport .
make graalcontext . getallmethods ( ) package - private by default .
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 573 : use
updated the parameters for verifying transaction properties in HiveAbstractReader to ensure correct source and destination paths are passed to the job
refactor overlay conditions in Workspace . java to improve readability and maintainability of the code
make it easy to customize batch size for unmodifiable jdbc batch
improve error message when expect to reach the expected input
added a test to verify that a class retains the state in the MockWithStaticStateDemo class and created a new MockWithStaticStateDemo class
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to verify SQL parsing and deparsing to ensure proper
added a null check for ugi before executing the action to improve error handling and avoid potential NullPointerExceptions
refactor error handling to include error code in the exception message to improve clarity of error reporting for better debugging
rename endpointhelper . reslovestringparameter to resolveparameter and deprecate it
updated the logic for creating SQL type expressions in RexNodeConverter . java to improve precision and scale handling for decimal type creation
None
updated the assertion in WalletTestAccount003 to use the current timestamp instead of a hardcoded string to ensure consistency in timestamp handling
refactor the handling of selection in BasicFrame and DesignPanel to use a new highlightAssemblyChildren method to improve code readability and maintainability
added a long - running time parameter to the Args class to allow configuration of the long - running execution time
fix priority on ref comparison warning
updated imports and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider to use java . util . ServiceLoader instead of sun
fix gml3 encode issue with xsd
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
updated the condition in MissingUniqueConstraintChangeGenerator to check against referenceDatabase to ensure unique index creation only occurs when the same database is referenced
removed the ` addAndroidConstants ` method and adjusted asset path handling in ` IjProjectTemplateDataPreparer . java ` to streamline the
use awaitility in camel - core for test where we otherwise use thred sleep which can be speed up .
added user _ args and timestamp to the map in ChromeTraceBuildListener to enhance tracing capabilities by including additional execution information
svm : fix memory leak in native library .
fix typo in trace log message
added a new file TheRockMetaDataDemo . java to demonstrate the functionality of TheRockExchange ' s exchange metadata retrieval
fix ( core ) : fix parsing of double with strict fp
removed the unparseIdentifier function call from columnNamesBuilder to simplify the code by directly appending the column name to the column name
fix blockstatementtemplategenerator . contextfreetemplate to use the correct cursor
added a check to ensure only non - synthetic classes are instantiated in InstantiateStaticClass . java and implemented a test case in Bug1282 . java to
removed the call to projectFilesystem . getPathForRelativePath ( basePath ) in WorkspaceAndProjectGenerator . java to simplify the code and improve readability
added rescues handling in IkStepDefinition . java to manage and unregister pending continuum resources to improve error management and ensure continuum continuum
added ` equals ` and ` hashCode ` methods to multiple ` AbstractType ` , ` BigintType ` , ` BooleanType ` , `
added a method to read the sync level from a string and defined a default sync level to enhance flexibility by allowing configuration of sync levels
fix test flakiness in controlcommandstest
fix recovery slice state check
* fixed issue where setcv _ create ( ) be call with wrong argument order
added SDKPath to AppleBundle and modified ProcessExecutorParams to include environment variables to enhance flexibility in managing SDK paths for process execution
refactor TransientBlobCleanupTask to use a cleanup callback instead of a write lock to enhance flexibility in managing transient blob cleanup
bug 10605 : use static nat rule for 1 - 1 instead of 1 : 1
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion logic for sort and union types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of data types
refactor BetterBlockPos class to improve code readability and maintainability
updated getProxy method to include class loader parameter to ensure compatibility with class loading context
do n ' t show nighty build warning by default
added OracleDatabase specific handling in LoggingExecutor and JdbcExecutor to ensure trailing slashes are removed correctly for Oracle database compatibility
disable null deref analysis for now
fix test which fail on the ci - server
updated BLOB _ SIZE , PLAY _ MARGIN , SLOW _ MARGIN , and SULNER _ MARGIN
added a method to add a multifactor authentication provider bypass to the DuoSecurity multifactor provider configuration to enhance security by allowing users to
fix node positioning after rotate
jbrules - 2835 : fix checkstyle violation in org . drools . kie . kiecontainer
added help page functionality to the PMS class and refactored the HelpTab class to use it to enhance user experience by providing a
added new files GeocodeProviderFactory . java and Constants . java to provide a centralized interface for defining geocoding functionalities in the application
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to ensure correct usage of the correct CharArraySet
refactor exception handling in OptionTest and ResourceManagerImplTest to use try - catch blocks instead of ExpectedException rules to improve test reliability
do n ' t delete the jvm _ object _ id when memory management be disabled
updated conditional checks and refactored collection creation in SegmentsInfoRequestHandler and CollectionsAPISolrJTest to enhance code clarity and
updated the calculation of numPredictiveAppCols to use a conditional logic based on whether the device is a phone
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and updated references in ` DrillJoinRelBase ` and
add a new blockbuildcraft class to facilitate building of block in build stage .
updated layout parameters for the search bar to improve layout consistency and responsiveness
change from run ( ) to start ( ) in YahooSession . java to ensure that the session starts immediately
initialized ` client ` to ` null ` in ` HiveMetaStore ` and modified error handling in ` HiveMetaStoreClient ` to improve resource management and
modified the ` getDisplayScript ( getDefault ( ) ) ` method to accept a ` Category . DISPLAY ` parameter and added a test for bug 707
updated import statements to use constants from ZkStateReader for core URL properties to improve code readability and maintainability by using defined constants
replaced ThreadLocalRandom with direct usage of Random in StoreDirectTest to improve performance and reduce dependency on thread - local randomness
added a check for launcher initialization before backup operations to ensure the launcher is ready before backup operations
enhance error messages in Cell . java to include space coordinates to improve debugging by providing more context for invalid arguments
added unit test base on user forum issue
rename ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability and maintainability
update test to account for temporaryfolder bean
added debug logging for various packages in Grasscutter . java to improve troubleshooting capabilities during development and testing processes
changed the ` highlightCnstScrRngQuery ` variable to be static and modified related methods and conditions in ` SpanScorer ` and ` We
updated the condition for workspace state in Launcher . java and added a method to Workspace . java to improve state management to ensure proper handling of workspace state
refactor multiple assertion classes for improved consistency to enhance maintainability and readability of the codebase
only notify new template when cacheable
added new constants SCOPE _ SOLR _ CORE and modified several classes to utilize these constants to improve code readability and maintainability by
added a primary key constraint to the ` measurement ` table in ` DatabaseMetaDataTest . java ` and verified the existence of the primary key in the database
rename pantheon . permissions - config - path to pantheon . permissions - config - file to pantheon . permissions - config
refactor session handling logic in HttpSessionContextIntegrationFilter to improve clarity and maintainability of session creation conditions
added a new file TestIfWithDeadRegion . java that includes a test class to evaluate the behavior of string retrieval with a DeadRegion exception to ensure
rename ud to ud for good clarity
refactor SnowflakeIdGeneratorTest to use HighResolutionTimer for concurrent access to improve performance and resource management during tests
added a staticUi boolean to AppSettings and modified MainFragment to conditionally show the toast bar based on user preferences to enhance user experience by allowing
refactor the drop method to use a try - finally block for resource cleanup to ensure proper cleanup of resources to prevent memory leaks
None
updated JOptionPane messages to use localized strings to improve internationalization support for better usability
tika - 3353 -- add mime magic for poi - ooxml file in poi - ooxml . xlsx and application / x
added logging functionality and refactored the join method in FixJava to improve debugging capabilities and enhance code maintainability
camel - 14284 : camel - jbang - enrich spring - boot - boot - eip to support generate spring - boot - e
add skip _ schema _ check to skip schema check during migration
added debug logging for Portaudio device configuration and improved null checks for audioCaptureDevice and audioPlaybackDevice to enhance debugging visibility and ensure
added WebsocketConfig and updated WebSocketPluginConfiguration to utilize it to enhance WebSocket configuration flexibility by allowing configurable WebSocket settings
fix : cache validation listener should run after each test
updated content length handling to trim only if it is not empty to ensure that the content length is only added if it does not already exist
[ fix ] fix deadlock in defaultsolverjob
refactor create timeseries method to use internalCreateTimeseries method to handle PathAlreadyExistException to improve error handling for concurrent insertions
added a new method ` check ` to return a boolean indicating success to provide a standardized way to check validity status
changed access modifiers from public to protected for several methods in multiple classes to enhance encapsulation and restrict access to these methods for better usability
server : fix the issue that listpublicipaddresses api do n ' t call listpublicipaddresses when projectid be not specify
removed the compliance check for RFC2616 and modified the test case in HttpParserTest to streamline value handling and enhance test coverage for
refactored thread initialization code into a separate method ` threadCompleteInitialization ` to improve code readability and maintainability by reducing duplication
added a method to create an external cache directory and implemented the ` getExternalStoragePublicDirectory ` method in ` ShadowEnvironment ` , along with
[ jbrules - 2088 ] add test case for mvel type coercion .
updated generic type usage and improved code formatting in LoggingConfig . java to enhance code readability and maintainability
updated exception logging to include the exception message to improve error reporting for better debugging
strip out the tel : prefix from the sip address if it exist
refactor visibility logic for shared file icon in FileListListAdapter to improve readability and maintainability of the code
deprecated the deprecated configuration variable ` hive . optimize . sort . dynamic . partition . threshold ` in HiveConf . java and updated its usage in TestTxn
refactor ` ExecuteStatementOperation ` and ` Operation ` classes to use constants for session IDs and session contexts to improve code readability and maintain
replaced usage of ` Lists . newArrayList ` with ` Arrays . asList ` and ` Arrays . asList ` for better performance and read
use getname ( ) instead of getname ( ) in test
removed the ` onErrorInStep ` method that returned null in the ` StepListenerSupport ` class to simplify the code by eliminating unused functionality
refactor Wallet class to improve code readability and maintainability
camel - 14284 : camel - netty - http should use http as - is if ssl be enable .
use logger instead of standard output
added a check to ensure the number of rows in the connection list does not exceed the bounds to prevent index out of bounds errors
[ java ] add rule to detect method with same name a enclosing class .
added ExtendedPlatformComponent class and integrated it into ManagementFactory for managing platform mbeans to enhance functionality for managing platform mbeans
replace double quotes with single quotes in SQL statements to ensure compatibility with SQL injection syntax
updated parse method calls to include the correct package structure for Bleutrade DTOs to ensure compatibility with the updated package structure for better
refactor TextEscapeUtils for improved readability to enhance maintainability and ease future updates
added a filter parameter and modified the FilteredQuery instantiation to use it to enhance spatial query flexibility based on local parameters
added progress indicators for auto email sending in GpsLoggingService to improve user feedback during email notifications
replaced ArrayList with HashSet for inlinks and added iterator methods to improve performance and simplify object iteration
[ tradfri ] remove old tradfri discovery result after stop ( ) ( # 2593 )
modified the ` testFilterForPartition ` method to accept a boolean parameter for filtering at the server side to enhance flexibility in partition retrieval based on
added " Abandoned " status to TicketModel and updated related logic in TicketBasePage and TicketsPage to handle it to enhance
no effective change - remove redundant null assignment
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text to improve memory efficiency and compatibility with byte -
add workaround for non - native jdk on 32 - bit jvm
do n ' t copy pdfindirect . b when there be no parent .
added a new option " DAEMON " to the OptionEnum and implemented daemon mode functionality in TerminalClient to allow users to control the web pendant
added a new class FlushIndexTask to handle index flushing operations to facilitate performance monitoring during index operations
adjust cf size estimation for memtable flush
added a condition to check for SEASONS output in the conditional check for expectedOutput to allow for SEASONS output in addition to TEXT
added a new file LocalSocketAddress . java that implements a DatagramSocket using an IPv6 loopback address to determine the local address to use for network comm
updated grid size coordinates in GridSizeMigrationTask . java to correct grid size coordinates for improved layout representation
updated variable names and method implementations in SerializerPojo . java to improve clarity and consistency to enhance code readability and maintainability
added read - only support and refactored transaction handling in Context . java to ensure proper transaction management and error handling for read - only contexts
rename LookAndFeelCommand . java file to improve clarity and consistency in naming conventions
update calculation of lastRunEnd and adjust offset logic in BlockBoxing . java to improve accuracy in determining lastRunEnd based on lastRunStart
updated assertions in GracefulStopTest to include EOFException and EofException alongside ClosedChannelException to enhance error handling by ensuring
replaced multiple instances of locking with direct operations on connection listeners to simplify code and improve performance by reducing unnecessary locking mechanisms
[ hotfix ] fix typo in networkparameters
updated allowAccountAssetOptimization logic in DynamicPropertiesStore . java to ensure proper handling of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC with a default value of 0 to define a specific garbage collection policy for the
remove transaction processing for each transaction in TransactionCapsule . java to streamline transaction validation and enhance error handling
[ core ] remove unused class
fix ( resource ) : fallback to english when no localization available
added a new file ProcessorInfo . java to provide a mechanism to retrieve CPU utilities to enhance the system ' s capability to monitor and
add - html option to printingbugreporter to generate html output
make logbackloggingsystem non - optional and deprecate
added service component recovery event handling and made cluster data modifications final to improve code clarity and ensure immutability of cluster data
updated SleuthTagPropagationAutoConfiguration to create a handler by default and modified test cases accordingly to improve configurability and ensure correct handler creation with
refactor dependency type assignment logic into a switch statement to improve readability and maintainability of the code
updated oauth2LoginLinks method to accept query parameters to enhance error handling by capturing error details
hbase - 2593 improve the seekto performance of hfilescanner
make @ generationtime deprecate since 6.2
add parameterized test for nd4ij . layernorm ( ) with no loss
refactor showShareFile method calls to use getFileOperationsHelper ( ) for consistency across activities to improve code maintainability and reduce duplication
added a new file LiquibaseUpdateMojoExecutionTest . java to test Liquibase configuration properties to ensure proper integration of Liqu
convert the proxyType value to uppercase to ensure proper handling of special characters in the proxy type
add minecraftforge . mod _ minecraftforge . java to make mod _ finecraftforge . java happy again .
refactor JdbcDatabaseSnapshot to improve cache handling of database table columns to enhance performance by optimizing fetching of cached values based on fetched
added a new container with a border in CSSBorderTest . java to enhance the styling and visual appearance of the UI component
added a new class ` RetryInterceptorAutoConfiguration ` and modified ` LoadBalancerInterceptor ` to include a conditional bean to enhance configuration flexibility
update constructor call from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure consistent layout parameter usage
updated the way parentTaskName is constructed to use System . currentTimeMillis ( ) instead of System . nanoTime ( ) to improve performance and accuracy of
added error handling for input parsing in ServiceResourceProvider to improve robustness by catching exceptions during service request parsing
do n ' t check history for non - versioned index when create a new index
[ giac ] fix round problem in ca
updated the AnonCipherWithWantClientAuth class implementation to enhance security and reliability of client authentication
deprecate producertemplate in favour of not use
refactor JLayer class to improve code readability and maintainability
make evictiontest less flaky by remove sleep
refactor : remove internal encode method from md5passwordencoder
refactor how global layout listeners are added and removed in IconRecentsView to improve code readability and reduce boilerplate code
refactor Response class to improve code readability and maintainability
use long . max _ value for max timestamp to avoid overflow
increase the preferred size of the security panel to improve layout consistency and user experience
added null and empty checks for replies and reply users in TweetActivity , TimeLineCursorAdapter , and TimelineArrayAdapter to prevent potential NullPointerExceptions
replaced Apache Commons Lang ' s ToStringBuilder with Java ' s Objects and added custom equals and hashCode methods in HitbtcBalance class to improve
fix ( griffin ) : fix group by in expression with in clause
change return statement from ' s ' to ' addrs . toString ( ) ' in RetriesExhaustedWithDetailsException . java to improve clarity by explicitly
do n ' t call closeopenfile ( ) in favor of openfile ( )
replace org . apache . http . client4 . httpclient with org . apache . hc5 . client5 . httpclient in
fix power wood pipe not respect energy limit
added a check to delete the temporary output file if it exists to ensure proper resource management and prevent potential memory leaks
added an " id " field to the BitstampWebSocketTransaction constructor and implemented multiple test cases for fetching trades to enhance the transaction class
[ java ] do n ' t return null if processor or subject time out .
no effective change - fix checkstyle violation
refactor SQL query construction and preparation in MediaTableFiles . java to improve code readability and maintainability by using a constant SQL string
add feature flag to show only definition for equation in exam
fix a nullpointerexception in the chat window when no message be receive .
hbase - 17432 disable meta scanner cache if scanroot = true
updated the initialization script name in CliConfigs . java to better reflect the intended configuration used for minimr
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to allow enabling or disabling the transient taskbar feature in the
[ hotfix ] fix javadoc warning in archivedexecutionvertex and accessexecution
added a condition to set density to 3f when scale is 3 to set the density to 3f for consistent rendering behavior
rename ` optional ` to ` vararg ` for clarity .
hbase - 2593 addendum fix findbugs warn
updated assertion to use a lambda expression for clarity to improve readability and maintainability of the test code
updated warning log messages and refactored connector initialization in AsyncHttpConnection , AsyncContextTest , and SelectChannelAsyncContextTest classes to improve
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` method signature to provide additional control over the behavior of the method
updated lock mode handling in ` Database . java ` and removed the ` testSetMode ( ) ` method from ` TestRowLocks . java ` to stream
[ gr - 16478 ] skip big endian test on linux only .
refactor input type checks in Scalars . java to improve handling for StringValue and IntValue instances to enhance code clarity and maintainability by
updated keyAlias validation logic in CreateTableStatement . java to ensure consistency in error handling for single and multiple primary key specifications to improve clarity and accuracy
None
fix npe in vmservicemanager # getcurrentisolatestisolatestisolatestisolatest
refactor header configuration methods in HeadersConfigurer to use builder pattern to improve code readability and maintainability by reducing duplication
refactor methods in ObjectEnumerableAssert to improve code readability and maintainability
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added type attribute to @ aggregateroot annotation to simplify test
added support for prebuilt libraries in PythonBinaryDescription and PythonInPlaceBinary classes to enhance the functionality and organization of Python libraries in the build process
updated NetServerOptionsConverter to handle client authentication from JSON and removed deprecated methods from HttpServerOptions to streamline authentication handling and enhance code
updated REPLDIR paths to use the user ' s name instead of the " / user / hive / repl " directory to ensure correct user context for the
refactor task view handling logic in RecentsView . java to improve clarity and maintainability to streamline view management for primary and secondary tasks
added a timeout of 60 seconds to the test annotations in AmqpTransformerTest . java to provide more time for the test to complete successfully
removed the clearAll ( ) method from DataTableTopComponent . java to simplify the code by eliminating unnecessary functionality
rename ` ` controller ' ' to ` ` flowcontroller ' ' to avoid confusion
[ hotfix ] [ pipelinebuilder ] add test for consumption of all pipeline builder with exchange
added import statement for ClassLoaderHandler in mmm and ppp module dependencies to utilize the ClassLoaderHandler for improved class loading functionality
save best solution in event thread for future use
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive data during JSON serialization
inverted the null check for throwable in PlotListener . java to ensure that the condition verifies that the throwable is not null before proceeding
updated variable name from ` queryInfo ` to ` queryInfo ` for clarity to improve code readability and maintainability
fix the auto workbench not show the first recipe without a material
fix gl200 text protocol decoder ( fix # 263 )
replaced time column name variables with incoming time column specifications to enhance clarity and maintainability of the code
replaced multiple instances of ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` with multiple calls to ` HttpMethed . waitTo
add support for create a scoped internalcontext from an externalcontext to the container
add longtasktimer . sample to timerobservationhandler ( fixes # 2 )
changed the data type of SYNC _ DELTA _ RATE from float to double and modified the calculation for REFRESH _ DELTA _ RATE and refTime
log a warning if thymeleaf can not understand the fragment expression
change the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread - safe retrieval of session attributes
http : / / issues . apache . org / activemq / browse / amq - 2892 - make sure we do n ' t
added new color constants and refactored extractInto method in ColorExtractionAlgorithm . java to improve color extraction logic and enhance fallback functionality
add check for data folder ' s accessibility before adding it to srcFolderPathList to ensure only valid data folders are included in srcFolderPathList
modified the ` appendContent ` method to accept a boolean parameter for title inclusion to enhance functionality by allowing titles to be optionally included based on
removed initialization of SessionRegistryImpl to streamline session management by eliminating unnecessary object creation
added logging for reconnection results in NettyStreamingService to improve debugging and monitoring of reconnection failures
replaced the usage of ` Factory ` with ` Proxy ` in multiple files to utilize the ` JavassistProxyFactory ` for improved proxy handling
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for thread storage to improve performance by using a more efficient concurrent set implementation
refactor SocketExceptions to use String . join for constructing exception messages to improve message formatting to enhance clarity and maintainability of exception messages
added a check to ensure the view path is within the repository directory before proceeding to prevent errors when the view directory is under the repository directory to en
remove drag and drop of bib file from the tabbed pane when drag and drop
added multiple instances of " - XX : + UseCompressedClassPointers " to multiple test files to enhance test coverage by verifying class
added error logging for update log state errors in PeerSync . java to ensure proper handling of update logs in both active and replay states
deleted the ConnectionHook . java file to the functionality was deemed unnecessary for the project
removed redundant ` waitForReplicasInSync ` variable and related logic from multiple test classes to streamline code by eliminating unnecessary synchronization checks
( chore ) camel - swagger - java : fix assertion in swagger generator
bump apex version and fix checkstyle issue
update copyright year to match last edit
refactor AggregateEngine initialization to use a dedicated holder class to improve thread management and facilitate concurrent execution
updated WebSocketAsyncConnection to accept a ByteBufferPool instead of using StandardByteBufferPool to enhance flexibility in buffer management
added scrollToPositionWithOffset method calls for LinearLayoutManager in UploadActivity . java to enhance scrolling functionality for better user experience
fix ( sql ) : fix timestamp column aliasing in sample by
None
added conditional logic to disable default user agent in HttpClient based on configuration to enhance user experience by allowing users to disable the default user agent
added pubsubhubbub property to ApplicationSettings and modified FeedRefreshUpdater to conditionally handle PubSub pubsub to enhance flexibility in handling
changed the access modifier of the finalize method from public to protected to allow subclass access to the finalize method
stubjarclassentry : fix asm computation for synthetic class
add dspacewebapp a a common base class for the rest dspace app so we can reuse the rest dspace context
added a check for the presence of a leftTableAlias in CalcitePlanner and implemented a method to retrieve its value containing a column from RowResolver to
updated the trigger key identity to include a prefix " Trigger " to enhance clarity and consistency in naming conventions
updated logging levels and improved transaction broadcasting messages in Wallet . java to enhance clarity in transaction broadcasting logs and provide more context
updated import statements in BasicMapTest . java to improve readability and consistency to enhance code clarity and maintainability by using specific utility
swapped the initialization of rcfileOptimizedWriterEnabled and rcfileWriterValidate in HiveClientConfig . java to ensure consistency in configuration settings
added a new enum ` TlsClientCertPolicy ` and updated ` GitBlitServer ` to utilize it to enhance TLS client certificate handling
removed asynchronous message handling for subscription failure in KrakenFuturesStreamingService to simplify the subscription process by directly sending a debug log message
added support for HTTP headers in the ProxyWebSocketHandler to enable dynamic WebSocket protocol handling
added a debug log statement in HiveQueryResultSet . java to improve traceability of query results retrieval processes
simplified dimension formatting in HolidayEventFormatter . java to enhance readability and maintainability of the code
renamed the test method ` innerClassFieldMadeFinal ` to ` ignoreInnerClass ` and updated its functionality to ` ignoreInnerClass ` and introduced
[ hotfix ] fix checkstyle violation in unexpectedjobexecutionexception
removed unused module - info . java and simplified buttonShouldBeOpaque initialization to streamline code and eliminate unnecessary dependencies
refactor maxFreq and maxCost handling to maxCost in DrillSidewaysQuery and DrillSidewaysScorer classes to improve clarity and
added mapping for GeoDegeneratePath class to classRegsitry to ensure proper registration of GeoDegeneratePath registration in the class
removed the preFill parameter from constructors in ParticleEffectPool , FlushablePool , Pool , and ReflectionPool classes to simplify object initialization by using
updated taskbar state management in TaskbarLauncherStateController . java and modified flag check in TaskbarStashController . java to enhance taskbar
added null check for the default style before removing it from the styles list to avoid potential NullPointerException when the style is null
fix marqueelabel sizing and add marqueelabel to main gui
refactor icon assignment logic in FileTreeViewHolder . java to streamline file icon retrieval and improve readability to enhance maintainability and reduce redund
updated assertions from ` isEqualTo ` to ` contains ` for system resource checks to improve readability and accuracy of the test condition
fix concurrentmodificationexception in xmlreporter
add e2e test for nativeprobabilityfunction
unregister the client instance to ensure proper resource management and prevent memory leaks
hhh - 16625 - add a method to sybaseabledialect to drop temporary table
andreastolftolfsen : do n ' t convert color to htmlunit color if it ' s already in htmlunit
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
updated the LinksIndexingFilter class to improve link filtering functionality
updated hex string formatting in VirtualAllocCommitUncommitRecommit . java to improve clarity of memory allocation log output
fix ad tag loading when there be no adgroup
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability
updated fetchPropertyValue calls to use unit _ hz instead of deg _ text to ensure correct representation of wave frequency in the UI
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
simplified the TreeMap initialization to improve code readability and maintainability
fix crash when change vertex format
updated TracingClientInterceptor , ITTracingClientInterceptor , ITTracingClientInterceptor , and ITTracingServerInterceptor to use try - with - resources
updated time zone handling in ScheduledTrigger . java and removed BadApple annotation in ScheduledTriggerTest . java to improve accuracy of time zone representation and
added new classes AsyncBucket and InMemoryExtension , modified methods in Bucket and ConfigurationBuilder to use InMemoryExtension for asynchronous and custom time measurement support ,
updated class directory argument handling to use a regex pattern instead of a hardcoded value to improve flexibility and ensure tests use the correct class directory configuration
removed unnecessary line breaks in the AbstractConnector class to improve code readability and maintainability
refactor OngoingStubbing class to improve code readability and maintainability
added functionality to optionally reuse the web server based on the presence of a webServerToReuse parameter to enhance flexibility in managing web
renamed variable ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added a static method to ` SolrTestCaseJ4 .
log an error if thread allowlist ca n ' t be clear
replaced setOutputSource with setItemWriter in TransformerWriterItemProcessorTests to set the correct item writer for the processor
[ drools - 759 ] only report hit policy when it ' s not collect
add a new test method ` testSlidingWindowsCombine ` to the ` CombineTest ` class to verify the behavior of sliding window combiners
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` and improved log message formatting to ensure
camel - 7319 : remove unused code in managedfilewatcherreloadstrategytest
corrected the spelling of " beautiful " to " beautiful " throughout the code to ensure accurate representation of
refactor AquaMenuBarUI to streamline the use of screenMenuBar based on LWCToolkit to improve code maintainability and ensure compatibility with
fix crash when fall .
refactor the query construction in SimpleJpaRepository to improve clarity and functionality to enhance code readability and maintainability by using criteria queries
added timestamp , parent hash , and difficulty information to the BlockUtil builder to enhance block processing by incorporating genesis block arguments
disabled loop safepoints generation by default
fix rsgroupinfomanagerimpl and zkprocedurememberrpcs to return empty list instead of null
changed access modifiers of several methods in ArtifactResolver from package - private to public to allow external access to these methods for better usability
properly interrupt the reactor thread
added validation for ` maxBufferedDocs ` to ensure it is at least 1 to prevent illegal argument exceptions during document writing
added handling for login state in LoginActivity to manage and perform login attempts effectively
added null checks and improved value extraction logic in Pump . java to enhance error handling and ensure correct data processing
updated access modifiers from private to protected for several fields and methods in HttpShardHandlerFactory and LBHttpSolrServer classes to enhance encapsulation to improve
updated the order in BaseAuthenticationServiceSelectionStrategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added a
added Jetty server support using HandlerList in TestJNDI . java to enhance debugging capabilities for better monitoring and error handling
refactor code formatting and improve readability in SortedDynPartitionOptimizer . java to enhance maintainability and clarity of the code
change return value from NioEventLoop instanceof loop instance to always return true to simplify the code logic for better clarity
updated the logic for setting the number of null elements based on the ratio to ensure that the new statistics are accurately reflect the correct number of null
camel - 14263 : camel - kamelet - make it possible to export kamelets from camel - kamelet .
updated OSMJob . java to utilize OpenID authentication and authorization services to enhance security and error handling during upload processes
[ j2kt ] [ pptx ] remove some system . out debug statement
added client authentication support in IoTDBRestServiceConfig and related classes to enhance security by enabling client authentication in the service configuration
refactor the injection process in ` PropertyAndSetterInjection . java ` and add a new test class ` ChildWithSameParentFieldInjectionTest
refactored BloomUriUniqFilter to use InitializingBean and added getter / setter methods for expectedInserts , hashCount , and
updated the cursor adapter in HomeFragment and added a preference for refreshing in TweetPager to ensure the UI reflects user preferences for refreshing
updated the scroller ' s intermediate header height ratio from 1f to .75 f to improve the visual responsiveness of the scroller
updated import statements and introduced a new RecompilationEvent class for handling recompilation events to improve event tracking and clarify the purpose of the
added functionality to check if system environments are preinstalled to enhance control over host - specific configurations during execution
added a new boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified the ` include ` logic to accommod
added logic to delete trailing slashes from the location string to ensure proper handling of trailing slashes in the servlet location
added properties for entity and score management in StaticPipeline class to enhance flexibility in managing pipeline configurations
updated file path handling and introduced conditional enabling of Whoops based on configuration to enhance flexibility and control over whoops setup based on environment
[ geos - 10974 ] allow catalogrepository to return an exist store .
refactor assertions in Assert . java to improve code readability and maintainability
renamed MultiLineTests to MultiLineGridlikeTextTests and added new test cases for multi - line text handling to improve test coverage and ensure proper
tidy up the test and polish the code
replaced the use of IMeasurementSchema with a single list of measurements in multiple classes to simplify the code and improve readability by eliminating
corrected formatting of the for loop and added memory usage calculation to improve code readability and ensure correct memory usage calculation
updated the JAR file reference from " slf4j - log4j12 " to " slf4j - reload4j " in
( chore ) camel - hue : fix osgi test failure
moved CrashHandlerActivity , CrashHandlerActivity , PreferencesActivity , and TerminalActivity to the ' activities ' package and updated import paths to organize the activities
[ drools - 1276 ] ignore broken test due to drools - 1276
added a constructor to ` PullRequestMergedEventsStream ` that reads a specified pinot schema from a specified file and consumes it to enhance the
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in taskslot
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listener in ` NettyWebSocket ` and ` Netty
updated lock release logic in MoveTask . java to include error handling for lock removal to improve reliability of lock management
refactor property loading to use ResourceBundle for better encapsulation to improve code maintainability and reduce boilerplate code
do n ' t throw away receiveaddress if it be null
no effective change - code cleanup
fix jobmanagerstartuptest failure on window
chore : [ datastream ] update proto option name to match open source code convention ( # 86 )
added a Bundle for extras in FileDisplayActivity to enable proper handling of extras in the activity
replaced ` break ` with ` continue ` in ` ParticleEmitter . java ` to ensure that the loop continues instead of breaking the particle iteration
updated cluster name expectations in AmbariManagementControllerImplTest to reflect new expected values and times to ensure tests accurately reflect the expected
removed nullable attribute from the " SERVICE " column in TransientSessionTicketImpl . java to simplify the table column definition and handle NoResultException gracefully
updated Bug4823811 . java file to address identified issues
updated path relativization logic in RmStep . java to use the project filesystem ' s path relativizer to improve file path handling consistency
[ deconz ] request full state if first request be initiate via deconz ( # 2298 )
added an ` attribute ` property and modified related methods in ` ShibbolethCompatiblePersistentIdGenerator ` , ` ShibbolethAuthenticated
updated the formatting of the @ Inject annotation to improve code readability and maintain consistency
added a logger message for statistics and refactored the keyboard hiding logic to use a bundle to improve logging clarity for keyboard visibility changes
removed unnecessary whitespace in FileNodeProcessor . java to improve code readability and maintain consistency
refactor NavigableMap and NavigableSet classes to improve code organization to enhance maintainability and readability of the codebase
add unit test for slurpFile ( ) method
updated access modifiers and added @ FunctionalInterface annotations to several classes to enhance code clarity and maintain consistent formatting
refactor span assertions in TraceWebFluxTests to use a separate method for fetching span names to improve code readability and maintainability by
added support for DateWritable in ETypeConverter and related classes to enable date conversion functionality in Hive schema processing
replaced hardcoded whitespace with a constant from the Patterns class to improve maintainability and readability of the code
ggb - 2118 input box : add positive / negative step value to slider
updated column count validation logic in SemanticAnalyzer . java to ensure correct handling of column counts during query processing
refactor scoring logic in WANDScorer . java for improved clarity and correctness to handle cases where no matches are found to enhance
refactor Correspondence class to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java to streamline dependencies and improve code clarity
initialize ` curPixVal ` to 0xFF000000 in ` XRSolidSrcPict . java ` and add a new test class `
refactor the BiomeDictionary class to use a collection for supertypes instead of a list to improve code clarity and maintainability by
rename variable ' withinTolerance ' to ' exceedsTolerance ' for clarity to enhance code readability and maintainability
updated the annotation from @ Ignore to @ Stability ( flavors = LOCAL | PLATFORM _ POSTSUBMIT ) in TaplTestsLauncher3 . java
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
[ hotfix ] fix check for empty log file suffix
refactor PythonBuckConfig class structure to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of system shared library management
improve meiligao protocol ( fix # 569 )
fixed potential npe in powerdiode . get battery data
added a new TrimCache class to manage cache size and updated preferences to reflect this change to improve cache size management and provide user feedback upon cache
fix checkstyle issue in util / rendertask
replaced return statements with exceptions that throw NotAuthorizedException in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and AccessControlUtils to
[ hotfix ] [ scheduler ] add scheduler . scheduleperiodically overload method
update refreshListOfFilesFragment method to include item click event to enhance user interaction by notifying the UI when an item is clicked
added conditional logic to choose an appropriate stream based on the presence of a " . xsd " file at the specified path to enhance flexibility in
refactor ` create _ table _ with _ environment _ context ` to ` create _ table ` and remove unused ` EnvironmentContext ` parameter to
fixedratefraginsstatetracker : do not start task if tracker be not start
updated indentation handling across multiple parser classes to ensure valid indent values to enhance code robustness and prevent potential parsing errors
refresh autoplay when wifi be connect .
remove redundant check for control frame in framegenerator .
added visibility for the collapse handle in WidgetsBottomSheet to improve user interface by making the collapse handle visible
added two new files , Issue475 . java and XSS . java , for testing HTML and XSS input handling to implement XSS - related security features
do n ' t attempt to scroll if there be no unit to scroll
inverted the condition for checking the size of the contract list from greater than or equal to to less than the size of the contract list to ensure that the
added ` add ` and ` put ` methods for ` JsonArray ` and ` JsonObject ` with enum support to ` JsonArray ` and ` JsonObject `
added hashCode method to IPPPrintService and created TestRaceCond class for validation to ensure consistent hash code comparison between PrintService instances
no effective change - code cleanup - remove unused method
do n ' t enable connect if platform fee > 0
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
properly handle buffer encryption in medicodecrenderer
removed the ` public ` access modifier from multiple class declarations in order to enforce package - private visibility for these classes
added Retrofit import to Part and PartMap classes to enable Retrofit functionality in the application
refactor parameter handling in JsonBuildHelper and ParamsBuildHelper to improve clarity and structure to enhance code maintainability and readability by
added TASKBAR _ OVERLAY _ PROXY to the list of taskbar types in AbstractFloatingView . java to enhance functionality by allowing overlay dial
fix : update gapic - generator - java with mock service generation fix ( # 4382 )
updated alpha calculation in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation handling for recent animations
removed the second parameter from the render script creation in AllAppsView . java to simplify the code by eliminating unnecessary complexity
fixed typo in pmd javadoc
refactor PluginListCellRenderer , PluginManagerActivator , and PluginTableModel to use a centralized isSystemBundle method to improve code readability
updated import statements and refactored method call syntax in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability by
bloomfilter test : use low false positive rate
refactor how motor configuration is handled by changing from ` rocketConfiguration ` to ` defaultConfiguration ` and adding logic to select the selected motor
server : fix npe from host with no attach tag
fix nullpointerexception in defaultrecordstore
kvm : add more logging to detect cloudstack failure
updated the constant string messages in ParamAction . java to include name and value attributes to improve clarity and consistency in error reporting
updated constructor parameters in BaseStubbing and ConsecutiveStubbing classes to use a generic Object type instead of InvocationContainerImpl to enhance type safety and
[ bugfix ] strip parameter from method name in location opener
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the latest version releases
apps - 275 use set instead of list for allow command
[ geot - 6078 ] use label _ all _ group option instead of repeat option
mow - 162 center the popup in the applet when there be overlap
updated error messages in ValidationSuite for consistency and clarity to enhance readability and maintainability of the code
replaced an anonymous inner class for the StartingWindowListener with a dedicated instance to improve code readability and facilitate future modifications
added a doc comment inherited from MBeanServerConnection to improve code documentation and maintain code clarity
updated exception handling in CheckPackageAccess . java to ensure proper validation of PackageAccess and PackageDefinition exceptions
increased the await termination timeout from 30 seconds to 90 seconds and added an assertion to verify that the executor service is not terminated before termination
changed the ` loggingEnabled ` variable type from ` boolean ` to ` Boolean ` and added a conditional check before setting it to ensure logging is only enabled
added @ JsonIgnore ( true ) annotations to Schema . java to exclude sensitive data during JSON processing
increased test timeout from 5000 ms to 10000 ms to allow more time for tests to complete successfully
refactor the ` train ` method and update the ` max ` parameter in the ` SimpleNaiveBayesClassifier ` class to improve cl
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to Enhance clarity in module naming and introduced audit logging functionality
refactor Prototype class to improve code readability and maintainability
added a check for table transactional status in SemanticAnalyzer . java to ensure that the table is treated as a transactional if it already exists
[ java ] use onblock ( ) instead of onfirstwrite ( ) for write fragment .
fix cea subtitle with negative timestamps
add getalias ( ) method to datastoremetricqueryimpl to make it compatible with kairos .
updated currency pairs from BTC / CAD / DOGE to USD / USD in VaultOfSatoshiBaseService . java
hhh - 14898 fix resource leak in test
updated KafkaSender import statements from ' kafka11 ' to ' kafka ' to align with the latest Kafka package structure
added two new files , GwtBinaryIntegrationTest . java and A . java , for testing GWT binary integration to facilitate testing
updated mouse event handling in BrowserContentPane . java and refactored ResultSetRenderer initialization in SQLConsole . java to improve error handling and ensure proper resource
added additional test cases in EnhancedRandomImplTest . java to improve test coverage and ensure robustness of random value retrieval
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes and updated property management in SAXParser to improve security property management
added a new file ` InlineDefaultMethod . java ` with interfaces and classes demonstrating default method inheritance in interfaces with default methods to facilitate testing
replace occurrences of " ESCAPE " with " GLOB " in the SqliteFieldPredicateView . java file to standardize SQL query formatting to enhance
drools - 1978 allow to override the getdmnprofiles method
fixed - redissonscript . executescript ( ) method do n ' t reply to slave node if slave node do n ' t exist .
refactor EpressoLanguage and StaticObject to improve readability and simplify field setting logic to enhance code clarity and maintainability by
updated logging statements to use verbose level instead of debug for several classes to improve logging detail for better visibility of project generation processes
retain packet and release the packet payload to ensure proper memory management and prevent memory leaks
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants . java and modified thread pool initialization in WebServer . java
refactor shortcut management logic to improve handling of removed shortcuts to enhance clarity and efficiency when managing shortcut information
remove unnecessary check for string type in DefaultHttpClientBinderRegistry . java to streamline code for better readability and maintainability
added a case for the home navigation in DetailFragment to handle navigation to the user ' s home screen to improve user experience by providing quick access to
added a check for AndroidMarket before including play services to ensure that play services are included only when the appropriate market is available
refactor TableBlockParser to improve cell parsing logic and add a new test for outside whitespace after headers to enhance code clarity and ensure
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enhance project management by allowing users to specify b
refactor PotentiallyDeadCode to utilize a new method for managing unused Java types and update source path handling to improve code clarity and
added support for detecting redundant arguments in diamond constructs to enhance type inference reliability and clarify warnings for redundant arguments
replaced invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in HighwayClientFilter , RestClient
removed unused imports and debug logging in SolrCacheHolder . java to improve code clarity and reduce unnecessary dependencies
added exception handling for authentication failures to improve error management and ensure proper authentication flow
modify the condition checking for zero in the float comparison to ensure accurate zero handling for floating - point values
added a local file for " logback . dev . xml " in JoobyMojo . java and included it in Main . java to ensure
added a new class JaasEventCheck to handle jaas authentication events to enable proper handling of failed and successful authentication events in the application
refactor animation logic in QuickstepTransitionManager to use a list of views instead of a single view to improve code readability and maintainability
modified the string distance comparison in ` ConjunctionSolrSpellChecker . java ` and added a new test class ` ConjunctionSolrSpellCheckerTest
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` to improve flexibility in handling different data structures
[ hotfix ] remove unused variable in defaultleaderelectionservice
removed the public access modifier from the setAuthentication method to encapsulate the method for better encapsulation
cloudstack - 5873 : increase agent script wait time for ready command
updated JDBC table parameters to use the scoped database and schema directly to improve clarity and consistency in database connection handling
rename ` sqlUpdateAUP ` to ` sqlUpdate ` across multiple classes to standardize the naming convention for SQL update statements
replaced WeakHashMap with synchronizedMap for schemaTypeCache to improve thread safety and performance in schema caching
refactor header addition logic in StaticServerHttpHeadersWriter to check for existing headers before adding new ones to improve efficiency by avoiding unnecessary header
ignore the test that depend on m2 because it depend on file available only from cmu
added a method to create a storage directory in the TestCollector class to ensure necessary directories are available for storage storage
added a chunked streaming mode to the HTTP connection to improve performance during streaming operations
add some basic / multiple / single type checker test for the json schema parser
hbase - 15454 move protobuf to hbase - common ( addendum )
added a new ` Node ` class and a test method to verify recursive structure behavior in ` BeanPopulatorTest ` to ensure that the ` Node `
added IOException to the getRemoteName method signature to indicate that the method may throw an IOException
replaced OwnCloudClient with Apache Commons HTTP client in multiple classes to improve HTTP client performance and simplify error handling
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ in GlobalMethodSecurityBeanDefinitionParser by introducing an aspectJ mode check to ensure compatibility with Aspect
reorganized import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to improve code organization and enhance
added a ` remove ` method to ` OHLCSeries ` and a corresponding test in ` OHLCSeriesTests ` to enhance functionality for
fix a nullpointerexception in testcompactformatintegrationtest . testmemberprojectionandgetall
removed duplicate joint removal logic from the joint edge collection to improve efficiency by eliminating redundant updates to the joint edges
fix search for chat room when no filter
[ hotfix ] [ test ] move sourcereaderbasetest and sourcereadertestbase to testutils package
consolidated multiple checks for document existence into a single block to improve code readability and reduce duplication
added new ` HookDefinition ` interface and ` JavaHookDefinition ` class , along with a corresponding test class ` JavaHookTest ` to provide
refactor flushing of buffer bytes into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing
updated the ` setExoOptions ` method to include a ` allowTs ` parameter for better control over the playback options to enhance flexibility in
removed User identifier from the identifier collection to clean up unused identifiers in DMRDecoderState
added a static constant ` INVISIBLE ` in ` Color . java ` and modified the ` toString ` method in ` RailButtonShapes . java `
updated the null handling logic in CountAggregationFunction and added a new test for COUNT query options in NullHandlingIntegrationTest to ensure correct handling of function identifiers
set the deep attribute of InternalTransaction to - 1 to reset the internal transaction state to avoid potential errors
illegal xml character in stream initiation message should be escape .
updated file path construction in PerfRunData , ReutersDocMaker , and TrecDocMaker to use a configurable work directory from configuration to ensure
[ core ] mark old ruleset a deprecate
use the codebuffer . position ( ) instead of the dummy label to trigger a failure .
replaced instance variables ` minStamp ` and ` maxStamp ` with static final constants ` MIN _ TIME ` and ` MAX _ TIME ` to
refactor BitDocIdSet class to improve code readability and maintainability
refactor connection handling into a separate method for generating JSON responses to improve code readability and maintainability by reducing duplication
added support for video attachments in DetailFragment and updated related methods in GalleryActivity to enhance functionality for handling video attachments in the application
do n ' t try to drain the tank if the player be sneak .
refactor CsharpLibrary to support handling of RuleAnalysisLegacyBuildRuleView alongside PrebuiltDotnetLibrary in addition to CsharpLibrary to
[ pee ] process iq stanza of type get or answer .
truffle : fix npe in case of miss runtime
fix windmill server metric not update when active work be empty
pdfbox - 4892 : save last objectid and objectoffset until after brute force search
added LwjglAppletApplication constructors and modified canvas behavior in LwjglNativesLoader to enhance applet management and improve focus handling
simplified the stringRepresentation method in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve code readability and reduce redundancy
refactor password policy application logic in LdapAuthenticationHandler to enhance clarity and maintainability of password policy handling
refactor Int2ObjectCache implementation to improve performance and memory efficiency
added a new private String variable ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated the ` LdapUtils ` to utilize it to
refactor Readable class to improve code readability and maintainability
updated the PDF document handling in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT for improved font support to enhance
updated share menu item icon reference in CaptureActivity . java to improve clarity and consistency in icon usage
updated Java version checks to include major and minor version identification to enhance compatibility checks for Java versions in the application
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 561 - jdbc41
refactor GenericContainer class to improve code readability and maintainability
replaced Set with List for filteredSet to improve performance and reduce memory overhead
added multiple @ Override annotations in various classes to ensure proper method overriding and improve code clarity
reordered the PNG and GIF image format declarations in ChartProvider . java to improve code readability and maintainability
update file dialog to use parent directory instead of the working directory ( # 2442 )
removed unnecessary empty block creation in JavacParser . java and added a new class ExtraSemiTest . java with a Java source implementation to simplify
added support for " AFTER " and " BEFORE " keywords in user repository and updated related repository methods to enhance user search functionality by allowing
refactor Test15FloatJNIArgs . java for improved readability to enhance maintainability and clarity of the code
refactor command - line arguments for plot version and author information in the mmm plugin and ppp plugin to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4657 - fix logic error in mockprocesscontext .
[ java ] ensure that archive callback be not reentrant to prevent recursive call .
added null check before merging dependency to avoid potential NullPointerExceptions during dependency merging
added a timeout of 10000 milliseconds to the SslBytesServerTest class to ensure tests have sufficient time to complete successfully
peer : fix typo in javadoc .
added IndexSegment interface and updated method names for clarity to enhance code readability and maintainability by providing more descriptive methods
modified FailureWatcher to check if exportedData is null before calling writeTo to enhance null safety and avoid potential NullPointerException
refactor RecyclerViewFastScroller to improve popup positioning and scroll behavior to enhance user experience by ensuring proper scrolling behavior
updated command execution instructions and added a method to check if the tool window is instantiated to enhance functionality and ensure proper handling of project disposal
added a platform check for Windows - specific checkbox before adding the preventSleep item to the builder to ensure the system correctly prevents the sleep checkbox on non -
updated import statements from javax to jakarta for servlet handling to align with the latest Jakarta EE specifications
updated the handling of window dimensions and crop sizes in QuickstepAppTransitionManagerImpl . java to accommodate vertical bar layout adjustments to
added full - screen exclusive mode functionality to XWindow and XWindowPeer classes to enhance user experience by allowing access to the full - screen
added length validation for played duration in StringUtil . java and created corresponding unit tests in UMSUtilsTest . java to ensure correct
added methods to manage URIs with credentials in DagUtils . java to enhance credential management for map tasks in the DAG
( chore ) camel - base - engine : use entryset ( ) instead of keyset ( )
trim whitespace from the last thread name to ensure consistent thread naming format
updated the message to specify that the next point must be log to a file instead of logging to a specific file to improve user experience by providing clearer
[ hotfix ] fix checkstyle violation in job
added a new abstract class Unused with specific field access methods and a test for unused types to ensure proper handling of unused types to enhance type safety and
updated HBASE _ MASTER key from " hbase _ master _ host " to " hbase _ master _ hosts " and added new host constants
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused or redundant event - related interfaces
modified the ` performJoin ` method to return a list of ` GenericRecord ` objects instead of a single ` GenericRecord ` to enhance flexibility
updated the maximum delegate lock period validation to allow values that exceed 10512000 to ensure proper handling of lock periods based on dynamic properties
do n ' t try to configure nic if there be no network offer offering on the network
removed initialization method and overridden the applySpecification method in CmcExchange to streamline the code and ensure proper handling of exchange specifications
updated configuration handling in GossipLocalNode to validate the " seed . node . ip . list " configuration and changed constant from " config . json "
add system property ` ` hazelcast . client . tpc . enabled ' ' , default to ` ` false ' ' ( #
upgrade swagger - ui version to 3.18 . 2 ( # 2584 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve accuracy in computing modular
refactor key initialization logic in NamedObjectList . java to handle empty names more gracefully to improve code clarity and ensure proper initialization of the key string
updated cleanupEmptyDir method to cleanup empty table directories in QueryCompactor and related classes to improve code clarity and reduce duplication in
refactor AsyncCache and Cache classes to improve code organization and readability
added import for RCFileInputFormat and registered it with Kryo to enable Kryo serialization for RCFileInputFormat functionality
added default methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` to provide specific type and category retrieval for specific column types
added error handling for invalid host headers in Request . java and improved test case in RequestTest . java to ensure proper handling of invalid host
updated ShadowTimeZoneFinderTest to use ReflectionHelpers for retrieving time zones and modified the test method to ensure compatibility with API level P and above to
remove addoutgoingvalues and forEachoutgoingvalue from standardop
updated variable and method references in SegmentCoreReaders and SegmentReader classes to improve code clarity and maintain consistency in directory management
fix : check for exist main thread profile before roll back transaction
added validation to ensure that annotations are not allowed in a Buck rule unless required _ for _ source _ abi has been set to true before proceeding
updated string constants for Greek , Irish , UAX29 , and Turkish lower case filters to use lowercase instead of uppercase to ensure consistency
updated HSSFSheet and Sheet classes to improve code clarity and maintainability
fix backward compatibility issue with discovery
added logic to filter out specific time zones from the list to ensure accurate representation of time zones
updated the initialization of SurfaceSyncGroup to include a string parameter to specify the taskbar controller ' s context
removed unnecessary BsonObjectId when deleting files in GridFsTemplate . java and added a new test method in GridFsTemplateIntegrationTests . java to
added methods to retrieve total size , byte , andSoFar in ShadowDownloadManager and updated test cases accordingly to enhance the functionality of the Download
refactor character input handling in TextField . java to use a boolean for enter key detection to improve readability and maintainability of the code
fix ` ` can not add item to group node ' ' when click ' add group ' button
refactor ` afterSetStatements ` method in ` BlockLexicalContext ` to improve statement handling logic to ensure correct terminal state management for ` VarNode `
added hashCode implementation using HashUtilities in IntervalXYDelegate , XYSeriesCollection , and XYSeriesCollection classes to ensure consistent and accurate hash code generation
added cleanup method to clientqueueDisruptiontest to clean up resource
updated formatting of parameters in CloudWatchAppender . java and renamed test method in CasPersonDirectoryTests . java to improve code readability and
updated JSON serialization method from serializeSpecialDoubleValues ( ) to serializeSpecialFloatingPointValues ( ) to ensure proper serialization of special double and float point values
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduceNextBlock ( blocking
added checks for non - empty language tags and improved language tag validation to enhance robustness and correctness in language tag processing
cloudstack - 28989 : allow ssh to agent to be disable by default
[ hotfix ] fix checkstyle violation in scheduleaction
updated import statement for PagerSlidingTabStrip to ensure compatibility with the latest package structure
added a condition to check if the string contains the " - " character in the filter to ensure that only valid characters in the search string are processed
updated sorting label text from " natural order " to " Natural column order " in BrowserContentPane . java and refactored UISettings method to
removed unnecessary array copy operation to simplify code and improve performance
replace direct usage of remoteAddr with encoded remote address in HtmlSessionInformationsReport . java to ensure proper HTML encoding without spaces
updated topic check to use " smarthome / items / " instead of " / " to ensure compatibility with the updated topic format
remove unnecessary sync in fasthttpdateformat
added multithreading support for file moving processes in Hive to improve efficiency by allowing multiple threads to move files concurrently
added two overloaded TimerTask methods to the WrapTimer class to enable customizable TimerTask execution based on trigger conditions
[ flink - 1979 ] [ table - common ] fix typeutils . gettypeinfo for date and time
updated error handling to include verbose logging option to improve error reporting by allowing for more detailed error messages
updated ClickStartHandler initialization to include a boolean parameter to control menu visibility based on application state
api : s2s vpn : prevent vpn connection to be establish between account and customer gateway
updated error handling in CursorReadingTask and added a new unit test for error management to ensure consistent error handling behavior and improve test coverage
pdfbox - 4892 : detect encrypted pdfs and abort extraction
[ 3.0 ] fix the unit test error of curatorwatcherimpl
[ te ] fix typo in comment and test
updated the deletion logic in HostsList . java to ensure the correct URI is appended to the intent and handle deletion more effectively
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
updated the method signature of ` replaceOrderBulk ` to return a list of ` BitmexPrivateOrder ` instead of a collection to enhance flex
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and override ` enterFunctionNode ` in
added a new file ` J9ConstantHelper . java ` and refactored ` ObjectHash . java ` to utilize this new helper
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to ensure that concurrent modifications occur only once in a multithreaded
added ability to send unavailable roster item to jid .
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and ` PartitionDesc . java `
removed unnecessary whitespace in the loadHandle method call to improve code readability and maintain consistency
added null check for extTypeCustomDeserers before initializing it in MessagePackFactory to avoid potential NullPointerException when extTypeCustomDeserers is not
set mockserver . loglevel to warn since it be a no - op
removed the test annotation from AbstractRegistryFactoryTest . java to clean up the code and improve readability
removed unused imports and refactored the createJetty method to streamline code and improve readability
updated scoreMap to a map < String , Map < Float , Float > > and added termScoreMap to enhance key - value pairs to improve
updated conditional checks for data and added an ` eq ` method in ` U64 . java ` to ensure correct handling of negative parameters to improve robustness
fix : remove useless headline style
updated the notifyChange method to include a check for dark text support to ensure that dark text is only notified when appropriate
[ flink - 26011 ] [ checkpointing ] do n ' t schedule checkpoint when there be too many pending request
updated import statements and changed core pool size constants from milliseconds to minutes to improve code clarity and reduce potential errors in core management
replaced ` filter ( ) ` with ` anyMatch ( ) ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver ` to improve
[ gr - 20536 ] [ gr - 20536 ] disable opencv test on window .
resolve http : / / issues . apache . org / activemq / browse / amq - 3979 - allow user to specify
python proxy now throw any throwable , not just the first exception
added a new annotation ` @ Repeat ( ) ` with ` Retention ( RetentionPolicy . SOURCE ) ` in the ` Issue ` class to
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified test
updated socket connection logic to handle " socksProxyHost " system property to ensure proper address resolution for SOCKS proxy connections
[ hotfix ] fix checkstyle violation in slotstatus
[ ci ] remove unused import
replace HashSet with LinkedHashSet for protocol and cipher suites in SslContextFactory to ensure predictable ordering of elements in the set
added a static systemResource variable and logic to cache it to optimize resource retrieval by avoiding redundant operations
ensure plaintext segment size do n ' t exceed buffer size .
added a test for handling invalid circuit breaker fallback URIs to ensure proper error handling for invalid fallback scenarios
added SSL connection support in AppPage . java to enhance security for HTTP connections
updated size limit handling in PerformanceTest . java to ensure proper memory management during read operations
moved the ` preferAES ` property and its getter / setter methods from ` StandardProtectionPolicy ` to the ` ProtectionPolicy ` class to consolid
( chore ) camel - opentelemetry : use logger instead of standard output
[ hotfix ] [ test ] remove unused test method from elbintegrationtest
renamed the method ` setAlarm ` to ` setRingtone ` to improve clarity regarding the method ' s purpose in the AlarmReceiver class
added error handling for file creation in DiacriticTest to ensure robustness by preventing application crashes due to invalid paths
hhh - 15464 - fix followonlockingtest failure on oracle 11
updated file retrieval and error handling in TextureUnpacker . java to ensure robustness by validating the existence of atlas files and improving exception management to en
added locking mechanism around service state changes in AmbariManagementControllerImpl . java to ensure thread safety during service deployment
updated FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve security metadata handling
added a test method to verify that the result set does not close when closing to ensure proper resource management and prevent potential resource leaks
remove usage of deprecated inputstream . mark ( ) in inputstreambodygenerator .
added logic to remove pre - deleted databases from the schema map to ensure that obsolete databases are removed from the response
added handling for chunkedWriter in Http1xUpgradeToH2CHandler to ensure proper resource management by removing it when it exists
added a confirmation dialog for item deletion in FullDetailsFragment and updated related conditions in EnhancedBrowseFragment to enhance user experience by inform
replaced the direct usage of RuleFinder with a new RuleBank interface to improve code organization and encapsulate rule management
improve error message if initialization of sslengine fail
added new classes ` TestMonomorphicObjectCall ` and ` Object ` along with a native file ` Object . java ` to implement and
replaced calls to ` removeMetaDataSource ( ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java `
phoenix - 5978 defaultmemstore should seek only by cf cf with expired timestamp
[ hotfix ] [ runtime ] rename ' localstate ' to ' localrecoverystatedirectories ' in configuration
[ ast ] change alter timeseries statement type to alter timeseries ( fix bug )
fix # 264 : make condition . matchtext ( ) more flexible
[ hotfix ] [ broker ] catch exception in get routingtablebuilder
fix issue with putifabsent
( chore ) camel - jms : use char [ ] instead of string where possible
bug 10325 : do n ' t search for domain recursively when in recursive mode
added a new method ` toSortedListWithCounts ` and modified ` equals ` and ` isUniformDistribution ` methods in ` Counters `
modified the initialize method to preserve the warning of the original status to enhance the clarity of the initialization process
truffle : invalidates interpreter and interpreter cache in type . gettype ( )
refactor readObject calls to use a separate variable for clarity to improve readability and maintainability of the code
fix npe in lrdictionary . reset ( ) . ( # 138 )
refactor filtering logic in DatagramSocket to improve handling of datagram packets to enhance security by ensuring only valid data is processed
test : migrate query -dns module to junit 5 ( # 4382 )
added a new file NutchServerInfo . java with properties and methods to manage server - related information to provide structured information for the application response
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource for improved attribute management to enhance flexibility in handling token attributes during filtering
add support for specify a timestamp on cql and thrift insert
updated DSAParameterGenerator to handle non - block prime strengths and simplified BigInteger calculations to improve clarity and correctness of the algorithm ' s behavior
[ web ] fix infinite loop on large number .
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and validate new IP address formats
added constraint violation checks in DefaultJdbcOptimisticLockingExceptionMapper to enhance error handling for database exceptions
( chore ) camel - broker : fix checkstyle violation
added methods for adding tabs with custom font and size while refactoring the createTab method to improve tab creation flexibility and maintainability
fix arrayindexoutofboundsexception cause by zero - sized array
[ hotfix ] [ test ] expose taskmanagerruntimeinfo in mock environment
mavenvisitor : fix npe in case of miss tag
updated mock variables to use " MOCK _ APP _ SECURITY2 " , " MOCK _ NAME2 " , and " MO
added a new test class FormatCheckingTest for verifying class format errors to ensure proper handling of illegal class names during Java process execution
updated line number assignment logic in CodeGenerator . java to improve clarity and maintainability of line number handling
wrapped the retrieval of service properties in a try - catch block to handle potential exceptions during property retrieval
added overloaded createToggle methods for different input types in RadioButton class to enhance functionality for creating toggle buttons with specified icons and commands
updated LRUCache to use a predefined cache size and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl from 100 ,
resolved - issue int - 322 : channelparser now accept a default capacity value
added null check for symbolicName before quoting it to avoid potential NullPointerExceptions
add support for -- external and -- external command line parameter
[ flink - 30616 ] [ yarn ] [ test ] add container check before kill the application
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and related classes to improve clarity and consistency
added a null check for ` notPropagatedHeaders ` and updated header propagation logic in ` AbstractMessageProducingHandler ` to ensure that
refactor CompareMode class to improve code readability and maintainability
added HasTests interface to RustBinaryDescriptionArg and RustLibraryDescription classes to provide dependency - level test capabilities for better build management
removed placeholder and error codes from FileMessageVH . java to simplify code and improve readability
updated OnExitTest . java file to improve test reliability and clarity
added an onUserPreferenceChanged method to recreate the taskbar to ensure the taskbar is refreshed upon preference change
refactor HeapDump . java to support different heap dump methods based on IMMVM and invocation targeting to enhance compatibility with different JVM
( chore ) camel - mybatis : fix potential resource leak
simonstewart : implement a good way to iterate over all open window in ie , not just the first one .
updated Java version from JDK 5 to Java 5 and modified trigger patterns for iterator iteration to ensure compatibility with Java 5 features and improve code clarity
set application state to unavailable when the application is no longer available
removed assertions in ByteBufferAs - X - Buffer , Direct - X - Buffer , Heap - X - Buffer , and StringCharBuffer , and adjusted position
replaced ` toUri ( ) ` method with ` split ( String ... ) ` for string splitting in ` ConditionalResolverMergeFiles . java ` to simplify
added setEmpty methods for ArrayData , ArrayFilter , DeletedArrayFilter , ObjectArrayData , and related classes to enhance array handling
changed enum visibility from package - private to public for Protocol and Transport in VirtualAuthenticatorOptions . java to allow public access to these enum members
replaced ` doc4 ` with ` doc6 ` and added a new document ` doc6 ` in ` TestMultiPhraseQuery . java ` to update
fix : do n ' t assign ticket for offline payment
added a new ` _ onTimeoutThread ` variable and improved code formatting in ` HttpChannelState . java ` to enhance thread safety
updated logging statements to include class - specific messages and improve debugging information to enhance logging clarity and facilitate better troubleshooting during testing
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
use local _ quorum by default for paxos when read local _ quorum
added a check for models containing " Home " along with " Denon " in HeosDiscoveryParticipant . java and set playerId in HeosPlayer
added a new ` Wait ` class and methods to manage and retrieve its timeout in ` PlainSelect ` to enhance SQL parsing capabilities by allowing
updated Neo4j data handling to utilize AttributeController for dynamic attribute updates to enhance flexibility and maintainability of attribute management in
added null check for serverName in SessionManager . java to ensure proper handling of null values during session validation
nifi - 1546 : deprecate rocksdbetronome in favor of nifi . controller . repository .
updated the method to read the " IS _ GRANTABLE " value from a string representation to ensure the correct retrieval of the value from the results object
added logging of asynchronous execution and modified URL validation logic to improve debugging and ensure proper URL processing
camel - 16400 : camel - cxf - allow to run cxf mtom a part of the unit test on macos
hbase - 25836 loadtesttool should n ' t create a new cf if it do n ' t exist ( addendum )
added the Disposable interface to the Texture class to enable the Texture class to be garbage - free by implementing it
updated WebappRegistrationCustomizerImpl to handle null tldBundleLocation and replaced WebappRegistrationHelper references with WebBundleDeployerHelper to
check goquorum genesis file even if goquorum privacy be enable ( # 940 )
replaced IOException with Throwable to improve error handling by providing more informative error messages
added a condition to skip " Thailand " for country " JP " in the country check to address issues related to specific country codes
updated response classes from HostResponse . Wrapper to HostResponse . HostResponseWrapper across multiple services to standardize response handling and improve code clarity
added boost comparison and modified hash code calculation in FilteredQuery . java to ensure accurate filtering and hashing based on the boost in the query processing
reformatted the constructor parameters in FileMenuFilter . java to improve code readability and maintain consistency
replace listbox with verticalpanel for text edit
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that the CMS class un
fix an arrayindexoutofboundsexception in spongecommon
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to use ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatementSetter ` to
fix compactionstest . testcompactionstest rangetombstoneworld flakiness
added null check for the " type " attribute in MiniAapt . java and created a corresponding test case in MiniAaptTest . java to ensure
added support for the ` SpEL ` operator in the ` OperatorEnum ` and implemented a new ` SpELJudge ` class to en
updated the type check for ordinalitySymbol from equality to equality to ensure correct type validation for BIGINT type handling
replace sun . misc . Service with org . openide . util . Lookup for better compatibility
8239240 : update copyright year for file in corba repository
added attribute resolution logic for attributes in ` AttributeResolution9 . java ` and corrected a typo in ` ShadowArscAssetManager9 . java `
updated the fullOptions list to include a new version " 6 " instead of a fixed value of " 1.5 " to ensure compatibility with the latest
pushprojectIntotablesourcescanrule : push project into table with metadata only column support
replaced direct calls to ` getLocalizedNames ( ) ` with a sorted list of localized names in ` AboutActivity . java ` to ensure consistent access
chore ( regen ) : update gapic - generator - java with mock service generation fix ( # 269 )
added conditional logic to update shared preferences based on live streaming settings to ensure refreshes occur only when streaming is disabled
added the exception as a cause when creating a MappingException to improve debugging by providing the underlying exception cause
( chore ) camel - ftp : replace assert with awaitility in test
[ hotfix ] fix raw type lint warning in schemaloader
added support for transport in GitClientApplication and refactored RepositoryUrlPanel to utilize it to enhance transport handling capabilities and improve code
added delegation logging for various input consumer classes and adjusted string concatenation in TouchInteractionService to enhance user experience by providing insight into input
added a null check for mavenMetadata and adjusted version handling logic to improve robustness by handling cases where mavenMetadata is null
82587 : [ testbug ] gc / g1 / testlargepageuseforheap . java fails due to unrecognized large page support
bug 10605 : add db upgrade statement to check if usage db exists
http : / / issues . apache . org / activemq / browse / amq - 2892 - fix for amq - 289
added a new test class for ObjectStreamClass functionality to ensure proper serialization and deserialization of ObjectStreamClass objects
simplified conditional checks for ` getDataCenterInfo ( ) ` in ` ZoneAwareDiscoveryFilter . java ` to improve code readability and maintainability
changed log level from error to warn for tracing data logging to better reflect the severity of issues encountered during execution
added a toString ( ) method to the Generator class to provide a readable string representation of the number of registered generators
refactor authority handling in URI . java and add new test cases in Test . java to improve code clarity and ensure correct behavior of URI operations
added a check for null or empty resources in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure
added null response check and improved error logging in AccepttoApiUtils . java to enhance robustness of API response processing and provide cle
updated byte buffer allocation logic for Android versions 5 and above to ensure compatibility with Android versions below 5
refactor SybaseASADatabase class to improve code readability and maintainability
added a ` forceProjection ` boolean to ` HashJoinInfo ` and modified related methods to utilize it to ensure consistent behavior across different join operations
added a method ` getStringDistance ( ) ` to return the value of ` sd ` to provide access to the ` sd ` variable in the SpellChecker
added flags for mutable and immutable pending intents in AndroidImplementation . java and implemented a method to create mutable PendingIntent for SDK version compatibility to ensure compatibility
refactor HiveFileFormatUtils to encapsulate read column ID handling in appendReadColumnIDs method to improve code readability and maintainability
updated method and variable names from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple instances of DisplayTemporaryToast ( ) in SavedExperiments . java to display a Toast message with a duration of Toast duration to enhance user
added version resolution logic in ServiceModule and corresponding test in ServiceModuleTest to ensure correct version handling and validation of service information
added a new test class RawSerializationTest for Gson serialization tests to ensure correct handling of primitive and object types during JSON conversion
simonstewart : implement the ssl certificate generation feature for safari .
refactor loop to iterate over replies instead of using an enhanced for loop to improve readability and maintainability of the code
increased the timeout duration in the ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for the ResourceAccessException to propagate
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the payload of the NGram token
refactor AclImpl . java for improved encapsulation to enhance security and maintainability of the code
added a new test for ensuring random array sizes are randomized with different sizes in EasyRandomTest . java to improve test coverage for varying array
do n ' t try to reboot vm if there be an exception during reboot
added a ThreadLocal ` __ tryWriteAgain ` to manage asynchronous write execution to improve performance by avoiding repeated write operations
replaced direct access to ` actor . getParent ( ) ` with a method ` ancestorsVisible ( ) ` for better clarity to improve code readability and
added logging for rolling - update failures in RollingUpdateOpFactory to improve traceability and debugging for failure scenarios
[ hotfix ] [ table - planner - blink ] fix minor typo in table - planner module
added error handling for authentication failures related to nonexistent usernames to enhance security by notifying users when a user is not found during authentication
modified AtMostXVerificationTest . java file to enhance verification capabilities for improved security
None
updated SimpleDateFormat instances to specify US Locale to ensure consistent date formatting across different locales
added an ` isInitialized ` method to ` ILanguageServer ` and modified the ` isInitialized ` method in ` JavaLanguageServer ` , and created
updated variable names and assertions in ClientAPITokenIntegrationTest for clarity to enhance readability and maintainability of the test code
added transaction handling methods to DatabaseAdapter and refactored GncXmlHandler to use this new method to improve transaction management and streamline account
replaced byte array handling with ByteArrayOutputStream for reading data to improve performance and memory efficiency
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : fix
added an override for the isAcceptable method in AutoFormatVisitor to ensure that only CompilationUnit source files are acceptable for processing
updated TestIndexWriterMergePolicy to set maximum buffer size and RAM buffer size to 100MB to improve performance and resource management during document merging
added a new test method for updating witness capsules and clear existing wits in Manager and NodeDelegateImpl classes to ensure that the witness
added handling for NoSuchElementException in CopyOnWriteMap . java to ensure proper management of elements during eviction
[ minor ] remove unused log4j . level parameter
added reindexing functionality and updated authentication metrics in BasicAuthIntegrationTest . java and DaemonStream . java to enhance collection management and improve authentication
replaced HashMap with LinkedHashMap for the nodes collection to maintain predictable iteration order
add jersey support for handle internal error ( fixes # 388 )
added header validation for " Connection : Upgrade " and " Upgrade : h2c " in Http2TestBase . java to ensure proper handling of HTTP /
added specific property keys to the systemProperties map to handle specific memory configurations to ensure that these properties are excluded from being processed during runtime
changed method parameters from String to CharSequence in StringSubject . java and added corresponding test cases in StringTest . java to enhance flex flexibility in string
fix checkgraalintrinsics due to miss method
rename test class from IntUtilsTest to PrimUtilsTest to better reflect the purpose of the test class
updated the connection factory to use a new variable for the DataSource instance to enhance flexibility in database connection management
[ hotfix ] [ doc ] fix typo in deploymentoptions
changed the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable . ConstantState ` to ` Drawable ` and updated its usage in ` update
refactor code to use try - with - resources for InputStream and StringReader to improve resource management and enhance code readability
added coalesce operation handling in RexNodeConverter and SqlFunctionConverter to support it to enhance functionality to support coalesce operations in SQL functions
( chore ) camel - hl7
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper class loading for proxy factory generation
add synchronize keyword to deprecate defaultdatetypeadapter
reformatted code for improved readability to enhance maintainability and consistency in the DocumentUtil class
refactor HttpClientRequestBase to streamline query handling and eliminate unnecessary state management to improve code clarity and maintainability
filter out old feed entries from the feed update process to optimize performance by eliminating unnecessary processing
hbase - 27420 log warn instead of fatal when append fails
refactor NodeMap to implement NodeMapIterable and improve iterator handling to enhance functionality and maintainability of the NodeMap class
rename PredicateDefinition to PredicateDefinition for clarity to improve code readability and maintainability by using a more descriptive variable name
added a check for non - empty fields before adding aggregation operations in MongoRecordReader and modified RexToMongoTranslator to handle dynamic SQL type correctly to ensure
add admin to the admin list if no xmpp server be available
replaced MultiFields with SolrIndexSearcher in multiple QParserPlugin classes to utilize the slow atomic reader for term retrieval to improve compatibility with Solr queries
( chore ) camel - bean : cleanup duplicate call in constantbeanholder
remove unnecessary line number check in GroovyParserVisitor . java to simplify code logic and improve readability
[ gr - 31397 ] remove inlined hashcode from frameinfoQueryResult .
make seda block when full test more reliable
added a new package - info . java file for the test resources package to provide package - level documentation for the test resources functionality
updated the calculation of readLen in MessageUnpacker . java to ensure correct reading of data based on position and buffer size
updated import statement for Nullable from common to core to ensure compatibility with the latest Micrometer library version
updated SQL query to include user filter to enhance data retrieval by including user serial details
( chore ) camel - core : fix typo in defaultmqproducerimpl
[ java ] do not add whitelisted resource for non whitelisted class .
add foreign key constraints to ` ` cloud ' ' table for ` ` baremetal _ dhcp _ devices ' '
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to eliminate unused interface to simplify the codebase
added onTearDown method to DefaultAudioSink to call onOffloadBufferEmptying when the audio track is stopped to ensure proper resource management by notifying
added scheduling functionality and modified upstream task handling in UpstreamCacheManager to improve task management and ensure proper execution of upstream tasks
[ hotfix ] fix checkstyle violation in streamtype
updated assertion to include an additional message to provide clearer context on the assertion failure
updated import statements and added role checks in FilestorePage . java and RootPage . java to enhance security by ensuring only administrators
ignore camel - elasticsearch - rest test for now .
updated the ` accept ` method in ` ExpressionControlBusFactoryBean ` to include a check for the declaring class type before accessing its method to ensure
updated button text in OfferBookChartView to differentiate between brand - specific buttons for improved clarity and functionality
camel - 16400 : camel - restlet should use restlet ' s context path matching by default .
block : make coinbase optional in createnextblock
removed Serializable interface from BTreeMapJava and updated test methods to use serialCloneNoCatch to simplify code and ensure proper handling of serialization exceptions
[ drools - 759 ] avoid npe in log during startup rule execution
refactor conditional statement for clarity to improve code readability and maintainability
simplified the method call by removing redundant variable to improve code readability and maintainability
deleted the PlainVerifier . java file to remove deprecated code that is no longer needed
added a condition to close system windows when the user is triggered from an Alt key to ensure proper resource management for better user experience
refactor dialog handling in DialogFragmentIT . java and OCFileListBottomSheetDialog . java to improve interaction with bottom sheet components to enhance user experience
updated ` MimeUtil . parseCharset ` calls to include a character encoding parameter of " UTF - 8 " in ` RestAdapter . java ` to ensure
added a call to super . deinitialize ( ) in the TextField class to ensure proper deinitialization of the TextField component
refactor serialization method in LogFormatTest to use TestUtilities for improved code reuse to enhance maintainability and reduce code duplication
updated the method for parsing the duration from ` previousClause ` to ` previousUntilLast ` and modified the initialization of ` fill ` in ` GroupBy
updated array size validation logic in JAXWSExceptionBase . java to ensure proper handling of negative array sizes and prevent negative array sizes
test : migrate ctresolvenamedstest to junit 5 ( # 4520 )
increased the join time from 10 seconds to 60 seconds in T6567415 . java to allow for more time for thread synchronization
[ hotfix ] [ test ] change default slotsharinggroup of miniclusteritcase from legacy to region
added title handling methods to ShadowActivity , ShadowAlertDialog , ShadowDialog , and ShadowToast classes with i18nSafe = false parameter to enhance
use poilogger instead of log from commons - logging
refactor alarm handling logic in InstarHandler . java to simplify alarm conditions and improve channel state management to enhance code readability and maintain
update localmapstats after map deletion ( # 2593 )
updated response status check to use a switch statement to improve clarity and maintainability of the code
updated the JavaFileManager location retrieval logic to include a new method for finding the javac location to enhance functionality to locate the appropriate Java compilation source
add project name to ` flutter create additional ` recipe ` argument
added a new file ` DeprecatedStubbingTest . java ` to test the behavior of Mockito ' s behavior with deprecated stubbing methods to
updated import statement for DispatcherType from Jetty to javax . servlet . DispatcherType to align with the updated package structure
add support for nml and nx to the part - of - speech rule ( formerly former )
add system property to disable rsa key exchange on fips
fix file handle leak in perforce
refactor OAuth client service creation and deletion in PubSubAPI and SDMAPI classes to use a single OAuthFactory instance to improve maintainability
updated interpolator from AGGRESSIVE _ EASE to EMPHASIZED and modified the getIdleInterpolator method to improve animation responsiveness and
added UpdateRegionLocationPlan to handle region updates and improved logging messages for region migration to enhance logging clarity and provide better visibility into
added a new file ` FileDialogLeakTest . java ` that tests the finalization of ` FileDialog ` to ensure that the ` FileDialog `
hbase - 2593 addendum move testopentableincoprocessor to hbase - server module to hbase - server module
svm : do not allow method annotate with uninterruptible .
[ hotfix ] [ table - planner - blink ] do not use formatcontext . splitdeserializerrowtypemethod in pb codegen
changed the condition from checking if ` dims [ 1 ] . disi ` is null to checking if ` dims [ 1 ] . disi ` is
add sourceinforefreshhandler to the FakeMediaSource class to ensure that only one source be refreshed at the same time
added JVM version checks to the Constants class to ensure compatibility with Java version 1.9 and above
updated FileReporterTest to cast null to String to ensure proper handling of potential null pointer exceptions
change end - to - end encryption key check from false to true to ensure proper handling of end - to - end encryption keys
added menu item handling for the home button in DirectMessageConversation to improve user navigation by allowing quick back navigation
added user retrieval functionality and updated PROTOCOL _ VERSION to 6 to enhance user management capabilities in the application
added a system property to enable tests for specific operating systems to ensure compatibility with different MSSQL architecture
updated the handling of the original start class in the not found strategy to ensure the strategy uses the original original class instance instead of the start class itself
correct error message and add local for parameter
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl .
update nurserostering example to use metal look and feel
update version string format in AppPage . java to ensure proper formatting for version identifiers
refactor animation listeners in LauncherAppTransitionManagerImpl for improved clarity and functionality to enhance readability and maintainability of the
dumpedprivatekey : use version instead of base58
fix incorrect data in edit offer dialog
modified the initialization of ` milestoneParameters ` to use ` newRepositoryParameter ` based on whether the milestone is open or not to enhance flex
fix wooden pipe not respect power effect
added a new method ` getClusterKey ` and modified the ` getStateMachineClusterInstance ` to accept both clusterId and blueprintName ` parameters to
initialized ` downgradeAllowed ` to true in ` UpgradePack . java ` and added a new test for handling ` no downgrade ` in ` Upgrade
updated QName and attribute scan operations to use ' ATTRIBUTENAME ' instead of ' ATTRIBUTE ' to improve clarity and consistency in XML processing events
add an option to not load native library from classloader if system property ` lwjgl . system . emulatedsystemloadlibrary ` be
refactor AppsCustomizePagedView and LauncherModel to use getAppNameComparator instead of APP _ NAME _ COMPARATOR to improve clarity
added a call to closeEntry ( ) in DefaultPlatformManager . java and modified FileOutputStream creation in FatJarStarter . java to ensure proper resource
add more output to debug flaky test .
camel - 14263 : camel - spring - should use source code generate configurer to avoid reflection configuration .
polish ` ` only apply effective scope format string when identifier - based reporter be configure ' '
hbase - 27455 testfulllogreconstruction # testfulllogconstruction fail on hudson due to configuration issue
added properties ` sendBufferSize ` , ` receiveBufferSize ` , ` reuseAddress ` , and ` trafficClass ` to ` DatagramSocketOptions ` class
use getshutdownmessage ( ) instead of hardcoding ` ` shutting down ... ' '
[ java ] deleting deprecate locatable interface
updated error messages in VersionInfo . java to clarify that fields are checks for searchable , stored , and not multiValued to enhance
refactor ` StarTreeIndexOperator ` to replace ` equalityPredicateColumns ` with ` predicateColumns ` for clarity to improve code readability
refactor handshake logic in HandshakeHandler . java for improved clarity and structure to enhance code readability and maintainability
updated closing brace formatting in Navigator . java to improve code readability and maintain consistency
changed private static final String default _ avro _ record _ reader _ class to private static final String default _ csv _ record _ reader _
added support for " LESS _ THAN _ EQUAL " and " GREATER _ THAN _ EQUAL " and " LESS _ THAN _
refactor group by expression validation logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
replaced UnsupportedOperationException with Unsafe cleanup in MappedByteBuffer and added buffer reference counting in FileChannelLinesSpliterator to improve resource management and prevent memory leaks
refactor code to use a local variable for the validator instead of calling getValidator ( ) repeatedly to improve code readability and maintainability
added schedule ( ) method to CircuitBreakerImpl and modified testCircuitBreaker to use it to improve control over the circuit breaker ' s
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent handling for new tasks
[ ds - 3952 ] rename ` ` ajax ' ' configuration to ` ` progressbar ' ' .
added a Disabled annotation to the display name of the test to clarify the reason for disabling the test due to a known issue regarding column privileges
added synchronized keyword to addExportedCount and getExportedCount methods to ensure thread safety when modifying shared access
updated import statement for IntRangeUtil to ensure consistency with the correct invariant class used
refactor character validation and appending logic in HttpParser . java and add unit tests in HttpParserTest . java to improve input validation and ensure
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` to align the activity with the new design requirements
updated SLWTTextListing . java to improve the output message to include the document position
updated ` ForceLeaderTest ` to conditionally use ` useTlogReplicas ( ) ` based on ` useTlogReplicas ( ) `
refactor Thread class to improve code readability and maintainability
( chore ) camel - base - engine : avoid hard - coded file suffix for template file
camel - 16400 : fix the unit test error of defaultcxfbinding
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated date formatting in ToChar . java and added tests for truncation in TestFunctions . java to ensure correct date handling and validate functionality for date calculations
added support for handling valid transaction lists and write IDs in GenericUDTFGetSplits to enable configuration of transaction and write IDs for improved data processing
updated JsonSerDe to use ` Collections . emptyList ( ) ` instead of ` ArrayList . length ( ) = = 0 ` for empty string checks
pdfbox - 4892 : avoid npe , a suggest by valerybokov
refactor SSTDeserializer class methods and add a new test for SSTDeserializer functionality to improve code clarity and ensure correct behavior of string
updated grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant for default grid column to improve code maintainability and clarity by central
updated error message from " empty - differences in line breaks " to " line - break characters mismatch " in Platform . java and ComparisonFailureWithFieldsTest
fix ( terminal ) : fix race condition in samplequeue
removed the " / api " prefix from path annotations in OkexV3 . java to simplify API path usage and improve readability
refactor conditional statements in LineUtilitiesTests to use braces for clarity to improve code readability and maintainability
added error handling for varargs and old array syntax in JavacParser and created new classes T6569633 and T6569633 to improve code robust
add warn log if defaultdrmsessionmanager be use on wrong thread
added METHOD type to VariableContext and updated context parsing logic to accommodate method calls and improve variable context handling
add test for invalid compilation unit and profile string json
update position calculation in Piece . java and remove bufferForMessage limit adjustment in SharingPeer . java to ensure correct buffer limit handling for byte operations
added HttpClientProperties and modified the NettyRoutingFilter and GatewayAutoConfiguration classes to incorporate response timeout handling to enhance the flexibility
updated CxxLibraryFactory and NativeLinkTargetGroup to improve target retrieval and deprecate getNativeLinkTargetInput method to enhance code clarity and
( chore ) camel - rest : add unit test base on user forum issue
added support for RexFieldAccess in ASTConverter and RexNodeConverter to improve handling of field access expressions in query processing
refactor query logging to use a static final array for query entry values to improve code readability and maintainability
[ 3.0 - triple ] relativize noproxy predicate in webclient builder ( # 4078 )
refactor PKCS12KeyStore to initialize certs as an empty array if keyEntry . chain is null and simplify certificate loading in StoreSecretKeyTest to
added reflection access checks and renamed methods for better clarity to enhance security checks and improve code readability
removed the public access modifier from the constructors of the CollisionMap class to enforce encapsulation within the class scope
marked the ` getRawInputFromTransactionInput ` method as deprecated and added a null check for the input parameter to mark the method as deprecated and provide
refactor logging level handling into a switch statement to improve code readability and maintainability
cloudstack - 4892 : remove the ` ` region _ id ' ' field from the ` ` account ' ' table
tika - 60284 -- throw an Encrypteddocumentextextractorexception when run with an old excel file
add miss export to svm builder
removed unnecessary else block around image visibility setting to streamline code for better readability and maintainability
fix test which randomly fail on slow ci server
updated directory creation logic in ShadowContext . java and refactored directory handling in ContextTest . java to improve code clarity and maintainability by using
refactor exception handling to utilize Class . forName for improved readability to enhance code clarity and reduce boilerplate code
increased WAIT _ TIME _ MS from 10000 to 60000 to accommodate longer wait time for improved performance
updated ConnectOAuth2RequestFactory to handle the AUD extension correctly and modified ConnectTokenEnhancer to use the claims set for audience claims to improve
remove default value for ` ` breakonfirsterror ' '
added a new constant selectableItemBackground to define a specific background color for items in the UI
replaced individual import statements for trade - related classes with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and indicate
removed redundant assignment of eventType in TxnSetOperation . java to streamline event type handling logic
use resumablerandomaccessfilelistener instead of resumablerandomaccessfilehandler in retryingexternaldownload
rename accesslogvalves to abstractaccesslogvalves to avoid confusion
update format management in HSSFDataFormat . java and improve test cases in TestWorkbook . java to ensure correct format handling and validate cell format retrieval
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer in favour of migrate to newer kafka connector
updated the condition to check against ` maxCompressedLength ( ) ` instead of ` compressedChunkLength ` for checksum length to ensure that the checksum length does
( chore ) camel - spring - data - redis : added redistemplate for idempotent operation
fix containerrepair patch to account for vanilla bug .
fix legacy local repository not work
[ hotfix ] [ runtime ] improve error handle in taskmanager and localinstancemanager
added instructions for deploying a file via Maven in AbstractArtifactResolutionException . java to enhance error message clarity for users to guid guidance
replaced ` getTemporalPath ` method calls with ` getInternalTemporalPath ` method calls in ` UploadFileOperation . java ` and added a new method
replaced Google Guava imports with Apache Commons libraries and updated imports in FeedEntryStatusDAO . java to improve code readability and maintainability
added threading execution control in ` ContextImpl . java ` and refactored variable names in ` BlockedThreadCheckerTest . java ` to improve code
updated the ` instantiate ` and ` convert ` methods to accept a ` formatterString ` parameter and added a null check for the ` convertOrNull ` method
updated file input handling in LoadContactsTask to support different Android SDK versions to ensure compatibility with devices running Android O and above
refactor methods to remove setter methods for remoteAddress , remoteHost , and remoteHostname to improve code readability and maintainability
added a null check for the realClass annotation in Robolectric . java to ensure that the shadowClass is not null to prevent potential NullPointer
enable tlsmutualauthenticationcertificatechain by default
added a test to verify that the HTTP request does not fail if SSL is used over HTTP to ensure proper error handling for HTTP connections in the server
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve accessibility for Kafka consumer and producer configurations
fix npe in framerenderer when item do n ' t exist
corrected a typo in the warning message from " email / subject / text " to " SMS / from " in CommunicationsManager . java
# 1193 - enh : add beandescriptor . draftqueryoptimise ( query ) ... for efficiency
added error handling for IO exceptions in MultipartBody . java to improve robustness by retrying writing on exceptions related to resource availability
refactor : fix checkstyle violation ( redundant assignment )
camel - 14284 : add apache license header to the file which be miss in previous commit .
attach file dialog : use work directory if available
added LoadOptionsBuilder to SchemaCrawlerOptionsBuilder for enhanced schema analysis to improve flexibility in schema crawling configuration
updated package and added a new test method for loading a legacy library to improve test coverage for legacy library loading functionality
modify TestReader to return null instead of throwing an exception for unknown operation names to provide a fallback mechanism for handling unknown operation names
updated ProjectProperty to set name , enabled , and expanded properties from the prototype to enhance property management for the project configuration
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ javadoc ] fix typo in datastreamjob
fix testcontentprovider on window
camel - 16400 : camel - cxf - should use real class if instance be string
improve performance of http / 2 detection
updated method symbol handling in LambdaToMethod . java and added lambda detection in ClassFileVisitor . java to improve symbol translation logic to enhance clarity
make barq more concise . no functional change .
increase timeout to reduce flakiness
added functionality to set phrase slop in the query parser to enhance query processing accuracy
increased the delay duration in LongPressMouseListenerTest from 10 milliseconds to 100 milliseconds to allow more time for the event processing to improve test stability
updated default host port from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to ensure compatibility with
[ terasology ] make screengrabber more responsive to game save
updated visibility logic in EditShareFragment to include edit options check for better user experience
updated progress calculation in DepthController . java to ensure the progress variable remains within a valid range
( chore ) remove unused session . packetreceived ( )
added debug logging for authentication failure and refactored error handling in DelegatedAuthenticationGenerateClientsAction to improve traceability of authentication failures and en
None
[ pantheon - cli ] add ` ` hide ' ' flag to enable / disable account level permission
added exclusion for CoroutinesRoom $ Companion in the instrumentation configuration to prevent unnecessary instrumentation for the CoroutinesRoom class
added synchronization to the ` isSupported ` method in ` NegotiateAuthentication . java ` to ensure thread safety during the negotiation process
no effective change - remove unused initscript setter
camel - 14263 : camel - core - optimize rout engine to reduce stack frame in use during rout .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added code to open and close a cm block for tagged documents in PdfDocument . java to ensure proper handling of tagged documents in the code
( chore ) camel - core - log4j : add unit test for patternlayout
simonstewart : make it possible to run the htmlunit test in ie , so that we can run the full test suite
updated the type of the ` thank ` method in ` MwThankPostResponse ` to ` MwThankPostResponse ` and added
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` to implement it to enhance functionality by allowing socket - based endpoint handling
disable the RevokingStore and adjust the size of the AbstractRevokingStore to ensure proper resource management and prevent potential memory leaks
add hql test for collection implicit join
normalize whitespace between expected and actual values in the NonVisualRegressionTest to ensure consistent comparison of expected and actual results
refactor IndexWriter to utilize a collection for files to commit and update deleter dereferences handling to improve code clarity and maintainability
removed the ` @ Final ` annotation from several methods in ` BaseError . java ` to enforce immutability and improve code clarity
added validation to ensure a valid user resource percentage is bounded by a maximum of 100 to prevent illegal argument exceptions during execution
added a check for an old login option in the AuthenticatorActivity to ensure that the login feature is displayed based on user preferences
[ hotfix ] [ test ] fix checkstyle violation in streamnetworkthroughputbenchmarktest
modify response page logic in EditTeamPage . java to ensure correct page navigation for users and teams
updated debug log message to include the exception details to improve error reporting for better debugging
refactor shutdown logic in ConnectionManager to include shutdownNow ( ) before closing the server socket channel to ensure proper resource management and prevent potential memory leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
extracted the logic for creating dynamic partition specifications into a separate method to improve code readability and maintainability
theorem proving : make round _ half _ up _ factor consistent with scientific notation
added directory entry handling in JarDirectoryStep and implemented tests in JarDirectoryStepTest to ensure that directory entries are not duplicated and validate
added a new class JWKSetEditor to handle JWK - related property editing to enable users to set JWK - related properties safely
refactor term finishing logic to utilize PendingTerm instances in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to improve efficiency by
improve performance by avoid expensive method call .
set fetcher . threads . per . host . by . ip to false by default
updated conditional check for query and transaction timeout in StatementUtil . java to ensure correct timeout validation logic
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and modified path resolution logic in HaskellGhciRuleIntegrationTest . java to include target
refactor ReplicaPosition class to improve code readability and maintainability
bug 10697 : take initial delay for stats update task only if the initial delay be non - negative
updated interpolators to use a constant FINAL _ FRAME to improve code readability and maintainability
adjusted swipe length calculation by incorporating dynamic display density to improve user interface responsiveness
added a new module - info . java file to define module dependencies and exports for Jetty ' s HTTP3 server
fix npe in jsontype when value be null
simplified the initialization of the ` Context ` variable in ` ResourceResolverBean . java ` to improve code readability and maintainability
[ hotfix ] [ checkpointing ] change default tolerable fail number from optional to get
refactor ` reportInnerClassReferences ` to use ` Element ` instead of ` TypeElement ` and add support for package annotations to improve type
updated command string concatenation in TimestampCheck . java to ensure proper syntax for command execution
replaced FluentIterable with Java Streams to collect files to improve code readability and performance
[ 3.0 ] support register option in dubbo . config . dubbo . service . config . serviceconfig . register ( ) (
end all session if security otr be disable
added node label outline properties and modified rendering logic in NodeLabelRenderer to support customizable node label appearance and transparency options
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated boolean condition from false to true in Win32FontManager . java to ensure correct behavior during font processing
added null check for the variable ' v ' before visiting it to ensure proper cursor behavior when ' v ' is not null
fix : when no classpath be define , assume all error
added text alignment properties and methods for content and text anchors in LabelBlock . java and updated related tests in LabelBlockTests . java to en
refactor Parameter and Class classes to improve code organization and readability
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
replaced boolean isLoopback with Boolean isLoopback and updated related logic to improve clarity and handle null network interface cases
updated ` fromRfc1123DateString ` method to accept a ` Locale ` parameter across multiple classes to ensure consistent date formatting across different locales
try to fix flaky test on window
add new property el - rest - output - no - hits for pagination query
server : remove unnecessary aggregation ratio from disk usage update
[ java ] increment leadership counter in election .
remove unnecessary uncheckrun in readfilesp and streamfilesp
simplified the logic for determining if an item is a widget in the PageChangeListener to improve code readability and maintainability
added isWriteProtected ( ) method to Workbook , FileSharingRecord , and HSSFWorkbook classes , and modified username length handling in File
added error handling around unregisterInvalidatedSessions ( ) method to log warnings when an exception occurs during session management
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
update bridge status message to reflect non - reachable thing
add a loading state flag to the fmlclienthandler to prevent deadlock
fix currency millions / thousands display
refactor MessagePackParser to use a switch statement for handling different data types to improve type safety and provide clearer error handling for invalid data types
added parameterized tests for querying with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure correct handling
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct JSON structure and deserialization of nested maps in JSON format
added bounds checking for x2 and y2 to ensure they do not exceed specified offset limits
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by centralizing sorting order listener
check for empty plan to avoid npe
renamed method names from " dbmsName " , " schemaName " , " tableName " , and " columnName " to " getDb
refactor argIdent assignment in the parser to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is not null when
camel - 14263 : camel - jetty - should use source code generate configurer to avoid reflection configuration .
cloudstack - 6893 : set displayvolume to true by default in volume
refactor version method to accept a boolean for full version output and update related method calls to enhance clarity of version information based on full
refactor conditional logic in ChangeLogParameters . java to improve clarity and structure to enhance readability and maintainability of the code
camel - jta : use debug log level instead of warn
hhh - 16964 skip setoperationtest on oracle for now
http : / / issues . apache . org / jira / browse / amq - 4892 - fix for amq - 489
updated action bar size calculations to account for the ` MainActivity . isPopup ` flag in multiple fragments to ensure consistent status bar height based on
enable classhierarchyoracle by default
apply patch with thanks to damian for the patch .
refactor JodaTimeRangeRandomizersTest to use assert statements and replace DataProvider with assertThat to improve code readability and maintainability
refactor schema redirection logic in WebDescriptor . java to use conditional redirection for servlet versions 5 and above to enhance code maintainability and ensure
fix : readiness . isready always return true for node .
fix storageproxy to use handler . endpoints rather than liveendpoint .
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version in the configuration
added security checks for package access in ObjectStreamClass and ObjectStreamField to enhance security by ensuring package access is only attempted when the security manager is
removed unused imports and simplified the timeSince and processFile methods to improve code readability and maintainability
refactor DefaultMetricsTagProvider to use an unmodifiable map for host tags instead of an immutable map to enhance code readability and maintainability
danielwagnerhall : move the mock browser test to the selenium - backed suite so that it ' s run in
change default logging level from OFF to ERROR in Launcher options to improve error reporting for better debugging
changed member variables to be final in IconNormalizer . java to ensure immutability and improve code readability
added support for the first call prepare functionality in PrepareInterceptor to enhance the flexibility of prepare operations by allowing conditional execution of prefixes
refactor workspace handling and overview mode logic in Launcher . java to improve code clarity and ensure proper behavior based on focus state
( chore ) camel - auth - remove dependency on eager singleton
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method and modified the conditional logic accordingly to control the behavior of association checks based
fix remove private ip from db when delete be set to true
update the ' after ' command description in ProfileServlet to provide clearer guidance for users on the ' Basic Usage ' section for Linux 4.6
added a new ` RequiredRefFieldModel ` class and refactored its logic in ` ModelResolver ` to improve the handling of required properties
updated configuration classes to use ` CasCoreWatchAutoConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` instead of ` CasCore
refactor feature flag handling to improve clarity and maintainability of the code
updated the UUID uniqueness logic and added a new test for unique IDs for large HUEHS to improve the uniqueness of unique identifiers and
added caching logic for picture resources in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are loaded from memory when they are successfully stored
updated the description of minor compaction settings in HiveConf . java to clarify that compaction on full CRUD tables can only run via queries regardless of
added a null check for the storage path when handling the down message to ensure stability by preventing potential null pointer exceptions
refactor resize condition checks to use a dedicated checkResize method to improve code readability and maintainability by centralizing resize validation logic
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connections
camel - 16400 : add miss deprecation on @ xmlattribute in aggregate eip .
added debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol to enhance debugging capabilities for better tracking of input monitor
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility with IntelliJ
updated assertions to compare against hits2 instead of hits to ensure the test accurately reflects the expected length of hits
added a new class LucenePackage with a static method to access its package to facilitate easier access to the Lucene package structure
update the addition operation in RAMDirectory to decrement the sizeInBytes value by one to correct the logic to accurately reflect the new size size
updated calculations and added final modifiers to various classes to improve code clarity and ensure immutability of variables to enhance immutability and prevent accident
added a null check for the ` getDrawerToggleButton ( ) ` before starting the animation in ` MainActivity . java ` to avoid potential ` NullPointerException `
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method signature to suppress the warning about the unused parameter in the method signature
added logic to handle module scanning based on class loader configuration to improve flexibility in enabling module scanning for specific class loaders
[ m office xml ] fix bug withLatexFree field in m office xml
added a method to cancel core recovery for each SolrCoreState during the shutdown process to ensure that all SolrCoreStates are properly cleaned up to improve resource
replaced direct calls to System . currentTimeMillis ( ) with a custom currentTimeMillis ( ) method for better readability and maintainability to improve code clarity
refactor conditional logic in RepoEditView . java to improve readability and ensure proper handling of found elements
[ hotfix ] [ doc ] fix typo in pgproperty description
added security - related imports and modified the SecurityExpressionRoot construction to incorporate trust resolver , role hierarchy , and default role prefix to en
added a check to set exponentSize to primeSize - 1 if it is zero to ensure proper initialization of the exponentSize variable
refactor code to use a unified method for checking disk space across different operating systems to improve code readability and maintainability
fix nullpointerexception in distinctsqlaggregation . combine ( )
added a test method to verify post - login activity execution on successful authentication in UserService to ensure proper functionality of user login activities during successful authentication
make extractorspanishstrippedverb constructor accept a dictionary path ( a suggest by lgtm . com )
refactor CharArraySet to simplify character array comparison logic and improve performance to enhance efficiency by removing unnecessary hashCode checks for String and CharSequence types
fix muxerwrapper illegalstateexception for invalid muxer packet
updated JsBundleGenrule and JsBundleGenruleDescriptionTest to utilize AndroidPackageable instead of JsBundleAndroid to improve compatibility with Android
set the character encoding to UTF - 8 in PinotClientRequestServlet and refactor string handling in StringDictionary to improve character encoding handling and
renamed the Logical Analyzer case from " Logical Analyzer " to " Logic Analyzer " and updated related card and tile icon resources to improve clarity
refactor the instantiation of the vector class to use a singleton pattern to improve performance by avoiding repeated calls to Class . forName ( )
removed syncMetaLeader ( ) method from CMManager . java to eliminate unnecessary method call
update feedbackquestiondetails to return ` ` no response ' ' instead of ` ` not response ' '
added TestLoggingExtension import and annotation to DiagramRendererTest . java to enable logging capabilities for test cases
updated method signatures to include a boolean parameter for using camel case mapping to enhance flexibility in property lookup based on whether camel case mapping is
[ miio ] add support for viomi internet electric water heater ( viomi . waterheater . e1 )
replaced direct calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` for storing certificates , key size , and session ID to
added a new file CreateNewSpreadsheet . java for creating a new spreadsheet with specified sheets and cells to facilitate the creation of
replaced ` Duration ` with ` long ` for ` timeToLive ` in ` CacheProperties ` and updated related methods in ` RedisCacheConfiguration
updated content URIs to use CONTENT _ URI _ NO _ NOTIFICATION and modified icon retrieval logic to enhance notification handling by removing notifications during inserts
update wiremock version to 2.27 . 2 in wiremock resolution test
changed synchronization from lucidaFontName to this in SunFontManager . java to ensure thread safety when accessing shared resources
updated condition to check for character ' < ' in DocClassUtil . java to ensure proper handling of specific character case
removed unnecessary String . format call to simplify code and improve readability
added import statement for liquibase . Scope and initialized a UI message to inform users when no validation errors are found to enhance user experience by providing
added configuration for web resources in IntegrationTestContextLoader to enable dynamic loading of web resources based on the application context configuration
fixed component . getcomponentat ( x , y ) and component . getResponderat ( x , y ) to work correctly on window .
formatted the conditional statement in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated related methods to use ` String ` instead of ` Long ` instead of ` Long ` to
replace occurrences of " $ 1 " with " $ \ n1 " and modify the expression string to include " $ \ n1 " in CellContent
fix a bug in regexp . testng that cause the test to fail on window .
mondrian : fix typo in mondrianproperties
added stack trace printing functionality and updated launcher file checks in CustomLauncherTest . java to enhance debugging capabilities for process startup failures and ensure proper
remove unneeded test for embed image .
added a conditional check for slot presence before converting storeType to avoid potential NullPointerExceptions during conversion
fix initialization of extractorwrapper when nextloadposition = 0
updated BaseLockFactoryTestCase to use custom output stream and improved encoding handling to enhance readability and maintainability of the test code
tika - 2250 -- add support for dynamic service loader via tikaconfig element .
added handling for unexpected comments in package - info files and simplified imports in DocLint . java and DocLintTester . java to improve code cl
added a new constant IMPORT _ CMD and updated conditions in DataImportHandler . java and DataImporter . java to support the import command in addition to the
added a test to verify that inner classes are not modified if the ignoreDefinition flag is set to true in the ChangeType recipe to ensure correct behavior of
removed unused import of Log to clean up the code and improve maintainability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and adjusted related logic accordingly to enhance item placement checks
implement / quitquitquit to kill the jvm
handle the case where no data be consume by the server ( # 2593 )
added a check to skip processing for Windows operating systems to ensure that only Teredo nic is processed for better compatibility
add contact dialog if protocol provider be not register
replace direct registration of USER _ DETAILS _ SERVICE _ FACTORY with a bean component registration to improve flexibility in handling user details service
modified the drawBitmap method to use null instead of the left and top coordinates to ensure the bitmap is drawn on the correct side of the screen
fix totem / meitrack date format ( fix # 269 )
changed access modifiers of methods in SunFontManager and X11FontManager to protected to enhance encapsulation and improve font path retrieval logic
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should not be used in new development
clientmapstoretest # testreachmaxsize throw executionexception instead of reachmaxsizeexception
add an option to not output empty sentence in the sentiment pipeline
updated createArtifactSubdirectory method to return a boolean and added error handling for directory creation failures to improve error reporting for better debugging and error handling
refactor ` ReusableCompiler ` and ` JavaLanguageServer ` to use ` NO _ MODULE _ COMPILER ` constant instead of a
return an answer instead of null when resource return null
modified the sendEmail method to throw MessagingException instead of catching and logging exceptions to improve error handling for email sending failures
fix nullpointerexception in obsidian pip when item be null .
dataimporthandler . formatdate ( ) now accept locale , not only a default locale
added a checkbox to include decals in storage options to allow users to choose whether to include decals or not
updated the ` generateDocumentation ` method to accept a nullable parameter and added a suppression warning in the ` LiquibaseTest ` class to enhance
updated the HiveProtoLoggingHook to initialize the queue and streamline performance logging to improve performance tracking and enhance logging accuracy
corrected the spelling of " Expiration " in log messages to ensure consistency and accuracy in log output
updated class file version check to use the major version string to ensure compatibility and accuracy of class file version verification
added a new test class ` LdapPasswordAuthenticationTest ` to verify LDAP password authentication functionality to ensure proper handling and validation of LDAP password authentication in
updated TaskCompiler to use BasicStatsNoJobTask for determining footer scan instead of OrcInputFormat to enhance code clarity and maintainability
fix an npe from save - all action ( # 5370 )
refactor VisibleAdvance class to improve code readability and maintainability
reflector : add method to start without reconnect
updated condition in EdgeDataTable . java and NodeDataTable . java to include dynamic number column checks to ensure proper handling of dynamic number lists in data processing
added null checks for groupId , artifactId , and getVersion in ResolvedGroupArtifactVersion constructor to enhance robustness by preventing potential NullPointerExceptions
updated API assignment to handle null values to ensure robustness by preventing potential NullPointerExceptions during API initialization
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration logic to enhance performance and maintainability of header management
added texture disposal logic and shader variable handling in FlameRenderer and PhotoPanel classes to ensure proper resource management and shader management during texture loading
add context menu item to allow add new method
updated character validation logic in CSSParser . java to ensure proper handling of newline and fall back characters
added a check for the Look and FeelDecorated property and set it to true in UIServiceImpl to ensure that the JFrame and JDialog are
removed unnecessary ' NOT EXISTS ' clause from SQL query and simplified method call to improve code readability and maintainability
updated function names and return values in LJ1200Message . java for clarity to enhance readability and maintainability of the code
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and logic flow to enhance swipe - to - new task navigation handling
replaced HostDatabase with ColorStorage for mHostDb to utilize ColorStorage for better color management
refactor methods in String class to improve code readability and maintainability
removed unused SLF4J logger imports from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method to retrieve global map entries to enable retrieval of global map entries from the map
added multiple calls to ` sendcoin ` method in ` MultiSign34 . java ` to verify the functionality of witnessesKey to ensure that
updated JUnit imports from JUnit 4 to JUnit 5 in CUFilterTest . java to migrate tests to the newer JUnit 5 framework
updated classpath separator usage in JavadocReport . java to improve flexibility by allowing dynamic path separators
changed method visibility from static to instance to allow access to the method from other classes
added assertions for property existence in the metamodel for " id " and " name " in InheritanceTest . java and changed field access method
remove conf parameter from Outlink instances across multiple parser classes to simplify configuration handling by eliminating unnecessary parameters
removed unnecessary ` LexicalContext ` parameter from ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve code
updated method to remove unused imports and added method to remove unused imports to enhance type declaration handling and improve code clarity
replaced appendClassSelector with direct method call to createFileSet to simplify code and improve readability
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary complexity
fix : cache forge registry mapping on forge registry error
swapped the assignments of x3 and y3 in Intersector . java to correct a logical error in the assignment order
add default sbe getter and setter to messagedecoderflyweight for backwards compatibility
updated ElasticsearchContainerTest to use a constant for the Elasticsearch version and improved import statements to enhance code readability and maintainability
copy the byte array when parse the peermessage .
added versionId field and updated cluster name handling in ClusterDefinition , GSInstallerClusterProvider , and GSInstallerClusterProviderTest to improve cluster version
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - ftp
[ zeppelin - 5904 ] clear the status of ` ` not find ' ' interpreter setting
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` Gen . java ` to modify local variable assignment
added a check for BasicConstraints in ForwardBuilder and created a new BuildEEBasicConstraints class for certificate validation to ensure correct handling of basic constraints
added database initialization logic to JdbcPostgresqlDAO for version 9.5 and above to ensure compatibility with PostgreSQL version differences in database handling
added maximum message size limit and validation for input buffer size in SimpleEchoClient and AbstractWebSocketConnection to ensure WebSocket connections do not exceed buffer size limits
refactor undeleteAll and rollbackUndeleteAll logic in SegmentReader . java and add a corresponding test in TestIndexReader . java to
updated the null check for scopes in ClientRegistration . java and added new test cases in ClientRegistrationTests . java to ensure required scopes are not required for
added null checks for orderBy before adding parameters in CartesianProductStream . java to prevent potential NullPointerExceptions during query execution
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t take snapshot if the vm be in stopped state ( # 5978 )
added a debug log statement before initialization of HiveLog4j to improve traceability of initialization process for debugging purposes
added a check for non - empty tasks before processing the first asset to avoid potential NoSuchElementException when processing assets
[ openpgp ] return false when node do not exist .
improve performance of timesearch with jpa
added error handling for empty barcode results in Code128Reader and Code39Reader , and an image check in false positives blackboxTestCase to ensure robustness
replaced TreeSet with LinkedHashSet for storing SSL suites to ensure predictable iteration order of cipher suites
refactor control character validation in Escaper . java to improve code clarity and ensure proper handling of control characters
updated method signature and logic in ProviderSqlSource . java to handle CharSequence return types and improved SQL string handling to enhance flexibility in
added null check for aliasChildren before accessing its properties to avoid potential NullPointerExceptions and ensure proper handling of null values
added a method ` getLayoutTransitionOffsetForPage ` in ` PagedView . java ` to calculate the layout transition offset for a specific page to
refactor the handling of CompilationUnit to improve clarity and functionality to enhance code maintainability and ensure proper processing of generated source code
added method setAccessible to WidgetInterceptor to enhance accessibility control for the method
added a condition to check if the field name is not " database . server . id " before setting literals to ensure proper initialization of fields that are not
fix robots . txt detection for linux
added a new " LooksFrame . 28 " menu item to the popup with a URI to browse the web interface to enhance user experience by allowing users
refactor the handling of ValueType to utilize a local variable for the actualValueName to improve code clarity and maintainability by reducing
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ test ] improve logging of checkpointio
load BattlePassManager before avatar postLoad to avoid null pointer exception
updated the Docker image version for the GenericContainer in PortForwardingContainer . java to ensure compatibility with the latest version of SSH functionality
added a new long array and forced garbage collection to optimize memory usage during threshold tests
updated logging conditions in StdErrLog . java and added new logging test cases in StdErrLogTest . java to enhance logging functionality and ensure correct
fixed - redissonclient . getremoteserivce ( ) method do n ' t work properly with service name
added ` isSelected ( ) ` and ` setSelected ( boolean b ) ` methods to manage the selection state of components in the MultiButton class to
updated the intent to use NextUpActivity instead of UpNextActivity to ensure the correct navigation functionality
do n ' t start replicasmanager if controller mode be n ' t enable
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection handling to improve resource management and clarify health indicator behavior
refactor background color retrieval to use a helper method for theme color retrieval to improve code readability and maintainability by centralizing theme color logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added multiple type adapters for various Java - related classes in ToolingApiLauncher to enhance type handling capabilities for better compatibility with the project structure
updated TestPayloadCheckQuery . java by removing an unused component to improve code clarity and maintainability
refactor ConsoleReader to streamline string handling with mask functionality to enhance readability and maintainability of the code
added user information retrieval and enhanced exit status logging in BaseCommand . java to improve error reporting for canceled commands during execution
[ fix ] move graalvm . compiler . test to api . test
[ hotfix ] [ runtime ] remove unused slotsharinggroup constructor
[ streamex ] disabled drop while for java 9 +
updated texture and song duration data from " data / wheel . png " to " data / sys . png " and changed song duration from " data /
added an intent filter for registering and unregistering the mCloseSystemDialogsReceiver to ensure the receiver is properly managed during the closing system dialog operation
updated import statements for Cluster class to ensure consistency in code formatting
updated refresh token handling and added an allowIntrospection feature to ClientDetailsEntity , modified client introspection validation in ChainedTokenGranter
replace direct calls to ` write ` with ` writer . write ` for HTML - encoded strings to ensure proper encoding of special characters in session information
added link annotations for PhraseQuery , PhrasePrefixQuery , and SpanQuery in mmm Query . java and ppp Query . java to enhance
replaced size ( ) checks with isEmpty ( ) methods in CommentsInserter and CommentsParser to improve code readability and maintainability
novalueofonstringtype : remove unnecessary helper method
change method parameter types from A to Object in multiple assertion classes to enhance type flexibility and improve type safety
refactor ThrowingFunction interface to a more generic type and update its package to improve type safety and clarify exception handling
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` and ` UploadFilesActivity ` to use shared preferences instead
fix ( prettyprinter ) : do not initialize final field in constructor ( # 1437 )
updated BitmapDrawable instantiation to use Robolectric to enhance bitmap handling capabilities in the ShadowDrawable class
removed the method ` isValidSEnding ` from ` DutchStemmer ` and added a new character variable ` c ` to streamline the
updated PageMarkerResources from ic _ pageindicator _ add to ic _ pageindicator _ current to provide a more current page indicator icon
added a counter ` reinvocations ` to track the number of reinvocations during backups completion to provide insights into the number of backups
updated the calculation of topPadding in DefaultLookAndFeel . java to improve layout alignment by using the correct inner height instead of the overall height
added a break statement in the Recognize . java file to terminate a switch case with a specific case label
added haptic feedback functionality for home screen lock in multiple classes to enhance user experience by providing tactile feedback during long - press
refactor formula handling in ExcelBatchReader and add a new test for text formula in TestExcelFormat to improve formula type handling and ensure correct
fixed bug 1237893 - immutablefield no longer flags field assignment in anonymous inner class .
added a private field for user agent and updated its assignment in HttpGetter to allow dynamic configuration of the user agent based on application settings
camel - 16400 : add javadoc to model class so we have eip documentation out of the box
changed log level from info to debug for file not found message to reduce log verbosity and improve performance during development
rename the test class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
replace version check with a version check using reflection to ensure compatibility with the latest versioning framework
( chore ) camel - base - engine : optimize defaultroutescollector to reduce object allocation
fix ( pshape ) : add vertex color support
updated the handling of primary key column filtering and modified related methods in SchemaDotFormatter and DiagramRendererOptionsTest to improve code clarity and
replaced ShadowMatrix extraction with direct matrix access to simplify code and improve readability
changed package declaration from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser ` in
groovy repl : fix for ` ` class not find ' ' error
fix brandingservlet package name and add plugin context listener
removed redundant print statement for command output to streamline console output for better readability
replaced updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve event handling by notifying
added unit tests for the ` hasCause ` method in ` ThrowableAssert _ hasCause _ Test ` to ensure correct exception handling to enhance test coverage
added methods to flatten model names and pack packages in AutomaticDependencies . java to enhance clarity and maintainability of the code
changed the variable from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to ensure the correct initialization of allowedScopes when requestedScopes is empty
marionette : add marionette unit test for firefox option
camel - 14284 : camel - yaml - dsl - allow to easily specify a description for a route .
refactor JavacTreeMaker class to improve code readability and maintainability
added a line to set the weight of the edge to improve the efficiency of CSV exporting
api : fix tariff cost calculation for current month
updated SQL query to include ` pg _ attrdef ` and modified column default handling to ensure correct retrieval of attribute dependencies from the database schema and
throw an error if binarized fails
modified the ` toString ( ) ` method in the ` User ` class to include additional details about user attributes to enhance debug information by providing clearer
http : / / code . google . com / p / mybatis / issues / detail ? id = 667 : provide good error message when
[ hotfix ] [ runtime ] use correct getpartitionproducer instead of getcurrentexattempt
fixed roster access to group that do n ' t belong in the node group . jm - 521
added reference to " maven . test . classpath " in AbstractJRubyMojo and removed unnecessary suppression warnings in CucumberMojo to
updated method handle assertions to use ` mtype ` directly instead of ` rtype ` in ` MethodHandlesImpl . java ` and added a
added imports for StopFilterFactory and HTMLStripCharFilterFactory in multiple files to enhance functionality and improve documentation clarity
updated conditional checks in URLImage . java to compare dimensions with placeholder images to ensure that dimensions do not exceed placeholder images ' dimensions
added a condition to exclude " META - INF / " from the class name checks and modified package name extraction logic to ensure proper handling of class names
updated method signatures to include additional parameters and added a background task for image handling in ImageDownloadService to enhance image processing functionality and ensure UI
updated assertions in StackWalkerTest to use the expected version of the test to ensure the test accurately reflects the expected version of the code
changed the access modifier of the method ` addViewportJob ` from protected to public to allow external access to the method for better integration with other classes
[ hotfix ] remove unused partition number from simplewordcount
updated server configuration settings to disable server restart and check for running status to enhance server performance and ensure graceful termination
added null and empty checks for the block parameter in NodePathsConvertOperator and modified return logic in SchemaQueryMergeOperator to improve code robustness and prevent
add information about call total harvest time to call info frame .
updated FPS and count parameters in ParticleEditor . java to improve particle rendering performance to optimize rendering quality and resource usage
added Hadoop environment property handling in UpgradeCatalog240 . java and corresponding test cases in UpgradeCatalog240Test . java to ensure proper configuration management
added a transparent background color to the SvgViewerFactory to enhance security by ensuring the background is transparent
updated annotations in ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to remove the minSdk specification to streamline code and improve cl
refactor the ` containsExactly ` method to accept varargs instead of separate first and rest parameters to improve flexibility in handling varargs in the iterable
updated the ` addLimit ` method in ` Bucket4jFilterFunctions ` to include ` refillGreedy ` and added a check for non -
added GermanAnalyzer , GermanStemmer , and WordlistLoader classes to support external German text processing capabilities
added hooks functionality to the Generator class and updated optimizer transformations to utilize post - execution hooks to enhance query execution control for materialized views
catch noclassdeffounderror and set supported = Boolean . FALSE
refactor TraceFilter to use a new default span and scope class for span management to enhance code clarity and ensure proper handling of span
updated exception handling to check for null causes before retrieving the message to avoid potential NullPointerException when cause is null
updated SolrServerException to include the base URL in the exception to provide more context about the source of the error
changed printSetupRecord ' s landscape configuration to invert the orientation based on print setup settings
update return statement to handle null input case to ensure safe handling of potential null values
added validation for input arguments to ensure only valid arguments are processed to avoid runtime errors
added support for background location handlers in AndroidLocationPlayServiceManager to enhance location updates management when using in - memory background mode
changed the conditional check for primitiveType from ' ! = GL _ POINTS ' to ' = = GL _ POINTS ' to ensure correct handling of
fix trufflestring . equals ( ) for byte [ ] array .
added command list setting in ComboBox to enhance user interface functionality
nifi - 10978 - ensure that alias file name be valid filename .
updated the zkcli command to use localhost instead of hardcoding the command to enhance readability and maintainability of the ZkCLI command
[ firmware , wemo ] fix thing status comparison bug ( # 1874 )
added a conditional check for remote gRPC status before posting a message indicating a build failure to inform the user of the build failure to ensure the build process
refactor method parameters in XYItemRenderer classes for consistency to improve code readability and maintainability
fix entity not be able to be pick up in forgechunkmanager . close # 951
added a new method ` getErrorString ` to format EGL error responses to provide a clearer error message for better debugging and error handling
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48258 and mary
updated the server URI formatting in RFC2616BaseTest . java to ensure correct host and port are included in the test assertions
fix issue with addtohelperlist
added handling for the first " [ " escape sequence in GlyphLayout . java to improve layout processing by skipping the first character when the length is - 2
added security permissions for setting the context class loader in mmm Transport . java and mmm TCPTransport . java to enhance security by ensuring
modified the method for populating the directory list and handling file paths in ` ReceiveExternalFilesActivity . java ` to ensure proper synchronization and validation to improve
fix npe in testng when serviceloader be null
removed debug logging in BarrowmanCalculator and modified the deltap calculation in TubeCalc to simplify the calculations and improve code clarity
added a check for existing columns before adding a column in the node and edge tables to ensure a default column is added when the provided object is an instance
added a method to register extra components in BaseBrokerStarter to facilitate the registration of additional broker components
added a test method for bug 4658 in MultiCfQueryExecIT . java to verify the behavior of SQL query execution with varying column types
do n ' t offer peer that do n ' t support peer witnesses .
fix the builder not be able to place a texture into a texture pool .
updated the ` SimpleConsensusSnapshotTriggerThreshold ` configuration to use a ` Supplier < RatisConfig . RatisConsensus > `
refactor multiple Java classes to improve code structure and consistency to enhance maintainability and readability of the codebase
do n ' t unregister jmxhelper if there be a managedservice annotation
tika - 3979 -- upgrade the parser to use the late zipentry encoding detector
8151536 : c2 : phaseccp : phaseccp : fix bug in phaseccp : problematic division
added methods to lookup generic interface types and superclass types in TemplateRegistry to enhance type safety and improve template retrieval functionality
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to accommodate larger data sets efficiently
added TODO comments for Chinese , Indian , and Persian language unavailable locales in PlayerSettingsScreen . java to improve clarity and understanding of
refactor byte array allocation and processing logic in TransferCompletionHandler . java to optimize transfer operations to handle larger data sizes to improve performance and resource management
remove focus listener since it do n ' t work in android
updated error handling in SemanticAnalyzer to check for null source nodes before throwing an INVALID _ TABLE semantic exception to improve clarity and prevent null pointer exceptions
* skeletal mesh now use the scale from the skeletal mesh ' s scale if available
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` getBaseSolrHome ( ) ` to ` BaseDistributed
added @ ComponentScan annotation to SpringWebConfig . java to enable better component scanning for enhanced web application configuration
removed the getAccount method from the UserListItem class to streamline the code by eliminating unnecessary method
added unit tests for package installation and default settings in ShadowPackageManager to ensure proper handling of package names and default configurations for components
refactor AvailableSettings class to improve code readability and maintainability
added TransactionTrace constructor and its initialization and finalization methods to initialize and execute methods to enhance the TransactionTrace class with necessary capsules to improve
add an option to shuffle member list on cluster listener creation ( # 2593 )
replace Text with CrawlDatum in SegmentReader . java to enhance data processing capabilities
refactor JsonDeserializer class to improve code readability and maintainability
updated configuration paths and thread - local fetch size handling in multiple classes to improve performance and thread safety during query execution
updated the error message from " trunk ( ) only take STRING / CHAR / VARCHAR types as the first argument " to " trunc ( ) only take
removed import of ExecutionContext in TaskletStep . java to streamline dependencies and reduce unnecessary dependencies
initialize the title variable to an empty string to avoid potential null pointer exceptions when the title is null
add empty response body to asynchttpclient call to avoid nullpointerexception .
add back deprecate EmbeddedServerInstance interface
use reflection to register mac event .
renamed the test class from ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated its usage to
added a return statement to the toEnum method to ensure the correct functionality of the enum conversion
changed the visibility of hideUnprivilegedObjects from private to final to ensure that hideUnprivilegedObjects cannot be modified
fix fail audio data source test
added Android Q support in IOUtils to save G grep videos for Android 11 compatibility
act - 1265 : add deserialization support for variableinstanceentity in bytearraytype
refactor multiple ticket registry and service classes to improve code organization and enhance maintainability
replaced manual logger retrieval logic with a more concise computeIfAbsent method to simplify code and improve readability
hbase - 2593 remove dataoutputstream since it be no longer use
updated bucket and transaction IDs in TestAcidOnTez . java to ensure correct data representation during data processing
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for class enhancement
updated provider names to use dynamic fallback logic to enhance flexibility in provider selection based on the operating system type
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to ensure proper handling of Captor annotations to enhance the
added error handling for cases where specified test cases do not exist to improve clarity and prevent runtime exceptions during test execution
updated import statements and modified prefix computation logic in GroovyAutoComplete . java and GroovyCompletionHelper . java to enhance code clarity and
use osm to speed up import
simonstewart : make the session handle more robust by use a retryable client
changed the visibility of mHideSysUiScrim from final to non - final and added functionality to manage top shadow visibility based on user preferences
added cancellation logic and improved error handling in Call and OkHttpCall classes to ensure proper handling of cancelled calls and enhance robustness against
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and logic flow to enhance swipe - to - new task navigation handling
extended the RequestMatcher interface to extend Spring Security ' s matcher to support additional request matching functionality
updated DeferredAttr . java to include " IF " and added ImplicitLambdaConsideredForApplicabilityTest . java with multiple functional interfaces to enhance
rewrite test boxed and devirtualizedtypes - > boxing of primitive type .
added unit tests for populating display metrics in DeviceConfigTest . java and implemented a method to set dimensions in DeviceConfig . java to ensure
replaced IOException with RuntimeException in ExternalViewReaderTest . java and modified Timestamp instantiation in PinotDataTypeTest . java to improve error handling and simplify timestamp initialization
updated the icon resource reference from ` logo ` to ` mipmap . ic _ launcher ` to align the launcher icon with the application ' s context
added content text setting in FileUploader to enhance error handling by providing clear content
refactor ConcurrentHashMap implementation to improve performance and maintainability of concurrent data handling
added methods to adapt user trades from Abucoins to UserTrade in AbucoinsTradeService and AbucoinsTradeServiceRaw to
updated plot claiming logic and changed player clear behavior to ensure plots are only claimed when they are successfully cleared
simonstewart : allow the htmlunit driver to use the configured proxy if available
added support for VARBINARY data type in BlobType to enable proper handling of VARBINARY data types in the database
fix for expire cookie issue
added synchronization when accessing language . simpleTypeMap to ensure thread safety when accessing shared language type information
updated InboundBuffer to use ContextInternal instead of Context to improve type safety and clarity in context management
updated LdapTimeoutTest to improve timeout handling and introduced a new method for testing dead servers to enhance test reliability and ensure server timeouts are
updated usage message from " UniocdeData . dat " to " UnicodeData . txt " in CharacterName . java to clarify the usage
fix the test error of cxfmessageheadersrelaytest
8024182 : fix doclint warning in javax / swing / plaf / synth
added support for handling BoosterSet instances in ComponentAssemblySaver and modified BoosterSet return value in BoosterSet . java to enhance functionality to
added proxy support to jabref
replaced instances of ` MetricsUtil . blockchain __ FORK _ COUNT ` with ` MetricsUtil . blockchain _ FORK _ COUNT ` and updated
replace InternalError with a return statement to indicate that compilation stub invoked for JEP 359 support
hbase - 25836 addendum remove mortbay logger from test ipcutil
remove unnecessary chunked transfer in netty routing
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure attributes are reset before processing
added polling period and improved error handling in VerificationAfterDelayImpl and VerificationAfterDelayImpl classes to enhance reliability of verification processes and
added compaction functionality and authorization manager in multiple classes to enhance data handling capabilities during compaction processes
[ zeppelin - 5904 ] only copy jar file from zeppelin / interpreter into zeppelin / interpreter
hbase - 2593 addendum fix checkstyle issue in hbase - server ( addendum )
ignore test until i figure out why it fail
refactor Calcite ' s X - coordinate calculations in BarLineChartRenderer , BarLineScatterCandleBubbleDataProvider , and CombinedChartRenderer to
added error handling after XML parsing in SimpleSAX to ensure proper resource management and prevent memory leaks
release header buffer to prevent memory leak
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to reference it to
added null check before closing the ResultSet in JdbcExecutor . java to ensure safe resource management and avoid potential NullPointerExceptions
update the DerbyDatabase driver version from - 1 to 6 to ensure compatibility with the latest database features
fixed bug 1237893 - usestringbufferlength no longer report false positive when literal be empty .
removed error logging from RemoteSparkJobMonitor . java to clean up unnecessary logging during execution
modified the createDb ( ) method to return a Connection object instead of void to enable proper resource management by closing the database connection
chore ( regen ) : update copyright year to match last edit
hbase - 20536 add back support for off - peak compaction in hstore
added JSON handling for deposit addresses in BitstampDepositAddress . java and created corresponding unit tests in DepositAddressJSONTest . java to
replaced IllegalStateException with IllegalArgumentException for buffering capacity exceeded to improve error handling by indicating a potential memory leak
updated the method to use absolute paths for deleted directories to ensure consistency in path handling across the application
updated InvocationFinishedEvent to implement MetricsEvent and modified related field types to enhance metrics tracking capabilities and improve code clarity
refactor network interface retrieval to include multicast support check to improve reliability of network interface selection
replaced a loop that checks for valid checksums with a for loop that iterates over all valid checksums to improve code readability and efficiency
added a clone method to the BufferedChecksumIndexInput class to indicate that the IndexInput cannot be cloned
replaced Math . sqrt with a direct method reference to a radius variable to simplify code and improve readability
added a check to ensure mFrequencyBand is only updated if it matches the current downlink band identifier to avoid redundant assignments to optimize performance by avoiding
refactor ` GestureDetector ` to replace ` tapSquareSize ` and ` inTapSquare ` with ` tapRectangleWidth ` and `
set default _ replicate _ on _ write to false since it be a no - op by default
added support for a new parameter ` lastFillTime ` in the ` CryptoFacilitiesAuthenticated ` constructor and implemented date formatting in ` Util ` to en
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests in ` TraceCallableTests `
updated error handling in Snackbar messages and added synchronization event handling in FileDisplayActivity to improve user experience by ensuring accurate snackbar display
added methods to handle stream writable access in ForeignIncubatorQuicheConnection , JnaQuicheConnection , and JnaQuicheConnection
updated method call to include a true parameter to enhance flexibility in context handling
simplified the TableCell constructor by removing the alignment parameter and align positioning to simplify the TableCell instantiation and improve readability
added a new file ` TracingAutoConfiguration . java ` with tracing - based configuration to provide a framework for configuring tracing in the UAA
assignfeedbacksubmission : fix typo in comment
serverqueryexecutorv1Impl # getprunedqueryablesegments should decrement segment number when prune
refactor VertxBufferTest to improve test coverage to enhance reliability of buffer operations
[ bug - 66425 ] hsmf : add test case for messagesubmissionchunk .
change access modifier of mContext from private to protected to allow subclasses to access the mContext variable
fix checkstyle issue with unused import
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it to enhance error handling by providing
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added methods to convert between various image formats and human readable byte arrays in DisplayUtils . java to enhance functionality for converting between various image formats
fix test bug : no pathological merging
added a check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
[ api ] improve error message when cpu can not be run without instruction
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated related method calls to allow for more flexible handling of reference properties
added null checks for incoming fields and terms in FilterLeafReader . java to ensure required parameters are not null to prevent NullPointerExceptions
add default secret key size provider to jcecrmfencryptorbuilder .
updated IOException to include the exception message in the IOException and removed redundant constructors in SoftEndOfStreamException to improve error reporting by providing more context in exception handling
removed redundant dependency injection annotations from multiple classes to improve code cleanliness and maintainability
updated the expected size in BundledDistributionTest from 9 to 10 and added assertions for database users in PostgreSQLTest to ensure tests accurately reflect
[ hotfix ] [ runtime ] add pipeline . name config option
refactor scaling calculation based on device profile ' s orientation to improve layout scalability for different panel layouts
change ice plains biome to extend snowy biome instead of grass
removed timezone parameter from methods in DataUpdateManager and StorageUtils to simplify time retrieval and improve code clarity
[ j2kt ] add qualifyness flag to thisreference .
chore ( xhamster ) : fix url pattern for xhamster gallery
fix concurrent modification in entity iteration
hhh - 1978 - oracle dialect : fix table name generation for certain schema
fix checkstyle issue in flutterconsolefilter
added a new variable ` mNumberOfAllFiles ` and modified the ` FileMenuFilter ` constructor to incorporate it to track the number
[ java ] fix off - by - one in network publication padding .
fix javadoc for guildupdate owner event
updated inPortalTicks logic in Player . java and Entity . java to set it to 80 if it is below 80 to ensure that portal tick increments only
added support for compress cluster monitor data .
refactor multiple codec templates to improve code organization to enhance maintainability and readability of the codebase
change variable types from int to long for length calculations to ensure compatibility with larger data sizes and prevent potential overflow overflow
removed unnecessary null check for the renderer in RendererConfiguration . java to simplify the code logic for the renderer condition
cloudstack - 8470 : do n ' t allow scale vm with different custom disk offering
updated imports in HitbtcAdapters . java and modified the builder pattern in Order . java to improve code organization and clarify the purpose of
rename ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to improve clarity regarding the purpose of the count
updated the description URI for the JRuby automation service from " jruby " to " jrubyscripting " to enhance clarity and
updated displayName assignment and write method to improve clarity and consistency in displayName variable usage
updated condition in ParticipateAssetIssueActuator to include a check for negative values to ensure accurate exchange amount comparison
removed a loop condition that contained a check for a limit of 10 in FeedUtils . java to optimize performance by avoiding unnecessary iteration over 10
add a test to verify that hdf4 be work with cdm 1.5
[ calcite - 6092 ] do n ' t allow cast ` ` a ' ' to ` ` a : 00 : 00 : 00 ' '
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added a method to quietly close a list of AutoCloseable objects and refactored the loop to use it to improve code readability and maintain
replaced multiple confirmation button strings with a single string resource for better localization support
added null checks before drawing an image in the Pixmap class to avoid potential errors when dimensions are zero or negative
replaced ` ReflectionHelpers . ClassParameter . from ` with ` java . security . ProtectionDomain ` for reflection in ` UnsafeAccess . java ` to
[ dubbo - 8333 ] fix default port for dubbo localhost ( # 8333 )
replace boolean conflict detection with a counter for conflicts to improve clarity and maintainability of conflict handling logic
cache the pubspec . yaml for the current version of flutter sdk ( # 6663 )
added a conditional check for the reference object in ReferenceMemory . java to ensure proper handling of reference assignments to avoid unnecessary assignments
added functionality to check for and log the number of seed files in the injected job to improve error handling and logging for missing seed files during job injection
added a condition to check if ` hideOriginal ` is true before handling ` originalView ` to ensure that the original view remains visible when hiding it
updated maxNodes calculation and modified maxTrips condition to ensure maxNodes does not become negative and correct the logic for full unroll behavior
combinetexture : add a warning if the uv coordinates type be not support
added check for invalid polynomial in decodeBitStream
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality for seek operations and resource management
updated the SQL query to use the correct variable ` oldPrefixLength ` and added a new integer setting for the old prefix length to ensure correct handling of
simplified the initialization of the convertedValsList list to improve code readability and maintainability
log4j2 - 1343 add back deprecate ctor for backwards compatibility
added a nightly build warning message in MainWindow . java to inform users that the Universal Gcode Sender is a nightly build to inform
fix bug : team name be not show in response for general question
updated return statement to include a period at the end to improve clarity of error messages related to unnecessary throws declarations
deleted CacheApplication . java and updated CacheController references in CommonsApplication . java to streamline cache management and improve code clarity
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java . vm ` to
refactor StatisticsServlet class to improve code readability and maintainability
updated RuntimeEnvironment to use ResourcesManager for configuration updates to ensure compatibility with devices running KitKat and above
added a new constant ` VERSION _ DEF _ STACK _ REPO _ REPO _ UPDATE _ LINK _ EXISTS ` and a corresponding test in ` Stack
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix nullpointerexception when read old cassandra index file
added package imports for XML resolver helpers and readers to enhance access control checks for XML structures
rename methods from ` save ` to ` add ` in ` JobRepository ` , ` SimpleJobRepository ` , ` AbstractJobRepository ` ,
remove loop begin input when out - of - order
replaced RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController . java and added a method to measure height with vertical margins to improve
added a conditional check for terminal support in ConsoleReader to ensure proper handling of terminal functionalities
changed variable types from long to int for ` fiveSeconds ` and ` timeAllowed ` in ` CloudExitableDirectoryReaderTest . java `
added session validity check in AbstractSessionCache to ensure only valid sessions are processed during response commit
refactor index handling logic to check for null column names before processing to improve robustness by avoiding potential NullPointerExceptions during index processing
replaced Vector with ArrayList for storing RadioButton elements to improve performance and simplify the management of radio buttons
updated UserManagerCompat and UserManagerCompatVN classes to handle different user creation methods and introduced a new UserManagerCompatVM class to improve compatibility
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to multiple database classes and modified table reorganization logic
added a maximum number of mismatched rules and updated the logic for determining mismatched rules in ActionGraphCache . java to enhance rule validation
added LockDatabaseDesc and UnlockDatabaseDesc classes for managing database locks and unlocks in Hive to provide structured and efficient representations of database
refactor RankingUIModel and RankingTopComponent to simplify setter methods and improve code readability to enhance maintainability and streamline
added handling for disconnect messages in HandshakeHandler . java and improved logging message formatting in NodeImpl . java to ensure proper disconnection handling and provide
added a test method for setting storage groups in IoTDBAuthorizationIT . java to ensure proper functionality and error handling for storage group operations
fix : [ documentai ] fix the proto format name to match google
added checks for variable type validation and improved handling of missing types to enhance type safety and provide clearer diagnostics for unknown variable types
added setup and teardown methods to StepScopeTestExecutionListener to handle test execution lifecycle events
updated import statements and modified constructor and method names in CountersManager . java for clarity and consistency to enhance code readability and maintain
updated logging statements in MultiSteps and SendEmail classes to use placeholder syntax to improve code readability and maintainability
added logic to clone joinKeys if joinKeys is not null to ensure proper handling of join keys during query execution
added PrincipalResolver to the WebAuthnConfiguration to enhance authentication handling by using a specific principal resolver
added a searchPaths parameter to the addSettingsFromFile method and updated its usage in the XcconfigParserTest class to enhance flexibility
changed variable declarations to be final in Oracle . java to ensure immutability and prevent accidental modifications
[ hotfix ] [ checkpointing ] turn unaligned checkpointing off by default
fix order _ by and order _ by not throw unsupportedoperationexception .
increase verbosity of compiletheworld output .
added a check for LocalVariable instances in LambdaRewriter . java to ensure proper handling of LocalVariable instances during variable declaration
added support for MySQLDatabase in CreateTableGenerator to ensure correct handling of timestamp columns in MySQL - specific database compatibility
fix classloading issue in envconfiguration
added ejection delay setting for the motor when stage number is 0 to ensure proper motor ejection delay configuration
refactor ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and update related method calls to improve clarity and align with the new bean
[ hotfix ] fix checkstyle violation in transactionutil2
refactor issuer validation and method signatures to include an Optional parameter for improved service handling to enhance clarity and flexibility in issuer resolution
lucene - 4892 : fix npe in clusterstate . tostring ( ) .
updated method call from ` getStyle ( ) ` to ` getAllStyles ( ) ` for setting alignment to improve clarity and consistency in accessing styles
added foreign database and schema names to ForeignKeyColumn and related classes to enhance functionality by allowing retrieval of foreign database and schema names from the
[ java ] do n ' t use electionstate . init in preparefornewleadership .
replaced static import of ` shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice ` to encapsulate
refactor selection root handling and add unit tests in FileSelection . java and TestBugFixes . java to improve error handling and ensure correct
add oninventorytick deprecate in forge 1.20 . 1 , in favour of ontopstack .
fix : export should not overwrite exist file
added null check for getSherlockActivity ( ) before invoking invalidateOptionsMenu ( ) to prevent potential NullPointerException when accessing the options menu
updated widget binding logic to handle bind options more effectively to improve flexibility in widget configuration management
added new capability constants for Ecobee sensor parameters to enhance clarity and organization of capability options in the code
reformatted code for consistency and readability to improve code maintainability and clarity
added environment variable settings for AAPT and AAPT2 in Genrule . java and updated corresponding tests in GenruleTest . java to en
dump access table only when need .
added null check before disposing of message to avoid potential NullPointerException
made the ` db ` variable final and added a getter method for it to ensure immutability of the ` db ` variable to enhance encapsulation
improve log message when logwatcher be disable
replaced printStackTrace ( ) calls with fail ( ) for cloning failures to improve error handling and cloning failure reporting
updated IOSImplementation . java to replace the usage of ByteArrayOutputStream with SmallByteArrayOutputStream and added a null check for the phone number to improve
improve shader performance by use intmap instead of hashmap
changed the connection string from " jdbc : : close = true ; territory = en _ US " to " jdbc : : shutdown = true
[ amq - 6894 ] fix null pointer exception when look up first / last exchange complete timestamp on route mbean
updated the default language argument in TestHtmlTag and added multiple test outputs in TestUseOption to improve clarity of command - line options and
updated condition to check if the result is not incomplete and the items list exceeds 10 to improve validation of the completion provider logic
added a time column name parameter and updated usage instructions in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality of time column handling
refactor output format handling to distinguish between HTML and SVG formats to ensure correct file extension is used based on the output format type
inverted the conditional check for QSB enablement to ensure correct calculation of bottom margin based on QSB settings
improve equal and hashcode performance of animationlist and gltfmodelkey
added a ` setDate ` method in ` AbstractGenerator ` for setting the timestamp buffer and updated date handling in ` Generator ` and ` HttpGenerator `
store : replace adler32 with crc32
cloudstack - 8470 : make xen . heartbeat . interval default to 60 second
added a new warning class ` ZERO _ AREA _ FIN ` and modified the logic for adding warnings in ` FinSetCalc . java ` to
[ beam - 8470 ] migrate elasticsearchio to jackson 2 . x
add truncate function to h2 , and skip trunc function on sql server
added a conditional check for " memory " errors before logging a warning in MetricUtils . java and updated error messages in MetricUtilsTest . java to ensure
fix usercontext . ensuresignedup to not return null
refactor validation task to use the new ` Types . PROTOTYPE _ FACTORY _ TYPE ` class instead of the deprecated ` ConfiguredType `
[ te ] change the reverse action of replay anomaly to replay
updated instances of ` new DataWord ( ) . getData ( ) ` to ` new DataWord ( 1 ) . getData ( ) ` and added a
updated the logic to apply badge on child views in AllAppsContainerView to enhance user feedback by applying badge for items in the RecyclerView
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
updated start method calls in ResourceService and ResourceHandlerTest to ensure consistent behavior after ContextHandlerCollection has started
removed condition for returning false in Cling . java to simplify logic for handling custom workspace identifiers
truffle / instrumentation : remove unused assertion
ignore test until call - through be turn on by default
updated imports from org . knowm . xchange . itbit . v1 to org . knowm . xchange . itbit .
fix npe in profile and scope interceptors
made multiple classes ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois ` final to enforce immutability
close objectinputstream in finally block to prevent resource leak
replaced class name references with string representations of " java . util . Vector " and " java . util . Hashtable " to improve clarity
added tableNameWithType to the warning log message for invalid retention time to provide clearer context about the retention issue
added trimming to fragmentList length checks to ensure fragmentList is valid and does not contain spaces
fix resource pack filenotfoundexception in modfileresourcepack .
refactor data structures and toggle logic for node and edge builders in PartitionToolbar . java to improve code readability and maintainability by using
removed condition for showAsGrid ( ) in RecentsView . java and added checks for task view focus and visibility to ensure proper handling of grid
updated the ` calculate ` method in multiple classes to return a ` BMIViewObject ` instead of a ` Map < String , String > `
removed unnecessary Comparator . comparing from thenComparing method call to simplify code and improve readability
fix hay bale damage not drop damage . close # 389
refactor WindowsProcessAddressSpace to use a List for environment symbols and update JAVA _ COMMAND _ LINE _ ENVIRONMENT _ VARIABLE
added support for custom plugin properties in OptionsParser to enhance flexibility in managing plugin configurations
updated the condition for hashTable to check if it is not empty before proceeding to ensure that the method only proceeds if valid data is provided
updated Timestamp class to include checks for seconds in seconds and improved test method names for clarity to enhance readability and maintainability of the Timestamp
[ java ] : use correct aeronarchive . context when construct archive client .
added a condition to check if the class is not compiled when COMPILE _ THRESHOLD is zero and modified assertions in LambdaForm . java to
added tests for image mosaic functionality in various test suite classes to ensure that the image mosaic function correctly handles both " image2
updated TogglableFlag . java to replace getInitialValue with getOverridenDefaultValue and added a change listener in LauncherAppState .
updated log messages to use placeholder syntax for improved logging clarity
added a platform check to prevent executing code for ANDROID in SnapshotScreenListener to ensure compatibility with Android by avoiding unnecessary actions
update unit test for generated reverse url
added new functional interfaces for various primitive type conversions ( BytePredicate , FloatPredicate , ShortPredicate , ByteToLongFunction , FloatFloatPredicate , ShortToLongFunction
changed the return type of getSubsColor and setSubsColor methods from int to String and added logging for bitrate limits in multiple classes to
added a conditional check before deregistering the invocation to ensure the invocation is only deregistered if it is successfully completed
replaced ` queue . append ( frameBytes ) ` with ` output ( null , nop , close . asFrame ( ) ) ` in ` AbstractWebSocket
added checks for the " redirected " state before starting the WelcomeActivity in LoginActivity to ensure that the WelcomeActivity only opens activities when it is
added ShadowCheckedTextView class to enhance testing capabilities for CheckedTextView functionality
make parser state serializable
825417 : add expiry exception for identrustdstx3 alias to verifycacerts test
removed duplicate setting of TEMPDIR _ CONFIGURED and TEMPDIR in the context to streamline code by eliminating redundancy
of - 2499 fix nickname parsing in occupant
( chore ) camel - quic : remove unused context parameter
updated merge configuration to use configuration settings instead of direct method calls to enhance configurability and maintainability of merge settings
updated formatting and structure in ICU4JImpl . java and TextPosition . java to improve code readability and maintainability
added default value handling for ` ComputedNumericValue ` and ` ComputedDateValue ` in ` AddDefaultValueChange . java ` to ensure
updated NbtScoreboardIoService . java to improve code structure and readability
load saml2 service provider metadata from classpath if not already available
make igv dump handler protect instead of private
added BigDecimal import and updated order ' s average price calculation using BigDecimal to enhance precision in processing order amounts
updated projection handling in ` ProjectionOperation ` , ` TypeBasedAggregationOperationContext ` , and added a new test case in ` AggregationUnit
fix a race condition in fakeplayer # addviewer0 .
added ConstantState management to FolderAdaptiveIcon and ShiftedBitmapDrawable to enhance state tracking and prevent potential null pointer exceptions
refactor connection handling in SPDYClient to utilize a new compression and session management approach to improve code clarity and maintainability by consolidating
fix : nullpointerexception in protostuffobjectinput # writeobject ( protostuffobjectinputstream | protostuffobjectoutput ) ( # 9
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor BarrowmanCalculator class implementation to improve performance and maintainability of the code
ggb - 2118 hide axis label if not visible in the view
replaced direct calls to setFilter and setWrap with unsafeSetFilter and unsafeSetWrap to enhance performance and maintain compatibility with unsafe operations
swip : fix bug in xml workflow when return to a child
added SSL handling for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything class .
updated the method to return the real used clock rate string instead of the original coding rate to improve clarity and consistency in encoding handling
refactor TextureAtlas class to improve code readability and maintainability
updated method to return module name instead of product name and added a method to set it in AppleLibraryBuilder to improve clarity in module identification for Swift
[ java ] : fix race condition in testslot due to lock .
# 212 - enh : add findids ( ) with inheritance ( # 212 )
refactor WebSocket response handling to use a ByteBuffer instead of a separate close frame to improve clarity and maintainability of the code
[ wasm ] reset reference stack after use .
[ type : bugfix ] fix nullpointerexception in clickhouse logging
change serialization type from NEST _ OBJECT to NAMED _ FIELD and enhance serialization logic in CustomChangeWrapper and CustomPreconditionWrapper to improve data handling
replaced ` QueuedThreadPool ` with ` HandlerCollection ` and added server and context management in ` DeploymentExceptionTest . java ` to improve server lifecycle management
added error handling for Fresco initialization and improved null handling in NearbyController to enhance robustness and prevent crashes during initialization
modify the return statement to handle null and empty objectName cases to ensure safe execution by preventing potential NullPointerExceptions
improve error message when file can not be open
[ hotfix ] [ table - planner - blink ] make environmentsettings default planner / executors
updated variable names and logic for handling certificate subject names in KeyTool . java and added error handling for critical names in Resources . java to improve clarity
added a deprecation annotation to RuntimeOptions . java to indicate that the class is outdated and should no longer be used
replaced byte array conversion with string byte conversion in Utils . java to simplify code and improve readability
added a new interface ` PermissionEvaluator ` to provide permission - based access control within Spring security
added ERASE _ LINE _ ON _ FINISH option to LineReader and implemented cleanup logic in LineReaderImpl to improve prompt management during execution
hbase - 2593 masterfilesystem # checkserveralreadyexist should check for existence instead of contains
replaced instances of SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR and BLOCK _ SIGN _ ERROR in
refactor ExpandWar . java to improve URL handling and error logging to enhance code readability and maintainability while ensuring proper resource management
improve handling of error in defaulthttpclient by catch all throwables
changed the alignment of the spinner container from center to centerAbsolute to ensure the spinner is centered in the absolute direction
updated the ` recycleMemorySegments ` method to include an additional parameter for the number of memory segments to enhance memory management by allowing the caller to
fix intermittent ci failure
replaced AndroidJUnit4 with a custom RetryTestRule to enhance test reliability by allowing retries instead of running tests
refactor QueryStateMachine to remove the autoCommit parameter and streamline its instantiation to enhance code clarity and maintainability by reducing complexity
fix checkstyle and add test package - info . java
added support for " javax . microedition . khronos . opengles . GL " as an additional dependency in the InstrumentationConfiguration to
[ hotfix ] [ test ] remove unused callback from streamtasktimertest
refactor request handling logic to better manage HTTP method and URI retrieval to improve robustness and correctness of request URL construction
updated references to ` KEY _ LAST _ SEEN _ VERSION _ CODE ` to use ` WhatsNewActivity . KEY _ LAST _ SE
added session available and session unavailable methods in SessionManager to improve session management functionality
added " liquibase . pro " to the package scan in ServiceLocator to support Liquibase Pro features in the application
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in both ` SyncedFolderProvider . java ` and ` MainApp .
modified the ` loadWithNewGlobal ` method to accept an additional variable - length argument ` args ` to enhance functionality by allowing more flexible argument
updated the ` relativePath ` method calls to include the ` startIdx ` parameter for better substring matching to enhance the accuracy of path resolution logic
updated weigher method calls to use toIntExact instead of length to ensure accurate retained size representation for slice operations
updated method names from ` hasRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple classes to clarify the purpose of
added support for handling " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java to ensure proper error handling for unsupported functions
clear headers in AbstractProxyServlet to ensure headers are reset before processing requests
pdfbox - 4892 : skip test that fail due to sa attach
added a null check for bgColor and created a new TranslucentWindow class to enhance robustness by preventing potential NullPointerExceptions
added null checks for user information and improved error messaging in UserInfoActivity to enhance error handling and provide clearer feedback when no
added custom serialization support for PrecompiledHeaderData to restrict serialization of precompiled headers to prevent runtime errors caused by machine - specific behavior
[ hotfix ] [ kafka ] [ connector / kafka ] change legacy update - mode from context to property
added a new integration test class ` MultipleOutputsIntegrationTest ` for testing named output functionality to ensure that named output groups can be used in different
updated regular expression in FileSettings . java to improve whitespace handling to enhance readability of content during parsing
statelessflow variable should be initialize with variable value from versionedprocessgroup # getvariables ( )
replace empty object array creation with utility method ArrayUtils . EMPTY _ OBJECT _ ARRAY in BinaryCipherExecutorTests . java to improve code readability and maintain
added a TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode functionality
added two new device statuses , " leaving - dock " and " energy - save - mode " to DeviceStatus . java to enhance device status management
improve error message when item loading fails
removed unused imports and added @ Ignore annotation in KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to instability
fix ( opengl ) : get current pixel scale for 2d context
refactor RussianLowerCaseFilter class to improve code readability and maintainability
updated test setup to use ReadOnlyProps instead of separate properties for test properties to simplify test setup by removing unnecessary configuration settings
replace file separator characters in displayName with underscores to improve consistency across file system operations
* add a resettableinputstream to wavloader to allow you to seek to the end of the wav file
added a ` repeatFirstLineIndent ` flag and modified indentation logic in ` ColumnText . java ` to allow for a configurable first indentation option to enhance
cast the ` oid ` to ` Object ` before comparison to ensure proper type handling to avoid potential ` ClassCastException `
only initialize mbean when necessary
loopex : fix typo .
set focus painted to false for buttons in WindowsPlacesBar to improve user interface responsiveness
updated condition to check for both PrimaryKey and ForeignKey instances along with their types in DatabaseSnapshot . java to ensure compatibility with both PrimaryKey and Foreign
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and updated the ` AccountAPI `
[ community ] check that dc . title do n ' t contain mdv , add integration test
bugfix : gap insertion detector do n ' t handle empty word list well
added unit test base on user forum issue
updated the method for retrieving the number of threads in FeedRefreshUpdater and added database update thread configuration in ApplicationSettings to allow dynamic configuration of thread pool size
reduced the FASTSCROLL _ THRESHOLD _ MILLIS value from 40 to 10 to improve the responsiveness of the fast scrolling algorithm
make system . class . getname ( ) consistent with hotspot
hhh - 13644 - fix npe when call a stored procedure return null .
camel - rest - swagger : fix npe when swagger configuration be empty
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text WebSocket frames to enhance the WebSocket protocol by supporting binary and text data
danielwagnerhall : wait for page to load rather than by id to avoid spurious failure
updated random coordinate generation logic in RandomGeo3dShapeGenerator . java to use a more appropriate formula to improve accuracy of Geo3d random number generation
added a keepAlive method to manage ClassLoader references to prevent potential memory leaks during resource loading
change return value from false to true in SQLiteDatabase . java to ensure successful database operations
do n ' t report lock monitorenter for concurrent class
added MkdirStep to create temporary directories in multiple Java files to ensure the generated output directory structure is consistent across the application
updated coordinate retrieval and error handling in MeshLeveler . java to improve boundary checks and enhance clarity in error reporting
[ drools - 759 ] allow pmml to be run from any class loader ( # 2593 )
updated the property from ` locationMode ` to ` heatStatus ` in ` ShadowPowerManager . java ` to align with the updated power management logic
added OS _ MAC _ TMP _ DIR constant and modified temporary directory creation logic to ensure compatibility with different operating systems by differentiating between macOS and
[ prj ] fix for map buffer issue on window
added a validation check for the organization in the POM file to ensure that the organization requirement is provided to avoid runtime errors
updated copyright notice in SepPostingsWriterImpl . java to clarify the intended licensing notice for contributors
deleted the TerminateWebSessionListener . java file to remove unused code that is no longer needed
updated the method call to use the system ' s class path instead of an empty string to ensure compatibility with the Java class path environment variable
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` , ` cryptKeyPriv
add license header test ( # 3198 )
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable launcher 3 PHYs functionality
added a noPrint element to the HtmlThreadInformationsReport class to enhance user interface by indicating when to print thread information
updated main version from 3.1 to 4.0 and incremented test version from LUCENE _ 31 to LUCENE _ 40 to reflect the
added macosx symbolicator and task handle to BsdDebuggerLocal . java to support macOS specific functionalities
use weak reference to prevent memory leak
change log level to debug for connection reset exception
[ java ] default admin buffer to commonconfiguration . admin _ directory _ name if not set .
added a break statement in TouchImageView . java to terminate a loop or switch case execution early
chore : [ dialogflow ] update go _ package to match open source code convention
do n ' t flush the feeder if ssl be n ' t enable .
added checks for object type constraints in TypeUtils . java to ensure proper handling of type bounds to improve type safety and avoid unnecessary type conversions
use concurrenthashmapset instead of nonblockingdequeset for memtables pending flush
added null check for tree errors in MemberEnter . java and improved error handling in JavaCompiler . java , while introducing new classes A extending
replaced SWT . NO _ BACKGROUND with SWT . NONE for the browser initialization to improve the visual appearance of the browser component
updated button ' s method from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure proper
fix bug in integerstamp . div ( ) when the value be negative .
added a method to read an InputStream into a byte array and utilize it to enhance data manipulation for image loading
added variable handling to SwitchCompiler and modified CaseStmtToken to support local variable expressions to improve code clarity and functionality related to switch bugs
added error handling for cipher initialization and failover in RSAClientKeyExchange . java to improve robustness by logging exceptions related to the cipher provider
added additional dependencies to the AdditionalDependencies attribute in WinGammaPlatformVC10 . java to include psapi . lib for the WinGammaPlatformVC10 class
updated string concatenation to use the system ' s line separator to ensure consistent line endings across different operating systems
updated TemplateEngineFreemarker and ApplicationController to improve script execution and encoding settings to enhance compatibility with newer templates and ensure proper HTML rendering
refactor serialization handling in CRDGeneratorTest to improve readability and maintainability of the code
make field final so that it can be overridden
make it possible to disable emailablereporter
added handling for quoted string quotation marks in CommandLineBuilder to ensure correct parsing of quoted strings in command line execution
removed the ` public ` access modifier from multiple interfaces and classes to enforce package - private visibility for better encapsulation
added a line to set the number of reduce tasks to the specified value to ensure proper configuration of reduce tasks for processing tasks
fix default value for object field in schema generation
change file version to 532077 to ensure compatibility with the latest version of the software
added support for the " GL _ ARB _ texture _ float " extension in FloatTextureData . java to ensure compatibility with OpenGL 3.0 extensions
add fileserver . write ( string , string ) to write a value to a file
added a conditional check for ` outputDirectory ` and ` jarStream ` before setting the output directory to ensure ` outputDirectory ` is set only if they
added performance measurement using PerfStatsCollector to enhance performance tracking for SQLite connections
updated JDK tool path from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
[ geos - 10678 ] add enum for resource error handling
lucene - 8470 : fix indexreader . read ( byte [ ] , int ) to handle eofexception .
add resource name to miss resource error message
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added a new AccessControlContext
updated CHECK _ EVERY _ N constant and modified free memory checks in Caches . java to enhance memory management control and improve logging
hbase - 26936 fix compilation error in testsplittransaction
added null check for currentSelectionArea before checking selection enable status to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test for the jaas demo in DemoModulesTests . java to ensure that the Jetty environment is correctly configured and
added conditions to check if both vertex and cell positions are 1 to ensure proper positioning of cells in the layout
refactor CacheOffHeap class implementation to improve performance and memory efficiency
detect create table reference to a later table and throw an error
added a check to ignore XML gid values and log a warning if the map is potentially corrupt to enhance stability by preventing unintended data
tilecache : synchronize setworkingset to avoid potential race condition
added a new Java class named Solution to implement a solution for determining the number of steps required based on student input
added an AddressChecker interface and modified TrackerRequestProcessor to use it for checking bad addresses to improve address validation by implementing a customizable TrackerRequestProcessor to
fix incorrect vertex builder for translucent layer
remove a tag from the config comment , not just the comment .
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` and updated related assignments to ensure compatibility with string representation of the
added null check for recieptentents before sending messages and changed time conversion methods to return milliseconds instead of seconds to improve robustness of the code
fix infinite loop when a single route be specify but no request body
do n ' t fail fast if the image cache be already in use
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated the ` perfStatsCollector ` to include it to provide additional context about
return all date in historicprocessinstance instead of just truncation
updated the method call from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to correctly utilize the new core
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command - line exceptions
refactor TreeMap implementation to improve code readability and maintainability
add a way to enable / disable async stack trace for display .
added a method to set the glow color in BubbleTextView and updated Folder to utilize this new method to allow customizable glow color settings
updated the styling for link and description components in LinkedFilesEditor to improve visual consistency and user interface clarity
removed the return statement for " java . lang . Short " in AbstractJdbc2ResultSetMetaData and added a test case for verifying class matching in ResultSet
removed file deletion logic in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify code by eliminating unnecessary exception handling
added null check for _ info before checking upgrade status to avoid potential NullPointerException
added a constructor to ShadowLocation that initializes the provider variable to a provided string to ensure the provider is properly set before use
added a condition to set maxRAM to 2048 if the device RAM is less than 32 bits to ensure maxRAM is set to a maximum of 1100
update localmapstatsprovider to log no data include map
add log to fileprofileactivator to help identify problem
fix typo : ` ` noname1234 ' ' - > ` ` invalid _ ' '
fix role collection in guild # getroles
None
added unit tests for the delete functionality in DashboardUserMapper to ensure that the delete operation behaves as expected and verifies expected results
update instructorfeedbackresultspage : rename primary and giver to secondary
add isautoderefhandle method to llvmnodes
added a method to retrieve the buffer size to provide access to the buffer size for improved performance
add usage help for the terasology command
updated action bar title assignments in DrawerActivity . java for improved clarity and functionality to enhance user experience by displaying appropriate interactions
updated CommandLineParserTest . java to improve command line parsing functionality
added new animation constants and modified the visibility of the ALL _ APPS _ CONTENT _ FADE and SCRIM _ OPAQUE _
update method to use javaNameFromExternal instead of toUnderscoreSeparated to improve accuracy in naming conventions
removed unused native methods from CWrapper . java to improve code cleanliness and reduce unnecessary dependencies
added constant value validation in mmm Checker . java and created a new ValueTest . java file to ensure that constant values are correctly validated and
updated test files for MontgomeryMultiply ,MulAdd , and square to improve testing accuracy and performance
removed unnecessary null check for constructors in PojoUtils . java to simplify code as constructors are always initialized
updated JiraConfiguration . java to improve configuration handling for Jira
updated error and coverage log messages for clarity to improve readability of logged output for error and coverage failures
update bounds calculations in DeviceProfile . java to ensure correct positioning of search bar bounds based on search bar offset to improve layout consistency and accommodate
pulseaudio : do n ' t schedule a disconnect if idle timeout be 0
refactor OverviewCommandHelper to run actions on the UI thread for better execution flow to improve UI responsiveness by ensuring actions are executed on
removed redundant methods and updated the ` getSourceGroupOptional ` parameter handling in ` AppleSource . java ` to streamline the code by eliminating unnecessary
increased the timeout duration for trigger firing from 22 seconds to 30 seconds to allow more time for trigger events to complete before proceeding with further processing
use positioncount instead of outputpositioncount in float reader
added checks for null values before returning an empty path to improve robustness by handling potential null pointer exceptions
added a check to skip processing for specific UI components to improve robustness by avoiding unnecessary processing for dialog components
fix crash when launch some apps which require icon to be load on the model thread
added null check for commitPoint and retrieved the latest commit point to ensure default behavior aligns with the deletion policy ' s best practices
added IMEI and MEID handling methods to ShadowTelephonyManager and ShadowTelephonyManagerTest to enable testing of IMEI and
[ hotfix ] remove unused code in simplehostroutingfilter
added the ` destory ` method to various classes and implemented resource cleanup in ` IndexSegmentImpl ` to ensure proper resource management and prevent memory
[ rip - 10 ] fix the unit test error of normalmessagelistenertest
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 2593 addendum fix checkstyle error
added a commission parameter to the DefaultWithdrawFundsParams class to allow users to specify the commission amount for withdrawal transactions
removed import of StreamTerminator from AutoClosingReferenceStream . java to streamline dependencies and improve code clarity
combine multiple catch blocks into a single catch block for both SolrServerException and IOException to improve code readability and reduce redundancy in exception handling
updated method signature and error handling in Java2TypeScriptTranslator . java to ensure proper method invocation and provide clearer error messaging for abstract
added logging capabilities to the FileSessionDataStore by utilizing StacklessLogging for disk sweeping to enhance debugging and monitoring of session - related operations
added serialization support to MutableColumnDataType and modified entity maps in Entities to enhance data handling and maintain consistency in entity representation
updated test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a check for null or empty claimRequestString before parsing to improve robustness by handling potential empty claimRequestString input
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with Hive ' s optimization requirements
updated type hint processing in UpdateMapper and added unit tests for null mapping in UpdateMapperUnitTests to enhance type safety and ensure correct handling
replaced the usage of CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest . java and added a new getCoreStatus method in CoreAdmin
fix nullpointerexception in moddirtransformerdiscoverer . init ( )
fix typo in error message
improve error message when pe graph decode fails
rename methods from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency in
( chore ) camel - mail : cleanup duplicate code in mailmessage
resolve : http : / / issues . apache . org / activemq / browse / amq - 2978 - fix for null originaldestination
updated the return statement to include a setIsPropertyName ( ) method to ensure that the identifier name is considered a a property identifier
set up wave generator activity in ui instead of toast
added null checks and logging in KeyedProperties and SheetOverlaysManager to improve robustness by handling scenarios where sheet does not exist
feat : add dsl test for exec and log
added a test method to verify the behavior of Solr ' s IndexWriter when no writer is present to ensure that Solr ' s IndexWriter is properly instantiated
call super . dispatchmethodkernelokra to fix flaky test
DnsClient and MxRecord classes to improve sorting functionality and ensure records are sorted before processing
refactor thread creation to use a privileged action for better encapsulation to enhance security and maintainability of the thread creation process
added validation and dropdown selection in SelectBox and set selection in UITest to ensure compatibility with Linux6 environments
replace IllegalStateException with a stack trace collector to improve error handling by providing more informative stack traces
refactor ` createState ` method to include a ` parentSplit ` parameter and update related logic in ` SplitState ` to enhance state
changed ` connectionState ` from a getter method to a volatile variable to ensure thread safety when accessing the connection state
increased the DEFAULT _ POLLING _ PERIOD from 10 to 1000 in AbstractPollingEndpoint and modified the PollingConsumer instantiation in EnableIntegrationTests to
svm : use direct memory allocation for good performance
added exception handling for DocletAbortException in HtmlDoclet and AbstractDoclet classes to improve error reporting by retaining localized error messages
pmd : fix unusedmodifier false positive with enum
refactor logging levels to use method references instead of lambda expressions to improve code readability and maintainability
add name = ' ssl = { 0 } ' to @ parameterized test for ssl = { 0 }
( chore ) camel - transformations : improve log message when transformation fail
updated variable name from ` userPermissions ` to ` activeConnectionPermissions ` to improve code clarity by using a more descriptive variable name
replaced equality check with Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability
updated file processing logic to handle null output root to prevent potential NullPointerException when processing files
pdfbox - 2576 : add annotationfilter so people can choose what to include
pdfbox - 4892 : fix typo find by codespell on fossies . org
updated content type handling for CSS , JS , and JS files in PluginServlet . java to ensure correct content type is set based on the path extension to
hhh - 13807 skip test for sql server compatibility
updated the parameter name from ` slot ` to ` slotSize ` for clarity and consistency to improve code readability and maintainability
added ` getStats ( ) ` method to multiple classes and updated ` DocBuilder ` to use ` AtomicLong ` instead of ` AtomicInteger ` to
updated the executor service to utilize an AtomicBoolean for managing thread executors and added long polling functionality to improve thread management and enhance
updated scroll functionality in PagedView , BaseOverview , and LauncherInstrumentation to improve gesture handling and responsiveness to user interactions
replaced the instantiation of UnlocksDialog and added a button to the content to enhance user experience by providing a more interactive unlock feature
clear drop event when a player be remove .
added a new constant ` DEFAULT _ PARAM ` to the ` StreamResult ` class to provide a default parameter for handling stream results
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to accommodate broader range of input exceptions
updated print statement to include chunk type in the output to enhance output clarity by including chunk type information
exclude lib - Swift . h when it ' s not present in the project
rename onhttperror to onhttpheadererror to avoid confusion
added encode ( ) method to RequestPlugin . java to enable URL encoding for requests
mondrian : fix mondrian - 1342 , mondrian - 1342 , mondrian - 1342 ,
added validation for null or blank password in LdapAuthenticationProviderImpl to ensure that a valid password is provided to prevent authentication errors
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear the complexWriters list to ensure proper resource management and avoid potential memory leaks
added @ SuppressWarnings ( " serial " ) annotations across multiple cache - related classes to suppress serialization warnings to improve code clarity and reduce potential issues with
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and modified the null check for ` classInfo ` and ` classInfo `
added error handling for the " _ errors " case in ErrorResponseException to ensure proper parsing and representation of schema errors
added a constructor to the EventSourcingRepository class to initialize the eventStore , eventStore , and snapshotTriggerDefinition with required parameters
refactor symbol handling logic in binary node processing to improve clarity and maintainability of symbol definition process
modified text formatting in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle multiple spaces in search text to ensure consistent formatting of search results
[ nuvocontrol ] fix communication of essential nvo feedback
tmi - tiff : use chunky planning by default instead of extension planning
added a call to close the input stream to ensure proper resource management and prevent potential memory leaks
the asm table now implement the laser ' s averagetick interface instead of the generic one .
added new classes SigInt and SigIntBarrier to handle signal registration and barrier operations to improve signal management and synchronization in the application
refactor edge handling logic to support hierarchical graphs in the ExporterGEXF class to enhance support for hierarchical graphs in the graph
refactor TCTLSeparatedProtocol to replace byte array handling with Text for null handling to improve performance and reduce memory usage
[ # 7693 ] fix rubric question index out of bound ( # 7694 )
updated CatalogComparator to compare original catalog case instead of DB2Database to improve compatibility with different database types
simonstewart : reset the webdriver proxy after each test to avoid race condition
updated criticalError messages to use Integer ' s toString method for clarity to enhance readability and maintainability of the code
removed redundant call to mTextWatcher . reset ( ) to streamline code by eliminating unnecessary duplication
fix javadoc warning in trufflestring
[ flink - 20516 ] [ gelly ] change outegesfunction interface to implement cogroupfunction .
rename Java6 and Java6 assertions classes for consistency to improve clarity and maintainability of the codebase
deleted the Class Á file and created a new DiacriticTest class that implements a test for MacOS X to ensure compatibility with
[ java ] use a cyclicbarrier in clustermemberesstest to reduce resource usage .
[ mng - 4674 ] do n ' t collect project when create a reactor
updated SSL scheme check and improved test assertions in ServiceRegistryConfig and TestServiceRegistryConfig to enhance SSL configuration accuracy and ensure correct port handling
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
removed an extra comma in the Jdbc3Connection constructor parameters to simplify the constructor signature and improve readability
refactor ensureInstance method to use a dedicated method to improve code readability and maintainability
added logging functionality and adjusted delta server time handling in BinanceExchange and BinanceBaseService classes to improve traceability and debugging of delta server
updated Tomcat container adapter files to enhance compatibility with newer Tomcat versions
modify the way to deregister animated animations to use a fallback mechanism to ensure the current form is used to avoid potential null reference errors during deregistration
modified the ` decodeResource ` and ` drawBitmap ` methods to accept ` BitmapFactory . Options ` as a parameter to enhance flexibility
[ java ] reduce number of message to be process by the example .
added a preventNextClick flag and refactored tweet text display logic in TimelineArrayAdapter to enhance user interaction with links and emojis to improve
added " text " data type to unmodifiable data types in PostgresDatabase and updated related logic in NumberType and ColumnSnapshotGenerator to ensure
fix entryprocessorbouncingnodestest ( # 3682 )
updated state checks from hard deletable to removable state in AmbariManagementControllerImpl . java and modified state management in AmbariManagement
updated bridge creation logic to check for a non - null bridge UID before adding to the inbox to ensure that the system correctly handles bridge reconfiguration failures
nutch - 2892 fix race condition in robots . txt check
updated condition checks for network interface display names to include null checks before processing to enhance robustness by preventing potential NullPointerExceptions during execution
added a default shader parameter to the SpriteBatch constructors and refactored related methods to allow customization of shader creation based on the default shader
added synchronous commit option to properties to enable asynchronous commit functionality in tests
refactor SortedSetTypeCoercer to use a custom TypeCoercer for coercing elements to enhance element coercion reliability
refactor confirmation messages in RemoveFileDialogFragment and RemoveFilesDialogFragment to use boolean flags for containsFavorite to improve code readability and maintainability
added a condition to check if the character is within the range of safe [ c ] in URLPathEncoder . java to ensure that only valid characters within
updated the socket address used for fragment storage registration to use a dynamic port based on the current time to improve flexibility in port management during fragment storage registration
[ hotfix ] fix checkstyle violation in hostresourceprovidertest
[ hotfix ] remove unused parameter from yarnentrypointutilstest
improve color initialization for sip comm frame .
removed the ShadowHtml class and updated assertions in HtmlTest to simplify the codebase and improve readability
added a new class StarTreeRecordStoreFactoryBlackHoleImpl to provide a record store implementation for StarTree to facilitate the creation of StarTree
updated logger configurations in HttpClientLoadTest to use the new Jetty and Quic logging classes to ensure compatibility with the latest Jetty version and
changed the visibility of the ` addListeners ` method from private to package - private in ` MockSettingsImpl . java ` to allow access to the method
[ hotfix ] [ runtime ] fix checkstyle violation in statehandlestore
updated imports from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty .
[ # 7748 ] enrolment result page : improve error message for invalid student section
simplify code ( try - with - resources )
( chore ) camel - 145894 : camel - jbang - test - infra - spring - boot - add camel - availableport
refactor methods in AndroidBuildConfigJavaLibrary , AndroidPrebuiltAar , DefaultJavaLibraryRules , JarBuildStepsFactory , and AndroidPre
( chore ) camel - core : fix checkstyle violation
api : remove unused page size from listcapacity api
added a case for closed states in the IteratingCallback class to prevent further processing in the loop
added an ` isAuthorized ` field and updated access control logic in ` AccessControlContext ` to reflect the authorization state of the access control context to ensure
added error handling and service registration logic in OSGiDeployer . java to improve robustness of OSGi application deployment events
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure correct MIME type is set for tiff resources
fix possible race condition in optimizedcalltarget
added a new file ` CubocDesktop . java ` and modified ` Map . java ` and ` ImmediateModeRenderer20 . java
updated file paths in PolicyMonitorTest . java to use the target directory instead of the test resource directory to ensure tests are run in the correct target directory
added a call to removeAllFiles ( ) in TrashbinActivity to ensure all files are removed from the trashbin list
updated the import statement for ` org . eclipse . jdi . Bootstrap ` from ` org . eclipse . jdi . Bootstrap ` to `
truffle : move checkglobalvariablestoragenode into a nested class .
modified the ` createLauncherEvent ` method to include ` Intent ` as an argument and updated relevant event dispatching logic to include additional properties to enhance
increased the maximum burn target amount by a constant for the maximum burn target to ensure it does not exceed a defined maximum value to improve maintain
updated imports and refactored snapshot object logic in UniqueConstraintSnapshotGeneratorSnowflake . java to improve code organization and enhance cl
modified the construction of the SQL item string in DMLTransformer to conditionally include named values or values based on whether the insert statement is empty
updated PGT URL parameter from HTTP to HTTPS in ServiceValidateControllerTests to enhance security by using secure PGT URLs
fix parsing of ` ` default ' ' function .
refactor JarLauncher class implementation to improve code readability and maintainability
fix raw and unchecked warning in java . base
add a new dimension ( 320 , 200 ) to the deviceconfiguration , and fix some formatting .
added a test method for updating a PGobject in ResultSetTest . java to ensure proper handling of PGobject data in the database
updated password reset endpoint to check for non - UAA origin and return BAD _ REQUEST for unavailable users to improve error handling and provide clearer
replaced retrieval of the second child node with a direct retrieval of the document element to simplify code by eliminating unnecessary type casting
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
use millisecond instead of second
fix infinite loop when bind be invalid
added a new class ` Chainer ` and modified ` CollectionSubject ` to utilize it for chaining items to enhance functionality by allowing chained items in
refactor Model class to improve code readability and maintainability
update recordedTime to include 619315200000L to increase the time representation for recorded data
added a condition to resize the terminal on Windows to ensure proper resizing behavior for Windows terminals
corrected the spelling of " Host " to " Host " and added a conditional check before setting the state of host version to improve code readability
remove reference to jsinterop - jre _ java _ library . jar from test .
( chore ) camel - maven : use linkedhashset in order to preserve order
remove useless try / catch in operationserviceimpl . toobject
refactor method call syntax for improved readability to enhance code clarity and maintainability
[ hotfix ] fix typo in commitlog archiver
added connect ( ) calls in CloudSolrClient and implemented a test for upload configuration in TestCloudSolrClientConnections to ensure proper connection handling and
synchronize access to allbindings to prevent concurrent modification
added methods to clear cached files and refactored directory handling in ShadowContext to improve code readability and maintainability by centralizing file management
[ flink - 1978 ] [ xstream ] add support for linkedhashset and linkedhashmap to securexstream . getstyles (
[ kie - maven - plugin ] allow to pass kiemodulemodel to kiemodulebuilder in kiehelper
updated block event handling to check for Farmland type and moisture against new farmland ' s moisture to improve dryness
added a default implementation for the getLocalIp method in FinishedSpan to provide a default implementation that returns null
updated JdbcStepExecutionDao to use deserialization for OBJECT _ VAL from a binary stream and added a new test for integer store in AbstractStepExecutionDao
improve javadocs and fix some minor bug
added " - python - gpu " to resource and included " python37 " to the list of built - in libraries in tensorflow . java to support
refactor PluginTab to improve plugin table refresh functionality to enhance user experience by allowing users to refresh plugins easily
change log level from info to warn for error reloading and trimming history file
vmware : fix attach volume issue on vmware with detached attach volume
camel - 20297 camel - sftp : fix the test error of camel - sftp
refactor ExperimentalMockitoJUnitRunner class to improve code readability and maintainability
updated the handling of build serial in GpsSettingsActivity , Session , and Utilities classes to use a new method for retrieving the build serial to
updated the implementation of the SwapGBuffers class to improve memory management efficiency and performance
[ fix ] bug in animationcontrol where spatial be n ' t remove .
added a new method ` setSmartReplies ` to the ` ShadowRanking ` class and updated the ` ShadowRanking ` class to use it
[ java ] only include archive segment file if they actually exist .
refactor resource retrieval for carrot2ResourcesDir in CarrotClusteringEngine . java to improve clarity to enhance code readability and maintain
added null check for testRect in WindowsTreeUI and created a new class bug8004298 for testing JTree functionality to ensure robustness
updated ASM API version from ASM7 to ASM9 in CompilationConfig . java to ensure compatibility with the latest ASM features and features
improve error message for null key in cache
added client information to SurrogateAuthenticationEventListenerTests to enhance test setup to include client - specific information during tests
added a boolean variable ` isUserView ` and set it to false in ` CardPresenter . java ` to ensure proper initialization of the user view state
replaced references to ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` with ` GraphvizUtility . isGraphvizJavaAvailable `
refactor metric retrieval for constructBatch and syncLogTimePerRequest to improve code readability and maintainability
added a new module - info . java file for SQLite connector module to establish a platform - specific module structure for SQLite integration
added a 500ms sleep in StreamResetTest . java to introduce a delay for synchronization during tests
simplified the initialization of permissionsManager by removing conditional checks to streamline permission management logic for different web types
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added getDepth method that returns 0.5 f in SpringLoadedState . java to provide a default depth value for the application
replaced array size validation with a utility method to copy the data array to a minimum size to enhance code readability and maintainability
[ hotfix ] fix checkstyle violation in executiongraph
remove the swipe layout from the notification activity and clean up the notification rendering code to improve code cleanliness and reduce unnecessary UI elements
None
fix npe in getsnapshotinventory and getsnapshotlock
replaced ` LOOKUP . findSetter ` with ` targetClass . getDeclaredMethod ( " set " TARGET _ FIELD ) ` and updated exception handling
updated MathTest . java to use ` intValue ( ) ` method for querying integer values instead of ` uniqueResult ( ) ` to improve type safety
updated string concatenation in BaseEmailContentFormatter to simplify the return statements to improve readability and maintainability of the code
added functionality to create and display a layout - provided JPanel to enhance user interface by providing a flexible panel structure for layout management
added a null check for the location variable in the ServerCallable class to ensure robustness by preventing potential null pointer exceptions
improve javadoc for builderfactory , pipeline , and pipeliningtest
added a validation check for DSA key parameters to ensure that the previous public key has valid parameters before proceeding
refactor MediaTypeRequestMatcher to use a separate method for ignoring media types to improve code readability and maintainability
updated task number handling in LlapBaseInputFormat to improve clarity and consistency in task tracking during configuration
added properties to the SpringBootTest annotation to allow bean definition overriding for testing purposes
added null check before closing indexReader to prevent potential NullPointerException when indexReader is null
removed the ' service ' package from several BTCMarketsStreaming classes and methods to simplify package structure and improve code clarity
added a test method to validate rendering of fenced code blocks to ensure that the code does not have BRs or paragraphs in specific formats
added a new file CompatibilityTest . java with methods for validating internal DTD and property properties to ensure compliance of DTD and property validation
added new utility classes for push notification and security management to enhance modularity and maintainability of the application
fix possible indexoutofboundsexception in tablerebalancer # getNextsinglesegmentassignment ( )
bump version to 2.7 . 0 and tidy release note
log4j2 - 1343 fix remain test failure on window
fix for tck failure with apr / native
initialized friction , restitution , density , and isSensor fields with default values to ensure proper default values for physics measurements
[ te ] update anomaly detection context builder to accommodate new scaling factor
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to improve synchronization during testing scenarios
added unit tests for font tag and link tag attributes in ResourcesTest . java and modified the return statement in ResStringPool . java to ensure correct attribute
minecraft / net / minecraft / src / main / instead of / src _ work / minecraft / net / minecraft / net / mine
added permission checks for phone call functionality in the Launcher and Utilities classes to ensure proper handling of phone call permissions and improve user experience
updated return values in SimulationPanel , PlotDialog , BasicEventSimulationEngine , Startup , and FlightData classes , and added localization support
None
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to improve thread safety when accessing the Docker client status
added a static final String VPX to the CodecTypes class to support video playback functionality
added a coordinator address option to the DistBuildFactory class and updated DistBuildRunCommand to use it to enable dynamic connection to the remote coordinator
added a path matcher in FsUtils . java and refactored timer management in WrapTimer . java to improve path matching functionality and ensure proper timer management
None
make sure ` ` maybegenericallyity ' ' work in web
disable flaky test for now
added a method to set materialization time in ObjectStore and implemented a test for it in TestObjectStore to ensure proper handling of materialization
added handling for UnsatisfiedLinkError in VoskSTTService to improve error reporting for missing native dependencies during model loading and processing
http : / / code . google . com / p / mybatis / issues / detail ? id = 5573 - make the gui more
refactor break weight logic in GlyphView . java to improve readability and maintainability of the code
refactor sync and buffer reading logic in RCFile . java to improve efficiency and readability to enhance performance by reducing unnecessary sync operations
added an @ AwaitsFix annotation in AutoAddReplicasPlanActionTest . java to indicate that the test is waiting for a fix to complete to
added functionality to collect elements into a LinkedList for storing processed steps and processors to enhance the data structure to provide clearer insights into the state of
removed the ` setToSortedDataFlavorArray ` method and simplified the ` DataTransferable ` and ` DataTransferer ` classes to stream
hbase - 2058 thrift testthriftserver should use random free port
added an EOF check in the RegExpScanner class to ensure proper handling of input during token processing
replaced conditional checks for enabled metrics and timers with static sets to manage enabled metrics and timers to improve performance by avoiding unnecessary checks for enabled properties
fix a nullpointerexception in the chatroom jabber implementation .
improve error message for miss file
refactor refresh token creation into a separate method to improve code readability and maintainability
updated error message formatting in BuckConfig . java to improve clarity of path transformation failure messages
[ hotfix ] remove unused code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a default implementation for hardware buffer retrieval
updated BTCChinaExchange to set the SSL URI for the BTCChinaMarketDataService to ensure the service connects to the correct network address
pmd : fix file path problem on window
added two new files , OauthController . java and Oauth2PluginTest . java , to implement OAuth 2.0 OAuth controller and
fix typo in semgrex documentation
abstractstreamex : add flatmap and flatcollection to abstractstreamex
improve error message when exception to producer response converter can not be handle
added support for Maven Surefire in class loader checks to enhance compatibility with Android project with mixed scala and org . specs2 configurations
do n ' t try to transcode sdp when it ' s already in use
updated the type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added comprehensive tests in CreateTableGenerator
[ geos - 7167 ] add test for wfs 2.0 multi - value normalization with station
added a boolean flag ` wasInvoked ` in ` NetworkTestUtils ` and refactored variable names in ` UaaHttpRequestUtilsTest ` to
add a configuration check before expanding regex mapping in ColumnarDataSource and return unmodifiable collections in RowProcessor to enhance flexibility and prevent
updated methods in CustomSeekProvider to use a constant for seek length and refactored the splitIntoThirtyParts method to improve code cl
added XLCDCommunicator , XLCDController , and XLCDFirmwareController classes , and refactored firmware handling logic in FirmwareUtils to
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . api :
added checks for non - empty messages and retry times in multiple classes to ensure that the system correctly handles empty messages and triggers
refactor thread handling in WorkerProcessPoolTest to use a join method instead of separate await thread states and state assertions to improve code readability
modified the equals and hashCode methods in DelegatingMethod . java and added a new DelegatingMethodTest . java file to improve equals and hashCode
updated constants for freezing and unfreezing versions in EnergyCost . java to increase resource usage to optimize performance and resource usage
added throws declaration for ConfigurationException in the command method to improve error handling and ensure proper configuration saving
deleted the ` SpringTransactionHooks . java ` file and replaced its usage with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest . java `
refactor methods in AbstractClassAssert to improve code readability and maintainability
add a new file ` GetUninitializedStringValueTarg . java ` that demonstrates the behavior of ` GetUninitializedStringValue ` using ` StringReference ` to
added support for provided dependencies in AndroidLibraryDescription and updated related tests to enhance dependency management and improve test coverage for dependencies
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to control keyboard transitions between home and all apps
replaced the retrieval of the system anomaly message with a flag to control the saving of the bug report to improve control over the state of the bug report
added a new constant ` CINEPACK ` to the ` FormatConfiguration ` class and updated its usage in ` LibMediaInfoParser ` to support c
added camera bobbing functionality to the player ' s rendering process to improve gameplay experience by accelerating player movement animations
update blob data processing to use digest instead of data to ensure accurate representation of blob data
deleted ` HSQLDBServerFilesFilter . java ` and replaced it with ` FilenameFilter . java ` in ` TestUtility . java ` to simplify
walletappkit : do n ' t restore from seed if restorefromkey = = null .
replaced ` getApiDataVideoVersion ( ) ` with ` getApiDataSeriesVersion ( ) ` and added a trace log statement in ` MediaTableTVSeries
added a check for duplicate type exists in the method invocation to ensure that the method invocation does not have duplicate type references
replaced hardcoded array size 6 * 3 with a constant NUM _ VALUES to improve maintainability and readability of the code
add a dialog to notify user when a feature be not configure due to an application setting change
hive - 16400 : fix genericudfmask to return 0 when value = 0 ( prasanth jayachandran review
bloomblockstoretest and derbyblockstoretest : use temporaryfolder instead of db _ name
add itemstack # hassubtypes . close # 239
fix line width be set to 1.0 ( # 7372 )
simonstewart : set the default browser startup page to ` ` 1 ' ' for the firefox driver .
updated condition in Http1xClientConnection to include specific HTTP method checks for CONNECT , GET , and upgrade scenarios to enhance connection handling for improved
changed the accept method from " compile " to " process - classes " in JoobyMojo . java to specify processing classes instead of compile
use closeidleconnections instead of shutdown to close idle connection
added a check for aggregate function suffixes before adding metrics to ensure only valid metric identifiers are added to the collection
added a method to set fullscreen parameters in TaskOverlayFactory and updated task view corner radius retrieval in TaskView to improve fullscreen functionality and ensure correct corner radius
added a new Java file that counts the frequency of records based on user input
[ java ] initialize the socketchannel to null to avoid npe .
add miss license header
added error handling around ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` methods in ` StaxEventItemReader `
None
updated import statements from ` com . nimbusds . jose . shaded . json ` to ` net . minidev . json ` in
update OS . java to handle " AIX " family identification and set OS mapping for Linux to ensure correct identification of the AIX family to improve compatibility
cloudstack - 5873 : router with private ipv4 address should be public ip address , not private ipv6 address
added a method ` invokeWithoutBlockingWithResultSync ` to facilitate asynchronous execution of tasks using ` RunnableWithResultSync ` to improve performance by
remove presencemessagetopictest since it be no longer need
replace explicit type casting with Math . round for better readability and maintainability to improve code clarity and reduce potential rounding errors
mahout - 1340 : fix checkstyle violation in testclusterdumper
updated the byte alignment calculation in KeyValue . java to accommodate different class sizes and ensure proper allocation for array storage
camel - 14284 : camel - core - optimize to reduce object allocation .
added support for conditional tasks in SparkCrossProductCheck to enable processing of conditional tasks efficiently
fix concurrentmodificationexception due to profile add / remove
updated conditional logic in LoginInfoEndpoint and added new test cases in LoginInfoEndpointTests to ensure correct handling of passcode prompt presence when there
hbase - 26977 add more descriptive log for assignment assignment state transition to assignmentmanager
added a new field ' result ' and updated related methods in HuobiAccountInfo . java and HuobiAccountServiceRaw . java
added support for the " PERIOD " keyword in the MariaDB database and created a test for it in the AddColumnGeneratorTest to ensure proper
[ beam - 8470 ] update portablepipelineoptions to document new pipeline option
update change - log for android 7.1
changed the visibility of NUM _ MILLIS _ IN _ DAY from private to public and updated TestUtil to access the constant to allow external access to the
removed unnecessary print statement from ImageResourceLoader . java to clean up the code and improve performance
[ java ] check for client invoker before invoke aeron client .
updated validation logic in ` Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` with test cases for handling implicit lambda
refactor hideMenuItem calls to showMenuItem and hideMenuItems for better encapsulation to improve code readability and maintainability by separating visibility and
[ btc - e ] update withdrawal type to btc _ deposit
replaced List with Set for storing HTTP status series data to enhance data integrity by preventing duplicate entries in the data structure
marked the PluginLoader class as deprecated to indicate that the class is outdated and should no longer be used
[ iotdb - 6674 ] fix last query fail when the last chunk ' s end time be large than the version ( #
removed carriage return character from reqStr to ensure consistent newline formatting
set wire error log level to error
added a line to set the title bar ' s safe area to ensure the title bar displays correctly within a specified area
modified the iteration method for TimeSeriesChunkMetaDataList to reverse the order of elements to improve performance and readability of the code
added a SQL statement to alter a column in the AlterTest class to ensure that the SQL syntax is correctly parsed and deparsed
make abstracthikariconfig . copystate ( ) public to make it easy to override .
fixed - rscheduledexecutorservice . schedule task execution should be call completablefuture .
file system split now support . part extension .
[ hotfix ] [ orc ] fix checkstyle violation in the orc module
added null check for valueArg in CompareFunctionsProcessor . java to ensure proper handling of null values to prevent potential NullPointerExceptions
fix checkavailablediskspace to properly recalculate expect disk usage
removed redundant ` toString ( IndexReader ir ) ` methods from multiple vector classes to streamline the code and improve maintainability
added checks for invalidated state and null check for mLastGestureState in AbsSwipeUpHandler and TaskAnimationManager to prevent unnecessary processing during task animation
refactor ` getLockTimestamp ` and ` setLockTimestamp ` methods in ` AppPreferences ` and ` PreferenceManager ` to use instance methods instead of
updated the way the artist is retrieved from the metadata in MediaInfoParser . java to ensure the correct artist is extracted from the metadata if available
fix potential npe in ncfirebasemessagingservice
nifi - 1979 fixed npe in splittext when no header be present
modify key store handling in HttpsConnectorFactory to support Windows - specific key store type to ensure compatibility with different operating systems
increased the DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to allow
added a conditional check for ResultCode . FILE _ NOT _ FO to handle cases where remote folder is not found to ensure proper handling of error scenarios
added animation features to the Slider class with improved animation control to enhance user experience with better visual feedback during transitions
updated assertions in LineSeparatorProcessorTest to use consistent variable naming to improve code readability and maintainability
increased maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to optimize memory usage for better performance
added a test for negated ternary not unwrapped in UnwrapParenthesesTest . java and modified the return condition in UnwrapParentheses
camel - 14284 : fixed hazelcast queue consumer poll timeout issue
added TextFeedbackTest class and modified AllTests to include TextFeedbackTest to enhance test coverage for text feedback functionality
replaced Math . round with Float . compare for score comparison to improve precision in numerical comparisons
updated DENSITY constants in AddAndScaleMultiImage . java and refactored resource saving in ResourceEditorApp . java to ensure consistent
bugfix : arrayclasselementoffset be n ' t need for arraycopy snippet .
do n ' t print stats when there be no step total
add - r flag to indexer to turn on / off remote scm support
[ mielecloud ] add onofftype . end and risese hold to mieleappliance . isrunning ( )
updated import statements to use SysUiStatsLog instead of StatsLogCompat to standardize logging calls for launcher and task events
[ hotfix ] fix typo in localzookeeper
add test for project generation event
ggb - 2118 preview point can now be re - added to selection
refactor JavaCompiler class to improve code readability and maintainability
log an error if we do n ' t have enough time to run randomreads
8151536 : update copyright year for file in corba repository for 2013
updated ldflags in NdkCxxPlatform . java to include gc - sections , nocopyreloc , and nocopyreloc to enhance flexibility
updated ` SpringCloudCircuitBreakerFilterFactory ` to utilize ` ServerWebExchangeUtils ` for expanding fallback URIs to enhance URL
simonstewart : update copyright year to match last edit .
fix for http : / / github . com / apache / poi / bugzilla / show _ bug . cgi ? id = 569
added a method to retrieve an account net via HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
added a check for non - positive text width before layout in SwingUtilities2 . java and modified the LookAndFeel setting in Test6635110 . java
refactor FlatteningIterator to initialize it with a new instance and simplify iterator logic to enhance code readability and maintainability by reducing
remove HTML tags from the title and body of the notification by normalizing whitespace to ensure consistent formatting of the notification content
doc : generate sample code in the java microgenerator ( # 438 )
added test to reload exist question before delete them
update hssfsheet . getfirstrownum ( ) and hssfsheet . getlastrownum ( ) to return 0 when there be
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being executed
[ java ] : rename pendingsession to pendingclustersessions to avoid confusion .
refactor hashCode and equals methods in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to
added condition to flush quic session when remotely closed to ensure proper resource management and avoid potential memory leaks
added AutoCloseable interface to SplitReader to enable resource management and prevent memory leaks
removed the deepCopy method from GsonBuilder to streamline the GsonBuilder configuration to improve code clarity and reduce unnecessary method complexity
return not _ found instead of null when source code ca n ' t be find
refactor file handling in RestClientRequestImpl to use a CompletableFuture < ? > instead of an array to improve asynchronous processing of file uploads
updated the dispatchStatusString method call in GrblController . java to ensure consistency in status dispatching logic
updated the classloader setting in MockFactory and added a new SearchingClassLoader class to improve class loading flexibility for mocking instances
test : add test case for bug in scene ' s refresh flag
added LEFT _ SEMI _ JOIN to conditional check in ConstantPropagateProcFactory . java to ensure proper handling of LEFT _ SEMI _ JOIN logic
refactor HttpReceiver and HttpSender to simplify response completion checks to enhance code readability and maintainability by removing unnecessary boolean checks
use arrayoopdesclengthoffset instead of arraylengthoffset for good compatibility
fix for http : / / issues . apache . org / jira / browse / amq - 3892 - configure the destination policy for
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added a check to ensure ` appCtx ` is running before stopping it to prevent unnecessary stop operations when not running
changed the return type of the drawItem method from void to GlyphLayout to enable method chaining for improved functionality
refactor metrics retrieval in SpringmvcClient and modify exception handling in CodeFirstSpringmvc to improve metrics publishing and enhance error management
removed the calculation of SAFE _ ACCOUNT _ AGE _ DATE and simplified lambda expressions in AccountAgeWitnessService . java to enhance code readability
refactor structureHeader and StructureReader for improved readability and structure to enhance code clarity and maintainability
added ` resourceUrlProviderExposingInterceptor ` to the web flow interceptors in ` CasWebflowContextConfiguration . java ` and updated
added DexReturnInliner class to handle return statements in Dex files to improve the processing of return statements in the dexpler
[ smarthome ] enrich rule dto with additional data ( # 3173 )
fix pathresource . isdirectory to always return true
[ hotfix ] remove obsolete sqldialect enum
replaced ` rDotJavaPackages ` with ` rDotJavaPackagesSupplier ` and introduced a new boolean field ` hasRDotJavaPackages `
implement test case for getpackageinfo ( )
added a method to set the minimum cross compaction unsequence file level in IoTDBDescriptor . java to ensure that the application can handle unsequenced
[ hotfix ] [ core ] move resourcemanager interface out of active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify that the
refactor ZipResource to improve URI construction and handle URISyntaxException to enhance error handling for invalid URI syntax to ensure robustness against invalid URI
refactor ExpandableUploadListAdapter for improved thumbnail generation logic and formatting to enhance code readability and maintainability while ensuring thumbnails
refactor RobolectricTestRunner to merge parent class and method configurations in a loop to enhance config retrieval accuracy by ensuring all parent classes
filter out blocks and items based on registry names to enhance data integrity by ensuring only valid registry names are used
refactor methods in AbstractDataChangedListener to be abstract and implement default implementations in WebsocketDataChangedListener to enhance extensibility and
modified JSONPojoConvertor to handle Enum types and added color management functionality to enhance flexibility in JSON object conversion and improve test coverage for color
deprecated the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the option is outdated and may be removed
refactor GWTRequestWrapper to use byte array instead of string for originalPayload and improved character encoding handling to enhance performance and reli
added orientation correction functionality to the GyroControl class to enhance sensor feedback based on device orientation changes
update the size of the biome list to match the size of the biome generation array .
test : use print instead of println
updated the declaration of the variable ' env ' in FileCompilerConfig . java to ensure proper initialization of the environment variable
added a new interface ByteToLongCollector to provide a collector for various data types in the codebase
added preload parameter to MMapDirectoryFactory to control preload behavior for map operations
added custom metrics for various enabled components in BukkitPlatform . java to provide detailed metrics for various components based on user settings
refactor QuickConnectREST class to improve code organization and readability
added aspect ratio and default card image drawable in CardPresenter . java to enhance image handling for different media formats
( scott phillips ) fix bug with implicit login
updated the cloning logic in VectorHashKeyWrapper to handle empty arrays and improved byte and byte lengths initialization to enhance robustness by
added tests for system nano time and warmup phase in TimeChangeTest . java to ensure correct behavior of system nano time behavior after CRIU checkpoint
trim whitespace from input lines in MultiPartFilter . java and add a print statement in MultipartFilterTest . java to ensure cleaner input handling and
fix mob loot not drop xp . close # 7969
updated error messages for API key and quota exceed limits in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and consistency in error reporting
[ dslsql ] remove unsupportedoperatorsvisitor since it be already implement
refactor GraphEnhancementQueryEnvironment to implement RdepsFunction and streamline target graph processing to enhance dependency management and improve code cl
refactor Character class to improve code readability and maintainability
added logic to set the selection index of the entire rocket when scaling an entire rocket to ensure that only non - ParallelStage components are selected to
updated assertions in UpdateableResultTest to remove unnecessary array creation to improve code readability and maintainability
added time boundary information handling for hybrid tables in BaseBrokerRequestHandler . java to improve query boundary detection for hybrid tables and enhance query
do n ' t add the socket ref to the poller if it be already in the poller
update eightmuses ripper to download full size image
refactor calls to ` mDevice . wait ( ) ` to ` TestHelpers . wait ( ) ` across multiple test files to centralize
added a condition to check if the profile is a phone and not in vertical bar layout to ensure proper layout behavior for phone devices
replace ` getValue ( ) ` with ` unwrap ( QueryImpl . class ) ` in test assertions to ensure compatibility with the updated Hibernate query implementation
replaced ` Files . readAllLines ` with ` readMatchingLines ` for reading lines to enhance security by using privileged actions for reading lines
added dynamic check for getResultStream method in JpaQueryExecution to enhance query execution handling to improve performance by optimizing result stream retrieval
added null check for entity before continuing in the loop to prevent potential NullPointerExceptions during execution
added test for entry processor with predicate to clear index
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
utils : fix arrayindexoutofboundsexception
fix ` ` no normalize name ' ' menu item in editor
updated the scratch path format in Aapt2Link . java and added a recursive symlink step to improve path management for build targets
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and `
ggb - 2118 clear the select geos only when need
camel - 14284 : camel - yaml - dsl - better error reporting when parse cql expression fails
added ` isCanceled ( ) ` method implementations across multiple classes and updated ` ExecutorCallAdapterFactory ` to use delegate ' s isCanceled method to improve
refactor ` isAnnotationPresent ` methods across multiple classes to use a consistent default implementation to improve usability and maintainability of annotation checking logic
changed the implementation of the removeAllWidgets method to throw an exception to indicate that the method is not yet implemented
[ hotfix ] [ yarn ] fix yarn test instability
opensslcipher : ensure output size do n ' t exceed input size
added logic to force transcoding of high - res content based on Fire TV Stick status and video dimensions to ensure correct profile usage to improve user experience
[ spark dataset mock ] fix compile error
replaced specific import statements with a wildcard import and modified preference handling to improve code readability and ensure listeners are selected based on preference
changed the parameter type of ` putString ` from ` boolean [ ] fullwidths ` to ` byte [ ] wideAttribute ` and updated related
added drag listener support in FolderIcon . java to enable drag - and - drop functionality in folder icons
- add a method to create an empty repository artifact from a string , boolean , int , and long value .
no effective change - code cleanup
removed the condition checking for the ' afterAug1 ' calendar in VideoViewerActivity to simplify the logic for verifying video link inclusion
fixed sftp producer when copy large file . thanks to benjamin for the patch .
increase test timeout to reduce flakiness
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability
fix double plant placement on huge ferns
replaced tree . setFocusable ( false ) with tree . setRequestFocusEnabled ( false ) in TranscodingTab . java to disable focus request for
cloudstack - 4892 : do n ' t swallow exception during shutdown
updated DB2TestSystem and DockerDatabaseWrapper to exclude DB2TestSystem and modified TableIsEmptyGenerator to handle DB2 - specific conditions to enhance
changed the access modifier of the units variable from private final to private and added a setter method for it in DoubleModel . java to allow dynamic
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC / ZMW
added functionality to set the number of samples from settings in TestPBRLighting . java to ensure the output format has the correct expected number of samples
updated test cases in StepWithSimpleTaskTaskJobParserTests to use a consistent naming convention to improve code readability and maintainability
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to ensure immutability of credentials and service instances
add parentheses around ggbabs ( ... ) function call
added multiple calls to ` addServiceOutput ( ) ` and modified error logging in ` DDLSemanticAnalyzer . java ` to improve service output handling
[ drools - 2131 ] fix biginteger coercion in executable model ( # 2140 )
added import statement for " org . eclipse . jdt . " in WebAppContext . java to hide the JDT used by Jetty
modified the return value of the useAuthCache ( ) method to always return false to simplify the authentication caching logic
convert the namespace to capitalize using the Utils class to ensure consistent namespace formatting in the code
fix for http : / / issues . apache . org / activemq / browse / camel - 245 . ensure backward compatibility .
added null check for zooKeeper before setting zooKeeper to avoid potential NullPointerException
updated progress bar step message in Loader . java to ensure consistency in progress indication
refactor vibration handling in AllSetActivity to run on a UI helper thread to improve responsiveness by running vibration tasks on the UI thread to
added a method to update the last remote stream ID to ensure the session reflects the latest updates
workaround for antialiasing problem on linux
[ java ] tidy up code and remove unused field .
refactor : remove static import of enums in ctannotationimpl . java ( # 2595 )
update exoplayer . builder javadoc to reflect api change
replace getRGBPixelImpl method with getRGBPixels method to improve accuracy in pixel conversion
added a new method ` newPrintStream ` to configure output stream encoding based on system properties to enhance flexibility by allowing dynamic encoding options
increase vibrate duration to improve user experience
clean up flybush data after each test run
removed the executor parameter from the WebSocketClient constructor to simplify the constructor and improve readability
alexeibarantsev : fixing src / test / java / org / w3c / i18n / i18n /
use load constant exception instead of incompatibleclasschangeerror for link at build time
added context . restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper authentication handling during integration tests
make conllufeatures case insensitive
refactor JavadocTool to use a unified parse method with unique file tracking to enhance code readability and maintainability by reducing
simonstewart : adding test to try and prove that the option be not in the selectormany or multi select
added validation for key length in HighestKvno . java to ensure correct number of keys to prevent errors
added error handling for retrieving attributes in HDF5BatchReader to ensure that only Huge objects BTrees with 1 record is supported to improve robustness
use writeresult in bigqueryio . expand ( ) instead of pdone . in ( )
chore ( regen ) : upgrade swagger - generator - java to v2.11 . 0 for processGroupResource
added a new file TestMultiANewArray . java for testing multi - dimensional array functionality to facilitate testing of multi - dimension
fix : remove unused global config
refactor sync block ID retrieval logic to use a variable for the head block ID to improve code readability and maintainability
set the theme for the preview tab in PreviewTabView to ensure the correct theme is used based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` to validate the idle timeout of the HTTP server to ensure that the server correctly handles idle
make dictionary property configurable via constants
replaced calls to ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` in ` Doc
updated generic type syntax and removed unnecessary type casting in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve code readability and
change log level from warn to debug for child node logging to reduce noise in the log during development
refactor color extraction logic to use a method for retrieving the hotseat palette to improve compatibility with devices running Android N and above
added methods to set a default DataTable entry and cell transformer in TypeRegistry to enhance data table handling capabilities
assert that newAvailableShared equals initShared in AtomicRemainder . java to ensure correctness of shared state validation
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` variable and its getter method from ` ProjectGenerator ` to streamline the code by eliminating unnecessary property access
( chore ) camel - driver : fix checkstyle violation
added contact form handling routes and introduced a new Contact class with associated methods to enhance the application ' s form processing capabilities and facilitate
guac - 522 : use objectpermissionset instead of permission for simpleuser .
bump icon cache version to 21
[ drools - 2852 ] fix typo in traitfactory . setmode signature
updated methods to use ` findWhereNameOrAliasLikeAndActive ` instead of ` findWhereNameLikeAndActive ` to accurately
replaced manual resource closing with safe close utility to improve resource management and prevent potential memory leaks
refactor data change listener implementations to improve code organization and maintainability
added a click listener to the overflow button to enable dynamic menu display when the overflow button is clicked
update failure messages to reflect references instead of null to improve clarity and accuracy of error reporting for null and non - null references
ggb - 212 update the line height of help button in av help
move protobuf utility test to core package
fix divider position and side pane width in preference
fix aux file generation for crossref
[ geos - 5978 ] fix geos - 5978 geos - 5979 metadata serialization issue
rename variable ` extractTypes ` to ` dataTables ` to clarify the purpose of the list to improve code readability and maintainability
fix update of metacontact avatar when meta contact change .
updated import statements to reflect the new package structure to ensure compatibility with the latest version of the Command class
added a test method to clean up the audit log table with post parameters by position to ensure proper functionality of the cleanup process
changed the type of the inject method to Object and added a suppression warning in ComponentContext . java to enhance type safety and suppress unchecked warnings
added regex patterns for matching comment lines in ACLFileParser . java and updated corresponding tests in ACLFileParserTest . java to enhance comment
updated the ` isReadable ` method in ` MapRDBFormatMatcher ` to include additional parameters for better integration with ` DrillFileSystem ` to en
added an ancestorDimensionValues map and modified node name formatting in StarTreeImpl . java and StarTreeNodeImpl . java to enhance dimension value
added user unlock check before dumping plugin manager data and refactored closeOpenViews method to streamline view closing logic and improve code readability
changed the condition from checking if widthStr is not null to checking if positionStr is not null to ensure the correct variable is used for position validation
refactor PKIXValidator logic for improved clarity and structure to enhance maintainability and readability of the validation process
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu . integr
vpc : do n ' t skip project network if acl be not require
updated the method for retrieving the label from a JSON element to use ` get ` instead of ` remove ` to ensure correct retrieval of the label from the
add an option to store undo info in the property file .
replaced direct access to the " sun . java2d . xrgradcache " system property with a privileged action to retrieve it to enhance security
fix flaky test in streamclosetest
added doAfterFlush method implementation in DocFieldProcessor and updated perFields initialization in TermVectorsConsumer to ensure proper flushing of documents after flushing
fix jackson configuration metadata generation
replace capacity and mask variables with final variables and update their calculations in BiInt2ObjectMap , Int2ObjectHashMap , and ObjectHashMap classes to
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified file renaming logic in HiveConf and Hive . java to
add some logging to help diagnose ci failure
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerException when context is null
fix classloading issue in nativeimagebuildserver
modified the return type of ` modifyGrantedAuthorities ` from void to ` List ` and updated the handling of granted authorities in ` Switch
renamed JaxrsIntegrationTest to JaxrsIntegrationTestBase and added new test classes JaxrsSpringMain and JaxrsSpring
fix # 183 - do not set querytimeout if jdbc4 be not support
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance test coverage for substring functionality in different
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter . java ` and
added MariaDBDatabase support and improved sequence handling in CreateSequenceGenerator to enhance database compatibility and ensure compatibility with MariaDB
[ hotfix ] fix checkstyle violation in int2objectcachetest
added TableDataManagerProvider import and set server metrics in multiple test files to enhance metrics tracking for offline data manager functionalities
added a check for " jsse . enableMFLNExtension " in the SSLExtension class to ensure proper configuration of SSL extension settings
refactor ObjectHashSet iterator and add tests for string representation to improve code clarity and ensure proper functionality of string representation in collections
updated character count logic in Compose . java and TweetFragment . java to correct the calculation of ' count ' based on the length of ' reply
added support for specify ttl for cassandra data point . patch by jbellis
updated the ` checkForAndKillXcodeIfRunning ` method to accept an optional ` enablePrompt ` parameter and improved error handling for Xcode
add a method to retrieve the terrain at a cell in the TerrainGrid class to facilitate retrieval of terrain data associated with specific cell coordinates
added default value printing in mmm Pretty . java and created a new class T6665791 . java for Java annotation processing to enhance
added error handling for missing quest key JSON file to improve user feedback when resource loading fails
modified the return condition to exclude push requests to ensure that push operations are not attempted when not allowed
refactor PointValue class to improve code readability and maintainability
removed signing of local witnesses using the private key to streamline the blockCapsule functionality
modified the method to return the first root or null if no roots exist in FileSystemView . java and added security checks in Win32ShellFolder2 .
fix copylastrow to actually copy the last row
added functionality to manage undo operations using a SparseArray in ListFragment to improve note management efficiency by efficiently managing undo operations
[ # 7736 ] uploaddata : fix duplicate id in feedbackquestion and responsecomment
added a null check for the data variable in the getTransferData method to ensure that the method handles non - null data correctly
no effective change - code cleanup - remove unused
replaced custom Padding class with direct usage of AppWidgetHostView for widget padding retrieval to simplify padding retrieval and improve code maintainability
refactor static MethodHandle initialization in NashornBeansLinker . java to use static fields to improve code readability and maintainability by reducing
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
rename ` latch ` to ` goAwayLatch ` for clarity to improve code readability and maintainability
updated assertions in IterableSubjectTest to use hasMessageThat ( ) method to improve clarity and accuracy of failure message assertion
replace ThreadLocal instance of currentBook with null in multiple files to simplify the code by removing unnecessary thread - local usage
added support checks for MethodInvocation types in ContactSecurityVoter . java to enhance functionality by ensuring only valid object types are processed
removed GachaHandler and Tools imports from DataLoader . java to streamline dependencies and improve code clarity
added ` rowsAffected ` as an ` int ` in the ` postUpdateLog ` method to handle update success notifications based on the number of
mow - 162 set margin - left and top to fit correctly in euclidian view
initialized foregroundFPS and backgroundFPS to 60 to set default values for frame rates in the application
added object release tracking assertions in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent potential memory leaks
do n ' t create a new defaultwebsocketframe until we can close the websocket connection
updated test classes to include new listeners and added an interceptor for handling state machine errors to enhance test coverage for state machine error scenarios and improve
refactor SettingsActivity to use a dedicated method for setting the background color to improve code readability and maintainability by reducing duplication
updated imports from ` org . apache . commons . lang3 ` to ` org . openhab . core . util . StringUtils ` and added
added an ` accumulate ` method to ` JavaUserDefinedAggFunctions ` that sums two integer values into a ` WeightedAvgAccumulators ` using a
hbase - 2088 addendum fix checkstyle issue in hbase - replication
replace VALID _ CACHE _ SET with REGEXP _ CACHE for cache management to improve performance by reducing redundant checks and caching
added a reset method to the GameThread class to provide a way to reset the game thread to nullify its state
added a check for the realm in the login method of DigestAuthenticator to ensure that only valid login services are processed further
refactor parameter handling in SavedRequestAwareWrapper to merge existing and wrapped values from savedRequest to improve parameter management and reduce redundancy in
updated InfoStatus messages for clarity and improved logging messages to enhance user understanding of configuration options and enhance debugging information
[ hotfix ] [ runtime ] use this . wakeup ( ) instead of hasnotified # countdownlatch . countdownlatch . countdownlatch
added a check for Android O in PhotoViewerActivity and updated UserAutoCompleteHelper to use it to ensure compatibility and improve user input handling for Android O
updated schema info level from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to ensure compatibility with the latest schema information format
refactor XML output stream handling in SaveTask . java to use BufferedOutputStream to improve performance and resource management during XML processing
replaced random byte generation with fixed UTF - 8 string handling in TestPayloads . java to improve compatibility and reliability of byte manipulation methods
fix mc - 103516 . close # 103516 . close # 1036
removed " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " from the ProbeConfig list to streamline container adapter configurations for improved
[ drools - 5663 ] fix deserialization of double - valued field in kiesession
None
pdfbox - 4892 : remove ` ` public ' ' keyword from class in preparation for release
updated RemoteEndpointServiceAccessStrategy to use Spring Expression Language for constructing endpoint URLs to enhance URL resolution and support HTTP headers
refactor the instantiation of ResponseBuilder into a separate method to improve code readability and maintainability
added a notification event for command start in AsyncBackgroundTaskManagerTest to enhance user interaction during task management operations
refactor ` PreviewItemManager ` to encapsulate the drawing parameters computation in a new method ` recomputePreviewDrawingParams ` to improve code readability
replaced the tokenizer implementation with CharFilterFactory in LukeRequestHandler . java to enhance functionality by integrating CharFilterFactory for improved
replaced null argument checks with ` ParamChecks . nullNotPermitted ` utility method to improve code readability and reduce boilerplate code
added verbosity control and modified the createSubContext method to handle silent verbosity to improve output visibility based on verbosity settings
added a schema case conversion for Oracle in DbSqlSession . java to ensure consistent schema handling for database types
log4j2 - 1349 improve asyncloggerallthreadcontextimplementationstest by add class name to the context description
added a new file TestShrinkToOneRegion . java that includes a main method to test garbage collection of the system
updated package splitting logic to use Splitter for improved readability and maintainability
replaced ` utf8ToString ( ) ` method calls with direct usage of ` context ` in ` AnalyzingInfixSuggester ` to improve
fix pushsafermessagebuilder to correctly encode data : url
[ hotfix ] [ e2e ] remove duplicate show label stats command
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
changed FORMATTER from private final static to private static in multiple test files to simplify formatting by removing unnecessary prefixes
updated UDFRound class to use BigDecimal for rounding values to enhance precision in floating - point calculations
[ jsscripting ] use configparser . valueasornull instead of manual null check
changed class access modifiers from package - private to public for Test1 and Test2 to allow external access to these classes for better integration
updated player event listener constants to use " deny . no _ enter " instead of " permission . no _ permission _ event " and improved variable naming
fix count ( * ) on join optimization
replaced references to ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` BaseNormsFormat
added random body and circle creation in Box2DCharacterControllerTest . java and reset friction for contacts in the game loop to enhance test st
added tests for exceeding memory limits in flight recorder options to ensure correct behavior of memory management in flight recorder options
updated assertions in ObjectAlignment and Options classes to check for power of 2 to ensure correct validation of object alignment requirements
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` and implemented manifest extraction in ` AndroidInstrumentationTest ` to
refactor DocHelper class to improve code readability and maintainability
updated the initialization of acceptableThrowawayItems to use an ArrayList to improve flexibility in setting initialization
updated method calls to eliminate generic type parameters to improve type safety and eliminate compiler warnings
updated thread priority and formatted code for consistency to improve thread management and code readability
refactor the Inflection class to improve code readability and maintainability
added locale getter and setter methods to EvaluationContext class to enable locale management for evaluation contexts
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve maintainability
added a break statement in DrawerActivity . java to terminate the switch case execution early
updated import statements in MongoQueryCreator . java and modified debug logging to include query object details to enhance code clarity and provide more informative
wwloggerfactory can now be configure with a system property ` ` xwork . loggerfactory ' ' .
[ hotfix ] fix admins : fix typo in test method name
updated bean names in availability health indicator configurations to improve clarity and consistency in bean naming
fix concurrentmodificationexception when create localpstore
changed the visibility of the deleteFiles method from public to private to encapsulate functionality within the TestUtility class
refactor ServiceLoaderSpliterator to use ServiceProvider instead of Provider to improve clarity and consistency in service provider management
[ gr - 21478 ] javainterop Reflect . findfield / setfield should throw runtimeexception .
added toolchain creation checks and corresponding tests in various classes to ensure proper handling of Android SDK changes when toolchains are created
[ gr - 3862 ] only remove context from engine if context be add to engine .
refactor failure handling logic in AbstractCheckDescriptor . java to improve readability and maintainability of the code
updated PrebuiltCxxLibraryBuilder to use exported linker flags instead of hardcoded linker flags to improve flexibility in specifying linker flags for shared libraries
fix recent orientation change bug
refactor listener type checks to use wildcard generics in multiple classes to enhance type safety and reduce potential runtime errors
abstractblockchain : get hash from newblock instead of the block itself
get rid of unnecessary getcommitlogcommitlog in defaultmessagestore
fix potential resource leak in micrometermetricmanager
optimise defaultmessagestore . getmetrictracker . getmetrictracker . getmetrictracker . getmetri
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in new development
added methods to check for system UI objects and execute a shell command for keyguard status events to enhance the launcher UI functionality to improve user experience by
changed logger from static final to final and changed principals , sessionIds , and sessionIds to be final to enforce immutability of these maps
added a check for empty cookieJar in InMemoryCookieStore and updated tests accordingly to ensure proper handling of empty cookie jar scenarios
[ bonsai ] fix nullpointerexception when delete old bonsai address ( # 1874 )
changed the parameter type of getText methods from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to
[ java ] ignoring a test that fail in marionette
added a try - catch block to handle potential IOException when returning a connection to ensure proper connection handling
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated references accordingly to clarify the
added synchronization around the heartbeat executor service access to ensure thread safety during concurrent access to the heartbeat executor service
refactor CachingBuildEngine to use asynchronous transformations and introduce a new method for wrapping BuildResult to improve performance and clarity in handling build
added a method to update the first line showing in the TextArea to improve user experience by ensuring the first line remains visible
added Hadoop Path configurations for local and staging environments in TestInformationSchemaWithPrivilege . java to ensure proper directory structure for configuration overlays during execution
refactor graphics configuration retrieval logic to improve readability and maintainability of the code
tika - 2131 -- upgrade cxf version to 4.4 . 0 and add oom test
( chore ) camel - core : optimize pipeline to reduce object allocation
updated the argument handling in PrintTagList to allow for an optional model file and improved tag processing to enhance functionality by allowing users to specify
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` for table name in ` InsertDeParser . java ` and added a new test
make the test more robust to unexpected error .
[ java ] use await for cluster ready .
modified the calculation of the outer rectangle by changing the variable type from int to float to improve precision in rounding calculations
fix crash on empty gallery image list
added DEPLOYMENT _ ID column to the CreateDatabaseChangeLogTableGenerator to enhance data handling for deployment ID in the database schema
pdfbox - 4892 : fix typo , a suggest by valerybokov
removed the ' moreColumnOk ' parameter from the canUseIndex method and related calls to simplify the index usage logic and improve code readability
camel - 14263 : camel - quickfix - make it possible to start multiple engine at once
added support for display zoom controls in RoboWebSettings to enhance user experience by allowing dynamic control over zoom settings
add a corporea block and a slab to the corporea spark . close # 198
refactor ConnectionFactory methods for better performance to improve connection handling efficiency
added a new method ` EnableDisableMenuItems ( ) ` to manage the visibility of disable menu items in ` GpsMainActivity ` to enhance user
renamed ` file _ list _ empty _ headline _ server _ search ` to ` file _ list _ empty _ favorite _ favorite _
fix broken unit test
added auto resizing and column creation settings for the table in MotorMountConfigurationPanel to improve UI responsiveness during table resizing
updated LINE _ SEPARATOR to retrieve the system property for line separator to enhance flexibility by allowing dynamic line separator configuration
added getter and setter methods for creator and subject in POIXMLProperties . java and created a test for document properties in TestPOIXML
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] : do n ' t try to read the cnc file if it do n ' t exist .
replaced the ` NonMarkedFoo ` class with a new ` Command ` interface and renamed the ` MarkedFoo ` class to ` FooCommand ` to
added methods to handle Jmod and Jmod - specific class names in ClassFileSourceImpl . java to improve compatibility with different operating systems and ensure correct
updated nullable annotations and constructor parameters in TreeBackedElement , TreeBackedPackageElement , and TreeBackedPackageElement classes to enhance code safety
replaced direct client ID setting with a new PublicTokenRequest instance in Saml2TokenGranterTest and UserTokenGranterTest to en
replace array length with valueRangeObject in AbstractFromPropertyValueRangeDescriptor to ensure correct reference to valueRangeObject in the list
added synchronization methods in ZKAssign and ZooKeeperWatcher classes to enhance the reliability of Zookeeper operations
fix ( gl ) : check for no current context
[ drools - 725 ] avoid to remove activation if a ruleflowgroup be remove during activation .
added a return statement in HystrixDashboardConfiguration . java to prevent further processing after configuration changes
removed unnecessary exception handling for PipeNotExistException in DropPipeProcedure . java to simplify the code and improve readability
added cleanup method to clientqueueDisruptiontest to clean up resource
refactor : replace signatureprinter with defaultjavaprettyprinter in ctreferenceimpl . tostring ( ) ( fixes # 407 )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
removed unused imports and refactored GeoPointInPolygonQuery class to improve code clarity and maintainability
added a new class FakeBuildable and updated OnDiskBuildInfoTest to use it to implement a mock implementation of AbstractBuildable for testing purposes
fix a crash when try to place mana from an item that do n ' t have an item in it
updated the ` TSParser ` to recognize the " timeseries " rule instead of the ` path ` rule in favor of the " path " one to
added a check to return 0 if the velocity is less than a predefined threshold to optimize performance by avoiding unnecessary calculations
refactor GcsPinotFS to use a new utility method for Blob creation and list operations to improve code readability and maintainability by
removed redundant code block closing the verticle named " transport " to ensure proper resource management and avoid potential memory leaks
# 164 - create a view for history and drop it for postgres
updated the expected value of the clustering engine check from 2 to 3 to ensure the test accurately reflects the expected outcome
disable broken test until fix
updated ` ParserCacheCommand ` to use ` ParserStateObjectInputStream ` instead of ` ObjectInputStream ` and added a new class ` ParserState
updated the objectQuotingStrategy assignment logic in ChangeSet . java and added retrieval in DatabaseChangeLog . java to ensure proper handling of the objectQu
updated MetainfoParser method from parse to fromXmlStream to improve compatibility with XML stream processing
deleted the CsrfControllerAdvice . java file to the functionality provided by CsrfControllerAdvice is no longer needed
updated endorsed argument handling and added a method to quote path lists in AntCompiler . java to ensure proper formatting of paths to enhance the command
added scrim animation functionality in Launcher and updated related classes to utilize it to enhance visual feedback during screen off and improve transition background
updated the condition for parsing a long value in TypeInferenceUtils . java and added new new test cases in TypeInferenceUtilsTest . java to ensure correct
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added validation for UNC and long path prefixes in WindowsPathParser . java and corresponding test cases in PathOps . java to ensure compatibility with
refactor MulticastSocket instantiation to use default local port instead of InetSocketAddress to simplify code and improve readability
removed redundant writer . close ( ) calls in TestWildcard . java to improve code readability and maintainability
return a clone of nBits instead of the original instance to ensure thread safety when accessing nBits
change derivecollectorname from private to protect and add unit test
refactor MappingMongoConverter to use a dedicated method for type hint checking to improve code readability and maintainability by centralizing type hint logic
added performance measurement for proxy factory creation to enhance performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling to include the original exception as a cause to improve error reporting for connection issues
refactor reinflateWidgetsIfNecessary ( ) method to Workspace . java and update related references to improve widget management by centralizing widget inflation
added a new file ` DeleteInsideFileDialogTest . java ` for testing file deletion in a dialog to facilitate testing of file dialog behavior
* lwjgl3 implementation of abstractdisplay . update ( ) do n ' t call display . processmessages ( ) when renderable be set to
add test case for verify html page with picture
added functionality to conditionally ignore tests based on environment variables to enhance test execution by allowing specific criteria based on specific criteria
removed the pointer parameter from the fling method signature to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository to prevent potential NullPointerExceptions during query execution
added a method to compute memory size with a specified fraction in MemoryManager and corresponding unit tests in MemoryManagerTest to ensure correct memory allocation logic and validate
http : / / issues . apache . org / jira / browse / amq - 3546546 - fix test timeout value in jmsp
refactor SnowballAnalyzer class implementation to improve code readability and maintainability
[ iotdb - 6663 ] fix streamingaggbatch to not clear previous batch before next batch
throw a graalerror when a plugin do not provide a receiver
added a new method ` stream ` to ` StreamSupplierComponent ` for processing entities with a specified table identifier to provide a stream - based approach for processing
updated logging messages to reflect fully played files and added a delay for file renaming to improve clarity of log messages and ensure reliable file operations
changed access modifiers of classes and methods from private to public in InjectorProxy , StandardInjectorProxy , and InjectorTest to enhance access
[ hotfix ] [ python ] remove unnecessary closing of output stream in flinkstreamingcreatefunction
added unit tests for various SQL parser scenarios in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure correct parsing and deparsing
change return value from null to an empty list to ensure proper handling of null values
[ hotfix ] [ test ] fix checkstyle violation in namedsettest
updated WebSocket connection logic to handle reconnects and improved connection state management to enhance reliability of WebSocket connections and provide clearer error logging
replaced setting for authentication and target URL with removing them from the session to simplify session management by removing unnecessary attribute assignments
phoenix - 2593 testregionreplicareplicationendpoint should retry table creation until table creation succeed
added PMS configuration initialization in FormatRecognitionTest . java to ensure proper handling of PMS during testing
server : fix vm scale from disk to disk on vm creation fail
updated test class imports and annotations to use JUnit4 instead of Spring ' s SpringBootConfiguration to ensure compatibility with the latest JUnit4
added @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
updated the metric values in the ` metric _ table ` and ` UPSERT ` statements from ` metricVal ` to ` metricVal1
added a check for mismatched document count in SegmentReader to ensure the integrity of document count validation
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
add 1.0 to the film length for staves w / no starting barline
removed the default value for handleFileUploads in VertxPlatformHttpServerConfiguration to allow dynamic configuration of file uploads
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherCaseSensitive ` to ` CsrfFilterTests ` to validate the correct handling of CSR
remove static class . refs to hotspotobjectconstantimpl . callsitetargetfield and use it instead .
updated method names from ` add ` to ` addFrequency ` in multiple classes to improve clarity and consistency in frequency handling within the spelling
added a watermark to the file I / O operations in FileIO . java to enhance data processing by utilizing timestamps for better resource management
[ hotfix ] fix checkstyle violation in sqmctestatement
added import statement for ResultSetMetaData to enable proper handling of ResultSetMetaData in tests
updated the command string format in JsLibrary . java to include the project filesystem root to enhance clarity of command execution options for better debugging
updated the slider model for the RailButtonConfig to use positive degree instead of 180 to improve the accuracy of the angle slider
fix a crash when save a tile .
[ hotfix ] [ kerberos ] make kerberos support expression language by default
remove command to set held item mount point scale for remote character
updated the ` setupViews ` method to include a ` ScrimView ` parameter and modified related animation logic to enhance the scrim effect
[ flink - 16428 ] [ checkpointing ] make periodic materialization configurable
added a private String field ' value ' along with its getter and setter methods in ProtocolParameter , and updated related classes to store and utilize it to
add a test to show how to use the chunked transfer with the httpservlet
engine / schema : fix checkrouter answer to check if the router be in a backup state
added Content - Type header in SwitchToPostInterceptor and SearchRequestUnitTest to ensure proper handling of urlencoded requests
refactor EmbeddedClientConnector to improve code readability and maintainability
added logging for ignored ` setFetchSize ( ) ` method in ` PhoenixResultSet ` to improve debuggability by providing insights into
added initialization of AndroidNet with null parameters to ensure proper network setup before use
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in consumeoperator
removed the boolean parameter ` false ` from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 2593 tablemapreduceutil . addprefixtreecodec ( ) should not throw npe because prefixtreecodec be null
added a mechanism to handle back navigation failure in DesignerActivity to improve user experience by preventing back navigation when inflation fails
refactor PushbackInputStream class implementation to improve code readability and maintainability
make loweringphase a abstract class to allow for subclassing
updated the string resource from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
fix makefiles . makefile to recognize \ r \ n
replaced direct access to deleted documents with MultiFields . getDeletedDocs to improve compatibility with multi - field indexing
refactor setTransformRefresh method to include refreshFlags and setBoundRefresh method to improve refresh handling for batch processing
remove isguaranteedsafepoint ( ) method from share method api
added framebuffer size callback to handle window size updates in LwjglWindow . java to ensure proper handling of framebuffer size changes during window resizing
update ObjectAnimator parameters in LauncherAppTransitionManagerImpl . java for improved transition effects to enhance visual feedback during animations animations
updated the implementation of ` newInstance ` methods in ` LiteralNode ` to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to
added a ` setLength ` method to ` FSDirectory ` and ` IndexOutput ` classes and updated ` CompoundFileWriter ` and ` IndexOutput `
updated Android NDK script generation logic and replaced SpriteBatchShaderTest with Mpg123Test in LwjglDebugStarter to enhance
camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource to avoid clash
added support for wildcard role in RuleBasedAuthorizationPlugin and updated related test cases to enhance authorization checks by allowing wildcard roles in authorization rules
updated ZookeeperClientServerRegisterRepository to handle null data and enhance URI registration logic based on type to improve robustness of the registration process
refactor deep stub methods for clarity and consistency to improve code readability and maintainability
added a check for an empty call value before converting it to a byte to ensure safe handling of empty calls to prevent potential errors
fix classcastexception in bibentry . java ( # 1086 )
added exception handling for NoSuchAlgorithmException in PKCS12KeyStore and PBETest to improve robustness by ensuring compatibility with different encryption algorithms
tmi - tiff : fix for tiff with malformed tiff structure .
added validation for job parameters in CommandLineJobRunner to ensure correct error handling for invalid job parameters
updated the expected string in tests from " foo \ r \ n " to " foo " in SmtpTests . java and MailTests . java to
refactor case statements in ExtendedConnectionDataSourceProxy to use simplified syntax to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for lastSequenceId to improve thread safety and atomicity in sequence management
added a new file ` Test . java ` containing a class ` Test ` with a method to compute the sum of two integers to provide a utility for
updated minSdk version to R in ShadowWifiManagerTest . java and changed private fields to protected in WifiUsabilityStatsEntryBuilder .
added a new file ` Solution . java ` that implements a solution that counts the number of results returned by ` Quick Quick Search ` based on user -
fix concurrentmodificationexception when load old sstables
refactor taskbar recreating logic to use a boolean flag for orientation changes to improve clarity and maintainability of the code
refactor SyncFutureCache to improve code readability and maintainability
update DUBBO _ PROTOCOL _ VERSION from 2.0 . 1 to 2.0 . 2 and modify LOWEST _ VERSION _ FOR _ RE
[ java ] uselessstringvalueof - improve performance
added a new test method ` testEllipseNoseconeDrag ` in ` SymmetricComponentCalcTest . java ` to validate the drag behavior of
add max type shard size configuration to hollowproducer to specify the maximum shard size .
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBackwardsCompatibility .
[ hotfix ] fix checkstyle violation in compilationtask
updated database parameter handling and added a new location check in TestSemanticAnalysis . java and DDLTask . java to improve test accuracy and ensure
added a call to execute a ClearDatabaseChangeLogTableStatement for clearing the database change log to ensure that changes are applied to the correct Liquibase
updated RestClient and CallPath to handle versioning and improved path handling to ensure accurate versioning of calls and enhance robustness against
updated error messages and added closed state check in PhoenixDriver . java to improve error clarity and ensure proper resource management during driver closure
simonstewart : add some javadocs and fix switch / cases indentation
added a cleanup method in ` ConflictsResolveActivityIT ` and extended ` FolderPickerActivityIT ` to delete unused files after tests to improve test
[ gr - 31494 ] do not run conversion deoptimizations in dev mode .
( chore ) camel - string : remove lead and end quote from string
updated JpaQueryCreator and ParameterMetadataProvider to improve type handling and error messaging for unsupported keywords to enhance code clarity and maintainability by
make sure we do n ' t push the branch id if we have too long to authenticate
added dispatch call to process P25 messages to enhance message processing by dispatching new P25 messages
added null checks for the handler before calling checkClosed ( ) in WebSocketImpl . java to avoid potential NullPointerExceptions when the WebSocket socket is closed
[ ds - 2058 ] fix discoveryit and add test
updated widget padding calculations to use dynamic padding values from the Launcher class to improve flexibility and maintainability of widget padding dimensions
added hide methods to TaskbarUIController and modified closeOverlay method in BaseActivityInterface to enhance visibility control for the taskbar UI components
removed a synchronized modifier from the launch ( ) method and replaced it with a direct join ( ) call to simplify thread management and improve code readability
fixed mouse movement regression in simulator .
refactor notification handling to use startForeground method to improve code readability and maintainability by reducing duplication
fixed bug in excessivepubliccount ; partial fix
set the number of retries to 3 in the HBase client configuration to limit the number of retries for successful operations
change log level from info to debug for committed / rolled back message to reduce log verbosity and improve performance
[ hotfix ] [ core ] fix log level for file not find in resourceutils
added a new class BittrexTickersResponse and integrated it into existing classes to provide a RESTful API endpoint for retrieving market summaries
refactor EntityEntry class to improve type safety and encapsulation of enum constants to enhance code clarity and maintainability by ensuring enumConstants is properly
use object type instead of endpoint class for ws session registration
updated character list in FileUtils . java to include additional characters to ensure compatibility with XML standards for character encoding
added stylesheet management methods to ResourceService and updated content handling in ResourceHandler to improve stylesheet handling and ensure correct content type is returned for stylesheets
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
replaced the method call from " getAddress " to " address " in X86MethodGenerator . java to align method signature with updated API conventions
update the condition in CreateSequenceGenerator to exclude CockroachDatabase to ensure compatibility with different database types
simplified the condition for checking the class name to enhance code readability and maintainability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` mmm Library . java ` and added a new class ` SymbolNotFoundError .
added conditional logic to handle pseudo fields in BinaryResponseWriter . java to improve document retrieval based on field selection criteria
added WebSocket ping and pong handling in WebSocketImplBase . java and implemented a test for it in WebSocketTest . java to enhance WebSocket functionality and
added a hyphen to the NON _ IDENT _ ESCAPES string in the RegExpScanner class to correctly handle identifiers in the regex pattern
improve dns resolver performance by use dnscache
added a conditional on MessagingTracing class to ensure messaging functionality is only activated when MessagingTracing class is present
removed conditional check for DB2 dialect and simplified return statements in SqlQuery . java to streamline SQL query handling and improve code readability
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , IDEEditor , and CodeEditor classes to stream
added handling for the ' / ' character in XMLLightweightParser to ensure proper status verification for close tags
removed the setVisibility ( GONE ) method call to streamline the code by eliminating unnecessary complexity
added a null check for the current user before comparing IDs to prevent potential NullPointerException
refactor JSObjectLinker to handle index selection based on the presence of a key to improve flexibility in setting the JSObject member based on the presence of a
initialize ` randomStringGenerator ` to a new instance and modify ` suffix ` handling in ` DefaultUniqueTicketIdGenerator ` to improve flexibility
mark SecurityConfig as deprecated to indicate that this class should no longer be used
added @ Deprecated ( forRemoval = true , since = " TODO " ) annotations across multiple Java files to indicate that certain classes and methods are
deleted the JoglDebugAdaptor class and updated RocketFigure3d . java to remove its dependency to streamline the codebase and
added toString ( ) methods to ExtraFieldPropagation class and corresponding test cases in AWSPropagation class to enhance string representation of ExtraFieldPropagation instances
added PendingIntent flags in FileDownloader and FileUploader classes to ensure notifications are properly updated during file operations
refactor nextOrd method to encapsulate its functionality to improve code readability and maintainability by reducing duplication
refactor DateTimeFormatter for improved readability to enhance maintainability and ease of future updates
removed unnecessary try - catch block when setting desktop properties to simplify code and improve readability
added null and empty checks for administrator credentials in KerberosOperationHandler to ensure valid credentials are provided to avoid authentication issues
added a maximum width scaling for the longest screen in BaseWidgetSheet to ensure proper scaling for tablet and multi - panel devices
set the sketch window color before paint it to the sketch window ( fixes # 353 )
refactor hashing functionality to improve performance and maintainability of hashing algorithm
modified the ` accept ` method to compare file names regardless of their content type to improve file validation by ensuring only zip file types are accepted
updated addToListIfNeeded method to include a content description parameter to enhance user information display by allowing dynamic content descriptions
remove redundant null check for newType in JavaType . java to improve code efficiency and readability
updated ACTIVITY _ START _ DELAY from 500 to 800 to improve animation responsiveness
added a constant for the web app home path and updated the test environment property to use this constant to improve maintainability and consistency in testing environment configuration
set selectedMotorSet to null and clear the selection method in ThrustCurveMotorSelectionPanel . java to optimize memory usage and improve code clarity
added import for BufferUtil and called clearToFill method to clear the buffer to ensure the buffer is properly filled before use
add test for alarm trigger creation via rest api
( chore ) camel - ldap : align property name with camel - core
fix for http : / / issues . apache . org / activemq / browse / amq - 2473 - durable - on -
[ hotfix ] [ test ] remove timeout from slot allocation test
refactor connection handling in ServerInfoService to improve error handling for server connection failures
renamed CompositeHandlerAdapter . java to improve clarity and consistency in naming conventions
updated Quartz2Adapter . java file to improve quartz scheduling functionality
svm : handle illegalstateexception in sulonglibrary . isaccessible
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and configurations
refactor ` newNameResolver ` method to accept ` Args ` instead of ` Helper ` and introduce synchronization context in ` DiscoveryClientNameResolver `
added checks for non - empty annotations and introduced a new method to determine earlier positions in JavacParser . java , and created a test class for de
added package import for internal naming functionality to enhance access control checks for internal packages
changed the strict variable from false to true to enable strict processing in the StaxEventItemReader class
modified the OfflineSorter to incorporate an array for exhaustive read partitions and updated the readPartition method to handle it to improve
refactor ActionResetingPool class to improve code readability and maintainability
fixed npe in lightstateconverter due to miss pixel location .
refactor folder creation logic to use a target cell array for improved visual distinction to enhance code clarity and maintainability by
replaced calls to ` showLoadingDialog ( ) ` in ` FileDetailFragment ` and ` OCFileListFragment ` with direct calls in ` FileDisplayActivity
added a null check for uigestureFile before loading log data to avoid potential NullPointerExceptions when uigestureFile is not present
updated field name comparisons to use the system ' s default locale to ensure case - insensitive comparison for consistent locale handling
added listeners to the result object to enhance listener management during XML processing
added a new method ` loadWithNewGlobal ` and reorganized existing methods in ` Global ` and ` Context ` classes to enhance
added JSON parsing methods to StarTreeIndexSpec and updated tests in TableConfigTest to validate these new methods to ensure proper handling of JSON strings and validate
added ObjectPostProcessorConfiguration import in HeadersConfigurer . java to enhance security configuration for object post - processing
replace double quotes with single quotes in file path manipulations to ensure consistency in string handling across file system implementations
[ drools - 6663 ] fixing npe in in operator ( # 6663 )
added import for FieldCache and implemented force deletion of FieldCache to avoid FC insanity issues
act - 1342 add test case for boundary message event on a subprocess
fix bug in jimpleprogrammanager . resolveinterfaceorvirtualcall ( ) and add static analysis support
fix for http : / / issues . apache . org / activemq / browse / amq - 2473 - add a default value for
replace fips slot check with constant
added alignment parameter to the addWidget method and updated the startRenderering method to return a boolean indicating success to improve flexibility in widget addition functionality
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
added checks for specific MIDI and Sampling classes in JDK13Services . java to ensure proper handling of specific MIDI and Sampling classes to prevent processing
added a check to prevent duplicate keyword entries in the keywordToReference map to ensure that the same keyword is not added multiple times to avoid potential conflicts
camel - 14263 : fixed memory leak in multicast eip .
[ java ] remove unused code from SegToken and WordDictionary
correctly escape telegraf metric name ( # 644 )
added udpport to memberimpl to allow broadcast datagrams
rename operatormulticast to operationmulticast to avoid confusion
increased send timeout from 1 to 100 milliseconds in EventBusTracerTestBase to improve test stability by allowing more time for asynchronous message sending
added a try - finally block around the execution flow in VertxTestBase . java to ensure latch is released correctly to enhance resource management and prevent potential
[ amq - 6121 ] reset cached event listener registry on destroy to prevent memory leak
simonstewart : make the test pass on the ci server
[ pytorch ] add test for pytorch map of tensor ( # 3647 )
added a TaskStackChangeListener to manage the visibility of the INVISIBLE _ BY _ STATE _ HANDLER in RecentsView during pinned stack animations to
fix ( splitcharacter ) : if the option ` ` checkdatepattern ' ' be set to ` ` false ' ' , the splitcharacter
camel - 16400 : ensure factory bean have property to avoid npe
refactor pending animation handling into a separate method to improve code readability and maintainability
add log to debug playtime crash
added a conditional check for BailoutOnException before returning an exception in C1XCompilation . java and defined a new constant BailoutOnException in
updated signup and passwd variables to null in Links . java and changed their default values to null in IdentityZoneConfigurationBootstrapTests . java to improve
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations
changed the variable name from ' onlyFormat ' to ' format ' and added a getter method for it to improve clarity and encapsulation of date formatting
[ geot - 5904 ] geot - 5904 ] make the geo TiffReader respect the no - data property
fix npe in llvmwritenode when source section be null
replace ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ` in ` JdbcExecutionContextDao . java ` and
replaced blockingUntilConnected ( ) with a connection state listener to manage client connection states to ensure proper handling of connection states during tests
added null check for result set array retrieval in ArrayTypeHandler to enhance robustness by preventing potential null pointer exceptions
[ jakarta ] remove regexpTunnel since it have no accessors
updated the application pick method to use Application . class instead of null to ensure proper type handling for application selection
[ drools - 6674 ] avoid npe on mutable global ( # 2382 )
replaced Preconditions with TransactionUtil for asset name and URL validation in AssetIssueActuator . java and added validation checks in TransactionUtil . java to
copypaste : check for parent of textfield , not textfield
updated descriptions in LGWebOSActions . java and modified status messages in LGWebOSUpnpDiscoveryParticipant . java and LG
replaced setter methods for seed , active , and trust nodes with bulk addition methods to streamline node configuration to improve code readability and maintainability
improve assertequals ( ) output to include token attribute
modified the ` getNextTime ` method to include a ` modulus ` parameter for controlling calendar increments to enhance control over the increment logic in
added methods to find and click items containing text in ShadowAdapterView and removed it from ShadowListView to streamline item click handling and improve code
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
dump the graph after pe extension decode
updated session attribute handling in HttpSessionDestroyedEvent and added unit tests for it to improve code clarity and ensure correct retrieval of security contexts from
added a test method to change the service name in Zipkin using a manually provided one to ensure that the tracer correctly updates the service name for
added logging for excluded classes from the JAR in JavaInMemoryFileManager and JavacToJarStepFactory to enhance visibility into the processing steps
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to clarify the purpose of the generator
fix test which randomly fail on slow ci server
updated ConfluentSchemaRegistryDeserializerProvider to include a default cache capacity of 1000 to enhance performance by reducing the overhead of re - instantiating
replaced ` remind ` with ` checkAtStartup ` in the ` UpdateInfoDialog ` to replace ` remind ` with ` checkAtStartup `
added new strength - related methods and updated method signatures in NodeGenerator . java and TypeSpec . java to enhance node generation capabilities and improve
hhh - 14399 fix transient cascading of @ embedded and @ native cascading
added methods to retrieve and set prototype properties in ScriptObject to enhance functionality for script object prototype checking
change default read mode from heap to mmap to improve performance and provide better insights into segment loading success
added import for ByteArrayTemplate and handled byte class type in ArrayTemplateBuilder to support byte array functionality in the application
added Hipchat integration and created a new configuration class for it to enable Hipchat integration for SAML service provider integration
replaced List with Set for commandRegistryUrls and modified resource enumeration logic to include " tools . command . properties " to enhance resource loading efficiency to improve
updated warning message to include the current context and added debug logging to enhance visibility of uncovered HTTP methods for better debugging
fixed sftp login to work with sftp server that do n ' t support ssh .
camel - 16400 : fix for http : / / issues . apache . org / jira / browse / camel - 16400 -
vmware : fix checkstyle violation in vmwareresource
refactor Timers class to improve code readability and maintainability
updated output stream handling from OVERWRITE _ EXISTING to APPEND _ TO _ ZIP to improve clarity and functionality of output stream management
removed deprecated constants and constructors from UAX29URLEmailTokenizer to clean up code and improve maintainability
removed generic type parameters from ScriptObject and ContextTest classes to simplify class structure and improve code clarity
refactor EventBusMetrics for improved clarity to enhance code maintainability and readability
( scott phillips ) fix bug report by findbugs
updated JaversTransactionalDecorator to implement InitializingBean instead of Javers and modified the ensureSchema method to override the afterPropertiesSet method to
removed null check for pgTypeName before adding to the _ pgNameToSQLType map to simplify the code by eliminating unnecessary null checks
added multiple server settings for handler instances in ScopedHandlerTest to ensure consistent server configuration across the handler instances
add calltimeoutexception to calltimeoutexception thrown when call fail during wait - notify phase .
updated the condition to check if the username and password are empty instead of blank to ensure that the username and password are valid before proceeding
updated permission check from ` Objects . equals ` to ` equals ` to ensure permission checks are performed on non - empty strings
rename ` ` encoding ' ' to ` ` sourcecharset ' ' for clarity
changed the type of postLogin from byte [ ] to String in HostBean and related classes to improve data handling by using string representation instead of byte array
refactor simulation management by making parameters final and simplifying simulation modifications to enhance code clarity and reduce redundancy in simulation handling
camel - 14284 : add support for context reload from classpath .
updated logging configuration parameters in CommonTestUtils . java to improve logging configuration flexibility and clarity
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code readability and maintainability
added a check for non - mark support before invoking reset in RequestBody and created a test for non - mark input stream in RequestBodyTest to ensure
added a check for ` EmbeddedSettings . isEnabled ( ) ` before checking TCP port availability in ` EmbeddedNeo4jServer . java ` and modified
make character movement and health component use asset .
updated the random method to use a half - length total weight for weighted weights in RandomLoadBalancer to optimize random weight generation by introducing a more optimal
refactor GsonParser and MetricsResourceTest to streamline cache string setting and improve validation messages to enhance code readability and maintainability
added comments for clarity on sorting parameters to improve code readability and maintainability
replace ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in multiple classes to standardize transaction synchronization status checks
replaced ReentrantLock with PipeTaskCoordinatorLock in PipeTaskCoordinator . java and added a new class PipeTaskCoordinatorLock . java to improve
added conditional logic to handle pre - instrumented JAR versions based on system property to enhance flexibility in managing Android SDK dependencies
changed the conditional from " if ( isSilent ) " to " if ( isSilent ) " in ExecDriver . java to correct a logical statement to
added checks for default values and required attributes in IndexSchema . java to improve error handling for unsupported dynamic fields
do n ' t randomly repair the repair response if digest do n ' t match .
replaced ` ImmutableSortedSet ` with ` Iterables ` for adding system include roots in ` PrebuiltCxxLibrary ` to enhance code readability and
modified the ` AdaptableX509CertSelector ` to initialize ` startDate ` and ` endDate ` variables without default values and added new boolean flags for sensitivity
replace manual buffer size parsing with AbstractAppender ' s parse method to simplify code and improve readability
deprecate the guiscreenevent since 1.16 .
added methods to add and remove categories in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality for better user experience
# 1643 - enh : add servercachetype parameter to servercache . iscaching ( ) ...
updated massOverriddenBy and CDOverriddenBy assignments in RocketComponent . java to correctly reflect component properties related to mass and control overrides
modified JavaCompilerService and related classes to change method names from doCompile to post and added error handling in JavaDiagnosticProvider to improve clarity
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` for task completion instead of an anonymous inner class to improve
add synchronization to the wan eviction policy
added null checks for partition and table components to enhance robustness by preventing potential NullPointerExceptions
None
added a new test file ` FilesTest . java ` and implemented the ` delete ` method in ` Files . java ` to verify file deletion
removed unnecessary exception handling when closing ServerSocketAdaptor and SocketAdaptor to simplify code and improve readability
updated class name check in SSLLogger to ensure compatibility with Logger class instead of System
refactor working directory handling to use addWorkingDir method to improve code readability and maintainability
added null check for the ` cn ` variable in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the access modifier of the String variable from public to private to restrict access to the String variable to enhance encapsulation
removed hard - coded URL from command line arguments in SimplePostTool . java to streamline command line arguments for better compatibility
apps - 407 add min / max toggle support
added ShutdownThread registration and deregistration in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper handling of client container lifecycle to improve
updated conditional check to use logical OR instead of logical AND for type validation to ensure correct behavior when checking for application type
tidy up test resource
added a search string method and modified resource retrieval logic in RemoteBrowseHandler . java to enhance search functionality by allowing users to enter search string
hide the neutral button in SetupEncryptionDialogFragment to improve user interface clarity by removing unnecessary visibility updates
[ ds - 2058 ] use itemdao . countitems ( ) instead of itemserviceimpl . countnotarchiveditemscount (
updated SQL table and partition creation statements to use double quotes for column and partition names to ensure compatibility with SQL standards and improve readability
added exception handling for OAuth2 exceptions in CheckTokenEndpoint to improve error management and logging for better debugging
updated multiple Java files related to chart rendering to enhance functionality and improve code clarity
updated identity zone handling and improved test assertions in tests to enhance test clarity and ensure correct behavior of identity zone creation
updated tooltip delay values in ExtractionModelFrame , DataBrowser , and SQLConsole classes , and added user - friendly tooltips in SQLConsole
added support for Surefire version 2.2 and JUnit 5 in the ActionProviderImpl class to ensure compatibility with different JUnit versions
changed exception handling from HumanReadableException to RuntimeException for IOException to improve error handling by providing a more specific exception type
[ hotfix ] [ core ] [ table - common ] make flink annotation api non - public
pdfbox - 4892 : fix typo find by codespell on fossies . org
updated index calculation to ensure it does not exceed the last index to prevent index errors
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct type validation for expression functionalities
added confirmation and requiredType options to the DebugPaste class to enhance command functionality for debugging purposes
improve error message when no endpoint be find
ggb : fix focus issue in mathquill
updated GoBinaryDescription and GoBinaryBuilder to use new argument classes and methods to enhance code clarity and maintainability by aligning with
refactor environment variable retrieval logic in Jooby . java to improve code readability and handle potential null values more gracefully
updated ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and created a new ` SecondDummyRetryListener
fix decimal in elastic meter registry ( # 498 )
updated Contribution class to initialize both email and commits as final variables to enhance immutability and clarify constructor parameters
replaced a loop with a do - while loop to append a period to the string to improve readability by removing unnecessary padding
refactor the way elements are retrieved by using a temporary LinkedList instance to ensure type safety and prevent ClassCastException when accessing elements
enhanced exception messages in StaxEventItemReader to include resource URL to improve clarity of error reporting for better debugging
- add simpleupdate ( tpf tpf ) to testmultirendertarget to make the generated surface more stable
added a null check for the current profile before attempting to find a client to avoid potential NullPointerExceptions when the client is not found
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added to the correct element
added cryptographic parameters for cryptographic operations in KeyStoreManager to enhance security by enforcing cryptographic requirements during key management
bugfix : meshcollisionshape use mesh . getindicesaslist instead of mesh . getIndexBuffer ( )
set correct engine version for process definition in deployment
updated property names in SpecificCompiler for consistency to improve clarity and maintainability of property settings
fix isolate thread verification for attach thread .
updated GenericUDFMapValues to handle null map cases and added a new TestGenericUDFMapValues class for testing to enhance null safety and
fix typo in test name
add config option to disable oil generation
added a cleaner check for file existence in ImportContext and updated JobQueue to use it to ensure the directory ' s clean - me file is correctly
fix log message when memoryrealm . readxml throw exception
updated import statements in CRLDistributionPointRevocationCheckerTests . java to streamline dependencies to improve code clarity and maintainability
added constants for ZIP file extensions in ZipConstants64 . java and updated import statements in ZipEntry . java to enhance compatibility with ZipConstants64 for
refactor ZipFileSystemProvider to encapsulate file checking and error handling in a separate method to improve code readability and maintainability by reducing
improve vertical alignment of if controller condition label
updated the connection initialization in FailoverUpdateUrisTest . java to ensure consistent instantiation of the database connection
added Gson annotations for serialization in ServiceOsSpecific . java to enable proper JSON serialization for various fields in the ServiceOsSpecific class
fix : delete empty database entry on cancel
refactor multiple Java files to improve code organization and maintainability
fix regression in last commit
improve lifecycle management of the admin console plugin .
removed the unregisterHandlers ( ) method and updated initialization of binaryConsumer , textConsumer , and closeHandler in WebSocketImplBase . java to streamline the
added configuration properties for device ID transformation method , ID table configuration , and ID table log file in IoTDBDescriptor . java to enhance flexibility
updated the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and added a new class DelayingSearchComponent to enhance test
updated the condition for determining if the access error is null to ensure the method correctly handles cases where the access error is null
transaction : remove unnecessary serialization of script
added " / schema / types / fieldType " to the expression string in IndexSchema . java to allow for additional field types in the schema
updated the completer check in ` mmm Completers . java ` and added a new test class ` OptionCompleterTest . java ` to
fix checkstyle issue in util / s3utils . java
change data type of sourcePeerId from String to int across multiple classes to improve performance by avoiding unnecessary string conversions
refactor file upload logic to handle zip files more robustly to improve error handling and streamline file upload process
removed unused imports and added alpha transparency for the reply button to streamline code and improve UI consistency
updated the expected timestamp format in AccessLogSupportTest . java to include the correct timestamp to ensure accurate testing of access log functionality
move marycachetest to tmp directory
simplified the subscriber collection check by removing unnecessary null checks and conditional size validation
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unnecessary initialization in AbstractSaml10ResponseView . java to improve error
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error logging by using a more structured warning message
added checks for file existence in development mode and improved asset serving logic in AssetsController to ensure correct handling of static files in development mode
[ hotfix ] [ runtime ] fix rocksdb backend write option to rocksdb backend
change the default label format from " value - tag - index " to " value - index " to accurately reflect the purpose of the label
fix dijkstrabi instruction not work on android
feat ( native ) : enable secp256k1 and secp256k1 by default
rename ducsSandboxtest to sandboxtest to avoid confusion
camel - 1067 : camel - core - do not log exception when fail to process incoming message
make forwardpropagatetree public so that it can be use by other language .
( chore ) camel - jdbc : fix the test error of camel - jdbc
add a warning for miss file location in profile activation
refactor Style class to improve code readability and maintainability
added zoom handling in ShareActivity by introducing onKeyDown method to handle back key events to improve user interaction by allowing zooming out of the view
added a conditional check for deprecated annotations in Json . java to prevent processing of deprecated fields during JSON processing
added animations for showing and hiding the send layout in LauncherFragment to enhance user experience by providing visual feedback during floating - compose transitions
[ hotfix ] fix checkstyle violation in utils
added ` Progressable ` parameter to several ` createSequenceWriter ` and ` createWriter ` methods across multiple classes to enable tracking of progress during
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove a contribution from the panel and update related components accordingly to ensure the contribution is removed from the panel and updates the panel colors accordingly
renamed HyervisorTemplateAdapter class to HypervisorTemplateAdapter and updated its logging name to improve clarity and consistency in naming conventions
added a default value for dPath if it is empty to ensure the application uses the user ' s home directory as a fallback
fix e - ac3 joc channel count when sample rate be not specify .
log4j2 - 1343 add a filter to the mapfilter so it do n ' t try to match on mismatch
rename VerificationInOrderWithCallsTest . java to improve clarity and consistency in test naming
changed the parameter from ' z ' to ' x ' in the setFromAxis method to use ' x ' instead of ' z ' for positioning
corrected the casing of the COLLECTION _ DELIM constant to ensure consistency with naming conventions
add a test to verify that the listener be connect at the start .
fix # 35355 - correct documentation for union and intersect type
refactor one - handed mode support checks in RecentsAnimationDeviceState . java to improve code readability and maintainability by consolidating
added cancellation of running tasks in the onDetachedFromWindow method to ensure that running tasks are properly stopped when detached
added support for a dictionary resource in the MorfofologikAnalyzer and MorfologikFilter classes to enhance flexibility
replace count variable with thrown variable to simplify exception handling logic
updated the initialization message to use an empty string instead of a debug string to improve clarity of the message displayed to the user
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and introduced ` AtomicBoolean ` for ` preventedByMVCC ` to
refactor tooltip text handling in ComponentTreeRenderer . java to improve clarity and maintainability of tooltip text application logic
increased the timeout duration for the zipkin server from 5 seconds to 10 seconds to allow more time for the server to start up before running tests
deviantart ripper now accept both username and password
refactor isGoogleSignedPackages method to use constants for package signature keys to improve code readability and maintainability by reducing magic numbers
updated method call from ` solutionBusiness ` to ` createSolutionBusiness ( ) ` to ensure proper instantiation of the solution business class
added a method to notify window state changes in WWindowPeer . java to enhance event handling for window state changes
added email description to templateData in EntityGroupKeyContentFormatter . java and tested description detection in TestEntityGroupKeyEmailContentFormatter . java to ensure
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` to ensure the correct data retrieval method is used
updated the ` getISO3Language ( ) ` method to handle cases with a length of 3 and improved error messaging to ensure correct language retrieval
refactor ChangeLogParser usage to improve code readability and encapsulate update visitor creation logic
added a check to return early if screen pinning is active to optimize performance by avoiding unnecessary computations when pinning is active
added functionality to display no - chart data as an optional text in the canvas to enhance user experience by providing context - sensitive information
refactor Http1xServerResponse and Http2ServerResponseImpl to use synchronized head checks for better thread safety to ensure thread safety when accessing shared resources
improve handling of http / 2 response with chunked writes
updated HTTP headers to include " : scheme " and adjusted test cases for header limits to ensure correct handling of HTTP headers and improve test coverage for
fixed - rmap . set ( string , int ) and rlocalcachedmap . entryset ( string , int ) method do n ' t return
camel - jpa should use source code generate configurer to avoid reflection .
corrected variable name from ` fallSpeed ` to ` jumpSpeed ` in ` PhysicsCharacter . java ` to ensure consistency with naming conventions
added a condition to check if reparsedFunction is null in the parser to ensure proper handling of syntax extensions when reparsing
renamed the logger from ` log ` to ` logger ` and updated variable names for consistency to enhance code readability and maintainability by
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient to encourage using a unified segment management approach
modified the retrieval of the database object to include a filter parameter to enhance data retrieval accuracy by applying a specific filter
( chore ) camel - juel : add method to assert language predicate fails
added alpha adjustment to the RecentsView to ensure the alpha value stays within the valid range for rendering
update string concatenation syntax in ManifestReversion . java to ensure correct version string formatting to improve code readability and maintain consistency
updated DataSyncConfiguration class to improve synchronization configuration handling
added import for JavaSnippetRepository and invoked it in JavaLanguageServer . java to initialize the Java snippet repository for better functionality
refactor conditional logic to use a loop for updating totals to improve code readability and maintainability
danielwagnerhall : use chromedriver . storage . googleapis . com instead of chromedriver . downloads / list
camel - 14263 : camel - pgjdbc - should use prepared statement when send to avoid connection leak .
replaced imports from ` sun . sun . synd ` with ` com . rometools . rome . feed ` in ` FeedParser . java
add miss ` ` content - length ' ' header to the transfer adapter
refactor Dialog class to improve code readability and maintainability
removed the constructor from EnhancedRuntimeException to simplify the exception handling code by eliminating unnecessary complexity
( chore ) camel - udp : fix flaky test in socketappendertest
remove deprecate eventadminendpointbuilderfactory .
updated method signatures and exception handling in ByteArray . java to improve method signature clarity and handle potential exceptions more effectively
added a method to disable input proxy and log warnings for invalid touch events in RecentsAnimationWrapper . java to improve touch event handling and ensure proper
camel - 6770 : camel - restlet should use source code generate configurer to avoid reflection configuration .
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify the method signature and improve readability
move com . hazelcast . test . modulepath into com . hazelcast . test . modulepath
added a method to retrieve source directories in JavaServerConfiguration and improved formatting to enhance clarity in configuration and logging for better traceability
removed the visibility of the web menu option to streamline user experience by eliminating unnecessary menu items
renamed test methods for clarity to improve readability and consistency in naming conventions
fix potential index out of bound exception in world edit player .
added PathNotExistException handling to the selfCheckDataTypes method to improve error handling for missing data types during partial inserts
removed extraneous quotation marks to improve code readability and maintainability
[ hotfix ] move mailboxexecutor into abstractstreamoperatorfactory for reuse
hbase - 26904 regionserver should return http code 401 when call settablestateinmeta ( addendum )
refactor meter ID retrieval to use method reference to improve code readability and maintainability
use getjavaclass ( ) instead of gettestclass ( )
[ drools - 5663 ] use lasttimedata instead of remoteitems when delete a kjar
adjusted the calculation of allAppsCellWidthPx by modifying its value to ensure proper spacing between cells to improve layout consistency
[ hotfix ] [ core ] add parent - first logging pattern to coreoptions
replace direct calls to ` doc ( ) ` with the instance method ` this . doc ( ) ` in ` BooleanScorer2 . java ` to
added a forceMerge call in TestMultiPhraseEnum . java to optimize data merging operations
make session . close ( ) return void instead of connection
pdfbox - 4892 : fix typo find by codespell on fossies . org
[ hotfix ] remove system . out . println from schemavalidatortask
changed the catch block to ignore the IOException instead of throwing it directly to improve error handling by avoiding unnecessary exceptions
changed the superclass of GeneratePubkeyActivity from Activity to AppCompatActivity to ensure compatibility with the latest support library version
ruby flavor : use string . append instead of string . substring
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
remove the useCaches property to simplify the code and remove unnecessary getter / setter .
refactor CasGeoLocationConfiguration to use properties directly instead of MaxmindProperties for database reading to improve code clarity and reduce dependency on external properties
update instructore feedback result page ui test to match new behaviour
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance functionality by allowing optimization for encoded column lists
changed method visibility from public to package - private in ApprovalStore , ApprovalControllerService , and ApprovalController to en
added a boolean flag to track download status and a notification message to notify the user when the download has started to ensure that notifications are sent when the download
updated the method used to check if a floating view is open from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayer
updated project version from 1.0 . 11 to 1.0 . 13 and corrected copyright year from 2008 to 2009 to ensure compatibility with the latest features
replaced direct calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve code readability and
refactor GsonBuilder to improve readability and maintainability of the code
added null checks for centerGeo and fixedPoints to prevent potential NullPointerExceptions during point additions
remove -- java . espressohome option and use graalvm . home . homefinder .
doc : fix typo in ctcodeelement , ctif , and ctvariablewrite
make deletesessionaction final and remove unused field
corrected the exception class name from InvalidDocumentStoreApiUageException to InvalidDocumentStoreApiUsageException to ensure consistency and accuracy in naming conventions
initialized ` sz ` to 0 and modified result initialization in ` JoinQParserPlugin . java ` , added conditional logic in ` SolrIndexSearcher . java
updated triggerMediaScan method to include file parameter to enhance functionality by providing additional context about the file being scanned
removed conditional printing of test result tests to simplify test result generation by directly passing test result results
added functionality to set custom G - code settings using text fields from the user settings object to enhance user experience by allowing dynamic G - code configuration
pdfbox - 4892 : use bufferedwriter instead of printwriter , a suggest by valerybokov
refactor JsonElement class implementation to improve code readability and maintainability
added JUnit test imports and reset exceptionIgnores in TestBadConfig . java to ensure proper handling of specific exceptions during testing
added a method to remove fragments and the action bar in GpsMainActivity to improve fragment management and accessibility of the action bar
updated the list of spanish token tokens to include parentheses in addition to the existing tokens to improve token parsing accuracy and clarity
updated range parsing methods to handle ` Range . Byte ` and ` Range . Byte ` instead of ` Range . Byte ` to ensure compatibility with
updated the gcode file path and improved output messages in VisualizerCanvas . java , and modified the translation in VisualizerViewParse . java
updated TestBackwardsCompatibility . java to include additional versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs
updated formatting in assertions in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and consistency
added a condition to handle cases when no output stage is specified and the query execution is done to ensure proper resource management and avoid potential memory leaks
fix broken integration check due to miss file directory
added import statement for SolrClient and initialized shardToClient to facilitate the retrieval of Solr clients for improved functionality
add null check to prevent npe
reformatted the code for consistency to enhance readability and maintainability of the code
changed the constructor visibility of ExtensionTypeHeader from package - private to public to allow access to the constructor from other classes
pdfbox - 4892 : remove catch ioexception , a suggest by valerybokov
updated the pushOnShutdown property from false to true and modified related getter and setter methods in PrometheusProperties . java to align shutdown behavior with the new
refactor ReactiveStateMachineExecutor to include a trigger callback for error handling and improve error logging to enhance error management and provide clearer diagnostics
added a test to verify that multiple Python executables are used on the first path in the BuckConfig class to ensure that the Python interpreter returns the
added a default button to the root pane to enhance user experience by allowing the sign - in action
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN _ REDUCTION _ FOR _
fix error log in register endpoint
remove the unused reflection package
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created unit tests for its functionality to
removed the ` center ` declaration from multiple classes to simplify the code by eliminating unnecessary variable initialization
simplified conditional check for pcollection equality to enhance code readability and maintainability
refactor SslContextFactory methods for improved clarity to enhance maintainability and readability of the code
[ hotfix ] remove unused configuration property default _ max _ expectations
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific error message for access confirmation errors
[ 3.0 ] fix classloader issue when use servicemodel # getcontextclassloader
added a new method ` shiftRows ` and modified the existing ` shiftRows ` method to include an additional parameter ` copyRowHeight ` to control row height
updated method calls from ` setRolloverIcon ` to ` setRolloverPressedIcon ` in ` FontImage . java ` to ensure correct icon rendering
refactor grid translation handling in TaskViewUtils and TaskViewSimulator for better clarity and functionality to improve code readability and maintainability by
refactor assertions to improve code readability and maintainability
added a check for ` currentDateTimeFunction ` in multiple database classes and returned it if it is not null to ensure that the function is evaluated
added an ` anonymousPath ` method to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling and
updated DigitalWellBeingToast and TaskView to include content description in callback parameters to enhance task display with additional context for better user feedback
[ iotdb - 4978 ] fix too aggressive wait in catalogtracker
refactor LineNumberTagAggregator and TestDominance classes to improve code organization to enhance maintainability and readability of the codebase
[ smarthome ] fix item state conversion in genericitem
added integration tests for PostDTO and PostDetails in BidirectionalOneToOneNPlusOneTest . java and modified import statements in Hibernate
be 0d4d2d2d : fix issue where extra blank screen would be remove
updated baseDerivedRefs initialization and optimized HashSet construction in MarkBasePointersPhase . java , and added null check in IndexedValueMap . java to improve performance and
updated string literals in GoogleLineChart and GooglePieChart to use double quotes instead of single quotes to ensure compatibility with modern Java conventions
in sendingaccountor , do n ' t wait indefinitely when send complete
added position functionality to WALPrettyPrinter . java to manage and log cell positioning during execution
updated the port argument in the NettyTransceiver constructor from 1 to 0 to ensure the transceiver is created with the correct port configuration
sort the events returned by ` logEventListener . events ( ) ` before generating a report to ensure that the report is generated in the correct order
added a test for CSV line with escaped quotes in CSVFileLogger to ensure correct handling of escaped quotes in CSV output
update conll to v8.01 for new scorer
do n ' t send iq stanza that we do n ' t have access to .
removed the @ JniImpl annotation from VM . java to eliminate unused dependency and improve code clarity
updated configuration settings in Fetcher2 . java to replace deprecated HTTP plugin checks with new protocol settings to enhance code clarity and maintainability by using
added a condition to exclude specific video header format from processing in FFMpegVideo . java and removed unnecessary print statements from MediaInfoParser . java to
rename " other _ package " to " other _ package2 " and update the corresponding assertion from " other _ package " to " other _ package2
fix ` / / setdiameter ( ) ` and add integration test for ` / / setdiameter ( ) `
hbase - 27455 master wal group should not be update in master heartbeat if master be not up to date
wfile : remove caller from open state when login fail
updated the ` markDataResourceOnline ` method calls to utilize a new ` generateInstanceConfigs ` method to improve code clarity and maintain
changed the class modifier of FieldAttributes from final to public to allow access to FieldAttributes from other packages
add unit test to show how to read a project with miss version
simplified the conditional check in PropertyMap . java to improve code readability and maintainability
refactor controller ID retrieval to use a stream - based approach in DoorbirdInfo and ControllerConfiguration to improve code readability and maintainability
replace sessionFactory close method with session . close method to ensure proper resource management by closing the session directly
removed the condition checking for ` service . isGenerateRefreshToken ( ) ` in the ` OidcConsentApprovalViewResolver ` class to simplify the logic for
removed a debug print statement from Http2SolrClient . java to clean up unnecessary console output during execution
replaced a lambda expression with an anonymous inner class ` NoopGetter ` and added a new ` NoopGetter ` enum to provide a fallback mechanism to
[ hotfix ] [ core ] fix checkstyle violation in conditionalonenabledresourcechain
added a check for non - empty child count in the BarrowmanCalculator class to ensure that only valid child rockets are processed further
pdfbox - 4892 : use getunfilteredstream ( ) instead of getfilteredstream ( ) , a suggest by valerybokov
updated log messages and refactored the login process in FacebookImpl . java to improve clarity and functionality to enhance session management and permission handling to
updated the return value of the ` getBestDateTimePattern ` method to use a skeleton instead of a hardcoded " h : mm a " format to improve
removed dependency on KeyguardManager in TouchInteractionService to simplify code logic and improve readability
cloudstack - 7999 : fix npe in delete volume api
replaced FileChannel with AsynchronousFileChannel for improved file handling to enhance performance by using asynchronous writing operations
[ java ] : remove try - catch block from sigint and test .
gwt : remove updatebyboundingboxresize method , use shaperenderer instead
change return value from - 1 to 0 to update return value for proper functionality
refactor code to use static constants for size and valueLoader instead of lambda expressions to improve code readability and maintainability
added onRefreshListener to UploadListFragment to notify when data is updated to ensure the UI reflects changes in data source
refactor bibdatabasecontext to use path instead of file ( # 3978 )
replaced calls to ` emitters . items [ i ] ` with ` emitters . get ( i ) ` in ` ParticleEffect . java
refactor Tomcat to retrieve the service and engine using findServices ( ) method instead of separate service and engine fields to improve code efficiency and
updated error message to include a period at the end to improve clarity and consistency in output formatting
added a check to ensure playback state is in PLAYING state before proceeding to prevent further processing when the playback state is not PLAYING
updated the retrieval of ServiceComponentDesiredStateEntity to use findById instead of findByPK to simplify the querying process and improve code clarity
refactor inner class field clashes in Java to TypeScript translation and introduce a new test for inner class field clashes to ensure correct handling
[ type : refactor ] add followredirectfilter and loggingfilter property to the dockerclientprofile to allow customization
replaced direct calls to displayChanged with awtUnlock and awtLock to ensure thread safety when accessing the graphics environment
hhh - 10183 fix test for sql server 2008
fix ziphelper . verifyzipheader to properly close input stream
changed the access modifier of the ` storeClassFile ` method from private to public to allow external access to the method for better usability
updated the assertion in SingletonSortedSetDocValues . java and added a new test class TestSortedSetDocValues . java while changing the preference from ignore to error
updated error messages for invalid command and improved runnable handling in JavaVM to enhance clarity and ensure runnable execution is properly managed
added support for additional newline characters in the LineReaderImpl class to enhance functionality to handle additional line endings in input
changed the parameter types of ` multiFetchSourceFiles ` and ` createFetchSourceFilesRequest ` from ` List ` to ` Set ` to
android : fix crash when there be no vertex in the mesh .
added mock handling and verification error tests in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to improve verification
replaced ` FileUtil . createData ( ) ` with ` FileUtil . createFolder ( ) ` in ` MacroService . java ` to create a new folder
fix javadoc warning and remove unused import .
refactor JsonObject class to improve code readability and maintainability
added a check for ` _ maxIdleTime ` in the idle timeout condition and adjusted resource retrieval logic in ` HttpConnection ` to ensure that low resources
fix farmlandblock # isplantable not check for the plant ' s direction correctly . close # 781
added a new database table SALTEDTABLE123 and updated primary key assertions in QueryDatabaseMetaDataIT . java and UpgradeUtil . java to
None
consolidated multiple db . close ( ) statements into one statement to improve code readability and maintainability
increased timeout duration in BatchMessageListenerContainerIntegrationTests from 1 second to 5 seconds to allow more time for polling operations to complete successfully
schedule allocation phase for allocation if enable .
add save _ all , save _ all , and save _ database key bind to source tab . ( # 3181 )
refactor objectMapper initialization to use a static block for setting system properties to ensure consistent newline handling across instances of DrillTest
[ native ] fix windows path issue on window
replaced instances of ` appTest ` with ` appT ` in multiple test classes and added a ` @ PostConstruct ` method to facilit
[ java ] remove dead code for record log validation .
test : use errorgroupname instead of groupname in integration test
comment out test that do not pass on travis
CameraManager now store the reverse image flag in a private field instead of use a shared preferences
None
fix mdmmatchlinkservicetest by use a predicate instead of a string
updated JUnit 4 annotations to JUnit 5 in the AuthenticationSuccessListenerTests class to migrate to the newer testing framework and improve test structure
settypes performance improvement : use index instead of for loop
[ hotfix ] fix checkstyle violation in typeutil
updated date formatting in AbstractAlertNotifyHandler to use LocalDateTime with correct timezone to ensure accurate timestamp representation for alert creation date
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for creating MethodHandle with error handling for abstract methods to enhance method
camel - 14263 : camel - catalog - allow simple language to use { } placeholder instead of $ { } in expression
remove unnecessary check for empty toExplore in AbstractParser to simplify code logic
camel - jclouds fixed the test error of camel - jclouds
camel - 18131 : camel - consul - fix checkstyle issue with suppression
added a new check for the ACC _ STRICT access flag on the default method in Check . java and created a corresponding test class CheckACC
[ java ] add driver timeout to channelvalidationtest to reduce test failure .
added a new class FileExtensions to manage file extensions in the com . facebook . buck . apple package to provide a centralized way to handle
replaced the ThreadLocalDateFormat class with a static ThreadLocal instance of ISO8601CanonicalDateFormat to improve performance by leveraging thread - local data handling
[ gr - 46425 ] remove deprecate option from vmdeprecatedoptions .
added a display name property and updated the DelegatedClientIdentityProviderConfiguration to use it to allow customization of the display name for improved client
added ` EarlyTerminationException ` class and replaced ` RuntimeException ` throws with ` EarlyTerminationException ` in multiple operator classes to improve exception handling by
removed unnecessary whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48258 and
fix potential npe in forgeeventfactory . getwrappersperevent . fix # 1084
removed KeyCrypterException from the catch block to simplify exception handling for better clarity
mark SubmitOrderedCompletionService as deprecated to indicate that it should no longer be used
modify the length variable in HyphenationTree to correctly decrement the length before creating a new Hyphenation instance
added sleep to fix occasional test failure .
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue
fix typo in error message in parameterbinder
fix bug : provider configuration be not update properly .
added a method to quote identifier tokens into the token rewrite stream to enhance token processing by escaping special characters in identifiers
pdfbox - 4892 : avoid npe , a suggest by valerybokov
changed the type parameter of the ` loader ` variable and removed unnecessary type casting to improve type safety and clarity in ` SolrResourceLoader `
modify the boundary check in the Window class to ensure proper traversal of parent - child relationships to prevent potential NullPointerExceptions
added a null check for appManifest before retrieving the target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and related classes to improve JSON metadata handling and serialization to enhance code clarity and ensure proper serialization behavior during metadata
added userName property and its getter / setter methods to Driver and HiveSemanticAnalyzerHookContext classes to allow users to specify the username for the Driver and Hive
camel - 14284 : camel - xslt - allow to configure a custom xslt source .
added HadoopShim integration to ContainerRunnerImpl , TaskRunnerCallable , and TestSecondInFirstOutComparator to enable Hadoop shim integration for improved
updated destination URI handling in ShadowAssetManagerTest and ShadowContentObserverTest to improve clarity and consistency in request handling
add defensive null check to avoid npe
( chore ) camel - throughput - log4j2 - spi : addendum : optimize throughputlogger to reduce object allocation
updated VM version checks in CompilerConfigFileWarning and ConfigFileWarning , and added VMOptionWarning class for testing to improve code clarity and ensure
refactor MeterStatisticsManager to use a map for loading statistic models instead of a single map to enhance flexibility and maintainability of
do n ' t print logback . configurationfile on startup
added NotNull annotations to several methods and class names to enforce non - null constraints and improve code clarity
replaced ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESCAPER ` and added support for Windows
refactor container handling in AbstractWaitStrategyTest and HttpWaitStrategyTest to use try - with - resources for better resource management to ensure proper
lucene - 1978 : fix test bug introduce by lucene - 1978
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added generateShieldAddress method to RpcApiService to generate a ShieldAddress for enhanced shield address generation
changed the return type of readConsoleInput methods from byte array to String and updated byte array handling to return a String instead of a byte array to improve
updated regex patterns in TestStabilityRule . java and initialized sRunFlavor in the TestStabilityRule class to improve accuracy of stability rule validation
added logic to limit fragments to multi - valued fields in DefaultSolrHighlighter to improve fragment management for multi - valued fields in the highlighting process
modified the ` tryToLogin ` method to accept ` Uri ` , ` username ` , and ` password ` parameters while updating their logic to enhance
replaced entity handling logic in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownnRsp . java ` to
( chore ) camel - jms : fix checkstyle violation in jmsproducer
removed the wrapping of the parameter in the update method to simplify the method call by directly using the parameter
added logging for unknown currencies in BTCEAdapters . java to improve error handling for unknown currencies during currency conversion
( chore ) camel - core : cleanup duplicate code in durable conduit
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated ` startController ` and ` startHybridTable ` methods to accept a boolean parameter for tenant isolation to enhance flexibility in tenant
simplified the return statement in HasSettings . java to improve code readability and reduce unnecessary complexity
added a check for non - empty attrs before size validation in ProjectWorkspace . java to ensure attrs is not empty before proceeding with further operations
added abstract methods for project JDK name , type , and language level in AbstractIjProjectConfig , and updated references in IjProject and
changed the description of the HiveSessionProperties from " Experimenal " to " Experimental " to clarify the purpose of the configuration option
added unit tests for the GrantedAuthorityEffectiveAclsResolver to enhance functionality and ensure correct role resolution with user details
fix : use solvedjavangobject instead of re ReflectionClassdeclaration to simplify code
added conditional logic to return the number of buttons based on the maximum number of buttons to ensure the button count does not exceed the defined maximum value to prevent
updated import statement for assertEquals from jdk . testlibrary to com . oracle . java . testlibrary to ensure compatibility with the latest library version
added MessagePackFactory class to improve message packing capabilities to enhance modularity and maintainability of the MessagePack implementation
add is _ desert and is _ cave tag and use it in forgeitemtagsprovider .
rename the ` present ` method to ` draw ` across multiple classes to improve clarity and consistency in method naming
updated layout condition in ComponentGroup to check horizontal orientation and update UI IDs for group elements to improve layout handling for horizontal and non - horizontal layouts
replaced the use of DOI _ URL _ PATTERN with matcher for URL validation to simplify the code and improve readability
replaced the instance check for AndroidMultiTouchHandler with a direct reference to hasMultitouch in AndroidInput . java and AndroidLocklessInput . java
[ java ] remove volatile from clusteredserviceagent commit position counter .
no effective change - add example for user site id
fix illegalargumentexception if the address be not in the format of ip : port or a standard url
server : listcapacity - do n ' t list storage pool with host _ id or storage _ pool _ id that do n ' t exist ( #
replaced ` dir . openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength ( fileName ) ` for
refactor JavascriptCompiler class to be final and update method visibility to improve code clarity and enforce immutability of externalsMap
modified synchronization in UISettings . java to ensure thread safety when saving properties to the file
added a check for native input support and changed the access modifier of the fireDataChanged method from private to public , and modified the visibility of the fire
[ beam - 16400 ] add spannerio error message when emulator reject multiple transaction
use diamond operator to improve code readability
updated array type handling in ObjectInputStream from double [ ] to short [ ] and added a new CloneArray class for testing object serialization to ensure
refactor nonce retrieval and logging in OIDCAuthenticationFilter . java to improve clarity and handle potential replay attacks more accurately
added a condition to check if the field is a relationship field to ensure correct handling of relationship fields in the DCInputSet
added capabilities for server slogan in the FileDataStorageManager and updated related classes to enhance functionality by associating server slogan
refactor conditional logic in DrawerActivity to improve readability and structure to enhance maintainability of the code
added JUnit Assume annotation and modified exception handling in SolrRequestParserTest . java to ensure test execution only occurs when there is a network connection issue
added a check to return early if no missing symbol events are present to optimize performance by avoiding unnecessary processing
updated string formatting in StringHelperTest . java to enhance readability and maintain consistency in code
added a warning log for empty data providers and made changes to dataProviderHolder to improve test coverage and ensure warnings are logged for empty data providers
( chore ) camel - catalog - java : use collections . emptyset ( ) / emptylist ( ) where possible
mapstyle : fix selection style selection for old version
updated parameter name from ' mass ' to ' restitution ' in setRestitution method to improve clarity and consistency in method naming
added a new file ` AutoFtpActivity . java ` that implements ` IActionListener ` for FTP testing to enable automated testing of FTP
refactor conditional logic in BaseSemanticAnalyzer to use a local variable for tokenType to improve code readability and maintainability
added getter and setter methods for imageX , imageY , OnOffSwitch , OnOffSwitch , Component , GenericSpinner , and UIBuilder
added a new class RemoteExecutionEnabled that disables remote execution based on a custom field to provide a mechanism for managing remote execution settings
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading methods to use InputStreamReader with UTF - 8 encoding to improve compatibility and prevent potential issues with character encoding issues
add assertion to make sure shadow variable be not stale
updated the configuration property for semi - join conversion to optimize the join transformation to enhance performance by optimizing the conversion process
added SLF4J logging to multiple classes to indicate when message content is not an io . netty . buffer . ByteBuf instance to
updated the ` removeFile ` method to include a directory parameter and improved error handling in the ` FileDisplayActivity ` to enhance the
added unit tests for PollingTransactionReceiptProcessor to verify transaction hash retrieval to ensure that the integrity of transaction hash handling in tests
chore ( core ) : deprecate isschemaregion # constructschemablackbox and replace with isschemaregion # testdeletetimeseries (
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided to avoid runtime errors
use notifyall instead of notify ( )
updated @ AllArgsConstructor annotations to include onConstructorArg to ensure proper instantiation of JSON properties and JSON creator mode
added support for creating an index on a view in MetaDataClient to inform users that creating an index on a non - existing database table to inform users
added a new class WebSite with properties related to URL , name , URI , and URI in the populator to facilitate the population
added setup method to initialize default locale for JUnit tests to ensure consistent locale settings across different environments
add a mechanism to detect badly downloaded jar file and download them to the log
updated assertion method from ` containsString ` to ` equalToIgnoringCase ` for sha1sum validation to improve clarity and correctness of comparison logic
added a check for single - argument parameters in the SimpleExprGenerator class to ensure proper handling of single - argument expressions to improve the robustness of the
camel - 14284 : camel - vertx - optimize to reduce object allocation .
updated the writeAttributes method calls to use a NodeModel instance instead of null to ensure consistent serialization behavior for NodeModel objects
updated log message formatting and added null checks for file retrieval to improve log clarity and prevent potential null pointer exceptions
added a ` ignoredReadStatus ` field to the ` Entries ` class and updated ` CategoryREST ` and ` FeedREST ` to set it to true
replaced ` MavenTestingUtils . getTargetDir ( ) . toUri ( ) ` with ` MavenPaths . targetDir ( ) `
[ type : refactor ] optimize the code of registerserverconsumerexecutor by remove duplicate code
update playback condition in GwtMusic . java to ensure sound is played only when not paused
added a new permission for administrating the admin area in the Captions class to allow users to access the admin area of a specific area to en
updated ServerRequestPlanVisitor to utilize HashMap for query options and added trace logging to improve query performance tracking and enhance debugging capabilities
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to improve
updated assertions in ResourcesTest to use string representations of emoji characters to enhance clarity and accuracy of label values in the attribute set
removed the ` NMTWaitForDataMerge ` method and added new native methods ` NMTOverflowHashBucket ` and ` NMTMallocWith
[ hotfix ] [ serializer ] refactor eitherserializersnapshot to extend javaserializerbase
updated AddressResolver configuration to allow dynamic resolution of dot options to enhance flexibility in handling dot - related configurations
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and created a test for it in ` RequestR
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML namespace references from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / ns
truffle - dsl : move commonmimetypelocator to test . source and move to test . source
updated the ` RepositoryVersionState ` constant from ` INIT ` to ` NOT _ REQUIRED ` across multiple files to reflect the correct state representation to ensure
updated the compare logic in GenerateChangeLogTask to include schema comparison with specific catalog and schema names to enhance the comparison accuracy by incorporating schema
[ hotfix ] [ test ] use testng instead of junit in testbackwardanamilyfunctionutils
added a new test class ` ProgressiveJPEGTest ` for rendering progressive JPEG images to facilitate testing of progressive JPEG images using
fix a bug in the materialloader that cause a crash when load an already load material
make window native - image build failure message more user friendly
added a null and empty check for the text before setting the size to avoid potential errors when the text is empty
fix ( core ) : fix data . readint to correctly interpret a sign
changed the ` PushUtils ` and ` ThumbnailsCacheManager ` classes to be ` final ` and added a private constructor to ensure immutability to
replaced the calculation of the length using ` getBounds ( ) ` with direct access to ` curConfig . getLength ( ) ` to streamline the
removed unnecessary type casting when calling setEnableVirusScanner to simplify code and improve readability
updated regex pattern in componentPresetDao . load method to improve matching of CSV file names
updated accessibility announcement logic and modified SDK version checks in various classes to enhance accessibility features and ensure compatibility with newer Android versions
replaced the usage of getMyKey ( ) with RefreshTask . getNodeId ( ) in NodeManager . java to ensure the correct node ID is used
make ant task only target jdk 1.5
updated Mockito usage from PowerMock to MockitoJUnitRunner in QuotaResponseBuilderImplTest and QuotaResponseBuilderVOTest to improve compatibility
added printStreams for standard output and error handling in TestSchemaToolCatalogOps . java to improve control over output stream management during tests
added a ` DFSClient ` parameter to the ` SaslNegotiateHandler ` constructor and utilized it to manage the ` DFSClient ` for en
updated MongoQueryMethod and related classes to accept RepositoryMetadata as a parameter to enhance query method functionality by incorporating repository metadata handling
refactor to make it easy to use entityresolvers
updated import statements in MetaDataEndpointImpl . java to include specific database constants and removed unused ones to streamline code and improve maintainability by
increased the allowed retry limit for repeated transactions and added a retry mechanism for handling deadlock counts to improve reliability during transaction processing
renamed XAxis variable and updated YAxis variable for clarity to improve code readability and maintainability
added methods to validate printable characters and set supported character sets in FsUtils . java to enhance character validation and ensure compatibility with various operating systems
rename selenide . in to selenide . using
[ mng - 4978 ] maven - plugin - plugin : do not process plugin configuration if they be not need
fix unit test failure on slow box
chore ( vision ) : fix integration test resource location
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in AuthenticatedUser
( scott phillips ) add admin permission to communitylistservlet
added AtomicInteger for long and short compaction threads and updated thread naming convention to improve thread naming consistency across compaction processes
updated the method of obtaining the package name to use resource - based resource retrieval to improve compatibility with different resource identifiers
refactor player retrieval in Near . java to use a separate method to improve code readability and encapsulate visibility checks
refactor multiple classes including AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability
modified MlibOpsTest . java file to improve test coverage and maintainability
replace string literal " OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL in JNIRegistrationManagementExt . java to improve code
corrected a typo in the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a
replaced conditional checks for key and initialization vector with direct usage of EncryptionUtils methods to streamline code and improve readability
add miss stability annotation for worktabetest
removed condition checking for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks for bucketing version
replaced the method call to setCursorPosition with input . setCursorPosition to ensure the correct cursor position is set for the input component
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced new abstract classes ` LockFreeBucket _ FinalFields _
add ` ` tpstats ' ' to nodetool list
update max bitrate calculation to use user preferences to ensure bitrate is accurately based on user preferences
updated ZipkinHttpSpanExtractor to conditionally check for trace and span IDs presence to enhance debugging capabilities by ensuring only relevant span IDs are
add getuserpayment accounts method to avoid duplication
remove reflection hack ( # 4347 )
added a line to set the project reference in LauncherUtils . java to ensure the project is correctly initialized before use
updated JsBundle , JsBundleBuilder , JsLibraryBuilder , JsBundleWorkerJobArgsTest , and JsTestScenario to include ProjectFilesystem parameter
refactor multiple classes related to envelope styling and databinding functionality to improve code organization and enhance maintainability
refactor MetricsDSLContext to improve code readability and maintainability
removed the VersionConfig interface and updated the VersionBuckConfig class to use ImmutableSet instead of an anonymous interface to simplify the code and improve performance by
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException when binding a shadow class to improve error handling and
changed the visibility of the validateTypes method from static to public and updated the exception message from " AST AST contains missing or invalid type information " to "
fix : update gapic - generator - java with mock service generation fix ( # 438 )
added SLF4J logger imports to SimulationStatus . java to facilitate easier logging of simulation status updates
updated the VERSION _ POSITION _ Y constant from 138 to 150 and changed the VERSION _ POSITION _ Y value from 138 to 14 to
refactor notification addition to run in a concurrent task to ensure notifications are added on the UI thread
updated test cases in AdditionalAnswers and ReturnsElementsOf classes to improve test coverage and ensure correct functionality of returned elements
updated error message for dropping partitions for non - string partition columns to clarify that only equality is allowed for partition columns
added a test method for LineFileDocs in BaseStoredFieldsFormatTestCase . java to validate index writing functionality to ensure proper handling of line file documents in
added a method to retrieve the version code from MainApp and updated FeatureList to use it to improve code maintainability and ensure compatibility with the MainApp
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 . fix
updated assertions in MultiPartInputStreamTest to compare the submitted file name instead of the content disposition filename to ensure the test accurately reflects the
added bufferOwned flag and modified constructor parameters in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure buffer disposal only occurs when the buffer
added a " forgotPassword " transition to the login form flow to enhance security by allowing users to forget their password
refactor JerseyClientConfiguration to improve code readability and maintainability
int - 1188 remove reference to characterstreamreadingmessagehandler from console inbound / outbound parser
updated print statements to use the variable ' o ' instead of ' s ' and replaced ' SingletonList ' with ' List . of ' in multiple files
added methods to manage and check array contents in StringDict and Table classes to ensure proper handling of empty or null entries in the data structure
added @ Deprecated annotations and implemented AutoCloseable interface in GenericContainer to mark the class as deprecated and provide a way to manage command execution hooks
updated logging level from info to error in MediaInfo . java and modified test method signatures in RendererConfigurationTest . java to improve error handling and
added support for " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance data source configuration flexibility
bcjsse : fix npe when session id be null .
refactor ratio calculation to use local variables for width and height to improve readability and maintainability of the code
refactor Base64 encoding implementation to improve performance and maintainability of the code
fix a bug in llvmgetstackfromthreadnode and add a single context assumption .
simonstewart : ignoring a test on the iphone since it do not pass .
refactor FlowBuilder and its tests to improve code organization and clarity
replaced ` ResName ` with ` int ` in ` AttributeResource ` and removed ` ResEntry ` class from ` OverlayResourceIndex ` to
refactor docker certificate path resolution logic to use Optional for better clarity to improve maintainability and readability of the code
[ test ] move setup / teardown to setup / teardown method
refactor type capture logic in ` ppp Attr . java ` and add a new class ` T6450290 . java ` with nested class ` Box
added logging level configuration to the LoggingFlags and LoggingOptions classes to allow customizable logging levels based on input values
added logging statements for various item deletions and modified the deleteItemsFromDatabase method to accept a Collection instead of an Iterable to enhance debugging capabilities and
added allFilesOption ( ) method to FileActivity , FileDisplayActivity , and PreviewImageActivity , and overridden allFilesOption ( ) in PreviewImage
added deprecated methods for forEachOperation and hasMatching in MutationOperationGroup to improve code maintainability and deprecate them
updated the calculation of numPredictiveAppCols to use a conditional logic based on whether the device is a phone
updated StringUtils to create a String using UTF - 8 encoding to ensure consistent character encoding for data processing
added new RequestMatchers class with static matching methods for various request matchers to provide flexible matchers for different request scenarios
g3d - 433 : do n ' t show ` ` temporary mode ' ' for temporary mode .
update calculations for height , width , and position in ProgressBar . java to correctly account for background height and width to ensure proper rendering of the knob
use external _ functions . json instead of src / test / resources
changed variable declarations from non - final to final and refactored method calls to use instance variables to improve immutability to enhance thread safety and
added a condition to check if the state handler is invalidated along with the existing gesture state check to ensure that the gesture handling logic only proceeds when the
update layout metrics calculations for landscape and portrait layouts to improve layout responsiveness and ensure accurate cell dimensions
added a condition to check if the " / robots . txt " file is the " / robots . txt " file in addition to the existing
[ netbeans - 4078 ] fixed loading of icon in nb - javac module
change game screen action to return instead of continue
added null and zero checks for the ' b ' variable in UDFOPDivide . java and created a new test class TestUDFOPDivide . java to
refactor code formatting and improve readability in multiple Java files to enhance maintainability and clarity of the code structure
updated LogoutFilter and LogoutBeanDefinitionParser to use BeanDefinitionBuilder for enhanced URL processing to improve flexibility and maintainability of URL matching
added onDestroy ( ) method to both ShareActivity and ContributionsActivity to ensure proper cleanup of the upload service connection to prevent memory leaks
updated references from thumbNail to thumbnail in WallpaperPickerActivity . java to ensure correct tag retrieval from the thumbnail object
refactor multiple command and result handler classes for consistency to improve code maintainability and readability across the command processing framework
added request timeout configuration in RaftServerConfigKeys to enable dynamic request timeout settings for RPC communication
updated logging behavior in TsFileResourceManager and modified test cases in ResourceManagerTest to improve error handling and resource management for sealed tsFile resources
added system properties to MavenModuleLoader to enhance configuration flexibility for model source management
added metrics for readiness checks and bad calls in ServerMeter to enhance monitoring capabilities for service status updates
add miss model handler for the animated torch . close # 1221
added null check before closing writer to prevent potential NullPointerException when writer is not initialized
added a method to retrieve Hive configuration from a specified directory in UtilsForTest to improve flexibility in configuring Tez execution environment
added a link to users in the features activity to provide users a direct documentation overview
added a property to disable direct method handle usage in reflection to improve performance by avoiding unnecessary reflection calls
hbase - 20583 splitonLeadingVarCharcolumnspolicy extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] log warning if the plugin or lib folder do n ' t exist
use word . getSpelling ( ) instead of dictionary . getpronunciations ( )
fix checkstyle error
added extra data for tweet ID in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper handling of tweet IDs in the application
log the reason for terminate messagelistener on reliable topic .
do n ' t throw exception if no class be find to analyze
replaced the import of ` Key ` with ` PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with the latest security practices
updated the initialization of the isIncompatible variable to ensure correct handling of incompatible resources
updated the method signature of createAccount to use AccountCreateContract instead of Account to ensure compatibility with the new contract structure
pdfbox - 4892 : fix arrayoutofbounds exception , a suggest by valerybokov
resolve intermittent test failure on ci
enable off - heap format by default and update config version to " OFF _ HEAP " to ensure compatibility with the new star tree format and
truncate the title of the content to a maximum of 2048 characters to ensure the title does not exceed 2048 characters
6977726 : jcolorchooser crash when try to add a text preview to a colchooser with no component .
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity during extension checking
fix potential npe in androidtileBitmap . gettilebitmapfromreusableset ( )
added layoutParams field and getLayoutParams method to FakeView class to enhance functionality by providing access to layout parameters
added a check to throw an IllegalStateException when a Cursor is already closed to ensure proper error handling when attempting to iterate over a closed cursor state
pdfbox - 4892 : avoid a classcastexception find via oss - fuzz
camel - jms : ignore fail test due to timeout
added a private field ' ts ' with getter and setter methods to the Message class to store and retrieve the timestamp associated with a message
add exceptionmapperutils to make it easy to log exception
changed class visibility from package - private to public to allow access to the AbstractExecutor class from other packages
remove weighting and edge _ based from hint if they be present in the request
updated class visibility from public to package - private in multiple test files to enhance encapsulation and restrict access to test classes
refactor CSRF token handling into a separate method to improve code readability and maintainability
add support for bootstrap class loading in eclipseloaderpatchertransplants
[ drools - 10670 ] allow user to disable numeric disable in xls file
changed log level from info to debug for default value logging to improve logging granularity for debugging purposes
added null checks for axes and buttons in Lwjgl3Controller . java and refactored controller management in Lwjgl3ControllerManager . java
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest to align with the latest Cucumber library structure
refactor the port forwarding logic to use a local variable for the HostDatabase instance to improve code readability and maintainability
added a new property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods in ` GlobalConfiguration ` to manage the snapshot data behavior
added a null check for the temporary file name before starting the job in SyncedFolderObserver . java to avoid potential NullPointerExceptions and ensure
pdfbox - 4892 : fix typo find by codespell on fossies . org
simplified touch event checks in StatusBarTouchController . java to improve code readability and maintainability
refactor VectorReader and related classes to remove the VectorReader interface to simplify package structure and improve code organization
updated import statements from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to ensure compatibility with the latest version of Mockito library changes
replaced instances of ` getRelativePathName ( ) ` and ` getRelativePathName ( ) ` with direct calls to ` getRelativePath ( ) `
updated methods in SegmentMapper , CompositeTransformer , RecordReaderFileConfig , and RecordReaderScanner to use RecordReaderConfig instead of RecordReader to
added a null check for extractor before iterating over annotations to avoid potential NullPointerExceptions when extractor is null
server : fix resource limit command for domain with unlimited secondary storage
add potionshiftevent to allow modification of inventory effect . close # 1391
added a deprecated constant for " cold _ reads _ to _ omit " and removed it from uncheckedOptions in SizeTieredCompactionStrategyOptions .
[ java ] stop the leech at the end of the test .
[ issue # 7663 ] fix the metric of pull consumer retry ( # 7664 )
refactor KeyboardAddonSettingsFragment to improve code organization and readability
added @ Ignore annotation to ShadowDateUtilsTest to temporarily disable the test due to a known issue
polish mongoreactive auto configuration change
added UpgradeRequest and UpgradeResponse handling to JettyTrackingSocket and ClientConnect classes to support websocket upgrade requests and responses
added timeout functionality to AndroidImplementation to allow customizable connection timeout settings for connections
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return ` List < RegistrantAccessPermission > ` instead
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct handling of
modify file access assertions based on root directory to ensure correct execution of tests on non - root users
added logging and refactored executor selection logic in FixedThreadExecutor . java to improve configurability and maintainability of the executor selection process
added null checks for the field object in AbstractChangeGenerator . java to ensure robustness by preventing potential NullPointerExceptions
updated event listener imports and method signatures to use the new ` InitializingBean ` class instead of ` CasEventListener ` to ensure compatibility with
refactor animation handling by extracting it into a separate method to improve code readability and maintainability
added a custom close method to DeflaterOutputStream to ensure proper resource management by closing deflater after use
added a new file ` gsp001 . java ` to test the retrieval of system properties in JVMTI to ensure that the ` GetSystemProperty ` functionality
fix handling of inherited bean with @ factory or @ executable
* fixed reading / writing of camera and light control viaCapsule ( ) method in CameraNode and LightNode
refactor PopupNotificationPanel to simplify the code and improve error handling for popup window retrieval
replace instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` and ` InferenceException ` to standard
added a method to retrieve featureValue to provide access to the featureValue variable
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` VerificationAfterDelay ` method to accommodate
added OnBuild and ExecutionDriver properties to ContainerConfig and Info classes to allow configuration of build execution requirements
updated toolbar icon icons based on text direction to ensure correct icon display for RTL layouts
added a boolean flag ` enablePositionIncrements ` and refactored the ` StopFilter ` instantiation to enable position increment functionality to enhance flexibility
updated EmailTest and SystemErrorEmailReportTest to use an InternetAddress instance for the " noreply " address to enhance flexibility by allowing
added a boolean variable ` mTryShareAgain ` and set it to false in ` FileActivity . java ` to reset the state of the share attempt
added support for retrieving the TTY name dynamically based on the version property in JansiNativePty . java to enhance flexibility in determining
refactor code to directly use bytesSize instead of using a temporary variable for byte size to improve code readability and maintainability by elimin
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests to improve test stability by ensuring asynchronous tasks are handled correctly
updated API URL constants in EaseeBindingConstants . java to use API _ BASE _ URL instead of hardcoded URLs to improve maintainability and
updated sleep duration and added startup attempts for the Kafka container to improve reliability of the Kafka integration process
updated matchers in SearchResultMatcher to use is ( itemName ) instead of allof allof allof to improve readability to
added SSL certificate trust validation using SSLContext in OkHttp . java to enhance security by ensuring all required certificates are validated
refactor long click handling for buttons in TaskbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by using
added a new file HyperlinkFormula . java and modified StringPtg . java to change the data type of field _ 1 _ length from
added nullable stdout and stderr fields to ShellStep and ensured workingDirectory is not null to improve code robustness by preventing null pointer exceptions
increase timeout for asyncappendertest to 2 min .
updated the escapeDatabaseObject method to use the objectName parameter instead of tableName to improve clarity and consistency in handling database object names
gglass enable fix for rename dialog
added state change functionality to ShadowDisplay and a corresponding test in ShadowDisplayTest to ensure state changes apply to other instances of same display to verify that state
[ geos - 10678 ] fix dispatcher . invoke ( ) to deal with direct invocation
fix for x and y key not work in gwt backend
updated SQL queries in PgDatabaseMetaData . java to conditionally include dependent database dependencies based on server version to ensure compatibility with PostgreSQL version differences
[ hotfix ] fix checkstyle violation in queuechannel
removed IOException from method signature and improved URI handling in FileUtils . java to enhance code clarity and ensure accurate URI generation
added support for monitoring Jenkins nodes in the CollectorServer to enhance application configuration for better monitoring capabilities
allow ` ` disabled ' ' and ` ` defaults - disabled ' ' attribute on http header
hbase - 25836 log4j2 - 1343 addendum : addendum fix checkstyle issue in protobuflogreader
shutdown nacos listener when destroy
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator and GoAwayBodyParser to support both SPDY . V2 and SPDY . V3
refactor formatting and add assertions in AuditEventTests to improve code readability and ensure correctness of JSON data retrieval
added a check for a value less than FLOAT _ ROUNDING _ ERROR in the Interpolation class and modified the return statement to use 0 instead of a
fix the default path of the world edit not be consistent with the server
refactor code to store the path of the Android executable in a variable before adding it to the builder
added unit tests for PointRangeQuery instances in TestPointQueries . java to ensure correct equality and hash code generation for PointRangeQuery instances
hbase - 27432 testhfilecleaner . testindexoutofmemory may cause testhfilecleaner . testindexoutofmemory
if a file name do n ' t change , update the label
do n ' t propagate exception in jedisclustercommand # processresponse
[ hotfix ] [ table - common ] make rowtimeminibatchassintheroperator respect chain strategy
replaced ` RegExpBasedFilterInvocationDefinitionMap ` with ` PathBasedFilterInvocationDefinitionMap ` and added new test cases for single URL parsing withAntPaths
added baseline and test methods for HashMap and CompactMap in QMap - related benchmarks to enhance performance testing by providing specific baseline values and
added initialization for G _ SCH _ B in HybridPlotWorld . java to ensure G _ SCH _ B is properly initialized before use
added checks for empty fields and improved identifier conversion in GroovyEngine . java to enhance robustness by ensuring only valid method names are processed
fix for angle ( 0 , 0 ) in web
added TCP keepalive configuration and updated server transport initialization to support it to enhance server performance by allowing more time for TCP connections
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve clarity and consistency in method naming
no effective change - code cleanup - remove unused import
refactor RealtimeSegmentRelocator to use TimeUtils for scheduling tasks instead of custom ThreadFactory to improve code readability and maintainability by
createvpccmdbyadmin : remove useless success variable
None
update fatal error message to include version 4.0 schema to ensure compatibility with Spring Security version 3.0
updated multiple assertion classes to improve consistency and clarity to enhance maintainability and readability of the codebase
( chore ) camel - disruptor : fix spotbugs issue
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to include a new test configuration
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve test accuracy and ensure correct pattern matching
simplified logger initialization by removing unnecessary final keyword and chaining method calls to improve code readability and reduce redundancy
replaced ` updatePurgedShards ` and ` deletePurgedShardNodes ` methods with ` deletePurgedShards ` and ` deletePurged
[ java ] add 17 language handler ( 17 - preview ) support for the new language .
harden fileappenderresiliencetest by wait for compression job to finish
[ hotfix ] [ runtime ] fix checkstyle violation in volatilereadnode
resolved - issue batch - 1239 : jobexecutor should return a list < step > instead of throw exception
removed unnecessary Base58 fields and updated error handling in JsonRpcApiUtil and TronJsonRpc classes to streamline base58 processing and enhance error
refactor currency pair creation to use a variable for clarity to improve code readability and maintainability
use basetimeunit instead of timeunit to calculate duration
[ hotfix ] [ euphoria - euphoria - euphoria - euphoria - euphoria -
changed variable types from String to CharSequence and updated value assignment logic in HostEditorActivity . java to improve performance and simplify value retrieval from list preferences
renamed ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and refactored related methods for improved clarity to enhance
added a constant for the maximum number of tweet counts and modified a loop condition to accommodate this limit to ensure that processing only occurs when there are
increased the refresh interval from 1 to 2000 milliseconds to improve resource management and performance during authorization checks
nifi - 1978 ensure that newly acked tail page have persist byte size correctly
fix classnotfoundexception in glowserver . getimplementationtitle ( )
refactor the grow method in DataIO to improve code readability and maintainability
removed import of DataOutputStream to eliminate unused dependencies
( chore ) camel - aws2 - multipart : add method to access the uploaded file name
added markReadForLoad ( ) method in LauncherFragment . java to enhance loading state tracking during fragment loading
added ClassNotFoundException handling and modified exception handling in JarInstrumentor . java to improve error reporting for failed classes during instrumentation
added a method to check for spill possibilities in a specified partition to ensure that the application correctly handles partition spill operations
changed variable name from ` info . info . getDocStoreSegment ( ) ` to ` dsName ` for better clarity to improve code readability
added a default name ID format constant and a check for empty supported name formats to ensure a valid name format is used when none is provided
added redirect and error message for password change abort in ChangePasswordPage . java to ensure proper handling of password change operations
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential compilation issues
add maxidletime to nioreceivermbean for good logging
deleted the FontScalingTest . java file to remove unused font size checks to streamline the codebase
[ rrd4j ] fix illegalargumentexception if start date or end date be null
added a check to return early if numVectors is less than or equal to zero to prevent processing when numVectors is less than or equal to zero
test : migrate executablereftest to junit 5 ( # 4382 )
added null checks for view and glassPane before setting them to avoid potential NullPointerExceptions when view or glassPane are null
camel - 16400 : fixed wiretap eip to work with dynamic uris
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
[ flink - 20536 ] [ planner - blink ] add option to disable topn optimization for planner
[ java ] remove redundant assignment of aerondirectoryname in test .
fixed - batch command execution be n ' t trigger if rbatch . queue . size be set to 0 . # 440
replaced ` InputStream ` with a ` URL ` for managing configuration variables and removed the ` LoopingByteArrayInputStream ` class to simplify the code
updated the device parameter in createModel method to use criteria ' s device instead of default device to ensure compatibility with the current device criteria
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to streamline menu inflation and enhance menu selection functionality
pdfbox - 4892 : fix typo find by codespell on fossies . org
fix : hawtio . dirname should be set to hawtio . dirname , not hardcoded value
added a condition to handle empty comments and whitespace in the Space . java file to improve handling of empty comment scenarios
make instance variable volatile to ensure thread safety
removed printStackTrace ( ) method call from ContextHandler to clean up the code and improve readability
make customitemdroptest a integration test for spongecommon
added support for " ifNotExists " option in partition handling to enhance flexibility in partition management
nifi - 259 : fix bug where we do n ' t read all the byte when copy the content of a file
[ hotfix ] [ epoll ] remove unused parameter in abstractnode .
[ geos - 10641 ] add spatial operator support to wfs getcapabilities response
added import for LuceneTestCase and annotated with AwaitFix to address a known bug related to issue SOLR - 2161
improve handling of empty keepalive message
[ java ] : turn off exclusive egress notification by default .
replaced individual cache key constants with an array of cached keys to enhance flexibility in managing HBase cache configurations
added running record counting functionality in JSONRecordReader to improve error handling by tracking the current record number in exception context
added year filtering to merged items in CategorizationFragment to ensure only valid year is removed from merged items
updated drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use PorterDuff . Mode instead of
mesh : do n ' t allow render with opengl 2.0
fix issue with backgroundprocess not set correct context
refactor table name handling in SemanticAnalyzer and QBParseInfo to include database name prefix to improve database compatibility and clarity in SQL insert
increased connection timeout from 1 minute to 1 minute in TestConnections . java and changed the declaration of count in StubConnection . java to improve connection st
add e2e test for approx _ percentile with low limit
updated DEFAULT _ IDLE _ TIMEOUT to a fixed value in WebSocketConstants . java and refactored idleTimeout usage in WebSocketChannel . java
updated the method call to use ` user . toPlatformAccount ( ) . name ` instead of ` account . name ` to ensure compatibility with the current
updated Inet6Address . java to use generics for type safety and improved null handling to enhance code clarity and prevent potential Class
refactor playback control code to replace view enabling methods with button enabling methods to improve clarity and functionality of button visibility management
updated session ID checks and method signatures to improve code clarity and maintain consistency in parameter naming
changed the method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java
make useexceptionprobability a true by default
updated the logic for setting the new PlateColor based on the icon ' s theme to improve visual consistency by using system - specific color scheme
ticket # 269 : fix compatibility with old mysql version .
added " centre " alias to the aliases list to support both " center " and " centre " functionality in the application
added DirectUpload import and injection method to CommonsApplicationComponent to enable dependency injection for improved upload functionality
updated spacing settings for left and right axes in BarChartActivity and added limits for left and right range in BarLineChartBase to improve layout consistency and
added new flavors to AndroidLibraryDescription and JavaLibraryDescription to support additional Java ABI types in the configuration
added operation event status type to request parameters and initialized the services list in CompositeLogService to improve service handling and ensure proper initialization of LogService instances
add some debug code to make dex more readable
camel - jms : use setup and teardown annotation instead of startbundle and finishbundle
refactor process initialization to use a separate variable for the classpath to improve code readability and maintainability
updated the documentLoader loading mechanism to include a separator for resource loading to ensure correct resource path formatting for Android applications
refactor methods in DataSet to remove ' this ' keyword and improve clarity to enhance code readability and maintainability
added JUnit Ignore annotation to WorkProfileTest . java to mark the test as ignored due to a known issue b / 243855320
escape stack trace percentage in ` should _ have _ message _ create _ error _ message ( ) ` to avoid % n
fixed - rcache . close ( ) method do n ' t call cachemanager . geturi ( ) .
ignore taskalreadyclaimdexception when log severe message
added an initialization block to the ALPNClientConnectionFactory to ensure ALPNClientConnectionFactory is created only when needed
fix entity property packet to use base value
sonos : use thinghandlerhelper instead of thingstatus for notification sound uri
updated await duration from 500 milliseconds to 5 seconds in multiple test files to allow more time for the latch to complete successfully
changed log level from info to debug for incorrect effect light type determination in LightThingHandler . java to provide a clearer and more informative
cloudstack - 7978 : use a fixed thread pool for async job , if the cloud db property ` ` cloud . max . active
updated method signatures and import statements in Reporter and ReturnsSmartNulls classes to improve clarity and consistency in the codebase
changed parameter type from Frame to DataFrame in the generate method from Frame to improve clarity and consistency in data handling
updated package - info . java and module - info . java files across multiple packages to ensure consistency in module and package documentation across the project
fix npe when use orcoutputformat with empty file
added a return statement that calls methCla . mixPlay to enhance functionality by allowing mixing play methods in the engine
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in finder patterns and added new test cases in the QRCode classes to enhance accuracy of pattern finder and improve test coverage
remove redundant check for leadingIncludePaths in PreprocessorDelegate . java
fix npe in stringtemplate when vector be null
add ` ` find ' ' and ` ` findall ' ' a synonym for ` ` $ ' ' and ` ` findall ' ' (
fix e - ac3 joc channel count when sample rate be not specify .
added getter and setter methods for formula and reference in XSSFName class to enhance flexibility in managing cell formula data
increased the target duration from 60 seconds to 90 seconds in HighDimensionsTest . java to allow for longer processing time before triggering the test execution
fix arrayindexoutofboundsexception when parse pattern facet constraint
added a new test class ` ClassPathXmlJobRegistryContextTests ` to validate the functionality of the ` ClassPathXmlJobRegistry ` to ensure the
fix wrong velocity state when sample
camel - 12320 : added deprecation to stop camel - restlet and polish camel - restlet
camel - 14284 : log component should use source code generate configurer to avoid reflection configuration .
refactor trace event submission into a separate method to improve code readability and maintainability by reducing duplication
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to enhance order
added pixel offset calculations and validation in LCMSImageLayout for image layout to ensure correct handling of pixel data size and validate layout integrity
refactor timestamp handling to use JRubyTimestampExtLibrary for consistency to improve code clarity and maintainability by centralizing timestamp data management
added a path check in ContextHandler to return a resource if it does not already end with a path and created a test for non - existing paths in
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER instead of TYPE
fix scroll position on macos
fix nullpointerexception in graphdecoder
test : migrate sniperprettyprinterjavaprettyprintertest to junit 5 ( # 4520 )
refactor URLOutputStream initialization to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added @ entity annotation to mail entity to facilitate future refactoring .
change default value of ` includeTablespace ` from false to true and add documentation for it to ensure that tables are included by default
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to improve accessibility of internal data buffer properties
added a check for empty file inputs in ScanBatch and created a test for handling empty JSON directory in TestJsonReader to ensure proper handling of empty JSON files
updated failure handling in StringSubject and improved test cases in StringTest to include custom names and enhance error reporting for string equality checks
[ hotfix ] [ pytorch ] fix libutils . iscancellationonly ( string ) return false
updated exception handling in JrtJavaBasePackages . java and PackageHelper . java to catch a more general Exception instead of ClassNotFoundException to improve error handling by
hbase - 2593 add check for safemode in master
enhanced error message formatting in TranslatingJavacPhaseTracer to include the exception type to improve clarity of error reporting for better debugging
[ mng - 4078 ] remove unused plugindescriptors cache .
fix jabber account resource update bug .
add javadoc to servletrequestdetails and fix a few mistake
added a new integration test class for fetching account information from BTCE exchange to ensure the correct functionality of the PollingAccountService and account information retrieval
added mouse wheel functionality to VDUInput and vt320 classes to enhance user interaction with virtual keyboard interactions
set net . java . games . input . librarypath if jinput be need
# 564 - remove deprecate @ columnhstore - migrate to @ beanhstore
add skin flag to metadata for player
updated LoadBalancerWithServiceTests to use dynamic client configuration instead of regex matching to improve flexibility and maintainability of the test setup
fix potential null pointer exception in mapservice # createentryview
replace System . getProperty with AccessController . doPrivileged for retrieving the OS version to enhance security by using a privileged access method
updated the file suffix handling in TemplateEngineFreemarker to allow dynamic configuration of the freemarker file suffix based on configuration
updated hashCode calculation in SelectMessageQueueByHash . java and added multiple test cases in SelectMessageQueueByHashTest . java to ensure correct value assignment and validate
ggb - 2118 fix : the drag - and - drop scrollbar wo n ' t work
use when bind instead of conditionally
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , CxxGenruleDescription , and CxxPlatformDescription to utilize Cxx
updated parameter handling from SimpleParameterAccessor to ParameterAccessor in multiple files to improve clarity and consistency in parameter management
added a null check for the passwordAttribute before setting the password attribute to avoid potential NullPointerExceptions when passwordAttribute is not provided
added handling for array types in DataUtilities to ensure proper initialization of default values for byte and string arrays
updated SSL engine creation logic to handle null address and client authentication more gracefully
fix flaky test teststabledescriptors . testcachehitcount
simonstewart : refactoring the delete cookie function to be more generic
added a boolean flag to indicate launcher transition status and updated gesture handling logic to ensure proper handling of launcher transitions during swipe up gestures
added meta charset to HTML tags in HTMLListWriter and HTMLWriter to ensure proper HTML content is encoded in the application
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored related calls to use appendPathSeparator
added a new class bug6337518 to test the functionality of JComboBox UI to address bug6337518 related to arrow button functionality
updated TestRandomAccessBuffer . java for consistency to improve code maintainability and readability
refactor UserInfoActivity to improve code organization to enhance maintainability and readability of the code
added imports for HomeContentProvider and sq _ lite , and updated broadcast handling in multiple services to utilize notifications for content URI changes to enhance
added functionality to manage button press states in ` BubbleTextView ` and ` Launcher ` classes to improve user experience by allowing resuming or
added an error parameter to the getFallbackResponse methods across multiple classes to capture and handle potential exceptions during fallback responses
removed the condition checking for ` env . _ compile _ only ` in the if statement to simplify the code logic for better readability
add null check for tags in ChannelUri . java to prevent potential NullPointerException when accessing array elements
updated JAVA _ REGEX _ SPECIALS string to include a period at the end of the JAVA _ REGEX _ SPECIAL
added functionality to update the action bar title in FileActivity and FileDisplayActivity to ensure the action bar reflects the current file state to improve user experience
replace ` getOnlyElement ` with ` getLast ` in ` PythonDslProjectBuildFileParser . java ` and add a new test for concatenating
updated scheduling time from " * " to " 0 " in CleaningService . java to align with scheduled scheduling requirements
added partition validation logic for tables in the TransactionalValidationListener to ensure correct handling of partitioned tables during schema validation
refactor ReplicationHandler and SnapPuller classes for improved readability to enhance maintainability and clarity of the code
updated ` generatedKey ` type from ` int ` to ` long ` and modified SQL execution logic to handle auto - increment keys to ensure correct key generation
refactor proxy retrieval in SimpleReferenceCache to improve code readability and maintainability
improve error message when inlining test fails
updated keep - alive timeout values and improved logging conditions in WebClientFactoryImpl . java to enhance code clarity and ensure proper handling
deleted the HttpTestAccount001 . java file to the functionality was no longer needed in the project
updated exception handling in Dispatcher . java to catch Throwable instead of Exception and modified test cases in DispatcherTest . java to improve error handling clarity
camel - 16400 : camel - cxf - optimize to reduce object allocation when iterate over all attachment .
added a case for the ' ~ ' character in ClientUtils . java to enable proper handling of the ' ~ ' character in the code
camel - slack : make delay a duration instead of a long
fire blockharvesting event with drop chance instead of rely on vanilla block . getdrops ( )
increased the initial capacity of the FormLayout and adjusted the JCheckBox initialization in TranscodingTab . java to optimize layout and improve readability of the
added a new file ` bug8057791 . java ` that tests the rendering of a list using ` NimbusLookAndFeel ` to address
updated flag logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java while modifying method conditions in TestLambdaBytecode .
fix ( runnerbuilder ) : add websocket support for eth - interface
changed the condition from checking if the length of ' to ' is greater than 0 to checking if ' to ' is not null to improve null safety and
refactor ParquetFixedWidthDictionaryReaders to conditionally set up value vector mutator based on dictionary usage to enhance performance by optimizing value reading
refactor layout handling in PortraitPagedViewHandler to differentiate between landscape and vertical apps in PortraitPagedViewHandler to improve layout
added a new annotation ` Log ` and ` LogInterceptor ` in the ` org . apache . shenyu . springcloud . a
updated the string representation of thread state in QueuedThreadPool . java to handle both empty and null traces to improve clarity and prevent potential NullPointerExceptions
updated method signatures and logic in CacheGenerator , CacheProvider , and CacheSpec to incorporate an optional implementation parameter to enhance cache handling
added totalFrameSize ( ) to the reference map creation in FrameMap . java to ensure proper tracking of total frame size for reference maps
polish ` ` fix typo in typesafeconfigurator ' '
camel - 14284 : camel - graphql - add karaf feature test
added two test methods for bug 1 , bug 2 , and bug 3 in RFE2891944 . java to demonstrate the use of BigDecimal for
( chore ) camel - http - client : remove unused code mark a unused
replaced the custom Tool implementation with a custom UnsupportedPlatformTool class to improve clarity and maintainability of the code
[ hotfix ] [ runtime ] log retries in second instead of long
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the map
( chore ) camel - core - address - manager : randomly set index to prevent random failure
updated layout specifications and parameters in VLCVideo . java to correct the positioning and alignment of components in the UI layout
rename bisq to bitsquare
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker . android . tw
fix . m2 / repository location in . m2 directory
glBindBuffer call to glBindBuffer in VertexBufferObjectWithVAO . java to ensure the buffer is bound to the intended memory
updated ServerHttpSecurity configuration parameters to enhance security settings for HTTP requests
added @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests due to instability
added default HTTP headers to HttpClientProperties and updated CasCoreHttpConfiguration to include them to enhance header management for HTTP requests
improve exception handle for user password not valid error
deleted the NoOpConfigPathGetter . java file to the class is no longer needed for the current project scope
updated signing key decoding from Base16Decode to Bytes . fromHexString to improve compatibility with different encoding systems
replaced the import of CascadedStyle with the import of CSSName and added float property checks to enhance type safety and ensure proper handling of
planner - 490 add javadocs for planning fact and collection property
refactor default headers handling in RestUtils and WebsocketUtils to improve header management by utilizing MultiMap instances
refactor ` setEncoding ` and ` setCharset ` methods to accept a ` Charset ` instead of ` String ` for improved flexibility
added a method ` getJobId ( ) ` to the ` StepContext ` class and a corresponding test in ` StepContextTests ` to provide a way
None
do n ' t log error when receive non - java client response
updated import statements in LegacyAuthenticationHandlerAdapter . java to streamline dependencies and improve code clarity
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
reduce log spam when remove invalid filter .
move the wrap ( inputstream ) method to the bcpginputstream interface to make it easy to subclass .
hbase - 17432 fix potential resource leak in minimallockingwriteaheadlog
added a new test method ` testSelectAllFromView ` and refactored column name handling in ` HiveBaseResultSet ` to improve test coverage
updated FocusTransitionTest . java to improve focus transition testing accuracy
fix compile error cause by gwt project change
added a null check for the sourceTask before retrieving counters in CounterStatsAggregator . java to improve error handling and prevent potential null pointer exceptions
require non - null for readListener in HttpInput . java to prevent potential NullPointerExceptions during initialization
refactor color change handling in AppearancePanel . java to utilize ChangeListener for event - driven color selection to improve responsiveness and
updated the constructor call from ' false ' to ' hidden ' in TaskHelper . java to allow for more control over the task name during execution
try to fix intermittent ci failure
pdfbox - 4892 : ensure randomaccessfile be close in createfromrandomaccess
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize default parameter handling in SQL processing
lsra spill optimization : do n ' t store spill state if there be no loop
add micronaut - generated test for groovy script
fix ( sql ) : call closeoncompletion and executequery be call multiple time ( # 138 )
[ hotfix ] set default value of serviceadvisortype to python
replaced the static resolver instance with a thread - local resolver for improved memory management to enhance thread safety and reduce potential memory leaks
use append instead of write for speed
refactor memo handling in SendCoinShieldTest to use a local variable instead of creating a new byte array to improve code readability and maintainability
added a method to set personalisation based on date , locale , and distinguisher in SkeinParameterSpec . java to enable flexible handling of date
removed redundant conditional check for argument count in CodeGenerator . java to streamline code logic for better readability and maintainability
removed percent parameter from scroll functions across multiple classes to simplify scrolling behavior and improve code clarity
changed the access modifier of the pointer variable from private to public and added reset methods to FlatRecordReader to allow external access to the pointer variable
rename contentdigesthistory to bdbcontentdigesthistory to avoid confusion
fix : cast expression should not use implicit cast to boolean
replaced the ArrayList implementation with a boolean flag to determine if all media types are accepted to simplify the handling of media types to improve clarity and maintainability
added a boolean variable ` false ` to the ` TaskView ` class to control the behavior of the task execution logic
added a method to check if the column type is auto - increment and implemented multiple overrides in LiquibaseDataType to ensure proper handling of auto - increment
added default value for errorText variable to provide a meaningful error message when a command fails due to Internal Server Error
updated imports in DeadListenerTest . java and LocalManagementTest . java to use ProcessTools and Utils for improved performance testing to enhance test reli
replaced ` add ` method with ` push ` method in ` BasicEventSimulationEngine ` to improve stack pushing functionality for status updates
added support for AJP connector configuration in GitBlitServer . java to enable dynamic binding of the Jetty Ajp server on specified port
added type coercion for intersection classes in TransTypes . java and created a new Intersection03 . java file to ensure correct handling of class cast exceptions
rename the test class from EmbeddingTest to EmbeddingITest to clarify the purpose of the test class for easier debugging
refactor toolkit thread creation to use a conditional check before starting the new thread to improve performance by avoiding unnecessary thread creation
add an option to compress the bundle in parallel .
add workaround for window .
updated the tempDir initialization to use the current class name instead of a hardcoded string to improve clarity and maintainability of the code
added configuration parameters for fullNodeHttpEnable and solidityNodeHttpEnable to enable or disable HTTP services based on configuration settings
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and updated related methods in ` GoogleCloudFirestoreTicketRegistry ` to support
rename Generate . java files to improve clarity and consistency in naming conventions
[ flink - 20536 ] [ table - planner - blink ] make scalar function nullable by default
updated BadgeRenderer , IconPalette , ShadowGenerator , NotificationKeyData , and PopupContainerWithArrow classes to support dots - only display indicators to enhance
remove final from freemarkermanager . getconfiguration
[ hotfix ] [ core ] add test for invalid excluded package name pattern
updated AppleTest . java to conditionally set deviceUdid based on platformName and added SDK name in IdbRunTestsStep . java to ensure
updated DefaultHttpClientFilter to use ProduceProcessorManager and modified response handling in TestDefaultHttpClientFilter to improve error logging and ensure proper response status handling
added null checks before binding and executing root scripts in AllAppsView . java to ensure proper initialization and execution of script execution
added a conditional check for TEXT _ BULL in the Utilities class to conditionally apply shadow layers based on the text shell state
added JUnit teardown methods to TestColumnAccess and TestReadEntityDirect to ensure proper database cleanup after tests are executed
added a line to retrieve a parser by name to ensure the correct parser is used for security namespace handling
updated formatting in BoundedLocalCache . java and added a new test in BoundedLocalCacheTest . java to improve code readability and
updated the RawConnection interface to extend WebSocketConnection and added complete and flush methods for handling FrameBytes to enhance WebSocket connection handling and improve asynchronous
added new test methods for verifying assertions in SoftAssertionsPerfTest to ensure that the all assertions functionality works as expected
added exit code handling in PythonRunTestsStep and integrated it in PythonTestIntegrationTest to ensure tests exit with appropriate success and failure conditions to improve
refactor glyph alignment logic in GlyphLayout . java to improve readability and ensure proper handling of x - axis advancements based on markup state
refactor score comparison logic in TestBooleanRewrites . java to use streams for better readability and performance to improve code clarity and maintainability
updated enumClass to use getSuperclass ( ) instead of getEnclosingClass ( ) to ensure correct class hierarchy for anonymous classes
move flush ( ) out of playerconnection and into connectionmanager # packetcounter
added a check for whether the drawing process has already started to prevent unnecessary operations on the main thread
refactor multiple classes including CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added a check for not - applicable match status to simplify import statements and
change the return value of getBoolean for MEDIAPARSERV2 from false to true to enable the media info parser by default
do n ' t generate advice for method annotate with @ aop
added permission checks and verification for TRUNCATE TABLE command to ensure that necessary permissions are enforced during the truncate operation
fix login problem in global status service
updated the random color calculation in PastelColor . java to improve the accuracy of color selection based on its base value
refactor ScriptEngineFactory to improve performance and maintainability of the code
updated the handling of bitmaps in the HolographicViewHelper to use a new method for creating original and outline bitmaps to improve code clarity and
refactor HTTP method handling to use a dedicated method to improve code readability and maintainability
multirewordpreprocessor now infer the lexicographical of the phrase , if possible
[ hotfix ] fix checkstyle violation in iochannelutilstest
added conditional logic to retrieve the output format class based on the HIVE _ PASSTHROUGH _ OF _ CLASSNAME constant to improve flexibility in
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated boundary check in DOMBuilder . java to ensure valid range for character validation
updated directed and non - directed graph handling logic to improve graph structure and enhance user interface clarity
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed test
added a new file ` PublicStaticInterfaceMethodHandling . java ` containing an interface with static and default methods along with a test class to demonstrate the
camel - 16400 : camel - core - allow to configure a password on a keyselector with a camelcontext .
replaced instances of checking for ThreadDeath with direct throw statements to simplify error handling and improve code readability
refactor multiple Java classes to improve code organization and maintainability
updated JGit version from " 1.0 . 0 ( 201106090707 - r " to " 1.1 . 0 (
fix : client path be not take precedence over ` clientkey ` in @ client ( ` path ` )
int - 1212 added transformer support for xml adapter
updated BACK _ FACTOR to REWIND _ TIME and modified related conditions in ResumeObj . java to improve clarity and functionality of duration adjustment based
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and overridden it in ` JavaSEPort ` to control scroll
no effective change - code cleanup
fix typo : collection . map - > collections . map
added methods to set sequence and unsequence file counts in CrossSpaceCompactionResource to improve the accuracy of file handling in the compaction process
removed duplicate @ Override annotations to enhance code readability and maintainability
update the project ruleset only after the user preference change
fix a bug in sootfieldref that could cause a concurrentmodificationexception
add name convention to elastic meter registry ( fixes # 2 )
added methods for managing IController listeners and GcodeCommandCreator in IController and GcodeCommandCreator in IController and TinyGController ,
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to validate rendering of a horizontal rule to ensure that the
[ hotfix ] [ test ] use tty instead of system . out
refactor multiple Java classes to improve code organization and clarity to enhance maintainability and readability of the codebase
updated the condition from checking frame length to checking for non - negative frame length to ensure proper handling of frames without throwing exceptions
None
refactor icon handling to use a runnable for setting icons on the UI thread to improve responsiveness by ensuring icons are set on the UI thread
updated conditional check to handle null registered case to improve robustness by preventing potential NullPointerExceptions
removed the ` hasNextSibling ( ) ` method from multiple node classes and simplified the return logic in ` IeNavigator . java ` to streamline the
fixed - redisdistributedmapcacheclientservice throw nullpointerexception if result be null
updated logging statements in MobFileCache . java to provide clearer information about the MobFileCache state to improve debugging visibility and control over cache
modified ColConvCCMTest . java file to improve test coverage and maintainability
refactor code to use local variables for allow covariant returns and synthetic name character to improve code readability and maintainability
pdfbox - 2576 : use generics for property , a suggest by valerybokov
modified the return statement to use ` asString ( ) ` instead of ` Float . toString ( ) ` and added a new class ` X ` with
added a return statement to the GenericFileConsumer class to ensure proper exit from the method when processing
added an invocation on EventQueue . invokeLater using EventQueue . invokeLater to ensure proper handling of asynchronous operations
updated maxSize calculation to use getMaxBinaryMessageSize instead of getMaxBinaryMessageBufferSize to ensure proper maximum size constraints for text message handling
[ fix ] increase steering value in test
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to enhance security by using a more secure comparison method
updated JdbcSerDe to convert LocalDate and LocalDateTime to Date and LocalDateTime for improved date handling to enhance compatibility with local date and time
updated VERSION from 2 to 3 and modified metadata handling logic based on version to improve compatibility with different metadata formats
polish ` ` allow flyway to be configure with jpa dependency ' '
added sorting functionality to the classes to ensure the classes are sorted before processing
added a method to retrieve the current stable state in LauncherStateManager and updated references in AbstractLauncherUiTest to improve code clarity and ensure consistent state
refactor SharedInformer class to improve code readability and maintainability
refactor TestCloseScope0 to use ResourceScopeImpl instead of MemoryScope to improve compatibility with Java versions 16 and above
increased the test timeout duration from 500ms to 5000ms to allow more time for tests to complete successfully
refactor CaptchaChannelProcessorTests to improve test coverage and maintainability
update the owning collection when metadata change
added a mechanism to limit the number of retry attempts for saving registry properties to improve reliability by preventing excessive save operations
updated the parameter of TrackingDirectoryWrapper from mergeDirectory to directory to ensure the correct directory context is used for tracking files
implement 1.5 for loop and generics bug fix
added validation to prevent insert overwrite queries on bucket partitioned Iceberg tables to ensure data integrity by preventing unsupported operations on bucket partitioned
updated assertions in BootstrapTests . java to reflect the correct number of keys in SAML configuration to ensure the tests accurately reflect the expected presence of legacy
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and modified the logic to exclude static fields to enhance
remove synchronization from mailermodel . getaddressvector ( )
commentparser : remove unused constant
modified the release method in Lock and NativeFSLockFactory to include IOException handling and added a new LockReleaseFailedException class to improve error management and
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align package structure with the correct J
updated SpelExpressionTransformer to conditionally transform unary operators and simplified unary operator checks in LiteralNode and OperatorNode to improve code clarity and
added TypeValidation to ByteBuddy initialization to disable TypeValidation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in the ` JavacRoundEnvironment ` and ` JavacRoundEnvironmentTest ` classes
updated lock mode constants and added exception handling in lock mode tests to ensure correct lock behavior and improve error reporting for lock exceptions
refactor LoggingApplicationListener to remove the unnecessary parameter and streamline the setSystemProperties method to improve code readability and maintainability
refactor HTTP redirection handling in ServiceApiRequest . java to improve clarity and maintainability of the code
added environment configuration for microservice application mapping to enhance flexibility in configuring application details based on environment settings
fix toethread to use correct bean name
changed the visibility of DB _ PATH _ REGEX to static and introduced DB _ PREFIX constant in BaseAndroidTestCase . java ; updated database
updated return statement to use getUnreadCount instead of numberNew to provide accurate unread count reporting
renamed the test method from ` testVirtualThreadPool ( ) ` to ` testVirtualThreadPoolPreview ( ) ` and added a new test method ` test
modified the ` getAllOrder ` method to include a ` limit ` parameter and adjusted the market price limit logic to enhance the method ' s
added null check for the user before retrieving user settings to prevent potential NullPointerExceptions when the session is not authenticated
updated file path handling in LocalFileSystem and added a new test for relative wildcard path matching in LocalFileSystemTest to improve accuracy in file path matching functionality
limit the width and height of the component instance to a maximum of 10000 pixels to ensure the component does not exceed its defined maximum size
added logging functionality and a deprecated method for setting connection manager timeout in CommonsHttpSolrServer . java to improve error handling and enforce maximum retries limit
added exception handling for document creation to improve error reporting for document creation failures
refactor filename formatting in CrateType . java and add file resolution tests in RustBinaryIntegrationTest . java to improve code readability and ensure
added a method to check if a given string is a number and is formatted as a digit in SpellChecker . java to enhance validation for number input
updated the constant MESSAGE format in HelloWorld . java to ensure consistency in capitalization
refactor file display logic by extracting file action handling into a separate method to improve code readability and maintainability by reducing duplication
disable the puller in ReplicationHandler and add error handling in SnapPuller to improve stability by preventing application crashes during replication operations
updated the parameter order in the update method call to ensure consistency in method usage
renamed the constructor parameter from ' materials ' to ' materials ' and added a loop to remove instances of ' RocksimComponentFileColumnParser ' to
added new dependencies and updated existing ones in DependencyBank . java to enhance functionality and improve code clarity
added maximum recycled views to the RecyclerView ' s RecycledViewPool based on device profile settings to optimize memory usage by setting appropriate view types for
added a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest . java ` to ensure proper functionality of binary
cancel mining if one of the mining block do n ' t meet the mining target
added imports for ParsedNode and ResourceAccessor in CreateProcedureChange . java to enhance parsing capabilities for procedure changes
added null handling for null values in FilterOperatorUtils and implemented a corresponding test in NullHandlingEnabledQueriesTest to enhance null handling capabilities and
updated argument validation in JDynamicInvokeExpr . java to ensure bootstrap method parameters match expected types to prevent runtime errors
camel - jms fixed the unit test error of camel - jms
clear formatters in CucumberInstrumentation . java to ensure runtime options are reset before processing
changed the type of contacts from RegisteredServiceContact to DefaultRegisteredServiceContact and updated return type to List to improve type specificity and ensure
adjusted workspace label adjustments based on cell size and padding to ensure workspace labels are only shown when appropriate
[ hotfix ] [ test ] print cluster state in assertion failure message
[ gr - 25827 ] llvm : allow llvm to pre - initialize context .
removed the ` @ Ignore ` annotation from ` ChaosMonkeyNothingIsSafeTest ` and ` ChaosMonkeySafeLeaderTest `
replace RuntimeException with JsonIOException in exception handling to improve error handling for JSON parsing failures
replaced Integer . valueOf ( ) with Integer . parseInt ( ) in VisualScoreTagTest . java to ensure proper parsing of input values for better compatibility
updated error messages for clarity and modified file tree iteration limits to enhance error reporting and ensure maximum allowed value for maximum tree size
refactor segment name checks to use a helper method for low - level consumer segment names to improve code readability and maintainability by reducing
added methods to start activities for both container and non - container activities in ShadowFragment . java and corresponding test cases in FragmentTest . java to
updated the method to return a current time instead of the current time to ensure accurate time representation of the due date
add x86 _ 64 - none - linux - linux - android to targetcputype return value
added a method to delete all file contents for a specific account in FileDataStorageManager and implemented it in ManageAccountsActivity to improve file management
updated the command - line option syntax in SchemaCrawlerCommandLine . java to correct the option syntax for help output
added constructors and methods to create and utilize a unique ID in the Description class to enhance object creation and validation for unique ID functionality
replaced ` decode ` method with ` decodeBarcode ` method in ` SnapshotThread . java ` to streamline barcode decoding process to improve code clarity and
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related methods to simplify the constructor signature and eliminate
[ geos - 6978 ] gwc zoom context finder fail with ` ` 500 , 000 , 000d ' ' instead of `
added dependency tracking configuration to enable automatic dependency tracking based on the configuration settings
updated the request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
add some extra catch for already exist keyspace creation
refactor WelcomeWindow to use cached BufferedImage and optimize image rendering to improve performance by reducing redundant image rendering operations
updated tuner configuration handling to include a unique tuner name and improved error logging for buffer transfer resubmission to enhance clarity of tuner
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a test for shell binary functionality to enhance test coverage for the ShBinary rule
added a condition to include the HSQLDB database in the includeString variable to ensure compatibility with HSQLDB configurations
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
only materialize host exception if there be one .
improve service loader to support java 8 +
added test for usage of duplicate command handler resolver .
[ flink - 20865 ] [ stream ] make fine - grained resource management in batch job configurable
fixed vanilla bug where fishers would n ' t pick up anything at all .
camel - 14284 : create an aws - endpoint base on sdk v2 , fix description
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
renamed the variable ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class to improve clarity
added a check for empty items in AppsContainerRecyclerView to prevent further processing when no items are available
added a conditional bean definition for the reporter bean to ensure that the reporter bean is only loaded when it is missing
log4j2 - 1343 xmllayout now include line break in generated xml
added support for the " omitHeader " parameter in multiple response writer classes to allow users to optionally remove specific headers based on request parameters
fix groupshape . shapename for complex property . patch by jbellis
refactor getBuildRuleType method call to use Description class to improve code clarity and maintainability by centralizing method calls
add a call to modify the scene hierarchy when a method be remove to ensure that the scene hierarchy is updated when necessary
add defensive null check to testif disputereconnects
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , updated method signatures in ` DatabaseSchema
wallettest : set transaction confidence type to not _ see _ in _ cHAIN .
add support for @ body and @ header on the httpclient introduction
update conditions processing in CraftingHelper . java to handle JSON files starting with " _ " and conditions to ensure only valid JSON files are processed
hbase - 1978 addendum log a warning if region close fails
refactor length comparison logic in Credential . java to improve readability and maintainability of the code
[ java ] short - circuit if subscription have no image .
[ hotfix ] [ test ] simplify the destroy method in testjvmprocess
added Oracle to the conditional check in TestDefaults . java to ensure compatibility with Oracle - specific database configurations
improve error message in case of failure to connect to mail store
throw a parsecancellationexception when there be more than one token in the query
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
added method to retrieve the data file name and updated model assignment logic based on its value to enhance model identification based on different model types
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of the email domain for better
added configuration constants for REQUEST _ READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT , and updated their retrieval methods to enhance timeout management by allowing dynamic configuration
skip deferred concept processing if they be empty or there be no concept to save
added RedisCategory import and annotation to RedisServiceRegistryTests to enable test categorization for Redis services
updated test methods to use parameterized tests and improved type pattern handling to enhance test clarity and ensure correct behavior when dealing with empty types
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the component during rendering
removed unused import statements from multiple configuration classes to improve code cleanliness and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule and added event signature field in ContractEventTrigger and LogEventWrapper classes to enhance event processing
updated file name filtering to ensure compatibility with file naming conventions
mapview : use background color instead of clip
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48105 .
remove some debug printlns and clean up code
added a conditional check for NaN scores before comparing scoreDocs to ensure scoreDocs [ 0 ] . score and score does not have NaN values to avoid potential
replace getEntityKeys ( ) with set . copyOf ( ) to ensure oldKeys is not modified externally
added a method to handle zero - time strings in ` ColumnSnapshotGenerator ` and created a test for MySQL date defaults in ` MySQLIntegrationTest
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offrcBtcPubKey ` and ` taker
updated type parameters in FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , and FunctionSecondPassGroupingCollector classes to use wildcard generics
[ drools - 6662 ] add test case for session model edit
updated the constructor of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure proper reference to the current configuration context
added a condition to return early if modalness changes to optimize performance by avoiding unnecessary processing when modalness changes
added unit tests for CodecCapabilities to ensure correct handling of codec profiles and profile levels in the media codec list
fix edit offer dialog focus issue # 5460 ( # 5460 )
added validation for width and height , implemented error handling for creation of XRSurfaceData , X11SurfaceDataProxy , XRPMBlitLoops
updated the thousands separator from a period to a non - breaking space to ensure consistent formatting across different locales
refactor AsyncStressTest and StressTest to use AtomicInteger for thread management to improve thread safety and performance during concurrent execution
added beta flavour handling and default values for various UI components in AchievementsFragment and LeaderboardFragment to improve user experience by
updated SearchMethodVisitor to initialize access , name , desc , and desc from the context to ensure proper context data is maintained during processing
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java to improve test reliability and handle additional exceptions
removed redundant code lines in DLNAResource . java to streamline duration handling to improve code readability and maintainability
( chore ) camel - core - model - sequencer : rename < configuration > - > < configuration >
fix deadlock in tablereader . reload ( )
flume - 2082 : thrift protocol : use ssl . keymanager . algorithm if available
replace JavaIsoVisitor with Applicability in the getSingleSourceApplicableTest method to enhance code readability and maintainability by using the
added exit ( ) to the blockmania , when the tab key be press .
change access specifier from PACKAGE _ PRIVATE to NONE across multiple files to standardize access specifier handling for better clarity and consistency
renamed the method ` unHandlend ` to ` unhandled ` and updated its implementation for better clarity to improve method naming and enhance
refactor code to streamline stripe retrieval logic in OrcInputFormat to improve code readability and maintainability
added null check for exception in JCache . java to prevent potential NullPointerException during execution
change the myhentaicomics ripper to use http instead of http
add version option to the app
use splittokens ( ) instead of split ( ) in export
updated rotation handling logic in ConsoleActivity and added input connection handling in TerminalView to improve user experience by ensuring default rotation is used when the keyboard
changed the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` and added a
added a null check for the ownerConnectionAddress in ClientSmartListenerService . java to avoid potential NullPointerExceptions during execution
camel - 1978 : added support for the ` ` headersmapfactory ' ' attribute on camelcontext to be able to configure the name of the
updated the syntax in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
jmstemplate and jmssingletongateway now use spring ' s factory to create the jms instance .
updated the index parameter in the array replacement condition from ` i + 1 ` to ` i + 2 ` to correct the logic to accurately reflect
log error when add script engine
added PostgreSQL specific statement classes to the Proxy instance in PooledConnectionImpl and ConnectionPoolTest to ensure compatibility with PostgreSQL ' s statement
refresh size estimate on cassandraio test to reduce flakiness
change log level from error to warn for memory limit warning to improve log granularity for better debugging
do n ' t ignore min timestamp when take snapshot
fixed - negative timeout be n ' t handle correctly in reentrantblockingqueue and rblockingdeque # removelist
[ hotfix ] remove unused format parameter in jobinspectcommand
refactor Engine class to improve code readability and maintainability
use entryset ( ) . sorted ( ) instead of stream . of ( ) . sorted ( ) for performance optimization
[ issue # 4836 ] ignore acl test ( # 4837 )
change condition from numIndexDims to numDataDims in BKDWriter . java to ensure correct handling of data dimensions
[ zeppelin - 1978 ] do not print stacktraces to stderr if no interpretergroup be present .
fix typo : funn - > lt
removed the public access modifier from methods in NodeIdAccessor . java to restrict access to these methods for better encapsulation
server : improve the error message if volume be not attach to a vm before snapshot creation ( # 5978 )
removed public access modifier from methods in ItemWriter . java to restrict access to these methods for better encapsulation
updated the mock ` thing ` to include a ` test ` identifier instead of an empty string to provide a clearer description of the test environment
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest ` to
replaced FSDirectory with RAMDirectory in TestNorms . java to utilize a more efficient directory structure for test operations
replaced the direct assignment of lineHeight with a conditional assignment based on the height of mDrawTextRectBuffer to ensure that the line height does not exceed the
rename WalletAppKit class for consistency to improve clarity and maintainability of the codebase
[ netbeans - 4674 ] remove dependency on netbeans - nashorn to avoid npe
fix the issue that the ` ` add chat transport ' ' menu item be n ' t remove .
added methods to resolve and replace tokens in the application context to enhance data processing capabilities
fix npe when there be no bsqblockchaingroupexplorer
http : / / issues . apache . org / jira / browse / amq - 3892 - add method to session to get /
added assertions to verify the properties of a plain bean to ensure that the correct property values are returned from the database schema
updated averages initialization to use initialPageCount instead of pageSize to optimize memory allocation based on the initial page count
refactor BatchCommandLineLauncher class to improve code readability and maintainability
added JDBC and transaction manager beans for HSQL database support in BatchMetricsApplication to enhance database management and transaction management in the application
( chore ) camel - glowroot : replace unauthenticated by http
pdfbox - 4892 : apply lwjgl ' s antialiasing / antialiasing to the drawimage method to improve visual consistency
removed unnecessary synchronization from the close methods in DocumentsWriter . java to improve performance by reducing unnecessary synchronization overhead
added methods to retrieve properties and handle multiple choice options and validation constraints in UiBinding . java to improve property management for UI components
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for better readability to improve clarity and consistency in
bugfix : only update the stored copy of the tree for a full save
refactor affix handling to support multiple patterns instead of a single pattern to enhance flexibility and efficiency in managing affix conditions
replaced explicit generic type parameters with diamond operators in KrakenAdaptersTest . java to improve code readability and maintainability
added import for CharTermAttribute in DefaultIndexingChain . java to utilize the CharTermAttribute functionalities for token processing
refactor NBJavacTrees . java to improve code organization and readability
removed unsupported encoding check from VectorizedPrimitiveColumnReader to simplify error handling for unsupported data encoding
added MarkerFactory import and modified logging behavior in HttpSolrCall . java to enhance logging clarity and ensure consistent handling of certain log outputs
added a call to destroyMetadataServiceProxy to ensure proper cleanup of metadata service proxy instances
improve performance of defaultentityqueryrepository . getLvlFilter ( ) and add unit test
updated the messaging for Hub communication failure to include the changelog path when the changelog ID is not registered to improve clarity in error reporting for
add try harder hint to barcode decode test to try harder mode fail
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` and added a new test for compiler error
updated the logic for setting the maximum number of events in ObjectStore . java to ensure consistent handling of events based on the rqst configuration
no effective change - code cleanup - remove unused import
fix entityawareworldprovider to properly remove temp block entity
removed unnecessary exact type checks in IntrinsifyArrayCopyPhase . java to streamline type comparison logic for better performance
remove unnecessary logging .
refactor ` WantedAnywhereAfterFollowingInteraction ` class to use ` getMessage ( ) ` instead of ` getCause ( ) ` to
added checks for existence of accounts and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure proper error handling for missing
danielwagnerhall : sort command alphabetically by description , not by parameter
feat ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
updated property settings in BaseSingleTreeBuilder to use setProperty instead of addProperty to ensure consistency in property management
updated AsmLoader to use the correct class loader for loading classes to ensure compatibility with the correct class loading context
pdfbox - 4071 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
modified the export statement in Java2TypeScriptTranslator to conditionally use " declare " or " export " based on whether the context is a definition scope
updated HttpClientTest to use an AbstractHandler for handling requests to ensure that the request is properly handled and properly streamlined the server input stream handling
simplified listener additions by removing unnecessary array parameters to improve code readability and maintainability
fix npe in abstractqmpath when there be no lhs
updated package declaration for ReadFolderTest . java and renamed multiple test files to improve organization and clarity in the test structure
refactor BufferedImage creation and processing logic in AwtCanvas . java to improve performance and streamline graphics operations
make libgraal initialization be defer .
[ hotfix ] [ test ] fix test instability
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 49 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization and deserialization of these classes
modified CallStack . java file to improve stack trace handling functionality
log warn when max record size do not allow any data in the map
updated references from AST to LST in multiple Java files to ensure consistency and accuracy in terminology to improve clarity and accuracy of error messages related to
improve performance of threadedacousticscorer . getbestscoreable ( )
replaced an assertion error with a return statement to handle potential null values more gracefully
simonstewart : fix a test failure on the ci server
added a default ` makeString ` method to multiple iterable classes and updated ` AbstractMultiReaderParallelIterable ` and ` AbstractSynchronizedRichIterable `
replaced hardcoded order with a constant for improved maintainability to enhance code readability and maintainability
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated relevant classes to utilize it to allow for customizable weak association rules
refactor Deflater class to improve compression handling to enhance performance and maintainability of the compression process
pdfbox - 4892 : re - throw exception , a suggest by valerybokov
added a null and empty check for the content variable in VersionTypeBinding . java to ensure that a valid version is returned when no content is provided
refactor NearbyListFragment to directly use the results of loadAttractionsFromLocation instead of storing it in a list to improve code clarity
camel - 16400 : fix camel - mail to work in osgi environment
fix handling of ssh private key of type ` ` ssh - dss ' ' .
updated ` updateItemLocationsInDatabaseBatch ( ) ` method to accept a boolean parameter for bind status and modified folder name suggestion logic to improve
hhh - 15454 - fix inheritance test for @ cache ( usage = read _ write )
updated import path for DefaultOAuth2RequestFactory and added user approval request handling in TofuUserApprovalHandler to streamline OAuth2 request processing
fix influx name convention not apply to tag value ( # 645 )
do n ' t use system . out . println ( it ' s already available )
update cookie key check from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure the correct key is retrieved from the request map
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and refactored its usage in the ` Subject ` class to
added functionality to manage the visibility of the " Clear All " button and space option in OverviewActionsView to enhance user experience by allowing users to
updated ` desiredRepoVersion ` to be final and modified timeout settings in ` ClusterStackVersionResourceProvider . java ` , and added null check
remove memoryleaktest because of memory leak
updated the return statement in ServletTester . java to include the local host address to ensure accurate representation of the remote server ' s IP address
added a check for MvDWAPI being used in the server listener and updated related settings to enable MvDWAPI integration based on user settings to
wait for cluster size before start new node
implemented a singleton implementation for FFIProvider to provide a mechanism for managing FFI provider instances based on availability
add a test for hierarchical w file list processing in batch processing .
added null checks for objectToSave and collectionName in MongoTemplate and improved handling of persistent entity properties to ensure robustness and prevent potential NullPointerExceptions
use a constant node _ list constant instead of 0 to avoid magic magic number
added ` accTradeValue ` field and corresponding getter / setter methods in ` BithumbTicker ` , updated test cases in ` BithumbTrade
updated logging statements in RealtimeSegmentDataManager to use placeholder syntax to improve readability and maintainability of log messages
rename ` maxParallelThreads ` to ` MAX _ PARALLEL _ TASKS ` and update related references to ` MAX _ PARALLEL _ TASKS `
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMultiColReader and dataReaders lists to ensure thread - safe access to
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added a null check for the destBuffer variable to prevent potential NullPointerExceptions during execution
fix camel - msv test which fail on ci server
updated comparison from equal to greater than or equal in the DelegationService class to ensure accurate validation of the initial cycle of the service
increased the length of ` RandomValueStringGenerator ` from 6 to 10 in ` JdbcExpiringCodeStore ` and updated assertions to check for
added a check for instances of UniqueConstraint before matching to ensure that only unique constraints are processed further
refactor description parsing logic and improve handling of language descriptions to enhance code readability and maintainability while ensuring accurate parsing of language descriptions
handle arrayindexoutofboundsexception and classcastexception
add withreferencefilter ( ) and withfilter ( string , collection < string > ) to listimagescmd
camel - 14263 : camel - jms should use source code generate configurer to avoid reflection configuration .
added checks for specific patterns and empty ops list in OpExclusionUtils . java to ensure that exclusions are handled correctly and avoid unnecessary operations
added return statements in DatabaseCommand . java to ensure proper handling of database operations
update honestpoliticianexample to show correct example
[ hotfix ] [ zeppelin - 2058 ] fix checkstyle violation in beanshellinterpreter
camel - 14284 : camel - restlet - allow to configure restlet port .
removed unnecessary import statements in SchematicFormat . java to streamline the code and improve maintainability
set the maximum query length to 100Mb and remove unnecessary configurations from SessionState to optimize query performance and improve configuration management
changed access modifiers of userName , securityMgr , and createHttpConnector methods , and refactored HttpConfiguration instantiation to enhance encapsulation and
[ hotfix ] [ connectors / kafka ] fix typo in sink name
update Spark application name handling in HiveSparkClientFactory to ensure default application name is used when not provided
rename variable to avoid confusion
simonstewart : maximise a window should close itself , not throw an exception
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , and DefaultProjectFilesystemFactory to handle main cell buck out
updated error message assertion in TestXMLEntityExpansion . java to check for " entity expansions " to ensure proper validation of error messages before processing
modify table offset and length calculations to mask values with 0x7FFFFFFF to ensure consistent data manipulation across the application
added a customization method that checks that the form is not null to ensure that the form is properly initialized before use
refactor mLineBuffer initialization and update coordinate checks in LineChartRenderer . java to improve memory efficiency and ensure proper bounds checking for chart rendering
refactor flavor handling in AndroidBinaryDescription to support multiple flavors to improve flexibility and error handling for invalid target flavors
updated buffer assignment to use variable ' i ' instead of ' offset ' to improve code clarity and maintainability
added new classes ` Property ` and ` PropertySuper ` , along with a test class ` TestClassResolutionFail ` to demonstrate the behavior of ` Property
do n ' t remove shutdown hook if enable
updated FilterChainProxy to use FilterChjainProxy class instead of FilterChainProxy and refactored the VirtualFilterChain constructor to simplify the code
http : / / issues . apache . org / jira / browse / amq - 4237237237237 - percentileaggregationfunction should not
added checks to ensure the schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider . java and modified QueryTypeAnalyser . java to handle
initialize baseType to null and reset literalPrefix , literalSuffix , and localizedTypeName to empty states to ensure proper handling of uninitialized data types
updated link syntax in multiple Java files to improve code readability and maintainability
replaced instances of ` getInstance ( ) ` with direct instantiation of ` ObjectEqualEvaluator ` , ` ObjectNotEqualEvaluator ` , and ` BooleanEqual
updated configuration references from " osx _ x86 - 64 " and " linux _ x86 - 64 " to " -- x86 _
added sound effect handling in AllAppsView . java to enhance user feedback during sound playback
changed the exception type from ` Exception ` to ` IOException ` in the main method to provide a broader range of error handling
enable the granularity of the left axis in BarChartActivitySinus to enhance user interface capabilities for chart analysis
refactor version comparison logic using a separate method to improve code readability and maintainability
updated file path handling in ContextHandlerGetResourceTest to use a custom test directory and added OS ALIAS _ SUPPORTED check to improve test reliability and ensure
added a close ( ) method to Connection and its implementation in multiple classes to ensure proper resource management and prevent potential client - side exceptions during connection closure
improve mockappender to avoid lock contention
[ beam - 4142 ] check that the resourceid be a directory .
removed unused imports and added a new SpriteBatch class in IsometricStaggeredTiledMapRenderer . java to streamline the code and
[ ds - 3952 ] fix itemserviceimpl duplicate unbindhandle ( ) call .
refactor Config and Attribute classes to improve code organization and readability
simplified touch tracking logic in OtherActivityTouchConsumer . java to improve code readability and maintainability
replaced the logic for setting the navigation button tint with a configuration - based approach to enhance theme customization based on the UI mode
make sure polybench launcher abort when language can not be determine
replace bootstrapMethodIndex and nameAndTypeIndex extraction with refKind and memberIndex for byte kind and reference kind in ClassWriter . java to improve clarity
added block formatting context support to the ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java ` to enhance
added error output functionality to WorkerProcess and improved error handling in WorkerShellStep to enhance error reporting by capturing standard error output during job
added null checks and wrapped list creation in CheckedListReplaceAll . java to ensure proper handling of null operators and improve error handling
added conditional checks for ` _ testFill ` and ` _ writeCallback ` before calling ` fillInterested ( ) ` in ` SslConnectionTest
added listener management for device configuration changes in DeviceFlag . java and made the defaultValue variable final in FeatureFlags . java to ensure immutability
added JUnit Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to version 2.2 . 0 gh - 1114
removed unused import of MalformedURIException to clean up the code and reduce unnecessary dependencies
instructorfeedbackedit : fix bug where cancel button be not work
refactor synchronization and subscription handling in KrakenStreamingTradeService to improve code readability and maintainability
replaced System . err . println with System . out . println in ChangeableUrls . java to standardize logging statements for better clarity
added a new constructor to ` SparseRowMatrix ` that accepts a ` randomAccess ` parameter and modified related methods to enhance flexibility in
bug 10425 : add miss usage event when volume be delete from pool
updated file input stream handling to support local job configuration to ensure correct file path resolution based on the job ' s configuration
[ udftestprovider ] update to late guava version
bugfix # 26975 , register cctprovider only when necessary
check for operationsetmultiuserchat to avoid npe .
force a dirty state when save a file
added a new ` FolderSyncActivity ` class and integrated it into ` DrawerActivity ` to enable folder synchronization functionality in the navigation drawer
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
update spanishtreenormalizer to handle punctuation correctly
replace PointReader with heapPointWriter ' s getPackedValueSlice method to optimize point writing for offline points
added a new ` LocaleRandomizer ` class and its corresponding tests to implement and test locale randomization functionality
tika - 3353 -- mime type application / x - font - printer - metric and application / x - font - type1 be now
* add 9.0 . x to presets for jdk 9 +
added ` AccessController . doPrivileged ( ` run0 ( ) ` ) ` to ` TCPTransport . java ` to ensure thread safety during privileged
do n ' t set read timeout when use blocking
updated the default initial delay for the WATCHER _ INITIAL _ DELAY from 120 to 600 to improve the responsiveness of the metrics processing
mondrian : fix typo in exception message
fix issue with custom date format
refactor priority generation logic to utilize a new ` generatePriority ` method to improve code maintainability and streamline priority generation process
added a maximum size limit for scalar replacement options in ClassTransformer to ensure that scalar replacement logic does not exceed predefined length constraints
added DATE _ TAPEN to the projection and sorting order constants in MediaProvider . java to enhance media retrieval accuracy for better data management
updated image drawing calculations in TexturePacker2 . java to correct rectangle dimensions to ensure correct image dimensions are used for rendering
added WebSocketUpgradeFilter integration and refactored filter configuration in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve
added shutdown calls for validateSignService , transactionsHandlePool , and nodePersistTaskTimer to ensure proper resource management and prevent memory leaks
added RawJsonRequestBody annotation processing and corresponding test cases in Echo . java and JaxrsSwaggerGeneratorContext . java to support raw JSON
added a new method ` newTarget ` to create a ` Target ` from a ` targetType ` and ` TargetExtension ` to facilitate the creation
updated the return statement in BeanContainer to create an ArrayList from entries and added unit tests for BeanContainer functionality to ensure correct behavior of the toList method
hbase - 20583 fix typo in test metric
camel - 16400 : fixed memory leak in cachedoutputstream
properly set deviceid in teltonika protocol ( fix # 468 )
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( buildFile . toFile ( ) , Charsets . UTF
added a check for null operators in JCAssignOp and created a new Test class with an anonymous OperatorSymbol to ensure proper handling of operator assignments and
added a boolean flag ` enableAccountHandling ` and conditionally calls ` onCreate ` in ` BaseActivity ` to control account handling behavior during activity lifecycle
use heuristically find main connect component to avoid illegalargumentexception
updated DrillViewTable to accept a path parameter in the constructor and modified WorkspaceSchemaFactory to utilize this parameter to enhance flexibility
updated PooledByteBufAllocatorL to include new configuration parameters for buffer allocator settings to enhance flexibility and performance options for buffer management
updated array type handling in ObjectInputStream from double [ ] to short [ ] and added a new CloneArray class for testing object serialization to ensure
added a new configuration variable for the number of low - level IO thread pool size to enhance flexibility by allowing configurable thread pool sizes
re - initialize sun . security . ssl . debug for jdk11 +
added bounds checking for latitude and longitude in LatLonGrid . java and updated test cases in TestLatLonGrid . java to improve robustness
updated method parameters from ` from ` to ` driver ` in ` ExpectedConditions . java ` and added new methods to handle visibility of elements with
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its logic to handle overwrite operations to enhance file management functionality
added a test for retrieving the enclosing object of an inner class in ReflectorTest . java to ensure correctness of the inner class ' s outer class reference
updated the default value for " auto _ generate _ android _ facet _ sources " from false to true in the buckConfig and added it to the
updated hub communication failure messages to include the change set ID and author details to improve clarity of error messages for better debugging
added properties field and related getter / setter methods to Link class , and implemented a test for overriding properties in QuickLinksConfigurationModuleTest to ensure
removed duplicate ` @ EqualsAndHashCode ` annotations and added an overridden ` toString ` method in ` YamlConfigFileDTO ` to improve code clarity and provide
fix generic issue with awaitableserverclientcallconfiguration
refactor ` forName ` method signatures and introduce ` CallerSensitiveAdapter ` for improvedClassLoader handling to enhance class loading flexibility and
updated import statements and modified client URI URI handling in RequestItemRepositoryIT . java to improve code clarity and ensure proper authentication token retrieval
updated ThreadPoolExecutor to ThreadPoolExecutorEx and changed LinkedBlockingQueue to LinkedBlockingQueueEx to enhance thread management capabilities and improve performance
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
refactor time - related classes to use J Chronic for improved readability and reusability to enhance code maintainability and
fix miss spark _ isolated and spark _ recessive recipe in modbanners .
updated the ` Bitstamp ` and ` CampBX ` service classes to use ` exchangeSpecification . getUri ( ) ` instead of `
consolidated multiple print statements into a single string to improve code readability and reduce verbosity
camel - kafka : enable sync auto commit by default
removed lock handling in Liquibase and updated LoggingExecutor to ensure proper management of database change log locks
updated @ SuppressWarnings annotation to include " rawtypes " and added deprecation warnings in AuthorizeTagCustomGrantedAuthorityTests to enhance type safety and
remove unnecessary ' this ' from synchronized block
camel - 16400 : camel - spring - boot - add support for generate spring - boot auto configuration file
updated the currency pair used in the ticker adaptation process to ensure the correct currency symbol is used for ticker adaptation
( chore ) camel - core : fix checkstyle violation
updated the way testId is set by using System property instead of generating a UUID to improve flexibility in managing test IDs
added synchronization to date and number format parsing in DefaultJobParametersConverter . java to ensure thread safety when parsing date and number formats concurrently
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated height scale setting to use a variable instead of a hardcoded value to improve flexibility and maintainability of height map configuration
sec - 162 : remove string . equals check from securityconfig . equals
ninja : dump - partition - id default to false
added UTXO testing functionality for TronTXOutput and TronTXOutputs in UTXOSetTest . java to ensure correct UTXO
[ java ] unused local variable no longer report unused variable name
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for overriding previous restart parameters in JsrJobOperator to ensure correct behavior of job restart properties
added a method ` isDisallowBatchOnCascade ( ) ` to the ` DatabasePlatform ` class to provide a way to disallow operations on casc
removed redundant variable declaration for principal in JaasAuthenticationHandler . java to streamline code and improve readability
refactor core shutdown logic to use an executor service for better management of SolrCores to improve resource cleanup and error handling during core closure
added null check and visibility condition for mActionsView in RecentsView . java to ensure proper visibility behavior when mActionsView is not initialized
refactor parameter handling in RunIdIncrementer . java to improve readability and reduce potential null pointer exceptions
refactor BasicEntity and TestUtil classes to improve code organization and readability
added unit tests for ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to ensure correct number and size of matched devices in the ` Schema
( chore ) camel - metrics : log common metric exception in case of metric invocation fails
added a new ` EigenvectorCentralityBuilder ` class and modified ` EigenvectorCentrality . java ` to include a conditional check for ` max `
updated registry port handling and improved formatting in LookupIPv6 . java to enhance port management and formatting for better readability
store the ifc product oid in the geometryinfo and use it to set the color
updated the amplifier setting in BlockEntityBeacon . java to correct the placement of the beacon element
refactor TubeCalc class implementation to improve performance and maintainability of the code
disable http / 2 health - check by default ( # 4978 )
validator : fix problem with inherited class
updated annotations and added a timeout for the main method to improve test reliability and ensure proper synchronization
refactor the scheduler initialization to use a daemon thread factory for better thread management to ensure that the executor is managed by the main method completion handler
fix crash when the lexicon have no version number .
added reflection access check in JavaAdapterFactory to ensure proper access control for reflection types
try to fix the ci error of camel - mina
updated initIOContext method to include an additional RecordReader parameter to enhance context initialization for better handling of record readers
deleted ClassLoaderHolder . java and LoaderManager . java files to streamline the codebase by removing unnecessary class definitions to improve maintainability
added a method to check if the configuration changes and modified file removal logic to enhance file existence checks and improve code clarity
added try - catch blocks around registerSessionCallback and unregisterSessionCallback methods to handle potential exceptions during execution
updated index creation paths in TestBackwardsCompatibility . java to ensure compatibility with the latest version of index configurations
[ hotfix ] [ runtime ] add akkarpcserviceutils . createandstart method to akkarpcserviceutils
set mapreduce . map . maxattempts to 3 if not retry .
pdfbox - 4892 : remove unneeded nullcheck , a suggest by valerybokov
added a new test class SslConnectionTest for SSL connections to ensure proper handling of SSL connections in the application
added validation for address family type in InetAddress and NetworkInterface classes to ensure only valid address family types are accepted to avoid runtime errors
added a test for date serialization in a collection using Gson to ensure proper serialization of date objects in a collection format
refactor Message class to improve code readability and maintainability
nifi - 1978 added debug log to putdatabaserecord to help figure why it ' s need
adjusted the loop condition in TableOutput . java to ensure proper handling of text output based on the current width
pdfbox - 4892 : remove unneeded nullcheck , a suggest by valerybokov
make va _ format _ string _ extra _ arguments _ passed less noisy by default
[ java ] localvariablecouldbefinal : add property to ignore non - final loop variable .
added PDF version 1.5 and full compression settings in PDFExporter and updated sample file to use Java . gexf to enhance PDF output quality
added unit tests for the LdapUserDetailsMapper class to ensure correct mapping of role attribute values to authorities
make ldap read timeout configurable
updated multiple TestDescription . java files to improve code organization and maintainability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and readability
rename the variable ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the variable to avoid
added a condition to check if the state handler is invalidated along with the existing gesture state check to ensure that the gesture handling logic only proceeds when the
updated maximum distance for folder creation and removed unused variables to optimize memory usage and improve code clarity
updated import statements and modified conditional checks in OpicConfigConfigSource . java to enhance configuration handling and improve code clarity
refactor Testjsig class to improve code readability and maintainability
fix mana pack not take mana into account
regenerate client with updated copyright year ( # 4382 )
( chore ) camel - p11 : fix serialversionuid violation
refactor validation logic for tsFile in DataRegion . java to improve clarity and maintainability to ensure proper handling of empty and non - existent
added two new Java files , Switch21 . java and Switch19 . java , implementing switch pattern matching , handling primitive types , and guard patterns
updated error message in ComparableSubjectTest to use test class names instead of actual arguments to improve clarity and consistency in error reporting for conversion failures
[ bug - 662144 ] set xml standalone flag to true in streamhelper
updated Int2ObjectCache . java to improve capacity validation and enhance string representation to ensure proper handling of large sets and enhance string representation
removed sorting of security filter chains in WebSecurityConfiguration and added tests for ordering filter chains in WebSecurityConfigurationTests to ensure security filter chains are
updated the order type from TimeInForce . GTC to null in BinanceTradeService . java to align with the latest market API requirements
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and improve random value generation logic to enhance extensibility and ensure minimum and maximum range
updated KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper handling of
( chore ) camel - jbang : fix camel - jbang documentation for activemqcomponent
added error handling for field access in SourceUtils and created a new test class TestGetBound to improve robustness by providing a fallback for field access errors
refactor filter builders in LeafFilterFactory to use a dedicated method for Parquet type conversions to improve code readability and maintainability by
modified the logic to conditionally handle the original artifact name by adding a check for the SCOPED _ TARGET _ BEAN _ PREFIX before processing it
wait for ssl cert to be up to date before download it to trust store
refactor default value retrieval logic in ` mmm Config . java ` and add ` DnsFallback . java ` file to improve code clarity
ww - 4073 add cause when write tag
changed the type of the ` success ` field from ` boolean ` to ` String ` for the ` url ` field in the ` DepositAddress `
refactor the drop method to use a try - finally block for resource cleanup to ensure proper cleanup of resources to prevent memory leaks
removed " address " and " phone " scopes from CommonOAuth2Provider and its tests to simplify the OAuth2 provider ' s scopes configuration
replace direct assignment of the _ started status with a new Start class to monitor the starting state of the selector
[ wled ] add support for pin color in wled binding ( # 1892 )
replaced the ` isValidCaller ` method with a ` Set < String > VALID _ CALLERS ` constant for improved clarity to enhance code read
added a new caseJSRInst method to InstSwitch . java to enable handling of JSRInst cases
subscriptionactivatesubscriber now use transactionmanager instead of cm
refactor database update and query construction in DBMSProcessor . java to improve code readability and enhance error handling for SQL execution
remove elevation setting for lollipop and above to simplify elevation handling for contact items
renamed ` typeInformation ` to ` identifier ` for clarity to improve code readability and maintainability by using a more descriptive variable name
refactor file reading and writing operations to use AccessController for enhanced security to enhance security by ensuring operations are restricted to privileged actions
refactor Groovy parser and printer to improve initialization of parameters and handle access operators to enhance code clarity and support additional binary operations in
updated warning message format in MetaDataFetcher . java to provide more detailed error context for better debugging
updated character reading and compression logic in RecordInputStream , UnicodeString , and added a new test for UML at read time in TestUnicodeWorkbook to
added a test for downloading files with non - Norway characters in the name to ensure that the downloaded file name includes the correct character encoding
replaced RuntimeException with a custom CancellationException in AsyncResource . java and added isCancelled ( ) and isCancelled ( Throwable t ) methods to
fix potential npe in timedmemberstatefactory
refactor MongoTemplateTests to improve dependency injection and add a new test for object removal from an explicit collection to enhance test clarity and ensure proper
update copyright year to match last edit
updated the format of the error message to replace line breaks with platform - independent line separators to improve readability and consistency of error messages
added a flag for clearing the all button and refactored scroll handling in RecentsView and PagedView to improve scroll behavior to enhance
refactor HiveIcebergMetaHook to use a constant for common HMS properties and streamline parameter handling to improve code readability and maintain
refactor error handling to use a new method for checking addressInUse to improve code readability and maintainability by centralizing address checking logic
added a command line argument to specify the test class path in TestNestmateAttr . java to ensure proper class loading for the test environment
updated SchemaTextDetailType from VERBOSE to verbose _ schema to improve clarity and usability of schema text type
fix some javadoc warning and code smell
add support for nested use savepoint in db . save ( ) and db . begin ( )
change fetchSize from an integer to a ThreadLocal < Integer > across multiple classes to improve thread safety and prevent memory leaks
[ java ] remove unnecessary idle strategy from embeddedpingpong .
[ type : fix ] fix blockinghttpclient introspection issue
added HDP _ VERSION system property handling in SliderAppsViewControllerImpl . java to support HDP versioning based on configuration properties
refactor JavacProcessingEnvironment to introduce loaderClass , jusl , and loader , along with a close method for better resource management to enhance
added deep cloning functionality and modified parameter handling in ParameterizedRobolectricTestRunner and introduced DeepCloner class to enhance object cloning to improve
added binding for JETTY _ SHOW _ STACKTRACE annotation in ResourceBase . java to disable stack trace functionality in the application
added a check to return null for object types in NativeObject . java to ensure proper handling of object types and prevent potential errors
replaced occurrences of ` OopField ` with ` OopField ` and updated well - known class names in ` SystemDictionary . java `
updated serialization method to handle both RSAPublicKey and ECPublicKey in JwkKeyListView . java and modified JsonWebKeyEndpoint . java
[ gr - 27954 ] use onlywritablebootimageheap option only when spawnisolates be true .
updated MBeanServerMXBeanUnsupportedTest . java to improve test coverage for MBean interactions
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and improve code clarity
renamed the Validator ( ) method to Validator ( ) and implemented the getOwnerAddress ( ) method in multiple actuator classes to enhance
add an example program that show how to use a broker service with a queue
zcount , zrangebyleader should return - inf when min or max < 1.0
[ corenLP ] update protobuf annotation serializers to handle empty edge
[ java ] remove an item from the asynctreamedid set when remove an active correlationid .
added conflict saving functionality in FileDataStorageManager and FileDownloader , and invoked it in FileUploader and FileUploader classes to ensure files are not processed as
refactor code to use generics for type safety in ExecutionContext and related classes to enhance code clarity and maintainability by specifying generic types
replaced the usage of StrUtils with direct calls to splitFileNames in multiple factory classes to simplify code and improve maintainability by reducing dependencies on
added Oracle and MySQL specific driver properties to driverProperties to enable remarks reporting for Oracle and MySQL connections
updated the ` MockMethodInterceptor ` instantiation to include a handler parameter and added a serialVersionUID to address deprecation warnings in ` PartialMockingWithConstructorUsing
replaced the use of ` Date . getTime ( ) ` with ` System . currentTimeMillis ( ) ` for time calculations in ` FileChangedExclusiveReadLock
[ hotfix ] [ sql - client ] wrap classloader in local execution context .
added an onBufferChanged method to TerminalTextViewOverlay for notifying when the buffer changes to improve responsiveness and user experience during buffer changes
simonstewart : if pid do n ' t contain a dot , add it to the service pid
refactor freeze action logic to differentiate between TVM freeze and non - TVM freeze checks to improve clarity and maintainability of the code
added an ` _ insecure ` boolean field and corresponding getter and setter methods to ` TlsConfig ` , and modified ` TlsUtils ` to handle in
refactor code to streamline source and class path handling in JavadocTool . java and add a new class T7091528 . java
updated the loop variable and added an ` EdgeColumnsGDF ` with an ` edgeIdColumn ` to enhance data handling in the ` Exporter
added cascade option to the OneToOne relationship in DefaultUserInfo . java to ensure that associations with the DefaultAddress entity are also persisted
improve equal and hashcode performance of message
updated character encoding in the response body for the ISO - 8859 - 1 HTTP header to ensure compatibility with Unicode escape sequences
[ hotfix ] [ rocksdb ] remove unused method in rocksdbserializercompositekeybuilder
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified ` SubjectDomainCombiner ` to use this method for retrieving static permissions to
fix brewery , elven trade , and flower not be able to use recipe . close # 388
added parsing logic to handle multiple parentheses in the parser to ensure proper parsing of input with parentheses
show alert dialog on connection error
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to check for content type validation to ensure proper handling of
fix integer overflow in nodebitmap .
refactor imports in ImportLayoutStyle . java to improve code organization and readability
refactor ConsoleUIService to replace ` gitBashConfigValue ` with ` useStdIn ` and introduce ` TERM _ PROGRAM
refactor ShadowAccountManagerTest to use TestAccountManagerCallback instead of mocking AccountManagerCallback to improve code readability and maintainability by
do n ' t cache enclosing type in an analysistype , it ' s read - only
renamed methods in Pairs and InPairsExpression for consistency and clarity to improve code readability and maintainability
nifi - 1978 remove unnecessary set timeout from putallcallable
[ rip - 10 ] fix npe in mqclientinstance when consumer be empty or not
[ java ] tidy up code and add sourceidentity .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface with a toolbar presenter to provide a
camel - 16400 : dynamic router should use reactive engine to improve performance .
updated AggregateItemReaderTests to use JUnit 4 annotations and removed TestCase inheritance to improve test structure and leverage JUnit 4 features
updated the constructor of Object $ { valueTypeCap } to use a parameterized type to enhance type safety in the Procedure class
added functionality to retrieve and display the number of edits from the Wikidata data source to enhance user experience by providing insights into the
added a validation check for the length in OfflineSorter . java to ensure the length is within the valid range of Short . MAX _ VALUE to prevent
do n ' t collect ` ` absolute ' ' bug if we saw them
renamed multiple dataset classes for consistency and clarity to improve code readability and maintainability
updated the error message for InvalidTopologyTemplateException to include acceptable credentials to enhance clarity in error reporting for better debugging
updated the random value assignment logic in TestVectorUtil . java to ensure the vector ' s value is set to a fixed value within the specified range
changed the return type of the compareBy method from int to long and modified the comparison logic to improve performance and accuracy of date comparisons
added SSL property handling in TestUtil . java and updated assertions in PGPropertyTest . java to enable SSL configuration to enhance security by allowing secure connections
enable safebrowsing by default and add test for harmful window file downloads
added null checks before setting flight configuration in BaseMotorMount and RecoveryDevice to avoid potential NullPointerExceptions when oldConfig is null
added a condition to exclude transcoding in DLNAResource based on configuration settings
updated table diff logic to handle empty lists and added a new test for empty lists to improve robustness and error handling for table diff scenarios
added a custom ignore tag to the RobustJavaMethodParser to allow removal of elements based on specific criteria
optimistic locking : do n ' t throw exception on version change
resolve issue with @ configurationproperties ( parent = ' ' other ' ' ) in parent configurationproperties
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and refactored its constructor to improve layout management to enhance user experience by
deleted the ClusterNodeInfo . java file to the functionality was no longer needed in the project
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug print statements for standard and legacy cipher suites in ServerHandshaker . java to enhance debugging capabilities for handshake operations
refactor template selection logic in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to improve handling of single and multiple
added a check to prevent duplicate node IDs with labels in ImportContainerImpl to enhance error handling and provide user feedback when duplicates are encountered
added a new file R2303044ListSelection . java for list selection functionality to test the selection behavior of a list item in a UI component
[ java ] : remove unused correlation id from publicationregistration to avoid duplicate creation .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to validate the consistency of property names in ` StepScopePlaceholderIntegrationTests ` to ensure that
updated row count computation to use a new list to improve clarity and maintainability of row count computation logic
updated path handling and parameter management in SpringBootDocBuildTemplate . java to improve clarity and functionality of API method documentation generation
make logger final and remove unnecessary usage of class . getname ( ) .
updated DistBuildSlaveExecutor to use CachingBuildEngineDelegate and LocalCachingBuildEngineDelegate instead of DistBuildCachingEngineDelegate to enhance caching efficiency
improve error message when parse fails
added a conditional check for DEBUG mode before logging the message in WidgetsModel . java to ensure logging only occurs when DEBUG is enabled to improve performance by
refactor Console and Scanner classes to improve code readability and maintainability
simplified the calculation of numTerms in SimilarityBase . java and added a new test case for discount overlaps in TestSimilarityBase . java to improve
replaced direct calls to ` mailSender . send ( aryEq ( items ) ) ` with reflection - based method calls for sending messages to en
added new exit and quit methods with corresponding properties to Global . java and removed the old quit method from ScriptingFunctions . java to streamline the code
corrected variable scope in LoanBrokerGateway and LoanBrokerSharkDetectorDemo classes to ensure proper resource management by closing the application context
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming
[ amazonechocontrol ] fix nullpointerexception in the vmware web service request context
swapped the order of the authority checks in the ResinAcegiAuthenticatorTests to ensure the assertions correctly reflect the expected role values
eckey : use fixed size to store r and s in big endian
changed the property key for disabled mod lists from " fml . disabledMods " to " fml . modStates " to accurately reflect the
removed unused account selection variables and refactored related dialog logic in ReceiveExternalFilesActivity . java to simplify account selection handling and improve code cl
[ hotfix ] [ test ] improve the exception message of collectsink . java
throw exception if unexpected result return empty simulation result
updated JSON reading logic in TexturePackerFileProcessor . java to handle empty JSON files gracefully to avoid null pointer exceptions
removed conditional check for null data source and JNDI in PooledConnection . java to simplify the code and improve readability
updated allocation values and adjusted memory usage in TestRefprocSanity . java to optimize memory usage and improve data handling efficiency
fix npe in editorconsole when there be no currentconsole
set refresh delay to 100ms for kinesis connector
replaced AlertDialog dialogs with a new method ` showInfoAlert ` for displaying media detail information to improve code readability and maintainability by
updated test method to include a package parameter to enhance test flexibility by allowing package - specific configurations
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 and improved error message formatting to ensure compatibility
consolidated import statements and added a method to check if a dependency is provided to improve code readability and enhance dependency resolution logic
added a set to manage ZipFileInputStream instances and implemented cleanup logic to ensure proper resource management and avoid potential memory leaks
rename DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in terminology
added logic to run ` runActive ` or ` runIdle ` based on the presence of ` keyRanges ` to ensure proper handling of active source context
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " to ensure consistency and accuracy in method naming
replaced ` findAny ( ) ` method with ` findFirst ( ) ` method in ` AnnotatedDelegate ` and ` getAnnotations ( Class < T
added support for additional architectures ( ppc64 and ppc64le ) in Bits and ByteArrayAccess classes to enhance compatibility with additional platforms
updated the RuntimeException message to include the link to the GitHub issue to provide guidance on the associated issue in the documentation
use long . max _ value instead of minutes for timeout
( chore ) camel - datedatetime : replace deprecated date class with java . time api
refactor BytesRef class implementation to improve code readability and maintainability
added a toast message to inform users that YouTube Player doesn ' t work on Lollipop yet to improve user experience by waiting for an update
added checks for unterminated dollar quotes , string literals , and block comments in the SQL parser to improve error handling and provide clearer feedback
only send vibration when there be a vibrator .
updated table border styling and modified background color assignment logic in DotRenderer . java to improve visual consistency and clarity of primary key backgrounds
added a method to check if a configuration parameter is encoded and implemented the corresponding method in HiveConf to enhance handling of encoded parameters in the SetProcessor
pdfbox - 4892 : catch all possible exception , a suggest by valerybokov
refactor X509Certificate class implementation to improve code readability and maintainability
fix wavefront uri issue ( # 3903 )
refactor ` TimeLineCursorAdapter ` and ` NetworkedCacheableImageView ` to utilize ` NetworkedCacheableImageView ` for image
removed unused parameters from LauncherAnimUtils . ofFloat calls across multiple files to simplify code and improve readability
updated controllers version references in DependencyBank . java and added new constants in BuildScriptHelper . java to ensure compatibility with the new controllers version and
updated LaunchedURLClassLoader . java file to improve URL class loading functionality
updated the database health indicator to use DataAccessUtils for query handling and added validation for single result set column count to improve compatibility with JDBC queries and
add nocache header to logout page
updated the warning message formatting to use Locale . ENGLISH to ensure consistent formatting of the warning message across different locales
refactor SolrQueryParser constructor to accept an Analyzer parameter to enhance flexibility by allowing customizable query analysis options
update copyright year from 2014 - 2016 to 2014 - 2017 for several Java files to accurately reflect the licensing standard for users
removed redundant semicolon in MainTest . java to improve code readability and maintainability
pdfbox - 4892 : fix typo find by codespell on fossies . org
added handling for VoidColumnVector in VectorizedRowBatch to ensure proper size allocation for VoidColumnVector instances
fix ( sql ) : use request name instead of template name
removed unnecessary type matching logic in AbstractConfig . java to streamline configuration addition process
[ java ] add the ability to offer vector to a publication in the session .
rename methods related to XForwardedRemoteAddressResolver to improve clarity and consistency in naming conventions
only build bootstrap static block if there be annotation .
hbase - 2593 tabledescriptorchecker should use tabledescriptorbuilder to get max file size and mem store size
updated commit list filling logic to use requestedCommits instead of maxCommits to ensure correct number of commits accurately
added ` InvocationTargetException ` to method signatures in ` main ` and ` run ` methods to handle potential ` InvocationTargetException ` to improve error handling and provide
added a static final string ` BUILD _ ID ` to ` BuildInfo ` and implemented a method to populate it in ` CachingBuildEngine
removed unused imports for TxInputUtil and TxOutputUtil to clean up the code and improve maintainability
fix race condition when markascompleted be true .
added import for TezConfiguration and utilized it in copyInto method to enhance configuration management for the Tez project
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerExceptions during key verification
simplified conditional structure in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check before stopping and forgetting recent sounds in OpenALAudio . java to prevent potential NullPointerExceptions when stopping recent sounds
fix : invalidate state and other operation with discontinuity only once
added DecimalFormat for various number tick units in NumberAxis . java to enhance precision of number representation in the application
refactor TargetGraphAndBuildTargets usage by replacing builder method with factory method to improve code readability and maintainability
removed the ` IndexFileNameFilter ` class and simplified file checks in ` IndexFileDeleter . java ` to streamline code and improve readability
add a config option to bypass the texture stitching for every entity ' s collision bounding box
added a compression level parameter to ApkBuilder and SignedJarBuilder classes to enhance certificate compression control during the build process
added a test method to verify that static fields are included in a JAR file to ensure that static fields are properly included in the generated Java files
added support for the BYTES data type in MetricFieldSpec and related classes to enhance metric handling by allowing retrieval of byte data values
updated string builder usage and formatting in multiple test classes to improve readability and consistency of error messages
replaced direct call to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` and removed unnecessary super ( ) call in ` K
added cache management functionality to ` SpringDataJPAJoinFetchPaginationTest ` , ` SpringDataJPAJoinFetchPaginationConfiguration ` , `
the pronunciationmodel now support locale - specific property .
added a null post body check in SimpleHttp and updated related test cases in TestHttpPlugin to ensure proper handling of empty post bodies and en
added dispatcher integration with ClientSideSlb and its test to ensure proper shutdown of the executor service for better resource management
modified texture region manipulation to account for flipping behavior to ensure correct vertical and horizontal placement of texture regions
improve error message when discovery strategy property be miss
changed the type of contextPath from final to non - final and added a null check to ensure contextPath defaults to " NA " when null
[ drools - 759 ] return empty list instead of null when class reload fails
added SerializationHeader for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and defined it in SerializationHeader . java to encapsulate
added functionality to handle both ` prefix _ header ` and ` precompiled _ header ` arguments in the C++ source rule to enhance flex
replaced WeakReference with a custom AccWeakReference for image updates using privileged actions to enhance security by ensuring privileged access control during image updates
updated access modifier of findNextIndex method and modified key removal logic in OrderedSet . java to enhance encapsulation and improve code clarity
set isDirect to true in VertexBufferObject . java to ensure correct initialization of isDirect variable
fix for ticket : 262 -- the patch provide in my last commit .
modified the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods in ` Actor ` and ` Group ` classes to
pdfbox - 5764 : fix off - by - one error , a suggest by valerybokov
added null check before removing the close hook to prevent potential NullPointerException when context is null
updated border spacing and scaling logic in CellLayout and DeviceProfile classes to improve layout consistency and responsiveness based on folder type
refactor valueNumeric parsing to use a new ValueNumeric class to improve code clarity and maintainability by centralizing numeric value handling
modified the authentication logic to check if the response is deferred before returning a failed authentication attempt to enhance security by preventing unnecessary attempt attempts
updated argument parsing logic in StartArgs . java to improve clarity and specificity of command - line options
added a default partition value and updated dynamic part value retrieval logic in DynamicPartitionFileRecordWriterContainer . java to ensure the application can handle null partition values
added nullability annotations to operatorFactory and enhanced null checks in multiple classes to improve code robustness and prevent potential NullPointerExceptions
updated the return statements in DefaultArtifact . java to account for classifier in conflict ID and artifact ID formatting to ensure correct concatenation of version and type information
camel - 15836 : camel - kafka : do n ' t call kafkaconsumer . subscribe twice .
improve error message when annotationsubstitutionprocessor can not be find
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
doc : [ doc ] fix docstring formatting .
increased the expectedMessageCount and loop iterations based on the number of concurrent threads in LumberjackMultiThreadTest to accommodate varying concurrency requirements to
fix npe when move player to dead state .
refactor Exchange class to improve code readability and maintainability
api : updateuser api doc update apikey and secretkey
replaced switch - case statements with if - else conditions for MfaProvider , IdleTimer , and JdbcMfaProviderProvisioning classes to improve
refactor AbstractMetaDataExportMojo class structure to improve code readability and maintainability
added SQL integrity constraint violation handling in Hive to ensure proper error messaging for dropping tables that are used by multiple materialized views
corrected the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency and accuracy in property naming
added a new file ` RoboExecutorService . java ` in the ` org . robolectric . android . util . concurrent ` package to
added checks for group root and subgroup items in GroupTreeView . java to enhance group management functionality to ensure subgroup items are properly added and sorted
updated the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition for checking the path to improve
refactor process builder initialization and argument handling in TestDynamicNumberOfGCThreads . java to improve clarity and functionality to enhance test reliability
updated methods in CxxPlatforms and KnownBuildRuleTypes to return ImmutableSet instead of ImmutableFlavor to enhance flexibility in handling host fla
updated SQL statement construction to incorporate dynamic parameter handling to enhance flexibility in creating tables with optional parameters
added alpha transparency to the chat background color in ChatViewerFragment to improve the visual consistency of the chat background
test : migrate ctiteratortest to junit 5 ( # 4382 )
added clear calls for token and result in various tokenizer classes to ensure proper resource management and prevent potential memory leaks
add a test to avoid crash on block statement
refactor ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to simplify generic type parameters and enhance error handling to provide cle
danielwagnerhall : do n ' t hardcode ` ` link = ' ' a valid locator for the selenium emulation
ww - 4079 fixed numberformatexception in stringconverter
remove usage of uow from aggregatelifecycle . getcurrentscope ( ) . no longer need .
updated touchable insets to use TUCHABLE _ INSETS _ REGION instead of TUCHABLE _ INSETS _ CONTENT to improve
removed the condition checking for the ' ~ ' character in the FencedCodeBlockParser to simplify the code by eliminating unnecessary checks
added socketTimeout property handling to manage socket read timeouts across multiple classes to enhance socket timeout configuration flexibility and improve error handling
added a delay of 500 milliseconds in ElementAttributeTest . java to introduce stability by preventing spurious interruptions during execution
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of character encoding during HTTP requests
refactor List class to improve code readability and maintainability
added a new constructor to AsyncFileImpl that accepts URI paths and options to enhance error handling by providing more specific context for asynchronous file operations
added API annotations to ` CucumberEngineExecutionContext ` and ` CucumberTestEngine ` classes to indicate they are in a stable status to ensure
nuage vsp : fix npe and return empty list instead of null
rename ` retryUploads ` method to ` retryFailedUploads ` across multiple classes to improve clarity and consistency in handling failed uploads
removed Java version checks and directly generated class byte generation to simplify code and improve maintainability by using the class file version
fix for error - prone warning
add a method to remove all header from the asynchttpclient to allow for reuse
replaced Vector with ArrayList for handling command - line arguments to improve performance and reduce memory usage
updated the default value of the DEFAULT _ GRID _ COLUMN constant from 4.0 f to 3.0 f to improve visual consistency by reducing
added a condition to check if ` ! forViewCreation ` is false when ` hasTableDefined ( ) ` is true to ensure that view creation logic
updated datePattern regex and refactored assertions in TestHS2HttpServer . java for improved clarity to enhance readability and maintainability
ignore exception in graphprinter . tostring ( ) if graph dump fails
simonstewart : make the selenium - backedselenium - backedselenium work in ie too
fix off - by - one error in byteblockpool . nextbuffer ( )
changed the visibility of ` firstEncoder ` and ` secondEncoder ` from static to instance variables and updated string formatting to use ` Locale . ENGLISH
added exception handling in the transport close method to capture and handle exceptions more effectively
add @ suppresswarnings ( ` ` serial ' ' ) to get rid of serial warning
updated ` OcamlDebugLauncher ` to extend ` AbstractBuildRule ` instead of ` AbstractBuildRuleWithResolver ` to simplify the class hierarchy and
change ' database have change ' message to be more user friendly
added response type validation and access control checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging in NexmoSms
added a validation check for the index to ensure the index is within the bounds of the buffer range
tablemapreduceutil # inittablemapperjob ( byte [ ] , class < ? extends tablemapper > , byte [ ] , byte [ ] ,
removed an unnecessary duplicate call to append in AbstractJRubyMojo . java to streamline code by eliminating redundancy
[ gr - 31467 ] do n ' t throw an exception if a language refers to an internal language .
added deprecation warning and validation for reserved commit duration in ReplicationHandler to ensure compatibility with Solr 7.1 and enforce immutability of commit duration
rename ` cacheVariableName ` to ` cacheForeignKey ` and update references accordingly to improve clarity and consistency in cache variable naming
change eckeypairgenerator to use byte [ ] instead of long
[ flink - 26011 ] [ runtime ] fix restart race condition when job be suspend
replaced singleton instance of ` RotationTouchHelper ` with a direct instantiation to simplify the instantiation process and improve code clarity
[ unifi ] use flatmap instead of filter for port override
updated method parameters and variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity
remove offer from the offerbook if it be already in the list
use constant test protocol instead of hardcoded value
updated mock handling logic to differentiate between specific mock types in MockitoMethodInvocationControl to enhance flexibility in mock interception behavior based on
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple files to accurately associate `
removed import of DisplayUtils and added intent extra for file handling to streamline code by eliminating unused utility imports
added error handling for runtime exceptions and improved file cleanup logic in StoreDirect and StoreWAL classes to enhance robustness by ensuring that compaction
added execution task snapshot retrieval and removed redundant stopSwipePipToHome call to streamline task execution and improve code clarity
added a hidden property to CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to manage command argument visibility to enhance control over command argument
change remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure tests connect to the correct port for testing
[ geos - 10641 ] use the new extension api to access catalog from style group
added permission checks for launcher activities in InstallShortcutReceiver and updated method signatures in Launcher to enhance security by preventing malicious intents
added ` getId ( ) ` and ` setId ( int id ) ` methods to multiple tile classes to ensure consistent mapping of tile IDs across the application
refactor Manager class to improve code readability and maintainability
updated JDBC connection URL to include a version parameter to enable compatibility with newer database versions
added schema and schema inclusion properties to LiquibaseGenerateChangeLogMojo to enhance change log generation to include relevant schemas based on specified criteria
[ ci ] use put instead of putifabsent
[ hotfix ] [ test ] introduce logger for singlebenchmarkrunner exception
removed the final modifier from the doPutRecord method to allow subclasses to override the method functionality
fix crash when search for game folder from home screen
refactor FastCGIProxyServletTest to improve handling of large response content to enhance test coverage for handling large response content scenarios
added a call to start the ReadInteractionsService in MarkReadService . java to launch ReadInteractionsService to enhance interactions functionality
added a conditional check for ` lintClassfile ` before logging warnings for missing annotation methods to ensure warnings are logged only when lintClassfile is true
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48105 - set default port for
retry sslfactory re - init in case of failure during tl re - initialization
updated date format in ObjectMapperProvider to include milliseconds to enhance timestamp precision in JSON output
updated assertion message in SpyingOnRealObjectsTest to clarify the reason for the assertion failure due to mocking a private class to improve
added functionality to conditionally handle line endings based on the context to improve line termination handling in the code
fix nullpointerexception in unpackcontent when parent of file be null
added import statement for DocCollection in TopicStream . java to utilize document collection functionalities in the Solr library
refactor NinjaServletContextTest to use createHttpServletRequestInputStream and add a test for Windows1250 parameter in multipart requests to improve input stream handling
updated properties configuration in AbstractCasEndpointTests . java to include exclusion property to enhance visibility of web exposure settings
added a validation check for the current graph in StatisticsControllerImpl . java to ensure that the current graph is a dynamic graph to prevent runtime errors
do n ' t eagerly create scopeone bean ( # 1388 )
allow to suppress exception when evaluate jsonpath expression
removed an unnecessary line of code in HelixServerStarter . java to streamline the process of creating the ControllerLeaderLocator instance
updated usage message from " java " to " clhsdb " and " hsdb " in CLHSDB . java and HSDB . java to
removed redundant code related to chunk provider configuration in FaultTolerantStepFactoryBean . java and SimpleStepFactoryBean . java to streamline
[ beam - 8470 ] remove write class and deprecate it
updated ShadowAccessibilityManagerTest to use AccessibilityManager instance instead of getters and corrected method names for clarity to improve code readability and
add ` ` flutter usage statistic ' ' to analytics
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` across multiple files to simplify class hierarchy and remove unnecessary dependency on
refactor enum data type helper implementation in PostgreSQLDatabaseConnector and introduce a new PostgreSQLEnumDataTypeHelper class to improve code clarity and
fix log test on window
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( localWork ) ` across multiple files to ensure
added a check for index tables in HiveMetaStoreClient . java to ensure that only index tables are dropped to prevent operations on unsupported operations
added conditional check to update disabled flags in RecentsView based on visibility to ensure that UI elements are disabled when the visibility changes
added a specific highlighter for the shell shell in non - Windows environments to improve syntax highlighting for non - Windows users
make xss _ request _ parameter _ to _ cookie and xss _ request _ parameter _ to _ http _ header tackle differently
replaced ` getPath ( ) . getRawPath ( ) ` with ` getPath ( ) . toString ( ) ` in ` HadoopPinotFS .
added a semicolon to the end of the method call in SelectBox . java to ensure proper syntax for method chaining
change the value of _ metaDataComplete from true to false to update the metadata processing logic to prevent unnecessary processing
updated the ` removeTaskTarget ` method to run in a separate thread and modified bitmap calculation logic in ` ThumbnailSearchResultView ` to improve
added environment variable handling for platform and flavor in JsBundleGenrule to ensure proper environment variable access based on flavor requirements
updated type casting logic in ` mmm Lower . java ` and added a new class ` T6500701 . java ` with a test for list
added tests for handling new line characters in comments and Javadoc to ensure correct formatting of new line characters in import statements
added hubMode configuration in AbstractLiquibaseChangeLogMojo to enable dynamic switching of Liquibase Hub mode based on provided settings
refactor skip policy retrieval in JsrFaultTolerantStepBuilder . java and simplify null check in JsrChunkProcessor . java to improve code
added a check for the existence of the linkDb before adding it to FileInputFormat to handle cases where the linkDb is not available during indexing process
replaced the method lookup for setting the indexer thread pool with a direct reflection call to ` DocumentsWriterPerThreadPool ` to improve performance by directly accessing the
updated the construction of the SMS address string to remove the port number and simplify the URL construction
added a ` copy ` method to the ` MapJobExecutionDao ` class and introduced a test for it in ` MapJobExecutionDaoTests
added a new test class ` DownloadTest ` for downloading PNG files to facilitate testing of PNG file uploads in the application
standardize language normalization in multiple classes to ensure consistent language handling across the codebase
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` for better error handling in the ` GenericUDFRound ` class to improve error mess
add null check for selectedVersion in ManageDependencyTags to ensure proper handling of managed dependency tags to avoid potential NullPointerExceptions
added multiple AntPathRequestMatcher to SecurityConfig to enhance security checks by restricting access to specific paths
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable the test due to instability
do n ' t re - create bean definition writer if it already exist
added an @ Ignore annotation to the HttpClientRedirectTest class to temporarily disable the test due to instability
[ openwebnet ] fix ( openwebnet ) : fix bug in energy handle ( # 4530 )
simplify code by remove unnecessary code
deleted the SunToolkitSubclass . java file to remove obsolete or redundant code related to the SunToolkitSubclass class
replaced the MathUtils import with Matrix4 and added a new method to check for rotation or scaling in DefaultRenderableSorter to improve code readability and maintainability
added a test for registering wrapper handlers before primitive types to ensure type handlers are registered before primitive types are registered in the type handler registry
pdfbox - 4892 : add method to convert alternate colorspace to rgb image , a suggest by valerybokov
updated URLs in CommonsApplication and Utils to use BuildConfig instead of hard - coded constants to improve maintainability and consistency across the codebase
camel health check : added health check for camel - example - http
fix a potential npe in the thorn chakram
added a test for altering a table with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the ALTER TABLE
lucene - 8470 : fix testfunctionquery to not use the optimized offset
removed ID field from MongoRecordReader to clean up unnecessary fields
added disposal methods in YeelightHandlerBase and DeviceBase , and improved connection termination in WifiConnection to ensure proper resource management and
add support for AUTO _ INCREMENT syntax in the parser to enable proper handling of integer values in the database
fix : add inconsistency between informerfactory and secret informer
server : save private template detail in db even if user vm be null
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for improved image size retrieval to enhance code clarity and
removed deprecated constants and fields from LauncherSettings to clean up code and improve maintainability
resolve split - packages : move everything from drools - examples under org . drool
added a new variable ` legendTop ` and updated the offset calculations for the legendTop and legendBottom in ` PieChart . java ` to ensure proper
added a check to return early if the world transform determination is zero to optimize performance by avoiding unnecessary processing when no transformation
add a maryscriptcreator that can be use to generate a script that can be run from a file .
added session attribute for remote host in ListenHTTPServlet to enable tracking of the remote server ' s IP address
added a ` close ( ) ` method call to ` CompactionLogger ` and modified file deletion logic in ` LevelCompactionTsFileManagement . java `
updated attribute references from " xlink : href " to " href " in ComponentDescription . java to align with the intended HTML standards for referencing resources
( chore ) camel - aws2 - s3 : rename private constant for good readability
hbase - 2593 addendum add log for regionserver . isclustershutdown ( ) , and make isclustershutdown ( ) public
None
trim whitespace from active options in the configuration to ensure valid options are processed without leading or trailing spaces
added depth preference handling to enable or disable wallpaper zoom based on user preferences
updated the assertion in OverseerTest . java to check for successful success count to ensure accurate validation of the OverseerStats
removed the ` getKernelVersion ` method and simplified the return statement in ` LinuxFileStore . java ` to streamline the code by eliminating
[ hotfix ] fix typo in execconstants
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording for specific test cases
added a method to set scan attributes for paging in ScanUtil and updated usage in TableSnapshotResultIterator to utilize this new method to enhance functionality
added a condition to check if lowRange is less than 100000000000L before assigning it to lowRange to ensure lowRange is valid for processing
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected and modified cache size estimation logic in AsyncWriteCache and WriteCache to
server : fix hostresponse . setzoneid to match the actual uuid
[ zeppelin - 1978 ] change content - type header from application / json to application / x - yml
updated the removal method in ZipFileSystemProvider to use a separate parameter to improve code readability and maintainability
changed the type of the variable ` obj ` from ` Object ` to ` String ` and updated the corresponding logic in ` HttpRequestBuilder . java ` to
increased the polling timeout duration from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 5 ` in ` SoftAutoCommitTest
fix : remove listener from selenide after each test
rename multiple classes related to the dial package to improve clarity and consistency in naming conventions
updated logging statements in SyncQueue . java for consistency to improve code readability and maintainability
update testcontainers / ryuk version to 0.5 . 1
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
do n ' t hardcode the path to the legacy xmllayout module in the clientlaunchprovider since it ' s already available .
[ hotfix ] [ yarn - tests ] fix code style violation in yarnitcase
add miss stats to localmapstatsprovider when data include include other map
deleted the AllTests . java file to the test class is no longer needed in the project
pdfbox - 4892 : append non - breaking and zero - width space char a suggest by valerybokov
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify stack trace behavior to ensure that large stack trace invocations
updated the method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` createRowKeyForMappedProperties (
added a flag ` eventHandled ` to the ` UIText ` class to indicate when a specific event has been handled
deleted the ` Controller . java ` file and renamed ` Weldby ` class to ` WeldModule ` in ` Weldby . java `
ignore capture group in empty check
replaced the direct access to the license key with a protected variable ` liquibaseProLicenseKey ` to improve encapsulation and remove unnecessary logging
mondrian : fix npe when call setmemberreader on a rolap cube that do n ' t have a schemareader
[ gr - 4668 ] add - g option to generate debug information .
mondrian : fix typo in mondrianproperties
added support for friend paths in Kotlinc compilation and related steps to enhance functionality by allowing users to specify friend paths for Kot
added aliases for " BATK " , " BRAH " , and " MAND " in Character . java and modified main method logic
updated equality checks in ExecutionCommand to use string equality instead of = = and added a new method in StageUtils for string to JSON conversion to
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the object for debugging purposes
modified the CSS parsing logic to handle percentages and percentage values correctly to ensure that the function correctly handles percentages and percentage values to prevent parsing errors
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` in ` LocalIndexIT . java ` and modified ` UPS
updated test methods to use ApplicationProvider instead of InstrumentationRegistry to ensure compatibility with the latest application context and improve test reliability
updated toast messages to use localized strings instead of hardcoded strings to improve localization and maintainability of the user interface
removed unnecessary conditions in while loop conditions in RendererUtilities . java and added a new test case in RendererUtilitiesTests . java to simplify code logic
replaced ` Iterator < JsonNode > ` with ` ArrayNode ` for fetching ask and bid data to improve type safety and simplify data retrieval process
added error handling for adding a duplicate column in the database to improve robustness by logging warnings when upgrading from 24 - > 30
remove unnecessary system . err . println ( line )
refactor data size calculations in ConvertJoinMapJoin . java to use a dedicated method for computing online data size to improve code clarity and
updated the ` buildView ` method to accept a ` Context ` parameter and set custom background resources for various UI components to enhance the flexibility and
added authentication support to SecurityMockMvcResultMatchers by introducing assertAuthentication and corresponding test cases to enhance flexibility in authentication validation logic
vpc : vpcid be n ' t set when create a gateway , so set vpcid to null
[ beam - 10955 ] disable flink savepoint test on 1.11
add miss annotation to fix checkstyle issue
added a condition to check if the index is within bounds before processing actions to prevent potential index out of bounds errors
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest bitmex architecture
( stuart lewis ) add integration test for relationship virtual metadata
added null checks for spatial before processing to prevent potential NullPointerExceptions
None
make unsafestorenode and storefieldnode state after state .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure proper
added an assertion to check if any event is present before loading to ensure that the event repository is empty before proceeding with further operations
( chore ) camel - crypto : remove unused parameter
added null key validation in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that a null key is provided to prevent NullPointerExceptions
removed the implementation of the ` setTypeface ` method in ` CodenameOneTextPaint ` to prevent runtime exceptions when setting a typeface
added ` open ` method implementations for AzurePinotFS , AzurePinotFS , LocalPinotFS , and HadoopPinotFS classes to
kristianrosenvold : remove deprecate fail ( string ) method from webdriverrunner
simplified the conditional structure in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to remove the ResultObject class and encapsulate its state directly to simplify the code and improve maintainability by reducing
updated SQL syntax in the CreateTableGeneratorTest to include double quotes around the table name to ensure compatibility with SQL syntax for foreign key references
added a check for filter mode and modified return logic in VectorizationContext . java to handle filter conditions to improve the handling of vector expression evaluation based on
exhaustivesearchphaseconfig : fix typo find by codespell on fossies . org
removed the ReorganizeTableStatement initialization to simplify the code by eliminating unnecessary parameters
updated cluster _ name and cluster _ name references in system properties to use constants from IoTDBStartCheck class to improve code consistency to enhance maintain
improve logging and connection error message .
added support for multiple styles in the style string array to enhance flexibility in style configuration
update schematic reader to use new nbt structure
no # tostring ( ) : fix typo
updated JVM memory settings from 64m to 32m to reduce memory usage during testing
fix ( testng - core ) : data provider should return the number of retry attempt
update return statement to use the bandwidth index instead of the fixed index to ensure accurate data processing
kristianrosenvold : add method selectpopup , deselectpopup and capturenetwork traffic that be not yet implement .
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated the public key details in the ` Resources ` class to
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks to ensure dialog is opaque and not undecorated before setting properties to enhance security by preventing operations on undecorated dialog components
changed the state declaration from non - final to final in DefaultProjectFilesystem . java to enforce immutability of the state variable
refactor Redis connection factory initialization to enhance configuration handling for sentinel and standalone Redis connections
add property to check if a delayed message come from the provider ' s configuration before try to send it to the provider .
replaced the instantiation of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` calls to simplify the code by
replaced CreateShareOperation with a service - based operation in FileOperationsHelper . java and OperationsService . java to streamline the sharing process by
remove unnecessary dependency on jakarta . inject from fieldpropertyinject , add @ inject to fielddefinitioninject
refactor loops to use a variable for build height to improve code readability and maintainability
improve handling of nullpointerexception in smackintegrationtest
tmi - 7 : added support for optional interop subdirs in the exifreader
added support for a new ` ENABLED _ LS ` mode in ` VersionTargetGraphMode ` and modified executor initialization logic in ` VersionedTargetGraphCache
added a condition to check if the child format is a video format before processing to ensure proper handling of video files in both parser and child formats
doc : generate sample code in the java microgenerator ( # 438 )
lwjgl : set lwjgl library path to lwjgl temp dir
added escape parameter handling and updated CSV strategy configuration in CSVRequestHandler . java to enable configurable escape behavior and improve error messaging for invalid parameters
added validation for only the Authorization Code grant type in ClientRegistrations . java and updated corresponding tests in ClientRegistrationsTests . java to ensure
enhanced error messages in ` Throwable ` and ` SuppressedExceptions ` classes to include the original cause and improved cause initialization logic to en
added a new SQL query and modified the OrderedResultIterator constructor to use null as the last parameter in the OrderedResultIterator constructor to ensure proper handling of
added mapping for RSquare in RegressionEvaluator and verified its value in StreamExpressionTest to ensure accurate representation of the RSquare in regression tests
added header extraction from request headers in ThreadContextMDCServletFilter to enhance security by associating requests with their corresponding metadata
refactor code to use a local variable for MapWork instead of casting to MapWork to improve code readability and reduce casting overhead
refactor image retrieval logic in ` PdfJndiReport ` and ` PdfSessionInformationsReport ` to use a dedicated method for
None
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for database
[ bitcode ] add ismethod flag to interop function .
removed redundant sleep statement in AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability
added a new file KernCrash . java that implements a simple text layout with a custom font to demonstrate the use of a Kern
added a fail ( ) statement in LinkedHashTreeMapTest . java to ensure tests are skipped without failing functionality
added a method to retrieve network interface addresses with an optional prefix to enhance network management by including loopback interfaces
make sure that housekeeper be clean up when it be shut down .
fixed - auto switch ha can get stick in infinite loop
refactor assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` for testing database interactions with a tree map to ensure proper functionality and error handling of database operations
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and added error handling for asynchronous
fix max age validation for today ' s date
added Grbl lookups for " alarm " and " error " responses and modified command completion logic to use processed error code instead of response to improve error
modify the return statement to return a specific string based on the number of screens to provide a fallback label when there are no screens available
removed the count parameter from the getTrades method and related calls to simplify the method signature and eliminate unnecessary complexity
updated ConsoleReader to include ANSI stripping and modified index calculation in MemoryHistory to enhance input handling and ensure correct index bounds during history processing
updated the path for the JDK file in the JavaBuild class to ensure correct identification of the JDK folder structure
refactor code to replace calls to ` getDescription ( ) . getBuildRuleType ( ) ` with direct calls to ` input . getType ( ) `
log miss control warning
added a validation check for tolerance in MaximumInscribedCircle . java to ensure that tolerance is positive to prevent potential errors
added methods to create and drop a view in TestUtil . java to enhance functionality for managing view privileges in the database
added checks for stable floating - point and stable double expectations in NaNTest . java to ensure tests are only executed on X86 and improve error handling
added DesktopTaskbarUIController to manage hotseat icons in the taskbar to enhance user experience by providing visual feedback during taskbar lifecycle
fix : sometimes app freeze after cancel search
refactor methods in Files . java to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration ` to use ` Collection ` instead of ` Set `
refactor DomainAwareServicesManager to extend ServicesManager and remove its implementation from ChainingServicesManager to simplify the codebase by removing unnecessary dependencies
add debug log for resource pack generation
chore : update gapic - generator - java version to 2.1 . 0 ( # 2442 )
added two new methods ` grow ( ) ` and ` growY ( ) ` to the Cell class to enable resizing functionality for cell elements
refactor DefaultInputHandler to use generics for key binding maps to improve type safety and simplify key binding logic
resolve intermittent ci failure
replaced long array with byte array and added a memory fail count check in MetricsMemoryTester . java to optimize memory allocation for better performance testing
deleted the JobParametersPrototype . java file to the class is no longer needed for the current implementation
added a securityEnabled flag to the MappingsTable class and updated related methods to incorporate security configuration to enhance data connection handling based on
change references from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC _
change the DUMP _ TO _ FILE constant from true to false to disable the DUMP _ TO _ FILE feature by default
wait for video to be ready before eos timeout
[ java ] : make sure spy be connect when spy be enable .
added a condition to check if output options are enabled in addition to dbInfo to ensure that information is only output when configured
disable ssl by default
updated DOMConverter to include error output options to enhance error handling during DOM processing
refactor assertions in Assert . java to improve code readability and maintainability
[ java ] allow event to be send to other topic .
[ hotfix ] [ test ] fix json serialization of test result summary
[ hotfix ] [ table - planner ] fix typo in sqlgroupedwindowfunction
pdfbox - 4892 : fix typo , a suggest by valerybokov
do n ' t lock native ssl _ context _ set _ timeout in abstractsessioncontext .
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` for clarity and improved readability to
replace CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to utilize AnsiSqlDialect for SQL query processing
change log level from debug to trace for no firmware update handler to improve logging granularity for better debugging
added tests for handling null values in date and timestamp fields to ensure correct retrieval of null values from the database
refactor string concatenation in StringSubject and Subject classes for clarity to improve readability and maintainability of the code
added a test method to verify repository permissions for multiple teams to ensure that the application correctly handles repository permissions for multiple teams
added a new file ` Test7088020 . java ` implementing a method handle test with stack trace handling to facilitate testing of method
refactor audience validation logic to use a HashSet for better organization to improve readability and maintainability of the validation process
refactor cache refresh logic and improve method organization in AbstractDataChangedListener and HttpLongPollingDataChangedListener to enhance code readability and
modified the handling of the stderr output stream to account for null values to improve robustness by avoiding redundant prints when the output stream is null
added a new warning constant SEPARATION _ ORDER and implemented stage activation checks in BasicEventSimulationEngine to enhance warning management for active stages
changed the table configuration parameter from offlineTableConfig to realtimeTableConfig to ensure compatibility with real - time queries
updated the handling of aggregation table split points in PhoenixHBaseAccessor . java and added conditional logic to disable it in UpgradeCatalog240 .
[ hotfix ] fix checkstyle violation in savepointv2 and filestatehandle
added Bluetooth class handling in ShadowBluetoothDevice and ShadowBluetoothDeviceTest to enable testing of Bluetooth device bluetooth class configuration
fix typo in contains method
[ drools - 3663 ] improve error message when a list be empty
removed graphModel . getGraph ( ) . readUnlockAll ( ) method call to simplify code by directly accessing the graph object
updated coreNodeName concatenation syntax to ensure correct concatenation of coreName and coreName
chat : use updatebackpressure to prevent memory leak
fix typo in test comment
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress the use of SimpleText
updated type checks in ` Types . java ` and added a new class ` T7005671 . java ` with multiple elements demonstrating array type casting
updated triangle coordinates in DelaunayTriangulator and changed test class name from EarClippingTriangulatorTest to DelaunayTriang
added ` @ Override ` annotation to multiple classes in the codebase to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet construction to use builder pattern to improve code readability and maintainability
improve performance of stack overflow check
added shadow methods for ShadowSQLiteDatabase and ContentValues in Robolectric tests to enhance testing capabilities for SQLiteDatabase interactions
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java ` and added a new
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` for comparison logic in ` BKDWriter . java ` to utilize a custom
updated Locale class to incorporate script handling and default locale initialization to enhance locale management by allowing dynamic language and variant properties
replace mIconCurrentTextAlpha with mIconLastSetTextAlpha to reflect the last set text alpha instead of the current text alpha
fix typo in warn message
replaced the test suite class with a call to ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` to streamline test suite initialization and
trim whitespace from token strings in GzipFilter . java and update initialization parameters in GzipFilterDefaultTest . java to ensure compliance with whitespace standards
standardized the assignment of the _ outputType variable to ensure consistent output type handling across the application
updated the regex implementation property from JDK to JONI to align with the latest regex standards for improved functionality
refactor ViewCapture to use Executor and FutureTask instead of Handler and Future to improve concurrency handling and streamline task execution
added support for dfki - pavoque - styles and dfki - pavoque - styles in the client application
added a check to create a parent folder if it does not exist to ensure the folder exists before further operations
updated the default bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " to ensure compatibility with the
fix wrong handler name in camel - in - out
pdfbox - 4892 : remove unused import , a suggest by valerybokov
updated text view initialization and renamed WorkModeToggleContainer class to WorkFooterContainer to improve clarity of the navigation drawer functionality
refactor multiple Java classes related to the Dalvik data structure to improve code organization and maintainability
refactor : remove dead code in defaultjavaprettyprinter # printqualify ( ) ( # 2131 )
added memory freeing in OperatorContext to ensure proper resource management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder and modified replacement logic in StringQuery to improve clarity of error messages and simplify parameter extraction logic
updated the evictionCounter implementation to use AtomicLong and modified related methods in ConcurrentLRUCache and FastLRUCache to enhance concurrency handling and
use runandwaitinjavafxthread ( Runnable action ) instead of runinjavafxthread ( )
replace localHost check with intendedDestination type check to ensure correct validation of the intended destination address type
set data - root and source - root on startup in main window
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` constructors to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` to
[ hotfix ] [ table - common ] fix checkstyle violation in tableenvironment
removed the redundant setStatementTimeout method and adjusted timeout handling in MapperBuilderAssistant and MappedStatement to simplify timeout logic and improve code clarity
refactor ` hangingTscTimeout ` parameter handling by removing unnecessary type declarations and method calls to simplify code and improve readability
added serialization support for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable proper handling of geolocation requests and responses in
updated assertions in ArtifactFilesystem to check for non - Build Artifact instead of Source Artifact to ensure correct handling of artifacts in the filesystem operations
tika - 2250 -- upgrade to openxml4j 2.4 . 0 and add unit test for jls file
apps - 2131 avoid concurrent modification in conditional script
give the connector more time for data to be write
added string equality check in GuavaOptionalSubject and corresponding test cases to ensure proper error reporting when comparing optional values
modified the return statement in BackgroundAppState . java and modified the initialization of mMidProgress in ShelfScrimView . java to enhance UI
fix a nullpointerexception in the shader node editor when the nav be null .
mow - 1035 fix image positioning in desktop
fix typo in javadoc
[ astro ] use schedulewithfixeddelay instead of scheduleatfixedrate
remove useless irrUnit and pemUnit assignment
camel - jms : ignore test that hang due to time out
updated import statements in GuiceFactoryTest . java to include specific Guice - related classes to enhance dependency injection flexibility and maintainability
added methods to check for system features in RobolectricPackageManager to enhance functionality for managing system features in the application
updated RCAFrameworkLoader to support multiple path properties and added a new test class for property augmentation to enhance flexibility in path handling
[ hotfix ] remove unneeded log
set default value of radproperty enum to null if there be no value
renamed variable ` needInline ` to ` needStartText ` and introduced ` needEndText ` for improved clarity to enhance
added asynchronous data collection and retrieval of the remote IP address in ` collectAndSendTelemetryDataAsynch ` to enhance the server ' s ability to
removed conditional alteration for the TEXT column definition in UpgradeCatalog260 . java to simplify the code by directly changing the column type for the UPGRADE _
improve error message when directory creation fails
[ hotfix ] [ doc ] fix typo in datasetutilities
added selector ID to the key string to enhance debugging by providing context about the selected selector
updated debug logging format and fixed formatting in GouraudShadingContext . java to improve readability and consistency of color output
updated taskbar visibility and alpha management in the StashedHandleViewController , TaskbarDragLayerController , and TaskbarLauncherStateController to
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintain consistency
added a type check for the ` conn ` instance before executing a query in ` CockroachDatabase . java ` to prevent potential ` SQLException `
refactor file existence checks to use a variable for file index tracking to improve code readability and maintainability
added getMediaRecorderingMimeType ( ) method to multiple classes to provide a way to retrieve the media recording MIME type
fix the mana enchanter and pylon render not use the shader
druidadapterit : fix flaky test due to interpret change
removed unnecessary line breaks in ZkStateReader instantiation to improve code readability and maintainability
pdfbox - 4892 : disable external entity reference and disable todos
added a new interface ClientRegistrationIdentifierStrategy to provide a method for retrieving client registration identifiers
( chore ) camel - url - component : use while loop instead of if statement
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic for varargs access checks to
refactor border property checks to use a separate method for clarity to improve code readability and maintainability by reducing duplication
changed logging level from info to debug for current reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during development
updated the ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to return ` HubRegisterResponse ` instead of void for project ID retrieval to
replace bitwise operations on byte array with ` Byte . toUnsignedInt ` for better readability to enhance code clarity and maintainability by explicitly converting
remove unnecessary parentheses in OpenTracingTransactionProducer . java to improve code readability and maintain consistency
updated caching configuration to use CACHE instead of ENABLED to ensure caching is consistently applied to cache files
changed the ` rangePannable ` property from ` true ` to ` false ` in ` CategoryPlot . java ` to ensure that the plot ' s
modify the logic for setting the main active page and managing the work mode switch in AllAppsContainerView to ensure proper view management based on the current
removed redundant variable declarations in Visualizer2TopComponent . java to improve code readability and maintainability
[ hotfix ] handle cancellation exception in functiontest .
change constructor visibility from package - private to protect to allow subclassing
fixed typo in defaulttrackselector javadoc
added a loop to wait for merging operations in LevelCompactionTsFileManagement . java to ensure that merging operations complete before proceeding with operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest to ensure the test accurately reflects the correct fee currency
updated SQL queries from " Post " to " post " and refactored test method names for clarity to enhance code readability and
refactor Unicode class to improve code readability and maintainability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added functionality to update Hive LLAP settings if necessary to ensure
fix race condition in sendheadersfirstpublisher .
( chore ) camel - aws : use builder instead of deserializer
added support for BIG _ DECIMAL data type in RangePredicateEvaluatorFactory to enable evaluation of BigDecimal values in the evaluation process
refactor ` wrap ` methods to use a more descriptive variable name ` javacProcessingEnvironment ` instead of ` inner ` to improve code
remove annotation printing from ParameterInfo . java to clean up the code and reduce unnecessary console output
added support for ac3 playback in the PlaybackController and integrated TsExtractor in VideoManager to enhance audio playback functionality and improve
[ grid ] fix nullpointerexception in localnode
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address deprecation warnings related to Commons DB
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to validate SQL select operations to ensure
fix typo in rtimerree javadoc
change package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
add test case for issue # 2358 ( # 2359 )
updated the executor and scheduler initialization in ClientConnector . java to use formatted string format to improve clarity and maintainability of thread management
refactor ViewResultsFullVisualizer to improve layout management and add a title panel to enhance user interface by enhancing error logging functionality to improve
added documentation for user phone number field
changed class visibility from package - private to public and added private constructors to prevent instantiation
added null checks for responseMap and enhanced error logging in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and provide clearer diagnostics for
refactor SolrRequestHandler class to improve code readability and maintainability
added a check to ensure the parallel parameter is not equal to the default value to prevent potential errors when the parallel parameter is set to the default value
cloudstack - 4921 : move test from cloudstack - test - utils to vmware - test
updated error handling in TerminalImpl . java to include SCARD _ E _ NO _ SMARTCARD to improve error handling for card management
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output for specific bug cases
camel - 16400 : add support for multiple property bind in camel - bindy
change default value of useowner and usetimestamp from true to false .
updated method signatures in ` runAndCheckException ` to use ` ThrowingRunnable ` instead of ` Runnable ` to improve exception handling by utilizing a more
added null checks for parameters in the CrawlURI class to enhance robustness by preventing potential NullPointerExceptions during hash computation
camel - 14263 - configuring endpoint should set property on endpoint and not configuration object - aws db
updated version number from " 4.1 . 1 " to " 4.2 " and improved null checks in LiquibaseXMLTransformer
bug 60689 - http ( s ) test script recorder : increase certificate validity time
replaced the ` frame ` variable with a ` smoothDelta ` float and introduced a ` lastDeltaUpdate ` variable to track the last modified time to en
added a check for ` paginator ` in ` HttpBatchReader ` and modified URL parsing logic in ` HttpScanBatchCreator ` to ensure
added null check for the CompactionInfo client in Worker . java and created a test for it in TestWorker . java to ensure that the worker properly
refactor onSaveInstanceState method in ShadowFragmentActivity and add corresponding unit tests in FragmentActivityTest to ensure proper functionality of fragment state saving in tests
reformatted code for improved readability to enhance maintainability and clarity of the code
added a test for parsing a simple Android color reference to ensure the correct color value is returned from the color resource loader
added error handling for NoResultException in AbstractJPAQuery to improve robustness by gracefully handling potential NoResultException during query results
improve handling of community that do not have a parent in the collection - fix for sf bug # 446463
updated the preference key from ' l ' to ' LawnchairApp ' in DepthController . java to ensure compatibility with the latest application context
updated import statements in LocalManagementTest . java to streamline dependencies to improve code clarity and maintainability
modified the ` updateTotalEnergyAverageUsage ` method to remove the block timestamp parameter to streamline the method calls by eliminating unnecessary timestamp retrieval
added null checks for extensions and extensions in the ExtensionStack class and improved the toString ( ) method to enhance robustness by preventing
3 . x : flatmap ( ) flatmap ( ) should dispose of inner subscriber to avoid memory leak ( # 940 )
added connection timeout configuration in MultiGetRequest and ControllerStarter classes to enhance connection management flexibility and improve error logging for better debugging
removed unnecessary line breaks in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to utilize the updated model testing framework
fix image inline update bug
added a new test to verify output hash calculation when cache is not writable to ensure accurate output hash calculation when cache is not writable
camel - 14284 : camel - netty - optimize to reduce object allocation .
updated the partition alteration method to use the table name instead of the old name to ensure accurate handling of partition names in the database
improve error message when create vertx instance without native transport
add unit test for the new color type handler
[ streamex ] fix typo in streamex javadoc
added hints for query timeout and lock timeout in SessionImpl . java to enhance query performance and control
added a new class ` StaticLoggerBinder ` to the ` org . slf4j . impl ` package to provide a singleton implementation for SLF
phoenix - 4978 fix multi get / set regression ( addendum )
added orientation checks in TaskbarManager to ensure compatibility with different window configurations during layout updates
fix xmpp room nickname with special character
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 662 :
added @ SuppressWarnings ( " mutable " ) annotations across multiple Java files to suppress warnings for better code clarity and maintainability
jbrules - 2088 - add test holder class to make it easy to reuse
standardized spacing in multiple Java files to improve code readability and maintainability
updated NBWriteServlet and TestWriteListener to support unlimited operations to enhance flexibility in handling write operations with unlimited configurations
fix total difficulty update in blockchainimpl
refactor action assignment logic in DefaultPlaybackController . java to improve readability and maintainability of the code
fix thread safety issue with jce security
added dynamic adjustment of the bend distance based on the current rollo ' s allocation state to improve the visual appearance of the AllAppsView
added a check for the presence of a colon in the key alongside the existing index check to ensure proper validation of the key in HttpURLConnection
added PrincipalResolver as a parameter to the casSimpleMultifactorAuthenticationMetaDataPopulator constructor to enhance dependency injection for principal resolution
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve data handling and compatibility with Noggit
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve code readability by eliminating unnecessary string manipulation
added methods for matching patterns in the PatternsMatcher class and corresponding unit tests in PatternsMatcherTest to enhance pattern matching functionality and ensure
hbase - 2593 fix log message in loadincrementalhfiles
fire potion block with fly event . fix # 348
fix reorder animation for tablet
refactor calculation of decreasePercent for better readability to improve code clarity and maintainability
updated AsyncContentProducer and BlockingContentProducer to handle read unready states and added a parameterized test for it in AsyncIOServletTest
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that a valid weightField is provided to avoid potential errors
added plist variable substitution functionality in AppleBundle . java and a corresponding test in AppleTestIntegrationTest . java to enhance plist file handling to improve plist
fixed an issue with turret not be able to place item .
cast the result of adaptOrder methods to OrderCreateApiRequestBuilder to Object to ensure type safety and prevent potential ClassCastException when adapting orders
added a new file ` PreParseGrammarTest . java ` that implements XML grammar parsing to facilitate testing of XML schema processing in the application
doc : fix doclint issue in java . desktop
added FontManager import and updated font overriding logic in ExtendedEditText to ensure consistent font management across the application
added a null check for the currentUser in AuthorizeTag . java and created a test for it in AuthorizeTagTests . java to ensure that
camel - 13397 : fixed illegalargumentexception when supply uri contain unsafe character .
disable jdbc geometry test for now
removed the import of DumpHandler in MultipartFilterTest . java to streamline dependencies and reduce unnecessary dependencies
[ hotfix ] reject restore attempt for already cancel task
add server . rmi . create property to turn off registry creation
use stringutils instead of string . join in compactionmanager # info
updated display metrics handling and qualifiers in multiple classes to ensure consistent display metrics and improve test coverage for resource qualifiers
[ java ] add cluster member id to service heartbeat to track which member have run .
updated the logic for setting numAttributes based on the major version to ensure compatibility with newer thread management features
modify the return logic to handle NaN and positive infinity values properly to ensure accurate representation of status values and improve hash code generation
updated logging statements in AjaxListener . java for improved clarity and consistency to enhance readability and maintainability of the code
added authentication and authorization routes in Routes . java and implemented corresponding methods in AuthenticityController . java , and created AuthenticityFormTest .
add assertion to ensure node be alive
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
improve performance of defaulttrackselector . match ( )
[ hotfix ] fix checkstyle violation in runtimeserialization
draw image with crop on top of corner of the image ( fixes # 353 )
refactor UnitOfWorkFactory to improve code readability and maintainability
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and ` WidgetCell `
tika - 651 -- add content disposition filename to submd if it be not empty
updated URI generation in ThumbnailsCacheManager . java to use localId instead of remotePath to improve clarity and accuracy of thumbnail generation URI
added checks for markSupported and reset the input stream if they support it to ensure proper handling of input during processing
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added configuration for showing error stacks on the error page to control the visibility of stack traces for the server ' s error handling
bug 10978 : add more logging when cleanup account
sparc : remove useless check for null foreign call
[ drools - 5895 ] add backward compatibility for legacy drool 5 . x api
fix crash when cancel a purchase
[ hotfix ] [ test ] increase default timeout for unboundedsourcesystemtest
update imports and modify resource name resolution logic in ShadowAssetManager . java to improve code clarity and ensure proper resource path formatting
deleted two Java files , MrefStat . java and MrefStat1 . java , introducing new classes MrefStat and MrefStat
added import for StringUtils and modified scope handling logic to ensure scope defaults to " compile " when scope is blank
replaced the exception handling for missing trades with specific error messages to improve clarity and maintainability of error handling logic
( chore ) camel - core : use hamcrest assertion instead of junit in examples / microprofile / tracer - eips ( #
bitcoinuri : add getpaymentrequesturl ( ) method to retrieve all payment protocol request url
planner - 383 improve error message when use property range annotation with collection
removed redundant line setting folder info to streamline code by eliminating unnecessary duplication
fix race condition in jfrbuffernodelinkedlist and jfrchunkwriter
[ hotfix ] fix checkstyle violation in basicabstracttuple
replaced NIO file handling with InputResource for reading linter configurations to improve resource loading efficiency and enhance error handling
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post with a Runnable to ensure background and podings are updated
fix item not be pick up when pick up an item in the inventory . close # 219
added case for OCELOT _ BY in PlayerEvents . java to handle additional event types
[ hotfix ] add miss @ publicevolving annotation to stateTtlconfig
added null check for parameter ' x ' in PreparedStatement and adjusted array conversion in Array to ensure proper handling of null values to avoid potential NullPointerExceptions
[ java ] add describe command to archive tool to list all valid recording .
replaced double quotes with single quotes in the append0 method call to ensure consistent newline handling across the code
added a new test method for serializing and deserializing a JSON snapshot in SiteSnapshotVariationsTest . java to enhance test coverage for snapshotting data
refactor the BroadTest class to encapsulate the transaction and block cache removal logic to improve code readability and maintainability
[ amcrest ] enable leLens mask by default
removed the ` throws NoSuchBuildTargetException ` declaration from the method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java `
refactor ChangeLogIterator constructor to accept a List of change set lists instead of a single ChangeSet to enhance flexibility in handling multiple ChangeSet
let polyglot launcher exit with 1 on guest exception .
[ ec2 ] use system property instead of env variable
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor whitespace handling in SpacesVisitor . java to improve readability and maintainability of the code
# 1664 - enh : add servercacheoptions . copy ( ) ... for set near - cache
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to verify that the border is not visible on a flo
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` and updated related method calls to utilize ` TargetGraph `
replaced ` LIVE _ URI ` with ` PROD _ URI ` and added error logging for ` KucoinExchange ` to improve error handling and
refactor SpringResourceAccessor to improve resource path handling and error messages to enhance readability and maintainability of the code
updated MICROGRAM _ PER _ CUBICMETRE unit from " μ g / m ³ " to " µ g
updated the method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure
deleted the ` Tls12SocketFactory . java ` file to remove unused code that is no longer needed
refactor tex entry resolver to not use intermediate collection ( # 1103 )
added a check for Robolectric ' s legacy mode in ` ResourcesTest . java ` to skip execution in legacy mode to improve test reliability
added a check for FirebirdDatabase to return a specific DatabaseDataType for DOUBLE PRECISION to ensure proper handling of double precision in Firebird databases
added null checks for dataSource and transactionManager before assignment to avoid potential NullPointerExceptions
add package - info . java for easy readability
updated ping command from " google . com " to " 127.0 . 0.1 " and added timeout settings in several test methods to improve test
no effective change - change test code to use try - with - resources
updated TermScorer instantiation to conditionally use FREQS or NONE based on scoreMode to improve scoring accuracy when scores are not needed
fix npe in dataflowmetrics
server : fix npe in listvirtualmachines - do n ' t list virtualmachines in the same account
refactor DynamicPartitionPruner to use a new method for obtaining the target object inspector to improve code clarity and maintainability by
added a method to remove build artifacts from the ArtifactFilesystem class and invoked it in ActionExecutionStep to ensure that existing build artifacts are deleted before
added logic to update the selected row in the table if it is greater than zero to enhance user experience by ensuring that only valid rows are displayed
add assertarraystoreexception to test for array store exception .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added user agent support to HttpClientBuilder and updated related classes to enhance client configuration options for improved user identification
refactor MemorySessionStore to use a new session data retrieval method and encapsulate session restoration logic to improve code readability and maintainability
updated assertions in IssueTest . java and changed the type of the results set in Reporter . java from HashSet to IdentityHashMap to improve test accuracy and
None
fire an event when an activation request fail .
make sure sin ( x ) be rotate correctly
added a method to update the snapshot radius for task views in RecentsView to ensure proper tracking of the snapshot radius for each task view
added logging functionality and modified schema generation in StaticMicroserviceVersions . java to improve traceability and debugging of microservice schema generation
changed the return type of the put methods in ArrayMap from void to int to allow for returning the index of the value instead of void
[ hotfix ] [ kafka ] increase kafka container startup timeout to 1 minute .
do n ' t try to send back back to normal message if exception be throw .
refactor header checking logic in StaticServerHttpHeadersWriter and add a new test for case sensitivity in StaticServerHttpHeadersWriterTests to ensure headers are
updated EventListenerList to check package access before adding the listener type to enhance security by ensuring the listener type is validated against package permissions
added a custom ListView to display application list items and updated the onCreateView method to utilize it to enhance the user interface by providing a
updated the applyIcon method to accept nullable task parameters to enhance null safety and improve code clarity
fix resource leak in downloadtracker
fix a bug in baseSqmtosqlAstConverter . converttosqlexp ( ) where insert statement be always a select
removed the execution context in the HibernateCursorItemReaderIntegrationTests and HibernateCursorItemReaderStatefulIntegrationTests classes , and added JUnit test annotations
refactor DataInputStreamWithTimeout to use ExecutorService for asynchronous polling and improve error handling to enhance performance and reliability of data reading operations
added support for the ENABLED _ TS flag in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150 . java for improved clarity to enhance maintainability and readability of the code
networkparameters rename createtestnet3 - > createoldtestnet .
[ desktop ] remove useless selection update
updated onboarding preferences handling in AppsDividerView . java to improve null safety and readability of onboarding preferences checks
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for resource closure to improve performance and resource management during file operations
pdfbox - 4892 : pdfbox - 4892 : do n ' t clip a path if there be no clip
removed synchronized block for setting local address in SocketChannelImpl . java to improve performance by reducing unnecessary synchronization
templatetransformer : fix arrayindexoutofboundsexception in multi - value template
added a method ` isWindows ( ) ` to check if the operating system is Windows and modified file renaming logic to improve compatibility with Windows environments and
replace ` ALPHABET _ STRING ` with ` CHECK _ DIGIT _ STRING ` for character encoding checks in ` Code39Reader ` and ` Code39
replace generic return type handling with primitive return type handling in NodeGenFactory . java to improve type safety and clarity in generated code generation
removed redundant check for stored string length in IndexingChain . java to streamline code for better readability and maintainability
fix ( griffin ) : timestamp with nanosecond precision should be cast to timestamp
simplified stacktrace handling in LwjglCanvas . java to improve code readability and maintainability
fix typo in documentation for abstractgcprocessor
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` and added synchronization for ` FakeWaiter . this ` to
updated the directory parameter from null to " single " in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java to ensure consistency in directory
updated the UserData class to replace size ( ) method with incrementFilterCount ( ) and modified filterCount ( ) logic in FaultTolerantChunk
updated file handling methods and imports in ` FileWithTabs . java ` and ` T4994049 . java ` to improve code clarity
replace multiple conditional checks with a single ` assumeTrue ` method for better readability to improve code maintainability and reduce redundancy in the code
remove unnecessary admin check from getfeedbacksessionsaction
adjusted calculations for newSelection and page column limits in AllAppsView . java to improve the accuracy of data selection criteria
http : / / issues . apache . org / jira / browse / amq - 4237 - remove unnecessary parameter from threadinfo # initialize
added model loading and refreshing methods in DataModelManagerDialog , removed unused encryption methods in DbConnectionDialog , improved null handling in Export
changed ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` and updated related methods for consistency to improve code readability and maintainability by
updated segment size calculation in DocumentsWriter . java and added a new test case in TestIndexWriter . java to enhance index writing functionality to improve
* fixed issue where armaturemodifier do n ' t have a dvert value
refactor FileDisplayActivity to improve code readability and maintainability
replace direct creation of UnsupportedOperationException with a custom one that does not fill in stack trace to avoid stack trace filling in exceptions
update label height calculation using Java Streams to improve performance and readability of the code
updated RotationTouchHelper to accept a DisplayHolder parameter to improve flexibility in managing display instances
optimize quote handling in AVA . java to improve performance by avoiding unnecessary string processing when already quoted
replaced Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) and added null checks for spanId and parentSpan
added a new test method ` testSmall ` and refactored the ` ServerDatagramConnector ` class to improve test coverage and streamline the
corrected the substring calculation for country code in the assertion to ensure accurate validation of country code extraction
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
updated variable names and scope settings in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in scope management
modified the doBefore method and adjusted the BitSet initialization in TestUnifiedHighlighterTermVec . java to ensure consistent handling of document IDs and improve test cl
added a new JTable with a JPanel and JButton for adding data to the GcodeTable to facilitate the testing of data manip
replaced the constant ` WEBAPP _ CONNECT _ TIMEOUT ` with a dynamic value from ` cfg . getConnectTimeout ( ) ` to improve flexibility by
updated various Java files to improve code clarity and ensure proper handling of path length constraints
( chore ) camel - media : fix checkstyle violation
added a new constant for help link in the Messages . java file to provide users with a guid link to the developer guide
add tool for print all fiat / btc symbol in wallet
validate component name to avoid illegal character in uris
added methods for registering and completeing web authentication keys in AccountProxy and HttpAccount classes to enhance security key registration functionality within the authentication process
refactor ServerSpanThreadBinder for improved readability to enhance maintainability and ease of future updates
fix block physic not allow pENETRATION
changed the key from " Location " to " the _ geom " and added a new field " number " in the Csv2Shape builder to improve
updated variable name from ' callGasWord ' to ' gasCost ' in VM . java and removed unused imports in Program . java to improve code cl
refactor Parameters class to improve code readability and maintainability
added setIgnoreNullValues ( true ) to piePlot to ensure null values are ignored during plot rendering
refactor ResourceBundle . java to simplify bundle loading and cache management to improve code readability and maintainability by reducing complexity
pdfbox - 4892 : fix typo , a suggest by valerybokov
move allowedduringediting annotation check into action class
set userModified to true in LoginSamlAuthenticationProvider . java to ensure user information is correctly updated during authentication
added a new file ` TestSealedObjectNull . java ` to test the handling of ` SealObject ` to ensure that the ` SealObject
replaced the ` onOpen ` method with a new ` setResponse ` method in ` ConnectPromise ` and removed the ` succeeded ` method from ` WebSocket
add miss tag . snow for 1.16 . 5 +
added a new ` id ` field and updated the ` CryptsyPublicTrade ` class to include it to track the last processed trade
added error handling for closing HMS connection to ensure proper resource management and handle potential exceptions
fix seed string parse issue in glowserver .
updated device profiles in DynamicGrid . java to include a new device profile for the Nexus 5 to enhance visual representation of the device
3 . x : fix ref count not reset early when connect
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve compatibility with modern Java features
add support for whitespace _ around _ textUAL _ op ( # 4635 )
updated file existence checks and added validation for empty file cases in SaveTask . java and related tests in SaveAndLoadTaskTest . java to
added synchronized keyword to several method signatures in MLogWriter . java to ensure thread safety during concurrent access to these methods
( chore ) camel - ssh : fix serialization of mutablelogevent
change padding type from LengthLike to NonNegativeLengthLike to accommodate negative length values in property builders
refactor context creation by removing unnecessary parameters in multiple resource classes to simplify context creation and improve code readability
improve handling of jimple catch - clauses in sootworldbuilder
updated test result formatting and enhanced error messages in AndroidPlatformTarget . java to provide clearer instructions for installing build tools to improve clarity and
increased the cache size calculation from 16 to 8 bits to accommodate larger memory scenarios
added a condition to check if both ` finish ` and ` start ` are zero in ` InvocationStageTrace . java ` , and modified the
added work around for npe in fips keystore .
updated server socket initialization and modified port handling in UpstreamCheckUtilsTest to use a local variable to improve port management and simplify URL validation logic
ggb - 1342 fix : set perspective ( ) be not correct after resize
* make shader storage limit for geometry and tessellation shader more restrictive
[ hotfix ] [ doc ] fix typo in populatorcontext
skip save - all notification if project be not the reactor ( # 588 )
added character encoding support and improved JSON reading with IOUtils to enhance compatibility and ensure proper character encoding handling
added a check to ensure args length is greater than 0 before processing to avoid potential ArrayIndexOutOfBoundsException
replaced hardcoded header values with constants from the ` OSSOHeaderDecoder ` class to improve maintainability and readability of the code
camel - 14284 : camel - jbang - deprecate the option - hyphen hyphen hyphen hyphen hyphen in favor of hyphenate for backwards compatibility
removed debug log statements related to fetching the Apache Derby driver class to streamline error handling and improve code clarity
fix flakiness in cep test
changed parallelStream to stream in PersonNameSuggestionProvider to improve performance and reduce execution time
updated the ` HubUpdater ` class to conditionally update Liquibase Hub properties based on the presence of a ` LiquibaseHubMode
added constants for IBM J9 VM success and openJ9 VM version keys in Constants . java and implemented a test for version information in TestDDR
refactor logging message construction in FontFamily . java to improve readability and maintainability of the code
added support for HTTP / 1.1 in NegotiatingServerConnectionFactory to ensure proper handling of HTTP / 2 negotiated connections
added NO _ RATE _ CONTROL import and set HTTP2 rate control to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to optimize performance by
added a new Java file ` Test6741426 . java ` that implements a GUI with a JComboBox and JTextField to test the display of a
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest to include exception message to improve error reporting for better debugging
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure managed directories are only created when they are valid
api : fix s3copyobjectrequest package name
removed accentColor parameter from several setup methods in SettingsActivity to simplify method calls and improve code maintainability
improve error message in temporaryfolderusagetest
updated type information to use ClassTypeInformation directly instead of raw types to enhance code clarity and maintainability by removing unnecessary suppression warnings
validate client ip address to be non - empty and non - null
825417 : add exception for expire docusign root to verifycacerts test
change return type of pipeline . compute ( ) to int : count of output batch
added conditional checks before setting menu mode and removed redundant code to ensure menu mode is only set when the popup is not visible and the popup remains open
fix arrayindexoutofboundsexception in memoryTTFdatastream . read ( )
add a new test class FinalizerInfoTest for verifying the finalization state of objects to ensure that the garbage collector correctly processes finalizers
( chore ) camel - core : use doOnNext instead of map to avoid lambda .
[ burningman ] improve handling of burningman receiver address
refactor methods in StringSubject class to improve code readability and maintainability
reduced the size of longData from 1 , 000 , 000 to 1000 , 000 and added an @ Ignore annotation to the BatchValidateSignContractTest class
corrected the spelling of " maxInboundMetadataSize " to ensure consistency in method naming
updated recent query handling by replacing " from : " with " @ " in RetweetActivity and Search classes to ensure accurate recent query representation for users
removed conditional check for forRebalance to simplify code logic for better readability
added a new endpoint to import accounts from a JSON request in YubiKeyAccountRegistryEndpoint to enable users to import accounts from a Yubi
update lwjgl to late truffle 2.0 . 0 , fix name mismatch
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted safe area settings in ` SideMenuBar ` and ` Toolbar ` to
refactor AbiWriterProtocol class to improve code readability and maintainability
fix nullpointerexception when subname be null
change the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY to align the data flag with the intended gr
updated conditional checks and improved index checks in CustomExpression . java to enhance null safety and ensure proper handling of custom expressions
sendrepublishrequest before requestBlindVoteListfromnetwork since there be no need for it .
add a test case that demonstrate how to use postgresql with our mbeans
updated string literal from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to ensure consistency and improve code readability
fix : correctly handle line break in javadoc comment .
truffle - dsl : make singleimpl snapshot updater thread - safe .
added a null check for filters before adding queries to the query list in SimpleFacets . java to avoid potential NullPointerExceptions when accessing filters
[ smarthome ] fix thinghelper . buildbridges ( ) to include child of bridge
replaced calls to ` printHelp ( ) ` with error messages to provide clearer error reporting for unknown commands
added a check for the existence of ' outFile ' before returning it to avoid potential errors when the output file does not exist
camel - 14263 : camel - core - add support for iso 8601 date format like t ( iso 8601 )
added a new method ` findBySlug ` in ` PostRepository ` and a corresponding test in ` SpringDataJPALockTest ` to retrieve a
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and refactored related logic to improve
added connection and read timeout settings for the REST client in ClientRegistrations . java to improve stability by controlling request timeouts effectively
updated the file path handling in SourceTest . java to ensure accurate file existence and naming validation to improve test reliability and accuracy of file operations
[ gr - 4674 ] do n ' t hardcode the graalvm . version system property .
added logic to set ` newClient . getAccessTokenValiditySeconds ` and ` newClient . getRefreshTokenValiditySeconds ` to null if they are defined to ensure
update return statement to include android _ api _ version check to ensure compatibility with newer Android API versions
replaced references to ` this . placeholderPrefix ` and ` this . placeholderSuffix ` with direct variable references in ` PropertyPlaceholderHelper . java `
updated the format of the Subject Public Key Algorithm in the Resource . java file to enhance readability and maintain consistency in the documentation
updated ZkSolrClientTest to improve collection management and synchronization handling to enhance test reliability and reliability during concurrent collection processing
added BigInteger type to simpleTypes to support BigInteger mapping functionality
added a condition to check if the button text equals the string ' s view in the HomeFragment to enhance the functionality of the toast display logic
added a conditional check for MEncoder no out of sync configuration to optimize performance when no out - of - sync settings are disabled
reduce io . netty . eventloopthreads default to 15 for test
None
modified the ExternalFileField class to enhance file float source retrieval and added a new test class for sorting files to improve file sorting functionality and
use ` ` connection error ' ' instead of ` ` invalid url ' '
updated event handling to include source information when creating flight events to enhance data representation by associating event source details with the event
changed the access modifier of the check method from private to protected to allow subclasses to access and override the method
added synchronization handling for file operations in FileActivity to improve user feedback when a file is already synchronized or transferred
updated URI generation in ThumbnailsCacheManager . java to include file path encoding and remove request header to improve file accessibility and ensure proper thumbnail generation
added a check for the initialization status of the InfiniteContainer to prevent further processing when the container is not initialized
updated the initialization of the total variable and modified the addition logic in the IntHashSet class to ensure accurate tracking of the total value and adjust the addition formula
added a lock check for feed updates to ensure that feed entries are only updated when locked
refactor conditional logic for determining user principals in SolarisAclFileAttributeView . java to streamline handling of ACE flags for better readability to
replaced the list of edges with a sorted array of edges to improve the efficiency of the edge discovery process
added a try - finally block to ensure the input stream is closed quietly to improve resource management and prevent potential resource leaks
replace \ n with \ x0d and delete \ x0a in comment
added strict parameter handling in properties file parsing to ignore unknown arguments based on configuration settings
fix validation of @ constraint with pojo
( chore ) camel - http : fix typo in verifier
added a call to waitForThingsToLevelOut with a delay of 30000 in TestCloudPivotFacet . java to improve test reliability by waiting for
simplify conditional statements in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class structure to improve code readability and maintainability
replaced ` String ` with ` StringBuffer ` for storing parameters to improve performance and readability of the code
refactor Type references to RoboType across multiple files to improve clarity and consistency in naming conventions
[ java ] abort record descriptor and subscription poller action when dispatch complete .
added caching logic for cache key and lookup in EntityProcessorBase . java and updated related test cases in TestCachedSqlEntityProcessor . java to
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError with a Bad class to validate the expected outcome of
fix connection error when connect to share address
do n ' t enqueue flush when there be no operation to enqueue
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple
updated the method definition of ` encodedLength ( ) ` in ` Flyweight . java ` to ensure consistent usage of the method implementation
rename TestMethodResultMapBuilder . java for clarity to improve code readability and maintainability
added handling for NumberFormatException and RuntimeException in method signature to improve null dereferences detection to enhance type safety and prevent potential runtime exceptions
[ hotfix ] [ runtime ] remove unused field from tasklocalstatestoreimpl
updated return statements to return default values instead of returning zero or 1 for various time - related strings to enhance clarity and usability by
updated type checks for DeepShortcutView and ImageView in FloatingIconView to enhance type safety to ensure proper handling of DeepShortcutView instances
updated JwtIssuerValidator to use a Predicate for issuer URL comparison instead of a String to enhance flexibility in validation logic for JWT claims
renamed methods for retrieving quick rates and updated imports in Coinmate and CoinmateMarketDataServiceRaw classes to improve clarity to enhance code
added a new CoverageConfig class to manage coverage configuration to enable dynamic loading of coverage data based on a defined constant
added a check to ensure the instance is not registered multiple times to prevent potential duplicate registrations for the same instance
added ASCII - only check for strings in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL execution in SpillableGroupByIT and improved test categorization in NoOpStatsCollectorIT to ensure tests are more
( chore ) camel - cometd : cleanup test after review
fix html tag for 4.01 compliance
added a line to write an HTML block in HtmlCoreReport . java to enhance the output formatting for better readability
updated the calculation of ramBytesUsed to account for null scores to avoid potential NullPointerException when scores are null
added custom serialization and deserialization methods for StringHolder in CustomTypeAdaptersTest . java to ensure proper handling of collection elements in JSON serialization and deserialization
set extra data from mining parameters in MergeCoordinator and add a test for it in MergeCoordinatorTest to ensure correct handling of extra data during mining
added a static map to capture command line arguments and updated the method to use it to improve flexibility by allowing variable arguments for parsing
refactor PathParamServerEndpointConfig to improve code readability and maintainability
[ flink - 26080 ] [ table - planner - blink ] [ migration - rule - listener ] cleanup rulemanager after migration
updated parameter name from ' part ' to ' partOrList ' in attach methods across multiple classes to improve clarity and consistency in parameter naming
move bootstrap cs to top of the “ planner . css ” package
removed the pPOSTag pattern and its associated logic from SpanishTreebankLanguagePack . java to streamline the code by eliminating unnecessary category
hhh - 13418 deprecate entityloader . load ( ) and migrate to uniqueentityloader . load ( )
hbase - 2593 fix the potential deadlock in regionserverflushtableproceduremanager and regionserversnapshotmanager
fix problem with setsize ( ) when width or height be 0
fix checkstyle issue .
removed ` assureMatchVersion ( ) ` calls and initialized ` luceneMatchVersion ` in ` AbstractAnalysisFactory ` with ` Version . LATE
do n ' t resolve interceptor for interface method in aop if it be abstract
jbrules - 2250 : fix parsing of comma in drl editor
refactor multiple subject classes in the project to improve code organization and maintainability
improve error message when payload length be negative .
moved the PublishSubscribeChannelParser and PublishSubscribeChannelParser to the ' channel ' package and updated relevant imports to align with the new ' dispatcher ' package
updated data types from String to Long for executionId across multiple classes to ensure proper handling of execution IDs for improved data consistency
added functionality to update byte data with defined width and height to enhance image processing by ensuring correct data is processed
added imports for collection parameters and local Solr request classes in SolrConfigHandler to enhance functionality and improve parameter handling in the configuration processing logic
updated the delay time calculation in FileSyncAdapter . java to improve synchronization timing accuracy
fix checkstyle violation in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` methods to accept a ` Path ` object instead of a string concatenation string to improve code readability and maintainability
updated DefaultPackageScanClassResolver to handle URLs with plus characters and improved error logging to enhance URL processing robustness and provide clearer
[ hotfix ] [ table - common ] introduce timestampextractorutils to extract field from composite type
added a new file ` SpringSecurityAuthenticationSource . java ` implementing ` AuthenticationSource ` to manage Spring Security authentication to provide a structured way to
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated minSdk version from LOLLIPOP to KITKAT in ShadowAlarmManager to ensure compatibility with the latest API requirements
replaced the autoSuggestDialog with a SimpleFormDialog for suggesting a custom filename to improve user experience by using a cached version of the file name
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest . java `
updated parameter order in the stream method and read callback instantiation to improve code clarity and consistency
[ mapOverviewimagembeanhandler ] fix zoom calculation for mouse click
added similarity parameter to KNearestNeighborClassifier and updated related test cases to utilize LMDirichletSimilarity to improve accuracy in similarity calculations
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance by utilizing a more efficient scoring query implementation
replaced ` lowResourceCheck . toString ( ) ` with ` lowResourceCheck . getReason ( ) ` in ` LowResourceMonitor . java ` to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling tests in ShadowBluetoothGattTest . java and implemented the requestMtu method in ShadowBluetoothGatt . java to ensure correct
refactor the creation of ServletInputStream and ServletOutputStream into a separate method to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging granularity for better debugging
fix potential concurrency issue in channelprocessingmanager
updated messages in Resources _ ja . java to include " all , " " grouped , " and " all grouped " to improve user experience by providing cle
updated size condition in JDBCTypeMapping and corrected formatting in JDBCTypeMappingTest to ensure correct type mapping for Blob and Bytes types
added synchronized keyword to addPlayer and removePlayer methods and streamlined entity addition and removal methods to enhance thread safety and improve code readability
refactor accessibility handling by replacing the ` isScreenReaderActive ( ) ` method with a new ` AccessibilityStateTester ( ) `
updated command behavior checks to include side navigation behavior in MenuBar . java and added null check for closeButton in SideMenuBar . java to en
removed unnecessary import of Disposable in PoloniexManualExample . java and added state handling in WampStreamingService . java to improve code cl
added validation for contract type and updated energy limit validation to ensure energy limit is greater than zero to improve error handling and enforce contract type constraints
renamed variable ` url1 ` to ` javaUrl ` and added protocol handling in ` PostmanJsonBuilder . java ` , and introduced getter and
camel - 16400 : camel - soap - jaxb - allow to configure namespaceprefixref a we already have .
updated assertions in TestRange . java to use a constant for period and end date and added a method to compare dates to improve code readability
added JettySolrRunner checks in BasicAuthIntegrationTest and updated security properties retrieval in ZkStateReader to ensure proper server restart and security configuration
add code to set currency code if not use .
phoenix - 2058 set region server info port to - 1 for test
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 , not -
added file download functionality to FileDataStorageManager to manage file downloads effectively
[ java ] reset the size of the randomaccessfile in the mappedrawlog .
added a method to check if the registry is running after a specified time and a retry mechanism to delete a file if it exists to enhance reliability
added the ` startLoading ( ) ` method to ` Quick3dMain ` and ` TextureTest ` classes and invoked it in ` TextureTest `
added multiple @ SuppressWarnings ( " rawtypes " ) and @ SuppressWarnings ( " unchecked " ) annotations to multiple classes to enhance code
added a null check for instances in TraceFeignContext . java to avoid potential NullPointerExceptions during execution
phoenix - 1084 do not enforce isolation level to be set to transaction _ read _ committed or transaction _ serializable if transaction be
added transactionAttribute handling in AbstractStepFactoryBean and improved error management in ItemOrientedStep to enhance transaction management and ensure proper rollback
replaced ` CasClient ` with ` DirectCasClient ` and updated security interceptor class to extend ` CasManagementSecurityInterceptor ` to improve
removed the visibility and functionality of the menu item for the " add category " in ListFragment and updated navigation drawer functionality in NavigationDrawerFragment to streamline
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated method names in ` FileDisplayActivity
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve font size functionality and ensure consistent text size retrieval
do n ' t throw constant analysis exception if the fact be invalid .
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
replace return statement to create a new ArrayList instance from spans to ensure the returned list is ready for use
removed unnecessary locking mechanism and simplified change log validation in Liquibase . java to improve code efficiency and maintainability
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to use it to ensure the correct revision is used for microservice versions
None
camel - 18131 - create an aws - s3 component base on sdk v2 , fixed test
removed currencyPair parameter from getBitstampUserTransactions method to simplify method signature and improve code clarity
added exception handling when retrieving component instance to improve robustness by gracefully handling potential NoSuchComponentException
enable push if remote setting be enable .
replaced base58 comparison logic with a BufferedReader to compare addresses to improve code readability and maintainability
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor push notification handling by introducing a separate method and modifying Snackbar display logic to improve code readability and maintainability by
close the channel if there be no filter
( chore ) camel - ldap : fix checkstyle violation
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and readability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to the PHOENIX - 2840 issue
nifi - 10978 added timezone property to aboutdto .
refactor split logic in Splitter . java and modify boundary handling in StorageService . java to improve clarity and ensure proper handling of owned ranges during
no effective change - remove unnecessary try / catch
fix race condition when add active circuit to the circuit map
changed exception type from GdxRuntimeException to IllegalStateException in ShaderProgram . java to ensure proper handling of unexpected uniform fetch errors
flume - 1343 . make the lifecycle of the source and sinkrunner configurable .
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved focus traversal efficiency
make sure locus locus length be always great than 0
formatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code consistency and readability
refactor database connection handling and logging in SchemaCrawlerMain and Executable classes to ensure proper resource management and handle null data sources more gracefully
bump default tl version to v1.2 for jdk 16 .
[ hotfix ] [ core ] fix typo in countermanager
refactor audio stop and indexing logic in MediaManager . java to improve readability and maintainability of the code
updated debug log messages in HttpConnection to include cancelled status to enhance logging clarity by providing more context about the connection state
added support for handling @ Transient annotations in JpaPersistentPropertyImpl to ensure proper persistence of JPA transient fields
updated assertions in UpgradeResourceProviderTest to verify correct stack ID values to ensure accurate stack version retrieval during upgrade operations
make trufflevm . eval ( ) return object instead of symbol
fix sonar warning : make method public
updated the configuration property for tez dynamic partition pruning max data size to align with the new configuration requirements
refactor the ` findProblem ` method in ` JavaEditor . java ` and add priority arrays in ` JavaProblem . java ` to improve
mondrian : remove default _ offHEAP from dictionaryindexconfig .
updated string concatenation in TableWriterTest to use a configurable line separator to enhance flexibility and maintainability of test output formatting
refactor DebugHelper to improve code readability to enhance maintainability and facilitate future development
added a boolean field ` ownsTexture ` to the ` ParticleEffect ` class to control texture ownership to prevent further processing when texture is not owned
added multiple LDAP configuration properties to HiveConf . java to enhance security settings for the Hive server to support additional LDAP authentication functionalities
chore ( v1beta1 ) : update dependency com . google . cloud . datacatalog : v1beta1 to v1beta1 for
updated the logic for toggleing the soft input method visibility in DetailActivity to enhance functionality by incorporating the ` SHOW _ FORCED `
added a test method to convert a data table to a map of primitive and map < Integer , Map < Integer , Piece > > to
updated size calculation in TestFileSystem . java and deleted a file to optimize memory usage and improve resource management
updated error message for Rule M2.4 exception in ContentTypeManager . java to provide clearer guidance on potential issues related to file handling issues
refactor ` dropSequences ` method in multiple database classes to be abstract and implement error handling for migration failures to enhance code maintainability and
added a null check for the status variable to prevent potential NullPointerExceptions during execution
store the created field assignment in a variable for clarity to improve code readability and maintainability
[ fix ] hierarchicaliconsevent . getstyle ( ) now also check for logicalstylemodel
added a test method ` findOneAfterUpsertForNonExistingObjectReturnstheinsertedobjectReturnstheinsertedobject ` to ` MongoTemplateTests ` to ensure
updated the calculation of the mid variable to use a more concise syntax to improve code readability and maintainability
added metrics tracking for app launches and improved null handling for shortcuts to enhance performance monitoring and prevent potential null pointer exceptions
added drawing functionality to a Graphics2D object and removed data assignment to improve rendering efficiency by eliminating unnecessary data management
update instructorfeedbackresultspage : clear teammemberwithresponse from roster cache
added a check for zero inventory IDs and created a corresponding test case to ensure that zero inventory IDs are generated and validate the functionality
[ hotfix ] fix checkstyle violation in configdescriptionregistry
updated method signatures in ReloadableJava parser visitors to include return statements if returnType is null to improve code clarity and ensure proper handling of
refactor the initialization process in TileMapRenderer to handle null or empty blended tiles gracefully to improve robustness by avoiding potential null pointer exceptions
8133802 : disable some java . util . concurrent . { valueiterator } workaround
refactor getArea method in IfcTools2D to improve code readability and maintainability
updated lockOnSync initialization and variable assignments in Throttler . java to improve code clarity and ensure correct assignment of lockOnSync
move pipeeventbus . onactionactivate to a more consistent way
increased timeout duration for ZkController instantiation to allow more time for ZkController operations to complete successfully
added a test for verifying the passcode endpoint with client parameters in TokenMvcMockTests . java to ensure that the passcode endpoint correctly
added support for LengthFilter , KeepWordFilter , and LengthArraySet constructors in TestRandomChains to enhance testing capabilities for improved functionality
removed unused JUnit Ignore import to clean up the code and reduce unnecessary dependencies
fix handling of 64 - bit vastart arg .
refactor btCollisionObject array handling to use btCollisionObject instance retrieval to improve code readability and maintainability by simplifying object creation
added a build copyright year retrieval method and updated the URL in the AboutDialog class to ensure the build maintains accurate copyright information and improve
add jetclientinstanceimpl . getdistributedobjects ( ) method to jetclientinstanceimpl
added debug print statements in FinSet . java and updated expected values in MassCalculatorTest . java to improve debugging visibility and ensure accurate unit tests
updated memory allocation from total memory to max memory in SmartDexingStep . java to align with maximum memory requirements for better resource management
[ hotfix ] fix typo in createalignedtimeseriesplan
use bisq co - founder instead of co - founder
updated the input string format and added exception handling for big integer tests to improve code clarity and ensure proper exception management during testing
updated the condition for table size validation in ObjectSet . java to ensure proper handling of table size limits
updated imports and modified data scale handling in ColumnSnapshotGenerator . java to improve clarity and prevent potential null pointer exceptions during data scale retrieval
removed @ AddToRuleKey annotations from several fields in AppleTest . java to simplify field declaration for better readability and maintainability
added exception handling for SecurityException in FileHelper . java and updated content limit handling in TextHelper . java to improve robustness and ensure accurate content
added two new static final constants , StyleWithMultipleAttributes , and updated unit tests for the resolveAttributes method in ShadowThemeTest to enhance attribute resolution
updated sheet name checks and modified sheet creation in HSSFWorkbook to ensure correct handling of sheet names and improve test coverage for HSSFWorkbook
replaced ` primaryColor ( this ) ` with ` elementColor ( this ) ` in ` ManageAccountsActivity . java ` to standardize theming for
updated DefaultEventBus to handle null replyHandler and modified DefaultPlatformManager path resolver to simplify code logic and ensure correct resolution of module file paths
added support for a binary collation name in MariaDbDbmsType and MySqlDbmsType classes to enhance compatibility with UTF - 8
added a generic method ` whenType ` to the ` Tree ` class that returns an ` Optional ` based on the type of the tree to enhance
refactor navigation handling by introducing getUserViewDestination method and simplifying return statements to improve code readability and maintainability
updated the FeedREST response to use a temporary redirect instead of OK to redirect to the public URL for better user experience
[ flink - 20536 ] [ kinesis ] provide good error message for non - serializable kinesis deserializer
( chore ) camel - core : fix javadoc issue
replaced a fixed sleep duration with a try - finally block to ensure resources are properly closed to prevent potential resource leaks
updated method names and progress handling in DesktopTaskView , GroupedTaskView , and TaskView classes to reflect transition progress for icons and banners to
refactor the read method in ProxyHandler to use an overloaded method to improve code readability and maintainability by reducing duplication
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in two Java files to standardize the allocation method and improve code clarity
modified the method ` prepareStreamsToUpload ` to return a boolean indicating success or failure to improve handling of stream uploads by returning a boolean indicating success
updated comparison logic in AbstractConfigLoader to use Integer . compare for order values to ensure consistent ordering of models to avoid potential numerical issues with integer values
added a new class PicOfDayAppWidget to handle widget updates for Picture - of - Day ( Picardo ) in the application
cloudstack - 9619 : internal lb vm default service offering should be ` ` all ' ' instead of ` ` all ' ' ( # 3
updated HiveParserCalcitePlanner to use HiveRelOptUtil for splitting join conditions and improved join condition handling to enhance compatibility with Hive ' s
deprecate someetransMISSION and savepoint apis that require it
added user and password options for remote JMX credentials in NodeToolCmd . java to enable secure access to the remote JMX server with appropriate credentials
removed duplicate BytesRef instances in Stemmer . java to improve code efficiency and readability
updated widget application logic to correctly handle the number of pages to improve user interface responsiveness
ticket # 263 : use 3d view if available
updated rotation calculations in GcodeRenderer . java to ensure proper handling of negative rotation values
added a new option for setting the workspace directory in the terminal client settings to enhance user control over the workspace directory configuration
updated the file extension from " options . apt " to " options . html " to align the file format with the expected HTML standards
updated ScimUtilsTest to use JUnit 5 annotations and introduced PollutionPreventionExtension for testing to enhance test reliability and maintainability
refactor OAuthConfirmationController to use a Map for model data instead of a single object to improve code readability and maintainability
replaced a session retrieval test with an assertion to ensure the second - level cache hit count accurately reflects the expected result
modified the EventBusHook class to enhance event handling capabilities
updated MultiPaintEventTest . java to improve test coverage for paint events
changed the variable declaration of mNewScale from final to non - final to allow for potential subclassing of the variable
refactor SyncFactory to improve code structure to enhance maintainability and readability of the code
added handling for unique key fields in LukeRequestHandler to ensure unique keys are properly stored in the schema
added color markup filtering for stroke and background colors in BorderEditor and updated EditableResources to use a new roundBorderColor attribute to enhance the visual appear
truffle : fix compilation error in binaryparserexception
[ hotfix ] [ test ] use declarativeslotpoolbuilder instead of slotpoolimpl
added logging statements to ` GatewayRSocket ` , ` GatewaySocketAcceptor ` , and modified ` PingPongApp ` to handle dropped payloads
added menu item click listener implementation for the RecentChatFragment to enhance user interaction with the recent chat menu
None
replaced calls to ` add ( ) ` with ` push ( ) ` and ` pop ( ) ` methods in multiple classes for improved functionality to en
updated API and image URLs from " https : / / test . wikimedia . org / w / API . php " to " https :
plsql : fix index increment / decrement bug
replaced ` Collections . sort ( ) ` with ` sort ( ) ` for various classes to improve code readability and consistency in sorting method calls
added various time and date patterns to the FormatData _ hr _ HR . java file to enhance time formatting capabilities for better user experience
clear focus from clickedView in DetailFragment . java to improve user interface responsiveness
update spinner language selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to improve user experience by ensuring correct language selection behavior
updated time zone identifiers from " West Samoa Summer Time " and " West Samoa Sommerzeit " to " WSDT
added native methods for registering global and weak items , and refactored fast field access logic to use MyItem and MethodHandle to improve memory management
added handling for NULL types in ReflectData . java and updated tests in TestReflect . java to ensure correct default values are returned for UNION fields to
increase offer timeout in seda block when full test
add null check before remaping resource class to avoid npe
fix : add miss super constructor for backwards compatibility
httpproducer : add explicit http connection close header for http / 2
increased socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete successfully
add test case for ticket with status FREE
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter to improve code organization to enhance maintainability and readability of the code
refactor : use document . getfirstelementchild ( ) . getfirstelementchild ( ) instead of document . getfirstfirstelementnode
[ optaplanner - 5870 ] make sure we do n ' t remove unneeded shift assignment
[ java ] wait for node to shutdown before shut down cluster .
change log level to info to reduce log verbosity
set content - type to application / octet - stream for webdav entry
added a getQueueSize method to LazyTraceThreadPoolTaskExecutor and created unit tests for its functionality to ensure proper retrieval of queue size from the delegate
fix distanceop to handle min distance
ww - 4321 rename require attribute to requirelabel
removed the overridden ` next ( ) ` method and added a call to ` updateProgress ( ) ` in the ` PurgingPartitionIterator ` class to
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated ` VectorUtil ` to use this method to use this
added abstract methods for height and width in BaseMonochromeBitmapSource to provide consistent access to bitmap dimensions
added validation to ensure vertices have at least 3 points and handle the case where localVertices is empty to improve error handling and avoid unnecessary array creation
replaced instances of ObjectMapper with ObjectMappers in multiple files to utilize the new ObjectMappers class for improved object handling
mondrian : fix npe in case of implicit curve with no coefficient .
updated ExternalNameRecord to support both compressed and unsigned names to address bug 47384 and ensure correct handling of Unicode names
camel - jms fixed the c error of camel - jms
added logic to exclude " username " and " password " prompts based on the return value of login information retrieval
replace ` remove ( listener ) ` with ` removeIf ( listener ) ` in listener removal logic to ensure listeners are removed only if they are the same
added a case for the ' toggleSpin ' action in PieChartActivity to enable customizable animation transitions for the chart ' s smoother transitions
cleanup vhd in secondary storage if copy fails
hbase - 2593 fix the bug of normalize table due to namespace have quota
simplified import statements and added a resize method to improve code readability and maintainability
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class to retrieve property values from a specified property name to enhance functionality by
ignore failing test due to timeout
fix the hopperhock be able to place item outside the aesthetrack correctly
added authentication dialog functionality in SsoWebViewClient . java to enhance user authentication with required fields
updated the indexing logic and added new methods for document deletion and querying in TestStressIndexing2 . java to improve test reliability and enhance document management
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase due to flaky test
replaced ` get ` with ` computeIfAbsent ` and simplified variable declarations in ` ResTable . java ` to improve code efficiency and readability
added configuration to accept single value as an array in DefaultEntityMapper to improve data deserialization flexibility
fix localization update message to include all language
NOI NOI NOI NOI NOI NOI NOI NOI ----
[ feel ] add ' and ' test for instanceof expression
nifi - 10978 added content - type attribute to flowfile in gethttp processor
fix issue with batch delete on the same resource ( # 588 )
replace exit button with done button in HelpActivity and add searchable check in SearchBookContentsActivity to improve user experience by ensuring book search is not broken
fix incorrect javadoc in natsconfiguration
refactor the ` invalidateStalePartition ` method to ` invalidateStalePartitions ` for better clarity and performance to improve the management of stale partitions
use circularfifobuffer and unboundedfifobuffer to improve performance
updated icons in UsersAndGroupsSearchProvider , ShareUserListAdapter , and UserListAdapter to use the new chat bubble icon to enhance user interface
updated ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile ` instead of ` getLong ` for retrieving the latest record to
updated method names in MocksCreationTest to use underscores instead of snake _ case to improve consistency and clarity in naming conventions
added a constant for the CSVDS source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to enhance
updated awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time during phaser execution
removed the BuildSlaveFinishedStatusEvent class and updated the publishBuildSlaveFinishedEvent method in DistBuildRunCommand . java to simplify event handling
fix findbugs encode warning in vmwarestoragemanagerimpl . java template uuid should be utf - 8 encode
[ ds - 3940 ] add test case for workflowitem with submitter group
[ hotfix ] [ core ] remove redundant stream . foreach call in classloadersupportimpl
removed the isBoxedPrimitive method from the Unbox class to simplify the code and improve readability
refactor argument handling in SpecificCompilerTool for improved clarity and efficiency to enhance code readability and maintainability by using contains method
added a table check to prevent directory deletion when tables are external to ensure only external tables are removed from the partition
updated asynchronous execution settings and enhanced error messages for better clarity to improve thread management and enhance error messaging for better debugging
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added a constant for execution task role and refactored service and component retrieval logic in UpgradeResourceProvider . java to improve code clarity and
fix a nullpointerexception in operationset TelephonyConferencingSipImpl . getConferenceinfodocument .
add clearentry ( ) method to logtreetree interface ( # 540 )
updated return statements to include shutdown checks for channel and socket states to ensure proper handling of shutdown events based on channel and socket status
refactor SetNullableGenerator to improve readability and maintainability of the code
camel - 14284 : camel - example - reportincident - add useservlettransport to the generated filename
replaced specific imports with a wildcard import in NettyRoutingFilter . java and updated the content type handling in FormIntegrationTests . java to simplify
added a new API operation " hello " with a value of " value " to multiple BaseService classes to enhance API documentation and provide a
updated Lwjgl3Application and Lwjgl3Window to remove and manage lifecycle listeners more efficiently to improve resource management and ensure proper cleanup of
updated the FG _ FK color value from ( 0 , 0 , 0 ) to ( 0 , 0 , 200 ) to improve visual consistency by adjust
do n ' t require mp3 for sound in android
fix secondaryindexmanagertest . testnotmarkedasbuilt flakiness
implement general preferences page to display version and release
[ hotfix ] [ test ] fix customserializationitcase failure
refactor MediaFormatUtil class for improved performance to enhance media handling efficiency
added the ` isCellEditable ` method to the ` GeneralTab ` class that returns false to provide a default implementation for cell editing functionality
added a method to determine if only unused dependencies should be printed and updated the message construction accordingly to enhance flexibility in message formatting by allowing
added a temporary variable ` tmpCount ` in ` VocalTractModifier ` and updated the ` vScale ` array in ` VocalTract
updated imports in BaseScalarUdfTest , TestUDFRound , and TestGenericUDFConcat to ensure consistent usage of BaseScalarUdfTest across
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and equality checks for authentication details objects
test skeletoncontrolrefresh now use the new animation system
nodeutil : rename nodefilter to nodecountfilter to avoid confusion
updated sync block fetch condition to allow for a maximum number of sync blocks to fetch
updated state from 365 to 366 and modified typo handling in DebugExpressionParser . java to ensure correct parsing of debug expression types and improve
update dependency exclusion logic to use streams for better readability and performance to improve code clarity and maintainability
added dst2 method and reformatted the lerp method parameters in the Vector class to enhance functionality and improve code readability
[ grid ] set default value for grid hub args
updated linker argument handling in RustBinaryDescription . java and added a new test for linker flags in RustLinkerIntegrationTest . java to improve linker
[ # 7736 ] admin : show correct error message in case of testrun failure
added configuration for HIVEQUERYNAME in logs and updated task executor service to include DAG name to enhance logging clarity for LLAP splits generation
removed unused import of java . io . File to improve code cleanliness and reduce unnecessary dependencies
do n ' t close the output stream when interrupt
updated the ` validateQuery ` method to accept an additional parameter for error messages to enhance error handling by providing more context in the exception message
updated INDEX _ VERSION from 1 to 2 and refactored the getTree method in LuceneExecutor . java to streamline index versioning
[ hotfix ] [ kryo ] add test to verify default kryo registration do not change
added null check before removing a property from the configuration to ensure that only valid configurations are added to the configuration types
refactor boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for better handling of string inputs to improve robustness by catching potential
added a call to hideCustomizationDrawer ( ) to improve user interface by hiding the customization drawer
refactor warning handling in TermVectorComponent to use a constant for warning keys to improve code readability and maintainability by centralizing warning management
8010731 : [ testbug ] compiler should not print warning for optimistic type
refactor Expect class to improve readability and maintainability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and updated DockerClientFactory to use it to enhance Docker client accessibility for Unix socket connections
( chore ) camel - closeable - dos : add test for even low rate ip
added exception for reactivestreams without subscription
refactor task handling in Vectorizer to utilize TezWork instead of MapRedTask to improve compatibility with Tez tasks and enhance
updated constructor calls in StringAppender and LogDivertAppender to include a new boolean parameter to ensure consistent behavior across appender implementations
protect guipackage against npe
add link _ once , weak _ odr , and linkonce field to the llvm spec .
refactor multiple Java files to improve code organization and maintainability
no effective change - add test for defaulttransactionthreadlocal
added validation for invalid operation handle messages in HiveStatement . java to ensure that only valid operation handles are processed further
rename alter column null to drop not null
camel - 15836 - support ability to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code readability and maintainability
simplified the email sending response message to improve code readability and maintainability
modified the ` fromContent ` method to accept a boolean parameter for controlling whether the result is sub - tree or not to enhance flexibility in
updated the calculation of default column width in Sheet . java and added a test for column width in TestHSSFSheet . java to ensure
added a new parameter ` configPath ` to the ` Commands . less ` method to enhance functionality by allowing the command to specify the configuration path
changed method parameters from Set to Collection and ArrayList in DotWriter and GraphExecutable classes to enhance flexibility in handling multiple tables collections
updated the default sshd container image from sha256 to 1.0 . 0 to ensure compatibility with the latest version of the Quay library
remove bogus assert in agentmanagerimpl . java
refactor group key generation logic in DefaultGroupKeyGenerator . java to improve clarity and maintainability to streamline key generation process for multi - value
refactor test methods and improve error handling in TestMultiMMap . java to enhance code clarity and ensure correct exceptions are thrown during slice operations
update bcsilicon recipes to use new biomedical recipe
rename put ( ) method to putobject ( ) to avoid confusion
simplified visibility setting in CellLayout and refactored drag exit handling in Workspace to improve code readability and maintainability
update rewrite logic in ModifyRequestBodyGatewayFilterFactory to handle empty inputs to ensure correct processing of requests with no input data
updated accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to include package accessibility validation to ensure only public methods and fields are accessible
replaced instances of logger . warn ( ctx , ... ) with logger . trace ( ctx , ... ) in LoggingHandler . java to improve logging
fix whitelisting of wildcard ( # 3348 )
add an option to gallery to open gallery attachment
added caching for MongoDBService instances to improve performance by reducing redundant service creation
add tests to replace boolean true and false values with their respective boolean implementations in InlineConstantMutatorTest to ensure correct behavior of mutant calls to improve
added a Blackhole parameter to the decode method in RecordTest . java to improve performance by reducing unnecessary data consumption
fix : update gapic - generator - java with mock service generation fix ( # 1249 )
updated methods to use ` Map . Entry < String , String > ` instead of ` String ` for managing unit strings and added a warning
clear the witnesses in ManagerTest . java to ensure proper resource management and avoid potential memory leaks
log jdbc error when abort jdbcpagesink
replaced the use of ` getScriptStackString ` with ` delete ` and introduced methods to get and set the stack property in ` NativeError . java
removed a condition that checks if a path name starts with a dot in DrillPathFilter . java to simplify the logic for handling specific path names
updated variable and method names from onboard to autoload in ThirdEyeAnomalyApplication and ThirdEyeAnomalyConfiguration to improve clarity and
clear index before run test
fix bold font weight to use 0x190 instead of 190
made fThreadGroup volatile and made fLookForStuckThread final in Timeout class , and refactored the lookingForStuckThread method to
modified the constructors of ` ValueResultData ` to remove the ` final ` keyword and added the ` throws Exception ` declaration to improve code clarity and
updated hash code and equality checks in FuzzyQuery . java to ensure proper comparison and equality checks for objects
removed debug print statement from PushedResourcesTest . java to clean up the test output and improve readability
changed return type of removeFile and removeDirectory methods from SharedOpenFilesCache to void to simplify method signatures and improve code clarity
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in test files to ensure compatibility with the latest database features
updated the method for retrieving person attributes and improved the principal retrieval logic to enhance clarity and functionality of the principal retrieval process
[ openwebnet ] change log level from info to warn
updated hash method names and logic in multiple hashing classes to improve clarity and consistency to enhance code readability and maintainability by using
added a null check for storageManager and updated thumbnail generation logic to ensure robustness by preventing potential NullPointerExceptions during thumbnail generation
added a loop condition to stop execution if ` nrFound ` is less than ` count ` and ` tries ` is less than ` count ` to ensure
add test case for sourceforge bug [ 1933922 ]
refactor code for improved readability and consistency to enhance code maintainability and clarity
updated character validation from " < 33 " to " < 32 " in FileResolver . java to ensure valid space handling for special characters
added requestFocus ( ) method call in Display . java to ensure focus is properly managed during display operations
update instructor home page ui test to use new test data
rename jsonparserasync to jsonstreamparser
updated Crouton handling in DetailFragment and MainActivity to ensure proper cancellation of croutons and improve intent handling for note updates
[ iotdb - 5978 ] fix schema query with unrelated template bug ( # 5978 )
refactor Dialog class to improve code readability and maintainability
replace Runtime . exec with ProcessBuilder for command execution in SourceCompiler . java to improve flexibility in managing command execution
[ hhomematic ] use ipv6 address instead of localhost
refactor subsystem assignment logic to use a loop for setting paths to improve code readability and maintainability by reducing duplication
skip some test on macosx
improve jvmciversioncheck to avoid assertion failure
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve memory testing efficiency
updated BinaryParser and PlainTextParser to use source ' s source with context and added charset management in ParsingExecutionContextView to enhance input stream handling and
added a new ` MultiPartFormDataCompliance ` enum and its getter / setter methods in ` HttpConfiguration ` , and updated ` Request ` to utilize
update gradle distribution manager to support java 17
refactor type handling in SnapshotControl to use a new addType method to improve clarity and maintainability of type addition logic
refactor Term class to improve code readability and maintainability
updated return statement to handle null or empty runWith cases to improve robustness by preventing potential NullPointerExceptions
no - jira - add test case to show the issue
refactor multiple classes to improve code organization and maintainability
pdfbox - 4071 : make sure we do n ' t mask non - luminance image
refactor color tinting logic in TaskView to use a consistent variable for the tint amount to improve code readability and maintainability
added a new file ` SumZeroAggr . java ` that implements aggregate function sum zero to provide a structured way to sum zero in the
updated SQL clauses in FirstValueFunctionIT and NthValueFunctionIT for improved clarity to enhance code readability and maintainability
refactor getAllocationFailWarningMessage method to use StringBuilder for better string representation to improve readability and maintainability of the code
add null check for propName before putting property value in roleObject to avoid potential NullPointerException when propName is null
added ` @ VisibleForTesting ` annotation to several fields and modified variable assignments in ` StatusBarTouchController . java ` to improve testability by
add client api . stream = true to log docker container indefinitely
add a performance test for mvstore ' s cache
change the data type of LONG from " L " to " J " in PrimitiveType . java to accommodate new serialization requirements
changed the method signature of ` delegatingApplicationListener ` from instance to static to allow the method to be called without creating a new instance
set the body of the message to null in RestBindingAdvice . java to clear the message ' s body to avoid potential memory leaks
added FileDeletingTasklet and TaskletJobFunctionalTests classes to implement and test file deletion operations in a batch job
g3d - 390 : update size keep drawables when create new view ( for plane )
updated BitUtil , Int2IntCounterMap , Int2IntHashMap , and Transformer classes to improve code readability and maintainability by standard
refactor AccessibilityManagerCompat methods to use state ordinal instead of a string for event handling to improve code clarity and maintainability by using
added support for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on user agent
improve error code highlighting : do n ' t highlight error line
added conditional logic to display the open button based on the theme settings to ensure the title is displayed according to the UI theme settings
updated Skia . java to include additional platform values and set preload attributes accordingly to enhance compatibility with additional Skia versions
networkparameters : add support for unittest unittest
added validation to ensure format arguments are not specified without a format string to improve error handling and provide clearer feedback for invalid format arguments
updated IntIterator to use a variable for length instead of capacity to improve clarity and maintainability of the code
updated the ` walkRuleAndAdd ` method to include ` projectConfig . getSrcRule ( ) ` and added a new parameter ` srcTarget ` to
[ netbeans - 4894 ] only include binary module when override module name
[ java ] remove requirement for protocol version 1 . x in election .
update OwnCloudClientManagerFactory to set a default policy based on authentication status to ensure consistent behavior when using SAML authentication
added null checks for ` mappedTableResource ` in ` ReadBatch ` , ` WriteBatch ` , and ` WriteBatch ` classes to ensure
refactor to reduce code duplication
refactor AnonymousAuthenticationFilter to utilize a deferred context for improved security context management to enhance code clarity and maintainability by red
modified the ` removeActor ` method to accept a boolean parameter for focus behavior to enhance flexibility in actor removal behavior based on whether the actor should
refactor cloud configuration prompt to use a variable for valid configurations to improve code readability and maintainability
add log level to netty server
refactor multiple classes including DatumAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replace direct call to update ( ) with SwingUtilities . invokeLater ( update ) to ensure UI updates are executed on the Event Dispatch Thread
camel - 15836 : camel - groovy - should load script from applicationcontextclassloader if necessary .
remove versionless plugin dependency check from plugin manager
[ flink - 20536 ] [ python ] make flink - flink - flink compile with flink 1.5 . 0
replaced ShadowSharedPreferencesEditor with TestSharedPreferencesEditor and added unit tests for its functionality to enhance test coverage and ensure proper behavior of SharedPreferences operations
delete debug code . no functional change
simonstewart : make sure we throw an exception if we can not convert the response to the expected type
change visibility of updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access the updateImage method
add block . dropresources ( ) overload to allow custom drop xp
added native methods for spatial location calculation configurations in DataOutputQueue and depthai classes to enable the retrieval and management of spatial location calculations in the application
refactor multiple Java classes to improve code organization and maintainability
updated the ` isEmpty ` method in ` TreeTrie ` and added parameterized tests in ` TrieTest ` to enhance functionality to check if a
updated foreground and background method calls in AttributedStringBuilder . java to use new color parameters to improve code clarity and maintain consistent color usage
updated the doFingerprint assignment to conditionally disable fingerprinting based on system properties to ensure that fingerprinting is only enabled when explicitly set to " true "
[ gdax ] make movefunds public
updated event emissions in MongoTemplate and enhanced test setup in MongoTemplateTests to improve event handling consistency and ensure proper context management during
fix settransactiontest and fix setcollectioncontainer logger initialization
tika - 489 -- make sure to close the input stream when the cli exit
updated exception handling to use a more general ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling for better clarity and maintainability
simplified the configuration loading by removing unnecessary line breaks to improve code readability and maintainability
update teammates log for instructorfeedbackcopyactiontest and instructorfeedbackaddactiontest
[ hotfix ] [ test ] remove useless exception in externalworkerservice
[ homematic ] remove step a we do n ' t want to use it
added lock acquisition and release functionality for documents in PostgreSQLReadWriteAdvisoryLocksTest . java to ensure shared document locking mechanisms
[ hotfix ] [ runtime ] move schedulejob ( ) after schedulejob ( ) in baseschedulerserviceimpl
danielwagnerhall : do n ' t run testgettextcontent in ie that it ' s slow .
refactor logger management to use ThreadLocal for better thread safety to improve performance and maintainability of logger management
added @ VisibleForTesting annotation to the convertToCompilationUnit method and updated test imports to improve testability by explicitly indicating that the method can only be executed
added a method to handle primitive types and updated type checking in type inference to improve type safety and ensure correct handling of unboxed primitive types
updated task view orientation handling in RecentsView . java and removed initialization call in TaskView . java to improve code clarity and ensure consistent behavior
hbase - 2593 testflushfromclient do n ' t use live region server thread in testflushfromclient ( addendum )
when a new contract be add to the database , delete the old one .
updated token issue fees to use dynamic properties instead of static constants to ensure accurate fees are calculated for account balance adjustments
refactor RealisticRenderStrategy to use URI - based texture caching and improve cache management to enhance texture management efficiency by ensuring caches are properly
refactor raster handling in Blit . java and add a new Bug7049339 . java file to improve raster manipulation and introduce a
added ` isUnselectedStyle ` boolean and refactored ` getStringWidth ` method in ` Label ` and related classes to improve clarity
updated ArrayList initialization and optimized list manipulation in multiple classes to improve memory efficiency and scalability by using predefined sizes
removed the flags parameter from various method signatures in ShadowApplicationPackageManager to simplify method signatures and improve readability
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
remove workaround for broken api due to lack of muxing support .
[ tradfri ] do n ' t warn about old firmware when gateway be down
refactor AjaxElementLocator to improve code readability to enhance maintainability and ease future updates
updated layout checks to include " table - cell " in addition to " block " in DefaultLayout to enhance flexibility in layout handling
refactor JsonDecoder to correctly handle JSON token parsing and iteration to improve code clarity and ensure correct handling of JSON reordering
blockcache : use removalcause instead of key when release location
[ hotfix ] [ test ] ignore fail test in savepointtestbase
jbrules - 2088 : add miss test annotation and fix checkstyle violation
changed instance variables to final in ContextRegisterListener . java to ensure immutability of these fields in the code
refactor ObjectHashSet to initialize iterator properly and add conditional caching to improve performance by avoiding unnecessary object instantiation
added batchBytes tracking and updated conditions in SparkReduceRecordHandler and ReduceRecordSource to accommodate larger batch sizes to ensure accurate processing of data in
updated context modes from WORDED _ READABLE to PRIVATE in AppSettings . java and UpdateUtils . java to improve access control for the application
updated logging messages in JdbcProxyGenerator to clarify the context of closing the connection and added handling for the " abort " method to
updated animation state handling and added accessibility importance to improve accessibility support and ensure proper animation behavior
[ iotdb - 5978 ] change log level from warn to debug for malformed edit error ( # 5979 )
updated scope variable assignment in UaaTokenServices . java and added unit test for scope persistence in UaaTokenServicesTests . java to ensure
updated import statements and modified logger initialization in AvailableJDBCDrivers to improve code clarity and ensure proper logging functionality
resolve split - packages : move everything from kie - api under org . kie - api : kie - api
( chore ) camel - jms : remove unused class
added padding getter methods to CellLayout and modified bitmap creation logic in Launcher to improve padding handling for different orientations in the layout
modified the initialization of the ` cands ` list to conditionally use ` possible ` or ` candidates ` based on the length of the ` sb `
updated SamlMetadataUIParserAction to use Action instead of SamlMetadataUIParserAction and added webflow configuration in SamlMetadataUI
added a method to check open ports for LDAP processes in LdapMockMvcTests to facilitate testing of LDAP process execution using the specified port
log4j2 - 1343 change executorservices . shutdown ( int , int ) from - 1 to 0
updated URL handling and logging in Fetcher and HTMLMetaProcessor classes to improve URL validation and enhance logging clarity
updated SolrQuery to use " name : samsang " and modified the assertion in TestSpellCheckResponse . java to reflect the correct spelling query to
updated Console initialization in TerminalServlet to use constructor - based instantiation to enhance compatibility with newer Karaf Console API
blender loader : make meshhelper . getverticescolors respect the isbmeshcompatible setting
exclude all timestamped report directory when generate report
make test more parameterized and remove redundant test
pdfbox - 4892 : remove unused method , a suggest by valerybokov
improve error message if bindstatus be null
removed debug print statements from JoglInput . java to clean up the code and improve readability
added a flag to allow extraction of private fields in FieldSupport and updated related test cases to enhance field access control and ensure correct behavior when
[ 3.0 ] fix display of device name in webdatadivetimeout
refactor lookup initialization in Platform . java to use MethodHandles for better compatibility with Java 8 to enhance flexibility in creating Lookup instances
renamed ` weights ` method to ` weightsByDouble ` and updated related calls to improve clarity and maintain consistency in parameter handling
added database parameter to the ` writeCustomHTML ` method across multiple writer classes to enable customization of HTML generation based on the database context
removed unnecessary type casting and improved code readability by eliminating unnecessary type casting
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to handle BalanceInsufficientException and BalanceInsufficientException to improve
do n ' t allocate memory if profiler heap dump be disabled
refactor logging methods to use ` sendMessage ` instead of ` println ` and improve error handling to enhance code readability and maintainability by
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java to optimize memory usage and improve performance
added imports for ` ItemProcessListener ` and ` ItemReadListener ` in batch processing classes to enhance batch processing capabilities by integrating item
refactor code for improved readability and consistency in AbstractProviderModule . java to enhance maintainability and clarity of the code structure
removed unnecessary calls to getLiveDocs ( ) in multiple files to simplify code and improve readability
updated Test7005594 . java file to improve test coverage and maintainability
pdfbox - 4892 : fix typo , a suggest by valerybokov
[ hotfix ] fix checkstyle violation in topkrollupphase1job
server : fix npe when try to find domr entry for a domr without ip address
fix ( gamepad ) : trigger on digital and stereo axis not work ( # 1892 )
renamed methods from ` iteratesOverSequence ` and ` iteratesOverSequence ` to ` iteratesOver ` and ` iteratesOver ` , and updated
camel - http - optimize to reduce boilerplate code
added assertions to test COUNT ( * ) queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct behavior of COUNT ( * ) across different
refactor BarChartActivityMultiDataset to use a new LargeValueFormatter class and update random value calculations to improve code clarity and maintainability
updated character handling in CommentsParser to use a predefined INNOCUOS _ CHAR to improve maintainability and flexibility in character management
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation to clean up the code and improve readability
updated printLir call formatting in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency
added a TODO comment for auto - generated method stubs to improve code clarity and maintainability
added support for appending RuleKey to buck rules in DefaultRuleKeyBuilderFactory to enable proper key generation for build rules
added checks for the existence of the system profile directory and refactored test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandler
refactor the creation of NioEventLoopGroup to use a unified createThreadFactory method to improve code readability and maintainability
refactor message counting in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a synchronized method to improve thread safety and maintainability of message retrieval
added an accepted attribute to the ImageFileInputDialog to enhance user experience by allowing image file input functionality
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and improve client instantiation to enhance client performance and simplify client setup
added detailed information about the witness and witnesses classes to ForkController . java to improve debugging by providing more context about the witness and w
added a new test class ` NullPointerAndEmptyArrayTest ` to validate handling of null and empty URL arrays to ensure that the ` CustomURLClassLoader
added a method to find generated source paths from dependencies in BaseIjModuleRule . java to improve dependency management for generated sources in the project configuration
added methods to support wildcard construction with any character delimiter in UaaStringUtils to enhance flexibility in handling wildcard patterns with specific character delimiters
added validation for aliases in the map to ensure that more than one TableScanOperator is present to prevent validation errors
updated MockitoJUnitRunner import and modified exception handling in WeatherQueryTest . java to use MockitoJUnitRunner instead of MockitoJUnitRunner to
added error handling for setting values in TinyGFirmwareSettings to improve robustness by logging warnings when setting invalid configurations
replaced multiple specific imports with a wildcard import and modified the ` getLangs ` method to return a ` Set < String > ` instead of
refactor assertions and import statements in LazyTraceScheduledThreadPoolExecutorTests . java for improved clarity and consistency to enhance code readability
hbase - 26936 tablelockmanager . waitforsnapshot ( ) should wait for table lock before take snapshot
[ wasm ] add platform isNull call .
remove docker quickstart test that be no longer need
added thread suspension handling and updated version checks to ensure proper thread state management and improve version compatibility checks
replaced Javadoc . Since with Javadoc . Hidden and modified return statements in Java11JavadocVisitor and ReloadableJava8JavadocVisitor to
( chore ) camel - spring : fix check for non - empty camelcontextid
removed redundant @ Override annotations from multiple security - related classes to improve code clarity and maintainability
added module import handling and updated eval method in Java2TypeScriptAdapter , updated test assertions in EnumTests , and added a static field in MyComplex
[ bug - 66425 ] fix xssfexporttoxml to work on w3c _ xml _ schema _ uri
update content description in BubbleTextView based on badge presence and notification count to enhance user experience with appropriate pluralization for badge items
added mouse wheel listener to the scroll pane to track the direction of mouse wheel interactions
added a new test method ` testPositioningAbsolute ` in ` VisualRegressionTest . java ` and ensured ` docActual ` and ` docExpected
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to ensure compatibility with
replaced occurrences of ` VacuumEnvironment . Location ` with ` VacuumEnvironment . Location ` and ` VacuumFrame . Location ` with ` Vacuum
simplified the return statement in BitfinexAdapters . java to enhance code readability and maintainability
updated JsonFormat . java to use ImmutableSet and TreeMap for field output and modified message handling logic to ensure default value output is always consistent
( chore ) camel - jackson : remove unused code
refactor virtual thread constants and variable naming for clarity and consistency to improve code readability and maintainability
refactor DirectoryTaxonomyWriter to use final BytesRef variables for better clarity and consistency to improve code readability and maintainability by reducing
refactor VetoableChangeSupport to improve code readability and maintainability
modify the calculation of the vertical position in the BrowserContentPane to correct the vertical alignment by subtracting one from the height
pdfbox - 4892 : remove unused exception , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` , ` setLongSupportMessage ` , and ` getLongSupportMessage ` methods in `
make sure close button be close in exam mode
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization to enhance maintainability and readability of the codebase
updated thread handling in BackendInitializerHelper and TerminalClient , added new command processing tests in G28 _ 1Test and G28 _ 2Test
updated the condition for checking the latest version and release status in SwingStartup . java to simplify the logic for updating application preferences to enhance clarity and
added support for generate file comment in the db migration tool ( # 4078 )
updated the PlayerName argument format to include " < player | * > " in multiple Java files to enhance clarity and specificity of player usage
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filter classes to streamline the codebase
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in the configuration handling
fix testng content handler for parallel class
fix : do n ' t enable active master for old version broker
refactor : remove static import of enums in ctmethod ( # 2103 )
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the shaBase64 method to include a separator parameter and added a test for value return to enhance flexibility in generating secure data by allowing custom
modified the method to handle null parameters for SYSTEM _ ACTIONS _ ENABLED to improve robustness by checking for null values
added a new file ` Person . java ` with a ` Person ` class in the ` org . apache . maven . it0074 `
remove unused usage of fbufs . getlocaladdress ( ) in gossiper
cast ` timeStr ` to ` String ` before checking its index in ` AbstractClient . java ` to ensure proper string case handling to avoid potential `
added assertions to verify the properties of timeColumn and totalDocs from JSON metadata to ensure correct retrieval of timeColumn and timeUnit from JSON metadata
updated color import from java . awt . Color to net . sf . openrocket . util . Color and changed simPlotPanelDesc ' s
added a call to disconnectEmitters upon disconnect to ensure proper handling of disconnect events
adapt to api change in spring 3.0
alexeibarantsev : add test to make sure we can click on element hidden by double overflow
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added support for custom JNDI lookup in JtaTransactionManager to enhance flexibility in retrieving the transaction synchronization registry
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the interface by eliminating unnecessary functionality
replace variable ` enabledCiphers ` with ` result ` for cipher array handling in ` JSSESocketFactory . java ` to improve code clarity and
use java . time . instant . toepochmilli ( ) instead of java . time . instant . toepochmilli ( ) for timestamp
replaced null checks with requireNonNull for buffer and userCredentials in Identifiers . java and DatabaseConnector . java to improve code readability and maintainability
fix issue with null value in input object coerce
added boundary checks for row and column indices in FlightConfigurablePanel . java to ensure valid index values to prevent potential ArrayIndexOutOfBoundsException
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness during selection
[ java ] unnecessarylocalbeforereturn false positive with local before return
refactor script engine initialization to use a local variable and simplify language check to improve code readability and maintainability
no need to compute variance in Euclidean distance similarity when there be no component
do n ' t run the backup incrementally if the sstable be null
refactor relativization logic in MorePaths to use a new helper method to enhance code readability and ensure consistent behavior when relativ
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType to ensure compatibility with null values and improve data formatting
[ hotfix ] [ test ] skip 1 . log . tmp file in dlq test
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpcImpl
renamed ErrorHandlerController to Error403Controller and added new error 404 and 404 error controllers to improve clarity and organization of error handling controllers
replaced ` TerminalFactory . resetTerminal ` with ` TerminalFactory . resetIf ` in both ` UnixTerminal . java ` and ` WindowsTerminal . java
improvement to the tiny coll . toarray ( ) method to make it compatible with java 21
fixed - connection leak in connection pool
updated method names from getDateConverter ( ) to getLdapDateConverter ( ) to improve clarity and consistency in naming conventions
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve clarity of error messages by including the class loader context
smallstreamlettest : increase timeouts for reader and writer test
updated the logic for setting the current item in the view pager based on shared preferences to dynamically count extra pages based on user settings
added error handling and refactored bitmap creation in AndroidImplementation . java to improve robustness and maintainability of image rendering
added @ SuppressSubnodes annotation and removed unnecessary node suppression in BaseParser . java to streamline code by eliminating redundant node handling
pdfbox - 4892 : use try with resource , a suggest by valerybokov
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the current project
added a shell command for input keyevent 82 in AbstractLauncherUiTest . java and modified the assertion in LauncherInstrumentation . java to enhance test
added JSON mapping for filename to URL in FileDumper to facilitate easier serialization and deserialization of file URLs
bugfix # 205 , make resetresultsnotified flag accessible from the profilerserver
blender loader : use the new loadimage ( ) method to load texture .
camel - spring - boot : fix spring boot test with wrong id
updated ISBN - 1202 year from " 9781797745008 " to " 9781797845005 " in RandomizersTest
updated notification sound configuration to allow dynamic ringtone retrieval from user preferences
added a method to report the loop count in the RootNode class to enable tracking of loop iterations effectively
added logic to finalize stack version for the cluster in FinalizeUpgradeAction . java and updated cluster entity merging in ClusterImpl . java to ensure that cluster
fix incorrect rangeid in listbyregionidandstatesearch
removed an unnecessary line of code in ItemOrientedStep . java to streamline the code for better readability and maintainability
added a new file ` CountedLoopProblem . java ` that generates a test case demonstrating the behavior of the counted loop algorithm to ensure that the
refactor : remove unused metaspacemethod parameter
make ` pendingfailedspeculationoffset ` parseable by jvmci
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing capabilities by integrating value transformer
update constantsum question to include received point
added call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to enable dynamic color application for activities when available
added thread management and stack dumping functionality in CloseRace . java to improve error handling when at least one child thread fails to finish gracefully
None
updated the arc size calculation to use a calculated value instead of a fixed one to improve flexibility and maintainability of the rendering logic
change the image size from 720x512 to 640x 640x480 in the AddAndScaleMultiImage and ImageBorderCuttingWizard classes to
renames occurrence of ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` and updates corresponding getter and setter methods in ` SqlSourceBuilder `
added state transition checks in WorkProfileTest and modified waitForStateTransitionToEnd method in AbstractLauncherUiTest to ensure proper handling of launcher state transitions
added new configurations including CasCore * and CasCoreHttpConfiguration in multiple test files to enhance integration with the Apache CAS framework for
replaced direct calls to readLong ( ) with DataIO . readLong ( buf ) for improved performance to optimize data reading efficiency
camel - 16400 : camel - http - optimize to avoid set header multiple time .
refactor classpath initialization to use module boot path instead of a hardcoded one to improve clarity and maintainability of the classpath handling logic
resolve issue with audio / voice scope not be inject into the script . fix # 241
add the ability to set the layer manager for an animation layer .
added a check to return early if the queue is empty in DeferredHandler . java to avoid unnecessary processing when the queue is empty
added null checks in MapRecordProcessor and modified exception handling in TezProcessor to improve error handling by logging original exceptions instead of general exceptions
refactor center and center2D handling in CylinderRegion . java and add a new setCenter method to improve code clarity and
refactor test cases in TestBadUseCases . java to use ExpectedException for exception handling to improve clarity and maintainability of test logic
updated the ` sendOneQuery ` method to handle null ` subparams ` and added a new test method ` testMultiExecute ` in ` StatementTest
do n ' t log message when VisualVM - Security customize security environment
added a new ` ViewGroup ` tag to the ` @ GET ` method in the ` ReviewInterface ` class to include ` android . edit ` tag
rename Test . java files to improve clarity and consistency in naming conventions
updated PBEKeySpec to use keyLength instead of blkSize to enhance flexibility in key generation
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and propagate protobuf deprecate option
added call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document header
added a distance calculation and a warning log statement in GpsLoggingService . java to limit the size of points that are too large for logging purposes
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 438 )
use weak reference in insightfilter to prevent memory leak
removed binary search in the addition method of AllAppsList . java to simplify the code by directly adding elements to the added list
refactor SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and replace theme setting logic with an Intent to streamline the activity '
updated the value class name from " HostD " to " UsingUnresolvedD " to improve clarity and consistency in test naming
removed duplicate assert statement for assertRootArcs ( ) to improve code readability and maintainability
added an assertion to verify the existence and type of a security policy to ensure that the security policy is valid and is a file
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - olingo2
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread synchronization during tests
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by not passing the exception details
added action to publish xmpp image via http
fix camel - netty leak when use producer pooling
updated URL template regex and added unit tests for invalid host names in BalancedClickhouseDataSource to ensure correct parsing and validation of database URLs
remove system property to disable jsr199 compilation
added handling for null string inputs in CSVRecordReader and CSVRecordReaderConfig to improve CSV output by allowing null values to be processed
added LiquibaseService annotation to multiple connection classes including OfflineConnection , DerbyConnection , HsqlConnection , and SybaseASAConnection to
updated method signatures to use ` JavaSourceFile ` instead of ` CompilationUnit ` to ensure compatibility with Java source files and improve type safety
update itemcommandtriggerhandler and itemstatetriggerhandler to use itemname / command instead of item * for consistency
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to correct the exception handling to ensure
deprecated " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig and updated corresponding assertions in TestSolrXml to
fix the mana tablet not show durability bar correctly . close # 388
added a method to set the identifier collection in the P25P2DecoderState class to ensure the current call event has the correct identifier collection
removed unused imports for DictionaryCompoundWordTokenFilter to streamline code by eliminating unnecessary dependencies
updated the thread pool executor string format in ScryptUtil . java to enhance readability and maintain consistency in naming conventions
refactor GeneratedCode class to improve code organization and readability
updated assertNotNull method to include the definition parameter to improve error reporting for null definitions
hide the share with me icon in the local file list adapter
updated the links in CSS links from HTTP to HTTPS in DefaultLogoutPageGeneratingFilter , LogoutPageGeneratingWebFilter , and DefaultLogoutPageGeneratingFilter
updated import statements and modified method parameters in RouterFilter . java , RouterServerListFilter . java , and RouterDistributorTest . java to en
enhanced assert message in TestIndexWriterMergePolicy to include more context about document count and segment count to improve debugging information during assertions
[ hotfix ] [ runtime ] deprecate non - public api in contrib / vector api
fix npe in crawlersessionmanagervalve when multiple context aware
fix security issue in jspc
updated length calculation logic in RocketComponentConfig . java to ensure minimum and maximum values are computed based on component boundaries
added Singleton annotation to NonceService and updated binding in OpenIDAuthenticationProviderModule to ensure singleton configuration for the NonceService instance binding
added a new method to update child links in FileWrapper . java to enhance functionality by allowing updates to child links with specified user context
refactor code to remove redundant HTTP method parameter and improve readability to enhance maintainability and clarity of the code
[ hotfix ] [ test ] increase publish delay in retrieval blocking test
added a flag ` mShiftCodesAlwaysAlwaysOverride ` to control the behavior of ` mShiftCodesAlways ` based on user preferences to ensure that the
[ type : fix ] fix flaky test curatorleaderelectionmanager .
removed unnecessary braces in NearbyActivity . java to improve code readability and maintainability
updated filtering logic to check if the referenced service name is not empty instead of starting with a slash to simplify the identity validation condition
updated method signatures to replace ` AbstractCommandOptions ` with a ` boolean ` parameter ` noop ` to improve clarity and functionality of the ` newInstance `
added a sleep delay of 3000 milliseconds in TestListenTCPRecord . java to ensure proper handling of IO exceptions during testing
updated the handling of method call arguments in PatchExtensionMethod . java to ensure consistent assignment of original arguments to avoid redundant operations
replaced Map with Set for managing native libraries and updated related methods to improve performance and simplify library management
int - 1499 add namespace support for ' apply - sequence ' , ' ignore - send - failures ' and ' channel - name - resol
removed unused x509 publish URL handling from ClientKeyPublisher and JwkViewResolver to streamline code and improve maintainability
modified the way SolrIndexReader is assigned based on the length of readers is handled to improve clarity and maintainability of the code
added new parsers " max " and " min " to the ValueSourceParser to provide functionality for calculating the maximum and minimum values from two double values
simplified return statement by always returning ' this ' to enhance code clarity and reduce unnecessary null checks
removed unused variables from Highlighter , SpanGradientFormatter , and TokenSources classes to clean up code and improve readability
cloudstack - 6894 : fix cloudstack - 6894 : cloudstack - 6894 : cloudstack - 6894 : use
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ObjectProvider for FlowBuilderServices to improve dependency management and
updated WriteJdbcPTest . java to improve database connection handling and renamed constants for clarity to enhance code readability and maintainability by
remove check for prefs . get ( ` ` editor . laf ' ' ) to avoid npe
replaced calls to ` getStateEntity ( ) ` and ` getDesiredStateEntity ( ) ` with direct calls to ` stateEntity ` in ` ServiceComponent
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a condition to break execution in RootFolder . java and updated status line message in NavigationShareTab . java to improve user experience by providing a cle
updated threadId variable assignment in CPUCallGraphBuilder . java to ensure correct thread identification within the filter logic
quick fix for # 2114 ( default perspective should be set to 0 )
added network address change listener to the HomeKitImpl class and improved logging messages to enhance network management and provide clearer error messages for
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use getLeaseRenewalTime instead of getLeaseManager to improve
changed the initialization of ` arg . prefixHeader ` to include ` linkStyle ` as an ` Optional < LinkStyle > ` to enhance clarity
added null check for error message before handling fatal IOException to avoid NullPointerException when message is null
changed ` nextID ` to be ` volatile ` and modified the ` getSize ( ) ` method to return ` nextID ` to ensure thread safety and
resolve intermittent failure of vm transport network test
added HasSourcePath interface and modified class inheritance in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg to implement it to en
simplified the exception message by removing unnecessary string concatenation to improve code readability and maintainability
added a custom index field name to the OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to enhance facet configuration flexibility
updated the ` toEpochMilli ` method to handle negative seconds and positive nanoseconds correctly to ensure accurate conversion of seconds to milliseconds when seconds are less than zero
oglesshaderrenderer and lwjglrenderer now call getname ( ) instead of getbuffertype ( ) .
added logic to temporarily disable block update scripts to improve performance by controlling script blocking behavior
added a new file ` TestCMoveLimitType . java ` with a method for manipulating buffer and character buffer to implement a test for
refactor audio packet processing to improve efficiency and clarity to enhance performance by reducing redundant processing of audio packets
camel - 14284 : camel - core - optimize to reduce object allocation .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the operating system
refactor console handling in Main . java and VersionCommand . java to improve code organization and encapsulate console output logic
updated the validation logic in InputStreamBinder and removed it from NextcloudRequest to streamline token validation process and improve code maintainability
improve error handle for invalid http input .
add test for delete a non - existent group member
( chore ) camel - ftp : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to the class is no longer needed for the current protocol version
replace ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathSourcePaths
added new classes ` ConstructorArgsDemo ` , ` FinalDemo ` , and ` StrictDemo ` with private accessors for ` secret ` and ` method
make directtemplatefeaturecollectionfactory thread - safe to close templatefeatureiterators
fix assertion to take into account replication factor
added a null check for the index number in ItemRowAdapter to avoid potential NullPointerExceptions during date comparison
rename ` ` show anchor ' ' to ` ` show ancestor ' ' in filter .
added a condition to return early if the app width is less than 12 to optimize performance by avoiding unnecessary processing
updated change log parameter equality check from ` = = ` to ` . equals ( changeLog ) ` to ` . equals ( changeLog ) ` to
changed the ` loggers ` map from static to instance to ensure that the ` loggers ` map cannot be modified externally
modify the return statement to call ` p . getBasePlot ( false ) ` instead of directly returning the result of ` p ` to ensure that the method
do n ' t warn about file not exist during upload
added a boolean parameter ` sendStatus200 ` to several constructors and methods to control the status of FGI responses to enhance flexibility in
added a check for non - empty comment length in the multi - line comment processing to ensure that empty comments are handled correctly
added imports for BuckFileType and FileTypeManager , and implemented a runnable to remove specific file types from the application ' s write action to ensure that
replaced multiple specific imports with a wildcard import and updated the return type of the multiply methods from ComposedToLong < T > to ComposedToInt < T
added handling for unsupported OS version in RTMGenericCommandLineOptionTest and improved error messaging in TestUseRTMLockingOptionOn
formatted code for consistency and clarity in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code readability and maintainability
added mockito package import for ChannelTypeUID to facilitate mocking the ChannelTypeUID class for testing purposes
fix indexoutofboundsexception in guesttohostreflectivecall .
set the system context to null in AndroidTestEnvironment and implement context resetting in ShadowFontsContract to ensure proper resource management and prevent memory leaks during tests
added ` toMillis ` method to ` TimeGranularity ` and modified ` DateTime ` initialization in ` PinotDataSourceDimensionFilters ` and `
fix a bug in controlflow . try / catch / finally block do n ' t flow correctly .
added array size validation and improved error handling in assertEquals to ensure array consistency and provide clearer assertion failure messages
add default case to windowclicklogic to handle unknown click type
fix index off - by - one error in meshbuilder
nifi - 1978 : remove dependency on controller service provider in standardprocessscheduler
added support for configuring Java annotation processor parameters in KotlincToJarStepFactory to enhance flexibility in annotation processing for Kotlin compilation
updated RESCROLL _ DELAY from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION 150 and refactored page
reload workspace when shortcut permission change
added a new case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle navigation to the back navigation to improve user experience by
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure proper core existence validation and error messaging
added marker selection functionality in NearbyMapFragment to improve user experience by hiding the bottom sheet when a marker is selected
added exception handling in FileSyncAdapter . java to improve error reporting by catching exceptions and printing stack traces
make testmemoryawareness more robust by catch runtime exception
modified FeedQueues . java to adjust feed processing logic based on application settings for heavy load to ensure feeds are only processed when not in heavy load
add warn log if defaultdrmsessionmanager be use on wrong thread
updated AndroidBinaryDescription to use Locale . US for packageType and resourceCompressionMode to ensure consistent case handling across different locales
update mime type from text / xml to application / xml
updated file path references in Args . java to ensure consistency in configuration file handling
updated the timeout value in the waitUntilReadyAndTimeout method call to simplify the test execution by removing unnecessary wait time
updated mathematical operations from IntMath to LongMath in HiveExpandDistinctAggregatesRule . java to ensure compatibility with larger distinct values and improve performance
added multiple checks for headless environments in mmm Toolkit . java and ppp Toolkit . java to throw a ` HeadlessException ` to ensure
check if the current recipe match the furnace ' s world , not just the current furnace .
make movethreadcount an optional feature to the defaultsolver
fix bug in fhirresourcedaor4searchnoFt , which select the wrong resource type when use revinclude
added a new test class ` Issue582Test ` for testing the functionality of the ` BTreeKeySerializer ` to ensure that the `
[ native ] add e2e test for decimal overflow
refactor LoadingCache class for improved performance to enhance efficiency of loading operations
added a new rule " AvoidNonConstructorMethodsWithClassName " to the naming rules to ensure that non - constructor methods are excluded from the test case
danielwagnerhall : fix expectedconditions . isdisplayed ( ) to handle staleelementreferenceexception .
refactor view existence check in ViewExistsPrecondition and add hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve error handling
refactor DOMUtil class to improve code readability and maintainability
added translation calculations and a utility method to log matrix transformations to enhance animation feedback during task view animations
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable fixed rotation form functionality in the application
added a method to walk all arcs in TempFSTTermsReader and modified output writing logic in TempTermOutputs to ensure correct handling of
added SolrQueryRequest parameter to the create methods across multiple factory classes to enable the creation of documents using Solr queries
updated TRIGGER statements and added content checks for Post and announcement in SingleTableMySQLTriggerTest . java to ensure proper handling of null values
refactor comparator usage in FieldValueHitQueue and TopFieldCollector to improve code clarity and maintainability by centralizing comparator assignment logic
updated SQL query string formatting for consistency and clarity to enhance readability and maintainability of the test code
init spark client before run test
added methods for managing total storage pool , fee , and usedages in DynamicPropertiesStore . java to enhance storage management and provide better
added support for streaming files from srcDir based on user properties in AssetsController to enhance asset streaming functionality for development mode
mapmarksmanager : use getmapmarkkey ( ) to check for map mark
added tokenRewriteStream parameter to generateConstraintInfos and updated default value retrieval logic to enhance semantic analysis capabilities by incorporating token rewrite stream handling
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to simplify
fix classloading issue in jxbrowsermanager and fileutils
added a check for the " AppVersion " property in the IOSImplementation class and simplified image file creation condition to enhance code readability and
[ somfytahoma ] fix log message in somfythahomabridgehandler
( chore ) camel - alberto - aggregator : disable flaky test on github action
use static sslcontext instead of sslcontext for test
added handling for NaN values in metric exporting to improve robustness by logging warnings for undefined or misconfigured values during exporting
remove a sessionId from the session info map to avoid duplicate session registrations
added logic to set a default hostname for null alerts in HeartBeatHandler to ensure a valid hostname is used for alert instances
simplified the buffer flushing logic in ChannelEndPoint . java to improve code readability and maintainability
resolve split - packages : move everything from kie - api under org . kie . api : move everything under org . kie . api :
added a test for seeking to the previous seek mode in ShadowMediaPlayerTest . java and modified the seekTo method in ShadowMediaPlayer . java to ensure
changed method names from createTask to createThrowingTask across multiple classes to improve clarity and consistency in naming conventions
improve close button appearance for aqua laf
added connection and timeout settings in TSPTimeStampService . java and refactored test methods in TestSignatureInfo . java to improve request handling
[ drools - 5663 ] add wildcard type permission to xstream ( # 1542 )
updated diamond application logic and added a new DiamondRaw class to enhance type parameter validation and facilitate testing for diamond usage
[ calcite - 2852 ] fix checkstyle violation in reloptutil
updated argument validation in Http2Settings . java to allow both unsigned 16 - bit and unsigned 32 - bit values to ensure that setting IDs and values are
deleted the files MapInterfaceTest . java and Issue664Test . java to remove obsolete test cases from the project
added a test case to verify behavior when disposed from a disposed session to ensure proper error handling and session management in the tests
fix geojsonwmsbuilder to properly output root object
updated setIndex method to use intValue ( ) for selectedIndex to improve code readability and maintainability
added a method to check if manual unstashing is possible before proceeding to improve user experience by preventing unnecessary unstashing operations
camel - 14284 : camel - yaml - dsl - allow to dump route a xml or not .
modified the ` getEventMismatchMessage ` method to include a ` waitForExpectedCount ` parameter and adjusted event retrieval logic to ensure event mismatch checks are conditional based
added a new file ` HeaderFixer . java ` to handle license file processing to ensure the correct header is written to the specified file and
added a broadcast to indicate when the first load completes to enhance user experience by notifying the listeners when the first loading completes
deleted the SuperJumperAndroid . java file to the functionality is no longer needed in the project
updated the return value of ` SystemTableScan . java ` to check if the table is distributed and modified the query construction in ` TestStarQueries .
[ hotfix ] remove unused interface in observation interface
fix memory leak in loader .
cast ` i ` to ` long ` in ` AtomicIntegerArray ` , ` AtomicLongArray ` , and ` AtomicReferenceArray ` to ` base
added caching for lastDateFormat and lastFormats in HSSFCellStyle . java to optimize performance by reducing redundant calculations
updated the URL query parameter to include the username in the request to enhance security by ensuring the username matches the authenticated user
pdfbox - 4892 : use def . finished ( ) instead of def . needsinput ( ) in deflater . updateinput ( )
updated the logging of launcher app exit to include container information to improve logging clarity by including the current page and page index details
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
chore ( core ) : remove deadlocktest ( no longer use )
added null check for newInput and improved marker addition logic in BugContentProvider and BugGroup classes to ensure proper handling of null input and
added a " Reopen in Browser " menu item and refactored server opening logic to use it to improve user experience by allowing users to open the
added a new error message for repeated outputs and improved code formatting in SemanticAnalyzer . java to enhance error handling by providing clearer feedback
added null checks for entry listeners in BasicTest . java to ensure proper handling of null parameters to avoid runtime exceptions
fix coordinatearrays . reverse ( coordinate [ ] ) throw indexoutofboundsexception
removed unnecessary whitespace in setOpen method call to improve code readability and maintain consistency
set the first element of the TestPayloads class to false to reset the state to false before further processing
replaced the direct invocation of enterOverviewMode ( ) with a call to showOverviewMode ( true ) to streamline overview mode handling for better readability
resolve intermittent networkroutetest failure on slow machine
int - 1978 , int - > integer . max _ value , int - > integer . min _ value , int - > integer . max
[ wasm ] fix javadoc warning in amd64
refactor HttpClientRequestImpl to streamline component addition and improve buffer handling in HttpTest to enhance performance and maintainability of buffer operations
updated the artifact string format and verbose level setting in GetMavenDependenciesTask . java to improve clarity and accuracy of the dependency extraction process
pdfbox - 4071 : avoid classcastexception find via oss - fuzz
removed unnecessary print statement from ReferenceUtil . java to clean up the code and improve readability
fix visibility predicate to work with query type
added ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` parameters to ` CommonParameter ` , and updated
added a type check for ` folder ` before removing it as a drop target to ensure type safety and prevent potential casting errors
refactor the creation and processing of stub JARs into a separate method to improve code readability and maintainability by reducing duplication
updated feature descriptions in StartPageTopComponent . java for clarity and added a new workflow helper to enhance user experience to improve user experience by providing
move schedulewithfixeddelay to before method to avoid race condition
[ hotfix ] remove unnecessary boxing in onlinetestcase
replace ReturnAttributes . NONE with ReturnAttributes . ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure compatibility with all user return attributes
None
updated CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to enhance functionality by allowing non - blocking operations
updated TABLE _ HEADER _ SEPARATOR to support multiple columns and improved regex matching to enhance flexibility in table header parsing and ensure correct
change return value from 32.0 f to 31.5 f to improve camera precision for better rendering
added a preference for on - booting settings in GpsSettingsActivity and modified return statements in Utilities to remove specific URL and simplify URL formatting to en
increased the client secret length from 128 to 512 to accommodate longer client secrets for improved security and performance
updated the assertion message in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to clarify the need for null parameter passing to enhance error handling
disable scheduledmethodmetricstest due to race condition
updated the ` getInputPinotFS ` and ` getOutputPinotFS ` methods to throw an ` Exception ` and replaced ` PinotFS
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter for english to ensure consistent date display across different languages
added MetalLookAndFeel import and set it as the UI look and feel to enhance visual feedback in the user interface
refactor ping task handling in WebSocket communication to ensure proper shutdown of the executor service to improve resource management and prevent potential memory leaks
replaced throwable . getMessage ( ) with throwable in the GlobalErrorHandler . java file to simplify error handling by removing unnecessary message retrieval
refactor variable names from ' module ' to ' from ' for consistency to improve code readability and maintainability
updated exception handling to use CmdLineException instead of Exception to improve type specificity and error logging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added ` hashCode ( ) ` method to ` Subject ` class
None
pdfbox - 4892 : set minimum zoom value to 0 , a suggest by valerybokov
refactor admin user and process user handling in DrillRoot . java to use ImpersonationUtil for role - based user identification to improve
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` and refactored assertCheckPermission
added argument extraction functionality to the DelegatedClientAuthenticationAction class to enhance service resolution by integrating argument extraction capabilities
changed the defaultGroup variable from non - final to final to ensure immutability of the default group variable
tilesizechanger : use destroytilecaches ( ) instead of destroy ( )
removed redundant calls to removeAllViews ( ) in InfoLayoutHelper to streamline code by eliminating unnecessary view management
renamed the method ` cleanEntriesForFeedsWithoutSubscriptions ` to ` cleanFeedsWithoutSubscriptions ` and updated its implementation for better cl
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with direct variable usage to streamline authentication handling by eliminating unnecessary method calls
nifi - 1979 : fixed file base cluster node firewall test to work on window .
fix for conic five - point : use constant instead of variable
reformat to improve code readability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to mmm Fields . java and ppp MockitoBeforeTestNGMethod
refactor CImage methods to improve image handling by renaming and restructuring image creation logic to enhance code readability and maintainability
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to utilize byte array comparison functionality
replace ` runtimeVisibleMethodOfFieldAnnotations ` with ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass .
use objects . equal for null - safe equality check
[ hotfix ] [ test ] add method to resolve class from binary name
added default verification for HTTP response headers in NinjaDefaultTest to ensure proper handling of specific HTTP status codes and error messages
renamed the method from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated its parameters and logic for better cl
adjusted padding bottom value in DetailFragment and modified listViewPositionOffset logic in ListFragment to improve layout consistency and ensure correct vertical margin calculation
solr - 19489 : do not swallow interrupted exception in zkstatereader .
added null checks for header values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure robust handling of
server : check if static nat service be support in the network before attempt to use it
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) to improve user interface responsiveness
remove extra empty screen during workspace resizing
added fixedWidth property and modified glyph advance logic to accommodate it to improve glyph alignment handling for better text rendering
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored related logic in ` ChangeLogFragment . java `
added preEvent , preTransition , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state event processing and error handling in the
[ hotfix ] fix checkstyle violation in configdescriptionprovider
updated role creation in TestAuthorizationApiAuthorizer and enhanced HiveConf handling in StorageBasedMetastoreTestBase to improve role management and support Windows
refactor facet sorting logic to improve clarity and handling of count sorting to enhance code readability and maintainability
updated properties handling in CheckstyleReport to use dynamic directory for checkstyle cache file to improve flexibility and maintainability of the cache file path configuration
refactor the deletion of inactive replicas in DeleteInactiveReplicaTest . java to improve clarity and functionality of jetty stop logic to enhance test
added a file name parameter to the FileActionsDialogFragment newInstance method and updated its behavior based on its value to allow users to specify a file name for
update reorder direction handling in CellLayout to support new modes _ ON _ DROP _ EXTERNAL and MODE _ ON _ DROP _ EXTERNAL to
renamed fields in InnerTransferRequest and updated path annotations in AccountAPI to improve clarity and consistency in API endpoint structure
wait for job to finish before send test failure notification
added a new annotation interface EnableAdminClient in the admin client package to provide a configuration for enabling or disabling the admin client functionalities
replaced specific imports with a wildcard import and added type checking for identifiers to streamline import statements and enhance identifier handling in the visitIdentifier method to improve
updated action text color in AuthenticatorActivity to enhance visual consistency with the primary dark theme
added ComparableField support and refactored find methods across multiple manager classes to enhance functionality for finding entities by using ComparableField types
renamed methods and variables from ` addTestStepsForPickleSteps ` and ` addTestStepsForAfterHooks ` to ` createTest
renamed test method from ` noArgMethodIsNotIsValid ` to ` validNoArgMethod ` to improve clarity and reflect the purpose of the test
added a method to cancel a client and modified the ` startDriver ` parameter in ` SparkClientImpl ` and introduced a parameter to ` startDriver `
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller ` , and `
initialize lastDisplayedUser to Optional . empty ( ) in FileDisplayActivity . java to ensure that a default value is provided when null
added a new method ` findAll ` in ` QueryDslMongoRepository ` and a corresponding test in ` AbstractPersonRepositoryIntegrationTests ` to en
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions during execution
[ hotfix ] [ benchmark ] add miss break in case of a failure
pipelinedpipeline : add xread ( ) and xreadgroup ( ) method to pipeline interface
removed unnecessary comments and simplified read byte count increments in LinkedBufferInput and StreamInput classes to improve code clarity and reduce unnecessary complexity
added a new ` WebSecurityCustomizer ` bean and updated ` CasWebSecurityConfigurerAdapter ` to use it to enhance security
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to include
added a method to register content providers in ShadowContentResolver and modified ContentProviderController to handle provider registration and creation to enhance content provider management
updated AttributeReader to use ClassFile . Version instead of Version to ensure compatibility with the latest class file structure
fixed - singleconnectionmanager do n ' t respect keepalive setting
[ java ] use supplier for the flow control strategy when send the sender of a multicast connection .
fix for crash when click on invisible line
added concurrency support and improved error handling in multiple classes to enhance performance and robustness of asynchronous endpoint handling
updated WebDriver initialization to support different driver types based on configuration to enhance flexibility in selecting different selenium environments
replaced assertEquals with assertThat in multiple test files to improve readability and consistency in assertions
truffle / instrumentation : remove deprecate contextreference . getcontextreference ( ) from trufflelanguage .
initialize ` e ` to ` null ` and modify exception handling in ` StubberImpl . java ` , and add new test classes for
modified actor check in Actor . java and Group . java to throw an IllegalArgumentException for non - ascendant actors to improve error handling to enhance cl
added location permission checks and refactored the getCenter method in LocationPickerActivity to enhance user access control for map location uploads
add a simple ejb - driven example to show how to use a counter
added import for CookieSpecs and set standard cookie specification in GetHTTP . java to enhance request configuration for cookie handling
simplified the intersection check between two regions to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to optimize audio processing by using non -Clipping gains
added support for monitoring URLs in the ScrollingPanel and SystemInformationsButtonsPanel classes to enhance user experience by allowing access to monitoring
[ hotfix ] remove unused config option kubernetes . service . create - timeout
updated icon resource assignment based on the presence of city description to improve clarity and specificity of nearby place icons
added a null check for the type package before processing its name to prevent potential NullPointerException when processing the class type
added a new file PrintInlining . java that prints " Passed " to the System . out to facilitate testing of the Inliner functionality
fix : fix issue with nested brace in javadoc tag ( # 2382 )
[ java ] remove unused field in archivetest .
updated method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTableModel ` and ` EdgeDataTable
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to improve code cleanliness and reduce unnecessary dependencies
updated Timber logging to use float instead of integer for playback speed to improve precision and clarity in log messages
update chat room cache when room be remove from cluster .
updated the ' minimize ' field from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to align the data type with the new core
added key configurations for flipping and generating mipmaps to enhance texture rendering options for better performance
None
[ wasm ] make library normalization pas an abstract class .
replaced the method call ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added a new test
[ hotfix ] fix checkstyle violation in memorymanager
cloudstack - 4892 : add miss @ temporal annotation to consolesessionvo
added new ` Hbs ` and ` HbsTest ` classes for handling Handlebars templates in the ` io . jooby . handlebars
fix empty / null hint message
fix data import for csv which use key instead of value
stabilize test : wait until confirmation dialog appear
added a condition to return null if distinct column indices exceed two to ensure proper handling of distinct column scenarios
refactor MiscUtils to improve error handling and add a list check to enhance robustness by preventing duplicate entries in the list
regenerate client with updated copyright year ( # 84 )
updated dependencies from websocket - server and websocket - client to jetty - websocket - server and jetty - websocket - client to ensure compatibility with
updated the return statement to return an unmodifiable map from identity ' s attributes to ensure that the original map remains unmodified during processing
make sure ` ` documentmodified ' ' be update when sketch file change
replaced instances of ` new Double ` , ` new Float ` , ` Double ` , ` Float ` , and ` Long . valueOf ` with
replace result . put ( colName , result . getTimestamp ( colName ) ) with result . put ( colName , result . getTimestamp (
updated class name handling in HtmlJndiTreeReport . java to support additional context binding types
refactor database option handling to use a variable for default options to improve code readability and maintainability by reducing method calls
updated edgeType check from " double " to " mutual " to ensure correct handling of mutual edges in the GEXF importer
replaced the private static final integer FLAG _ SLIPPERY with an import for FLAG _ SLIPPERY in StatusBarTouchController . java to
truffleconstantfieldprovider : fix array dimension computation for primitive array .
added Google Drive folder path preference and updated related classes to handle it to improve user experience by allowing users to specify the folder path for GPS
ggb - 2118 shuffle suggestion in av ( algebra view )
added @ Nullable annotations to various assertThat methods in Truth . java to enhance null safety to prevent potential NullPointerExceptions
update bitwise operations in ArrayUtil . java for improved clarity to enhance readability and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check constructor instrumentation to ensure that ` ApiException ` is
[ stream ] fix race condition when delete stream output stream
added a boolean field ` isKeyguardSecure ` and its corresponding setter method ` setIsKeyguardSecure ` to ` ShadowKeyguardManager
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization processes
updated the way overrides are parsed and processed in GrblUtils . java to ensure compatibility with additional input formats
[ hotfix ] [ test ] fix typo in multiplefailureexceptiontest
do n ' t call checkdrained ( ) after close ( ) in asyncfileimpl # checkdrained ( )
updated LIGHTS _ NUM and LIGHT _ INTESITY values , modified light shader creation , and modified sample settings in HybridLightTest . java
replaced instances of FakeProjectFilesystem with workspace . getProjectFileSystem ( ) in multiple test files to streamline filesystem access and improve code consistency
updated variable types from String to PathWithLines for improved type safety in RuntimeOptions and CucumberFeature to enhance code clarity and maintain
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
remove @ notnull from pubroot . test _ directories ( # 2022 )
added a call to close the ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in BasisLibrary to improve concurrent access to prefix indices across different threads
added LogLevel annotation to TestDistributedStatsComponentCardinality . java to improve debugging capabilities for HTTP connections
added throwIfImmutable ( ) method to IntList . java to ensure immutability of the IntList instance
added @ NotNull annotation to the ` onApplicationEvent ` method and modified the managed channel builder to use a dynamic URL to enhance null safety and
refactor package structure and simplify code in Graal . java to enhance maintainability and readability of the code
fix invalidation of function array in insight per context .
added platform detection for writing the manifest file on Windows to ensure compatibility with both Windows and Unix - like systems
change the priority from NORMAL _ PRIORITY to HIGH _ PRIORITY in FindNullDeref . java and add a new RFE3531161 .
added null checks for config descriptions in multiple files to enhance robustness by preventing potential NullPointerExceptions during configuration retrieval
[ hotfix ] [ runtime ] fix checkstyle violation in masterjobcontext
pdfbox - 4892 : initialize stream only when necessary , a suggest by valerybokov
fix typo : managerbase - > manager
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to allow access to All Apps from the
replaced the manual instantiation of FragmentActivity with Robolectric ' s built - in activity controller to simplify activity management and improve code readability
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` in ` FileProcessor ` to
rename test class to avoid confusion
renamed the parameter from ' num ' to ' value ' in DynamicPropertiesStore . java and added a null check for the blackholeAddress in Manager
updated the handler setup in OpenRocketViewer to call doSimsChanged ( ) before setting the current rocket handler to ensure that changes to the
add a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to change dependency group ID and artifact ID in the Maven recipe to
refactored path initialization and added segment validation in IndexingJob and SegmentChecker to improve code clarity and ensure segment paths are validated correctly
updated comparison from ` lt ` to ` lte ` for ` scanPtr ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java
refactor PreprocessorDelegate to use memoized suppliers for replacement paths and source map to improve performance by reducing object creation overhead
rename ` JsonExamples ` class to ` Examples ` and update package - info . java files to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java to improve traceability and debugging capabilities during the extraction process
doc : fix typo in findsBylinktext javadoc
added a new Main class that prints a success message indicating the hit of the Java oop entry point to indicate when the Java oop entry point is hit
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
removed redundant continue statements in NativeScanner . java to improve code efficiency and readability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unused imports to
refactor AndroidLibraryDescription to use a memoized supplier for dependency resolution to improve performance by reducing redundant code and enhancing readability
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` for accessing remote contains results to simplify code and improve readability
added content encoding extraction from the content stream in ExtractingDocumentLoader to ensure the correct charset is used for metadata extraction
updated SQL statements and prepared statement syntax in DatabaseConfig . java to improve code readability and maintain consistency in SQL injection
fix npe in window listener when no slot be select .
add cli option to ignore remote repository introduce by transitive dependency
removed the injection of the BackgroundJobManager in ContactsPreferenceActivity to streamline code by eliminating unnecessary dependencies
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions
added null check before closing the selection object to avoid potential NullPointerException when closing the selection
added a condition to break if the current index equals the length of the matcher and matches the entire string to optimize performance by avoiding unnecessary processing
added a value of " server . port = 0 " to the IntegrationTest annotation to specify the server port for testing purposes
added a new reverse UDF and registered it in FunctionRegistry to enable reverse operations in the Hive user interface
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to ensure consistency in context path retrieval
refactor Tracer class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] [ test ] ignore flaky rocksdbstatebackendreaderkeyedstateitcase test
updated import statements in XMLChangeLogParserTest . java to streamline dependencies and improve code readability
added synchronization and reset logic to the clear method in StarTreeRecordStoreCircularBufferImpl to ensure thread safety during data processing
updated forecast values from 0 to 60 and 8 in OpenWeatherMapOneCallHandler . java to improve accuracy of forecast settings
fix flaky test by add timeout
updated RemoteTargetGluer to use a singleton array for mRemoteTargetHandles and added animation and button handling for the all apps content to improve
refactor ` parseRerunFile ` method to return a ` Stream < CucumberProperties > ` and update test cases accordingly to
add the liquid and quartz chisel to the creative tab . close # 489
updated assertEquals ( ) calls to use the actual size of optItem and retrievedOptions instead of a fixed value to improve consistency in test assertions
updated file size handling to support both column and uncompressed sizes to enhance flexibility in file management
refactor multiple Java files related to clustering coefficient and triadic census to improve code organization and enhance maintainability
[ hotfix ] fix checkstyle violation in jnautils
refactor BlobServer class implementation to improve code readability and maintainability
fixed bug 1114114 - unused private method no longer report a call from inside an initializer .
rename lexicalscope to lexscope to avoid confusion
int - 1342 added test for sftp autostartup
added getter and setter methods for level and root in various classes and modified constructor parameters in the STRtree class to enhance functionality and maintain consistency
modify version parsing logic to handle minor version numbers more accurately
fix : do n ' t persist tag if item do n ' t have tag
added methods to parse epoch milliseconds from a string into a long with error handling for unsupported formats
hhh - 17100 fix nullpointerexception in stringwrapperusertype # getparameter
refactor Log4j2ConfiguratorServlet to improve code readability and maintainability
replaced instantiation of HiveException and AuthorizationException with direct return statements to simplify code and improve readability by reducing unnecessary object creation
updated CGoCompileStep to join multiple C++ command prefixes and added a new test for CgoLibraryWithCxxPrebuiltDepBuiltWithWrapped
fix build break by builder package
removed the @ Override annotation in Only . java to streamline method overriding and improve code clarity
added a timeout value of three hours to HttpConnectionParams to improve connection stability by allowing for longer execution time
added pipeline name as a configurable event scope in RawTargetNodeToTargetNodeParsePipeline to enhance performance tracking by associating pipeline names with performance events
add ` ` enable all but trace ' ' permission to ` ` deny all but trace ' ' constraint
added @ Singleton annotation to ApplicationController to ensure a single instance of ApplicationController is created
updated username retrieval logic in ShareActivity to handle OwnCloudAccount display names to ensure the username is set according to the user ' s display name if
added BatchStatus import and a test for resuming a paused job execution in SimpleJobLauncherTests to ensure proper job execution behavior when paused
added null check for cacheConfig before constructing string value string to avoid potential NullPointerException when cacheConfig is null
kristianrosenvold : make localnode a public class so that it can be use by wdbs
fix : fix compilation unit context resolution for qualified class name
pdfbox - 2576 : use nonsequentialparser to parse dictionary instead of rely on pdfparser to parse
mahout - 1191 - fix checkstyle violation in testDistributed lanczossolvercli
updated HttpServerTestBase . java to improve test coverage for server functionalities
refactor assertions in PortletApplicationMapTest to use descriptive variables and improve clarity to enhance code readability and maintainability by
added unit tests for ` NestedBeanIgnoreNulls ` class in ` BeanTableSchemaTest . java ` and modified ` NestedBeanIgnoreNulls .
feature - add redissonautoconfigurationcustomizer interface to customize spring configuration
fix arrayindexoutofboundsexception in todouble
added new methods ` execInContainerWithUser ` in ` ContainerState ` and ` ExecInContainerPattern ` classes to handle command execution with
simplify the condition checks for WebSocketByteListener and WebSocketTextListener to improve code readability and maintainability
added new test cases for semantic graph attribute comparisons in SemgrexTest . java to ensure correctness of semantic graph attribute handling in tests
added a broadcast intent to clear the unread tweets in the HomeFragment to enhance user experience by allowing users to reset unread tweets
removed conditional logic for setting ` isPreGingerbread ` in ` TouchImageView . java ` to simplify code for better readability and maintainability
make sure we do n ' t leak db connection
camel - 16400 : camel - core - optimize mechanism to decide whether to start veto handler or not
added FloatingActionButton functionality to ShareActivity for managing a FAB menu to enhance user experience by providing quick access to the FAB
added an InlineParslet class to handle inline string parsing in ToDateTokenizer to enhance date formatting by removing quotes from input strings
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated Swedish error messages in multiple language files to improve clarity and consistency of error reporting
added a check for server state before binding operations service to ensure operations service is only instantiated when the server has been checked
update position return values to use the correct starting and ending line coordinates to ensure accurate positioning from the correct node
added waitFor method and error handling in CxxPreprocessAndCompileStep . java to improve thread management and error handling during processing
added a new boolean property ` requireAllRepositorySources ` and updated related logic in ` PrincipalAttributesProperties ` and ` CoreAuthenticationUtils `
fix mapcontainer . getmaxsizepernode and increase test timeout
added support for enabling SSL protocols in the Netty web server configuration to enhance security by allowing customizable SSL protocols
replaced ` AtomicBoolean ` with ` AtomicReference ` for the ` set ` variable and introduced a ` Wrapper ` class to improve concurrency management to enhance
updated QueryDslMongoRepository to return the field name when property is null and added a test for handling empty keys in SpringDataMongodbSerializer
updated assertions in RoundRectBorderTest to reflect correct behavior of border settings to ensure tests accurately reflect expected behavior for different configurations
[ hotfix ] [ bft ] do n ' t try to verify empty cluster
remove test that depend on parallel execution
updated CountDownLatch and List initialization parameters to use ' min ' instead of ' cnt ' and added a length check for ' sign ' to improve code clarity
changed the condition from " windows " to " ! windows " in ProcessInformationsPanel . java to correct logical evaluation of the condition
added a private static method ` empty ( ) ` and refactored methods related to ` maxN ( ) ` and ` least ( )
added null checks and improved WebSocket client handling in the Bitmex streaming services to enhance robustness and maintainability of the Bitm
added validation for lat and lon in GeoPointField to ensure only valid coordinates are provided to avoid runtime errors
refactor workflow file creation methods and update appPath handling in OozieProxyImpersonator and WorkflowFilesService classes to improve clarity and
rename ResponderId . java files to improve clarity and consistency in naming conventions
modified the ` getTableDocument ` method to include a ` withDependents ` parameter for conditional table dependencies to enhance functionality by allowing retrieval of dependent tables
add option to disable number of consecutive uploads without coordinate .
added profile data retrieval and caching functionality in ProfileResources . java to improve performance by reducing redundant profile loading operations
refactor JpaMetamodelEntityInformation to improve identifier derivation checks and streamline property extraction to enhance code clarity and maintain
added methods to bootstrap last modified timestamps for tables and views in UpgradeUtil and ConnectionQueryServicesImpl to enhance the accuracy of timestamp retrieval for
disable jersey exception mapper by default
updated the method call to include a boolean parameter to enhance functionality by allowing control over the behavior of the store field action
modified the nativeCreateNSWindow method to include an owner pointer to enhance functionality by allowing specification of the window pointer ' s context
update SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to ensure consistency in database schema naming conventions
added a new case for the STOCK tile in the Tile class to enhance functionality by allowing a new stochastic animation option
fixed - rbuckets . get ( stringcodec ) and rbucketset . set ( stringcodec , stringcodec ) method throw unsupportedoperationexception . #
add detection for unrelated type in generic container to typeframemodelingvisitor
added BackProgressAnimator to manage back progress animations to enhance animation performance and responsiveness during back transitions
modified the ` _ initialPageNo ` variable to be non - final and added logic to initialize content limits if they do not match the initial page number
fix crc16 benchmark and increase test coverage
added support for comment parsing in FormattedSqlChangeLogParser and a corresponding test in FormattedSqlChangeLogParserTest to handle comments in SQL change
make mavenarchiver configurable
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing a more specific exception type
removed redundant condition checks in TSServiceImpl . java and added a multiAggregationTest method in DaemonTest . java to streamline code logic and
added checks for supported formats and pixel data types in GwtGL20 . java to ensure proper handling of RGBA and ensure proper buffer type usage
renamed ` testVarDump ` and ` testPrintR ` methods to ` testVarDump ` and added a new test method ` testDebugInfo `
replace ` UnmodifiableClassException ` with a ` Throwable ` for exception handling in ` InlineBytecodeGenerator ` to provide clearer error messaging to
[ gr - 41467 ] add class initialization trace to native - image .
fix wrong parameter name ( queryleveltimeoutms - > querytimeoutms )
[ type : refactor ] use caffeine to load topic route from namerv . topic ( # 10974 )
mbttiles : disable read - only by default
updated the regex pattern for invalid source and target release identifiers in FindBuildToolFailures . java and added a new test case in FailureLogAnalyzerTest .
updated URI construction in DetailFragment . java to include a check for IntentChecker availability and changed the way the URI is generated to use a Google Maps
modify the way referencedIds are retrieved to handle null values gracefully to avoid potential NullPointerException when fetching inherited parameter contexts
refactor ClassLoader class to improve code readability and maintainability
added functionality to set origin response headers in ProxyRequestHelper to ensure correct response headers are returned during request processing
added a new ProfileSettingDrawerItem to GpsMainActivity to enhance user interface customization options
add servletcontext init parameter to control xml validation
simonstewart : fix a typo in the firefox driver .
added maxRows variable and updated fetch size logic in IoTDBStatement . java to allow for dynamic maximum fetch size based on fetch size limits
simplify sqlstreamTerminator # iscountoptimizes ( ) and # allactionsareoptimizable ( pipeline ) by use stream . allmatch ( )
added node and mouse event handlers for selecting nodes and mouse positions in StandardVizEventManager to enhance user interaction by integrating node and mouse
refactor memory setting logic by introducing a separate method ` zeroBuffer ` to improve code readability and maintainability
move xorgroup into the agenda management layer so it can be reuse
pdfbox - 4892 : remove obsolete class , a suggest by valerybokov
refactor SourcePathResolver to improve path resolution logic and add methods for retrieving absolute and relative paths to enhance code readability and maintainability
fix : dstu2 should be encode first before parse
changed the visibility of the method ` changeSchemeIfIsWebSocketUpgrade ` from private to static and modified the way encoded URLs are converted to URIs
renames ` EXTERNAL _ TEST _ SUITES _ CONFIG ` to ` EXTERNAL _ TEST _ SUITES _ EXEC
refactor CxxPlatform retrieval logic into a separate method to improve code readability and maintainability
added imports for IndexReader , IndexReader , and Field in various Java files to enhance documentation documentation clarity and maintainability
added null check for the current element in ConcurrentLinkedStack and introduced new test methods for pop and iterator bubbles in ConcurrentLinkedStackTest to enhance
added ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added null check for mDirectories before processing to avoid potential NullPointerException when mDirectories is null
updated condition in RecentsView to check if overview state is not enabled and first layout is not allowed to improve accuracy in gesture handling logic
added multiple package - info . java files for various Lucene packages to improve package documentation and organization for better clarity
added a line to set the text of the visible auto leveler panel to enhance user interface by making the panel ' s title reflectable
added postOptimize event listener functionality in DirectUpdateHandler and DirectUpdateHandler2 , and integrated it into UpdateHandler to enable post - optimize callbacks for
updated Deflater and Deflater initialization in CompressionMode . java to ensure proper handling of compressed data with padding
added a check for user data in the Shaderc class to ensure data integrity before proceeding
hbase - 2058 retryingmetastore . getretryattempts ( ) should only be retry if there be a local metastore
heliossolologgservice : skip log about timeout and connection close exception
refactor Subject class to improve code readability and maintainability
use weak reference in abstractserializationservice to reduce memory consumption
updated color distance calculation in HSSFPalette and added a new test for the findSimilar method in TestHSSFPalette to improve accuracy
chore ( regen ) : regenerate with update license year
danielwagnerhall : adding test to ensure we can find element by id
added flags parameter to registerReceiver methods across ShadowApplication , ShadowContextImpl , and ShadowApplication classes to enable registration of broadcast receivers with specific
updated the mock behavior for the ' ffmpeg - version ' argument in the test to improve test reliability by ensuring the correct version is loaded
updated Ogg and OpenAL audio input handling to utilize previous input resources and improved memory management to enhance resource management and prevent memory leaks
replaced hardcoded failure message with a constant variable to improve code readability and maintainability
[ te ] do n ' t try to create anomaly if there be no failure in migration
replaced Toast messages with direct calls to showToast method in BaseActivity and DetailActivity to improve code readability and maintainability by reducing
updated the method call in TracingFeignClient to use the HTTP method and request template to improve request handling by utilizing the provided delegate methods
added name validation and referral handling in LDAPCertStore . java to ensure valid LDAP names and provide clearer error handling for invalid names
refactor retain logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
renamed AdapterViewTest to ListViewTest and added a test for item click functionality in DroidSugarAndroidTestRunner to enhance test clarity and
[ hotfix ] [ test ] migrate checkpointfailuremanageritcase to junit5
remove genericitemuiprovider since it be no longer use
add method setselected ( ) and setselectedobject ( ) that take the select object into account .
added isolation annotation for FileSystemPool in MetaInfConfigurationTest . java to facilitate testing of static FileSystemPool methods
added a line to set the host for the server connector to ensure the server connects to the specified address
updated token expiration durations based on grant types in heart mode to ensure tokens are refreshed accurately for heart mode and improve
added a new class ` CloverInstrumentationFilter ` and updated conditions for ignoring synthetic fields in ` SplitLogCounters . java ` to ensure proper handling of
added support for the Smartmi Evaporative Humidifier in MiIoDevices to enhance compatibility with additional firmware configurations
fix plausibletobreak respect mining duration
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repository information in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that the application does not operate on applications without
updated the logic in the IntHashSet class to simplify the condition for checking presence of missing values
added Serializable interface to RuleAdministrator to enable serialization of RuleAdministrator objects
refactor CrossOriginFilter to use sets for allowed origins and allowed origin patterns instead of individual lists to improve performance and flexibility in handling
updated import statements in BaseG3dHudTest . java and NewModelTest . java to replace specific G3dj files with the latest Knight
refactor code for improved readability and added error logging for solidified position errors to enhance code clarity and ensure proper handling of solidified
hbase - 2593 fix npe in coprocessor when no value be pass to exec
added a new method ` hasAccess ` to check for user access based on remote user and user context to enhance access control mechanisms in the
added a new method ` getStubClassBytes ` and refactored the ` writeTo ` implementation in ` ClassMirror ` and ` StubJar
added a TextView to display internal link text based on whether the file is a folder to enhance user experience by providing contextual information for shared files
updated assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting regardless of default locale settings
[ hotfix ] fix checkstyle violation in modelzootest
hide input field when all apps keyboard be close .
added test for in - memory event store .
refactor path retrieval logic in BsdFileStore to use BsdNativeDispatcher for improved clarity and efficiency to streamline the process of obtain
add test case for issue # 1599 type solver bug
added support for a new parameter ' x ' and ' y ' and ' z ' in the spawn command to enhance the spawn command functionality to allow
added MIN _ CONTENT _ DIMEN constant and refactored content area width and height calculations to use it to ensure a minimum height and width
add debug scope to hotspotcryptosubstitutiontest and make graph final
use mockdirectory instead of directory to avoid test failure on window
added failed checks in UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280 to improve error handling and maintain code consistency
refactor Environment class to improve code readability and maintainability
added import for LuceneTestCase and annotated with BadApple to address related bug related to SOLR - 7421
modified file path handling in CodenameOneImplementation . java and removed warning in HashtableContent . java to ensure correct file path formatting and improve error handling
replaced FLAG _ IGNORE _ HDMV _ DTS _ STREAM with FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAMS
replaced specific resource imports with a wildcard import and updated ResourceAccessor initialization to streamline resource access and improve resource management
disable tls in comhostnameverifier and javaxhostnameverifier
updated CxxDeps annotations to use builder and copy options , and removed the static EMPTY constant to simplify dependency management and improve code clarity
rename expectedDirectory and actualDirectory lists to separate expectedStubDirectory and actualFullDirectory for improved clarity to enhance code readability and
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name setting logic to check for empty title and hint before setting them to improve clarity and maintainability of the code
updated the ` loadClientByClientId ` method to include an additional parameter for the UAA client to ensure compatibility with the updated client loading strategy
changed access modifiers of methods from public to private to restrict access to these methods for better encapsulation
updated ` AtomicCounter ` , ` AtomicLongPosition ` , and ` UnsafeBufferPosition ` to handle ` isClosed ` conditionally to improve resource management
updated method signatures in MimetypeIconUtil . java to improve code clarity and maintainability
updated method names from supportsViewFor to supportsViewsFor across multiple view provider classes to clarify the capability of supporting views in the application
added a test for negated instanceof checks and updated the UnwrapParentheses logic in UnwrapParentheses . java to ensure correct handling of instanceof instances
added reflection - based teleportation of the Location class to enable dynamic location manipulation through reflection
replaced Base64 encoding with URL - safe Base64 encoding for modulus , exponent , and modulus in TokenKeyEndpoint to enhance security by ensuring proper URL
updated imports and changed statistics reporting method in TranslatorManagerHelper . java to enhance statistics reporting functionality based on project - specific events
rename the annotation from ContainerAnnotation to ContainedBy to clarify the purpose of the annotation ' s purpose
added a null check for the getId ( ) method in ObjectIdentityImpl to ensure that the result is not null to prevent potential NullPointerExceptions
modified the ` setUpRevampedTweet ` method to support muffled users and adjusted the retweeter retrieval logic to enhance user
updated UserProfileActivity to dynamically retrieve the verified text based on the addon theme settings to enhance flexibility in UI based on user theme configuration
make static field final in abucoinsdigest
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - mongodb component
added sourceIndex parameter to AttributeMapping and updated related classes accordingly to support attribute mapping based on the last source index in complex feature collections
ignore hive _ deleted _ column _ stats when alter partition
added security check for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 10678 ] escape the email address in the geoserver home page .
add the ability to enrich the engine ' s reflections with subsystem
updated mmfStream output structure and added assertions for the expected number of features to improve clarity and ensure the correct number of features in the output
mondrian : add a check to make sure the command be not empty before try to parse it
[ hotfix ] [ kafka ] only log offset update at debug level
updated references to ` ACTION _ SET _ PLAYBACK _ SPEED ` to use ` PlaybackStateCompat ` in ` MediaSessionConnector . java `
added automatic ignition handling and improved UUID generation in multiple classes to enhance functionality and ensure consistent UUID generation across different stages
tika - 2262 -- improve mime type detection for nls file .
added an @ Ignore annotation to the JdbcFrontJdbcBackLinqMiddleTest class to mark the test as non - deterministic on JDK 1.8
refactor lock file creation into a separate method to improve code readability and maintainability by encapsulating lock file creation logic
update version check from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and modify notification settings in UpdateUtils . java
added a check to return null for the FEDERATION _ USER username in AuthenticationManager to ensure proper handling of federated user authentication
truffleobject . isassignablefrom do not check if value be not instance of truffleobject to avoid classcastexception .
remove unnecessary @ Disabled annotation in JakartaClientShutdownWithServerWebAppTest . java to simplify test code and improve readability
make logbackvalve more resilient to unexpected access
refactor Collection and Map classes to improve code readability and maintainability
removed unused import of Version in CreateIndexTask . java to clean up the code and improve readability
added handling for OracleDatabase and AbstractDb2Database specific index and schema configurations in MissingPrimaryKeyChangeGenerator . java to ensure proper schema information is
added MetastoreException to method signatures and updated error handling in Msck operation to throw specific exceptions to ensure proper error handling for invalid partition names during
[ hotfix ] [ kafka ] retry commit transaction on error
[ rip - 28 ] forwardmessagetodlqactivity - remove the group prefix from the receipt handle
added a service list and a method to allow customizable services in DockerComposeContainer to enhance flexibility in managing Docker compose services
fix memory leak with exported resource
removed HTML cleaner and cleaneder properties from FeedParser . java to simplify XML processing and improve error handling
removed a condition that checks if ` mAppsCustomizePagedView . DISABLE _ ALL _ APPS ` before accessing ` mAppsCustomizeContent ` and updated
change data type of several energy variables from int to double in MeterRealtimeBodyDataDTO . java to improve precision of energy consumption calculations
added a new JApplet class to create temporary directories and a file chooser for selecting directories to address bug 4150029 related to directory
added a boolean flag ` isSparkConfigUpdated ` and corresponding getter / setter methods in ` HiveConf ` , and implemented close method in ` SparkClient
added a long press indicator method to AppIcon and AppIconMenuItem classes and modified Launchable class to use it to provide flexibility in handling long -
wkbwriter : handle empty polygon wkb ( fix # 388 )
refactor UnflavoredBuildTarget creation to use builder pattern and improve immutability to enhance code clarity and maintainability by util
added a new file MultiplyByMax . java with a method to multiply an integer by the maximum value in a specified range to facilitate testing of
removed the call to ` onActionViewCollapsed ( ) ` and added a condition to enable the drawer indicator based on the current file ' s root status
moved TestRAMDirectory . java from the index . store package to the store package to organize code within the appropriate package for better accessibility
replaced FixedBitSet with BitSet in Automaton and Operations classes to simplify accept state management and improve performance
drools - 2131 dmn dmn dmn message : use msg . msg . msg for error reporting
replaced ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( AC . class ) ` in multiple files to
updated file sending message to include the duration in milliseconds to improve clarity of file transmission duration tracking
updated class name retrieval and access check in OpenMBeanAttributeInfoSupport . java to ensure proper package access validation during class loading
do n ' t repair if there be no data to repair
storedirect : fix off - by - one error
do n ' t disable touch if last finger be up
changed the instantiation of SslContextFactory to SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to ensure compatibility
replaced custom PrivilegedSocket implementation with direct instantiation of Socket to simplify code and improve readability
refactor InputTest class to improve code readability and maintainability
added functionality to pause blurs in depth controllers and modified finishRecentsAnimationOnTasksAppeared method to accept a Runnable parameter to enhance
refactor current location marker handling in NearbyMapFragment . java to check for null before adding it to the map to improve stability
updated client secret removal method to use client details service instead of the client object directly to enhance security by directly utilizing client information
updated SQL query formatting and assertion methods in SqlSourceBuilderTest . java to improve readability and maintainability of test setup
( chore ) camel - activemq : use awaittermination for graceful shutdown
added tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for task series and column key errors
replaced stream filtering with optional handling for condition data lists to improve null safety and prevent potential NullPointerExceptions
lightcontrol : rename controldir to controldir and minor cleanup
updated conditions for setting the ` _ hideStacks ` variable and improved string concatenation in ` StdErrLog . java ` to enhance code clarity
updated HttpSessionEventPublisher to use a dedicated method for obtaining the ApplicationContext to improve code clarity and ensure context is properly validated
remove semantic check for the syntax of CREATE CQ statement to ensure compatibility with the new syntax requirements
[ hotfix ] [ doc ] fix flink iotdbsink javadoc typo
log a warning if canonicalizer do not support simplification
updated the context parameter for setting the fileIcon ' s drawable to ensure the drawable is correctly associated with the file type
updated indexOrConstraintName to use schema name instead of a hardcoded value to ensure compatibility with the schema ' s name in the parser
fix bigqueryio . readwithtime to print millisecond precision
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` , and corresponding test cases in ` ViewGroupTest
remove unnecessary type casting to reduce unchecked warning
updated imports in IndexTool and MetaDataClient classes to improve code organization and maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants , modified method calls in SpringBootDocBuildTemplate to accommodate path variable
svm : do n ' t check if the resource file be a jar .
* fix checkstyle issue in libnc / CUDA / cublas . java and cuda . java
refactor ResourceLoader class to streamline resource loading process to improve code readability and maintainability
do n ' t override getattachedface in redstonetorch for non - redstone torch
[ hotfix ] fix typo in reltostagetostageconverter
added import statement for DateHelper in NoteAdapter . java to utilize date utility functions in the application
updated backup message handling to use ` BACKUP _ LOAD _ FAILURE ` instead of ` BACKUP _ SAVED ` and improved error
set position to relative rather than absolute
change file naming from " pipe - " to " pipe " in ShadowParcelFileDescriptor . java to simplify file creation and improve clarity
sec - 1147 : fix stack base securitycontextholderstrategy to remove the first element in the stack .
fix boolean inversion test
[ fix ] canonicalization of x and y in bigintegerequalsnode .
removed the declaration of STRING _ ARRAY in TypeFactory . java to simplify the code by eliminating unnecessary complexity
refactor IME hiding logic and centralize logging of AllApps keyboard events to improve code organization and enhance event tracking for user interactions
make block state container respect block . setbits ( int , boolean ) , close # 186012
updated assertion messages in TimelineMetricCacheSizingTest . java for improved clarity and consistency to enhance readability and maintainability of test
add optimization to get gl _ maximum _ texture _ size , only calculate once .
[ java ] : do n ' t try to stop log recording when prepare for new leadership .
added a conditional check for ` isInTransform ` before setting ` startPosn ` to 0 to ensure proper initialization when not in transform mode
refactor star tree checks to use a dedicated method in QueryContext to improve code clarity and maintainability by centralizing the check for skip
added a lock nearby view feature to manage progress bar visibility to improve user experience by preventing UI updates during nearby places refresh
add maptransformer static factory method for convenience
refactor EmbdedObjects and EmbeddedObjects classes to improve code organization and readability
added support for retrieving launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management capabilities within the launcher
updated StageSelector and StageAction classes to implement StateChangeListener instead of ChangeListener to enhance event handling by using a more specific event type
added methods to get and set calling user ID in ShadowBinder to enhance testing capabilities for retrieving and managing calling process UID
refactor ExpectationFailure from an abstract class to a static final class and update its constructor and methods to improve immutability and null safety to en
bitcoinserializer : remove warn log for unsupported message
refactor width and height initialization logic in ImageReplacedElement . java to ensure newW and newH are set correctly when either width or height is zero
added support for HTML entity normalization in Markdown rendering to ensure consistent HTML formatting across different platforms
added a neutral button and refactored password setting logic in SharePasswordDialogFragment to improve password handling to enhance user experience by allowing users to
refactor method mappings in IoUtil to use a static inner class for FileChannelImpl to improve modularity and encapsulation of method access in
make abstractassert _ describedas _ printed _ as _ printed _ to _ console _ test package - private
added new options for Slider AM keytab configuration and descriptions in LlapOptionsProcessor . java to enhance the flexibility and usability of
modified the ` tearOutGraphViewContainer ` method to accept an ` ownerFrame ` parameter and added animation control to manage the animation control
added functionality to handle multiple bind complete runnables and updated method signatures to improve efficiency in managing loader state during launcher operations
changed variable and method implementations in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to improve code clarity and
added a new method ` add ` to the ` IssueInterface ` class and renamed the ` ValidationReport ` class to ` JsonValidationReport `
added a method to safely retrieve the cipher provider name and updated exception handling to improve error logging and provide clearer output for missing cipher provider names
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration in container specification
change log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging during development
append a newline at the end of the output if the index does not match the size to ensure proper formatting of the output
make bitmap _ height and bitmap _ width public again
added an @ Ignore annotation to CovariantOverrideTest . java to indicate that the covariant override is not applicable for testing purposes
improve performance of pattern matching
camel - 15836 : camel - jbang - load model from file instead of classpath .
added space minimum and maximum settings to the X - axis of the ScatterChart to improve visual spacing in the chart
removed unnecessary whitespace in ExpressionStringBuilder . java to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ( ) ` method to ` SplitScreenSelectState ` , implemented it in ` BaseState ` , and
added a check for the UTF8 key in CheckEncodingPropertiesFile . java to ensure the UTF8 key is present before proceeding with encoding checks
added seed decorators and modified test annotations in LuceneTestCase and TestReproduceMessage to enhance randomness testing and improve test reliability
added a UI event for long - pressing an AllApps item in StatsLogManager and integrated it into ItemLongClickListener to log user interactions
added a null check for the log in StoreWAL . java and created a new test class Issue112Test . java to ensure robustness by preventing
add ` ` show sector land info ' ' to control rule
[ hotfix ] fix raw type lint warning in compositetype
refactor Enum class to improve code readability and maintainability
throw an illegalargumentexception if the value selector have n ' t support random selection
remove temporary cache remover service and use guava instead
hide createsqlviewcontainer when store = datastores
initialize _ availability to an uninitialized value to avoid nullpointerexception
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , ` SyncService ` , and ` PeerConnection `
fix : migrate phishingprotectionv1beta1Stubsettings to grpc _ service _ config
replaced the ` _ freeSpaceReclaimDisabled ` boolean with an ` _ freeSpaceReclaimQ ` parameter and modified the ` freeSpaceReclaim
changed KDCOptions from public final to private static final for KDC _ OPT _ PROXIABLE and KDC _ OPT _ FORWARD
refactor the writer assignment and initialization in Json . java to improve code clarity and ensure proper resource management
standardized whitespace formatting in ProfilePager . java to improve code readability and maintain consistency across the code
rename paintBackground method to paintComponentBackground and update its calls to improve clarity and functionality of background painting functionality
added a method to retrieve values from a class constant in the Configuration class to enhance configuration handling for object values
( chore ) camel - kafka : log error when fail to initialize kafka service
updated the RESOURCES _ TO _ ALWAYS _ ACQUIRE set to include " build . prop " and " usr / share / zoneinfo /
camel - 14263 : camel - endpoint - allow to configure a single channel name for a give endpoint .
added functionality to retrieve and index keywords from meta tags in HTMLDocument to enhance document indexing capabilities by allowing users to analyze keywords
update SDK version check from S to R to ensure compatibility with newer Android versions
added an else block that initializes the _ addresses list only if it is null to ensure that the address list is updated only if it is not null
replaced the instantiation of ` CorrespondenceSubclassToFactoryCall ` with a direct reference to ` CorrespondenceSubclassToFactoryCall . class ` to
refactor Builder class to improve code readability and maintainability
change default url to ebook . de / isbn2bibtex for compatibility
[ gr - 3054 ] increase keep alive time for polyglot engine to 10 second .
added null check for text before processing to avoid potential NullPointerException when text is null
add an option to disable the simplification of the model
trim whitespace from input lines in SuffixURLFilter . java to ensure consistent formatting of input lines
added a condition to return early if the player is in godmode to optimize performance by avoiding unnecessary processing in godmode
ggb - 1845 textinput dialog unregistration : do n ' t register and unregister single popups at all
updated LinkedHashMapCache and BoundedLinkedHashMap constructors to remove the maxSize parameter to simplify constructor usage and improve code clarity
removed unnecessary line breaks in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex in FixAcidKeyIndex . java and updated key index builder usage in OrcRecordUpdater . java to
updated exception handling to use Locale . ROOT in DirectUpdateHandler2 . java to ensure consistent error formatting across different locales
[ refactor ] move guard creation to writenode and canonicalizerphase
remove unnecessary reachability check for exception dispatch block .
add cloud method to check if a bug appear disagreement ( high variance )
replaced ` BuildTarget . copyOf ( buildTarget ) ` with ` BuildTarget . copyOf ( buildTarget ) ` and added ` @ JsonIgnore ` annotation
refactor SqlRunner class implementation to improve code readability and maintainability
changed the type of ` dateTaken ` from ` String ` to ` long ` and updated related methods accordingly to improve performance and simplify date handling logic
replaced ` knownApis ` with ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` to track known SDKs to improve cl
createofferview : use confidenceprogressindicator instead of progressindicator
updated header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes , and introduced UMS headers
fix bug where path iterators be not be able to iterate properly .
[ crowdfunding ] crowdfunding chat adapter : show message for incoming message
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java ` to
this rule only apply to conjunction instead of conic
removed the ` canvas ` parameter from the ` insert ` methods in ` TexturePacker . java ` and added padding functionality to enhance image pack
refactor code to use a common apply method for refactoring modules and streamline the conversion of source visitors to a refactor method to improve code
added methods to retrieve child elements by name and array access methods to improve XML element retrieval functionality
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer . java and corresponding tests in BasicHttpSolrServerTest .
added ` SystemUiControllerFlags ` annotation and updated UI state management to use ` @ SystemUiControllerFlags ` to improve flexibility in managing system
removed the private ClientConfigurationService field to simplify the code by eliminating unnecessary dependencies
improve error message when hive split can not be open
removed the ownerId byte array from NodeEntry to eliminate unnecessary data encapsulation
cloudstack - 7593 : rename backupsnapshotfertafertakingsnapshot to backupsnapshotaftersnapshot after snapshot take
added score calculation to the merge method in TextFragment . java to ensure the correct score is maintained during merging fragments
remove unused variable from md4passwordencoder
added validation for the maximumUnimprovedStepCount property to ensure it ' s non - negative to prevent runtime exceptions during execution
added a check for empty currently openedEditors in EditGcodeFile . java to prevent further processing when no editors are currently opened
replaced direct calls to ` verify ` with ` Mockito . verify ` in ` BDDMockito ` and added new verification tests in ` BDD
[ hotfix ] use class . getclassloader instead of thread . currentthread ( ) . getcontextclassloader in pathscanner
modified the ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a string and added a type check for ` CodeFirst
add log to abstractsplitbrainprotectiontest to help debug flakiness
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the logout filter to ensure that the logout page
[ giac ] fix giac computation for locus equation
refactor DockerComposeContainer to use a concurrent map for log consumers and add a new method to follow logs to improve efficiency in logging operations
updated the generic type in the testMapping method signature to improve type safety and clarity in the test case
removed unused import statements in AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a utility for converting a ` Supplier ` to a `
replace a break statement with a return statement to modify the flow control behavior
camel - 16400 : camel - platform - http - vertx - vertx - vertx - vertx - vertx - vertx -
added methods to handle platform - specific path separators in MorePaths . java to improve compatibility across different operating systems and ensure correct file path formatting
added null check for authorizationContext parameters before processing to avoid potential NullPointerException when accessing parameters
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` in ` NativeLibraries . java ` to enhance error handling by
updated SDK version from " 4611349 " to " 4514284 " and added new methods for speech handling in ShadowTextToSpeech to
change the return value of queuetransactionlog . gettransaction ( ) to be transactionlogkey ( itemId , name ) instead of itemstackkey ( )
added a property ` enableSqlWithoutProfile ` and its getter / setter in ` JdbcEnvironmentProperties ` , and modified ` JdbcEnvironment
added a try - finally block around the write method call in ConnectHandler . java to ensure that _ data is reset to null after write operation completion
fix compiler warning in modloadingstage .
fix compilation error from last commit
updated the ` getThreadInfo ` method to include a stack trace depth parameter to enhance thread information retrieval by including the current stack trace depth
added a protected TransactionLog prevTlogOnPrecommit and modified sleep duration and assertions in LeaderTragicEventTest to enhance commit handling and
update FastAsyncWorldEdit version from P2 - V6 to 1.17 to ensure compatibility with the latest asynchronous features
modified file existence checks and added null check for input path in SegmentGeneratorConfig . java to ensure proper directory creation and prevent potential NullPointerException
added methods to calculate normal vectors in ObjUtils to improve code readability and maintainability by reducing duplication
modified the ` find ` method to use ` identityZoneId ` instead of ` IdentityzoneId ` to improve clarity and maintain consistency in query parameters
refactor SpanCollector class to improve code readability and maintainability
added a condition to check if ` SESSION _ MANAGER . getCurrSession ( ) ` is not null before evaluating its value to ensure that session
refactor TransactionIsolationLevel class to improve code readability and maintainability
corrected a typo in the method name from ` printLVgroups ` to ` printLogicalVolumegroups ` in OshiController . java to
added thread name setting to the current thread in TestSession . java to improve debugging by providing clearer thread information during execution
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
simplified the creation of an ArrayList by returning a new instance of ComponentKey directly to improve code efficiency and readability
added a new OverviewToAllAppsTouchController to the list to enhance touch interaction functionality in the Recents UI
refactor methods in LauncherState and WorkspaceStateTransitionAnimation to improve hotseat scaling functionality to enhance code clarity and maintainability by
added JUnitRule class to stack trace filtering in DefaultStackTraceCleaner and created a new test for it in StackTraceFilterTest to ensure that only
replaced direct byte array handling with direct buffer handling in MappedResizeableBuffer . java to improve efficiency and clarity by using isDirect (
added a balance listener to the walletService to manage balance events more effectively within the deposit list
added a conditional check for the edge mode before setting color to ensure proper color conversion based on the edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor . java to avoid potential NullPointerException when accessing log instances
remove unused import and redundant patternutil check
updated the playback checks in FullDetailsActivity to include a delay condition and improved logging to enhance user experience by allowing more time for playback
spanish : add support for elliptic node ( mwe - > m )
added logic to clear specific language when the item ' s language is empty to ensure proper handling of empty items in the item ' s language
updated the ReactiveLoadBalancerClientFilter to override the scheme based on the server instance ' s secure status to ensure that the correct scheme is used
[ hotfix ] fix duplicate bytebuffer in defaultmessagestore
make debuginfoprovider # fullfilepathfromclassname non final
refactor the comparison logic in ShadowBackupManagerTest to use Correspondence . from for improved readability to enhance code clarity and maintain
updated references from US to EN language support in JRELocaleProviderAdapter and LocaleDataMetaInfo to ensure compatibility with the newer language features and
simplified null check for redeemData in LocalTransactionSigner . java to improve code readability and maintainability
minecraftforgeclient : add minecraftforgeclient for tessellator implementation .
added a return statement in TxCacheDB . java to ensure proper exit from method execution
updated import statements to use the jdk . internal . org . objectweb . asm package instead of com . sun . xml . internal . ws .
refactor FastDictionary class implementation to improve performance and maintainability of the code
improve handling of closed socket and session in nioconnection . close ( ) .
updated FlightEvent instances and calculations for GROUND _ HIT , SIMULATION _ END , and TUMBLE to enhance accuracy and
chore : update beam _ vendored grpc version to v1p26p0
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added to the correct element
update instructorfeedbackresultspagedata to also include courseid in profile picture link
added shortRules list and modified default rules in DefaultPasswordValidator to allow alphanumeric and numeric sequences to enhance password validation by allowing longer password lengths
simonstewart : make the selenium - backed webdriver a little more responsive on the performance of the remote server
[ hotfix ] [ test ] remove unnecessary @ test annotation
added a ` format = bgr24 ` argument to the ` scale ` argument in the ` DLNAMediaInfo ` class to include a specific thumbnail
[ gr - 31478 ] do not replace speculative guard movement phase during test .
added checks to ensure the AUTHENTICATION _ MANAGER bean definition is not overridden and does not exist in the registry to enhance security by preventing
updated conditions for handling forwarded host and server in ForwardedRequestCustomizer . java and added corresponding tests in ForwardedRequestCustomizerTest .
set the StringBuilder ' s length to zero to ensure proper initialization of the StringBuilder
change access modifier of allowedroles and disallowedroles from private to protect .
[ openid - module - spec ] bump openid - module - spec to 1.6 . 0
hbase - 20509 set the default value for hbase . server . netty . tls . wrapsize in hbase . server . net
refactor multiple classes related to cookie handling to improve code organization and maintainability
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and assert methods to improve test coverage and ensure proper exception handling for tokenizer functionality
added a method to set the protocol binding in OpenSamlAuthenticationRequestFactory and created unit tests for validation to enhance protocol binding flexibility
added AttachedSurfaceControl import and modified SurfaceControl . Transaction usage in DepthController . java to enhance surface control functionality by applying changes to the opaque
make github release 2.5 . x
phoenix - 1243 addendum ( addendum , change accesscontroller action from write to create for prepreparebulkload and pre
updated the sublist index for unSeqMergeList in TsFileManagement . java to start from 0 to maxOpenFileNumInEachUnseqCompaction to
camel - 16400 : fix genericfileconverter to work with fileinputstream
added a login method to the DefaultShardManagerBuilder and modified the ShardManager to conditionally login based on the login parameter to enhance flexibility in
no effective change - code cleanup
rename the join table annotation from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose
modified HttpSender to check if the response complete is marked before obtaining its reference reference to ensure that the response is terminated before terminating the response to avoid
modify condition to also check if the user is a user and not a student
added checks for linked profile permissions and modified profile handling logic in BMPImageReader . java to enhance security and support for Windows - specific
updated location calculations for plot blocks in ClassicPlotManager . java to ensure correct positioning of plot blocks in the plot simulation
pmd : wait for the status of the current file to be check before open the pmd project
refactor gridPresenter initialization and add size setting logic in StdGridFragment . java to improve clarity and functionality of grid display sizes based on
changed return values from false to true in ContributionsListFragment . java to ensure correct functionality of the methods
added a test for skipping a range in DistinctPrefixFilterIT and modified the filtering logic in BaseResultIterators to enhance performance by skipping unnecessary
[ acrobat ] add unit test for checkbox group property
added a method to retrieve the last modified timestamp of a file in the BlackBerryImplementation class to improve file handling capabilities for file connections
added a condition to check for a valid metadata table in HiveIcebergStorageHandler to ensure proper handling of metadata tables during file format validation
change cashdeposit form to allow user to select default currency .
changed exception handling from IOException to Throwable in WriteFlusher . java to capture all types of errors instead of just IOException
added a new boolean variable ` mStartedEnterAnimation ` and modified the conditional logic for item range notifications in ` IconRecentsView . java ` to
added a new public String variable ` activeKeyId ` to the ` UaaConfiguration ` class to enable tracking of the active key ID for configuration purposes
( chore ) camel - mail : fix @ ruleaction description
made the ` isActive ` variable volatile to ensure thread safety during concurrent access
fix : do n ' t allow orderby to be asc
make sure stringbuilder . append ( ) return a char instead of void
added a condition to check if the app name is the " ownCloud " before proceeding with the calendar check to ensure that the calendar is only processed
hbase - 27455 master should not use kerberos if hbase . security . authentication be present
updated method call from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in both JakartaServlet
refactor Instant class to improve readability and maintainability of the code
updated state format handling to return a default value of " 2 " instead of an integer to ensure consistency in state representation and avoid potential null pointer exceptions
removed the type variable from the logging statement in CentralAuthenticationServiceImpl . java and modified the ticket class check in AbstractTicket . java to streamline logging
pdfbox - 4892 : ignore illegalargumentexception a suggest by valerybokov
updated condition to check if the file name ends with a slash to ensure correct handling of file paths in the resource set
[ mng - 10670 ] align the base directory of a configuration parameter to the basedir of the configuration file .
[ beam - 8470 ] add protobufcoderregistrar for backwards compatibility
updated HqlQueryRenderer to include a false parameter in JpaQueryParsingToken to ensure compatibility with query parsing with signed numeric literals
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` generateLaunchLugFromRailGuide ` methods to
removed the getNonceFactory method from BitmexStreamingExchange to return null as the nonce factory is no longer needed
use format specifier to avoid string concatenation
[ java ] use a consistent timer interval for publication and message linger timeouts .
change default value of initializeloadedclasses from true to false
added a call to grab focus in the search field to improve user experience by ensuring the search field receives focus
refactor connection factory configuration to use NioParams to improve code readability and maintainability
updated the assertion in StatementTest . java to clarify the meaning of the return value of the getDouble method
updated the assertion in TestSolrConfigHandler to include the server URL in the failure message to provide clearer context on the server configuration issue
updated CsrfWebFilterTests to use ServerHttpRequest and ServerWebExchange mocks instead of HttpMethod to improve test reliability and align with standard HTTP methods
updated the density handling in FilterResourcesStep . java to include a conditional check for Density . NO _ QUALIFIER to ensure proper formatting of the
refactor button UIID handling to use a dedicated method to improve clarity and maintainability of UIID updates
removed the check for densityDpi being below 600 to simplify the condition for rotation behavior
8151536 : array . cloning ( ) with different length compsequenced with large object alignment
added an import statement for LuceneTestCase and annotated the ReplicationFactorTest class with @ AwaitsFix to indicate that the test is known to
fixed - rscheduledexecutorservice . schedule ( ) method throw nullpointerexception if schedule ( ) method do n ' t have start
simplified the condition for updating credentials in FileDownloader and FileUploader classes to improve code readability and maintainability
refactor code to check for null scanner before closing them to ensure proper resource management and avoid potential NullPointerExceptions
replace calls to ` get ( ) ` with ` getOrDefault ( ) ` for retrieving values of ` iface ` , ` transmittedBytes ( ) `
added nonce validation in TokenMvcMockTests to ensure the correct nonce is returned for the token claims
refactor multiple ChartEditor and ChartEditorFactory classes to improve code organization to enhance maintainability and readability of the chart editing components
added width and height settings for formLayeredPane in the Form class to ensure proper rendering of the layered pane in the UI
removed unused imports and added maxY method implementation in BrowserContentPane . java to improve code clarity and ensure proper height calculation logic
updated database handling in SharedDatabaseLoginDialogView and SharedDatabaseLoginDialogViewModel to return a boolean indicating whether the database was connected to enhance user experience
updated references from DOCKER _ COMMAND to Platform . DOCKER _ COMMAND in DockerTestUtils . java and Platform . java to ensure consistency with the new structure
added null check for input file before processing in TestIsartorValidationFromClasspath . java to avoid NullPointerException when processing properties
updated ` drawLeaveBehind ` method to accept a color parameter across multiple classes to enhance flexibility by allowing customizable text color options
show an error dialog if the canary plugin can not be run on android studio
bug 9452 : fix npe when sanity check fails
added support for managing module persistence settings in StartArgs . java to enhance flexibility in enabling / disabling modules in the application
corrected the spelling of " Extra " to " Argument 0 " to improve code readability and maintain consistency
changed HashSet to LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to preserve the order of key sets during processing
add a test case to show how to properly handle security collection
updated the list of excluded JSP files in AuthCheckFilter to include specific setup resources to enhance the flexibility and organization of the setup process
refactor runnables handling by introducing ` runOrQueueRunnable ` and ` queueRunnables ` methods to improve clarity
updated method signatures from using String [ ] args to varargs args in multiple command runner classes to simplify method parameters and improve readability
refactor XML parsing logic to handle end - of - stream conditions to ensure proper error handling by checking for unexpected data
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to test behavior when text is causing overflow pages
added pivot position adjustments for the arrow based on arrow dimensions to ensure the arrow is positioned correctly within the icon ' s boundaries
remove printstacktrace call from jabrefexecutorservice . handleinterrupt ( ) . catch ( interruptedexception ) .
modified the updateThumbnail method to include a refreshView parameter for better control of thumbnail updates to enhance the refreshing behavior of the thumbnail based
pdfbox - 4892 : improve usage message , a suggest by valerybokov
francoisreynaud : fix iecutor . from ( ) and improve error message
refactor references from ` AuthenticatorActivity . this ` to ` this ` across multiple files to improve code clarity and consistency by using the
refactor ` SizeBasedDocIdSet ` and ` SizeBasedDocIdIterator ` classes to use a consistent variable for ` maxDocId
added multiple overloaded methods for file opening in FileDialoger . java to enhance file selection functionality by allowing user interaction with existing file names
add additional case where may have to recalculate the number of apps
refactor FlightConfiguration to cache component bounds and transformed coordinates to improve performance by reducing redundant calculations for active components
use direct : instead of seda in test
updated DateTimeFormatter instantiation to use Locale . ROOT to ensure consistent formatting regardless of default locale settings
[ ds - 3952 ] dspaceobjectconverter : add permission filter to the object list
added a test method to verify that missing parameters are set correctly in StarTreeConfig to ensure that the configuration correctly handles scenarios where metric names or collection lists
camel - spring - rout : add support for dynamic recipient list in camel - spring
refactor InlineLayoutBox and HoverListener to improve target restyle handling and repaint logic to enhance performance and maintainability of the rendering
refactor authentication handling in AuthenticatorActivity to use ServiceConnection and OperationsService instead of DetectAuthenticationMethodOperation to improve the management of operations service
