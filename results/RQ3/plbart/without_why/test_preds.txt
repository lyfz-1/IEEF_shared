set remote host and port in SocketAppender constructor to ensure proper configuration of the socket appender
refactor prompt header retrieval logic in BasicAuthPlugin. java to improve readability and maintainability of the code
updated message length retrieval in ManyToOneRingBuffer. java to ensure consistency in message offset retrieval
cloudstack : fix npe in case of cluster cpu / ram overcommit ratio
added flags handling in ShadowPaint and updated test cases in PaintTest to improve flexibility and correctness of Anti alias detection
change title from " Set / clear / append / rename fields " to " Manage field names & content " to improve user experience by providing a
modified the bug reporting logic to check if the bug reporter's collection is empty and if Eclipse is not used to compile the project to ensure
fix npe when digest auth scheme ben't set
added a RemoteInputListener interface and modified the RemoteInput constructor to handle connection and disconnect events
refactor conditionals in OrcEncodedDataReader. java to improve code readability and maintainability
[ homeconnect ] don't filter thing that be enable by default ( # 2453 )
added null checks before removing and adding policies in AuthorizeAdminServlet to avoid potential NullPointerExceptions when removing policies
updated date format assertions in ` DefaultTypeAdaptersTest ` and ` ObjectTest ` to ensure consistency in date formatting across different Java versions
added JSON serialization for DAG information in TezTask. java to enhance debugging capabilities by providing detailed context information
updated time calculations in ComputedSummary and added methods in HprofHeap to calculate header and tag time based on heap size
replaced RxJava2Tasks with CommonsApplication for upload count retrieval to streamline code and improve maintainability by centralizing upload count logic
removed unnecessary lock mode checks in MVTable. java to streamline code for better readability and maintainability
[ rocketmq - 8 ] fix commitlog to respect maxoffset
added a null check for the ` openFolder ` object in the ` Launcher ` class to avoid potential ` NullPointerException ` when accessing the `
added a new test method ` testSortOrder ` to ` PGPropertyTest ` to ensure that PGProperty names are sorted in ascending order for
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common. java to provide a clear
updated method signatures and logic in UninstallDropTarget. java to use ItemInfo instead of Object to improve type safety and ensure proper intent retrieval
updated assertion message in RequestBuilderTest. java to improve clarity and accuracy of error messages
updated NearbyActivity to replace " RetainedFragment " with " NearbyListFragment " to improve clarity and consistency in fragment management
hhh - 147483 : fix race condition in flatprofilecontainerfree.
added a new boolean field ` sendZeroAnomalyEmail ` and corresponding getter and setter methods in ` EmailConfiguration ` and ` EmailReportJob
[ flink - 20599 ] [ kafka ] fix flinkkafkaconsumerbase's open method invocation
removed getUser and getGeofence methods from DataManager to streamline code by eliminating unused methods
modified the constructor of BlockingResponseListener to accept a maxLength parameter to enhance flexibility in handling larger request sizes
( chore ) camel - mcast : remove thread name from memberadded thread.
added a try - finally block to ensure the reader is closed after sending snapshot fragments to improve resource management and prevent potential resource leaks
updated assertion in LoginSAMLAuthenticationFailureHandlerTest. java to correct the expected error description to ensure the test accurately reflects the expected
refactor ConfigMetadataProviderTest class to improve code readability and maintainability
modified the ` updateNoteReminder ` method to accept ` noteToUpdate ` instead of ` note ` to enhance functionality by allowing modification of the
added a private static class AcceptAllFilter and refactored directory stream processing to use it to improve code readability and maintainability by encapsulating
refactor JdbcTestDataSet class to improve code readability and maintainability
make hotspotjjvmciruntime. lookuptype ( string, class ) more robust.
added validation for Docker image names in GenericContainer. java and created corresponding test cases in DockerImageNameTest. java to ensure valid Docker image
updated error messages in LoginActivity to reflect incorrect credentials to improve user experience by providing clearer feedback on login failures
added setautofocus ( " autofocus " ) to multiple form classes to ensure that focus is properly set in the user interface
added unit test for zone properties in SamlIDPRefreshMockMvcTests to ensure correct handling of SAML properties in the zone provisioning process
added checks for empty list and non - digit lists in ComparableVersion. java and updated corresponding test cases in ComparableVersionTest. java to ensure
updated methods to use bottomRightMode instead of topLeftMode and adjusted preferred width and height calculations to ensure proper positioning of sheets based on their
updated imports and package structure for ParallelUniverse and ParallelUniverseTest to improve organization and accessibility of the Robolectric test
refactor method invocation in LocalCacheFactory and NodeFactory to use a constant FACTORY _ CALL to improve code readability and maintainability by using a
changed fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills. java to improve visual consistency by using a
added methods to draw self loops in the ProcessingPreview class to enhance visual representation of self - loops in the graph
change to allow _ tvm _ solidity059
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in naming conventions
added translation to the drag handle indicator in AllAppsTransitionController to improve the visual appearance of the drag handle indicator
remove unneeded log. getheader call
updated the description of pushing predicates down into storage handlers in HiveConf. java to clarify that filters may be pushed down in the operator tree
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to address build server issues due to OS issues
added Maven bundles for " jetty - alpn - java - client " and " jetty - alpn - client " in TestJettyOS
fix updateprocessinstancelocktime for optimistic locking
refactor transaction handling in the Transaction class to improve code readability and maintainability
replaced CustomFieldBehavior annotation with ExcludeFromRuleKey annotation in GenruleBuildable. java to exclude specific fields related to Genrule execution
simonstewart : make the firefox custom profile launcher work on window
avoid concurrent modification exception in ptableimpl # putdynamiccolumns
[ hotfix ] [ runtime ] fix rawtypes warning in hadoopoutputcollector
added logic to handle cases when the client version is below MIN _ SPLITTABLE _ SYSTEM _ CATALOG and the table type is MAPPED
update student entity only if they have the same googleid
replaced the import statement for TestCellReference from org. apache. poi. xssf. util to org. apache. poi. ss
add block hardness check to lenspiston. close # 3953
added a new file LongPointerPressTest3049. java to implement a basic user interface with pointer press functionality
don't report graph too big when inlining.
http : / / code. google. com / p / mybatis / issues / detail? id = 46 : fix null pointer exception
removed unnecessary type check in ListBlockParser and added a new test for deeply indentationed lists in SpecialInputTest to improve code clarity and
added a new abstract class ` AbstractOptionalAssert ` and refactored ` Optional ` to use it to improve code organization and maintainability by
added JUnit @ Ignore annotation to WebfluxNotIncludedTests to mark the test as ignored due to issue # 1070
remove jsinterop. jspackage. global from testcaselogger. savemessage
updated formatting in RouteStartupOrderLastTest. java to improve code readability
added a condition to check if the video format is a video before processing web subtitles to ensure proper handling of video formats in the playback process
added ` Security. setProperty ( " jdk. tls. disabledAlgorithms ", " " ) ` in ` ComHostnameVerifier. java `
cloudstack - 6685 : don't try to delete storage pool in zone wide storage
enhanced logging in Driver and QueryResultsCache to include cacheEntry details to improve clarity and debugging by providing more context on cache entries
[ java ] add option to skip model update after manage dependency
added a test for sending an intent with a request code in ShadowActivityTest to ensure correct handling of pending intents when the request code is
refactor graphics creation logic in RocketFigure3d. java to improve clarity and maintainability of the code
added synchronization to the controllerListeners list in HydrawiseAccountHandler. java to ensure thread safety when accessing shared resources
solr - 9893 : disable EasyMock test that do not work with java 9
updated year retrieval logic in TimestampUtils and added tests in SetObject310Test to improve accuracy and correctness of date formatting in tests
fix possible npe when disconnect a jabber account.
added a new column " cur _ ws _ commit _ id " to the committed table in TxnHandler. java to ensure consistency in the
replaced ByteChunk with ByteBuffer and updated related methods to improve performance and handle buffer overflow exceptions
added a new method ` toSync ` to ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to ensure proper handling
added ActionGraphBuilder to multiple compiler factory classes to enhance functionality by integrating action graph management
added a test for uploading files with a hidden file input in UploadTest. java to ensure that the upload functionality works correctly when the file input
removed redundant try - catch block in SQLManager. java to streamline error handling and improve code readability
added a check to return the super class's local Maven directory if the specified file does not exist to ensure the application uses the correct local
ggb - 1975 hide algebra label when new label be hidden
fix npe in ctelementimpl. getmetadata ( )
replaced ` buffer. setFlags ( C. BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` buffer. addFlag ( C.
do n ' t sort cache instance by id if it be already sort
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call here " to clarify the context of the
added a null check for backupFolder before logging a debug message to avoid potential NullPointerExceptions during execution
added a new file ` ArrayNewInstanceOfVoid. java ` that demonstrates the use of ` Array. newInstance ( void. class, 2 )
added @ AddToRuleKey annotation to private fields in ClangCompiler and GccCompiler to ensure that the toolType field is marked as
updated timeout logic in PinCheck. java to use a constant for PINCODE _ TIMEOUT to improve code readability and maintainability by centralizing
added ` isSampled ( ) ` method implementation in ` PrometheusMeterRegistryTest ` and ` PrometheusExemplarsSample `
removed @ Ignore annotations from multiple test classes to streamline tests for better clarity and maintainability
remove dependency on javax. jms
updated condition in MetaDataSource to check if the table is artifical to improve accuracy in determining if the table is artifical
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer. java and LaunchMapper. java to improve clarity
refactor session attribute handling in MongoSessionManager. java to improve clarity and correctness in attribute management
use setsizefromlayout ( ) instead of setfixedsize ( )
refactor stop timeout handling in AbstractConnector to improve clarity and prevent potential NullPointerExceptions
removed unnecessary whitespace in HuobiStreamingService. java to improve code readability and maintain consistency
( chore ) camel - http : / / issues. apache. org / activemq / browse / amq - 4068 - use current
( chore ) camel - delayedmono : fix flaky test
updated error assertion in WebsocketTest to check for WebSocketHandshakeException to improve error handling by providing clearer failure messages
refactor AllAppsTransitionController to use OnLayoutChangeListener directly to improve code readability and maintainability
refactor variable names from'the'to'handler'in PolicyBasedAuthenticationManager. java to improve clarity and consistency in variable naming
added support for the " default - output - channel " attribute in XPathRouterParser and its tests to enable configuration of the default output channel in
changed cacheSeconds from an integer to a String in MessageBundleProperties and updated cacheSeconds handling in CasCoreWebConfiguration to improve flexibility in
updated version strings in ParameterDeSerializationTest. java and ParameterSerializationTest. java to ensure consistency in versioning across tests
removed the call to append ( buffer, true ) in ByteBufferPool. java to streamline buffer handling by eliminating unnecessary method calls
added a check for the presence of " alt - rt. jar " in the boot classpath to prevent tests from being skipped due to the presence
updated user names in JdbcScimUserProvisioningTests to use uppercase to ensure consistency and accuracy in user identification
replaced ` Arrays. asList ` with ` ArrayList. java. util. List ` and modified the flight recording options to enhance flexibility in flight recording
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check if the
added a condition to check if the content view is not empty in HttpParser. java and implemented a test for chunked transfer encoding in ProxyServlet
camel - 16400 : camel - atmos should use org. apache. camel. aws. AtmosEndpoint instead of org. apache
added support for " printf " and " print " methods in Java2TypeScriptAdapter. java to enhance functionality to support additional output types
added a new class TestCapacityUntilGCWrapAround and native methods incMetaspaceCapacityUntilGC to ensure proper handling of metaspace
updated package - info. java files for mmm and ppp packages to improve clarity and maintainability of package documentation
modified the calculation of the endTime in SamplingStatCalculator. java to ensure accurate tracking of the time taken at the start
added unit test base on user forum issue
tmi - jpeg : improve icc profile error message
fix the terraform rod not cause the reequip animation
removed unnecessary bindings in JoobyModule and SpringModule to streamline bean registration process by ignoring specific classes
remove createloaderrule from contextruleset.
add support to allow nameupdater. properties to be load from meta - inf / resources
added logic to set the started state of ellipsoidRegionSelector to ensure that the ellipsoid region selector starts correctly
updated URLs from HTTP to HTTPS in JavaSEPort. java to ensure secure access to the codebase
wfs 2.0 getfeature should throw an exception if the requested attribute be invalid
updated the assignment of grantor to check for null values to ensure proper handling of null values in the grantor assignment
updated DiagramGenerationTest to use compatible images instead of expected ones to ensure compatibility of images in the graphical environment
throw a runtimeexception if you can't install fml properly.
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
use asserttask instead of sleep
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` class for processing tokens to enhance string processing capabilities by allowing
don't log access in case of 404
refactor command handling and variable usage in SystemHighlighter. java to improve code clarity and maintainability by using a consistent command index
updated version and version date constants in Constants. java to reflect the official release version and indicate a pending version
updated buffer position calculation to use dimensionSize instead of idx to ensure correct buffer position based on the specified dimensions
added support for handling drag and drop states in multiple classes to improve functionality and error handling during drag and drop operations
update socketappendersocketoptionstest to run only on java 7
added a new cipher " PSK - AES256 - GCM - SHA384 + TLSv1. 2 " to the TestCipher class to
updated the method from ` getDescription ( ). getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment.
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for improved data handling
updated HqlQueryRenderer to handle reserved words and added a new test for schema scoping in HqlQueryRendererTests to improve query
( chore ) camel - subscription : fix typo
refactor Parser class to improve code readability and maintainability
updated the ` offsetStreamIndex ` method to include a new boolean parameter ` indexStartsAtOne ` and modified track selection logic to improve
tika - 697 -- fix magic detection, and add test for cpio
[ hotfix ] [ table - planner - blink ] remove unused method in flinksqloperatortable
added ` equals ` and ` hashCode ` methods to ` OneTimeTokenAccount ` and implemented ` Inheritance ` in ` OneTimeTokenAccount `
added a condition to check if the assistant is not previously launched before fling to ensure that the fling process only proceeds when the
added a new file SolarisShortDSA. java to implement DSA key generation and verification to ensure proper handling of Solaris key generation and
added a call to toggleSearchLabel with a value of false to improve user experience by allowing search functionality to be disabled
bug 7143 : don't throw an exception when try to create a snapshot
updated the ` mConnection ` class to implement ` ServiceConnection ` and added a null check before unbinding the service to ensure that the service
updated error handling in HttpClientTLSTest to use AtomicReference for SSLPeerUnverifiedException to improve code clarity and ensure proper handling of SSLPeerUn
removed the equals method from ConjunctionScorer class to simplify equality checks for Scorer instances
added null check for variable'v'in Launcher. java to avoid potential NullPointerException when colliding items
fix getraftgroupids operation timeout issue ( # 179 )
don't shrink the cache if it's full
updated API version from " / api / v2 " to " / api / v3 " and modified limit order logic in CryptoFacilities
added a method ` empty ( ) ` to the ` freenect2 ` class to check if the size of ` freenect2
added null handling for page data in AsyncPageReader and updated test comments for DRILL - 8023 to improve robustness and clarity in
updated argument validation and error handling in SerumStreamingService. java to ensure correct argument types and improve robustness against invalid market data types
add config option to disable the charging animation when an item be charge on top of a mana pool
[ java ] don't send timeoutexception to cluster restart test.
added error logging for InterruptedException in WaitForHelper. java to improve error handling and facilitate debugging
updated directory creation logic and assertions in DefaultServletTest. java to improve test reliability by ensuring filesystem support for question directories
swapped the order of ` openScreenStyle ( ) ` and ` dialogStylesScss ( ) ` in ` ResourcesInjectorFull. java `
replaced ` String ` and ` String ` types with ` FileResource ` in ` BaseLiquibaseTask ` and ` DBDocTask `
fix checkstyle issue in blockworldvector
changed ` CacheEntry < V > ` to ` final ` in ` LongConcurrentLRUMap ` to improve code clarity and enforce immut
updated regex handling in resource configuration to ensure proper parsing of literal values
refactor cache retrieval logic in FileCredentialsCache. java and update EmptyCC. java to accept command - line arguments to improve flexibility in managing credentials
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect
add peer count check in sync for fast sync
simonstewart : don't try to attach the session to the current thread
don't expand AreEqual [ Segment [ X, Y ], Segment [ Z, W ] ] format expressions in ExpressionNode.
added a condition to clear pending rendering operations if the implementation is minimized to optimize performance by avoiding unnecessary rendering operations
modified sleep logic to check if the deadline is passed before proceeding to improve test reliability by avoiding unnecessary sleeps
fix coalescedwritebehindqueue. put ( key, value ) for continuously update key
added a line to set the icon to null in the GroupTreeCellRenderer to improve user interface by preventing potential null pointer exceptions
updated test methods for strict match and default behavior in TestBlacklistAwareRedirectResolver to improve clarity and consistency in test cases
added shutdown monitoring functionality and improved resource management in ShutdownMonitor and ShutdownMonitorTest to enhance monitoring capabilities and ensure proper resource management
improve performance of randomaccessstore. read ( )
refactor serialization logic to improve clarity and maintainability to enhance code readability and facilitate easier debugging
[ hotfix ] [ runtime ] move componentclosingutils from util to operator
destroy volume during vm transition to error state
fix npe in getip6rangefromcidr ( )
updated variable names from ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` to improve clarity by
increased the leader retry timeout from 15 seconds to 30 seconds in CollectionsAPIDistributedZkTest. java to improve test reliability by
refactor error message methods to remove unnecessary string concatenation to simplify error handling and improve code readability
updated drawImage calls to use negative coordinates in URLImage. java to ensure proper rendering by removing unnecessary offsets
updated the condition from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4. java ` to ensure that the
mondrian : fix check for empty list in setFundef.
[ hotfix ] [ stream ] include exception cause in streamconfig
replaced the use of ` expandedTag ` with a new ` hashtag ` string and refactored digit extraction logic to improve code clarity and
reformatted the ` read ` method in ` MessagePack. java ` to improve code readability and maintainability
added a new annotation ` Mapper ` in the ` org. apache. ibatis. annotations ` package to provide a way to define a default
don't encode empty extension list in jsonparser
updated regex patterns and improved artifact retrieval logic in LibraryManager. java and LibraryManager. java to enhance robustness and correctness in handling external metadata
added alias for " node _ popup _ scripting " in ScriptingMenuEntryVisitor to enhance menu entry navigation for scripting functionality
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants and refactored task visibility checks in Rec
camel - jms : use class instead of casting to jmsmessage
[ hotfix ] fix checkstyle violation in service - config. xml
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` to clean up the codebase and improve maintainability
modified ` __ content ` and ` __ contentETag ` to be ` static final ` and added a new ` MicroServlet ` to improve
use backpressureutils. getandaddrequest ( ) instead of consumercapacity. getandadd ( )
added logging for component installation and stopping processes in SpeedmentImpl. java to improve debugging and monitoring of component installation status
dspace - app - oai should load oai - config from servletcontext
hbase - 26400 fix npe in storescanner when row be null
( chore ) camel - test - infra - jmx : disable jmx and enable jmx
replaced hardcoded'/'with a constant'CANONICAL _ PACKAGE _ SEPARATOR'in SourceLineAnnotation. java and SourceCodeDisplay.
added YARNBIN configuration and improved app info printing in RemoteSparkJobMonitor to enhance user experience by providing clear application information when the application is
added a condition to check for the database type " maria " alongside " mysql " to ensure compatibility with additional database types
hbase - 25836 splitlogmanager don't log empty directory in log file ( # 2273 )
added a new file ` ExecuteAndReturnStringTest. java ` to facilitate testing of string concatenation in the application
added a new file InvokespecialInterface. java to demonstrate the usage of the ` doSomeInvokedynamic ` method in an interface
refactor EvictingBoundedList class to improve code readability and maintainability
don't set turncosts = true when turncosts = true
added a null check for style. backgroundDisabled and a validation check for selection validity in SelectBox. java to ensure that selection is valid and
added a null check for the method name in RpcServer. java to ensure that an unsupported operation is handled gracefully
update hotseatCellSize calculation to use DeviceProfile's calculateCellWidth method to improve accuracy in determining hotseat dimensions based on
refactor partition string handling in ExpressionTree. java to improve clarity and maintainability of the code
added version check to taskdecorator to ensure proper serialization / deserialization of task
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler. java ` to ensure
updated the comparison logic in DisplayModeTest to include display mode verification to ensure that the test accurately verifies the expected display mode behavior
updated UnicodeToLatexFormatter and HTMLUnicodeConversionMaps to include additional Unicode characters to ensure proper handling of Unicode characters in the output
added null check for values and modified value assignment logic in OAIDCCrosswalk and Item classes to ensure proper handling of null values and
danielwagnerhall for webdriverbackedSelenium. java : fix a bug where the original window handle could not be
updated StringSearchPanel and BookmarksPanel, added a clear button in DataBrowser to enhance user experience by allowing users to clear the bookmarks file
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for constructing request URLs to improve code readability and maintainability by centralizing URL construction logic
updated assertions in SoftAssertionsTest to use parseDatetime for date comparisons to improve accuracy and consistency in date parsing tests
updated ` adaptOrders ` method to include a ` boolean ` parameter for reverse order handling to enhance order adaptation by allowing the order to be
updated PrettyPrinter to handle null vartype cases and added a new Java11Var class to improve robustness by ensuring proper handling of
simonstewart : fix compilation error
updated Configuration initialization to include a default value and removed null check for Hadoop configuration to improve flexibility in configuration management by allowing overriding of Hadoop configuration properties
replaced call to ` super. drawChildren ( batch, parentAlpha ) ` with ` super. draw ( batch, parentAlpha ) ` to
added unit test base on user forum issue
use get catalinabase ( ) instead of system. getproperty ( )
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the ` getBestDateTimePattern `
updated the color mapping in PlotSquared. java to include additional color codes to enhance the visual representation of Minecraft's color codes
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance tracing capabilities by allowing
tika - 2693 -- fix unit test for tika - 269
( chore ) camel - test - infra - maven - plugin : add @ parameter to build - info goal
update xDist calculation to use the absolute value of mScroller. getCurrX ( ) to ensure accuracy in determining the x - coordinate
deleted the GUIRWTester. java file to streamline the codebase
removed nullability annotations from constructor parameters in LazyMessage and StandardSubjectBuilder to simplify constructor usage and improve code clarity
updated error message format in TestStream. java to improve readability of the error message
rename ` ` org. thymeleaf. templateparser'' to ` org. thymeleaf. templateparser. markup''
added a test method for XPathString evaluation in XPathTest. java to ensure that XPathBuilder correctly parses XPath strings
added nullability annotations to FutureUtils. java to enhance code clarity by indicating that these methods may return null values
add warning about invokedynamic during call - graph construction
updated email addresses from " myfakeemail @ gmail. com " to " myrealemail @ example. com " in ContextTest. java
updated error message format in HttpConnectionTest. java and modified URIUtil. decodePath in URIUtil. java to improve clarity of error messages
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` and ` ResultTableResultSet ` to provide a consistent way to retrieve column data types
[ java ] add default implementation for unsupportedoperationexception in java client interface
refactor HSSFPictureData class to improve code readability and maintainability
changed ` long ` to ` java. time ` for ` startTime ` and ` Duration ` in ` Statistics. java ` to improve accuracy in
updated logging and version handling in LibMediaInfoParser. java to improve clarity and maintainability of log messages
added methods to create a Proxy for IdeaDependency in ProjectReader. java to improve proxy creation logic for IdeaDependency objects
added a new SerialHeap class and updated references throughout the codebase to implement a standardized garbage collection mechanism
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types. java to suppress serialization warnings and improve code clarity
add mouse position to the mouse wheel event
updated MongoQueryCreator to handle null values during query creation to improve robustness by avoiding potential NullPointerExceptions
[ hotfix ] [ table - planner - blink ] make maptypeinfo non - volatile
added a method to retrieve an identity provider by issuer in XOAuthProviderConfigurator and corresponding test cases in XOAuthProviderConfiguratorTests to ensure that
added a method to check if a string is a delimiter and updated whitespace checks in CMapParser. java to improve parsing accuracy by correctly identifying
refactor ContactsBackupJob to use ServiceConnection for service management to improve reliability and maintainability of the OperationsService
refactored type constraints and introduced new classes T6938454a and T6938454b to improve type handling and facilitate
add isconfighidden ( ) method to accountlist to check if account be hidden.
added logging for inconsistent displays in DisplayController to improve debugging and error handling for display state mismatches
removed a method call to ` SchemaUtil. getSchemaKey ( ) ` in ` PMetaDataImpl. java ` to simplify schema removal logic and
don't fire loadhandler for loginpassive operation in web application
added a new file ` Box2DTest. java ` and updated ` Box2DTest. java ` and ` GDXTester
use ` ` < anonymous >'' instead of ` ` - deleted -''
[ hotfix ] [ network ] increase default buffer request timeout to 5 minute.
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added help button in the OpenOfficePanel to provide users with easy access to the help content
add channeloption. childoption ( channeloption. TCP _ NODELAY, nettySoBacklog ) to channeloption. childoption ( channel
updated method signatures to use wildcard generics in Binance classes to improve type safety and reduce potential runtime errors
refactor class name assignment logic in ScanResultObject. java to improve clarity and maintainability of the code
remove unnecessary try - catch block in decodeservlet
added null handling functionality to Querydsl and created corresponding integration test to enhance query functionality and ensure proper handling of null values
added a null check for the actor in SequenceAction. java to ensure proper handling of null actors during action execution
fix flakiness in cttypetest
added synchronization to the flush operation in HDFSEventSink. java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and ` JJ ` implementing ` Issue888 _ KotlinI ` to implement testing for
added functionality to revoke certificates using openssl to enhance security by preventing accidental certificate recalculations
added a check to verify that no body responses are present in the HTTP client to ensure that the server correctly handles cases where no body responses are
added error handling for script loading in ScriptTransformer. java to ensure compatibility with Java 6 and above to improve robustness against script engine issues
added support for Hikari configuration in multiple classes to enhance database connection management and improve error handling
replaced ` mDevice. pressHome ( ) ` with ` mLauncher. pressHome ( ) ` in multiple test files to ensure compatibility with
added functionality to filter lock and unlock files in the FileMenuFilter and OCFileListFragment to improve user experience by allowing toggling of lock and
refactor Version class to improve code readability to enhance maintainability and facilitate easier updates
clear endpoint cache when update keyspaces
added a new method ` waitForState ( Thread. State state ) ` and modified the ` waiting ` variable in ` ThreadExecutionSynchronizer `
updated ` getCoercedAttrValues ` and ` getCoercedAttrValues ` methods to accept ` BuildTarget ` and ` ProviderInfoCollection `
simonstewart : move the storage interface from localstorage to sessionstorage
fix npe when create view with replace option
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner. java to improve error handling by providing more informative error messages
updated query string retrieval logic in SpellCheckComponent. java to ensure proper retrieval of the query string if it is null
added validation for header values by checking for illegal characters and whitespace to ensure header values do not contain illegal characters or whitespace
replaced instance size calculations with array base offset calculations in HybridLayout and HostedInstanceClass to improve accuracy and accuracy of array size calculations
[ apex ] fix classcastexception in apex tree builder
hhh - 5108 - add log for association with ` @ fetch ( fetchmode. join ) ` and ` @ fetch ( fetchmode
refactored NoGetOperationsFilter and NoUserOperationsFilter classes to extend AbstractSpecFilter and removed the SwaggerSpecFilter interface from the filter
added assertions to verify database and table names in TestCompactionTxnHandler and TxnHandler to ensure correct retrieval of database and table names from the
camel - 16400 : added unit test base on user forum issue
added a conditional check for block processing before adding traces to ensure traces are only added when the block is processed
updated ProviderManager to use CollectionUtils for checking null elements to improve robustness and prevent NullPointerExceptions during startup
simplified the database version check in InsertOrUpdateGeneratorPostgres. java to improve code readability and maintainability
phoenix - 4687 : fix index scan limit issue
added a check to prevent adding a collection with the same name and a different type in the past to ensure that a collection with the same name
updated cursor position calculations in VDUBuffer and vt320 classes to ensure correct cursor positioning based on screen dimensions
replaced the static final String USE _ RETRIES with a static final constant in HttpShardHandlerFactory. java to improve code clarity and maintainability
updated the version number format in JavaVersion. java and added a test case in TestJavaVersion. java to ensure correct parsing of Java versions
added a check to return early if all input gates are empty to optimize performance by avoiding unnecessary processing
added a JUnit test annotation to the TestReceivingMessageSourceParserTests class to facilitate unit testing of the TestReceivingMessageSource
added null check for properties retrieval to avoid potential NullPointerException when properties is null
improve error handling in FileSystemBlobStrategy to include original IOException cause to enhance clarity and maintainability of error reporting
updated error message formatting in RepositoryVersionResourceProvider. java to improve clarity and consistency in error reporting
tx confidence listener should not be add to the wallet service.
added a constant G1 _ PERM _ GEN in JmxSupport. java to support G1 Perm Gen functionality in the application
removed redundant import statements and simplified return logic in NearbyController. java to streamline code and improve readability
pdfbox - 4892 : make clonefornewdocument public again
updated activity type checks in BaseSwipeUpHandlerV2. java to improve accuracy in determining if a task is not home
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related constants to improve clarity and consistency in naming conventions
updated method names and logic in ShadowTelephonyManagerTest and ShadowTelephonyManager to ensure case - insensitivity for network and sim country I
added a method to set the unfreeze amount in the UnfreezeBalanceV2Actuator class to ensure proper handling of unfreezing amounts
updated PUBLISHED _ TIMESLOT _ DESCRIPTION and PUBLISHED _ ROOM _ DESCRIPTION from " per minute " to " per match
simonstewart : use fileutils. copydirectory instead of java. io. files. copy
updated assertion classes in the codebase to improve code clarity and maintainability
[ hotfix ] [ javadoc ] fix typo in javadoc of observable. delay ( )
replaced the use of ` keyValue ` with ` addMultiFieldOperation ` in the ` Update ` class and added a new test for multiple push
added a null check for randomUUID before setting the ID in MockHubService to avoid potential NullPointerException when randomUUID is null
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user experience by dispatching generic hover events
added a conditional check for the bootstrap configuration in CoreContainer. java to ensure that the bootstrap configuration is only set when the corresponding server is available
camel - netty - http : use label ` ` consumer'' instead of ` ` header''
hbase - 26979 set hbase _ client _ retries _ number to 15 to avoid flakiness
update sourcesnippetshelper to use absolute path instead of relative path
attempt in encodedgraphtest. testinvalidationtestnode. execute must not be cache.
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a
added currency adaptation for kraken assets in KrakenAdapters. java to ensure currency metadata is properly stored for asset assets
added a ` toString ( ) ` method to ` AnyOf ` and created a new test class ` AnyOf _ toString _ Test ` to
refactor email subject extraction logic in AlertTaskRunnerV2. java to improve clarity and correctness in email subject formatting
[ influxdb ] don't publish influxdb measurement if measurement be blank
replace dotransform ( number ) with downcast ( number ) in converter
added filtering filters for local addresses in NetUtils. java to ensure only valid local addresses are processed
added a method to quote column names in DataTextFormatter to ensure proper handling of column names in data formatting
added methods for setting properties and retrieving properties in WrapSystem and StrUtils classes to enhance functionality for managing system properties and attributes
added a constructor to UpdateRequest that accepts a URL to initialize the Request object with the requested URL
updated enum declaration from static to instance in ProtoTypeAdapter. java to enhance flexibility in serialization
added a method to ` addExperimentalFormatWarning ` in ` RequestHandlerUtils ` to indicate that the response format is experimental and encourage the
updated debug logging format in JpmsUtil. java to include multiple module names to improve clarity of debug messages by displaying multiple module names
bug fix : table row height depend on the default label font
[ hotfix ] fix potential npe in defaultbrokerheartbeatmanager
refactor partition size calculation logic in CqlInputFormat. java to improve clarity and maintainability of the code
updated conditional logic in JUnitTestsShouldIncludeAssertRule. java to simplify the check for JUNIT4 _ CLASS _ NAME to improve code readability
[ drools - 10 ] fix equal ( ) and hashcode ( ) in ruleterminalnodelefttuple
added a check for the HIVESTAGEIDREARRANGE configuration in TezCompiler. java to ensure proper handling of stage IDs during
use ` ` org. apache. cassandra. net'' instead of ` ` org. cassandra. concurrent''
added memory consumption logging in LotsOfOutput. java to improve debugging by providing detailed memory information during the initialization process
added imports and updated comments in multiple Java files to improve code clarity and maintainability
polish ` ` read only'' property in spring - ldap
refactor DatabaseMetaData class to improve code readability and maintainability
[ beam - 8470 ] make echopipelinetest class private
added a ` finishMocking ` method to ` DefaultMockitoSession ` and modified the verification logic in ` StubbingWarningsTest ` to
refactor GoTestDescription. java to remove extraDeps parameter and add new test cases in GoTestIntegrationTest. java to streamline dependencies and
rename and refactor buffer and handler variables in SPDYAsyncConnection for better clarity and organization to improve code readability and maintainability by clearly distinguishing between read and write buffers and their associated handlers
change block retrieval from static to flowing block in BlockLiquidWrapper to improve clarity and accuracy in block flowing operations
updated location intent handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to improve accuracy in extracting background location listeners from the intent
fix a typo in the javadoc
[ hotfix ] [ table - planner - blink ] fix type mismatch in clifrontend
fix craftingmanager. getshapedrecipes ( ) bug
[ flume - 10 ] fix flaky test filechannelrestart test
tabsandindentsvisitor don't handle newlines properly
added a pattern to match ". * pg _ temp _. * " in NeuteredLinesFilter. java to ensure proper handling
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added support for handling " NCLOB " data types in multiple classes to ensure proper handling of NCLOB data types
add meter to wavefront distribution summary if it's publishinghistogram ( )
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` to set divide upstreams and modified the ` DivideUpstream ` builder
added a new method ` registerListener ` to ` ShadowSensorManager ` to facilitate listener registration for sensor events
added socket exception handling for ` testFullMethod `, ` testFullURI `, and ` testFullHeader ` methods in ` SelectChannel
( chore ) camel - ignite : fix npe when use osgi karaf
added conditional logic to handle cases when the number of lines is zero to improve error reporting for cases where the number of lines is zero
pdfbox - 4071 : don't swallow exception
added unit tests for ` setDisplayHdrCapabilities ` in ` ShadowDisplayTest. java ` to ensure that the ` setDisplayHdrCapabilities `
added a finally block to reset the classLoader variable to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of error messages for better debugging
added a default constructor to the Message class to ensure proper instantiation of the Message class
bugreporter : don't report miss class in serializable idioms
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and modified BigDecimal creation logic to enhance type safety and ensure proper handling of decimal types
changed the type of ` gzipstream ` from ` String ` to ` OutputStream ` in ` CompressionResponseStream ` and ` CompressionServletResponseWrapper
updated method signatures and regex patterns in Authenticator. java to improve clarity and consistency in authentication header handling
removed conditional checks for specific package names in DCD. java to simplify the code and improve readability
added a method to retrieve the thread group name in ThreadLeakTest. java to improve thread identification by distinguishing between stopped threads
added logging and modified access decision logic in MethodInvocationPrivilegeEvaluator. java to improve debugging and ensure security interceptor is mandatory
changed package and logger name from " org. apache. nutch. crawl " to " org. apache. nutch. tools " to
removed Lombok's ToString method from ChainingRegisteredServiceDelegatedAuthenticationPolicy to streamline code by eliminating unnecessary Lombok's
cloudstack migration : add iso volume to the list volume of user vms
refactored signal handling in SigInt. java and updated related tests in SigIntTest. java to improve code clarity and ensure proper handling
replaced the static import of ArrayUtils. isEmpty with ArrayUtils. isEmpty for estimatedRowSizeHistogram and estimatedColumnCountHistogram to improve code clarity and reduce
remove @ contextconfiguration from spring - boot test
added multiple @ Override annotations in ColorRGBA. java to improve code clarity and ensure proper method overriding
[ planning ] remove planningentityselector # uninitialize ( object planningentity )
updated ` ArtifactInfo ` to include build time in ` TwoLevelArtifactCacheDecorator ` and ` ManifestRuleKeyManager ` to ensure accurate tracking
refactor field retrieval in GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) to improve accuracy in determining field types during aggregation
wallet : fix npe in addblockappearances ( )
added support for the CNC currency pair in the BTCEUtils and TickerDemo classes to enable trading functionality for the CNC currency
updated skewAllowance values and modified session expiration logic to ensure correct skew allowance values based on service settings
updated song fields and sorting logic in SongListActivity and Utils to ensure correct sorting behavior for song items in the query
removed unused imports and modified the readBodyToBytesIfNecessary method in Utils. java to streamline code by eliminating unnecessary dependencies
add legacy block wrapper class for legacy block.
updated IcebergBranchExec and TestHiveIcebergBranchOperation to check for existing tags before creating a branch to improve error handling and ensure
replaced the use of ` newArrayList ` with ` Collections. singletonList ` in ` AbstractLdapMockMvcTest. java ` to simplify the code and
refactor PhotonMappingDemo and HybridDemoSboInstancing to streamline bounce count calculations to improve code readability and maintainability
added validation for requirePasswwordChangeRequired property in IdentityProviderEndpoints. java to ensure proper handling of password policy operations
added a call to ` notInitializedInConstructors. removeAll ( assumeReflective ) ` in ` UnreadFields. java ` to ensure that
added handling for closed connections in JdbcExecutor to improve error messaging when the database connection is closed
added a new test method ` testRequiredBody ` in ` SpringmvcClient. java ` to verify user data retrieval and validation of user data
updated regex patterns in CredentialInjector. java and modified JDBC URL formatting in CredentialInjectorTest. java to improve accuracy in matching user and password formats
added a new menu item " Item4 " and a key binding for the " ENTER " key in ActionListenerCalledTwiceTest. java to
updated debug print statements and modified assertion logic in TestCoreParser. java to improve clarity of logged messages and ensure correct assertion behavior
simplified conditional checks in SimpleNode. java to improve code readability and maintainability
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow access to the class from other packages
replaced ` int ` with ` long ` for numDocs in ` MoreLikeThis ` and added a new test case in ` TestMoreLikeThis
refactor event triggering logic for QUEST _ COND _ STATE _ NOT _ EQUAL to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
added " $ gt " and " $ lt " to the EXPIRY query in MongoSessionDataStore. java to ensure that the EXPI
make compilerdirectivessubstitutions # unsafegetlong static
updated time zone name from ARAST to EET across multiple language files to ensure consistency in time zone representation
updated ID from 90000010 to 90000011 in DeprecationLogger. java to ensure compatibility with the latest naming standards
hhh - 147483 - hhh - 14748 don't throw exception if accesstransaction ( ). rollbackonly
fixed bug where external file name don't have an obvious extension.
disable screen menu bar on macos
add unit test for piecewise integral in ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSwipeUpHandler
added a test case for modifying hive. metastore. uris in SQL authorization to ensure that the configuration matches the list of parameters in the authorization
removed entryName and value assignment in EntryLoader. java to streamline code by eliminating unnecessary entries
mobileinput : use player. team ( ) instead of sharded
updated cookie domain from " comp1 " to " getHostName ( ) " to ensure the correct domain is used for cookie creation
added validation logic for nullable columns in ` MissingColumnChangeGenerator ` and ` MissingTableChangeGenerator ` to ensure proper handling of nullable columns in
update copyright year for generated file
added tests for deleting and adding documents and changed separator and bitsSeparator to static final in CompositeIdRouter to improve test reliability by ensuring
updated ` ExecutablePreparedStatementBase ` to utilize ` SnapshotGeneratorFactory ` for generating snapshot data to enhance compatibility with PostgreSQL's snapshot generation
updated cache conditions and formatting in DefaultServlet. java to enhance cache behavior and improve code readability
added drag event handling for drag - and - drop tabs in JabRefFrame. java to improve user experience during drag - and - drop
replaced ` createDescription ` method with ` createTestDescription ` in ` ExecutionUnitRunner ` and updated child assertions in ` CucumberTest ` to
replaced `! myVersion. isEmpty ( ) ` with ` StringUtils. isNotEmpty ( myVersion ) ` and ` buildTimeString. isEmpty (
changed access modifier of several methods from public to package - private in TimeUtils. java to restrict access to these methods for better encapsulation
added version check for SecurityFrame or InjectedInvoker in RefectionMHTests to ensure compatibility with versions 18 and above
updated file extension check in PreviewImageFragment. java to ensure consistency in file extension checks
[ gr - 205362 ] nativeimagedebuginfoprovider now return the correct type of a hosted method.
added ` getIcon ( ) ` method to multiple Data classes and updated ` DataTableTopComponent ` to use ` ImageUtilities. loadImageIcon (
updated substring extraction logic in CounterRequestAggregation. java to handle cases where the request name may contain a period to improve robustness by ensuring
updated regex handling in FindAndReplace. java and added a new test for dollarsigns in FindAndReplaceTest. java to
smack packet debugger now take into account port 5222.
refactor SchemaExtractionProcessor class to improve code readability and maintainability
added a method to copy a specified source and destination directories in IO. java and updated SpecWebAppTest. java to use this method to improve
added error handling for unknown datum classes in JacksonUtils. java to improve robustness by throwing an exception for unknown data types
replaced calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` requireRule ( Has
simplify height calculation in SelectBox. java to improve code readability and maintainability
added normalization of database and table names in ObjectStore. java to ensure proper identification of database and table names
updated database type handling in DbSqlSession. java to include a schema parameter to ensure proper retrieval of the database's schema based on the
removed the call to Logout on an empty response in HomeFragment. java to simplify the code by directly calling getActivity ( ). finish (
[ hotfix ] [ test ] change the number of parallel subtasks to 1337
added a null check for candidates before retrieving the priviledged list to avoid potential NullPointerExceptions during import operations
updated managed state checks in ContainerLifeCycle and modified assertions in ContainerLifeCycleTest to improve clarity and accuracy of lifecycle state assertions
rename iexecutionattributesdialect to iexecutionattribsdialect.
added a call to metadata. clearUnsafe ( ) in AlterTest. java to ensure thread safety during metadata operations
fix for ` ` loc = = null''
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue's setRingBufferSize and setThreadFactory
deleted the Session2Token. java file to remove unused code that is no longer needed
destroy volume when volume creation fail
added a new Install class to SystemShortcut and integrated it into the popup to enhance user experience by providing quick access to installed components
added a new class ` NullAuthoritiesPopulator ` and updated ` LdapAuthenticationProviderTests ` to utilize ` NullAuthoritiesPopulator `
updated retrolambda handling in Executor and CN1BuildMojo to ensure retrolambdaJar is correctly set based on system properties
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera. java ` to simplify the build process and improve code
replaced FixedBitSet with Apache Lucene's Bits for sorting live documents to improve performance and maintainability of the code
added handleNullResult method call in JMESPathExtractor. java to ensure proper handling of null values during path extraction
updated import statements and added null check for authorities in AuthorizeTag. java to enhance code clarity and prevent potential NullPointerExceptions
updated assertions in tests to remove unnecessary parentheses to improve code readability and maintain consistency in formatting
fix typo in error message for vgPU enabled vms
refactor config handling in RobolectricTestRunner to improve clarity and consistency to enhance code maintainability and ensure correct configuration merging
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner. java ` to align the connector implementation with the updated Jetty
added equality check for partition keys in HiveAlterHandler to ensure correct handling of partition keys during alteration
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags. java to facilitate visibility of the icon in
removed unnecessary whitespace in SimulationStatus. java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback in multiple classes to simplify code and improve performance
added workspace listener to the PreviewControllerImpl class to update the graph based on workspace changes
added a condition to check if the method's declaring class is an anonymous class in ReflectionFactory. java to ensure proper handling of anonymous classes
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path from " file : / / " to " file : " in CatalinaAcegiUserRealm. java to ensure
updated log messages for initializing ActionManager in AmbariServer. java to provide clearer insights into the initialization process
enhanced null checks and improved node handling in JSON processing to enhance robustness and prevent potential NullPointerExceptions
refactor Hadoop configuration handling in SliderAppsViewControllerImpl. java to improve clarity and maintainability of the code
added a null check before attaching the background to avoid potential NullPointerExceptions when the background is detached
added tab management in AllAppsTabbed, Launcher, and PagedView classes to improve tab management and ensure proper layout adjustments
added a null check for the URL in BaseDataSource and a corresponding test case in SimpleDataSourceTest to ensure proper error handling for invalid URLs and
updated PebbleTemplateEngine instantiation to run on supported Java versions to ensure compatibility and compatibility with newer Java versions
added an EditNameDialog to handle directory creation in FileDisplayActivity to improve user experience by allowing custom directory creation
added functionality to toggle bar borders in multiple chart activities to enhance user experience by allowing toggling of bar borders in charts
updated the SSL URI from " https : / / www. okcoin. com / api " to " https : / www. okex
add deciderscorecomparator to acceptforagertest
replace FileChannel with SeekableByteChannel in file reading to improve performance by using a more efficient NIO approach
refactored the getFlattenFieldTransferPair method to accept a FieldReference parameter and updated related logic to enhance code clarity and maintainability
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in the codebase
removed redundant check for LAMBDA _ CAPTURING _ SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser. java to
added heap watch heap limit configuration in QuickstepProcessInitializer to optimize memory usage for debug devices
refactor sumWithCompensation logic to store the result of sumWithCompensation to improve clarity and maintainability of the code
[ log4j2 - 2852 ] fix test failure on osgi
[ hotfix ] [ table - planner - blink ] fix exception in precompactedrow
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes, and added a new InvalidRenderIntentTest class to improve rendering intent
add meterregistrylifecyclelistener to auto - configure metrics auto - config
change log level from warn to info in ConfigurationUtils. java to improve logging clarity for config center mismatches
added error handling for certificate generation in CertificateFactoryTest. java to ensure that CertificateException is thrown when invalid certificates are encountered
camel - 19836 : fixed issue with ambiguous binary operator in simple predicate
refactor onTabUnselected method and add onFocusChanged method in IDEEditor to improve focus handling and ensure windows are dismissed correctly
add ` ` user. name'' system property to access log
modified scaling and mesh name handling in SkeletonModelGpuSkinningTest and added null check for submesh names in OgreXmlLoader
removed the ` InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature and improve code clarity
added @ Deprecated annotations to UpgradeResponse. java to indicate that these classes are outdated and should not be used
added functionality to generate TypeScript files based on the " dtsout " option in multiple classes to enhance the transpilation process by allowing users to
[ flink - 21174 ] [ kinesis ] fix fetch timeout in streamconfig
added a new file extension ". html " to the timestamp in StreamingDataflowWorker. java to ensure that the timestamp accurately reflects
increased the maximum number of metastore server threads from 100, 000 to 1000 to improve performance and scalability of the metastore server
changed the return type of the ` onTaskSnapshotChanged ` method from ` void ` to ` boolean ` to allow the method to return a
updated shadow radius assignment from mMaxShadowRadius to shadowRadius to ensure correct shadow radius is used for animations
added unit test for chain nesting and aggregation.
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest. java ` to ensure that the loop
polyglotcontextimpl : use isinteractive ( ) instead of isinternal ( )
updated the condition to check for null or empty previousCachedFilePath to improve the logic to handle cases where previousCachedFilePath is null or empty
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance functionality by integrating DisplayController for better display management
updated toolTipText assignment in MetalFileChooserUI and SynthFileChooserUIImpl to ensure correct identification of the root directory in the file chooser
changed method call from ` getToolkit ( ). getScreenSize ( ) ` to ` Toolkit. getDefaultToolkit ( ). getScreenSize ( )
change return type of tensorflowrecogniser. recognise ( ) from list <? extends RecognisedObject > to list < CaptionObject
added tests for fetching results using a factory expression in JPASQLBase. java to improve test coverage and ensure correct data retrieval
removed debug print statement from FreeformFinSetConfig. java to streamline code by eliminating unnecessary debug output
updated moeVersion from " 1.3. 2 " to " 1.3. 0 " to reflect the latest version of the software
updated runtime error message and added spendAllGas call in Runtime. java to improve clarity of error messages and ensure all gas is utilized
updated error messages in ` ElementsShouldSatisfy ` and ` ZippedElementsShouldSatisfy ` to improve clarity and consistency in error
added a @ Deprecated annotation to the Weights class to indicate that the Weights class is outdated and should not be used
don't register platform - specific unsafe intrinsification
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancerArgs
changed the value of mCenterPagesVertically from true to false to ensure that the page is always visible in the user interface
[ hotfix ] fix race condition in migrationrequestoperation
[ konnected ] change variable name from ` host ` to ` baseUrl ` in konnected binding
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy
updated test table creation and query execution in TestJdbcWithMiniLlap. java and added database handling in LlapBaseInputFormat. java to
added a test case to validate SQL parsing for cases inside brackets to ensure correct parsing and deparsing of SQL queries containing brackets
added support for MotionEventCompat and refactored copy mode start logic to ensure compatibility with devices running Android versions that do not support copy functionality
refactor ` writeXmlOutput ` method to use ` Writer ` for XML output to improve flexibility and maintainability of XML output handling
camel - 16400 : fix npe when use empty split with custom list aggregation strategy
( chore ) camel - exchangexchangexxception : add stacktraces to exception message
move basicconfigurator to classic package
added a condition to check if targetVN does not contain the PHI _ NODE flag to ensure that the targetVN does not contain
removed unused import of SharedStringSource in TestXSSFRichTextString. java to streamline code by eliminating unnecessary dependencies
added a new method ` invokeMethod ` to ` ObjectInvokeHelper ` to facilitate method invocation within a specified environment and trace information
refactor various dataset classes in the project to improve code organization and maintainability
[ hotfix ] migrate ReadableWritableConfigurationTest to junit 5
updated equality checks and improved collection name handling in multiple classes to enhance code clarity and correctness in collection name checks
changed access modifier of the IndexFileNameFilter constructor from public to private to restrict access to IndexFileNameFilter for better encapsulation
refactor IfStatementTest to use plugin definitions and simplify vertex assertions to improve clarity and maintainability of the test code
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl. java ` to ensure consistency
refactor TypeAdapter methods for improved clarity and consistency to enhance code maintainability and readability by standardizing method names
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new file EXIFReader. java to process EXIF metadata to facilitate extraction and processing of EXIF metadata from external files
fix : cloudwatchmeterregistry. newbatch ( ). tostandardunit ( ) should return ` ` none''
[ jbpm ] applypmml ] fix classcastexception in pmml4datafactory. newinstance ( )
improve fluentprotocol info message when re - sends counter currency transfer start message
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary operations when the bubble bar is not visible
don't throw a branchtargetoutofboundexception when building aarch64 backend
added a try - finally block around the initialization of the JDKLogManager in XRLogger. java to ensure that the initialization of the
added a ` find ( Class < Ticket > ticketClass ) ` method to ` TicketCatalog ` and modified debug logging to include the ticket class
change to fix failure
[ hotfix ] [ table - planner - blink ] fix npe in sortresultpartition
updated constructors in JmsIO and Write classes to include null values to ensure proper handling of null values in read and write operations
added a new ` type ` parameter to the ` queryAllPluginHandlesByPluginId ` method and updated related methods to support sorting by type
updated method calls from ` start ( ) ` to ` start ( ) ` in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig
added support for customizable drawable formats in IOSApplicationConfiguration and IOSGraphics classes to enhance flexibility and maintainability of drawable configurations
added test to verify that user be locked after attempt.
[ pytorch ] throw unsupportedoperationexception when call pytorchviewasreal and pytorchviewascomplex
refactor thread lock name retrieval to use a do - while loop to improve performance by avoiding unnecessary thread interruption
refactor Implements and ShadowPicker classes to improve code organization and maintainability
refactor HttpClientOptions initialization to use a dedicated method to improve code readability and maintainability
added support for ` DynamicStruct ` and ` DynamicArray ` classes in ` SolidityFunctionWrapper ` to enhance type handling and improve error
updated the ` getStringProperty ` method to include a ` boolean ` parameter for font - size retrieval in ` FontUtil. java ` to enhance
added constructors to ` CopyStep ` that accept a ` boolean shouldRecurse ` parameter to enable recursive copying of the ` CopyStep ` class
fixed - rSemaphore. addpermits ( ) method throw concurrentmodificationexception
( chore ) camel - core : fix test failure
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` to use this new ` FlavorParser ` to improve code maintainability and
replaced List < String > with List < ByteString > in WitnessScheduleStore. java to improve data handling by using ByteString instead of String
added a check to ensure ` resultsMeta ` is not empty before printing its value to avoid potential ` NullPointerException ` during execution
refactor ConcurrentLinkedQueue to improve null - checking logic and add a new RemoveLeak class to enhance robustness and prevent potential NullPointerExceptions
added a ` addSpecialTokens ` parameter to multiple ` encode ` methods in ` HuggingFaceTokenizer. java ` to allow for additional
[ hotfix ] [ runtime ] use collections. nCopies in taskmanagerservices
fix npe in loadsingletsfilenode
added session storage context constants and action handling in the BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer classes to enhance session
added a test case for schema validation in TestJspDocumentParser. java to ensure proper parsing and error handling for XML schema validation
added a default constructor to TypeAdapter and updated annotations in Java17RecordTest and ReflectionAccessTest to improve code clarity and ensure compatibility with Java
don't swallow killexception in debugger.
refactor AntPathRequestMatcher class to improve code readability and maintainability
added a new ` @ Override ` method to ` createResourcePolicy ` in multiple classes to enhance functionality by allowing custom resource policies
added null check before releasing the deflaterEntry in GzipHttpOutputInterceptor to avoid potential NullPointerExceptions during deflater entry release
added JUnit's @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper execution of tests after each
updated checksum computation to normalize Unicode characters to ensure proper handling of Unicode characters in checksums
refactor command handling to use ` Parser. getCommand ` instead of ` Commands. tmux ` to improve clarity and consistency in command execution
changed the ` keyListener ` field to be ` final ` in ` BasicProfilerState ` and added multiple @ Override annotations in ` BaseApp
changed the type of ` objectToSave ` from ` T ` to ` DBObject ` and added a test for saving JSON strings to ensure
added a method to check if multiple remote addresses are present in the request to ensure that only valid remote addresses are processed
changed job argument types from String to ObjectBuilder in JsLibrary. java to improve data handling by using ObjectBuilder instead of String
updated CookieManagerTest. java to use a constant for host address and modified HTTP connection handling to improve code readability and maintainability by centralizing
modified GlyphLayout. java to include a check for wrapIndex before iterating through glyphs and free all runs to improve performance by avoiding unnecessary
added methods to pause or resume split readers in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to ensure pulsar components
added configuration for HIVESCRIPTIDENVVAR in HiveConf and ScriptOperator classes to ensure proper handling of operator IDs in the script execution
refactor ` getListedTermCounts ` method to include a ` sort ` parameter and streamline term counting to improve code readability and maintainability by
added a new action class ` UseSeparateStepSizeAction ` to manage the use of a separate step size in the user interface
refactor FileMenuFilter to use AccountManager and improve file unlocking logic to enhance code clarity and ensure proper handling of unlocked files
hbase - 25829 fix minor bug in roundrobintableinputformat ( chaoyu tang, review by gunther h
updated header values from " false " to " 0 " in ` HttpClientRequestAdapter ` and ` HttpClientRequestAdapterTest ` to ensure consistency in
pdfbox - 4071 : use ioutils. close ( ) instead of try / catch block
added fullscreen mode functionality to GwtGraphics to improve user experience by allowing fullscreen mode
updated WebfingerIssuerService to use URI for resource normalization to enhance URI handling and improve error handling for invalid URIs
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of the Apache Dubbo client
replaced ` Gdx. files. internal ( fileName ) ` with ` resolve ( fileName ). pathWithoutExtension ( ) ". png " in
updated logging levels from warn to info in OidcDefaultJsonWebKeystoreCacheLoader. java to provide more detailed logging information about the
fix stick lock with lockinterruptibly ( # 4010 )
changed package declaration from ` java. lang ` to ` java. lang ` to ensure consistency in package structure
don't report false positive in jsr subrouters
refactor DashRendererBuilder to use DefaultHttpDataSource for better handling of HTTP requests to improve code clarity and maintainability by using a unified HTTP
added a configuration property to control the maximum number of prepared statements per database connection to improve control over prepared statements per database connection
changed return type of configuration. set ( ConfigOption < T > value ) from WritableConfig to Configuration across multiple configuration classes
added error handling for command operations in AutoScalingHandler to improve robustness by throwing an appropriate exception when errors occur
refactor CombinedDataset class to improve code readability and maintainability
replaced the use of a byte array with a direct byte variable in the InflateIn _ DeflateOut class to simplify the code and improve
added methods to remove cryptography restrictions in the Utilities class to ensure that cryptography restrictions are properly removed from the codebase
added a teleportation task when the ev is cancelled to ensure proper handling of teleportation during chunk generation
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest. java ` to ensure that page margins
added null check for vContext before accessing its properties to avoid potential NullPointerExceptions when accessing vectorization contexts
fix wialon speed parsing ( fix # 2697 )
hbase - 19836 disable metricsuseraggregatefactory. getmetricsuseraggregate ( ) when hbase _ user _ enabled _ CONF be set to
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
updated mUserPresent, mVisible, and mAttached flags in Launcher. java to ensure proper unregistering of the receiver when the activity is
updated HTTP request and response classes for consistency to improve code maintainability and readability
added params parameter to the zadd function call to enhance functionality by allowing parameters to be passed during zadd operations
updated assertions and variable names for consistency across multiple Java files to improve code readability and maintainability
rename ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` to improve clarity and understanding of the test's purpose
added a method to retrieve an Optional < TargetNode <?,? > > in VersionedTargetGraphBuilder and updated VersionPropagatorBuilder to
updated time zone constants and conditions in TimeZoneProvider. java to improve accuracy and accuracy of time zone representation
updated the return statement in EscherBlipRecord. java and added a new test class TestOLE2Embeding. java to
updated row and column initialization in JSONParser. java to improve clarity and consistency in data handling
replaced ` JavaType. ShallowClass. build ( fullyQualifiedTypeName ) ` with ` Pattern. compile ( StringUtils. aspectjNameTo
updated DETAIL _ THUMB _ HEIGHT and added support for PLAY _ TRAILER action in BaseItemDetailsFragment to enhance user experience by
added a method to remove glyph information from the cache in CStrike. java to improve memory management by ensuring glyph information is properly managed
fix for terminateallbehaviour ( ) and terminateallbehaviour ( )
camel - 19836 : use @ xmlelementname on type name strategy.
updated the endpoint URL in SimpleHttpClientTests from " http : / / www. apereo. org / scottb. html "
fix : reset all default preference to default value
changed access modifiers of several methods from private to protected in ThriftMetrics and ThriftServer classes to allow subclassing and improve accessibility of these methods
[ danfossairunit ] remove deprecate channel ( # 2451 )
use hamcrest assertion instead of junit in integrations / cdi / common - tests
removed redundant code in TweetActivity. java to streamline the code by eliminating redundancy
added null and equality checks in PartitionFactory and implemented hashCode in PartitionPanel to ensure proper handling of values and prevent potential NullPointerExceptions
add root disk size to custom parameter in uservmmanagerimpl.
added preference management for showing suggested apps in the drawer to improve user experience by allowing dynamic visibility based on user preferences
geoclipertube parser don't throw illegalargumentexception for invalid cr
added validation for non - negative values in LibrustzcashParam and updated ivk values in LibrustzcashTest
deprecate ithrowableentity since it's no longer use
added random values for x and y in NodeDataImpl. java to enhance randomness of data generation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test case ` should _ fail _
refactor variable assignments in JavacStep. java to use try - with - resources to ensure proper resource management and avoid potential memory leaks
updated the VERSION constant from " 0.9. 1 " to " 0.9. 2 " to reflect the release of version 0.9. 2
added a condition to check if itemType is DEEP _ SHORTCUT to ensure proper handling of shortcuts in the database
added hashCode ( ) method to TimeGranularitySpec class to ensure proper hash code generation for different data types
changed access modifiers of ` BooleanWeight ` and ` DisjunctionMaxWeight ` classes from private to protected to allow subclasses to access these classes
added a boolean flag ` useProxyResponseCode ` to manage NTLM proxy behavior to ensure proper handling of NTLM proxy requests
aarch64 : aarch64 : use aarch64. sp instead of aarch64. zr
bug fix : don't return reserve and free memory when host be down
added a null check for maxScore in JSONResponseWriter. java and modified the query in TestDistributedSearch. java to ensure that the scoring
updated the audio codec from 22050 to 44100 in AudioRecorderTest. java to improve audio quality during testing
update calculation for newOriginX in RocketFigure. java to improve accuracy of origin positioning based on bounding box dimensions
added a check for empty Druid data source and set default intervals to ensure that the Druid data source cannot be null or empty to prevent
added ` ORIGINAL _ TYPE ( " Original Type " ) ` to the ` ORIGINAL _ ID ( ) ` and ` ORIGINAL _
added a static method create ( Table parent, Map < String, Object > data ) to the Index class to facilitate the creation of
simplified the return statement for checkBetweenGivenPeriod to improve code readability and maintainability
updated schema compatibility checks in SchemaCompatibility. java and TestSchemaCompatibility. java to ensure compatibility between different schema types
added persistent attribute type handling in QueryUtils. java to improve handling of entity paths during query execution
added synchronization to spans methods in TestSpanHandler to ensure thread safety when accessing shared spans
jsweet 2 catch - up http : / / code. google. com / p / mybatis / issues / detail? id
changed exception handling from ` InvocationTargetException ` to ` InvocationTargetException ` and updated log messages to improve clarity of error messages and provide more informative
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
updated error messages in SCBEngine, TestInvocationFactory, TestInvokerUtils, and HighwayServerInvoke to clarify that the service cannot process
added new project files for iOS data and moe resources in GdxSetup. java to facilitate the inclusion and management of iOS - specific
updated TestSearcherManager to use ConcurrentMergeScheduler to improve performance by utilizing a concurrent merge mechanism
added null and empty list checks in QTestUtil and GenericUDTFInline classes to improve robustness and prevent potential NullPointerExceptions
refactor MapIterable, FJIterate, and ParallelIterate classes to improve code organization and maintainability
simonstewart : make sure preventDefault ( ) be call in the spreadsheet key listener.
added service registration and unregister logic in HibernateBundleActivator. java and updated OsgiTestCase. java to improve service management and ensure proper cleanup of
replace elapsedTimeMs ( start ) with connectionTimeout in HikariPool and HikariPool to ensure accurate timeout calculations
remove the createcomponentfile ( ) method and replace it with a non - packaged resource directory.
updated file name handling in Compat and FileOpener classes to improve compatibility with different operating systems and ensure proper file operations
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
add port clash check for graphql and graphql http port
added null mask handling in WebSocketClient and updated connection creation to use FixedMaskGen to improve robustness and prevent potential NullPointerExceptions during WebSocket
refactor genUDTFPlan to return a Pair < RelNode, RowResolver > instead of a single RelNode to improve code clarity and
added functionality to track the number of bucketed and non - preferred nodes in NodeSelectionStats and related components
add a test case to make sure we don't break the build.
added a boolean flag ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow. java ` to ensure proper handling of the
added functionality to display a clock in the PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback
remove unnecessary call to world. updatecomparatoroutputlevel ( ) in some place
changed the access modifier of IMPL from static final to static and added a SecurityException for loading SegmentReader to enhance encapsulation and improve error handling
replace direct casting of cell to Cell with SwingUtilities. invokeLater to ensure thread safety when firing the cell update event
replaced instances of ` DefaultInetAddressAdapter ` with ` CollectionTypeAdapter ` and removed the ` JsonDeserializer < InetAddress > ` to simplify the
added methods to retrieve double, long, boolean, and string from a series in ` DataFrameTest. java ` to ensure proper handling of null
changed the audio - time - stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch "
updated GeoRelationUtils and GeoUtils to improve boundary calculations to enhance accuracy in geometric calculations
cloudstack - 7143 : fix npe in vmmanagerimpl # getdiskofferingid
ensure hazelcast instance be clean up before each test.
added tests for the " AES / NoPadding " and " AES / NoProvider " algorithm in BlockCipherTest. java to ensure that the
added filter for printing operations logs in QFileClient to improve user experience by providing clearer insights into operations logs
add introduction to the introduction of the introduction of aop proxy
added a null check for currentConnectionAddress and assigned it to proxySocketAddress if it is null to ensure proper handling of the current connection address without
replaced manual addition of demand using Math. addExact with MathUtils. cappedAdd in WebSocketConnection. java to simplify code and improve performance by
refactor image output stream creation to use try - with - resources to ensure proper resource management and avoid potential NullPointerExceptions
replaced direct calls to ` TvApp. showSearch ( ) ` with ` Intent ( ) ` in multiple classes to streamline search functionality
removed redundant ` this ` keyword from ` SchemaCrawlerOptions ` and refactored ` GrepOptions ` class to improve code clarity and
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 61616
added dependency injection for the PersonRepository in RepositoryIndexCreationIntegrationTests to facilitate testing by ensuring the PersonRepository is properly initialized
updated method signature from Exception to InterruptedException in UIServer. java and modified log message formatting in TestVertxUIManual. java to improve
reorganized case statements in BlockCactus. java to improve readability and maintainability of the code
refactor mouse event handling in ThemeSelector to use a MouseMotionListener to improve code readability and maintainability by encapsulating mouse event logic
[ java ] introduce abstractminmulticastflowcontrolrhspadding so that it can be extend abstractminmulticastflowcontrol
added alignment and verticalAlignment parameters to the editStringAt method in IOSNative. java to enhance user experience by allowing block - copy - paste
don't throw exception if tokenization model be not specify
added a check for distinct queries in ClusterIntegrationTestUtils and refactored group column addition logic in QueryGenerator to ensure proper handling of distinct queries
jni : add stringsimilarity option to nativelinkage
jmeter - 2852 : fix typo in property name
added null check for children before iterating through children to avoid potential NullPointerExceptions during execution
added token and current position tracking in MessagePackParser and updated test cases accordingly to improve accuracy and correctness of token and current position handling
added locale management after tests in AbstractSolrMorphlineTestBase to ensure consistent locale across tests
removed conditional checks for ` isLauncher ( ) ` in ` LauncherFragment. java ` to simplify size calculation by directly using the status bar height
[ shenyu ] add unit test for metricsreporter
( chore ) camel - mock - bundle : remove unused import
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for rectangle instances
fix flakiness in streamkafkaptest
refactor DSAParameterGenerator to use BigInteger. ONE and improve error messages to enhance code readability and maintainability by standardizing constant names
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated related classes to utilize the canonical host name from the
fix clientoutofmemoryhandlertest failure
added a method ` getCmoObjectId ` to ` AbstractShape `, ` various shape classes to ensure consistent object identification across different shape types
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest. java ` to ensure that distinct queries return the expected result
refactor SearchTravRet - related classes to improve code organization to enhance maintainability and readability of the codebase
added binding and unbinding methods for ExtensionAdapter in ManagedKubernetesClient to enable dynamic binding and unbinding of ExtensionAdapters in the Kubernetes
replaced direct calls to ` getBaseItem ( ) ` with a utility method ` getInfoRow ( BaseItemDtoDto ) ` to improve code readability
updated JUnit imports and annotations from Before to AfterEach in TestAuthHandlerBoot and TestRSAProviderTokenManager to align with JUnit 5 conventions
don't throw exception if we fail to generate summary
removed unnecessary parameters from intPool and bytePool reset methods to simplify method calls and improve code readability
added multiple @ Override annotations in FilterInputStream. java to ensure proper overriding methods
added a new class ` WindowSessionDelegateU ` and modified conditional checks in ` ShadowWindowManagerGlobal ` to enhance compatibility with TIRAMIS
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi
added support for MSSQLDatabase in foreign key constraint generation to enhance compatibility with MSSQL databases
hbase master don't throw exception ( addendum )
fix the emzuli pipe not be able to connect to any side.
danielwagnerhall : make debug mode more configurable
updated field data types and names from'c'to'b'in HiveLookupTableSource and HiveLookupJoinITCase to ensure consistency
add thread check to exoplayer. listenerset. release ( ).
replaced string concatenation for schema name with CatalogAndSchema customization to improve schema handling to ensure compatibility with different database configurations
added color scaling in SpriteBatch and SpriteCache classes and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugStarter to improve
fixed - redissonconnection. join ( ) method throw concurrentmodificationexception
added base core URL replacement logic in SolrLoggerServiceImpl to ensure that only valid Solr cores are included
updated launchTask method to accept a non - null TaskHolder and modified task launching logic to enhance robustness by ensuring non - null Task
updated import statements and modified constructor parameters in MorfologikFilter to improve code clarity and ensure proper resource loading
removed " lbl _ stars " and " lbl _ critic _ rating " from sort options in GridFragment. java to streamline sorting options
added imports and modified visibility logic for ListRow in CustomListRowPresenter to ensure proper handling of ListRow instances in the UI
refactor switch - case structure in StressAction. java to include try - finally block to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability and maintainability
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof ( ) ` in ` CatalogAndSchema ` and ` CatalogComparator ` to
added jackson module support for java. time module
changed the import statement from org. apache. log4j. MDC to org. slf4j. MDC to align logging framework
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver. java ` to improve type safety by explicitly casting the merged
reformatted code in CoinbaseTransaction. java for consistency to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and updated ` ProjectCommand ` to use this method to improve build target
removed redundant initialization of IdleStrategy in Ping. java to streamline code by eliminating unnecessary variable declaration
updated OCFile and related classes to use ContentResolver instead of ContentProvider to improve accuracy and consistency in managing OCFile instances
removed redundant state changes in ReportPanel. java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot
add a new recipe to remove calls to ` System. gc ( ) ` and ` Runtime. gc ( ) ` to streamline garbage collection
removed super ( ) calls from multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added a setUIID method to the ScaleImageLabel class to ensure proper UIID handling for image labels
refactor FeedUpdateService to use a single variable for updating foundEntry and update to improve code readability and maintainability
updated argument checks to include " - cp " alongside " - classpath " to enhance flexibility in classpath handling
[ gr - 205362 ] [ gr - 20536 ] compiler should not use -- enable - nodeprecated option
fix typo in storageservice. initialize ( )
updated Test7196045. java file to improve test coverage and maintainability
updated the density and decay values in ShaderParametersLightShaft. java to improve the visual quality of the shader parameters
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and updated ` OidcRedirectActionBuilder `
fix for unique constraint with non - null column
added support for federated sharing in the UsersAndGroupsSearchProvider and EditShareFragment to enhance user experience by allowing users to manage federated
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to ensure that the ` needsDocValues ( ) `
updated BufferAlignmentAgent and BufferAlignmentInterceptor to improve error messages and introduced new package - info. java to enhance clarity of error messages and ensure
added ` intForEach ` method to ` Int2ObjectHashMap ` and updated imports in ` Int2ObjectHashMapTest ` to enhance functionality
fix worldscoreboard save data in worldserver. save ( ).
changed return type of count methods from Long to long in QueryDslMongoRepository, QueryDslPredicateExecutor, and SimpleMongoRepository to
don't log mtree snapshot creation time difference
refactor dot product calculations in VectorUtil and TestVectorUtil to improve accuracy in dot product calculations
added functionality to set and retrieve the latestConfirmedBlockNum in the DynamicPropertiesStore and Manager classes to enable dynamic updates of the lastConfirm
refactor locale handling in GpsMainActivity and MainPreferenceActivity to use Systems for improved locale management to enhance code clarity and maintainability by central
added a check for new database creation status in LauncherClings and LauncherProvider to ensure that the launcher correctly tracks and maintains the state of
refactor collection iterator usage in BasicAclEntryAfterInvocationCollectionFilteringProvider. java to improve code readability and maintainability
refactor is64Bit assignment logic for clarity to improve readability and maintainability of the code
added thread check in TestIndexWriterDelete. java to ensure thread safety before proceeding
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports and modified method calls in FullDetailsActivity and BaseRowAdapter to use ModelCompat. asSdk to ensure compatibility with the latest SDK
added attribute handling for SVG elements in BatikSVGDrawer to ensure proper handling of imported attributes in the SVG document
reformatted error handling for IllegalArgumentException in ConsoleKeys. java to improve code readability and maintainability
added a check for the " WaitForResult " bundle in CodenameOneActivity to ensure proper handling of cases where the " WaitForResult "
refactor ` HitQueue `, ` SpanPositionQueue `, and ` PriorityQueue ` to use a ` Supplier < T > ` for sentinel objects
refactor WidgetCell to store widget description in a variable and conditionally display the widget description to improve code clarity and ensure proper display of widget information
added a maximum attribute count check in Attribute. java to ensure that an alias registration does not exceed the maximum allowed attribute count
move predicatestest to correct package
camel - 16400 : camel - core - optimize header filter strategy to handle case insensitively
refactor InlineLayout and Breaker classes to improve boundary checks to enhance code clarity and ensure proper handling of unbreakable strings
added nullability annotations and improved null handling in getView method to enhance code robustness and prevent potential NullPointerExceptions
refactored the ` shouldInstrument ` method in ` Setup. java ` to include parentIsInstrumented method and updated related logic to improve
added a check for association before returning the size of the last inserted column to ensure proper handling of cases where both source and destination associations are present
added a method to retrieve the memory limit file path in ` CmdModifierTest. java ` to enhance functionality by allowing access to the memory limit
replaced ` CxxDeps. of ( ) ` with ` CxxDeps. EMPTY _ INSTANCE ` in ` AbstractCxxDeps. java ` to
added a null check for the rule in JavaTestRule. java to improve error handling by throwing a HumanReadableException when the specified source is
use mc _ version instead of mc _ version to enable proxy
removed conditional check for atIndex to ensure atIndex is non - negative to prevent potential errors
increased timeout duration in BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds to improve test reliability by allowing more time for tests
updated TaskOverlayFactoryGo to include an AssistContentRequester to enhance content request handling in the application
replaced ` getVoteAddress ( ) ` with ` encode58Check ( witnessAddress ) ` in ` VoteWitnessProcessor. java
rename DefaultMethodRegressionTests to improve clarity and consistency in naming conventions
updated imports in WorkloadManagerMxBean. java to improve code clarity and maintainability
replaced KafkaProducerException with KafkaException in KafkaOutboundAdapterParserTests to improve clarity and consistency in exception handling
added a call to closeLoader ( ) in DesktopGeneratorController. java to ensure proper resource management and prevent potential memory leaks
added clear ( ) method to ExceptionThrowingTaskStub and implemented unit tests for exception handling in FaultTolerantExceptionClassesTests to ensure
updated error message to include detail about the absence of a configuration to improve debugging by providing more context on the configuration
added an ` Map < String, String > ` parameter to multiple methods in ` TableConfigTunerUtils ` to support extra properties for
added checks for inProgressInstances in PinotRealtimeSegmentsManager to ensure only non - in - progress segments are added to the list of
added a condition to return null if touchable is disabled to prevent potential null pointer exceptions when touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` in ` PrecompiledHeaderIntegrationTest. java ` to ensure
throw a retryable hzexception if cache config have not be create yet
refactor JSweetTranspiler to use ProcessUtil for checking node package installation status to improve code readability and maintainability by encapsulating package installation
added ManagedObject annotations to MBeanContainer and Destroyable classes to enhance monitoring and management of component lifecycle
changed the condition from ` settings. inAppBrowser ` to ` false ` in ` LongClickableSpan. java ` to ensure proper handling of
updated string comparisons in EspMilightHubDiscoveryService and EspMilightHubHandler to ensure consistency in string comparisons across the
modified the warning condition in ` Types. java ` and added new classes ` T6558559a ` and ` T6558559b
updated player position and block position logging in WorldEditListener. java to improve clarity and accuracy of position and block information
( chore ) camel - kafka : shutdown executor when consumer be shut down
added a default implementation of the ` examples ( ) ` method in the ` Schema ` class to provide a default implementation for the ` examples `
modified thread interruption logic and modified condition checks in AgentRunner. java to improve thread handling and ensure proper execution flow
removed the time column from the result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to streamline data handling by eliminating unnecessary time columns
updated condition to check for shards length of 1 to ensure proper handling of shards
replaced references to ` linker ` with ` CxxPlatforms ` in ` RustBinaryDescription ` and ` RustLibraryDescription ` to stream
added a name property with getter and setter methods in JdbcAuthenticationProperties, AbstractLdapProperties, NtlmProperties, and JaasAuthentication
don't throw runtimeexception in IdealGraphPrinterDumpHandler. java
updated scan threshold logic in BaseQueryPlan and added a new small scan threshold in QueryServices to improve accuracy of scan operations based on configuration
added " routeId " and " TraceId " to the list of retry configurations in RetryGatewayFilterFactory to provide more detailed information about the retry process
replaced redisplay ( ) with callWidget ( REDISPLAY ) and updated buffer writing to callWidget ( name ) instead of redisplay ( )
replaced direct calls to ` showForHomeIfNeeded ` with ` showForOverviewIfNeeded ` in multiple classes to streamline the overview display process and
modified null checks for min and max pack values in CheckIndex. java and added a test for deleting all point documents in TestPointValues.
updated the publish method call to use ` updateLastState ` instead of ` true ` to ensure that the last state reflects the updated last
updated SQL statement format in MetastoreDirectSqlUtils. java to ensure proper handling of string list IDs in queries
added a null element to the exp list in SpliteratorCollisions. java to ensure proper handling of null values in the collection
add ` ` textcaseensitive'' and ` ` exacttextcaseensitive'' condition to the selenium - backed selenium test
replaced do - while loops with while loops in ManyToManyConcurrentArrayQueue. java to improve code readability and maintainability
# 1306 - enh : add ` ` forward _ fetch _ size ( )'' to ormqueryengine
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to improve error handling by ignoring closed channel exceptions
pdfbox - 4071 : use the size of the list instead of the initial arraylist size
updated window radius initialization in QuickstepAppTransitionManagerImpl. java to improve accuracy in determining window radius
refactor DesktopTaskView to use View instead of ShapeDrawable to improve code clarity and maintainability
added a new instance of ` UpstreamCheckService ` in ` UpstreamCheckServiceTest. java ` to ensure proper initialization of ` Up
be a a a a a a a a a a a a a a a a a a a a a a a a a a a
updated ZooKeeperHiveLockManager to return locks instead of throwing a LockException to improve error handling by returning the locks object directly
[ hotfix ] fix checkstyle violation in statebackendtestbase
added a check for ` containsCustomData ` before generating the mipmap to ensure that mipmaps are only generated when they do not
camel - 16400 : fix checkstyle violation in camel - core
added selectable property and related getter / setter methods to the List class to improve touch event handling for non - selectable items
removed a check for empty field vector values in LlapArrowBatchRecordReader. java to streamline the code by eliminating unnecessary checks
added file separator handling in PolicyContext to ensure consistent file path formatting across different operating systems
replaced HashSet with ArrayList in FieldQuery. java to improve performance and maintainability of the code
refactor TLSRestrictions class to improve code readability to enhance maintainability and ease of understanding
fix potential npe in kafkamanager # close ( )
updated assertNodeStateProvider to include an additional parameter for ignorableNodeValues to enhance the accuracy of node state assertions by distinguishing ignorable
added a lock file deletion mechanism in RocksdbMavenPomCache. java to ensure that temporary files are removed when the workspace changes
updated MiniZooKeeperCluster and TestHQuorumPeer to use InetSocketAddress for client port assignment to ensure correct client port retrieval from the configuration
added a new method ` getResponse ( RestCallSpec < R > callSpec, RestRequest < R > request, Gson gson, HttpURLConnection
updated the method call from ` segmentUploadSpec. getPushJobSpec ( ) ` to ` segmentTarURIStrs. toArray (
updated test cases to use the correct password for student accounts to ensure the test uses the correct password for testing purposes
added a null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to avoid potential NullPointerExceptions during execution
increased the expected number of strings from 500ms to 100ms to accommodate larger datasets
[ wkb ] use byte [ ] instead of byte [ ] in wkb attribute io
corrected the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to ensure consistency and accuracy in naming conventions
added a method to check if a transition is directed substates in AbstractStateMachine to ensure proper handling of direct substates in the state machine
added type checks for ListMultimap and SetMultimap in MultimapSubject. java and corresponding test cases in MultimapTest. java to ensure proper ordering and
added JoinOperation interface to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest. java ` to verify that the PostgreSQL test behaves as expected
fix intermittently fail test
refactor AvaticaDatabaseMetaData to improve code readability to enhance maintainability and facilitate future updates
changed data types of ` lifeTime ` and ` idleTime ` and ` maxWaitTime ` from int to String in ` MongoDbConnectionPoolProperties
fix : siputils. createaudiecontainfo ( ) throw nullpointerexception
facet filter should not be filter by block join
added timeout handling functionality to the ShuffleHandler to enable or disable timeout based on the timeout state
updated the initialization of mQuickStepStartingRotation to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code
( chore ) camel - saxon - jaxp and camel - saxon - jaxp and camel - saxon - jaxp and
use dataresource. class. getresourceasstream ( ) instead of class. getresourceasstream ( )
added test case to reproduce bug # 1751
updated error handling for missing the'atlas'property in AtlasTmxMapLoader. java to improve robustness by throwing an exception when
camel - 15836 : remove property placeholder from camel - core
added database closure in BlockchainTest and simplified Kafka message broadcasting in KafkaTest to ensure proper resource management and improve code clarity
refactor CoreMarkdownNodeRenderer to use a dedicated method to retrieve lines from a string to improve code readability and maintainability by centralizing line
int - 1373 - remove dependency on spring - ws
refactor SQLBindings constructor to accept a list of objects instead of an immutable list to improve flexibility in handling null - friendly bindings
added a check for the Java VM name in the VirtualMachine class to ensure compatibility with OpenJDK environments
added a keepAlive configuration to the ReactorClient class to ensure proper connection management during HTTP requests
replaced string literals " a _ normal " with constants " a _ texcoord " in MD5Renderer and ObjLoader classes to improve code
camel - 7999 : allow to configure a property component in camel - core
updated null check for accountCapsule in UnfreezeBalanceActuator. java to improve robustness by avoiding potential NullPointerExceptions
updated the version number from 3.8. 0 to 3.8. 1 in the XMPPServer. java file to reflect the release status of the
replace ` t ` with ` t. unannotatedType ( ) ` in multiple return statements to ensure proper handling of unannotated types
updated assertions and variable assignments in StorageGroupProcessorTest. java to improve code clarity and ensure consistency in test cases
updated ` dumpObjects ` method to include a ` Environment ` parameter and modified class references accordingly to enhance debugging capabilities and ensure proper access to the
added a call to ` params. waitbeforestart ` with a value of 2500 in ` FFMpegVideo. java ` to ensure
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor to simplify the constructor parameters and eliminate unnecessary complexity
add unit test for accessors. listindex ( )
add a method to compile a method with a framemap, and make a method in the lirgenerator interface
replaced ` @ Ignore ` with ` @ ConditionalIgnore ` in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestRiskCalculator
modified the way block Y - coordinate is added in ItemBoat. java to ensure proper placement of blocks based on their type
modified the ` toString ( ) ` method in ` Directory ` and added ` getLockID ( ) ` method in ` RAMDirectory ` to improve
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the conditional check for experimental options
added methods for asserting Path and AssertDelegateTarget in BDDAssertions. java to enhance testing capabilities for path assertions
refactor HostPort initialization to use hostField for improved clarity to enhance code readability and maintainability by using a more descriptive variable name
update log level from debug to warn for multiple Kubernetes config files to provide clearer guidance on how to export KUBECONFIG on Unix or Env
added file upload handling and retry logic in FileUploadService and UploadListActivity to improve user experience by managing file uploads effectively
added a new ` ProviderLoader ` class and updated ` TerminalManager ` to implement the ` ProviderLoaderListener ` interface to improve modularity and
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to align with updated tracing framework
updated SelectFromDatabaseChangeLogStatement to set the name of the database column as a computed column to improve the accuracy of the change log retrieval
hhh - 117792 - remove @ generatedvalue from test class
ignore partition per member when data member size be non - positive
modified execution scheduler start logic to check if the scheduler is already started to improve error handling and ensure proper scheduler state management
modified InlineBox instantiation and added a null check for blockParent in BoxBuilder. java to enhance code clarity and prevent potential NullPointerExceptions
refactor argument validation in StatisticMap. java to improve code readability and maintainability
increase the staged rectangle slide end from 383 to 500 to improve the responsiveness of the application
updated button labels and command modes in WaveInfoDialog and PlacementFragment to improve clarity and maintainability of the user interface
updated condition to check for plot area in KILL _ ROAD _ ITEMS to ensure ROAD items are only killed when the plot area
added a test for setting touch exclusion state change listeners in ShadowAccessibilityManagerTest to ensure that touch exclusion state changes do not interfere with the
pdfbox - 5328 : fix indexoutofboundsexception in cmapsubtable
use testelement. getname ( ) instead of testelement. getpropertyas ( )
pdfbox - 4071 : use poifs. create ( ) instead of new nPOifsfilesystem ( )
added imports and modified return logic in Move. java to retrieve the plot area to improve robustness by ensuring the method handles null plot cases
updated regex pattern in TestWebHCatE2e. java to improve accuracy in version matching
updated the range check for ` count ` from ` count ` to ` count < 1 ` to ensure that the count does not exceed the expected
fix npe in kafka consumer processor when no clientid or threadid be define in application.
added a check for the ` ok ` status in ` JavacCompiler. java ` to improve error handling by throwing an exception when the compilation fails
don't repaint the view when select an item in a list
camel - spring : fix checkstyle issue in camel - spring - batch
added a method ` isAnimationFinished ` to check if the animation has finished to ensure proper handling of animation states based on their duration
updated import statements in LoginInfoEndpoint. java and added a test for custom favicon with line breaks in LoginMockMvcTests.
added null check for ` otherUrl ` in ` TimeLineCursorAdapter. java ` and modified the refreshing text in ` HomeFragment. java
ggb - 2118 fix for ggb - 195 ( space should be space )
refactor ObjectHashSet class to improve code readability and maintainability
refactor null checks in DataUtilities. java for improved clarity and efficiency to enhance code readability and maintainability by standardizing null checks
fix mc - 12770 : don't allow for deletion of enchanted books
test : add test case for async resource
rename ` flat _ header _ map _ suffix ` to ` user _ header _ map _ suffix ` in ` ProjectGenerator. java ` to
added debug logging for exception handling in MailService to improve error handling and provide clearer insights into sent addresses
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskItemView. java ` to improve
added unit tests for partition retrieval with multiple size batches in HiveMetaStoreClientApiArgumentsChecker. java to ensure proper handling of batch size in the
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed the data type of ` @ Getter ` and ` @ Setter ` from ` ArrayList ` to ` List ` in ` OCFile
adjusted the index used in the removeViewInLayout method from getChildCount ( ) to getChildCount ( ) - 2 to correct the layout removal logic for
removed " org. eclipse. jetty. websocket. util. server. internal. " from several JavaxWebSocketConfiguration and JettyWebSocketConfiguration files
removed the ` true ` parameter from the ` S3Request ` constructor in ` S3Request. java ` to simplify the constructor signature and
jfxradiobuttonskin : fix npe when timeline be null
updated validation logic in DeweyNumber to handle zero splits to ensure proper error handling for invalid Dewey numbers
added a protected static variable ` categorySetString ` and modified the return statement to replace " Category : " with " categorySetString " to
removed the status code " 1111 " from the assertion message in WebSocketClientTest to ensure consistency in test cases by removing unnecessary status codes
added a null check for classLoader and updated assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure proper handling of null
removed duplicate code in PersistentAttributeTransformer. java to streamline code for better readability and maintainability
pdfbox - 2576 : don't throw an exception if a page label ben't a number
added a new test class TestPorterStemFilter to validate the functionality of the PorterStemFilter class
renamed the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a ` success ` parameter to
updated package names from ` org. springframework. batch. core. exlore. support ` to ` org. springframework. batch.
fix concurrentmodificationexception in chatwindowmanager. close ( )
removed redundant calls to Sys. touch ( ) across multiple Java files to streamline code by eliminating redundant calls
updated HgCmdLineInterface to use " - mardu " instead of " -- unknown " and modified untrackedFiles methods to improve command
camel - netty4 : use netty timer in camel - netty4
added ` final ` keyword to several fields in ` DirectionalLight `, ` PointLight `, and ` SpotLight ` classes to
added width and height calculations using Math. max in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions are respected for rendering
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable `, ` DelegatingSecurityContextRunnable `, and corresponding test cases
added annotation filtering functionality to the ClassFinder class to improve accuracy in identifying inner classes
hive - 26400 : bytescolumnvector : maximize the size of next small buffer to prevent integer overflow ( jesus camach
fix flaky testwritebehindmapstorewithevictionstest
changed the parameter type of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI ` and `
add equality check for polynomial function ( relate to geofunction )
added null check for table before calling configureValue to avoid potential NullPointerExceptions when table is not initialized
added a try - catch block to handle ClassCastException during customChange instantiation to improve robustness by preventing potential ClassCastException during class loading
added methods to retrieve BuckConfig and updated related classes to replace ConfigPathGetter with DistBuildConfig to improve configurability and maintainability
updated the ` isDoubleEntryEnabled ` method to return a default value and added checks for double entry settings in ` ExportDialogFragment ` to
added JUnit @ Ignore annotation to BasicDistributedZkTest. java to mark the test as ignored due to issue stability
modified ` doJoin ` and ` doCopyLeft ` methods to return a boolean indicating success to improve performance by reducing unnecessary method calls
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription. java ` to streamline the code by eliminating unused
modified intent flags in LauncherTimelineCursorAdapter. java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure that the activity does not retain
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance functionality by allowing paging by order by
updated the expected URL from " https : / / repo. apache. org / maven2 / " to " https : / repo.
add affiliate task to the openfire cluster.
use uri. normalize ( ) instead of requestutil. normalize ( )
changed access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from outside the
added array handling and improved equality checks in CacheKey. java and CacheKeyTest. java to enhance performance and correctness of cache key updates
updated GnomeFileTypeDetector implementation across multiple files to improve file type detection consistency across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
refactor ` getParams ` and ` getVirtualSensorCallback ` methods in ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to improve
added a condition to check if the context object does not equal to before execution to ensure that the security context is not removed from the session after
renamed variable ` lch ` to ` loopback ` and modified the condition for determining if the address is a loopback address to improve clarity in distinguish

added support for secure validation in KeyInfoReferenceResolver and improved error handling in XMLSignatureInput and TransformXPath to enhance security by ensuring proper
added functionality to conditionally add or remove the icon action listener based on the initialization state to ensure that the icon action listener is only added when the
added support for the Russian language in the application
hhh - 147486 - fix sqm to sql ast conversion
disable frame state verification in substratraphkit.
added system property resets and teardown methods in RobolectricTestRunnerTest and TestUtil to ensure proper cleanup of system properties during test execution
added a system class " org. slf4j. " to the web application context to support logging functionality for SLF4J in the
added a check for " jar " in the ` ChangePackaging ` class and created a test for it to ensure that the changePackaging
fix flaky test : filedownloadviahttpgettest and filedownloadviaproxytest
added a call to nk _ buffer _ clear in GLFWDemo. java to ensure the buffer is cleared before further operations
rename methods and variables related to units in JogService and Settings classes to improve clarity and consistency in unit handling
updated the expected date format in DatePatternConverterTest to use UTC timezone to ensure accurate date formatting based on the current time zone
removed redundant return statement in Terminator. java to improve code clarity and maintainability
improve error message when uri can't be find
fix : show notification in one minute
( chore ) camel - ftp : use awaitility in ftp test
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve thread safety by using a more
added an ` ignore ` method to various log classes and implemented it in ` JavaUtilLog `, ` LoggerLog `, and ` Std
added a null check for runningTaskView in LauncherActivityControllerHelper to avoid potential NullPointerExceptions during task processing
removed unnecessary casting of ` byte ` to ` byte ` in ` getBukkitWorld ( ) ` method calls
removed a call to GraphicsUtil. cleanImage to streamline image processing and improve performance
added new classes MMapDirectoryFactory and SimpleFSDirectoryFactory for managing unmapable data in Solr
added null check before creating a new BaseColor instance to avoid potential NullPointerExceptions during color processing
updated the field name from " field1 " to " field1 _ s " in QueryEqualityTest. java to ensure consistency in field naming
refactor ExtendedOperatingSystemMXBeanImpl class to improve code readability and maintainability
added functionality to install leftCommands in SideMenuBar to enhance the user interface by providing easy access to leftCommands
added a new boolean flag ` advanceWindowed ` in ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to
added support for SybaseDatabase in the DropPrimaryKeyGenerator to enhance compatibility with additional database types
refactor Client class to improve code readability to enhance maintainability and ease of understanding
[ java ] notify leader readiness when prepare for election.
replaced invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) and added shouldDelayChildPressedState ( ) method in CellLayout and Cell
added a return statement in the NearCachedClientMapProxy class to prevent further processing during cache operations
updated package - info. java files for mmm and ppp packages to improve clarity and maintainability of package documentation
added shutdownHttpServer method to handle potential exceptions during server startup to improve robustness by gracefully handling exceptions during server startup
camel - aws2s3 : fix checkstyle issue in camel - aws2s3
[ hotfix ] [ runtime ] remove parameter _ tm _ id in webmonitor
added a method to drop keys if they do not exist in the 2. 7 version of the database to ensure that the database does not crash
added a new test class TestThriftCLIServiceSecurity to verify that the password is not present in logs
added a maxEnergyLimit variable and updated energy limit assignment logic in VMActuator. java to ensure energy limits are correctly set for constant calls
added a maxInMemorySize property to HttpClientProperties and updated webClientPlugin method to accept HttpClientProperties as a parameter to allow configuration of the maximum
refactor Cache class to improve code readability and maintainability
added multiple Cucumber test classes including RunCucumberTest and StepDefinitions to facilitate testing of Cucumber features in the application
fix array. sqrt ( - 1 ) and array. pow ( - infinity ( ), 2 )
removed duplicate byte array append operations in Utf8StringBuilderTest. java to streamline code by eliminating redundancy
added checks for parameter sets in Params. java and updated related test cases in RestInvocationHandlerTest. java to ensure proper handling of parameters and
camel - 16400 : added option to not configure output on circuit breaker
updated doc frequency assertion in TestIndexWriterExceptions. java to ensure consistency in document frequency tests
replaced ` putUnencodedChars ` method with ` update ` method in multiple classes to improve consistency in hash calculations
removed unused methods from AsmRuntime. java to streamline code and improve maintainability
added tag for mANGROVE _ SWAMP, IS _ WET _ OVERWORLD, IS _ UNDERGROUND, and IS
refactor asyncimageloader to use thread pool instead of separate thread
changed access modifiers of ` _ tableConfig ` and ` _ tableDataManager ` from private to protected and refactored preloadSegments method to
replace occurrences of " \ u0631 " with " \ u0623 " in multiple language files to improve clarity and accuracy of locale data
replaced ` getImage ( ). equals ( varName ) ` with ` hasImageEqualTo ( vid ) ` in ` AbstractSunSecureRule. java
camel - jbang - add -- repos option to camel - run command
added handling for NaN scores in CrawlDbReader to improve robustness by preventing NullPointerExceptions
added a cleanup method to delete temporary files in OnStartupTriggeringPolicyTest to ensure proper cleanup of temporary files after tests
updated focus handling in FilterConditionEditor and FindAction to improve focus responsiveness and responsiveness of the editor
[ hotfix ] [ checkpoint ] make checkpointcleaner thread safe
added a new file ` XPathWhiteSpaceTest. java ` containing XML schema validation to facilitate testing of XML schema validation in the application
don't override the trie log layer if the block header don't exist
refactor FilledNewArrayInstruction class to improve code readability and maintainability
added timeout to the @ Test annotations in SimpleNetworkTest. java to improve test stability by allowing more time for tests to complete
modify the return statement to check if the parentPath ends with " / " to ensure correct handling of parent paths in OCFile
added a print statement to indicate loading failure in the skin file to improve debugging by providing feedback on failure to skin file loading
added dirty flag and validation logic in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to improve performance by avoiding unnecessary
replaced the new Result constructor with a static final constant UNDEFINED in mmm Result. java and mmm TestStep. java to improve code clarity
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of NullPointerExceptions during callback registration
refactor uploadjobmultipartoperation to implement identifieddataSerializable
don't recover journal location if it's miss
don't show view level for node that don't exist
changed the visibility of the ` pos ` variable and modified the ` ensureAvail ` method to accommodate a new ` sizeMask `
added @ Ignore annotations to ChaosMonkeySafeLeaderTest and RecoveryZkTest to mark tests as ignored due to cruelty
refactor target assignment and message initialization in StorageProxy. java to improve clarity and maintainability of the code
changed the order of parameters in the FileManager class to improve clarity and consistency in variable naming
added support for various transform function types in TransformFunctionType. java to enhance functionality by supporting additional mathematical operations
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement and package - info. java to enhance code clarity and maintainability by
updated rfc header in several Java files to ensure consistency and clarity in the codebase
updated version number from 2.17. 3 to 2.17. 4 in Recaf. java and SearchAnnotationVisitor. java to reflect the latest
removed unused imports and refactored item selection logic in ListActivity and NoteAdapter to improve code clarity and reduce redundancy in accessing selected items
refactor conditional statements in DirectUpdateHandler2. java to improve code readability and maintainability
updated path handling in ` ConfigFileApplicationListener ` to use ` ResourceUtils ` for URL validation to improve accuracy in determining the absence of
updated ` PreviewPositionHelper ` to accept a ` Context ` and modified insets calculations based on split - screen dimensions to improve flexibility in managing split
[ java ] don't publish newleadershipterm in election.
update unit test to use standarderrorstreamlog instead of assertion
refactor ByteArrayInputStream to improve byte skipping logic and add a new Skip class to enhance code readability and facilitate testing of skipped bytes
refactor conditional logic for promptUpdate and showChangelog in UpdaterTask. java to improve code readability and maintainability
changed the access modifier of MAX _ HEADERS from private to public and added a conditional check for block headers in Peer. java to allow external
added rt. jar to the STANDARD _ LIBRARIES list to ensure proper loading of libraries from the rt. jar file
don't send hello message if local node be not ready
updated methods to throw IOException and modified heterogeneousGranules retrieval to improve error handling and ensure proper configuration retrieval
added a check for committed responses before setting error exceptions to ensure that errors are only sent when the response is already committed
modified conditional checks in HttpSession. java for clarity to enhance readability and maintainability of the code
updated fadeOutFakeTaskView parameters and added gesture navigation task background animation to enhance user experience by allowing customizable background colors based on feature flags
change log level from error to warn for unknown prefab
refactor ScimGroupExternalMembershipManager initialization and update external group properties in LdapMockMvcTests. java to improve code clarity and ensure proper handling
updated thirtyDays initialization in FreezeBalanceActuator and added a validation check in TransferActuator to ensure thirtyDays reflect
updated path separator check from'/'to File. separator in FileResolverTestBase. java to ensure compatibility with different operating systems
ggb - 2118 fix : input help panel don't focus on enter
updated GpsMainActivity to use session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command events to enhance user experience
don't fail test if the number of page be too small
migrate androidbufferallocator to use the native buffer allocator
added checks for flag names starting with "! " and modified flag validation logic in PrimaryItem and Util classes to ensure proper handling of boolean flags
added NOPMD comment to clarify the purpose of the executeQuery ( ) method in JDBCHistoryCache. java to improve code readability and
updated comparison in BattlePassManager to use equality for itemUseOp to ensure accurate comparison of itemUseOp against ITEM _ USE _ GRA
add a tostring ( ) method to the priorityelement to make sure that the tostring ( ) method don't return null
chore ( release ) : remove obsolete unit test
added null check for main command and updated command help printing logic to improve robustness by handling cases where no command arguments are provided
reduced the number of LightOutputStream instances from 7 to 5 in PropertyTypes, ByteIterableBase, and LongBinding classes to optimize memory usage and
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
modified the conditional check in ClassWriter and added a new test class T8032819 to enhance functionality by allowing blank lines in class names
removed assertion for length checks in Person class to streamline code by eliminating unnecessary assertions
refactor extension validation in VirtualFile. java to handle null values to improve robustness by preventing potential NullPointerExceptions
change return statement from return to continue in ContactRightButtonMenu. java to improve flow control and prevent infinite loop
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment
simplified the calculation of the screen index in InstallShortcutReceiver. java to improve code readability and maintainability
refactor binding and closing logic in PlainSocketImpl. java to improve code clarity and ensure proper resource management
added functionality to manage and clear removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring removed items are
updated log message to include " in - view center point " to clarify the context of the action's in - view center point
added a new file ` bug4865918. java ` to test the scrollbar block increment incorect mode to ensure that the scrollbar
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler. java ` to simplify the initialization process and improve code
replaced specific command imports with a wildcard import and added a new case for " grouptriggers " in QuestCommand. java to streamline
add a file chooser for the GnuCash account in the AccountsActivity to improve user experience by providing easy access to GnuCash account files
added ` @ ToString ( callSuper = true ) ` annotation to ` PartitionChangeEvent ` and ` TbApplicationEvent ` classes to facil
updated the service configuration URI to use a constant instead of a hardcoded value to improve maintainability and reduce hardcoding of the configuration URI
remove setViewportComponent and setJScrollPane methods from BrowserPanel. java to simplify viewport handling and improve code readability
updated key handling in LwjglInput, ParticleEditor, Layout, and TWL classes to improve user experience by allowing back and back
added a configuration check for indexMimeTypeParts in MoreIndexingFilter. java to conditionally retrieve parts based on content type settings
added author pattern matching in JSDoc. java to improve readability and maintainability of the code
updated metric names in MetricsConstant. java and TestMetaStoreMetrics. java to improve clarity and consistency in metrics
( )
updated ` oauth2LoginLinks ` to accept ` MultiValueMap < String, String > ` as a parameter and added error creation logic to enhance
updated Hijrah calendar name to " Islamic Umm al - Qura Calendar " and modified locale settings in DateTimeFormatter
added a condition to check if the browser is a Firefox browser to ensure compatibility with non - Firefox environments
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and modified the constructor in ` InterceptorConstants ` to enhance the functionality of
updated table creation statements in TestCompatibility. java to include " default " and " default charset " to ensure compatibility with the InnoDB database
mondrian : fix a bug in the streamingaggtemplate that cause it to crash.
[ hotfix ] fix checkstyle violation in executiongraph
added a boolean field ` hasFrom ` and associated getter and setter methods in ` Delete ` and ` DeleteDeParser ` to track whether the
refactor SynchronizeFolderOperation to use isMultiStatus and improve exception handling to enhance code clarity and maintainability by using more descriptive method names
refactor RecipeScheduler to extract applicable tests into a separate method to improve code readability and maintainability
updated regex pattern in LogAnalyser. java for better matching to improve accuracy in identifying log line patterns
( chore ) camel - google - cloud : add environment variable to integrationtest
fixed - rsearch. value ( ) and rsearch. value ( ) method don't take in exclusive mode
updated license selection logic and improved error handling in CCLicenseStep. java to enhance clarity and maintainability of the code
added null check for globalId before accessing its value to avoid potential NullPointerExceptions when globalId is null
updated equality check in OptionalAssert to use comparison strategy to improve accuracy in determining equality between values
don't set last _ margin _ bottom for lmb font size
added a new file TestArrayCopyToFromObject. java with a test method for copying an object array to ensure that ArrayStoreException is thrown
refactor sys. path. insert ( 0, " " ) to escapeAsPythonString ( MorePaths. pathWithUnixSeparators ( path
don't try to close ajp connection if it's already close
updated method signatures and added a new method to find files in the CraftingHelper class to improve code clarity and ensure proper handling of un
added JUnit @ Ignore annotation to TestLlapSignerImpl. java to mark the test case as unstable to indicate that the test case is
added null check for client. doRequest ( ) in TestInternalInputBuffer. java to avoid potential NullPointerException when client. isResponse400
modified the autoloadCall method to accept a lowerName parameter and adjusted lock handling in SplClassLoader to enhance flexibility in class loading by allowing multiple locks
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and ` PlaybackController ` to compare server versions to
updated KDC and OneKDC to use canonical host names to ensure localhost is still " localhost " across multiple instances
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of multiple roles to
updated import statements in MP4Parser. java to include specific Box classes to enhance functionality by supporting multiple Box types
added a new constant for HS2 _ PROXY _ USER and modified session parameter handling to improve session parameter management and ensure correct user context is
( chore ) camel - hdfs : add snappy compression support
added a sleep delay in HttpClientTest. java to ensure proper synchronization during test execution
fix for bug # 5684 - don't remove cell ( s ) from array formula
updated glyph positioning and text formatting in GlyphLayout. java and modified the test text in BitmapFontTest. java to ensure proper rendering of
updated ISTIO version handling in Fabric8IstioIT. java to ensure compatibility with the latest ISTIO version and improve image
replaced calls to ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with calls to ` TvApp. getApplication ( ).
don't hit disk on every invocation of simpleauthority
putfromloadalloperation : check if existinmemory ( ) before perform initial load
updated LENGTH _ BIT to include ERROR _ BIT in addition to ERROR _ BIT to improve accuracy in handling error cases
fix default policy for community with no read policy
refactor FontUtilities to use a SoftReference for concurrent access to CompositeFont instances to improve thread safety and prevent potential NullPointerExceptions
update prefHeight calculations to ensure proper height adjustment to avoid potential issues with dynamic height adjustment
drools - 2576 dmn validator : improve error message for unknown variable error
removed unused import statements from multiple Java files to streamline code and improve readability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and modified its invocation in ` NavHandleLongPressInputConsumer
added null checks for node IDs and edge types in ImportContainerImpl. java to ensure robust error handling and prevent unsupported edge types
don't return future if error be not present
nifi - 10231 : fix npe when bin size be small than bin size
modified the scoring logic in Teams. java to return the closest core instead of null to improve accuracy in determining the closest core from the enemy
added a check to skip copying content - length in the RestTemplateCopyHeaderFilter to optimize request processing by avoiding unnecessary content length requests
updated handling of string literals in Java2TypeScriptTranslator and modified assertions in SyntaxTests to improve test coverage and ensure correctness of string operations
updated sample size in ChannelizerViewer and modified sample size in PolyphaseChannelManager to improve the responsiveness and performance of the channel processing
hbase canary command - allregions to allow any region to be run in regionserver mode
remove dependency on node. environment from cassandrasconnector
added resetCursorPosition ( ) method call in KahaDBStore. java to ensure proper cursor position reset during data processing
added minimum size adjustments in CallDialog and OneToOneCallPanel to ensure frames do not exceed minimum dimensions
fix loss of state information during world gen
refactor test setup and teardown methods in TestHTTPSamplersAgainstHttpMirrorServer. java to improve code readability and maintainability
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic to improve entity management and ensure proper cleanup of entities
modified the third parameter of getTableSnapshot method from'true'to'false'to ensure that the method correctly handles cases where the table is
use exceptionutils. handlethrowable in aprendpoint. poll ( )
updated the error message to include the Base64 - encoded RSA public key to provide clearer guidance on how to paste the Base64 - encoded RSA
updated the method name from ` isInsideTranscodeFolder ` to ` getDisplayName ( ) ` in ` FileTranscodeVirtualFolder ` to ensure
[ drools - 5752 ] support spring boot's root package name in kiebuilder
added an assumption for version 19 in CheckIndexTest. java to ensure tests are only executed when the specified feature is not present
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method in ` RemoteTargetGluer ` to simplify the method
refactor LeaderLatch class to improve code readability to enhance maintainability and facilitate future updates
added functionality to initialize zk parameters in SolidityNodeHttpApiService to ensure proper initialization of zk parameters for the Solidity node
resolve intermittent failure in some test
added a new method ` createMediaRecorder ` in ` CodenameOneImplementation ` and updated ` Location ` class to improve media recording functionality
added a default value of " ios " to the platformName variable to ensure proper identification of the iOS platform
refactor PageEditClient to improve code readability and maintainability
modified conditional checks for ` mozDash ` and ` webkitLineDash ` in ` Graphics2D. java ` to ensure proper evaluation of the
refactor CreateVisibleSignature class to improve code readability and maintainability
added error handling for outgoing frame processing in AbstractExtension. java to improve robustness by ensuring exceptions are handled gracefully during frame processing
replaced try - catch block with AccessController. doPrivileged ( ( PrivilegedAction < Caller > ) getCallerClass ( ) ) to enhance security
added functionality to update the parent of a feed category in CategoryREST. java to ensure that only child categories are updated to maintain the integrity of
added support for setting the title based on the contribution type in the ContributionManagerDialog to enhance user experience by allowing users to specify their
added a new BigDecimal field ` vwap ` and updated the ` Ticker ` constructor to include this new field to track the average volume
added functionality to display a " no widgets " view in the SearchAndRecommendationsScrollController and WidgetsFullSheet to improve user experience
add rendergraph api to worldrendererimpl
added a color setting in NCFirebaseMessagingService to enhance the visual appearance of the app
updated ShadowUsbManagerTest. java file to improve test coverage for shadow functionality
add log to track number of user preference evaluation
added a call to update the selectedConfiguration in Rocket. java to ensure the selected configuration reflects the updated state
added a Math. max ( 1, ( int ) ( bounds2. width ( ) + 2 * strokeWidthUpperBound ) ) to the
use linkedhashmap instead of hashmap in symbolizer
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory ` to utilize the ClosurePool for closure management
( chore ) camel - main : migrate routertest to junit5
shenyu - integrated test : add websocket ingress
[ ds - 3852 ] remove unused test case
refactor authentication equality check in AbstractCasWebflowEventResolver to improve clarity and maintainability of authentication checks
added a condition to check if the " jnr. ffi. compile. x86asm " system property is set to " true " to
replaced calls to ` callNode. getType ( ) ` with ` callNodeType ` in ` CodeGenerator. java ` to improve clarity and consistency
added a new Insecure interface and modified MessageBuffer to use it to enhance security and encapsulation of the MessageBuffer class
added new Hive configuration variables to HiveConf. java to enhance configuration options for Hive settings
initialized ` scopes ` and ` policies ` with ` new HashSet < > ( ) ` in ` ResourceSet ` and added a null check in
modified the ` MultiReader ` constructor to include a ` readerFinishedListeners ` parameter to enhance flexibility in managing reader finished listeners
refactor multiple classes to improve code organization to enhance maintainability and readability of the codebase
test update & set ignore due to new fact
updated ` getFirstTypeArgument ` method to use ` final ` for class members to improve code clarity and enforce immutability of class members
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values in Int2IntHashMap to
added duration parameter to FlipTransition and updated related methods to allow dynamic adjustment of the background color and duration during transitions
removed logging statement for setting subsAreValidForStreaming to streamline the code by eliminating unnecessary logging
updated major and minor version numbers in ForgeVersion. java to reflect the latest version of the software
refactor warning messages to use LowLevelLogUtil for different Java versions to improve clarity and maintainability of warnings related to runtime environment limitations
add support for java 16 processor
modified padding logic for background views based on replies size to ensure proper spacing between replies and the status view
[ iotdb - 4501 ] fix partition - backup - replica - should - invoke on cluster version less than v3. 9 (
added metadata handling in SeedUrl and SeedResource classes to support storing and retrieving metadata from the seed URL
added null check for declaration before creating a Pattern instance to avoid potential NullPointerExceptions when declaration is not initialized
hbase - 2697 addendum : fix typo in testcoprocessorwhitelistmasterobserver javadoc
ww - 3682 - fix annotationactionvalidatormanager to include package name
updated ` IterableTest ` to accept ` ( Object ) null ` as a parameter and modified test assertions accordingly to enhance flexibility in handling null values
added stream and parallel stream methods to MapIterable and PrimitiveObjectMap classes to enhance stream processing capabilities for concurrent map operations
modified the return statement to return a clone of the notifInfo object to ensure that the original notifInfo object is not modified
ggb - 2118 fix for key ='' null'' in command key
refactor AEADBlockCipher class to improve code readability and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap `, ` VariablesMap `, and ` WebVariablesMap `
added a check for null or empty resource names in PackageResourceTable and changed the default resource mode from best to legacy in RobolectricTestRunner
added a check for ` ulSize ` and ` ulPos ` before retrieving tables in TrueTypeFont. java to ensure proper handling of font
updated the constructor of SignPlugin to accept a list of HttpMessageReader parameters to enhance flexibility by allowing multiple message readers
refactor Int2ObjectCache class to improve code readability and maintainability
removed validation for MavenDeployer in StandardMavenAuthenticationProvider. java to streamline the code by eliminating unnecessary checks
refactor AudioNode class to improve code readability and maintainability
added SSL context initialization and improved error handling in LinkyHandlerFactory and EnedisHttpApi to enhance security by ensuring proper SSL configuration and
table
resolve intermittent failure in jmx
updated the ` getBuildTargetForAlias ` method to accept a possibly - flavored alias and modified the return logic accordingly to improve alias handling
added a check for empty ODataFeed instances before returning the processed result to ensure that only valid ODataFeed instances are processed
added support for EQUIVALENT _ VERSIONS in MetaStoreSchemaInfo. java to ensure compatibility with the latest Hive version
server : don't retry expunge when the vm be expunge
i've deprecate the dateassert class.
replaced calls to ` TextHelper. parseTitleAndContent ( ) ` with ` TextHelper. getNoteTitle ( context, note ) `
updated GoogleAuthUserConfigTable class to use nvarchar / varchar and modified assertions in TotpEndpointIntegrationTests to enhance compatibility with nv
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes to ensure changes are persisted in the database
replaced ` TestController ` with ` TestIdleListener ` in ` AsyncTimeoutTest. java ` to implement the ` IdleListener ` interface
use string. format in bigqueryioit. testbigquerytable ( )
added background resource and reset functionality to HotseatPredictionController and BubbleTextView to improve user experience by ensuring the icon displays the
mondrian : fix typo in property name
add native system. runtime. system. runtime. tasks and system. runtime. queries
[ hotfix ] fix npe in lme columnar explanation
added a new argument ` runArgs ` to ` AppleSimulatorController ` and modified ` InstallCommand ` to include this new argument to enhance
replaced direct calls to getArea ( ). getCurrentParagraph ( ) with a genericStyledArea to improve code clarity and maintainability by using a
ensure lifecyclemanager. getstate ( ). isAvailable ( ) always return true
added clipping to outline in QsbWidgetHostView to improve the visual appearance of the widget's background
added progress tracking for flag conversion in SQLManager and modified string processing in BlockTypeListFlag and PlotArea to improve performance and accuracy of flag conversion
modified FloatingTextRenderer to conditionally enable or disable depth functions based on whether floating text is excluded to improve rendering behavior based on whether floating text is
truffle : fix typo in nfi _ backend _ libffi
http : / / code. google. com / p / mybatis / issues / detail? id = 46
fix for dropout with l1 and l2 regularization
added exception handling for read / write operations in AbstractChecker. java to improve robustness by ensuring exceptions are handled gracefully
changed the access modifier of the colorStack variable from static to instance to allow access to the colorStack from outside the GlyphLayout class
changed the second parameter of ` getMappedStatement ` and ` hasStatement ` from ` false ` to ` true ` in multiple method calls to
convert tradableIdentifier to lowercase in BTCEPollingMarketDataService. java to ensure case - insensitive comparison for currency identifiers
updated the expected values in the ` getMQTTpublishValue ` method from ` 0.3000 ` to ` 0.3000 ` to ensure that the
remove deprecate versionedhash from engine / v2 test
reset the trigger price model to an empty string to ensure the user interface reflects the new state of the trigger price
modify studentfeedbacksubmissioneditsaveaction to return a student edit page if it's not an error
removed debug print statements from I18NPageController. java to clean up the code and improve readability
hbase - 2693 addendum fix checkstyle issue in hbase - server
hhh - 142782 - fix : when setmanybeans, don't get dirty property
added a new boolean field ` _ alwaysSaveUri ` and corresponding getter and setter methods in ` FormAuthenticator. java ` to enable control over
added methods to set layer types and paint in ShadowRenderNode to enhance functionality for managing rendering layers
updated import statements and implemented popup menu display logic in LWChoicePeer. java to improve code clarity and ensure proper visibility of the popup menu
removed duplicate initialization of the insert map in StressProfile. java to streamline code by eliminating redundancy
replace scala. collection. javaconversions. asscalaiterable with scala. collection. javaconversions. collectionasscalaiterable in
added null check for requests in MockServerEventLog. java and enhanced logging in HttpForwardObjectCallbackActionHandler. java to improve robustness
log warn if property file can't be find
modified session iteration logic to use try - with - resources to ensure proper resource management and prevent potential memory leaks
added a condition to check if the network interface supports multicast and the NIC is up to ensure that only valid network interfaces are processed
updated String constructor to include an additional parameter for len to improve string handling by allowing for additional input parameters
updated methods to set latest consume times for energy and asset operation time mapping to improve accuracy and accuracy in managing asset operations
added a new method ` invalidSessionStrategy ` to ` SessionManagementConfigurer ` to improve session management by allowing customizable invalid session strategies
improve error message when can not find the token for an index
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in the Map API
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and modified existing methods in ` JdbcProxyGenerator ` to enhance functionality by allowing temporary
added a ensure method to the ServerWebSocketContainer class and modified the start method in DirectUpgradeTest to improve WebSocket management and ensure proper context handling
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags. java ` to optimize memory usage
pdfbox - 4892 : don't use point3. x, point3. y, a suggest by valerybok
replaced direct instantiation of MethodHook with a static constant EMPTY in MethodHook. java to improve code clarity and maintainability by using a defined constant
added a ` grantAccess ` parameter to ` MockAuthenticationManager ` and modified the return logic accordingly to ensure that the ` MockAuthenticationManager `
updated ` afterJob ` method signatures to accept ` JobExecution ` across multiple classes to enhance functionality by allowing job execution
added a condition to check if the file can execute before returning true to ensure that only writable files are processed
fix : [ multistage ] [ multistage ] update time series query api v2 to v3.15. 3 ( # 5
bug fix : save sample event instead of result
added constants for " BATTERY _ LEVEL ", " ANNOTATION ", " TIME _ WITH _ OFFSET ", " DISTANCE "
change searchexpression # applyrule to use map instead of hashtable
apps - 1909 change object type to absolutescreenlocatable , to enable dropdown move
updated texture creation and texture filtering in ProjectiveTextureTest. java to improve texture quality and compatibility with different image formats
modified the ` setResourceToDelegate ` method to return a ` File ` instance instead of void to ensure that the output resource is writable before proceed
( chore ) camel - http : / / issues. apache. org / activemq / browse / camel - 2131 - intercept from
updated comparison from " > " to " > = " in ActionScheduler. java and adjusted expected value in TestActionScheduler. java to ensure
updated debug zip path from " / tmp / ums _ dbg. zip " to " / tmp / ums _ dbg. zip "
fix : notification overlay don't respect hud _ hidden property
reset the gate after pipe have be create. close # 3973
refactor TestSupplementary to ensure locale is restored after execution to improve resource management and prevent potential null pointer exceptions
updated the alpha value in the Team constructor from 0.8 f to 0.4 f to improve the randomness of the team generation
changed the type of ` activeMatchedStates ` from ` Set ` to ` Collection ` and added a check for ` logger. isLoggable ( Level
updated the condition in SoftAsserts. java to check for both null and empty list of expectedExceptions to improve the logic to handle cases where
improve error reporting and exception handling in StorageResources and StoragePluginRegistryImpl to enhance clarity of error messages and provide better error context during plugin saving
add call tree csv file to csv file
added null checks and refactored note handling in DetailFragment. java to improve robustness and prevent potential NullPointerExceptions
added peakTasks tracking and modified task loading logic in AssetManager. java to improve performance by accurately tracking the number of tasks processed
simonstewart : make native event work on window
added support for custom scoring and fetch interval in the Injector class to enhance functionality by allowing custom scoring and fetching intervals
updated import statements from org. apache. commons. collections to org. apache. commons. collections4 in ScimExternalGroupsTypeResolving
added a method to check if the zkController is null and implemented shareSchema functionality in TestCoreContainer to ensure proper handling of zkController and
updated size calculations to include " true " in various classes to ensure accurate representation of segment size across the application
replaced assertEquals with assertNull in VersioningTest. java to improve test clarity by explicitly checking for null values
modified SQL queries in Field. java and AbstractJdbc2DatabaseMetaData. java to include additional conditions for domain columns to ensure correct handling of null
[ java ] appendleadershiptermevent should return false instead of throw an exception.
removed the method ` buildMediaType ` from ` WebClientPlugin ` to streamline media type handling for improved code clarity
updated method names from ` fillUsingLengthPrefix ` to ` fillSlice ` across multiple classes to improve clarity and consistency in method naming
added a check for ` isCompactedBase ` and updated conditional logic in ` AcidUtils. java `, along with a new test
fix npe in ptableimpl when immutable storage scheme be null
[ scb - demo - springmvc ] add support for custom and rest producer
replace " cache " with CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig. java to improve clarity and consistency in cache configuration handling
remove duplicate registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager. java to streamline code by
add support for wooden slab in the oredictionary. close # 588
remove ` ` @ version'' from javadocs
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` UndefinedSymbolsLinkerScript ` to simplify class hierarchy and improve consistency
prepare next release 2.1. 0 : update doc tree and overview ( rc1 )
hhh - 146131 - remove @ skipfordialects from denormalizedtablephysicalincludeancetest
updated the calculation for texture positioning in HelloWorld. java to ensure correct positioning of texture elements in the sprite batch
modified plot coordinate handling in PlayerFunctions and updated string concatenation in WorldGuardListener to improve accuracy of plot identification and ensure correct string representation
added a deprecated static final version constant for Lucene 8.5. 0 to mark the version as outdated and indicate that this version should no longer be
updated print statement formatting in SSLSocketImpl. java to improve code readability and maintain consistency
added a new test method ` testCastToSignedInteger ` to ` SelectTest. java ` to ensure that the SQL parser correctly handles signed
refactor dependency type to use SemanticGraphCoreAnnotations enum to improve code readability and maintainability
replaced usage of ` ParseContext ` with ` ParseContext ` in ` NoSuchBuildTargetException ` and ` ParseContext ` to streamline error handling
replaced the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory. java ` to stream
change block array size from Block. blocksList. length to 256 - 1 to optimize memory usage by using a smaller number of blocks
updated PlotSquared log messages and modified version checks in BukkitMain. java to improve clarity of error messages and ensure compatibility with the latest
updated regex pattern for PostgreSQL questionmark operators in AbstractSQLChange. java and added a corresponding test in AbstractSQLChangeTest. java to ensure
add mutablebag. ofall ( iterable <? extends t > ) method to mutablebagfactory
added HTML escape codes and improved file name validation in BuildNavAndPDFBody. java to ensure compliance with HTML standards and prevent runtime exceptions
changed MqttBrokerConnection instantiation from true to false in NhcMqttConnection2. java to allow mqttBrokerConnection to be set to false
replaced direct call to getChangeLog ( ) with a null check for changeLog to improve robustness by ensuring the change log is initialized before
removed the ` new MethodResult ( ) ` constructor from ` StaticMethodInterceptor ` and updated the ` RocketMQGlobalPluginHandler ` to
added database drop functionality in TestHiveMetaStorePartitionSpecs and enhanced logging in TestObjectStore to improve database management and enhance debugging capabilities
added a currency parameter to the Bithumb API request in the BithumbAuthenticated and BithumbAccountServiceRaw classes to support currency
deleted the SSEFluxWebConfig. java file to remove unused configuration from the project
updated method return type checks to use ` isVoid ( ) ` instead of ` getFullyQualifiedName ( ) ` and modified JSON formatting in `
updated YamlResource. java to use a new method for loading YAML data and added a new endpoint to list detection configurations by ID to enhance functionality
changed access modifier of equals and hashCode methods from public to package - private to allow access to these methods from outside the class
[ java ] use awaittermination ( ) method for asyncchannelgroup to reduce code duplication.
added unit tests for adding lists and created a new class ` PersonWithAList ` to validate WishList functionality in MongoDB queries
g2p : use correct coordinate space width and height for applet view
replaced toolbar visibility setting with a delayed execution using a Handler to improve UI responsiveness by delaying visibility changes
fix intermittent failure cause by overlap check
bugfix : don't save vm password when vr be start
added multiple instances of ` usingOutputStream ` and ` isCharacterEncodingSet ` in ` Response. java ` to ensure proper handling of character encoding
added warning for assignment side effects in GroupDialog to improve user experience by preventing unnecessary assignments
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the icon width and height check in FileUploadApiController. java to ensure the icon does not exceed the defined maximum dimensions
refactor ` fetchPublicKey ` method to return a string representation using ` JcaPEMWriter ` and ` JwtTokenCipherSigningPublicKeyEndpoint
added mime type checking for Unix - specific file types in Basic. java to ensure proper handling of file types across different operating systems
updated NettyConnection to implement JZlibDecoder and JZlibEncoder using JZlib compression to enhance compression functionality for improved performance
added a method ` doesClassLoaderDescendFrom ` to ` Util ` and refactored existing code in ` MethodHandles ` to improve code
removed dependency check for netty handler / proxy in ChannelProvider. java to simplify the connect method and improve error handling
added a new test case for handling an empty final column in CSV output to ensure proper handling of empty final columns in CSV queries
added compassGravity and compassMargins in NearbyMapFragment. java to enhance the user interface by improving layout alignment
added a new test method ` testInterpolation ` in ` GeoPathTest. java ` to ensure that the ` computeNearestDistance `
added HiveException handling in getLeafFilterBuilderByType method and improved error logging in ParquetFilterPredicateConverter to enhance error handling and provide clearer
added logic to set the language based on the current audio track's language to ensure proper handling of audio tracks based on their language settings
added a warning log for schema compatibility issues in MicroserviceRegisterTask. java to inform users that schemas in newer versions may cause compatibility issues
replaced System. arraycopy calls with addAll method across multiple array classes to improve code readability and maintainability
don't close the datasource if it's already close
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to use a map for client registrations to improve code clarity and maintainability by
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state reflects changes in the database
added a failedStep flag and modified conditions in JUnitReporter to handle pending and non - pending exceptions to improve error handling by distinguishing between pending
add a hook to allow playerselectors to be override by entityselectors.
added the Closeable interface to the Selector class to ensure proper resource management and prevent potential memory leaks
updated MaxConcurrentStreamsTest to use MultiplexConnectionPool for connection pooling to improve connection management and performance during testing
added multiple calls to stringType ( ) in CoreOptions. java to ensure consistent string type usage across the application
added null checks for character and parameter in HqlQueryRenderer and updated test configurations to ensure proper handling of null characters and parameters in the query
updated HTTP status constants and methods across multiple classes to improve clarity and maintainability of HTTP status handling
pdfbox - 3017 : simplify code, a suggest by valerybokov
fix unit test which fail on slow machine
refactor ParquetFormatPlugin and ParquetGroupScan to improve file selection handling to enhance code readability and maintainability by consolidating file selection logic
updated success variable initialization and added error handling for compilation errors to improve error reporting and ensure proper error reporting during compilation
added a listener to listen for table change events in DefaultSortedTableModel to ensure that the model updates correctly when the table changes
updated the range check for the number in ServerConfig from 49152 to 65535 to ensure that the number does not exceed the maximum allowed values
added version checks for document provider authority in AuthenticatorActivity and AccountRemovalJob to ensure proper handling of document provider changes across different Android versions
removed a call to Log _ OC. startLogging in MainApp. java to streamline logging process by eliminating unnecessary method calls
added error handling for RequestRejectedException in FilterChainProxy to improve robustness against wrapped request rejections
updated references from ` length ` to ` this. length ` in ` StringBuilder. java ` to ensure correct array manipulation by using the current instance
added a check for empty filterList in Filter. java and updated test cases in TestFilters. java to ensure that an empty filterList is
added a new file TbStopWatch. java with methods to retrieve stop and last task times to facilitate monitoring and analysis of task
set ` initialized ` to true ` in ` PListStore. java ` to ensure proper initialization of the ` PListStore `
added @ Deprecated annotation to multiple classes to indicate that these classes are deprecated and should not be used in future development
[ hotfix ] fix classnotfoundexception in remoteinterpreterserver
replaced the use of ` source. getEntity ( ) ` with ` source. source ` in ` ForgeHooks. java ` to improve
updated minSdk from VERSION _ CODES. P to VERSION _ CODES. O _ MR1 in ShadowRttCallTest and Shadow
corrected the variable name from ` tickOnWheel ` to ` tickArrayIndex ` in ` DeadlineTimerWheel. java ` to ensure consistency
# 1385 - add tostring ( ) method to beandescriptorelement, beanpropertyassocmany, and cqueryplan
changed response URL from " wro / all. js " and " wro / all. css " to " static / all. js
added a new test method ` showLatestTimeseriesTest ` in ` IoTDBMetadataFetchIT. java ` to ensure that the latest
corrected the constant name from " appContextLocation " to " contextConfigLocation " in multiple files to ensure consistency and accuracy in naming conventions
modified exception handling in OCSPChecker to differentiate between CertPathValidatorException and its subclasses to improve error handling by distinguishing between specific exception types
benchmark : add option to disable the write solution
bulk client regen : set default maxinboundmessagesize to max int
added a new file ` Issue _ 815. java ` to implement a test case for reopening slice sizes to ensure proper handling of slice
added a shapeless recipe for waterproof and slime ball in the BuildCraftTransport class to enhance the game's capability for
mahout - 468 : fix concurrent access sparse vector to avoid indexoutofboundsexception
added handling for Shulker and Shulker entities in BukkitMain and EntitySpawnListener to improve entity management and ensure proper cleanup of
added getDebugLogger method to DIHWriter and SolrWriter classes to provide access to the debug logger for external use
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 550
updated UpToTagChangeSetFilter initialization and added isSeenTag method in UpToTagChangeSetFilter to improve tag handling and provide feedback
[ beam - 8470 ] fix checkstyle issue in beam - core
refactor BrokerRoutingManager to improve code readability to enhance maintainability and facilitate easier updates
changed volumePaint and upPaint colors from gray and green to GRAY and GREEN in CandlestickRenderer. java to improve visual quality
modified margin calculations in InsettableFrameLayout to account for insets to improve layout handling and ensure proper inset behavior
added ` duration ` parameter to ` BuildTargetDurationListener ` and updated corresponding test cases to enhance the functionality of ` duration ` in rule information retrieval
updated imports and annotations to use ` @ Profile ` with ` @ Assume. assumeTrue ` for database profile assertions to improve clarity and consistency in
added null check for the user object before processing claims to avoid potential NullPointerExceptions during authentication
added unit test base on user forum issue
use nonblockinghashset instead of concurrentskiplistset in cassandraconnection
api : add source network id to listpublicipaddresses command
added functionality to manage battery optimization settings in ShadowPowerManager to enable and disable battery optimization checks in the power manager
updated the version retrieval method to use ` __ buildProperties ` to improve consistency and maintainability of the code
added unit tests for verification of multiple invocations in ` NumberOfInvocationsInOrderVerifierTest ` to ensure correct verification behavior when multiple invocations occur
refactor conditional logic in TRegexExecNode. java to improve readability and maintainability of the code
updated startProfile method to include " - foreground " parameter to specify that the process is in a foreground mode
replaced ` TimeUnit ` with ` IOUtils ` for executor methods to improve resource management and ensure proper termination of executor services
changed the type of ` parseFieldnames ` from ` Map ` to ` String [ ] ` in ` MetadataIndexer. java ` to improve
updated logging method to use file name and added view removal logic in EditorTextActionWindow to improve logging accuracy and ensure proper cleanup of actions list
enhanced error messages in ClassFileReader and JdepsTask to improve clarity and debugging of skipped entries
added LinkStorage and updated Fetcher and FetcherTask classes to improve handling of URLs and content in the indexing process
updated populateBubble method to include an existingBubble parameter to enhance functionality by allowing existing bubble instances
( chore ) camel - schedulescheduledroutepolicy : improve error message
removed array conversion for methods in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to simplify method signatures and improve code readability
[ java ] : use a non - multicast source for loss handler to avoid loss handler for non - multicast source.
updated Gson initialization in ClientInformationResponseView. java to include client ID, client secret, issued at, and client URI to enhance the response
added a check to ensure the order's average price is non - negative before setting the average price to avoid potential errors when the average price
refactor rawExecutionReports method to streamline execution report subscription to improve code readability and maintainability
added a fail method to handle exceptions and modified timeout checks in the ReadServerTimeoutTest to improve error handling and ensure accurate timeout calculations
don't crash the user dictionary if it don't exist
updated password handling logic in AmbariServerConfigurationHandler. java and adjusted test expectations in RootServiceComponentConfigurationResourceProviderTest. java to ensure
added parsing logic in ParseSegment and modified SegmentChecker to check if a segment is already parsed to improve efficiency by skipping unnecessary parsing of segments
[ hotfix ] [ yarn ] make application attempt failure validity interval configurable
added error handling for H2 driver unloading in GeoserverInitStartupListener to improve robustness by logging warnings when the H2 driver is
hbase - 19748 add scanner read type configuration to tablesnapshotinputformat ( chaoyu tang, review by gunther h
added fixed height and width options to the LoginInstanceRequest class to allow dynamic adjustment of instance dimensions
added a ` cornerRadius ` parameter to multiple ` update ` methods across multiple classes to enhance the animation's functionality by allowing the corner radius
updated COMMANDS _ TO _ REMOVE string and added filter additions for warning messages in QFile. java to improve clarity and functionality of the
added retry logic for database connection retrieval in TxnHandler. java to improve reliability by retrying attempts on the connection pool
rename txnensureReserve to txncheckReserve to clarify the purpose of the reserve operation
added a public final char array [ ] as a private member variable in the FirstOfStringsMatcher class to provide a way to store and retrieve
updated DELETE ROWS statements to " DELETE ROWS CLIENT SELECT " and added a new test class ExplainPlanTextTest to improve clarity and
don't retry sockettimeoutexception in baservicenotfoundexception
don't crash the device if the device be disable
updated the regex pattern for the " - srand " command in SortTest. java to allow for additional characters in the seed pattern
refactor MultimapSubject to use a factory method for creating Iterable values to improve code readability and maintainability by encapsulating value retrieval logic
modify the return statement to adjust the display size based on device orientation to ensure correct display size is returned based on device orientation
don't transcode video when there's only 1 media item
added localization functionality to the Picker class to enhance user experience by providing localized strings
camel - cxfrs : don't throw npe if cxfrsconsumer can not find the customer
hhh - 117643 - fix deadlock in postgresql dialect
added null check for queryId in TestJdbcDriver2 and improved exception handling in HiveStatement to ensure robustness by preventing potential NullPointerExceptions
exclude unbounded pcollections from validatesrunner test
updated HTML strings in GpsSimpleViewFragment. java to include the formatted file name to improve clarity and consistency in the user interface
[ java ] remove unused ` leadershiptermid ` parameter.
refactor HttpSender to use'this'keyword for instance variables to improve code clarity and maintainability
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated method names from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity
added null check for the tree before processing markers to avoid potential NullPointerExceptions when the tree is not initialized
fixed nullpointerexception in xwpf default run style
changed email variable type from a single string to an array in AddressBookDoCoMoResultParser. java to allow for more flexible email
added logic to retrieve exclusions from task if they are null to ensure proper exclusion handling and avoid potential NullPointerExceptions
added support for quoted and base currency in DSXAdapters and DSXPairInfo classes to ensure proper initialization and support for the quoted currency
updated test files for various I / O operations to improve test coverage and ensure proper functionality
[ drools - 90 ] fix incremental build failure when kmodulepom be invalid
modified the initialization of the ` copy ` variable and added a conditional check for ` sobj. has ( k ) ` to ensure that the
( chore ) camel - jackson : fix typo in jackson data format
[ gr - 38604 ] use @ unreflectgetter and @ unreflectsetter in hostfielddesc.
add java. util. concurrent. completablefuture a default nullness annotation for java. util. concurrent. completablefuture
updated the calculation for mFreezeCheckPoint in PlaybackController. java to ensure that the freezing check point accurately reflects the
updated imports and modified PowerMockRunner to use Whitebox for internal state management to improve code clarity and ensure proper state management during tests
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility. unmarshalIn ` to ensure correct type
added indentation handling for method invocations in TabsAndIndentsVisitor. java to improve accuracy of indent messages for method invocations
updated TestSingleTokenFilter to extend TestCase instead of LuceneTestCase to ensure compatibility with the latest testing framework
updated HTML output formatting in HtmlProcessInformationsReport. java to improve code readability and maintain consistency in formatting
refactor JdbcStepExecutionDao and MapStepExecutionDao to use JdbcExecutionContextDao and JdbcExecutionContextDao to improve code clarity and maintainability by encaps
added a conditional check to only add a new media folder if the configuration is hiding the new media folder to ensure that only relevant media folders are
added null checks for firstWidget and secondWidget in SplitPane to ensure proper handling of null actors and prevent runtime exceptions
added handling for JavaType. Parameterized in RemoveUnusedImports. java to ensure proper handling of parameterized types in the code
updated debug log message to use ` this. getVersion ( ) ` for null and empty checks in ` UniqueModListBuilder. java ` to
changed the logger variable from instance to static final in TicketGrantingTicketImpl. java to optimize logging performance by using a single instance of Ticket
updated SQL string from " SNAPPY. RLE " to " SNAPPY. RLE. 81 + 12 " in PhysicalPlan
added a method ` isValue ( String value ) ` to ` AttrData ` and updated ` Converter ` to check for value presence to improve
added support for character modifier keys in US International PC in CPlatformResponder. java and LWCToolkit. java to enhance functionality for
[ java ] set aeron publication connection timeout in ctestmediadriver
added a check for requests that start with " / favicon " in GTVGFilter. java to ensure that requests that start with " /
added a test case to verify the installation of a wellbeing test APK to ensure that the APK installation process is successful and that the device
no effective change - remove oracle ansi sql row limiter
added a mock for MultiMap in TestSimpleBodyHandler and updated expected values in TestVertxTLSBuilder to ensure proper handling of HTTP headers
updated JavaLib1. java file references in DiffRuleKeysScriptIntegrationTest. java to ensure compatibility with the latest library version
added a check for haptic running status in TaskViewTouchController to ensure that haptic runs only when the haptic state
fix explosion cause when use projectile
removed unused import and modified getItemId method in SymbolInputAdapter to streamline code and improve maintainability
updated parameters for limit _ bids and limit _ asks from 10 to 50 in Bitfinex and BitfinexPollingMarketDataService to improve
camel - core - stax : replace single quote with double quote.
[ hotfix ] [ k8s ] make zkleaderelectiondriver. tostring ( ) return human - readable string
refactor SqlSessionFactoryBean to improve code readability to enhance maintainability and ease of understanding
[ 3.0 ] fix npe in tripleinvoker. getcall ( string, object [ ] args )
replace error handling in PolygonRegionLoader to throw a specific exception instead of a generic error message to improve error handling by providing a clearer error message
added a method to check if the threadlocal Deadline is properly registered to ensure that the threadlocal Deadline is properly registered before proceeding
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages related to channel closure issues
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ hotfix ] [ checkpointing ] fix checkpointcoordinator. reset call in region recovery
fix ( prefab ) : add mappedcontainercomponent to the prefab api
walversion : avoid npe in walnode. getoldestpinnedmemtables
updated handler invocation in Endpoint. java and added a new test case in HttpTest. java to ensure proper handling of retrying the same host
update package - info. java files for mmm and ppp packages to ensure proper organization and clarity in package documentation
added a new test class SQLServerEscapeQuestionCharacterTest to validate the escaping of question characters in SQL queries
added null annotations to constructor parameters in CamelModule and JoobyBeanRepository to enhance null safety and prevent potential NullPointerExceptions
replaced the synchronized block with a utility wait method in JavaFXSEPort. java to improve code readability and maintainability by utilizing a standardized
changed package and import statements from ` com. kenai. jaffl ` to ` com. kenai. jaffl
improve error handling for unsupported image type in cropperutils.
removed the ` appName ` parameter from the ` configure ` methods in ` InputRC ` to simplify method signatures and reduce dependency on ` appName `
add unit test for ignore / broken deps
use ` -- headless = chrome ` instead of ` setheadless ( true ) `
updated the value assignment to use ` value. intern ( ) ` to improve performance by avoiding string interning
added a check for " MOVE " status in the recv _ status checks to ensure that only valid status codes are processed
updated the date format in ISO8601 _ PERIOD _ MICROS and US _ MONTH _ DAY _ YEAR2 _ TIME to ensure
updated import statements from org. apache. curator. shaded to org. google. common. collect. Lists in multiple Java files
[ hotfix ] [ runtime ] fix potential npe in hsbuffercontext
modified permission checks in Visit. java to include ADMIN _ VISIT _ UNTRUSTED permission to ensure only authorized users can visit un
don't register jabber provider if it be already register.
added support for hexadecimal characters in BasicURLNormalizer to enhance URL normalization to include curly brackets
changed access modifiers from protected to private for several methods in QuickstepTransitionManager to restrict access to these methods for better encapsulation
added a check to compare the encryption rate if it is equal to zero to ensure that the comparison of encryption rates does not affect the accuracy of
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified ` generateProjects ( ) ` to return an immutable list of generated
updated the calculation logic in HostLocaleProviderAdapterImpl. java to ensure proper handling of calendar IDs to improve accuracy in determining if a calendar is
added a new file MSwingUtilities. java to implement utility functions for scaling images to enhance image rendering quality and improve error handling
( chore ) camel - mail : use asynccallback instead of defaultproducer
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to ensure that authentication scopes are refreshed
added unit test base on exception handle
added integration test for script engine ( integration test )
added a condition to check if ` _ inputState ` is not ` __ NONE ` in ` Request. java ` and created a new test
added a method to check if the actor is a descendant of the actor and modified touch focus handling in multiple classes to improve actor hierarchy checks and
replaced reportFailure calls with context. runCloseHooks in DeploymentManager. java and added a new test in DeploymentTest. java to ensure
make lexiconrecipemappings. lexiconrecipemappings. lexiconrecipemappings. lexiconrec
increased sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to improve test stability by allowing more time for interruptions
replaced specific StringUtils imports with a wildcard import and modified the condition to check for non - blank strings to simplify import statements and improve code readability
remove dependency on edu. stanford. nlp. net. classpathurlstreamhandler from jollyDayHolidays
added a new utility class FieldUtils to facilitate reflection - based field retrieval in Spring framework
removed speculative type checks in DeferredAttr. java and added a new DoubleStaticImport. java file with a test method to simplify assertion logic
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for widgets to improve layout consistency and
added error handling for invalid token in Xabber accounts loading to improve user experience by notifying users when an account is loading
added a new method ` setvar ` to handle command line arguments to provide users with easy access to command line arguments
don't fire animaltameevent for entity that don't have it
added handling for unsigned range values in WindowFrame. java to improve error messaging for invalid range cases
pdfbox - 4892 : add a test to verify that there be only one font
added functionality to set the application mode to improve user experience by ensuring the application operates in the correct mode
added support for configuring Docker file paths in ` ImageFromDockerfile ` to enhance flexibility in specifying Docker file paths
added a null check before creating a new ThreadInfo instance to avoid potential NullPointerExceptions when accessing threadInfos
updated the range check for sweepAngleOuter from a fixed value to a constant value to improve code readability and maintainability by using a utility function
[ hotfix ] [ checkpoint ] add log to singleinputgate and singlecheckpointbarrierhandler
added new tables and views in mmm Schema. java to support additional data types in the system
updated FuzzyQuery and FuzzyTermEnum to include a minimumSimilarity parameter to enhance query accuracy by incorporating a minimumSimilarity
changed method names from ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView. java ` to
add warn about set immediateflush on outputstreamappender
added additional auto - configuration classes to ZipkinAutoConfiguration to enhance auto - configuration flexibility for RabbitMQ and Kafka
updated JLayer. java to handle null components and added a new bug6875716. java file to improve robustness by ensuring proper
updated import statements to use ` com. google. common. base. Function ` instead of ` avro. shaded ` to ensure compatibility with
add unwind and unwind block to the graph.
added null check and setter methods for legacyRenderer in Label. java to ensure proper handling of null values and provide access to legacy renderer
replace intToFourBytes method with Ints. toByteArray method in AbstractJweDecrypter and AbstractJweEncrypter classes to improve
added null check for mObserver in NavigationModeFeatureFlag. java to avoid potential NullPointerException when mObserver is null
modified the comparator implementation in ` Comparator. java ` and added a new ` Department ` class in ` TypeTest. java ` to ensure proper
refactor DocIdSet class to improve code readability and maintainability
updated the end time setting in UserRuleAnomalyFunction to use the currentKey bucketMillis instead of a null value to ensure the anomaly result
added a try - catch block to handle NumberFormatException when parsing integers to ensure that the parsing process does not proceed with expected exceptions
added a class loader setting in MockFactory to ensure proper class loading for mock enhancer
added a new class ` OriginalFormat ` and modified ` format ` and ` parseObject ` methods in ` ConverterWithEnumFormat ` to enhance
replace hardcoded date format " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils. java to improve
refactor JAWTRenderer class to improve code readability and maintainability
camel - 15836 - camel - aws2 - * : enable autowire on the lambda client, regen doc
fixed npe when generate a mac address for a network that don't exist in the network
added a condition to check if the header name equals " Authorization " to ensure proper handling of authorization headers
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to improve method clarity and consistency in context handling
added a ` getDetails ( ) ` method to ` AbstractAuthenticationToken ` and ` UsernamePasswordAuthenticationToken ` classes to provide access to the details
changed the initialization of ` randUsePoints ` from ` nextBoolean ( ) ` to ` nextInt ( 5 ) ` to improve variability in
replace ` appendDot ( ) ` method with ` endSentence ( ) ` method across multiple classes
updated formatForConsole method to accept Locale as a parameter to ensure consistent formatting across different locales
updated imports and added a conditional check for unparsed arguments in GroovyParserVisitor. java and GroovyPrinter. java to improve code clarity and ensure
added boundary calculations for inset dimensions in Border. java to ensure correct inset values are computed based on defined dimensions
refactor gesture state initialization to use a constant to improve code readability and maintainability
replaced DateTime with java. time. format. BASIC _ ISO _ DATE in LlapServiceDriver. java to improve compatibility with modern Java
rename openblas. java and openblas _ nolapack. java files to improve clarity and consistency in naming conventions
use of ioutils. close ( ) in torrent storage
added synchronized keyword to initTxnMgr method to ensure thread safety during initialization
increased timeout duration from 15 seconds to 4 seconds in AbstractFullDistribZkTestBase to improve test stability by allowing more time for
log4j2 - 1373 : add searchresults class.
bug fix : threadcusamplersupport don't throw npe
initialized the body of primitives in BytecodeNode. java to ensure primitives are properly initialized before use
added support for new versions " 8.10. 0 - cfs " and " 8.10. 0 - nocfs " in TestBackwardsCompatibility
updated feature flag from DISABLED to TEAMFOOD in FeatureFlags. java and modified app icon text check in AppIcon. java to improve
added a new API endpoint to retrieve Tenant pools for the current instance to enhance functionality for managing Tenant pools in the application
updated the ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods to improve clarity and correctness
added support for ` isToString ( ) ` in InlineBytecodeGenerator and updated imports in InlineByteBuddyMockMakerTest to enhance functionality
added debug logging statements to ` CxxCompileStep ` and ` CxxPreprocessStep ` to improve visibility into compilation and preprocessing processes
add stringutil. removefromall ( string, char ) to remove non - existent character from string
[ 3.0 ] fix metadata service protocol export issue ( # 9684 )
[ drools - 561 ] add datatransformer interface to kie - api - runtime
changed the type of ` values ` and ` objval ` from ` Collection <? > ` to ` Number [ ] [ ] ` to
removed the ` interesting ` boolean check from ` FormatStringChecker. java ` to simplify the code and improve readability
set core to null in ElectionContext. java to ensure core is properly initialized before use
refactor ITestDbTxnManager class to improve code readability and maintainability
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and prevent potential memory leaks
added testMapModel method to CodeFirstPojoClient and updated test cases in CodeFirstPojoClient to enhance functionality and ensure correctness of map operations
pdfbox - 3017 : don't throw exception when try to create a pdxobject
refactor selection handling in ScaleDialog. java to improve null safety and clarity to enhance code robustness and prevent potential NullPointerExceptions
replaced ` updatePlayerStepStatus ` with ` tickBelt ` in ` ItemTravelBelt ` and ` ForgeCommonInitializer ` to
replaced IOException with a warning log message and added logging for appearance stream creation to improve error handling and provide clearer feedback on missing appearance stream
changed the type of the ` keys ` variable from ` SortedSet ` to ` LinkedHashSet ` to ensure predictable iteration order for keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer. java and added a
updated the preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the
added conditional check before setting all constructors to public in MainMockTransformer and created MockStaticWithPrivateCtorTest and StaticWithPrivateCtor
pdfbox - 3017 : don't decrypt cosarray / cosstring / cosstream / cosdictionary / cosstream in securityhandler
add ` ` java. awt. x11. xtoolkit'' to mainframe
modified depth calculation based on pixel size in XRSurfaceData. java to ensure correct depth is calculated based on the actual pixel size
added errorResponseBody to the InvalidResponseCodeException constructor to improve error handling by throwing an appropriate HttpDataSourceException
added a static method ` exit ` to ` TopLogging ` and updated its usage in ` TopThreadGroup ` to improve error handling by providing
modified the calculation of the start index in NativeRegExp. java to ensure correct starting index based on the regexp's global state
planner - 468 ignore test until planner - 468 be fix
[ hotfix ] fix typo in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to facilitate cleanup of entries without feeds
changed the return type of the appendToLabel method from void to AtomicCounter to ensure that the method returns the instance of AtomicCounter
[ java ] use noop idle strategy in lowlatencymediadriver.
added handling for HTTP status codes NOT _ MODIFIED in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure that headers are only
refactor InstrumentationPartialEvaluationTest to use ToolEvalNodeFactory instead of SpliceInstrumentListener to improve clarity and consistency in the codebase
removed the ` paintTabArea ` method from ` SynthTabbedPaneUI ` to streamline the painting process by eliminating unnecessary method
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional ` Object. args ` parameter to
( chore ) camel - ftp : added getfileseparator ( ) and isabsolute ( ) method to the ftp component
added a new ` build ` method in ` JavaProvenance ` for building a JavaProvenance instance to enhance the build process by
added logging for Registered Hive UDFs and non - deterministic UDFs in HiveFunctionRegistry. java to improve traceability and debugging capabilities for
increased the loop iteration limit from 100 to 200 to accommodate more extensive testing scenarios
skip delivery of hint for deleted columnfamily. patch by jbellis
updated error handling for writable output files in NativeErrors. java to provide clearer feedback when the output file is still writable
added functionality to check if the application is enabled before retrieving package information to improve robustness by handling cases where the application is not enabled
twk _ offering _ service _ map : don't throw exception when database upgrade fails
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a test case in FaultTolerantChunkOrient
replaced startsWith ( ) method with regionMatches ( ) method in LineReaderImpl. java to improve readability and maintainability of the code
added SourcesFileErrors and SourcesFileResults imports and refactored data table retrieval logic to enhance data table handling and improve code clarity
added functionality to dismiss all tasks from the overview in TaplTestsTaskbar to improve user experience by ensuring all tasks are dismissed
add dbupgradesystemvmtemplate interface to upgrade systemvm templates
modified connection handling logic in LdapClient. java to remove unnecessary null checks to improve code clarity and prevent potential NullPointerExceptions
refactor index comparison logic in SequenceAction. java to improve readability and maintainability of the code
add keyspace support to cassandraserver. patch by jbellis
added a check to skip synthetic fields in ReflectUtils to ensure that only non - synthetic fields are processed
added LoggerProvider to manage logging in the application to facilitate logging functionality within the application
changed the type of ` builder ` and ` values ` from ` ImmutableMap < String, String > ` to ` ImmutableMap < String, Object >
added deprecation warning for spring context configuration in SpringFactory to inform users about the use of the deprecated spring context
added a method ` deepStart ` to the ` Startables ` class to streamline the process of deeply starting components
removed deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and its implementation in ` ShapeImpl ` to streamline code and
implement ilasertargetblock interface in blockbuildcraft. fix # 2113
refactor objectName validation logic in AbstractJdbcDatabase. java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2. java to clean up the code and improve maintainability
http : / / issues. apache. org / jira / browse / amq - 4237 - fix memorylimit test
updated null and empty checks for handlerName in RequestHandlers. java to improve code robustness and prevent potential NullPointerExceptions
replace'-'with '.'in the servlet name retrieval to ensure consistent formatting of the servlet name
added PYTHONPATH environment variable filtering and modified Python module search path handling to improve flexibility in managing Python module search paths
updated audio frame size calculations and added error handling for OutOfMemoryError in DirectAudioDevice and Toolkit classes to improve robustness against invalid audio formats and
added null check for enums before serializing to avoid potential NullPointerExceptions when enums are null
improve log message for unexpected end of segment
added a policy assignment in WebSocketSession to enhance security by enforcing container policies
simplify static field initialization logic in Java2TypeScriptTranslator to improve code readability and maintainability
updated server context creation to use a dynamic web root to enhance flexibility by allowing dynamic configuration of the web root
migrate unit test to junit 5
bugfix : use getattachable ( ) instead of reflection
updated method names from ` createHeader ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in method naming
replaced individual import statements for trade DTOs with a wildcard import and added a method to place stop orders to streamline import statements and indicate that
added multiple calls to buffer. reset ( ) in ReduceRecordProcessor. java to ensure buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is
updated conditional checks in FloatingDecimal. java and added a new ToString. java file to ensure proper validation of decimal values in the FloatingDecimal class
updated property type check in PropertyDescriptor. java and added a new Test7189112. java file to enhance property type validation and validate
removed maxVersion parameter from getVersions method in RealTimeGetComponent. java to simplify version retrieval by directly using the latest version
don't set original origin header if uri be secured
refactor task visibility and animation logic in RecentsView and TaskView classes to improve responsiveness and visual consistency during task overlays
updated error messages in ORCRecordReader to include field information to improve error reporting by including field information in validation checks
remove hls sample from demoutil
change from org. hibernate. ejb. metamodel. internal. metamodelimpl to org
hbase - 19836 : use org. apache. hadoop. ipc. rpcengine instead of org. apache. hadoop. rpc
added diagnostic logging for errors and warnings in TestSpecificCompiler. java to improve diagnostics for generated code with - Xlint : all
added session closing logic in WebSocketEndpoint and a test case in WebSocketIT to ensure proper session management and validate session closure behavior
improve performance of dao state monitoring service
updated references from " OpenSymphony Group / / XWork " to " Apache Struts " in XML configuration to ensure compatibility with the latest
modified the stream stop logic in WebCamInputPanel. java to ensure proper handling of video playback when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
updated import statements and modified geotools imports in GMLExamples. java to improve code clarity and align with the latest geotools
replace substream ( ) with skip ( ) in TargetType58. java to improve performance by using a more stream - based skipping approach
hhh - 10956 : fix nullpointerexception for composite identifier
rename ` ` findfulltext'' to ` ` download full text''
refactor URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to use a new list for URI registrations to improve code clarity and
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code clarity and maintainability
added a check to ensure the OSDb hash is not blank before accessing its data to improve robustness by preventing potential errors when the OSDb
added token transfer functionality in RuntimeImpl and MUtil classes to enhance security by ensuring only valid token IDs are transmitted
camel - ftp : don't change current directory when delete ftp file
updated the method call from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration. java ` to ensure correct
updated conditions in MapJoinOperator and added BloomFilterFactory in HybridHashTableContainer to ensure proper handling of empty result sets and improve performance
modified the constructor of HTTPSPDYAsyncEndPoint to include an AsyncEndPoint parameter and updated related methods accordingly to enhance the endpoint's functionality and
added a ` intent. putExtra ( " id ", tweetId ) ` to multiple adapters and fragments to pass the tweet ID to the intent
added handling for proxy authorization in HttpURLConnection to ensure proper disconnection when proxy authentication is disabled
replaced the ` int _ numChildren ` with ` AtomicInteger ` for thread - safe incrementing of ` _ numChildren ` to improve thread safety and
updated import statements and formatting in multiple Java files to enhance code readability and maintain consistency across the project
updated the @ Test annotation to enabled = false in ValueTypeTests. java to ensure tests are only executed when the enabled flag is set
[ drools - 10 ] remove unused method from resourcefactoryservicemanagerimpl
replace `! set. contains ( field. getAsByte ( entity ) ) ` with `! set. contains ( entity ) ` in multiple
replaced specific exception handling for AccountNotFoundException with a more general Exception to improve error handling and provide clearer context for exceptions
added null check for witnessService before validating witness permission to avoid potential NullPointerExceptions when witnessService is null
modified the way the ` taggedCol ` is constructed by using ` getExprString ( ) ` to ensure the correct expression string is generated for
added a condition to check if Javadoc is present before setting the JavaDoc to ensure that Javadoc is only set when Javadoc is present
renamed ` holderMethod ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder. java ` to improve clarity and consistency
simplified condition checks and replaced revalidate methods with revalidateWithAnimationSafety to enhance code readability and improve animation handling safety
[ hotfix ] [ table - common ] replace unsupportedoperationexception with return of unregisteredmetricgroup
updated the calculation for the Y - coordinate in Polygon. java to ensure correct interpolation of the Y - coordinate
fix test failure due to change in cache configuration
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 2974855
refactor ShadowCookieManager class to improve code readability and maintainability
added storage authorization check for dropping external tables in HiveConf to ensure proper handling of permissions during table operations
added a brace to the if statement in Stage. java and modified the draw method in ProgressBar. java to improve code readability and ensure proper positioning
truffle : cache the byte order of the platform capability
corrected the property name from " namedpipesocketprovider. timeout " to " windowsprovider. timeout " to ensure consistency with the current naming
updated initWebViewLogin method to accept a base URL parameter and added logic to load the login URL based on the OCS API version to improve
corrected a typo in the exception message from " Paramter " to " Parameter " to ensure clarity and accuracy in error reporting for JDBC type requirements
updated date format in AuditEventsMvcEndpoint and modified test expectations in AuditEventsMvcEndpointTests to ensure proper date formatting and improve test coverage for
change class name from ExponentialTimer to PreciseThroughputTimer across the codebase
added soft body removal functionality in SoftBodyTest to ensure proper resource management and prevent memory leaks
[ hotfix ] [ table - common ] make interface public
[ zeppelin - 451 ] improve error message in zeppelinhub
add unit test to verify that there be no redundancy in jingle namespace
added null check for redplasma in bcstatcollector to avoid npe
added HTTP / 2 header prefix handling in BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
updated condition checks for UUIDs in plot methods to improve clarity and correctness in permission management
updated delimiter and formatted string in SimpleReport. java to correct formatting to ensure accurate reporting of elements in the report
modified the ` ignoreSymbolFile ` option in ` JavapTask ` and removed it from ` JavapTask ` to streamline
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to better reflect the purpose of the
refactor exception handling in Runtime. java to improve clarity and maintainability of contract validation logic
don't create input3d if applet don't have them
added @ Ignore annotation to KinesisIntegrationTests. java to temporarily disable tests that are not ready for execution
don't throw a parserexception if we can't parse a script
added the ` @ Override ` annotation to the ` getRepositoryFactoryClassName ` method to ensure proper implementation of the ` getRepositoryFactoryBeanClassName ` method
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enhance usability
removed redundant ` this ` keyword assignments in ` IOSGLES20. java ` to streamline code and improve readability
deleted the UploadPathActivity. java file to streamline the codebase by eliminating unused components
updated return statements to include indexOptions check for totalTermFreq and sumTotalTermFreq to ensure proper handling of term frequency based on index options
fix : implicit constructor be not set correctly
added ` Database ` parameter to ` populateValidateNullableIfNeeded `, ` populateValidatePrimaryKeyIfNeeded `, and ` populateValidateUniqueIfNeeded ` to
refactor Database class to improve code readability and maintainability
refactor SpringApplicationBuilder class to improve code readability and maintainability
updated formatting in PointInSetQuery. java to improve code readability to enhance code clarity and maintain consistency in formatting
removed substring operation for rawName in SchematicHandler. java to streamline code by eliminating unnecessary substring operations
fix : collectionassert # unmodifiablestrings return empty list, empty navigable set, singleton and singleton
changed the visibility of the Option enum from static to package - private to allow access to the Option enum from outside the class
updated Compose. java and ComposeActivity to include a confirmation dialog for twitlonger actions to improve user experience by allowing users to
refactor toggleKeepInSync method to use mContainerActivity's file operations helper to improve code maintainability and facilitate file synchronization
replaced DatatypeConverter with Base64's getMimeDecoder method in ImageUtil. java and added unit tests in ImageUtilTest. java to
added new classes ` ControllerCounter ` and ` DBCallback ` to the ` org. springframework. datastore. document. analytics ` package
added a final modifier to the parameter in the deleteTicket method to enforce immutability and prevent potential null pointer exceptions
added a new file FlywayMigrationRunner. java to implement database migration functionality
hashmap. isempty. isempty. isempty ( ). isempty ( ). isem
updated the version number from " 0.6. 0 " to " 0.7. 0 " to reflect the release of the software
updated ` modify ` method in ` CompressionCodec ` to accept ` @ Nullable ` and added a warning log for missing ORC compression modifiers to
updated LauncherHelper to handle null main values and added a new test case for jar creation to improve robustness by ensuring proper error handling and
rename test classes from " BasicErrorControllerIntegrationTests " to " " to improve clarity and consistency in naming conventions

make cellcopypolicy a cloneable object so that it can be reuse by other class
added a method to reset the icon load result and updated its assignment in FloatingIconView to improve code clarity by encapsulating icon loading logic
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager. java ` to
added orientation checks and modified layout dimensions in IconRecentsView. java to ensure correct item decoration when the device orientation changes
deleted the AddAdapter. java file to remove unused code
bugfix : nonstaticlifter don't handle empty constructor list properly
modified the ` processSortCols ` variable and its usage in the ` OpTraitsRulesProcFactory ` class to improve clarity and consistency in
modified TestLogWatcher to improve error handling and logging to ensure messages are correctly registered when a new watcher finally gets registered
added a print statement for " < any > " in Java2TypeScriptTranslator. java to enhance output formatting for TypeScript translation
updated SDK version from " 4799589 " to " 4913185 " to ensure compatibility with the latest Android version
removed conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor. java to streamline code by eliminating unnecessary
removed the singletonLock property from TypeCachingBytecodeGenerator to simplify the code by eliminating unnecessary configuration
rename responseClassCallback and forwardClassCallback methods to responseClassCallbackWithClass and forwardClassCallbackWithString to clarify the purpose of the callback
modified writeFile method to include an additional parameter for appending to the output file to enhance functionality by allowing users to append to the output file
updated MavenExecutionContextView and MavenRepositoryMirror to improve mirror retrieval logic to enhance clarity and correctness in handling Maven repositories
added a'name'attribute to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes to provide a way to retrieve the name of
refactor service comparison logic in OAuth20CallbackAuthorizeEndpointController and add a new test in OAuth20CallbackAuthorizeEndpointControllerTests to improve
replaced calls to ` values ( ). values ( ). toArray ( EMPTY _ ANNOTATION _ ARRAY ) ` with ` AnnotationParser. toArray
replaced getBadgedDrawableForUser and getBadgedLabelForUser methods with getBadgedIconForUser and getBadgedLabelForUser methods to improve
updated the default value for OS line separator in GlobalConfiguration. java to provide clearer guidance on default line separators for output
don't depend on abstract class in cmud test
sanitize input in base controller ( thymeleaf 3.2. 3 )
chore : update java and python dependency ( # 269 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw ` IOException ` and modified its implementation to improve error handling and ensure
refactor CountersReader class to improve code readability and maintainability
refactor ` getContainerType ` method to accept a ` View ` parameter and update related logging methods to improve code clarity and maintainability by encapsulating
hbase - 19836399 : add deprecation warn for hbase. ipc. server. reservoir
[ native ] add support for window function in native query
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types based on their presence and real - parameter data to improve
refactor TestFSTs class to improve code readability to enhance maintainability and facilitate future updates
fix label height calculation for latex text
hbase - 25825 improve region split performance by adjusting the initial size
removed unnecessary model loading calls in LauncherClings. java to streamline the code by eliminating unnecessary state reset logic
updated variable declarations for keys and updates in ManagedSelector. java to improve clarity and consistency in date formatting
added a ` excludedDatasources ` property and its setter method in ` SpringDataSourceBeanPostProcessor ` to allow configuration of excluded datasource values
added undo info store in TableValuesView and modified ColumnDelete invocation in TableValuesPanel to improve user experience by storing undo information during table transitions
[ kinesis ] catch sdkclientexception in kineskineskinesisproxy.
refactor channel triggering logic in VelbusSensorHandler. java to use a loop for channel identification to improve code readability and maintainability by
disable unfavorable benchmarks in LocalCacheSelectorCode. java and update test annotations in BoundedLocalCacheTest. java to ensure tests
added a test for illegal database names in IoTDBSessionSimpleIT. java and improved error handling in PartialPath. java to ensure that
added a call to resetNewFiles ( ) in GarbageCollector. java to ensure that new files are properly cleared during garbage collection
changed ` desiredWorkspaceLeftRightOriginalPx ` and ` desiredWorkspaceHorizontalMarginPx ` from ` desiredWorkspaceLeftRightMarginPx ` to `
refactor whitespace and formatting in CharTokenizer. java to improve code readability and maintainability
chore : update sample code to set total timeout, add api client header test
cloudstack - 7143 : fix typo in xenservernetworklabel
update libgdx version from 2.5. 5 to 2.5. 6 to ensure compatibility with the latest features and bug fixes
removed the metricNames variable and its getter method from SolrCore to streamline the code by eliminating unnecessary metrics management
updated URI handling in MavenManifestFactory. java to use Fs. fromUrl instead of URI. create to improve accuracy in obtaining the working directory
refactor conditional check to use a constant for OS name to improve code readability and maintainability
refactor JdbcAggregationRepository class to improve code readability and maintainability
added clear and addAll methods to slotList in Frame. java to ensure slotList is properly populated from other objects
set m _ predCount to - 1 in PredicatedNodeTest. java to reset the pred count after testing purposes
added properties merging functionality in ConfigurationSpringInitializer to enhance configuration handling by merging existing properties
updated the ` setupLogging ` method to accept a ` org. slf4j. Logger ` parameter and added a conditional check for the logger
replace HashMap with LinkedHashMap in multiple classes to ensure predictable iteration order for alias operations
added a check for superclass resolution in TypeHandlerRegistry to ensure proper handling of class types during type resolution
added debug logging for writing items in Hibernate, FlatFileItemWriter, JdbcBatchItemWriter, and JmsItemWriter to improve debugging capabilities by
refactor LanguageRange parsing logic in LocaleUtils. java to improve clarity and correctness of language range parsing
updated handler context handling in Http2ServerResponseImpl and Http2Test to ensure proper context management during server closure
make xssfevaluationworkbook _ uBook final and add table cache to improve performance
updated schema text detail type checks and simplified conditional logic in BaseSchemaTextFormatter. java to ensure correct handling of schema text details and improve code
updated imports and class references from Mongo to MongoClient in MongoNamespaceReplicaSetTests. java to ensure compatibility with the latest MongoDB driver
replaced HashSet with LinkedHashSet for roots and leaves sets to ensure predictable iteration order for collections
replaced the assignment of ` tableScanCloneOpsForJoin ` with a null check to ensure that the operator tree is properly cloned before proceeding
added a null check for the client ID before returning the client to ensure that the client ID is valid before proceeding
reset the achievement list's position after each call to ensure that the achievement list reflects the current state after each call
initialized ` userName `, ` driverName `, ` driverVersion `, and ` connectionUrl ` with default values to ensure default values are
updated references from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog and Sh
added LongBuffer functionality to ByteBuffersDataInput for reading long arrays to improve performance and error handling when reading long data
rename ` st _ atime ` to ` st _ atime _ sec ` and ` st _ atime _ sec ` and ` st
added a new file TestNoEagerReclaimOfHumongousRegions. java to facilitate garbage collection for humongous
added search visibility handling in AllAppsContainerView to improve user experience by hiding the search bar based on user preferences
use routes ( ) instead of env. router ( ) in EnvRouterFeature. java to improve clarity and consistency in routing configuration
added null checks in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new action ` ReloadPageAction ` for reloading the current displayed page to enhance user experience by allowing users to reload the current displayed page
changed log level from info to warn in SQLManager. java to provide more granular logging for missing entries
update minimum Spring version from 3.2. 7. RELEASE to 3.2. 8. RELEASE to ensure compatibility with the latest security features and improvements
added a null check for currentClusterConfigForService in UpgradeHelper. java to ensure that the configuration type does not have a selected version to
replaced Iterator with ServiceLoader for loading SPI extensions to improve code readability and leverage ServiceLoader for loading extensions
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource management and prevent memory leaks
added ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and ` HiveViewImpl ` to ensure proper shutdown of the statement executor
updated feature settings and initialization in DocumentFactory, XMLSAXHandler, ComplexElementHandler, and DocumentFactoryTest to ensure proper handling of external DTD
8220030 : jdbstopthreadidtest . java fail due to ` ` unexpected io error while write command ' quit ' to jdb stdin stream ' '
added a ` getType ` method to ` ShadowContentResolver ` and corresponding test cases in ` ContentResolverTest ` to ensure that the ` getType
updated futures and timestamps handling in ExpressionThreadPoolManager to ensure proper type casting and prevent potential ClassCastExceptions
updated the default HTTP port property from " port " to " vertx. httpPort " in HttpTestBase. java to ensure compatibility with
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog. java ` to improve clarity and consistency in listener registration
increased the default batch size from 10 to 3 in NewSessionQueueOptions. java to optimize batch processing for improved performance
[ hotfix ] [ taskexecutor ] don't try to establish resource manager connection in taskexecutor
[ hotfix ] [ runtime ] fix npe in lambda rewriter
updated the error message to include min and max parameters in the IllegalArgumentException to improve clarity of error messages for better debugging
modified the ` onMessage ` method to include an ` E entity ` parameter across multiple classes to enhance state handling by associating messages with the owner
support for ` ` cursor'', ` ` row'', and ` ` prepared statement''.
refactor multiple assertion classes to improve code readability and maintainability
# 2953 - enh : add setbeanid ( ) method to ebeanserver
updated transform method from " tools / xslt / add - menu - to - site - descriptor. xsl " to " getAddToSiteDescriptor
added a list of RequestMatcher instances and modified requestMatcher instantiation to include it to enhance flexibility in handling request matchers
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for instances of ContactResource
move getrequest ( ) to abstractjpprocessor and remove it from abstracthttp11processor
updated log messages in FileManager. java to improve clarity and accuracy to enhance debugging by providing more context on the saved Persistable
reset mockControl in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource management and optimize operations
added import statements for LambdasWithInterfaces and modified test assertions in SyntaxTests. java to ensure proper functionality and correctness of method calls in
refactor ConnectionModel and ModeledConnection classes to improve code clarity and maintainability
tika - 2852 -- remove temporaryresources from parserdecorator
don't try to load fml class if they don't exist
refactor variable declarations in AccountUtils and IndexedForest classes to improve code readability and maintainability
updated the parameter name from " swap " to " rename " in TestCoreAdminApis. java and CoreApiMapping. java to improve
added a test case for handling comments in JsLexerJsxTest. java and updated the parsing logic in DumpingVisitor. java to improve
added ScreenRecordRule import and annotation in AddWidgetTest. java to enable screen recording for debugging purposes
added error handling for missing Buck configuration in BuildEndToEndTest and CxxEndToEndTest to improve test robustness by ensuring
added functionality to check for physical memory limits in TestStringBufferAndBuilderGrowth. java to ensure that the test environment does not exceed the
deprecate maptolocaldateconverter in favor of conversionservice
added a success flag to the HiveMetaStoreClient to indicate successful execution of the HiveMetaStoreClient
fix dstu2bundlefactorytest due to new string constructor
added support for " amp. twimg. com / v / " in multiple conditions to enhance user experience by allowing access to " vine
added a @ Deprecated annotation to AreaReference. java to indicate that AreaReference is no longer recommended for use
refactor ElementType and Target classes to improve code readability and maintainability
updated assertions and refKind handling in MemberName. java to improve clarity and correctness of method reference operations
changed the default value of __ submitKeyUpdates from " false " to " true " and added synchronization to the runChange method to ensure consistent
changed the conditional check from " MouseEvent " to " else if " in EditNodeTextField. java to ensure proper handling of mouse events
camel - 16400 : fix for http : / / code. google. com / p / mybatis / issues / detail?
[ hotfix ] fix checkstyle violation in the benchmark module
refactor exception handling in AgentRunnerTest. java to improve clarity and maintainability of the code
added ` getDescription ( ) ` methods for various classes and updated descriptions for consistency to improve clarity and maintainability of the code
refactor face addition logic in ObjLoader. java to improve clarity and maintainability of the code
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate easier updates
rename ` reentrantLock ` to ` lock ` in multiple classes to improve clarity and consistency in variable naming
added ` mavenPackaging ` parameter to ` getBomReference ` method in ` PrintMavenAsCycloneDxBom. java `
updated back ( ) method to use evt. getComponent ( ) to improve event handling by utilizing the event's component
refactored certificate verification logic in SASLAuthentication. java to improve readability and maintainability of the code
updated method signatures in ObjectArraySubject and StandardSubjectBuilder to accept a nullable Object type to enhance flexibility in handling nullable values in array operations
updated references from ` NutchConf. get ( ) ` to ` getConf ( ) ` in multiple Java files to ensure consistency in configuration
modified SheetAssembly to deselected the tab and modified StubsController to handle cases where the selected stub is too late to improve user
added a method to retrieve the session ID in the RemoteWebDriver class to provide access to the session identifier for external use
added null checks before setting time intervals in ImportContainerImpl. java to avoid potential NullPointerExceptions during time interval creation
updated logging command from " - logLevel " to " - serverPort " in MockServerContainer. java to improve logging consistency and reduce verbosity
updated error logging to include the exception message to improve error reporting by providing more context in error messages
replaced RobotsHonoringPolicy with CrawlMetadata and updated related methods to improve clarity and consistency in managing crawl metadata
added JUnit @ Ignore annotation to ITSystemTest. java to temporarily disable tests that are not ready for execution
camel - test - infra - package - scan : fix unit test on window
added a new method ` alternativePath ( ) ` to ` ExpectNewDemo. java ` that returns an input stream containing an alternative path to
logentryparsetester should call getfirstfilter ( ) instead of getfirstfilter ( ).
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by restricting access to the ProtectionDomain
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable certain optimizations and operations on external tables to improve performance by preventing unnecessary optimizations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs. java to clarify that authorization requirement is required for requesting public keys
removed FLAG _ SHOW _ WALLPAPER from mWallpaperManager and changed scroll offset from - 30 to 0 to simplify wallpaper
modified the return value in ` SybaseASADatabase ` and updated SQL queries in ` SequenceSnapshotGenerator ` and ` CreateSequenceGenerator `
nifi - 2693 : fix npe in putsql when autocommit be set to false
added file creation logic in SnapPuller and created test cases in TestReplicationHandler to ensure proper error handling and validate master and slave directories
updated AppTarget initialization to use " launcher : launcher " instead of " id : launcher " to ensure correct identification of the launcher app
fix framer. frame ( ) and framer. frame ( message, output ).
updated constructor signatures to include ` clientRegistrationRepository ` parameter across multiple classes to enhance clarity and consistency in constructor usage
added an extended message for splitting text into key - value pairs in GenericUDFStringToMap to enhance user experience by providing clearer guidance on
use truncatedto ( chronounit. MILLIS ) instead of a static final string
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and refactored the close method to use a retry mechanism to improve resource
refactor ClassLoadingStrategyHelper to use MethodHandles. privateLookupIn instead of MethodHandles. privateLookupIn to improve error handling and provide clearer
updated Mockito library version to ensure compatibility with the latest features and bug fixes
changed log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the event file being logged
added JUnit @ Ignore annotation to SamplingNamingTest. java to mark the test as ignored due to timing issues
updated error message from " greater than zero " to " greater than zero " in GridLayout. java to clarify that rows and columns must be greater
mondrian : fix checkstyle issue in wagonecART
added sorting functionality for BoundSheetRecords in XLS2CSVmra and BoundSheetRecord classes to improve data organization by ordering BoundSheetRecords
updated calculations for average impulse and start thrust in ThrustCurveMotor. java to improve accuracy in calculations involving start and end thr
updated InputSystemJme constructor to accept an inputManager parameter to enhance flexibility in managing input systems
against against against against against against against
remove deprecated block. getmesh ( )
[ flink - 3684 ] [ yarn ] fix typo in yarnapplicationmasterrunner and yarntaskmanagerrunner
added an option to EMPTY _ WORD _ OPTIONS in LineReader and modified matcher logic in LineReaderImpl to ensure matchers are only processed when no
add write commit log when push view replica update
added functionality to retrieve and set default button IDs in CaptureActivity and PreferencesActivity to improve user experience by ensuring proper button press handling based on
added a new test method ` testBatching ` in ` JoinedTableTest. java ` to ensure batching of posts with specified properties
added error handling for duplicate timestamp persistence in JpaPersistenceService to improve debugging by providing more context on item persistence failures
deprecated the ` -- format ` option in ` RuntimeOptions ` and updated the plugin configuration in ` RuntimeOptionsFactory ` to encourage the use
removed the save ( ) method from PMS. java to streamline the code by eliminating unnecessary method calls
modified the condition for handling the back key event in ExtendedEditText. java to ensure proper handling of the back key event
modified the calculation of ` newCapacity ` in ` AbstractStringBuilder. java ` and added a new test class ` Capacity. java ` to ensure
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in DetailFragment. java to ensure proper handling of note
added support for handling XWPFFootnote relationships in XWPFDocument and related classes to enhance support for additional footnote relationships in the
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter and modified getCredentialsWithSameUsernameAndPassword method to include null to enhance event
added a test method in BridjOGRDataStoreTest to verify the version of the GDAL library
added lifecycle hook to handle network error.
fix deviantart ripper so it don't crash
removed unused import statements from BodyTubeShapes. java and RocketFigure. java to clean up the code and improve readability
use retf * x / y instead of fbo _ back / fbo _ front / fbo _ back
add an option to auto - select offline to create additional setting
replaced the usage of PackedInts. FormatAndBits with BlockPackedWriter in DiskDocValuesConsumer. java to optimize data handling and improve performance
( chore ) camel - core : use sortset instead of arraylist for route by status
refactor data handling in GoAwayTest. java to streamline response creation to improve code readability and maintainability
added BeanUtils support for setting properties for a map in ReflectionUtils. java and created a new FluentBean class in EasyRandomTest. java
replaced ` ByteStreams ` with ` HttpResponse ` in ` BlockingHttpEndpoint ` and added a new ` HttpResponse ` class to improve response handling and
( chore ) camel - test - infra - filesorter : fix unit test
updated print statement to use ` getLastAppearedTaskTargetId ` instead of ` getLastAppearedTaskTarget ` to improve clarity and
added support for write image scaling information in the RtfDocumentSettings class to enhance the flexibility and usability of image processing options
modified the handling of aggregate function names in TSServiceImpl. java to improve clarity and ensure correct retrieval of aggregate functions
updated test classes to extend WithNestedTests instead of LuceneTestCase and added cleanup method to improve test structure and ensure proper cleanup of system properties
add xcapenable and xcapserveruri option to PresencePanel to allow users to select their xcap server URI
ww - 3683 add option to handle exception in dev mode
added functionality to stop text editing in CodenameOneImplementation, Display, and AndroidImplementation classes to improve user experience by allowing text editing to
nifi - 2693 : fix npe in controlrate when group attribute be null.
modified the showDialog method to include a isNewComponent parameter and updated related logic to ensure that presets are only selected when a new component is present
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 468
added a conditional check to verify that the test is only run on MS Windows to ensure that the test is only run on Windows and encourage
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the SERIALIZABLE in TransactionIsolationLevel. java to support snapshot support in the
replaced the put operation with a while loop to wait for the newRecids queue to complete before proceeding with operations
use java. util. zip. zipfile instead of jrecompat
added null check for the command class before creating a RegisteredServiceImpl to avoid potential NullPointerExceptions when the command class is not initialized
use ` ` ignore'' instead of ` ` best _ effort''
remove'public'modifier from ripp and update method in ripp interface
filter out non - valid IPv6 addresses to improve filtering logic for IPv6 addresses
added a setter method for JobIdentifierFactory in SimpleCommandLineJobRunner to enhance functionality by allowing customization of job identifiers
updated the computePartitionAssignment method to include a new ClusterDataCache parameter to ensure proper handling of cluster data cache during partition assignment
simonstewart : remove the docker protocol a it don't exist anymore
simonstewart : make defaultselenesecommand accept comma - separated string
add retry to createglossarytests to avoid flakiness
update schema references from " allOfRef " and " oneOfRef " to " Components. COMPONENTS _ SCHEMAS _ REF "
updated ` EntityDeletedEvent ` to use ` JsonUtils. writeValueAsString ` for JSON serialization to improve consistency and correctness in handling deleted events
added support for GOP support in FormatConfiguration and updated related imports in DLNAediaInfo and LibMediaInfoParser to improve media handling and
added a new file TestProfileReturnTypePrinting. java to implement performance testing of return type printing in a class
added locking mechanism to improve thread safety when accessing shared resources
updated the handling of the AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator. java to ensure proper resource management
danielwagnerhall : remove @ ignore from firefoxprofiletest. java
added @ return annotations to methods in HasAndroidDeviceDetails. java to provide access to density, visibility, and map properties
don't add dead bug to project stats
added disabled text styling to various components in ImportPanel. java to improve user interface consistency by using disabled shadow and foreground color
removed redundant @ Override annotations in CacheControlImpl. java to improve code clarity and maintainability
added a check for empty schedule dates and created a test for weekly actions without a week day to ensure that the scheduled action returns the correct scheduled
refactor upload button handling and improve menu management in ShareActivity to enhance user experience by allowing single upload functionality
refactor multiple classes to improve code organization to enhance maintainability and readability of the codebase
added an import statement for InputStream and implemented loadExchangeMetaData method in MeXBTExchange and RippleExchange classes to enhance functionality by allowing
added a custom serializers for Hadoop Writable objects in CrawlDbReader to enable serialization of Writable objects for improved data handling
removed unused imports from TestJaspicBasicAuthenticator. java to streamline test code and reduce unnecessary dependencies
added service configurationPid parameter to the Component annotation in MDNSDiscoveryService. java to enhance the service configuration by associating it with the specific
chatmessagereserfragment : fix crash when click on a non - existent chat message
updated the ForkJoinPool initialization in TestBPIndexReorderer. java to use a separate thread for thread creation to improve thread management and
removed unnecessary assertions related to DATANODE and NAMENODE in RoleCommandOrderTest. java to streamline test cases by eliminating unnecessary checks
added methods to restoreLocalInfoFromTableInfo and dedupWithTableInfo in PartInfo. java to ensure proper handling of table information during
updated formatting in multiple files to improve code readability and consistency
added transformations and updated logoSprite rendering in BitmapFontTest. java to improve rendering accuracy and ensure proper logo rendering
[ hotfix ] [ python ] [ table - planner - blink ] don't add pythonutil. isbuiltinaggregate to
don't send event status change event for already connect node
make sure we don't connect to a dead node. patch by jbellis
geosymbolic : fix integral ( f, x ( a ), y ( a ), z ( a ), z ( a )
added content type handling in FormAuthenticator and SavedRequest classes to ensure proper content type is set when saving requests
refactor variable declarations and null checks in XToolkit. java to improve code clarity and ensure proper initialization of the GraphicsEnvironment
refactor RecommenderJob and AbstractJob classes to improve code readability and maintainability
refactor EnvironmentImpl to use ReadWriteLock for concurrent access to metaLock to improve thread safety and prevent potential race conditions
added a test for reading an identity provider in a different identity zone to ensure that the identity provider behaves as expected when using a different identity zone
updated job scheduling in ObjectTypeNode and added null check for timestamp in PointInTimeTrigger to improve job handling and prevent potential NullPointerExceptions
removed unused import of Service in SendTicketGrantingTicketActionTests. java to streamline code by eliminating unnecessary dependencies
[ rocketmq - 257 ] rebalancer push : sendheartbeattoallbrokerwithlock ( )
add ` ` cairo. detached. mkdir. mode'' property
[ java ] add a test case to ensure that the cluster can be restart when there is a slow follower.
updated default label pattern from " [ authors3 ] [ year ] " to " [ auth ] [ year ] " to align default label with
refactor dependencies in DBinaryDescription and DLibraryDescription to use ImplicitDepsInferringDescription to improve dependency management for DLibraryDescriptionArg
camel - google - cloud : dispose the oauth client service when the service be release
( chore ) camel - test - infra - rocketmq : fix dynamic done file issue
added a boolean variable ` reopenReaders ` and updated the conditional check in ` SolrCore. java ` to enable reopening functionality based on
add dialect attribute to mapwriter and freeplaneversion
added methods to retrieve current date and timestamp in the Update class to enhance functionality for handling date and timestamp updates in MongoDB updates
added a new method ` dup ` in ` Attr. java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition implementation in multiple classes to improve code clarity and maintainability
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector. java to improve query performance and accuracy
removed unused method handles from ConcurrentClassLoadingTest. java to streamline the test by eliminating unnecessary method handles
updated the ` providesDirectNearbyUploadController ` method to use ` application. getSharedPreferences ( " direct _ nearby _ upload _ prefs
added support for " SYSIBM " and " SYSDUMMY1 " modes in compatibility mode to enhance compatibility checks for different database modes
updated log formatting in TraceGatewayEnvironmentPostProcessor. java and added conditional properties in SamplerAutoConfiguration. java and tests in SamplerAutoConfiguration
added logic to retrieve the last process ID in POIXMLProperties. java and updated tests in TestPOIXMLProperties. java to ensure proper
use double. isfinite instead of double. isNaN in geotiffreader
updated import statements and refactored command execution logic in CliDriver. java and SessionState. java to improve code clarity and ensure proper resource
mockrestadapter : use schedulers. from ( ) instead of executor. execute ( )
added a default method ` selectByRuleIdSet ` to ` RuleConditionMapper ` to enhance functionality by allowing dynamic selection of rules based on
added ` addExitDescription ` method to ` ExitStatus ` and removed unused imports in ` AbstractJob ` and ` AbstractStep ` to improve
added check for entity player in multiblock event handling to ensure proper identification of the player during the right click action
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity by using a more descriptive variable name
removed unused import and modified range length calculation in PlotConfiguration. java to streamline code by eliminating unnecessary dependencies
[ robovm ] fix defaultiosinput not work properly.
updated the method call from ` params. getBuildTarget ( ) ` to ` nativeLinkable. getBuildTarget ( ) ` to ensure that the
rename variable ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in naming conventions
added assertion to verify that the service message is not null to ensure that the service's message is not null to avoid potential null pointer exceptions
replace potentiallyEscapeMapKey with potentiallyEscapeMapKey in MappingMongoConverter. java to ensure proper escaping of map keys during data conversion
updated Timber string concatenation in NearbyMapFragment. java to improve code readability and maintainability
camel - 16400 : use'deprecated'instead of'javatype '
added null checks for terms in FuzzyLikeThisQuery and introduced a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a ` boolean tabularList ` parameter to enhance flexibility in displaying applications based on the tab
[ ds - 3892 ] use dspace. identifier. factory. identifierservice instead of dspace. utils
updated the method call from ` assignBytes ( bytes, 0, bytes. length, destIndex ) ` to ` assignBytes ( bytes,
changed the return type of getDisplayScript from abstract to non - abstract to allow the method to return null instead of returning an abstract String
douniaberrada : don't use ` ` keystopress'' in firefoxdriver
pdfbox - 4071 : set initial arraylist size, a suggest by valerybokov
added synchronization and null checks in NetworkManagerListenerImpl. java to ensure thread safety when accessing active network configurations
refactor ` getAllEmbeddedObjects ` method to accept ` HSSFShapeContainer ` as a parameter to improve code readability and maintainability by encapsulating
removed import of Shdr from ShaderNodeLoaderDelegate. java to streamline dependencies by eliminating unused Shdr class
replace hostParams with roleParams in AmbariManagementControllerImpl. java to ensure consistency in handling role parameters
added a condition to check if the base font starts with " Symbol " to ensure proper handling of font symbols in the application
replaced GlStateManager. popAttrib ( ) with GL11. glPopAttrib ( ) in ModelHourglass. java to ensure compatibility with
updated LiveTvGuideActivity and ProgramListAdapter to use mCurrentGuideStart instead of a Calendar instance to ensure consistency in date handling across the application
replaced ` getDeclaredMethod ` with ` Whitebox. getMethod ` in ` MockGateway ` and added new classes ` CommonParentTest ` and `
added dlopen calls for " libfreetype. so " and " libfontmanager. so " in JREUtils. java to ensure proper
apps : use dummy argument for multiply function
[ gr - 174992 ] make countedloopinfo protect non - overflowing unsigned.
fix : check if an instance of a class have a constant class object.
added a new ` LocalizedString ` class and modified ` Attr ` and ` Resolve ` classes to utilize it to improve the handling of localized string
added a ` disableClasspathSearch ` property and its getter / setter in ` ServerConfig ` to allow configuration of the ` disableClasspathSearch `
changed the ` formats ` and ` returnedArray ` from an array to a copy of the ` formats ` array to ensure that the ` formats
updated the default value of retries from 0 to 2 in Reference. java and updated the expected value in AnnotationPropertyValuesAdapterTest. java to
added JSON parsing in TexturePacker and updated process method to accept a settings parameter to enhance functionality by allowing dynamic configuration handling
updated upload progress text handling in AchievementsFragment to improve user experience by displaying appropriate progress indicators
added logging and instrumentation for annotation processing and processing in TranslatingJavacPhaseTracerTest to improve monitoring and debugging capabilities during annotation processing
added a new ` CategoryInfo ` class and modified ` MwQueryPage ` to include a new ` @ NonNull ` annotation to enhance the
updated assertion messages for empty username and password in AuthzAuthenticationRequest. java to improve clarity and accuracy of error messages
added AccessibilityManager imports and modified alarm settings in TaskbarStashController. java to enhance accessibility features and improve alarm settings
added handling for the'^'case in GenericSignatureParser to ensure that an already thrown NoSuchElementException is thrown when the'^'case
modified access flags in ClassVisitorDriverFromElement and added tests for stubbing generic and abstract enums in StubJarTest to ensure correct access flags
replaced direct assignment with Objects. requireNonNull and added null check in LowpassIntervalsSource to enhance null safety and prevent potential NullPointerExceptions
added two test methods to verify iterator last - to - last - next behavior in MapInterfaceTest. java to ensure that the iterator correctly returns
added a serialVersionUID field to the TreeMap class to ensure proper serialization and deserialization of the TreeMap
updated the createdAt timestamp from milliseconds to seconds in ImageData. java to ensure the image's timestamp accurately reflects the creation time
grobcov : use f2m instead of grobcov
delete private and public keys for accounts in AccountRemovalJob to ensure account data integrity by removing sensitive keys
make keep - alive and proxy - connection header value configurable.
fix postjoinmapoperation when map have no interceptor and lite member
remove duplicate processor in standarddialect. inliningdialect
[ hotfix ] [ table ] remove unsupportedencodingexception in longhybridhashtable
refactor environment variable retrieval to use Optional and improve null handling to enhance code robustness and prevent potential NullPointerExceptions
ww - 38171, ww - 3833, ww - 3834
added SerializableMode import and removed redundant closing brace in PluginSwitch. java to ensure proper serialization handling and improve code clarity
added handling for nullable fields in DependencyInjectionPoint to ensure proper handling of null values during injection
added isolation level support for SELECT statements in the database compatibility tests to enhance compatibility with different database modes
updated HiveConnection to use constants for transport and HTTP paths to improve code maintainability and reduce dependency on HiveConf
added an implementation of the ` isCacheable ` method in ` GlobalOrdinalsWithScoreQuery ` to ensure that the method always returns false to
added a new file TestStrangeControl. java with a thread to test StrangeControl functionality to ensure that the StrangeControl class behaves as expected
updated file extension from ". json " to ". jsfile " and ". jslib " in BuildTargets. java to ensure correct
added selection start and end variables with getter and setter methods in ShadowEditText to enable retrieval and manipulation of selection indices and their corresponding values
( chore ) camel - grpc : use try - with - resources
updated the ` use ` method in ` Jooby `, ` Router `, and ` JoobyTest ` to improve clarity and
added a null check for the fst parameter in FreeTextSuggester. java to ensure that a valid fst parameter is provided to prevent runtime errors
updated newline handling and improved URL verification logic in T4975569 and T6729471 to enhance cross - platform compatibility and error handling
added ABI writer class loading functionality in JavacInMemoryStep. java to ensure proper handling of ABI writer classes during the build process
suppress warning about boolean method be always inverted.
add warn log if pullmessagerescheduledthread have shutdown
refactor EnergyEndpointer class to improve code readability and maintainability
refactor ComponentPresetChooserDialog to use a list of displayed columns instead of a single column to improve code clarity and maintainability by consolidating
remove unused import
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated related method calls in ` CxxLibrary
deleted the file Constants. java to remove unused code to streamline the codebase
refactor key splitting logic in RandomPartitioner to improve clarity and maintainability of the code
fix native - image generation for fallback linker
added unit test for inline role binding in RoleBindingTest. java to ensure correct handling of inline role bindings
added debug logging for session cookie configuration in UaaSessionCookieConfig. java to improve traceability and debugging of session cookie configurations
updated the calculation of fName to use Calendar. DAY _ OF _ YEAR instead of a hardcoded value to improve accuracy in determining file names by
[ hotfix ] fix typo in observableblockingsubscribe
added error handling for invalid options in JavapTask and created a new class T8033711 to improve robustness of the javap
replaced ` Collectors. toList ( ) ` with `. toList ( ) ` in multiple Java files to simplify code and improve readability
[ hotfix ] change log level from error to warn in taskdriver
[ hotfix ] [ network ] enable tiered storage for hybrid result partition
don't allow 200 status code to be equal to 299 status code
updated the OpenGL configuration in CubocDesktop. java and modified the LwjglApplication instantiation in Cuboc. java to enable GL
jimplebody. visitunits ( method. getReturnType ( ) ) should not check for void type
refactor OutputMacroExpander to use AddToRuleKey and improve error handling to enhance code clarity and maintainability by standardizing rule key handling
rename ` assertNoJobsLeftEventually ` to ` assertNoLightJobsLeftEventually ` in ` SimpleTestInClusterSupport. java ` to
added a new condition to check for double quotes in the path to ensure proper handling of path separators in file paths
instructorfeedbackresponsecomment : use list < responsecomment > instead of list < responsecomment >
removed redundant whitespace in Container. java to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke. java containing a class A with methods for testing object equality to facilitate testing of object equality
replaced direct stream skipping with IOUtils. read for byte reading to improve code readability and reduce dependency on external libraries
improve error reporting when datasource be shut down.
changed catch block from Exception to Throwable in CoreContainer. java to improve error handling by catching a broader range of exceptions
hbase lrublockcache should not remove block from the block cache if the block cache do not exist
removed unnecessary null check for taskCount in RecentsView. java to simplify code and improve readability
added a new instance configuration change listener in HelixBrokerStarter and increased sleep duration in HelixServerStarter to ensure proper handling of routing table
added methods to retrieve and render metadata from CoinmateMetadataServiceRaw to enhance functionality by providing access to exchange metadata
improve error message when systempath contain $ { basedir }
pdfbox - 4892 : avoid npe in coswriter. getobject ( )
add support for setdisplaydata ( ) in ptransform. setdisplaydata ( ).
updated assertions in ` SubjectTest. java ` to use ` assertThat ( ( Object ) null ) ` to improve test clarity by explicitly asserting
removed the security property " jdk. certpath. disabledAlgorithms " from the ClientJSSEServerJSSE class to streamline
updated error messages in OptionData. java for consistency to enhance clarity and maintainability of error messages
updated module - info. java files for mmm and ppp modules to enhance module documentation and improve clarity
added error handling and updated ensureConnection method to throw IOException to improve robustness by handling potential IO exceptions during connection establishment
removed redundant lines in LauncherInstrumentation and LogEventChecker to improve code clarity and maintainability
updated exception handling in FileSinkOperator. java to improve error logging and ensure proper resource management
added diagnostic logging to the task execution process to improve debugging by displaying diagnostic information
replace RuntimeException with OptiqSemanticException in SemanticAnalyzer. java to improve clarity and consistency in exception handling
rename DataSourceMonitorTests class to improve clarity and maintain consistency in naming conventions
added a HashSet to track loaded resource paths before scanning methods to ensure that only valid resource paths are scanned
updated error logging to handle null values for test instances to improve robustness by preventing potential NullPointerExceptions during service initialization
fix nullpointerexception in routinginboundhandler
added nullable natIp field and updated warning message in EkeyConfiguration and EkeyUdpPacketReceiver to improve handling of unknown source packets and
updated imports and replaced BaseAllocator with ArrowByteBufAllocator in multiple classes to improve memory management and align with the Apache Arrow library
fix checkstyle issue in commitlogarchiver and commitlogreplayer
modified the parsing logic in ` HttpConnection ` and added a new test case in ` RFC2616BaseTest ` to ensure proper handling of
fix race condition in multitimeout
make leveledmanifest more robust against starved sstables
added a test annotation to the TestOrcTimezone1 class to facilitate unit testing of the OrcTimezone1 class
updated the ` parseMetricAndTimerSystemProperties ` method to include ` enabledMetricsSubstrings ` and ` enabledTimersSubstrings ` to
updated error handling in PinotSegmentRestletResource and modified return statements in TraceContext and TraceContextTest to improve robustness of JSON processing
modified the method to return default renderer for Object class and added a new test class Test6888156 to ensure proper renderer retrieval for Object
added a check for the existence of the shell environment before adding it to the argument list to ensure shell arguments are only added when the environment is
fix bug in databasecleanervice. deletewithoutsubscription ( )
replaced List < Object > with Set < Object > in MockitoExtension. java and updated method parameters accordingly in MockitoTest. java to ensure proper
refactor FieldMonitor class to improve code readability to enhance maintainability and ease of understanding
updated method calls in BTreeMapTest. java to replace deleteFilesAfterClose ( ) with fileMmapEnableIfSupported ( ) to improve
modified the iterator initialization logic in SortedIntList. java and added a new test class SortedIntListTest. java to improve iterator handling and
added unregistering of the object name in DefaultRemoteProxy and modified exception handling in JMXHelper to improve JMX management by properly unregistering the object
[ hotfix ] [ rocksdb ] set rocksdb default writebuffer size to 64mb
removed the ` true ` parameter from the ` this ` constructor in the ` Style ` class to simplify the constructor by directly using the style object
replace ` addArgument ( " message ", f [ 0 ]. getMessage ( ) ) ` with ` addArgumentNoEncoding ( " message
added JSON graph configuration in SamzaRunner. java to enable running a portable pipeline with JSON graph information
update to late jme3 release
updated LoopRotateBadNodeBudget. java to improve performance and maintainability of the code
added a ` TypeInformation ` parameter to the ` convertToMongoType ` method across multiple classes to enhance type conversion functionality by allowing the conversion of
fix : display imaginary. imaginaryunit when link geo be complex
simonstewart : fix wrong copyright year in sendkeytoactiveelement
added a method to getScaledInstance for generating a scaled image to ensure that invalid dimensions are handled correctly and improve rendering quality
removed the extendArgumentCheck ( ) and extendWrapStore ( Engine ) methods from DBMaker. java to streamline code by eliminating unnecessary
bugfix : shift state ben't update when keyboard be clear
removed the DETECTED _ ACTIVITY constant from multiple classes to streamline code by eliminating unnecessary detection logic
the application's'''''''''''''''''' '
removed the import of Buildable from AaptPackageResources. java to streamline the code by eliminating unnecessary dependencies
added comments for unused methods in multiple classes to improve code readability and maintainability
updated exception message in WebSocketUpgradeHandler to include the response status to provide clearer context on the status of the upgrade protocol
refactor blockMode assignment in P11Cipher. java to improve code readability and maintainability
updated Mockito library version to ensure compatibility with the latest features and bug fixes
removed redundant permission check for plot owner ID assignment to streamline permission handling and improve code clarity
removed deprecated getConversationID ( ) methods from HttpContentResponse, HttpResponse, Request, and Response classes to streamline code by eliminating outdated
updated import statements and modified PhoneSet initialization in DummyFreeTTSVoice. java to use de. dfki. lt. mary.
refactor stripQuotes method to use PlanUtils for consistency across classes to improve code maintainability and ensure consistent handling of quote values
refactor rendering handling in DLNAResource and Request classes to improve clarity and maintainability of rendering updates
added a list of resolution and remote artifact repositories to the DefaultPluginManager to enhance functionality by allowing multiple resolution and remote artifact repositories
( chore ) camel - cxfrsproducerfactoryaccesstest : close the application context
fixed typo in javadoc of physicclient
added JUnit Ignore annotation to SessionTest. java to temporarily disable tests that are frequent failures
added a new File object instantiation in ZipFile. java to facilitate the creation of a ZIP file using a specified filename
added a deprecated method ` handleAll ` to the ` TryType ` class to indicate that the method should no longer be used
add a test case to verify that channel constructor be not initialize by the default constructor.
added stack trace logging in GenericDAOImpl and created StackTraceUtils class in ReflectionUtils to enhance debugging capabilities by providing insights into stack traces
removed the @ Test annotation from FormLoginIntegrationTests. java to clean up the test code and reduce unnecessary dependencies
mondrian : fix bug in mondrian when unparsing function with no argument.
updated SQL query and variable names in CheckDatabaseHelper. java to improve clarity and consistency in fetching cluster configurations
rename supresswarnings to suppresswarnings for jdk 11 +
updated JsonTreeReader to handle unexpected JsonToken cases and added a test for nextJsonElement in JsonElementReaderTest to improve error handling and ensure
added a new option ` withDashArguments ` in ` TestCommand. java ` and a corresponding test in ` ExternalTestRunnerIntegrationTest. java
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enhance functionality by allowing deduplication of Solr documents based on
[ flink ] [ table - planner ] use flink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest. java to ensure that the database is cleared before further operations
fixed display of progress bar in r feed reader
added a condition to check if the parent file exists before proceeding to ensure that the code only proceeds if the parent file exists
added methods to handle output streams in IOUtils to ensure proper resource management and prevent potential memory leaks
updated output formatting in JavaBuild. java to include carriage return and line breaks to improve readability and consistency in output formatting
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` getDotsPerPoint `
updated the ` apply ` method in ` CustomQueryFilterFactory ` to modify the ` apply ` method to include a ` final ` string and handle
camel - core : apply default port to route that don't have any port.
updated SnmpTargetHandler to check if the handler is initialized before updating status to ensure that the status reflects the initialization state of the ThingHandler
instructor : only allow instructor with submit privileges in the list
added @ Incubating annotation to AvailableSettings. java to indicate that the class is outdated and should not be used
refactor path extraction logic in FileResolverImpl. java and add a new test case in WarFileResolverTest. java to improve robustness
updated log message to include docstores in newFlushedSize to improve clarity on the purpose of the flushed size in the application
use unlocalized name instead of block. dirt. dirt. func _ 149739 _ a ( ) in examplemod.
updated whitespace handling in ImageProcessor. java to improve code readability and maintainability
updated the lock calculation in FeedRefreshUpdater to multiply the number of threads by 1000 to improve thread safety by allowing more time for locks
updated the method call from ` deserializeFrom ( buffer ) ` to ` exactSearch ` in ` TsFileSequenceReader. java ` and
removed the ` DateFormat dateFormat ` parameter from the ` makeResultFromDelimitedString ` method to simplify method signature and improve code readability
added preferred size adjustments for the FList pane in NavigationShareTab. java to improve UI responsiveness by adjusting the preferred size of
replaced ` OffsetAttribute ` with ` State ` in ` BeiderMorseFilter ` and added a test for custom attributes in ` TestBe
refactor Upnp - related classes to improve code organization to enhance maintainability and readability of the codebase
fix a crash when lens warp be place at a block position.
added a new test factory method for JSON serialization in JsonTest. java to improve test coverage and ensure proper serialization of dynamic test cases
refactor MutableContextDataSupplier class to improve code readability and maintainability
changed exception handling from a generic Exception to a Throwable and added a warning log for loading issues to improve error handling and provide more informative feedback
updated KubernetesMockServer constructor to use HTTPS instead of a hardcoded value to enhance security by allowing HTTPS connections
fix : use stamp for unary math intrinsification
updated HTTP response status codes and headers in DefaultServlet and DefaultServletTest to ensure proper handling of HTTP methods and improve test accuracy
tika - 4892 -- use locale. us for decimalformat
updated exception handling in ShowFileRequestHandler to return an exception instead of throwing an exception to improve error handling and provide clearer feedback on 404 errors
added handling for InvocationTargetException in ReflectorClassWriter to improve error management by ensuring proper exception handling
added clamp method to the Vector class and its implementation in the Vector2 class to enhance vector manipulation by allowing clamping between min and max values
added imports and modified token creation logic in ChainedTokenGranter. java to enhance token handling by ensuring requested scopes are set correctly
refactor BC _ instanceof to improve code readability to enhance maintainability and facilitate future updates
replaced the setSaveFlags method with a static final Logger instance to improve logging consistency and maintainability
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test reliability and maintainability by using
hhh - 14611399 - nativequery return type be now basic domain type
added caching mechanism for font anti - aliasing in SunLayoutEngine to improve performance by reducing overhead associated with font anti - aliasing
fix : use intarraylist instead of intbigarray
danielwagnerhall for ie compatibility
[ hotfix ] fix checkstyle violation in brokerrequestutils
refactor instance management in InjectorBuilderImpl to use a unified map to improve clarity and maintainability of the code
updated method calls to use ` buildTarget. getBasePath ( ) ` instead of ` cell. getBuckConfigView ( ParserConfig. class
added null check for the'val'variable before parsing to avoid potential NullPointerExceptions when'val'is null
re - initialize keep - alive manager to prevent npe.
changed DEFAULT _ LOAD _ FACTOR from float to double in IntHashSet. java to improve performance by avoiding unnecessary floating - point calculations
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` and updated ` Vectorizer ` and ` PPTFOperator `
updated package names from ` com. google. zxing ` to ` com. google. zxing. client. j2se
refactor conditional checks for vertical bar layout in OverviewState. java to improve code readability and maintainability
added JPA entity annotation to BaseActivityEventEntity to enable persistence and retrieval of activity events
added tracing sections to various classes to improve debugging and monitoring of launcher interactions
added a new file ` InvalidOptions. java ` to handle invalid options to improve error handling and provide clearer usage instructions for options
added logging for inconsistent displays in DisplayController to improve debugging and error handling for display state mismatches
refactor getClientIdAndClientSecret method to use OAuth20Utils for client ID and client secret retrieval to improve code organization and maintainability by central
changed the value of ` _ unwrapServletException ` from false to true in both ` ErrorPageErrorHandler ` and ` AsyncContextTest ` to
added handling for status assignment in PackageUpdatedTask to ensure proper status assignment based on input conditions
camel - seda : default unbounded queue size should be 1000, not 1000.
add batchupdatestart ( ) and batchupdateend ( ) to app
added HttpClient configuration handling in ThirdEyeApplication to enhance the application's ability to configure HTTP client settings
added getSort ( ) method to JobInstanceFetchRequest and updated JpaJobPersistenceImpl to include it to enhance functionality by allowing sorting in job instances
updated the CryptoFacilitiesTradeService to use a CurrencyPair for canceling cryptocurrency orders to improve error handling and maintain consistency in currency
make sure keyboard be hide when user click on algebra view
make memmove ( ) portable to llvm
refactor method signatures and formatting in ` BindLdapAuthenticationHandler. java ` and ` ResolverTestConfig. java ` to improve code readability and maintain
mondrian : add block tooltip to tool menu
updated DefaultDateTypeAdapter to accept a timeStyle parameter across multiple classes to enhance flexibility in date formatting based on the specified time style
updated playerSet string formatting in ListCommand. java to improve clarity and consistency in output formatting
added a check for empty collections in the List class to ensure proper handling of empty collections
added error handling for CommandException in ParametricCallable. java to improve robustness by ensuring proper exception handling
modified the getLikeExpression method to include an additional parameter for expression type to enhance expression evaluation based on whether the expression is like or not
added start and stop methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to enhance lifecycle management for stream suppliers
modified the ` runChild ` method to set default locale based on available locales to ensure consistent locale handling across different locales
add license header to license header
refactor context handler initialization into a separate method to improve code readability and maintainability
( chore ) camel - osgi : added test to verify that camel - test - blueprint don't start camel
remove substring ( 0, 31 ) from assertion in testexecutestreamcommand
modified the ` returnTypeSubstitutable ` and ` resultSubtype ` methods to include a ` Warner ` parameter to simplify the method signature and
added support for different throttle types in the TestExecutor class to enable flexible processing of character - based processing
replaced pixel assignment with direct assignment in ColorBleedEffect. java and added a conditional check in SpriteBatch. java to improve code clarity
refactor annotations in Annotation. java and AnnotatedElement. java to improve code clarity and maintainability
added a new interface ` Model ` in the ` org. apache. poi. hssf. model ` package and modified ` Sheet `
( chore ) camel - core - optimize filter pattern for camel - http4
added a ` clearEntityManager ` parameter to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to allow configuration of the entity manager
added null checks for ` info ` in multiple classes to prevent potential ` NullPointerException ` during shortcut addition
coremapnodepatterntrigger : add a boolean parameter to the collectionValuedmap constructor.
updated host and exchange name from " BTC - e " to " Wex " in WexExchange. java to align exchange specifications with
added null checks before processing column readers and tree readers in OrcEncodedDataConsumer and EncodedTreeReaderFactory to enhance code stability by avoiding null pointer exceptions
added null check for files in the SegmentInfos class and introduced a test for opening a reader after deletion in TestIndexReader to ensure robust error
updated date format in HSearchSortHelperImpl and refactored FhirResourceDaoR4SearchWithElasticSearchIT to improve
refactor BigDecimal calculation to use a variable for clarity to improve code readability and maintainability
updated limit check from " limit < 1 " to " limit < = 0 " in RangeInputStream and RangeReader to ensure proper handling of negative
camel - 16400 : camel - core - routes - configurer now print duration of route collector.
[ hls ] fix initialstarttimeUs calculation in hlchunksource
updated test classes to use LuceneTestCase instead of TestCase to improve test organization and align with the current testing framework
[ hotfix ] [ test ] fix statefuloperatortest failure
remove null check before setting bitmap shader shift in Area and Line classes to simplify code and improve readability by avoiding unnecessary null checks
removed dbExists ( ) method from Blockchain class and updated BlockchainTest to validate database existence to improve code clarity and ensure proper handling of
trim whitespace from the group value in SQLPlusSupport. java to ensure consistent parsing of SQL strings without leading or trailing spaces
set the socket as - as - async to false in Http11AprProtocol. java to ensure that the socket is not marked as as as
docksplitpanew : don't set divider location if it's the same value
added HEALTHCHECK _ OK _ CALLS and HEALTHCHECK _ BAD _ CALLS metrics and updated checkHealthLegacy method to
set the visibility of sharedAvatars view to GONE to improve user interface by hiding the shared avatars
mebis : use @ source instead of @ clientbundle. source ( ` ` org / geogebra / web / resources / sc
[ java ] use ` < = args. length ` instead of ` > = args. length `
added logging capability to handle command execution based on log level to enhance debugging capabilities by providing more granular control over command execution
replaced CountDownLatch with assertWaitUntil in EventBusTracingTestBase. java to improve test reliability by ensuring finished spans are asserted
refactor QueryParser to use Locale. getDefault ( ) instead of Locale. getDefault ( ) to simplify locale handling and improve code clarity
fix duplicate entry in entrycustomizationdialog
allow betanodeconstraint to be add to ruleset.
add a new class OcspUnauthorized and modify OCSPResponse to handle unauthorized cases to improve code clarity and ensure proper handling of
added a volatile serverState variable and modified sleep logic in SSL. java to ensure proper server state management and prevent duplicate server failures
added support for tracking open connection counts in SourceCounter and related classes to improve monitoring and monitoring of connection states
make executionstrategy. execute ( ) public so that it can be reuse by other class.
refactor createDefaultJavaPackageFinder to return a set of sourceRoots instead of a single path to improve modularity and facilitate easier access to
changed the initialization of the Writer in ScriptExecutable. java to use PrintWriter for better performance and readability
[ hotfix ] use random uuid in filesourcetextlinesitcase
added handling for DataTable in JRubyStepDefinition to enable conversion from Cucumber's DataTable to JavaEmbedUtils
updated visibility settings and refactored API action parameters in SearchImagesRenderer and ApacheHttpClientMediaWikiApi to improve UI responsiveness by ensuring
refactor ReadSentimentDataset class to improve code readability and maintainability
updated error message formatting in FormulaParser. java to improve clarity of error messages for better debugging
added getter and setter methods for the bind address in WebSocketClient to enhance functionality by allowing configuration of the bind address
[ java ] delete aeron directory before close the clustered medium driver.
refactor WidgetGroup to streamline size setting logic to improve code readability and maintainability
changed sessionFixationAttribute check from equals to Boolean. valueOf to ensure proper handling of sessionFixationAttribute values
fix : start one channel lda when edge option be specify
simonstewart : make chromebinary more resilient to slow machine
added ` HttpMethod ` and ` httpRoute ` attributes to ` ClientResponseWrapper ` to enable flexible handling of HTTP requests
patch by brandonwilliams, review by jbellis for cassandra - 1373
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes, and added a new InvalidRenderIntentTest class to improve rendering intent
add check for'checked'attribute in feedback question form
added calls to ` PublicMethed. waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003. java
remove java. io. serializable from kafkarecord
added PGConnection import and modified connection instantiation in PooledConnectionImpl. java and added a test for PGConnection in BaseDataSourceTest. java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code clarity and maintainability
updated logging messages to provide clearer context about the absence of the token encryption secret to improve logging clarity for debugging purposes
removed the @ Deprecated annotation from Hazelcast. java to indicate that the class is outdated and should no longer be used
removed the requirement for UNLIMITED _ KEY _ JCE _ REQUIRED in hostParams and added a method to send the topology update event to
added support for reading and writing ` END _ OBJ ` in ` NamedListCodec ` to enhance functionality for handling empty lists in the NamedList
fix npe in assigncompletelyloitedpartitions when partition state be null
added schema inclusion rule to ApiExample to enhance schema crawling capabilities
updated the expected value in the assertion from 3. 0 to 7. 0 in StreamExpressionTest. java to ensure the test accurately reflect
fix for geometry with closed ring
added methods to retrieve the base name and dimension count from ConstantPool to enhance functionality by allowing retrieval of the base name and its dimension count
added methods to set debug evaluation output in HSSFFormulaEvaluator and XSSFFormulaEvaluator classes to facilitate easier debugging of formula evaluation results
[ refactor ] migrate test module to junit 5
updated ExoPlayerProfile instantiation and modified live TV preference check in PlaybackController to ensure proper handling of live TV playback preferences
added a return statement in DynamicStyleBar. java to ensure proper handling of return values in the code
added SLF4J Logger imports and logging statements in Utils. java to facilitate debugging and monitoring of database properties
refactor ReactiveAuthorizationManager class to improve code readability and maintainability
updated the condition to check for both object and boolean types to ensure proper handling of boolean values in type promotion
rename llvmstackframenuller class to avoid confusion
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add unit test for caffeine cache configuration
added a method to calculate bounding box based on vertex attributes to improve rendering accuracy by ensuring only valid vertex attributes are processed
add -- target - hash - function to specify how to compute target hash
refactor DefaultConfigurationProperties class to improve code readability and maintainability
added high light color and alpha settings in ListViewMultiChartActivity and modified highlight paint behavior in BarChart to improve visual quality of the chart by
added a new entry for the tmpPg in the pgPathPlanMap to ensure proper management of the PostgreSQL path plan
( chore ) camel - infinispan : fix checkstyle violation
added file lock handling and refactored artifact fetching logic in MavenDependencyResolver and MavenRoboSettingsTest to improve artifact management and ensure proper
added conditional shader definition for GL _ ES in SpriteBatch. java to ensure compatibility with newer OpenGL ES standards
hbase - 19836 moveservertorsgroup should use set instead of sortedsets ( chao )
added error handling and changed logging level from warn to debug in TagLibConfiguration. java to improve stability by avoiding unnecessary warnings during tld
updated version handling in CustomAnalyzer and added a new test for version awareness to improve accuracy and correctness of version analysis in custom analyzer
added a test to verify that the ` getPackageArchiveInfo ` method reads values from ` ShadowPackageManager ` to ensure that the package archive info
replaced direct method invocations with MethodUtil methods across multiple classes to enhance security by ensuring proper package access
added progress updates to GradleBuildService and modified progress listener implementation to enhance task and project configuration handling
douniaberrada : remove unnecessary synchronization in androidwebdriver
don't fail fast if initializationfailtimeout < 1000
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` class to simplify
changed the visibility of the ` isNative ` field from instance to transient and modified the ` addEntry ` method to use a transient field to
updated error message formatting in CEntryPointCallStubMethod. java to improve clarity and consistency in error reporting
rename ruleenablehandler to ruleenablementactionhandler to align with the new action system
updated access modifiers and formatting in multiple Java files to enhance code readability and maintain consistency in access modifiers
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of logged messages during authentication processes
[ hotfix ] fix typo in kafkaitfactorytest
added null check for the registrant repository in UsersPanel. java to improve robustness by handling potential null pointer exceptions
added support for font file extensions ". otf " and ". OTF " in font name checks to enhance compatibility with different font formats
refactor type comparison logic in AnnotationMatcher. java to improve clarity and maintainability of the code
change case from " OFF " to " SEVERE " in Grep. java to accurately reflect the severity level for better error handling
added conditional logging for debug logging in FaultTolerantChunkProcessor. java to improve performance by avoiding unnecessary string concatenation
mondrian : fix possible npe in mondrian.
added a check for ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` before calling ` onHomeIntent ( ) ` to ensure that
updated the maximum bitrate from 110 to 30 in PMS. java to increase the maximum bitrate for improved performance
removed the ` getOptions ( ) ` method from ` CommandLineParser. java ` to streamline the code by eliminating redundancy
trim whitespace from the return statement in MutableDatabaseProperty. java to ensure consistent formatting of the description string
updated the initialization of the ` outFilename ` variable in ` XOMParserTest. java ` to improve clarity and consistency in file path handling
remove process. pid ( ) from error logging in ProcessBesuNodeRunner. java to simplify error logging by directly using the process name
added getter methods for loaded music and sound in MusicLoader and SoundLoader classes to improve accessibility of loaded music and sound data
removed unused imports and simplified type assignment in OnBeanCondition. java to streamline code and improve readability
added ScreenRecordRule import and annotations in RequestPinItemTest. java to enable screen recording during test execution
disable lrPauseButton selection in CPUFeature and MemoryFeature classes to ensure lrPauseButton is only selected when it is not null
refactor preference management by replacing references to ` accountsPrefCategory ` with a single ` mAccountsPrefCategory ` variable to improve code clarity and maintain
fixed an issue where an unavailable presence would not be send to the server.
updated StringBuilder initialization logic in ObjectInputStream to ensure proper capacity allocation based on utflen
disable statsd export by default in integration test
refactor InterruptedException class to improve code readability and maintainability
refactor ServiceTicket class to improve code readability and maintainability
updated connection error handling in ConnectionCheckOperation. java to improve clarity and correctness of SSL connection checks
modified the conversion logic in ArgumentArrayMessageMapper to check for both String and Map types to ensure proper handling of string types and improve type conversion
updated expected status from isForbidden ( ) to isOk ( ) in ItemOwningCollectionUpdateRestControllerIT and SolrServiceCommunityCollectionItemFilter
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to sExemptOfPasscodeActivites to ensure that the activity
refactor : remove @ deprecated from patternparameterconfiguration
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check for ` image. getDrawable ( ) `
added JUnit @ Ignore annotation to TestPackedInts. java to temporarily disable the test due to known issue LUCENE - 4488
added null check for root and collection of components in the tabbed pane to avoid potential NullPointerExceptions when root is null
add a confusion matrix to testnenttagger and testclassifier
bug report : last _ sample _ ok - > last _ sample _ ok
added unit tests for retrieving and removing connected devices in the Bluetooth headset to ensure that the Bluetooth headset accurately reflects the state of
renamed the test method from " # autowire " to " # autowired " in PropertyBindingSupportTest. java to clarify the purpose of the
added " clone " and " finalize " methods to the ResultObjectProxy class to enhance functionality by allowing the removal of specific object methods
[ java ] avoid npe in integtestbiglinkedlist
make getinstancetest return an error code of not _ implemented
updated the service matching logic in the SamlIdPServicesManagerRegisteredServiceLocator class to ensure that the registered service matches the specified service ID
added a null check for getActivity ( ) before calling showStorageIssue ( ) to avoid potential NullPointerExceptions when accessing getActivity ( )
rename logger to be consistent with other logger variable
add getter and setter for ` stringType ` in ` DatabaseAdaptor ` and ` JDBCSessionDataStore ` to allow subclassing of ` stringType
updated UIMAUpdateRequestProcessorTest to include suggested category assertion and modified test method to improve test coverage and ensure consistency in language handling
refactor thread name handling in multiple classes to improve clarity and maintainability of thread names
refactor TaskletAdapter class to improve code readability and maintainability
drools - 22200 fix npe when use'will be null if negative '
updated texture map properties and modified the defaultEnabled assignment in SplashProgress. java to enhance texture map functionality and ensure proper rendering order
added tooltip functionality to the checkbox in RocketPanel to enhance user experience by providing context - sensitive help
replaced calls to ` owner. getTypes ( ). add ( e ) ` with ` owner. addType ( i ) ` in ` Enum
add a mnemonic to the retarget action ( # 3957 )
apps : use template instead of simple label
changed the method call from ` intValue ( ) ` to ` doubleValue ( ) ` in ` BindingConstants. java ` to improve clarity and consistency
bug fix : add context and date to sscmhistoryparser
added a new parameter ` isAdmin ` to the ` createUser ` method and its implementation to allow users to indicate whether the user is an admin
added null checks for indexedWriteMethod and updated conditional checks in Introspector and added a new test case in Test6723447 to ensure proper
updated debug log messages to use placeholder syntax to improve logging clarity and reduce potential null pointer exceptions
updated method names and formatting in Context and Request classes to improve clarity and consistency in method naming
fix npe in mixinitembuilder. setcapabilities ( )
[ hotfix ] fix a typo in lifecycleutilstest
added checks for smart contract creation in Wallet and GetContractServlet to ensure contract creation only accounts with specified contract types
added package - info. java files for the com. ibm. dtfj. image and com. ibm. dtfj. runtime
refactor the add method in DocumentsWriterDeleteQueue to use a while loop for atomic operations to improve performance by avoiding unnecessary synchronization when adding nodes
added duplicate handling for JavaFileObject files in JavadocTool. java and modified test arguments in T7091528. java to improve robustness by
changed the default value of STRIP _ IPV6 from " true " to " false " in HostPort. java to ensure consistent behavior
added support for adding user parameters in the LoginServerTokenEndpointFilter to enhance security by allowing users to add their own credentials
updated language checks to include " c " alongside " CPP _ KEY " in LanguageFactory to ensure proper handling of language keys in the
replaced usage of ` LinkedBlockingQueue ` with a custom ` MoreExecutors ` class to improve code maintainability and reduce dependency on external libraries
updated cache headers in FormAuthenticator and added assertions in ConstraintTest to improve cache handling and ensure proper response formatting
added exception message to error logging to improve debugging by providing more context on error messages
updated HSSFTests to use TestAreaReference, TestCellReference, TestRangeAddress, and TestSheetReferences instead of AllHSSFUtil
refactor FetchHTTP2Test, FetchHTTPTest, and FetchHTTPTestBase classes to improve code organization and maintainability
updated classDirectory assignment to handle null output cases to improve robustness by avoiding potential NullPointerExceptions
added access control priority settings for before and after resolving URIs in Java2DRenderer to improve resource management by priorizing access control
added exception handling for drawing graphics in TestTriggerCoverage. java to ensure that JDK sometimes fails to build due to ArrayIndexOutOfBoundsException
changed the visibility of the ` mbean ` variable and modified the ` main ` method to throw an ` Exception ` to improve thread safety and ensure
added a check for empty comments in the TabsAndIndentsVisitor class to ensure that comments are only included when they are not empty
updated assertions in TestTriggerIntegration to use greater than expected values to improve accuracy of rate assertions in tests
replaced equals ( ) with equalsIgnoreCase ( ) in multiple classes to ensure case - insensitive comparison for change sets
modified the ` getString ` method in ` ShadowBundle ` to handle null values to improve robustness by ensuring a default value is returned when
added locale support for date and time formatting in TweetActivity to ensure correct formatting based on user - defined locale settings
added a check for empty connections in the StandardProcessSession class to ensure that the method returns an empty list when there are no connections available
refactor focus handling by extracting focus logic into a separate method to improve code readability and maintainability by encapsulating focus logic
don't use ` ` file : / /'' in classpath for window
make coordmatrix # solve thread safe
int - 193 added import for org. springframework. integration. message
refactor SQL query construction in PostgresConnector and TaskAttempt classes to use join methods to improve code readability and maintainability by centralizing join logic
updated filter selection logic in AquaFileChooserUI. java to improve user experience by ensuring only valid file filters are processed
refactored loop structure and exception handling in P2PTransportManager. java to improve code readability and maintainability
updated the ` toString ( ) ` method in ` ArrayPtg ` and added a test case in ` TestArrayPtg ` to improve
updated import statements in PGtokenizerTest. java to use specific assertions from JUnit Jupiter API
refactor variable handling in Java2TypeScriptTranslator to improve clarity and correctness in identifying final variables
updated sequence creation logic in AddAutoIncrementChange. java to ensure proper handling of auto - increment columns in PostgreSQL
updated byte reading logic to handle negative values and modified UTF - 8 encoding handling to improve data integrity by preventing invalid byte values
updated assertions in ImageParserTest to check for " VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " dimensions to ensure accurate metadata retrieval
updated method call from ` getParent ( ) ` to ` getParent ( ) ` to ensure proper retrieval of the parent component
updated import statements and formatting in multiple Java files to improve code readability and maintain consistency in formatting
replace engine _ finish ( ) with engine _ free ( ) and call engine _ init ( )
added iteration methods and updated event firing logic across multiple classes to enhance event handling for iteration events
fixed memory leak in streaming file upload
added a call to deleteLogs ( ) in TestRecovery. java to ensure that logs are properly deleted during recovery
modified URL loading logic in BrowserActivity to conditionally start the activity based on the presence of " twitter : / / " to improve user experience by
added a HeliosClient instance and awaitHostStatus method in DeploymentGroupTest. java to ensure that the test environment is ready before proceeding
changed the logResult parameter from false to true in VisibilityController. java to enable the logging of listing labels for improved user experience
increase ` MaxAutoRetries ` from 0 to 25 in ` RestTemplateRetryTests. java ` to improve test reliability by allowing more attempts for
removed debug print statement from TranslatorSupportTest. java and added multiple @ Override annotations in StandardTypeMapperComponent. java to clean up code
added support for fraction resources in the ResourceLoader and Converter classes to enhance resource loading capabilities for fractions in the application
removed conditional check for file write confirmation to streamline code by eliminating unnecessary checks
added null assertions for tagGroupId and tagArtifactId in findNewerDependencyVersion method to ensure that dependency resolution correctly handles null values

from user in javadocs
refactor TestFuzzPreLoop class to improve code readability and maintainability
added validation to ensure f0 is non - negative to prevent negative values from being processed
added null checks for pkColumn and fkColumn before adding them to foreignKey to avoid potential NullPointerExceptions during foreign key retrieval
remove clearencoders from inputbuffer and make it thread - safe
added checks for empty screen preferences in Workspace. java to ensure proper handling of empty screen scenarios
added a warning log message indicating the use of cucumber - needle as deprecated to inform users to recommend using cucumber - cdi2 or cucumber -
refactor theme handling in ShadowThemeTest and ShadowArscAssetManager to improve consistency and maintainability of the code
updated error messages to use ` Arrays. toString ( expected ) ` instead of ` expected ` to improve clarity and consistency in error reporting
no effective change - remove dbmigration from history2
modified property handling in ScriptObject to support both GETPROTO and SETPROTOCHECK functions to enhance compatibility with different JavaScript implementations
updated shuffle method to include a random seed to enhance randomness in the shuffle process
updated displayName assignment based on userName comparison to improve accuracy in displaying user information based on the provided shareWith string
updated the path format in CookieRetrievingCookieGenerator to use a default if blank to ensure that the generated cookie path defaults to a default
[ hotfix ] fix checkstyle violation in java. lang. model
[ iotdb - 2595 ] fix incorrect variable name in abstractcacheprovider
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4681 - compare page number
added a condition to check if ` TabbingManager. focusedWidget ` is equal to the current instance to ensure proper handling of the focused widget
fix checkstyle issue in soundutil. java
updated ApplePackageDescription and AbstractKnownBuildRuleTypes to include AppleCxxPlatformsProvider to enhance functionality by integrating Apple C++ platform
fix flaky test : ` ` show ololo FROM ololoed FORMAT TabSeparatedWithNamesAndTypes''
renamed the method ` onConnect ` to ` onAccept ` in both ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory `
updated the EnglishPTBTreebankCorrector class to improve the accuracy of the phrase reebank algorithm
added a new file TestGetLoggerNPE. java to test logger behavior to ensure that logger methods are correctly implemented and handle potential NullPointerException
added a getter method for the ` data ` variable in ` PathSharingContext ` and updated references in various classes to improve thread safety and
don't throw espressoexception when access field of non - static object.
added support for " NEXT VALUE FOR " in the NextValExpression class to enhance flexibility in expression parsing
improve error message when access of resource bundle that be not pre - cached
added a threshold for removing pending writes in BoundedLocalCache to ensure that pending writes do not exceed the write buffer limit
added " Leverage _ Level " parameter to QuoineExchange and modified order direction handling in QuoineNewMarginOrderRequest to
added boundInitialization method to PropertyDescriptor and created Test7192955 class for testing bean binding to ensure that bound properties are properly validated and
updated LwjglApplicationConfiguration and LwjglGraphics to use an interface for setting display modes to improve flexibility in managing display modes by allowing
added null check for buttonsAwatingRelease in Tabs. java to ensure proper handling of null values during component changes
[ scene2d. ui ] don't set wrap width if it's empty
updated error message formatting in XSLTErrorResources. java to improve clarity and consistency in error reporting
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
simonstewart : use string. format ( string, string... ) instead of string +'\''
removed unnecessary namespace context retrieval in StaxXmlPullParser. java to simplify code and improve readability by directly using the namespace context
added support for nested joins in multiple test classes to ensure proper configuration behavior for nested joins
don't allow normal account to be specify by root admin only
added JavacFileManager caching in SourceFileManager and modified CompletionTaskProcesor constructor to include a cursor parameter to enhance performance by caching class
added Hive configuration variables for METASTOREURIS, HIVE _ AUTHORIZATION _ MANAGER, and SQLStdHiveAuthorizerFactory
[ beam - 11572 ] add lint rule to avoid assert . assertthat usage
use util. createhandler ( ) instead of new handler ( )
fix calculation of offsetmemsize in symbolmapreader.
removed debug print statements from TermFilterTest. java to clean up the code and improve readability
removed the Reflection class and updated the TypeConverters package structure to simplify the codebase and improve maintainability
refactor threadlessexecutor to remove dependency on sharedexecutor
removed unnecessary try - catch block in DateTimeFormatter. java to simplify error handling and improve code readability
rename chunk _ length to chunk _ length _ kb in CompressionParameters. java to improve clarity and consistency in naming
added a new case WILDCARD in Types. java and created a new class T7034495. java with generic methods to
replaced the do - while loop with a while loop in LotsOfEvents. java to improve code readability and maintainability
bug fix in transclusiondeciderule ( thanks to jason dere )
remove ` ` micronaut version'' output
added assertions to validate the functionality of the Print _ Area formula in the HSSFEvaluationWorkbook to ensure proper functionality and correctness of the Print _
modified the creation of MindIcon to handle leading slashes correctly to ensure that the icon displays correctly when the name starts with a slash
modified onHomeIntent method to accept a boolean parameter to enhance flexibility in handling home intents
refactor CxxBuckConfig to use a local variable for preferDependencyTree to improve code readability and maintainability
added ` showDetails ` method across multiple activities and modified ` FileDetailFragment ` to accept a ` Account ` parameter to enhance functionality by allowing
updated function names from " $ apply " to " apply " across multiple files to ensure consistency in function naming conventions
added capacity checks and a method to randomize the state of a byte in the MinimalEncoder to ensure that the byte array size does not exceed
added " - " and " - " flags to string concatenation in SourceBuilder. java to improve clarity and consistency in output formatting
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter reflects changes in the UI
removed the ` setDefaultWALSyncMode ` method from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
refactor type checks in RemoveJavaDependenciesAdapter and add tests in Collections to improve type safety and validate ArrayList behavior
( chore ) camel - s3 : remove unused method in defaults3crtasyncclient
updated error message in ` doDudPasswordTest ` from " DEF length 110 object truncated by 28 " to " ACTUAL stream - out
improve assertion message in HazelcastTestSupport to include the collection's found content to enhance debugging by providing more context on the expected size of the
don't throw an exception if the graph don't contain a condition
mow - 388 : fix npe when load pen image
refactor SQLXML class to improve code readability and maintainability
added a limit parameter to the getOrderBook method in YoBit classes to allow users to specify a limit on the order book being processed
rename ` GotWrongOOMEException ` to ` HeapOOMEException ` across the codebase
added StreamReadConstraints configuration in StandardDataFlow. java to ensure proper handling of stream read constraints
updated retrieval of engines from configuration to a default string to improve flexibility in retrieving engines from the configuration
rename ` FullIterator ` to ` WheelIterator ` and update related code formatting to improve clarity and consistency in naming conventions
improve error message when bug pattern can not be find
increase wait timeout in localchunkprovidertest
changed the visibility of the menu item from true to false to ensure the menu reflects the current state of the uncomplete checklists
updated DefaultResultSetHandler to resolve discriminated result maps and added Contract class to ensure correct handling of discriminated results in constructor arguments
added null checks for defaultHome and mOtherHomeAppUpdateReceiver in OverviewComponentObserver. java to ensure proper handling of null values and
removed unused import and annotation for VertxGen in PumpImpl. java to streamline code by eliminating unnecessary imports
removed unnecessary casting of ` ( ( FileDisplayActivity ) mContainerActivity ) ` to ` ( ( FileDisplayActivity ) mContainerActivity )
trim whitespace from tokens in ConfigAttributeEditor and add a test for trimming trailing and leading spaces in ConfigAttributeEditorTests to ensure consistent attribute
updated ClassUsingAnotherAuxiliary and SelfClassWithAuxiliary to improve code clarity and maintainability
make singlemodul reference public and add getsinglemodule ( ) method to dynamichub
modified the case handling for'r'in DatabaseMetaData to set relKind based on the presence of " pg _ " prefix to ensure that
[ java ] deprecate ` ` java. lang. deprecate ` ` java. lang. deprecated ` ` int ` `
updated the protocol version from " rqst " to " rqst " in ThriftHiveMetastore. java to ensure consistency in protocol implementation
added a new module - info. java file for the core module to define module exports and dependencies for better modularity
added flushing and interested state checks in SslConnection. java to ensure proper handling of encrypted output during flushing operations
default to log4j * * * * * * * * * * *
updated ExecutionEnvironment to include a check for client VM and modified TestHelper to handle cases where the test relies on the server VM to improve test
rename methods in ExecutableFindOperation, MongoOperations, and ReactiveMongoOperations to improve clarity and consistency in naming conventions
updated import statement from " org. postgresql. ssl. LibPQFactory " to " org. postgresql. ssl. LibPQFactory " to
disable the currently failing test due to a known issue in interprocess semaphore edge
added sorting functionality for theme keys in EditableResources. java to ensure consistent ordering and maintain consistent ordering of resource names
added a new file ` OSvTerminal. java ` and modified ` TerminalFactory. java ` to support for OSV terminal functionality
added support for ". grs " suffix in ClassType to enhance compatibility with additional gr - related packages
replaced HashMap with TreeMap in DrillTestWrapper. java to improve order handling for vector operations
added a condition to check if'i'is less than the size of'names'and'values'in XPathEntityProcessor to ensure
refactor WebSocketPolicy class to improve code readability and maintainability
replaced static boolean flags with instance methods in ShadowTelephonyManager and ShadowWifiManager to simplify code and improve encapsulation
npe in standardmessageresolver if context be null.
fix for asmutil. newinstance ( )
add audible interface to log sensitive data
[ tadozone ] fix npe in airconditioningzone setting
don't allow abstract method in bean definition inject processor
camel - 4687 : allow http proxy to be configure via system property
updated the maximum encoding version from " 1.0 " to " 1.1 " to ensure compatibility with the latest version of the application
added jdkSerialFilter ( ) method to System class to enhance functionality for serial filtering
( chore ) camel - base on user forum issue : http : / / issues. apache. org / activemq / browse / amq
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in ` StaggeredWorkspaceAnim. java ` and `
updated ` ensureRealtimeClusterIsSetUp ` method to accept a variable ` rawRealtimeTableConfig ` to enhance config handling by applying environment
refactor error handling in ValidationReport and DisallowValidator classes to improve clarity and maintainability of error reporting
refactor inline QSB handling in InvariantDeviceProfile. java to improve clarity and maintainability of the code
updated ` createClassPath ` method to include exception handling and URL decoding to improve robustness by ensuring proper exception handling and decoding of URLs
update @ Given annotation to accept'(. * )'to a method with int and Car as parameters to improve clarity and accuracy in parameter
added null checks for ` prop ` and ` image ` in ` mmm Toolkit. java ` and ` pppGraphicsJava2D.
replaced hardcoded timeout values with a constant timeoutMs in FaultToleranceTest. java to improve flexibility and maintainability of timeout values
updated package - info. java files for mmm and ppp packages to improve clarity and maintainability of package documentation
added a method to set the Docker image URL to enhance image configuration flexibility
[ drools - 7 ] make sure to call system. gc ( ) outside the try / catch block
refactor multiple classes including AdditionalAnswers, AnswerFunctionalInterfaces, and InvocationOnMock to improve code clarity and maintainability
replaced ` createHardLink ( ) ` with ` copyFile ( ) ` in ` SnapshotTaker. java ` to improve error handling when copying
renamed methods from ` appendDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in naming conventions
[ pytorch ] check device before call todevice ( )
added a type check before visiting XML nodes in Autodetect. java to ensure that only Xml. Document instances are processed
replaced ` InstrumentationTestCase ` with ` @ RunWith ( AndroidJUnit4. class ) ` in ` NotesHelperTest `, ` Rem
added GasLimitRule and ParentGasLimitRule alongside existing ProofOfWorkRule and DifficultyRule to enhance rule management by
changed access modifier of setupData method from public to private to restrict access to setupData method for better encapsulation
renamed the variable ` autocommit ` to ` runInTransaction ` in multiple classes to improve clarity and consistency in variable naming
[ triple ] don't close deframer if it ben't initialize
[ hotfix ] [ doc ] use site. baseurl in restart strategy option
added a new test method ` testIssue154 ` to ` SelectTest. java ` to verify SQL parsing and deparsing of discount data
refactor Common class for improved readability to enhance maintainability and facilitate future updates
refactor app launching logic to use a context layer for better resource management to improve reliability and maintainability of the app launch process
[ hotfix ] [ test ] fix typo in streamexecdeduplicate
( chore ) camel - kafka : log error when send kafka message to topic
added persistent property accessor factory method and immutable check in SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty to enhance property management and ensure im
modified the return type of the ` setCoord ` method in ` GeoCoordSys1D ` and ` GeoSegment3D ` classes to
added gesture scrolling logging and velocity checks in AskGestureEventsListener. java to improve debugging and traceability during gesture interactions
modified comparison logic in NGramEstimator to include key - based sorting to improve accuracy of comparison by considering both values and keys
updated import statements from ` cucumber. runtime. ScenarioScoped ` to ` io. cucumber. core. runtime ` in multiple Java files to align
updated method calls in StatsLogCompatManager to retrieve folder icon properties to enhance accuracy of folder icon representation
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils. java ` to ensure
added a new file TestSkeletonPredicates. java to implement skeleton predicate testing in the compiler
refactor SelectionHighlighter to improve handler management and equality checks to enhance code readability and maintainability while ensuring proper object comparison
added a new StringResultConverter class to handle string conversions based on the default character set
replaced the usage of ` @ DisabledIfSystemProperty ` with ` @ Disabled ` in multiple test classes to clarify that these tests are
modified the condition to check for console execution in JansiWinSysTerminal. java to ensure that the console does not hang indefinitely when
added null checks for ` buffer ` and ` loadMethod ` methods in ` BufferUtils. java ` to ensure proper buffer management and prevent potential
updated the assertion in TestSolrDiscoveryProperties to compare " data / " with " data " using File. separator to ensure compatibility with different operating
updated OS detection from " linux " to " mac " in AutoUpdaterServerProperties. java to ensure compatibility with macOS environments
changed lockFile to lockName in FSDirectory and Lock classes to improve clarity and consistency in the locking mechanism
updated the variable name from " android. widget. TextView " to " allApps " in Overview. java to improve clarity and consistency in
refactor ClientDatagramEndPoint to use ClientDatagramEndPoint's instance variable to improve code readability and maintainability
updated the SQL order clause in the GET _ STEP _ EXECUTIONS string to ensure that the execution list is sorted by STEP _ EXECUTION
updated button handling in LwjglInput. java to ignore unknown buttons to improve user experience by ignoring unknown buttons
added approval and rejection tests for claimed tasks in TaskRestRepositoriesIT. java to ensure proper handling of approved and rejected tasks in the workflow
replaced logger instantiation with a static final logger in multiple classes to improve logging consistency and maintainability
removed minimumUTES from the expiration time in ` SsoAccessTokenProvider ` and updated method visibility in ` SsoAccessTokenProviderTest ` to simplify
[ geos - 8470 ] skip test that fail on window
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gmt - java to 2.16. 0
rearranged conditional checks for EXIT _ ON _ CLOSE operation in JFrame. java to improve code readability and maintainability
replaced PMS. get ( ). getMediaDatabase ( ) with a try - with - resources statement to ensure proper resource management and prevent potential
replaced references to ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent. java ` to improve consistency and align with the updated
refactor file and folder output formatting in OCFileListFragment. java to improve readability and maintainability of the code
change default value of HashKnownHosts from " yes " to " no " in ScpServerTestSupport. java and modify loadKeys method
update SourceVersion. java for improved version tracking to enhance accuracy and maintainability of source versioning
added a new test class ` ThreadFactoryTest ` to verify the behavior of the thread factory in a concurrent environment
updated getLockPeriod method to accept dynamicPropertiesStore and adjusted expiration logic to enhance flexibility in managing lock periods based on dynamic properties
added a new TicketModel instance to the EditTicketPage to facilitate the creation and management of the TicketModel within the application
changed the default value of ENABLE _ PREDICTION _ DISMISS from false to true to allow the option to dimiss apps from the predicted
updated constructors in various assertion classes to include Class parameter to ensure proper initialization of assertions with specific class types
updated menu constants and added quote menu functionality in TweetActivity to enhance user experience by allowing quote functionality in the app
remove duplicate call to interruptlock. lock ( ) in jmeterthread.
switch to shouldusebypass instead of use passthrough
added a conditional check for the result before offering failure and closing the consumer to ensure that failure messages are only sent when the result
updated German and French error messages in ` XSLTErrorResources _ de. java ` and ` XSLTErrorResources _ fr. java `
added @ ThreadSafe annotation to CheckpointsCleaner. java to ensure thread safety when accessing shared resources
remove rx. subscriptions. subscription from mockrestadapter
refactor error handling in ComponentPresetManager. java to improve readability and maintainability of the code
added support for unique column names in Hive result set tests to ensure unique column names are handled correctly in the test cases
mary : make sure we update the voice input text when we change the first time.
added session validity check and updated exception handling in SessionHandlerTest to ensure session validity and improve error handling
deleted the ExceptionHelper. java file to remove unused code to streamline the codebase
updated the key pair generator's seed length from 256 to 255 to enhance security by using a stronger random seed
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3. java to ensure consistent handling of postings formats in
[ hotfix ] [ checkpoint ] log empty checkpoint range
added support for " RSA / ECB / OAEPPadding " algorithm parameters in OperatorHelper. java to ensure proper handling of algorithm parameters
updated platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with the
updated exception handling in DebugSourcesResolver. java to improve robustness by catching SecurityException during source resolution
removed unnecessary OS check from return statements in AbstractTest. java to streamline code for better readability and maintainability
updated error handling in FileUploadUtils and ControllerConf to include exception details to improve error reporting and ensure proper handling of exceptions during file uploads
replace deprecate bufferutils. newbytebuffer with bufferutils. newunsafebytebuffer
changed the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable pipeline download handling in the application
replaced ` Calendar. DST _ OFFSET ` with ` Calendar. DST _ OFFSET ` in ` SimpleDateFormat. java ` and added a new test
replaced references to ` mRollo. mState ` with a local variable ` iconCount ` in ` AllAppsView. java ` to improve
cloudstack - 7143 : don't add default router to the list of hypervisors
refactor StringBuffer implementation to improve performance and readability of the code
set rule uid in the rule object to ensure that the rule's uid is properly set before use
added a null check for the listener before unsubscribing to prevent potential NullPointerException when the listener is not initialized
added a new property ` PRETTY _ PRINT ` in ` JoltTransformJSON ` to apply pretty printing formatting to the output of the
add access _ table constant to instrumentbranchesphase.
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to improve clarity of failure messages
move dorun ( ) into the dorun ( ) method of tcptransport and xmpptransport.
refactor multiple Java classes for improved consistency to enhance maintainability and readability of the codebase
updated method signatures in AmbariManagementControllerImpl. java to include effectiveClusterVersion and isUpgradeSuspended parameters to enhance functionality by allowing for
chore ( regen ) : update license year for generated file
removed the use of writer. getFields ( ) to streamline the code by eliminating unnecessary field retrieval
added a constructor to OAuthProperties that sets the encryption and signing key sizes to enhance encryption and signing functionality in the application
hbase - 22007 use getcolumnfamilycount ( ) instead of length ( )
replaced ` AllowedResourceAliasChecker ` with a lambda expression in ` SampleWebJspApplicationTests. java ` to simplify alias checking by using
refactor ObjectInputStream, ObjectOutputStream, ObjectStreamClass, Serializable, and package - info files to improve code readability and maintainability
added a reset method to the Cluster interface and invoked it in ClusteredServiceAgent to ensure consistent idle strategy behavior during cluster operations
increment currentChunkID before creating a new SequenceFile Writer to ensure proper tracking of the current chunk ID during writing
added abstractjobexecutor to allow jobexecutionlistener to be override by abstractjobexecutor
replaced a single replay call with a variable assignment and added a break statement to improve code clarity and ensure proper flow control
refactor variable names from " hugeStaticBase " to " staticBase " in HugeResourceTest. java to improve clarity and consistency in variable
added service ID retrieval logic in AbstractConsulClient to ensure proper handling of service IDs based on discovery settings
replaced ` Float. floatToIntBits ( ( float ) Math. random ( ) ) ` with ` SecureRandom ( ). nextInt ( ) `
print more detailed error message when runtime compilation fails
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler. java to streamline code by eliminating unnecessary calculations
added support for abstract methods in CallsRealMethods and createdMocksWithConstructorTest to ensure correct behavior for abstract methods in Mockito
refactor checkPackageAccess method to accept Class as a parameter to enhance security by restricting access to specific classes
updated ContextPathPluginTest to extend AbstractPluginDataInit and added setup and cleanup methods to improve test structure and ensure proper setup and cleanup of
updated font handling and improved text formatting in ContributionListPanel. java to enhance user experience by using a bold font
added support for the " hasTIS " request in multiple handler classes to enhance testing capabilities by allowing touch interaction requests
added a call to ` Mutex. EVENT. writeAccess ` in ` ConnectAction. java ` to ensure proper handling of access events during
replace ` ImmutableMap < String, ShowOptions > ` with ` ImmutableMap < BuildTarget, ShowOptions > ` in ` TargetsCommand. java `
added new files for various internal classes in the javaemul package to enhance code organization and maintainability
added handling for'home'and'end'keys in the terminal mapping to ensure proper navigation and display of home and end commands
removed synchronization around retrieving connected plots to simplify code and improve performance by eliminating unnecessary synchronization
refactor intent creation in Utilities. java to use Intent. createChooser ( ) for sharing activities to improve code readability and maintainability by simplifying
changed the access modifier of the Roster constructor from public to package - private to allow access to the Roster class from other packages
added basicConstraints support to the certificate generation to enhance security by allowing basic constraints in certificate processing
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address issues caused by using the wrong transform offsets
replaced calls to ` field. multiValued ( )? Integer. MAX _ VALUE ` with ` precisionStep ` in ` TrieDateField
removed the TaskbarStateHandler class and its associated functionality to streamline the codebase by eliminating unused components
added a new file ` ArrayLength. java ` to test array type retrieval to ensure that methods that throw ` NoSuchFieldException ` and `
wait for hazelcast process # destroyforcibly ( ) to avoid hang test
updated ApplicationSettingsService to use PostConstruct annotation and refactored save method to improve code structure and ensure proper initialization of application settings
make safepoint assertion more strict
updated thread name field type from charArray to string in OopUtilities. java to ensure correct type conversion for thread names
update DEFAULT _ RAND _ SEED from System. currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hn
refactor stroke handling in PGraphicsJava2D to use a Font object to improve code clarity and maintainability by encapsulating stroke logic
refactor ` expandDynamicStar ` method to ` expandDynamicStar ` in ` SqlValidatorImpl. java ` to improve code organization and maintainability
added a new constructor ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to facilitate the retrieval ofesting children
added import statement for PMS and set the status code to " PMS. 141 " to improve user experience by providing a clear warning
refactor event modifier retrieval to use getModifiersEx ( ) for improved clarity to enhance code readability and maintainability by using more descriptive method names
amd64countLeadingZerosnode and amd64countTrailingZerosnode should not use cycLES _ 6
fix npe in as2clientmanager when disposition notification be not set
refactor Locale class to improve code readability to enhance maintainability and reduce technical debt
added a button to clear log messages in the ErrorConsoleController and ErrorConsoleViewModel to improve user experience by allowing users to clear log messages
set mRecentsAnimationController to null to ensure proper initialization of mRecentsAnimationController
updated method signatures to use LocaleHolder instead of ConsolePlayer to improve consistency and maintainability of locale handling
updated test classes to implement connection pooling and modified execution count to improve test reliability and ensure proper resource management
simonstewart : adding opera driver to the default driver session
improve error message when file download fails
added new Lifx product definitions and updated existing ones in LifxProduct. java to enhance the functionality of the Lifx product
added asynchronous handling for shard creation in OverseerCollectionProcessor and updated parameters in CollectionsHandler and CollectionsAPIAsyncDistributedZkTest to improve
'''''''
updated LogPage and SummaryPage to use ` objectId ` instead of ` repositoryName ` to ensure correct representation of repository objects in the log panel
change bone space rotation from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire. java to ensure correct representation of bone space
added a ` destroy ` method to the ` AndroidImplementation ` class to ensure proper cleanup of the ` AndroidBrowserComponent `
added a waitForActiveCollection call in AutoScalingHandlerTest to wait for the active collection to complete before proceeding with tests
refactor loop structure and update color attribute handling in ScreenTerminal. java and Tuxmuxmuxer. java to improve code readability and
updated the soft reset state check in SoftResetAction. java to include additional controller states to improve responsiveness by accurately reflecting the current
disable on - disc stream cache by default in the texture pack reloading process
added logic to retrieve the DLNA resource based on the object ID in Request and RequestV2 classes to ensure proper handling of media resources
cs - 154293 : fix npe in networkofferingvo. ispersistent
modified the FileOutputStream initialization to include a close method to ensure proper resource management and prevent potential memory leaks
added error handling for 403 responses in StandardGitHubRepository to improve robustness by gracefully handling Forbidden exceptions
log4j2 - 1349 : add messagefactory2adapter. getoriginal ( ) to messagefactory2adapter.
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in DataSizeTest. java, DurationTest. java, and SizeTest.
updated regex pattern from " [ 0 - 9 ] { 1, 2 } " to " [ 0 - 9 ] { 1, 3 }
added error handling for tooltip delays in ExtractionModelFrame. java to improve user experience by preventing application crashes
don't generate annotationprocessing target when no target
added timezone setting and assertion in TimeTest. java to ensure correct formatting of time values
refactor MediaSessionConnector class to improve code readability and maintainability
use the endpoint handler's ssl impl to get the ssl support.
updated the accuracy display string in GpsLoggingService to accurately reflect the accuracy of the GPS location
added functionality to check whether futures are enabled in BinanceExchange and BinanceAccountService to ensure that future transactions are only processed when futures are
update adminaccountmanagementservlet to use accountdata instead of instructordata
added a queue acceptance setting for worker threads in ThriftHttpCLIService to improve resource management by allowing maximum worker threads
replaced the use of getClass ( ). getName ( ) with a constant PROPERTY _ DISABLE _ WATCHER in PathWatcherService. java
added a check for " ssl " scheme in JmsFactory to ensure proper handling of SSL connections
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker. java ` and updated error handling in ` TestWindowFunctions.
updated duration calculation in GCInspector. java to ensure that duration may be zero for a really fast collection
fix : nodewithjavadoc # getjavadoc don't return empty javadoc
replaced the deprecated ` getUnsafe ` method with a ` readReservedMemory ` method in ` WhiteBox ` to improve compatibility across different operating systems
added multiple calls to ` ungroupedAggregateRegionObserver. checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner.
hbase - 25827 hbaseadmin # getprocessexception ( ) should print table name and procid
[ cxf ] set the service class for cxfrs and cxfrs
refactor YamlChangeLogSerializer to store database change sets as a map to improve clarity and maintainability of change set serialization process
changed print statements from ` println ` to ` print ` in ` SchemaPrinter. java ` to improve readability and consistency of output messages
refactor roads regeneration logic to use C. NOT _ IN _ PLOT instead of MainUtil. sendMessage to improve code clarity and
updated ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooterRow ` to use ` getActivity ( ) ` instead of ` getContext ( )
replace @ GeneratedValue ( strategy = GenerationType. AUTO ) with @ GenericGenerator ( name = " native ", generator = "
removed country parameter from getSystemTimeZoneID method to simplify method signature and improve code clarity
added position and remaining parameters to the write method in BZip2Codec. java and modified ByteBuffer initialization in TestBZip2Codec. java
move logger initialization from applet to appw
added a constant VALUE _ TYPE _ EMPTY in mmm Type. java and modified the create method in Value. java to improve code clarity and
fix npe in groupmanager. equals ( )
refactor Liquibase and LiquibaseDropAll classes to improve code readability and maintainability
refactor SimplexNoise class for improved readability to enhance maintainability and facilitate future updates
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating ` TargetGraph ` instances to facilitate the creation of
patch by jbellis ; review by jbellis for cassandra - 1372
add a type adapter for artifact version . should fix # 354
added logic to handle previous and current state changes in NativeArray to improve data handling and ensure proper deletion of elements in the array
updated file retrieval logic in FileUploader. java to use the remoteParentPath instead of the local storage path to ensure the file's parent
added a new test class UTF8ReaderBug for XML parsing to ensure proper handling of supplementary characters in UTF - 8 encoded XML
added unit test base on user forum issue
updated expected value in assertions from " depth " to " depth20 " in BinanceIntegration. java and BinanceUsIntegration. java to
added resetAllocation method to SimpleParallelizer and initialized initial and maxAllocation variables in Wrapper to ensure proper management of allocation states during parallel processing
removed import statement for AssertTree in AmbariManagementControllerTest. java to streamline code by eliminating unused imports
added synchronization to System. getProperties ( ) in mmm Agent. java and created a new AgentCMETest. java file to ensure thread
refactor ModelUtils class to improve code readability to enhance maintainability and ease of understanding
refactor AbstractDoubleArrayAssert class to improve code readability and maintainability
updated width and height calculations in Legend. java to include conditional checks for labels to ensure proper rendering of labels without unnecessary space
added delay and abort test methods to CodeFirstSpringmvcIntf and TestResponse classes to enhance test coverage for delay and abort functionality
changed the method for retrieving values from ` d. get ( fieldName ) ` to ` d. getValues ( fieldName ) ` and modified the condition
replaced the use of ` ruleResolver. requireRule ( ) ` with ` new BuildTargetSourcePath ( ) ` in ` Omnibus.
add ` ` disable'' chat message to commanddownloadlatest
changed ` Collection ` to ` List ` for ` filePaths ` and introduced ` numberOfFiles ` in ` MediaFolder ` and ` MediaProvider
added a new command - line argument " - b " in AidlStep. java and updated formatting in GenAidlTest. java to
added test case for issue # 79 ( # 79 )
added a TODO comment to the FakeHttpLayer class to improve code clarity and prepare for future development
[ hotfix ] fix error reporting in embeddedleaderservice
refactor compositerdiscoveryclient to return a single instead of a flowable stream
replaced ` getSystemConfiguration ( ) ` with ` new Configuration ( ) ` in ` ParallelUniverse. java ` and ` BootstrapTest.
[ hotfix ] [ doc ] add description to jobmanageroptions
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` for better clarity to improve code readability and maintainability by using a more des
don't throw exception if woodstox be not find on classpath
refactor AuditAliasCommandIntegrationTest to use a setup method to improve code readability and maintainability
removed logging statements related to widget section height in WidgetsFullSheet and WidgetsRecommendationTableLayout to streamline code by eliminating
( chore ) camel - cxfrs : disable test that be not applicable in this scenario
added error handling for periodical refresh in CachedStore to improve robustness by logging errors during periodical refresh
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and refact
added checks for default background and foreground fills in HSSFCellStyle and HSSFFont classes to ensure proper handling of foreground and background
refactor ZonedDateTimeFormatterBenchmark class to improve code readability and maintainability
refactor the update logic in ` DistributedUpdateProcessor ` and add a new test class ` DistributedUpdateProcessorTest ` to improve code readability and ensure
added a null check for the stage in the SimulationListHandler to ensure robustness by preventing potential null pointer exceptions
added a new parameter ` allAllowed ` to the ` getItem ` method in ` WorldEdit. java ` to allow multiple edits based on the
refactor ExtendedMasterSecretExtension class to improve code readability and maintainability
changed the declaration of the processor variable from non - final to final to ensure that the processor cannot be reassigned after initialization
added listener for onWriteFailed in WritableKeyProcessor to ensure proper handling of stream closure during write operations
added " CUBE " to MySQLDatabase. java to support new database connections
added a try - catch block around the rm call in TestReplicationHandler. java to handle potential IOException during resource management
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related method names to improve clarity and consistency
refactor DefaultOkHttpClientFactoryTest to streamline timeout and connection pool retrieval to improve code readability and maintainability
refactor BatchUpdateException, PreparedStatement, and Statement classes to improve code readability and maintainability
added a null check for the ` os ` variable in ` RawMessageContentRedirectInterceptor. java ` to avoid potential ` NullPointerException ` during
ggb - 2118 fix for algebraviewvieww. setwidgetsize ( ) bug
modified the ` jailerMain ` method to include a ` fromCli ` parameter and added validation for the ` fromCli ` parameter to
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added functionality to store unread pull notifications in shared preferences to improve user experience by managing unread notifications effectively
don't replace first input if kind = object _ kind _ object
updated memory calculations and loop iterations in Box2DTest and Pong classes to improve performance and accuracy of graphics rendering
refactor RecyclerView initialization logic in ViewPostDetailFragment. java to improve code readability and maintainability
changed log level from trace to warn in CLIService. java to provide more detailed error information for background operations
added a check for abstract methods in the JimpleBodyBuilder class to ensure proper handling of abstract methods in the code
ggb - 2118 fix for ie10 +
fix notificationmanager. getnotificationusers ( ) to include deviceid
updated the base URL in the CGIARProvider class to reflect the new SRT - ZIP and SRTM _ Data _ GeoTiff
replaced ` getFileChooser ( ). removeAll ( ) ` with ` c. removePropertyChangeListener ( filterComboBoxModel ) ` and added a new
change the return type of the handle method from void to boolean in multiple UI classes to ensure that the method returns a boolean indicating success or failure
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods in ` BuildRuleResolver. java ` to improve clarity and consistency in error handling
added visibility logic for transportSpinner based on makingShortcut flag to improve user experience by hiding the transport spinner when the shortcut is made
modified lint handling in Attr. java and added new classes T7043371. java and T7043477. java to improve robustness
refactor backPressed methods to return a boolean indicating success to improve code readability and ensure proper handling of back press events
added support for long view index configurations in QueryServices and MetaDataClient to enhance flexibility in managing view indices based on configuration
corrected the casing of " v " to " v " in SDRTrunk. java to ensure consistency in string formatting
replaced ` withMessageContaining ` method with ` StringUtils. cleanPath ` in ` PrivateKeyParserTests. java ` to improve code readability and maintain
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature and eliminate unnecessary parameters
updated IndexWriterConfig initialization to use TEST _ VERSION _ CURRENT instead of Version. LUCENE _ 40 to ensure compatibility with the current version
hbase - 26400 improve error message when column family do not match with the table
[ java ] change logrecordingchannel to logsubscriptionid to avoid confusion.
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent, " startApplicationDetailsActivity " ) ` and added voice button
added a check to skip processing for cases with a single " i " element in the PoloniexStreamingService to optimize performance by avoiding
refactor Procedure class to improve code readability to enhance maintainability and ease of understanding
added Locale. getDefault ( ) and ClassLoader. getSystemClassLoader ( ) to CoreResourceBundleControl and Window to ensure proper resource loading by using the system
[ j2kt ] add normalization pas for kotlin array creation.
modified term counting logic in PerSegmentSingleValuedFaceting. java to improve accuracy and correctness of term enumeration operations
fix nullpointerexception in modmetadata. processfieldchain.
added new test cases for Gson annotations in OSGiTest. java to ensure correct handling of " sun. misc " dependencies in the import process
fix npe in propertydescriptor. iscontrollerservicefrom
hbase - 2697 setautoflushto ( false ) shouldn't call setautoflush ( false )
fix : ctstatement. getThenStatement ( ) and ctstatement. getThenStatement ( ) should be cast to ctstatement. getThen
added a method ` hasUserData ( ) ` to ` SimpleFeatureImpl ` and its test in ` SimpleFeatureImplTest ` to ensure that
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify method signatures and improve code
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the ` enableLogging ` method from ` JavaCompiler. java ` to streamline the logging process by eliminating unnecessary logging functionality
added a new file ` InJavaSourceSet. java ` to handle Java source sets in the compilation unit
updated resource file path handling in TestGDALParser. java to improve test coverage and ensure proper resource loading
added a method createGetter to the ReflectionHelper class to facilitate the creation of a getter for objects based on specified attributes
removed the useExtStorage check from the conditional statement to simplify the code for better readability and maintainability
added a constant for INDEXER _ NO _ COMMIT and updated related code to use this constant to improve code clarity and maintainability by centralizing
bug 10783 : make sure either disk offering id or snapshot id must be pass whilst create volume
updated content assignment in ToHtml. java and modified assertion in BaseTestCellComment. java to improve code clarity and ensure proper handling of empty
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate `, ` LocalDateTime `, and ` ZonedDateTime `
added new error handling routes and tests for specific exception types in Issue382 . java and updated the err method signatures in Routes . java to enhance error handling capabilities and improve test coverage for different error scenarios
replaced ` RuntimeException ` with ` static java. lang. Integer ` and simplified the return statement in ` PositionUtils. java ` to improve
added a condition to hide the holder's text when certain conditions are met to improve user experience by ensuring the holder's text is
fix : use getimportkindfor ( ctreference ) instead of getelement ( ctnamedelement )
simonstewart : don't use deprecated firefoxoptions : : getProfile method
make liquidblock extend bucketpickup so it can be pickup
http : / / issues. apache. org / jira / browse / amq - 2902 - fix intermittent test failure
updated time zone from PST to America / Los _ Angeles in LocaleProviders. java to ensure compatibility with the latest time zone
[ iotdb - 2858 ] fix race condition in distinct error log
updated TEST _ NIGHTLY, TEST _ WEEKLY, TEST _ AWAITSFIX, and TEST _ BADAPPLES to use
fixed npe in sqlexecutionloggerimpl. getlogger ( )
add deny access to graalcontext. getfield ( ) and getmethod ( ) method
refactor image processing to use WritableRaster for pixel manipulation to improve efficiency and error handling when updating pixels
updated HiveAbstractReader to use partition. getSd ( ) instead of table. getSd ( ) to ensure proper handling of partition data during
refactor overlay handling logic in Workspace. java to improve clarity and maintainability of the code
in case we be use the jdbccoordinator
improve error message for shouldnotreachhere
added a new test class ` MockWithStaticStateDemo ` and modified ` PartialMockingRetainsStateTest ` to verify the functionality of
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest. java ` to ensure SQL queries with brackets and
added null check for ugi before executing the action to avoid potential NullPointerExceptions when ugi is null
updated error handling in OpenALMusic. java to include error code to improve error reporting for audio buffer allocation errors
camel - 16400 : camel - jbang - add reslove parameter to endpointhelper
refactor calciteLiteral creation to include precision and scale parameters to enhance precision and scale handling in SQL expressions
replace calls to getVendorProperties ( ) and getDeviceProperties ( ) with Optional. ofNullable ( acct. getAttestationMetadata ( ) )
updated the assertion to use ` Long. toString ( now ). getBytes ( ) ` instead of a hardcoded string " testName " to improve test
replaced AxialStage with RocketComponent in BasicFrame. java and updated selection logic in DesignPanel. java to improve code clarity and ensure
added longRunningTime parameter with getter and setter methods in Args. java to allow configuration of long running time in the application
updated priority adjustment in ` RefComparisonWarningProperty. java ` and added a new class ` Ideas _ 2012 _ 05 _ 21. java
replaced usage of ` sun. misc. ServiceConfigurationError ` with ` java. util. ServiceLoader ` in multiple Java files to improve code
gml3encodingtest : use testfeature. tostring ( ) instead of decimal. tostring ( )
removed unused Expectations import from TestRestClientRequestImpl. java to simplify the code and improve readability
added a condition to check if the reference database is equal to the existing comparison database to ensure that the existing constraint does not interfere with the
removed the ` addAndroidConstants ` method and streamlined asset path handling in ` IjProjectTemplateDataPreparer. java ` to
updated assertions in tests to use await ( ). atMost ( ) method to improve test reliability by allowing more time for tests to complete
added user _ args and timestamp to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance the build process by including additional
substitute resource bundle with module.
updated log message from " match limit " to " match order " in HepPlanner. java to improve clarity and consistency in logging
added a new file TheRockMetaDataDemo. java to demonstrate the functionality of retrieving exchange metadata
changed FloatingDecimal and FormattedFloatingDecimal classes to strictfp and added a new test for strictness in ParseDouble to ensure proper handling of
removed the unparseIdentifier call from columnNamesBuilder to simplify the column name generation process
added a test method to replace field declarations in JavaTemplateContextFreeTest. java and updated method signatures in BlockStatementTemplateGenerator. java to
added a check for non - synthetic methods in the InstantiateStaticClass and introduced a new test case in Bug1282 to ensure that
replaced ` projectFilesystem. getPathForRelativePath ( basePath ) ` with ` basePath ` in WorkspaceAndProjectGenerator. java to improve code clarity and
replaced direct calls to ` invoke. sendTo ( msg, iokeStepDefObject, multilineArg ) ` with a list of pending rescue information
changed the ` equals ` and ` hashCode ` methods from ` final ` to non - final in ` AbstractType `, ` BigintType
added a method to retrieve the default SyncLevel based on the provided level to improve flexibility and error handling when retrieving the default sync level
fix flakiness in controlcommandstest
added a condition to check if the slice state is neither CONSTRUCTION nor RECOVERY to ensure proper handling of recovery scenarios
* fix typo in opencv _ core. create ( image, depth, numchannels )
added SDKPath to AppleBundle and modified makeProcessExecutorParams to accept ExecutionContext to enhance process execution by associating the SDK path with the
[ flink - 2594 ] [ runtime ] remove unused private field in transientblobcleanuptask
server api : fix typo for static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code maintainability and readability
added conversion of sort and union row types to relBuilder in both HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to
refactor BetterBlockPos class to improve code readability and maintainability
updated getProxy method to use getClass ( ). getClassLoader ( ) to ensure correct proxy retrieval based on the class's classloader
updated version handling to distinguish between nightly and nightly builds to improve clarity and accuracy in versioning information
added conditional logic to remove trailing whitespace from SQL statements in LoggingExecutor and JdbcExecutor to ensure proper handling of SQL commands that do not contain trailing
added a constant for UNKNOWN _ VALUES _ ARE _ NSP in IsNullValueAnalysisFeatures. java to facilitate the use of
fix test failure on window
updated BLOB _ SIZE and PLAY _ MARGIN, and SLIDER _ MARGIN, and refactored duration handling in DrawAudio.
added a method to include multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance multifactor
modified method signatures and score calculations in MaxRectsPacker. java to improve code clarity and maintain consistency in method signatures
[ drools ] fix checkstyle violation in drools - model module
added helpPage management in PMS and refactored updateContents method in HelpTab to improve user experience by allowing users to navigate to the
added GeocodeProviderFactory and Constants interfaces to handle geocoding and storage functionalities to enhance geocoding capabilities and improve code organization
updated import statements from org. apache. lucene. analysis. util. CharArraySet to org. apache. lucene. analysis. CharArray
improve error message for expect exception
updated GATEWAY _ SERVER _ ID to use Protocol. GATEWAY _ SERVER _ ID instead of a hardcoded value to improve consistency and
updated conditions in SegmentsInfoRequestHandler. java and refactored collection creation in CollectionsAPISolrJTest. java to improve clarity and
updated the calculation of numPredictiveAppCols based on phone type to ensure correct number of app columns based on device type
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related logic in ` DrillJoinRelBase ` to improve
added blockbuildcraft to make it easy to build crafted block.
updated gravity settings and layout parameters in DeviceProfile. java to improve layout consistency and ensure proper positioning of the search bar
reformatted code for better readability to enhance maintainability
initialized ` ms ` to null in ` HiveMetaStoreClient. java ` and modified exception handling in ` HiveMetaStoreClient. java ` to improve
updated getDisplayScript method to accept a DISPLAY category and added a test case for bug 7079486 to ensure that the default locale does not
updated import statements in Replica. java to use ZkStateReader. CORE _ NAME _ PROP to improve code clarity and maintain consistency in
replaced ThreadLocalRandom with Random for random number generation to improve performance and maintainability of random number generation
added a check for ` launcherIsReady ( ) ` before backuping favorites and screens to ensure proper handling of backup operations based on the
updated exception messages for clarity in Cell. java to improve readability and understanding of error messages
added unit test base on user forum issue

refactor ShadowProcess class to improve code readability and maintainability
use hamcrest assertion instead of junit in unit test
added logging statements for various loggers in Grasscutter. java to enhance debugging capabilities for better troubleshooting
changed access modifiers of ` highlightCnstScrRngQuery ` and ` isHighlightCnstScrRngQuery ` methods to
updated workspace state check to include NORMAL state to ensure proper handling of workspace states in overview mode
fix ` ` java. lang. class'' warning
SnippetTemplate. java : add cacheable argument to notifyNewTemplate when cache is enabled
updated scope constants and modified data handling in multiple classes to improve clarity and functionality of core scope management
updated the CREATE TABLE measurement statement to include a primary key constraint to ensure that the measurement table has a primary key for consistency
rename -- permissions - config - path to -- permissions - config - file
refactor session creation logic in ` HttpSessionContextIntegrationFilter ` to improve clarity and correctness of debug logging messages
added a new file ` TestIfWithDeadRegion. java ` that includes a ` Supplier < String > ` to facilitate testing of
rename ` EnglishUdLas ` to ` EnglishUsdLas ` in ` DependencyParserITest. java ` to reflect the
refactor SnowflakeIdGeneratorTest to use HighResolutionTimer for concurrent access testing to improve test reliability by ensuring HighResolutionTimer
added a static UI feature in AppSettings and modified MainFragment to conditionally hide the toast bar based on user settings to enhance user experience by allowing
modified the return statement in WindowsSecurity. java to include a try - finally block to ensure proper resource management and prevent potential memory leaks
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added a check for ` clientId ` in ` Wh
updated JOptionPane calls to include localized error messages to enhance user experience by providing localized error messages
tika - 4907 -- add detection for openxmlformats - officedocument. spreadsheetml. sheet mime type
added logging and improved glue loading in multiple classes to enhance visibility and debugging for better troubleshooting
camel - eip - documentation - enricher should not use system. lineSeparator ( )
don't wait for node to be remove during migration
added debug logging for notify and playback devices in DeviceConfiguration. java to improve debugging visibility and ensure correct handling of audio capture devices
added a WebsocketConfig class and updated the reactorNettyWebSocketClient method to accept a configurable maximum frame payload size
make cachefailurelistener implement isuiterelistener interface
added a check to ensure the content length is not empty before adding it to the document to avoid potential NullPointerExceptions when the content length is
solvermanager. getproblemmanager ( ). getproblemmanager ( ) don't call solvetermination ( )
added a new method ` internalCreateTimeseries ` to handle pathAlreadyExistException during concurrent inserting timeseries to improve error handling and logging for
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to retrieve the result of the
changed access modifiers of several methods from public to protected in Shadow classes to restrict access to these methods for better encapsulation
server : fix list reserved / free public ip in project ( # 6198 )
modified the handling of the ` _ valueString ` in ` HttpParser ` and updated the corresponding test cases in ` HttpParserTest ` to
refactor thread initialization logic in J9VMInternals. java and Thread. java to improve clarity and maintainability of the code
added ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created ` EnvironmentTest ` to ensure proper handling of external storage states
[ drools - 9 ] fix type coercion in mvel 2. 0.
removed unnecessary imports and improved formatting in LoggingConfig. java to enhance code readability and maintainability
added exception message to the logging statement in ActionNode. java to provide more context about the exception encountered during action construction
fix issue with tel number in sip provider.
modified visibility logic for sharedWithMeIconV in FileListListAdapter. java to ensure sharedWithMeIconV is only visible when the file
deprecated the use of " hive. optimize. sort. dynamic. partition " in HiveConf. java and updated TestTxnCommands3. java
refactored the configuration overlay handling in ExecuteStatementOperation and Operation classes to improve clarity and maintainability of the code
replaced usage of ` Lists. newArrayList ( ) ` with ` new ArrayList < String > ( ) ` in ` BTCMarketsStreamingAdapt
feat : fix test failure due to name mismatch
removed the ` onErrorInStep ` method from ` StepListenerSupport. java ` to streamline error handling by returning ` null ` instead of
refactor Wallet class to improve code readability to enhance maintainability and ease of understanding
camel - 7999 : camel - netty - http should use the configured http port if available.
use log. info instead of system. out. println
added a check to return false if the row index exceeds the size of the database connection list to ensure that the database connection does not exceed the
pmd : methodwithsamenameasenclosingclass no longer throw an error
added support for extended - platform mxbean interface in jmx
added SQL string replacement for single quotes in BasicQueryTest. java to ensure proper handling of single quotes in SQL queries
updated response path from " / " to " org / knowm / xchange / bleutrade / dto / " in multiple test
refactor TextEscapeUtils class to improve code readability and maintainability
added a filter parameter to the FunctionQuery in AbstractSpatialFieldType and updated the filtering logic in TestSolr4Spatial to enhance query flexibility by allowing
added progress display for auto - email sending in GpsLoggingService to improve user experience by providing feedback on email status
replaced ArrayList with HashSet and updated related iterator methods in Inlinks and LinkDb classes to improve performance and readability of the code
added a synchronized method ` stopScan ( ) ` to ` TradfriDiscoveryService ` to ensure thread safety when stopping the scan process
modified the ` testFilterForPartition ` method to accept a boolean parameter indicating whether to fail with blocking mode at the server side to ensure that
added'closed'status to ticket workflows in TicketModel. java and added'milestoneWorkflow'status in TicketsPage.
removed redundant assignments for columnAliasPrefix across multiple platform classes to streamline code by eliminating unnecessary assignments
updated ` LlapRowRecordReader ` to use ` BytesWritable ` instead of ` Text ` to improve performance by using a more efficient binary format
don't run terasology - engine on non - native linux
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4687
added a new DAEMON option to the RESET _ ALARM command and implemented daemon mode functionality in TerminalClient to enhance user experience by
added a new file FlushIndexTask. java to implement performance monitoring for index writing operations
patch by jbellis ; review by brandonwilliams for cassandra - 1373
added a condition to check for SEASONS in the conditional statement to ensure proper handling of cases where no reason is present
added a new file ` LocalSocketAddress. java ` to test IPv6 connectivity to ensure that IPv6 addresses match expected network interfaces
updated grid size points in GridSizeMigrationTask. java to correct the coordinates for grid size migration
replaced calls to ` getName ( ) ` with ` getName ( ) ` and ` getFields ( ) ` in ` SerializerPojo. java ` to
added READ _ ONLY option and initialization methods to Context class to ensure proper handling of read - only contexts
refactor LookAndFeelCommand class to improve code readability and maintainability
updated the logic for determining the last runEnd in BlockBoxing. java to improve accuracy in determining if the last runEnd is within the
added imports for EOFException and EofException in GracefulStopTest. java to enhance exception handling to support additional exception types
replace lock with synchronized block to ensure thread safety when modifying shared resources
updated method signatures in NetworkParameters. java to improve clarity and maintainability of network parameters
added a conditional check for account asset optimization in DynamicPropertiesStore to ensure proper handling of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC in VM. java to facilitate the use of the garbage
added error handling for InvalidProtocolBufferException in TransactionCapsule. java to ensure proper error handling for invalid contract protobufs
remove unused class exceptiontypechecking
updated resource path and error logging messages in HelpContent. java to ensure correct localization handling and improve clarity of error messages
added a new file ` ProcessorInfo. java ` to determine the number of processors based on the system's ASCII charset
added support for the - html command - line option in the PrintingBugReporter class to generate HTML output with a default stylesheet
migrate ` logbackxmllocation ` property to ` logbackxmllocation `
updated method signatures and imports in HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve clarity and consistency in handling service component recovery events
added conditional on property " spring. sleuth. propagation. tag. whitelisted - keys " in SleuthTagPropagationAutoConfiguration to
refactor rustDepType assignment to use a switch statement to improve readability and maintainability of the code
updated ` oauth2LoginLinks ` to accept ` MultiValueMap < String, String > ` as a parameter and added error creation logic to enhance
hbase - 19801 : fix halfstorefilereader to seekbefore to avoid npe
hhh - 147482 - add generationtiming. always ( ) to the @ Generated annotation
nd4j backend don't handle nan in layer norm
refactor showShareFile method to use getFileOperationsHelper ( ) method across multiple activities to improve code organization and maintainability by centralizing shared file
added unit test for relative clob file in pom. xml
convert " proxyType " to uppercase to ensure consistency in proxy type retrieval
added a new mod _ MinecraftForge. java file and modified the mod _ MinecraftForge. java and mod _ MinecraftForge.
refactor JdbcDatabaseSnapshot to improve column fetching logic to enhance accuracy and maintainability of the code
added a new container with a border image and labels in CSSBorderTest. java to enhance the visual appearance of the border in the UI
add retryablestatuscodeexception to loadbalancerinterceptor
changed superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout to align layout parameters with the intended use of MATCH _ PARENT instead of
updated the calculation of ` parentTaskName ` to use ` System. currentTimeMillis ( ) ` instead of ` System. nanoTime ( ) `
added error handling for invalid AddServiceRequest properties in ServiceResourceProvider. java to improve robustness by providing informative error messages when input is
modified the return logic for unversioned files only in IndexDatabase. java to ensure proper handling of unversioned files
cairo : fix for round ( x [ 1, 2 ], x [ 2, 3 ] )
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
deprecate method in order to be use.
refactor methods in JLayer. java to improve code readability and maintainability
increase wait time in eviction test to avoid flakiness
replaced the ` encodeInternal ` method with ` encodePassword ` and ` encodeBase64 ` in ` Md5PasswordEncoder. java `
updated method calls in IconRecentsView. java to use mTaskRecyclerView's getViewTreeObserver ( ) method to improve code clarity and
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
use long. max _ value instead of long. min _ value in sstables
add multichat operation set definition and gibberish protocol implementation. related issue : issue # 241, issue # 244,
added null and empty checks for replies in multiple classes to avoid potential NullPointerExceptions during processing
replaced ` ToStringBuilder ` with ` Objects ` and added custom ` toString ` and ` hashCode ` methods in ` HitbtcBalance ` to
updated column type handling and added a new test for the where clause in SQL queries to improve type safety and ensure proper handling of SQL queries involving
updated return statement to use addrs. toString ( ) to improve clarity by using the actual addrs string representation
don't try to open a new data source when edit a gcode file
from from - to -
pipe power wood : don't send energyUsable if energy not available
added a check to delete the temporary file if it does not exist to ensure that temporary files are removed when the session state changes
updated JSON property names in BitstampWebSocketTransaction and added unit tests in BitstampStreamingMarketDataServiceTest to improve clarity and correctness of trade data
ReplayProcessor and ReplaySubject to handle expiration of state time to ensure that expired state times do not result in infinite loop
updated expected citation format in CitationStyleGeneratorTest. java to ensure consistency in citation formatting
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 46
apps : show only definition for exam start in exam
added null check for the component in SIPCommTextFieldUI to prevent potential NullPointerExceptions when accessing components
hbase - 25829 fix npe in metareader when startrow be null
updated the initialization script from " q _ test _ init. sql " to " q _ test _ init _ for _ minimr. sql
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags. java to facilitate enabling of transient taskbar functionality
refactor AccessExecution, AccessExecutionVertex, and ArchivedExecution classes to improve code clarity and maintainability
added a condition to set the density of 3 if the scale is equal to 3 to ensure proper scaling of graphics based on the specified scale
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 25836 regionstatestore should log exception when region state store fail
fix flaky testclusterupgradefailure
updated log message to include " IF YOU SE THIS, PLEASE BUGZILLA " and modified class names for clarity to enhance
modified the method signature of ` SearchUiManager ` to include a ` showArrow ` parameter to enhance functionality by allowing the option to show an
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 587 : row
skip bigEndiantest on linux and amd64
refactor input handling in Scalars. java to improve type safety to enhance code robustness and prevent potential ClassCastExceptions
updated primary key validation logic in CreateTableStatement. java to ensure that only one primary key is provided to improve error handling for ambiguous primary key
added conditional checks for LMP drawable resources in multiple classes to enhance user experience by providing appropriate icons based on device orientation
fix an npe in vmservicemanager when there be no isolate to query for flutter views
added new headers configuration methods for content type options, xss protection, and HTTP Strict Transport Security in HeadersConfigurer. java to enhance the flexibility
refactor ObjectEnumerableAssert class to improve code readability and maintainability
simonstewart : move devtoolsprovider to devtools module
added type parameter to @ AggregateRoot annotation in EventSourcingRepositoryTest. java to ensure proper handling of aggregate types in tests
added support for prebuilt libraries in the Python binary to ensure proper linking of prebuilt libraries in the build process
updated client authentication handling in NetServerOptions and HttpServerOptions classes to improve clarity and consistency in client authentication configuration
hive. repl. rootdir and hive. repl. cmrootdir should use $ { system : user. name } to ensure compatibility with the
refactor task view removal logic in RecentsView. java to improve clarity and maintainability of the code
http : / / issues. apache. org / jira / browse / amq - 4237 - add timeout to the test
removed the clearAll ( ) method from DataTableTopComponent. java to streamline code by eliminating unnecessary method calls
[ fix ] move controller to flowcontroller in processable
updated exchange number handling in ` OperatorTreeGenerator ` and added a new test in ` PipelineBuilderTest ` to ensure correct exchange behavior and validate
added uses of io. github. classgraph. ClassLoaderHandler in mmm module - info. java and ppp module - info. java
solve ( ) now return the best solution in event thread.
added JsonIgnore annotation to ApplicationSettings. java to exclude sensitive data from JSON processing
added a null check for throwable in PlotListener. java to ensure that throwable is not null before proceeding with further operations
refactor query info retrieval logic in QueryTimeManager to improve clarity and maintainability of the code
fix the auto workbench not work if there be no recipe
fix hdop handle in gl200text protocol ( fixes # 2173 )
renamed ` timeColumnName ` to ` incomingTimeColumnName ` in ` AvroRecordToPinotRowGenerator. java ` to accurately reflect the
removed redundant call to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc
added support for inject container with an initializable factory.
fix timer observability issue
changed the data type of SYNC _ DELTA _ RATE from float to double and modified time calculations to improve precision in fetching time by
thymeleaf : add deprecation warn for fragment expression in template
changed the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap ` to ensure thread - safety when deserializing attributes
fix for http : / / issues. apache. org / activemq / browse / amq - 2530 - copy message from md to md
added new color constants and modified method signatures in ColorExtractionAlgorithm. java to enhance color extraction functionality and improve code clarity
added accessibility check for the data folder in SketchBuilder. java to ensure that only accessible data folders are included in the source folder path
modified the ` appendContent ` method to include a ` includeTitle ` parameter to enhance the functionality of the ` appendContent ` method by allowing
replace instantiation of SessionRegistryImpl with direct access to sessionRegistry to improve code clarity and reduce potential null pointer exceptions
camel - netty - streaming : retry on connection reconnection complete and error.
use javassist. util. proxy instead of net. sf. cglib. proxy. factory
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool. java ` to improve performance and scalability of thread management
updated socket exception handling to include both host and port information to improve error reporting by providing more context on exception messages
added a method to check if the view path is under the specified repository to improve error handling by providing clearer feedback when the view path is under
remove drag - and - drop functionality from the tabbed pane to simplify the user interface by focusing only on relevant elements
8152373 : add - xx : + usecompressedoop flag to test
removed error logging for update log in ACTIVE or REPLAY state to streamline error handling for updates in the state of the update log
deleted the ConnectionHook. java file to remove unused code that is no longer needed
removed the ` waitForReplicasInSync ` string and ` waitForReplicasInSync ` from multiple test classes to streamline the code by eliminating
( chore ) camel - swagger - java : use isEqualTo ( type ) instead of isGivenIn ( )
[ apex ] add support for external apex version ( jorje v2 )
fix checkstyle issue in langtools repository
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread pool management to improve thread management and reduce resource usage
replaced StandardByteBufferPool with ByteBufferPool in WebSocketAsyncConnection and WebSocketServerFactory to improve performance and resource management for WebSocket connections
added scroll position adjustments for thumbnail indices in UploadActivity to improve user experience by ensuring thumbnails are displayed at the appropriate positions
fix ( sqlcodegenerator ) : when timestamp be override by other column alias
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation to improve code readability and maintainability
added a conditional check to disable the default user agent in the HTTP client builder to ensure that the default user agent is disabled when the default user
added pubsubhubbub functionality to ApplicationSettings and updated FeedRefreshUpdater to handle pubsub feeds based on application settings
changed the access modifier of the finalize method from public to protected to allow subclasses to access and override the finalize method
updated method names and added a check for synthetic classes in StubJarClassEntry. java to improve clarity and correctness in identifying anonymous classes and
add unit test to verify that the web application don't work
added null check for table aliases in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to ensure proper handling of missing columns and
[ hotfix ] [ table - planner - blink ] fix typo in jobgenerator identity
updated logger messages in Wallet. java to include transaction identifier to improve clarity and accuracy of log messages
fix failure in basicmapmaptest.
updated property names from " rcfile - optimized - writer - enabled " to " rcfile - optimize - writer - enabled " and " rc
added a new enum ` TlsClientCertPolicy ` and updated related methods in ` GitBlitServer ` to support configurable client certificate requirements
removed unnecessary sleep and added a debug log statement in KrakenFuturesStreamingService. java to streamline the subscription process and improve error
added support for WebSocket protocol headers in the ProxyWebSocketHandler class to enable flexible handling of WebSocket protocols
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet. java to improve visibility into fetch requests for debugging purposes
updated string formatting in HolidayEventFormatter. java to improve clarity and consistency in formatting
refactor the inner class field handling in ` FinalizePrivateFieldsTest. java ` to improve clarity and maintainability of the test cases
refactor UnexpectedJobExecutionException class to improve code readability and maintainability
deleted the file ` module - info. java ` and simplified the ` buttonShouldBeOpaque ` assignment in ` AquaLookAndFeel. java `
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to improve accuracy in determining the maximum
added GeoDegeneratePath class with a value of 36 to the classRegsitry to ensure proper handling of degenerated paths in
removed the preFill parameter from constructors in various pool classes to simplify constructor calls and improve code clarity
updated taskbar state management in TaskbarLauncherStateController and TaskbarStashController to ensure proper taskbar state updates based on launcher state
updated the null check for the default style in CascadeDeleteVisitor. java to enhance robustness by preventing potential NullPointerExceptions
fix marqueelabel and fixed panel in status tab
refactor icon retrieval logic in FileTreeViewHolder. java to improve readability and maintainability of the code
updated assertions from " isEqualTo " to " contains " for " v18 " and " large - land - v17 " to ensure consistency in
synchronize access to suiteresults map to avoid concurrentmodificationexception
add testnativeworker class for native native query runner
added ShutdownThread. deregister ( this ) in ClientContainer. java to ensure proper resource management and prevent potential memory leaks
hhh - 146113 - sybaseASE15dialect # droptemporarytableafteruse should return false
simonstewart : simonstewart : simonstewart : don't use htmlunit's color
updated import statements in multiple Java files to improve code clarity and maintainability
refactor LinksIndexingFilter class to improve code readability and maintainability
updated the hexadecimal string format for reserved memory addresses in VirtualAllocCommitUncommitRecommit. java to improve clarity of reserved memory addresses for
update ad playback state when there be no ad group
added a suppressing warning for UndefinedEquals in MultimapSubject. java to indicate that the method is intended to follow Multimap. equals
updated the frequency label from " deg _ text " to " unit _ hz " in the fetchPropertyValue method to accurately reflect the frequency
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
replaced the method call to ` all. putAll ( includedLabelSets ) ` with a direct instantiation of ` TreeMap ` to simplify the code and
fix npe in vertexlighterflat. emitvertexformat ( )
added tracing context to message sending and message received in tracing classes to ensure span visibility during message processing
updated timezone handling in ScheduledTrigger. java and removed a BadApple annotation in ScheduledTriggerTest. java to improve accuracy in time zone representation and
added new classes ` AsyncBucket `, ` Bucket `, ` Bucket4j `, ` ConfigurationBuilder `, and ` InMemoryExtension `
updated class directory handling and improved error messages in resexhausted003. java and TestDescription. java to enhance robustness by ensuring
removed unnecessary whitespace in AbstractConnector. java to improve code readability and maintain consistency
refactor OngoingStubbing class to improve code readability and maintainability
added functionality to optionally reuse web servers based on configuration settings to improve flexibility in managing different web servers
updated variable names and constructor instantiation in HttpClientUtil. java and added HttpClientUtil. setHttpClientImpl in SolrTestCaseJ4. java to improve
added a check to ensure that the thread allowlist is utilised but not cleared to prevent potential IllegalStateException when attempting to clear the allowlist
updated method call from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests. java ` to ensure compatibility with the
added a condition to check the HitPolicy before applying findGaps and findOverlaps in DMNDTAnalyser. java to ensure that
[ beam - 8470 ] add unit test for sliding window combine
added a conditional check for ` allAppsDirty ` before binding all apps to improve performance by avoiding unnecessary calls to ` bindAllApps ( )
( chore ) camel - core : remove unused test
replaced System. out. println ( beautifulTriplets ) with System. out. println ( BeautifulTriplets ) in the Solution class
refactor AquaMenuBarUI to use AccessController and LWCToolkit for deprecated use of the screen menu bar to improve compatibility with embedded environments
fix setrawlocation ( ) so it don't fall
modified the query construction in SimpleJpaRepository to use a CriteriaQuery to improve accuracy in selecting example specifications
added timestamp, parent hash, nonce, difficulty, and number to blockutil. newtxinput ( byte [ ], byte
move safepointpolloffset to safepointinsertionphase.
hbase - 25829 fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs when there be no child
change visibility of several methods in ArtifactResolver from package - private to public to allow access to these methods from outside the ArtifactResolver class
added disposal methods for defaultCollisionConfiguration, entityTriggers, entityRigidBodies, ghostPairCallback, and reactor to ensure proper disposal
added validation to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException when maxBufferedDocs is less than 1
added functionality to manage the login state in the LoginActivity to ensure that the login process is only performed when the current instance state changes
added null checks for source and valueExtractor in Pump. java and implemented a test for UUID sorting in PumpTest. java to ensure
changed access modifiers of several methods and variables in ` HttpShardHandlerFactory ` and ` LBHttpSolrServer ` to enhance encapsulation and restrict
changed the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in ` BaseAuthenticationServiceSelectionStrategy `
added Jetty server handlers to handle HTTP requests in TestJNDI. java to enhance the server's ability to respond to requests
updated method calls and assertions in SortedDynPartitionOptimizer. java to improve code clarity and ensure proper validation of child operators
changed the condition from checking if the loop is an instance of NioEventLoop to returning true instead of checking if the loop is an instance of Nio
updated the logic for setting the number of nulls based on the ratio to ensure that the number of nulls does not exceed the expected number of rows
camel - jbang export : add support for camel - kamelet
replaced OkHttpOAuthConsumer initialization with an AtomicBoolean to handle task execution based on authorization state to improve user experience by ensuring proper handling of authorization
remove system. out. printlns from test code
added client authentication functionality to IoTDBRestServiceConfig and related services to enhance security by allowing client authentication in the REST service
updated the handling of mockCandidates in PropertyAndSetterInjection and added a new test class ChildWithSameParentFieldInjectionTest to ensure proper injection
updated BloomUriUniqFilter to use BloomFilter64bit and refactored related methods to improve performance and maintainability of the B
changed the cursor adapter from false to true in HomeFragment and added a preference refresh _ me in TweetPager to ensure the user interface reflect
update the intermediate header height ratio from 1 f to 75 f to improve the responsiveness of the profile page
updated the RecompilationEvent class and added a new RecompilationEvent class to enhance event tracking and improve code organization
added support for the " host _ sys _ prepped " configuration in multiple classes to ensure proper handling of system - related hosts
added a new parameter ` logEveryFileFormat ` to the ` include ` method in ` DatabaseChangeLog ` and created a test class `
added a loop to delete consecutive slashes in the location string to ensure proper handling of trailing slashes in the location
added support for entities and scores in the StaticPipeline class to enable processing of entities and scores based on specified properties
refactor filename handling and improve source path generation in Frame and Whoops classes to enhance readability and maintainability of the code
[ geos - 8470 ] catalog ] don't throw runtimeexception when try to lookup an exist catalog
refactor assertion methods in Assert. java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added a new test class ` MultiLineJaggedTextTests
http : / / issues. apache. org / jira / browse / amq - 4237 - fix unit test
replaced instances of ` IMeasurementSchema ` with ` MeasurementSchema ` in ` TsFileWriteAlignedWithTSRecord ` and ` T
updated loop structure and memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC. java to improve code clarity
updated log file name from " slf4j - log4j12 -. * " to " slf4j - reload4j -
updated assertion in HueBridgeHandlerOSGiTest to use waitForAssert for better readability to improve test reliability by ensuring the assertion is
updated package structure and import statements in multiple activities to improve organization and clarity of the codebase
[ drools - 1276 ] ignore fail test due to dROOLS - 1276
added a constructor to PullRequestMergedEventsStream that reads the Pinot schema from a file to enhance the functionality of the PullRequestMergedEvents
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in taskslot
replaced occurrences of FIRE _ EXCEPTION _ ON _ FAILURE with CLOSE in NettyWebSocket. java and NettyWebSocketTest. java to ensure proper handling
added error handling for lock release operations in MoveTask. java to improve robustness by gracefully handling potential LockException during lock management
refactor JRubyBackend to use ResourceBundle for property retrieval to improve flexibility and maintainability of the code
replace ZERO _ ADDRESS with ByteUtil. EMPTY _ BYTE _ ARRAY in Transaction. java to improve code clarity and reduce potential null pointer exceptions
refactor class name retrieval logic in ClassGraphClassLoader. java to improve code readability and maintainability
[ hotfix ] fix blob storage directory name in test
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added a Bundle to the FileDisplayActivity to set extras for the builder to ensure that the builder uses the correct Bundle when creating a FileDisplay
replaced break statement with continue in ParticleEmitter. java to improve code readability and maintainability
updated cluster count expectations from 4 to 3 in AmbariManagementControllerImplTest. java to reflect the correct number of cluster requests
removed " nullable = false " from the service column in TransientSessionTicketImpl. java and added error handling in JpaTicketRegistry. java
modified Bug4823811. java file to improve code quality and maintainability
updated argument handling in RmStep. java to use a function for path normalization to improve code clarity and maintainability by utilizing a consistent
updated requestFullState method to accept a boolean parameter indicating if the request is an initial request to improve request handling by allowing dynamic updates based on
refactor ShibbolethCompatiblePersistentIdGenerator to improve attribute handling to enhance code clarity and maintainability by consolidating attribute logic
updated the @ Inject annotation in RequestValidationService. java to ensure proper injection of the RequestValidationService class
added functionality to hide the keyboard log based on the STATS _ LOGGER _ KEY data to improve user experience by preventing exposure of the system '
corrected formatting in ` FileNodeProcessor. java ` and removed redundant calls in ` MManagerBasicTest. java ` and ` MTreeTest
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
add unit test to ioutils. slurpfile ( )
added @ FunctionalInterface annotation to several classes to indicate that these interfaces are intended to be functional interfaces
refactor span naming logic into a separate method ` spanWithName ` to improve code readability and maintainability
added support for DateWritable in ETypeConverter and related classes to enhance date handling capabilities in data conversion
updated regex pattern from " \ s *, \ s * " to " \ Patterns. COMMA _ SEPARATOR " in StyleConverter. java
ggb - 2118 fix error message in inputdialogtableview
refactor column count calculations in SemanticAnalyzer to improve clarity and maintainability of the code
refactor score update logic in WANDScorer. java to improve clarity and maintainability of the code
refactor Correspondence class to improve code readability to enhance maintainability and ease of understanding
updated import statements in PaintSetEnabledDeadlock. java to streamline imports and improve code readability
modified the initialization of curPixVal in XRSolidSrcPict. java and added a new WhiteTextColorTest class to ensure correct pixel
biome metadata : replace list < type > with collection
rename ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache. java ` to clarify the purpose of the tolerance in
updated test stability annotations in TaplTestsLauncher3. java to include additional test flavors for improved stability management
updated package - info. java files for mmm and ppp packages to improve clarity and maintainability of package documentation
added a check to ensure the log file suffix is not empty to improve robustness by preventing potential errors when the file name is empty
refactor PythonBuckConfig to improve code readability to enhance maintainability and facilitate future updates
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest and ShadowApplicationPackageManager to ensure correct handling of system shared
fix meiligao extend info ( fix # 588 )
added a null check for the ` tile ` variable before calling ` getBatteryStored ( ) ` to avoid potential ` NullPointerException `
updated cache handling by introducing a new ` TrimCache ` class to improve cache management and user feedback when cache files are deleted
fix checkstyle issue
updated exception handling in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to throw a specific NotAuthorizedException to improve error handling by providing
add scheduler. scheduleperiodically ( ) method to scheduler interface
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( getStorageManager ( ). getFileByPath ( operation. getRemotePath (
added a check for multiple Liquibase XML files before closing streams to improve robustness by handling cases where multiple XML files match the specified path
refactor table creation methods to use CreateTableRequest instead of EnvironmentContext to improve code clarity and maintainability by encapsulating table creation logic
modified start and abort methods in FixedRateFragInsStateTracker to ensure thread safety when trackTask is not started
added a check for indentation limits in multiple block parser classes to ensure that blocks are only processed when indentation is less than 4
add multichat operation set definition and gibberish protocol implementation
remove unnecessary check for fin = true
added visibility setting for the collapse handle button in WidgetsBottomSheet to improve user interface by ensuring the handle button is visible
added tests for HTML and JavaScript text encoding in Issue475. java and Issue475. java to ensure proper handling of special characters in
added a check to return early if unitsToScroll ( ) is zero to optimize performance by avoiding unnecessary processing when unitsToScroll (
updated the condition to check for contract list size instead of size greater than one to ensure that contract list size is valid before proceeding
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes to enhance functionality for adding and updating JSON objects
added hashCode ( ) method to IPPPrintService and created TestRaceCond class to ensure consistent hashing behavior for print services
db2idialect : use ` ` version'' instead of ` ` iversion''
add a condition to check if the transaction's fee is greater than zero before verifying if the payment context is enabled to ensure that the
refactor BatchUpdateException, PreparedStatement, and Statement classes to improve code readability and maintainability
re - enable re - enabling of first sub - sample in the adaptive reconfiguration
changed access modifier of several antn classes from public to package - private to allow access to these antn classes from other packages
added Retrofit import in mmm Part. java and ppp PartMap. java to support Retrofit functionality in the application
refactor JsonBuildHelper and ParamsBuildHelper to improve handling of primitive types and enhance parameter processing to enhance code readability and maintainability while ensuring
added support for the TASKBAR _ OVERLAY _ PROXY feature in AbstractFloatingView to enhance functionality by allowing overlays
fix : update gapic - generator - java with mock service generation fix
updated alpha calculation logic in ClipAnimationHelper and added hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on recents
removed an additional parameter from the createRenderScript method call to simplify the method signature and improve code readability
refactor PMD class to improve code readability to enhance maintainability and facilitate future updates
don't display system - bundle header if it's ` ` yes''
removed unused import statements from IntegrationTestSparkBulkLoad. java to streamline code and improve readability
replace hard - coded values in KeyChainGroupTest. java with a constant LOW _ FALSE _ POSITIVE _ RATE to improve code maintainability
refactor configuration handling in Overview. java to improve clarity and maintainability of the code
cloudstack - 7092 : fix npe in agentmanagerimpl. findattache ( )
added null check for values in DefaultRecordStore to avoid potential NullPointerExceptions during data processing
cloudstack agent : improve error message when cloudstack agent setup fails
updated error messages to include NAME _ ATTRIBUTE and VALUE _ ATTRIBUTE in ParamAction. java to improve clarity and consistency in error reporting
updated BaseStubbing constructor to accept an Object mock instead of an InvocationContainerImpl instance to enhance flexibility by allowing the constructor to accept an Object
refactor getMethodLine method to use a static method to strip method parameters to improve code readability and maintainability by encapsulating method logic
updated VERSION _ NAME and VERSION _ CODE in GreatVoyage. java to reflect the new release version
pdfbox - 2576 : use set instead of list to prevent concurrent modification
[ geos - 8470 ] symbolmayer : use label instead of repeat label
ggb - 590 fix : center and resize popups for overlap feature
update error messages to include " - " prefix to improve clarity and consistency in error reporting
added a private ` StartingWindowListener ` and modified its usage in ` QuickstepTransitionManager ` to improve modularity and maintainability of the
added a doc comment inherited from MBeanServerConnection to improve code clarity and maintainability
updated exception messages in CheckPackageAccess. java to reflect the expected PackageAccess SecurityException to improve clarity and accuracy in error reporting for security exceptions
increased the awaitTermination timeout from 30 seconds to 90 seconds and added an assertion to verify that the executor service is terminated to improve test stability
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check for ` loggingEnabled ` to improve
added @ JsonIgnore ( true ) annotations to Schema. java to ensure proper serialization of schema data
increased timeout duration from 5000ms to 10000ms in TestNonTxIndexBuilder to allow more time for tests to complete
make sure we don't crash if the classifier ben't set up yet
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to improve clarity and functionality of the module
refactor Prototype class to improve code readability and maintainability
added a null check for tableIsTransactional in SemanticAnalyzer. java to ensure proper handling of null values for table properties
[ java ] remove unused method in recordingwriter
fix cedescrers to return empty cue instead of 0
add alias to datastoremetricquery # getalias ( )
updated currency pairs in VaultOfSatoshiBaseService to include " QRK " and change " BTC " to " USD "
hhh - 16400 : fix test failure on oracle
updated Kafka version import from ` kafka11 ` to ` kafka ` in ` ZipkinKafkaSenderConfiguration ` and ` ZipkinAutoConfigurationTests
added two new test classes, GwtBinaryIntegrationTest and A. java to facilitate testing of GWT builds across different machine
updated event handling in BrowserContentPane and refactored ResultSetRenderer initialization in SQLConsole to improve user experience by ensuring loadingCauseLabel is
updated randomizer retrieval methods in EnhancedRandomImpl. java and EnhancedRandomImplTest. java to enhance random value generation functionality and ensure
added XMLSecurityPropertyManager to DTDConfiguration, NonValidatingConfiguration, and SAXParser classes to ensure proper handling of security properties
added a new file ` InlineDefaultMethod. java ` implementing interfaces with default methods to facilitate testing of default methods in subclasses
replace LIKE and LIKE with GLOB in SqliteFieldPredicateView. java to enhance support for GLOB data types in queries
drools - 5752 : make dmnassemblerservice # getdmnprofiles ( ) protect
fixed - rscript. readallasync ( ) method throw classcastexception
simplify staticobject. setwordfieldvatile ( field, int value ).
updated debug log statements to use the size of targets instead of a fixed string to improve logging accuracy by using the actual size of targets
retain the payload packet before sending it in FMLOutboundHandler. java to ensure proper resource management and prevent potential memory leaks
added a constant for HTTP Jetty server handlers and modified thread pool configuration in WebServer . java to enhance configurability of HTTP server thread handling based on external configuration
replaced the ` idsToShortcuts ` map with a new ` removedShortcutInfos ` list to streamline the management of shortcut information by removing
don't convert string to string in defaulthttpclientbinderregistry
removed the case handling for the home case in DetailFragment. java to streamline the navigation process by eliminating unnecessary cases
added a condition to check if Android market is present before processing play services to ensure that services are only included when the Android market is present
refactor TableBlockParser to improve handling of spaces after headers to enhance robustness by ensuring proper parsing of whitespace after headers
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enable flexible handling of bridging headers in the
refactor PotentiallyDeadCode to use a set of JavaType. Method instead of a hardcoded sourcePath to improve code clarity and maintainability by
added diamond finder functionality and warning logs in various classes to enhance type inference capabilities and facilitate debugging
replaced invocation. getInvocationStageTrace ( ). startSend ( ) with invocation. onStartSendRequest ( ) in HighClientFilter and
removed unnecessary import of Utils and debug logging in SolrCacheHolder. java to streamline code by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory to improve robustness by propagating exceptions
updated the comparison logic in Test6796786. java to correctly compare two float values to ensure accurate comparison between two float values
added a local file for " logback. dev. xml " in JoobyMojo. java and updated file paths in Main. java to
added jaaseventcheck class to check authentication failure event
refactor QuickstepTransitionManager to use a list of views instead of individual views to improve code readability and maintainability by consolidating view animations
updated string distance comparison in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to improve accuracy of distance checks
changed the import from HashMap to Map in ShadowSystemServiceRegistry. java to improve data handling by using a more appropriate data structure
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to allow access to the method from outside the class
add the ability to modify the storage pool command wait time
updated JDBC table parameter keys in AbstractJDBCConnectorProvider. java to improve clarity and consistency in database connection handling
corrected the method name from ` getSqlUpdateAUP ` to ` getSqlUpdate ` across multiple files to ensure consistency and accuracy in naming conventions
refactor schemaTypeCache initialization to use a synchronized map to improve thread safety and performance in schema type caching
refactor header addition logic in StaticServerHttpHeadersWriter and add a test for case - sensitive headers in StaticServerHttpHeadersWriterTests to improve
added JUnit @ Ignore annotation to LatticeDemo. java to ignore tests that rely on files available only from CMU
added a method to create a storage directory in the TestCollector class to ensure that the storage directory is created for testing purposes
added chunked streaming mode to StarTreeJobUtils to improve data processing efficiency
add unit test for basic syntax checker
hbase build failure due to rebase
added a new ` Node ` class and a test for recursive structures in ` BeanPopulatorTest ` to ensure that stack overflow exceptions are thrown
added IOException to the getRemoteName method to handle potential I / O exceptions during remote operations
added handling for IllegalArgumentException in UserAccountManagerImpl and refactored client creation in ClientFactory and ConnectivityServiceImpl to improve error handling and streamline
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure proper handling of aspect - related configurations
updated imports and refactored hostname verification logic in mmm Connection. java and ppp Connection. java to enhance security by controlling hostname verification
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to
updated invocation method from ` joinInternal ( ) ` to ` invokeUrgent ( ) ` and modified assertions in ` CompactFormatIntegration
refactor the removal of joints from the body to the world object to improve clarity and maintainability of the code
fix nullpointerexception when search for phone number.
[ hotfix ] [ test ] add license to sourcereadertestbase
removed redundant error handling for missing document files in DocumentsStorageProvider. java to streamline error handling and improve code clarity
added new interface ` HookDefinition ` and ` JavaHookDefinition `, along with a corresponding test class ` JavaHookTest `, along with
refactored buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability
updated the ` setExoOptions ` method to accept a ` allowTs ` parameter to allow dynamic handling of time - to - live videos
removed a user identifier from the identifier collection in DMRDecoderState. java to streamline the state by eliminating unnecessary user identifiers
added a static Color instance and updated string formatting in Color. java and RailButtonShapes. java to improve code readability and maintainability by
updated null handling logic in CountAggregationFunction and added a new test for query options in NullHandlingIntegrationTest to ensure correct handling of null values
set ` deep ` to - 1 in ` InternalTransaction ` to ensure proper initialization of the ` deep ` variable
replace string concatenation with StringUtils. escapeForXML in StreamInitiation. java to ensure proper handling of XML input in stream initialization
updated file creation to use a configuration object for the work directory to improve flexibility and maintainability of the code
added deprecation handling for deprecated rules in RuleSetFactory to ensure proper management of deprecated rules in the application
don't use dummy label in amd64directcallop.
refactor TimeRange class to use static final constants for minStamp and maxStamp to improve code clarity and maintainability
refactor BitDocIdSet class to improve code readability and maintainability
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated emitMetricsJson method to improve code clarity and maintainability by centralizing connection logic
refactor attachment checks in DetailFragment and GalleryActivity to improve clarity and maintainability of the code
fix tank tank not work for remote player
refactor CsharpLibrary to handle both RuleAnalysisLegacyBuildRuleView and PrebuiltDotnetLibrary to improve robustness by ensuring only
don't register a pep service if it don't exist.
add null check for runtime in IntrinsificationPhase. java to ensure that runtime is not null before proceeding
updated conditional checks in ` MetricTrackingWindmillServerStub. java ` and ` StreamingDataflowWorker. java ` to improve code
pdfbox - 2576 : don't store last objectid and genid if last eof marker be negative
added constructors and listeners to the LwjglApplet class to enable proper initialization and lifecycle management of the LwjglApplet
refactor string representation in EnvironmentAndSystemPropertyClientProviderStrategy to improve readability and maintainability of the code
[ ldaptive ] remove doPostAuthentication method from ldapauthenticationhandler
refactor Int2ObjectCache class to improve code readability and maintainability
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize this field to
refactor Readable class to improve code readability and maintainability
danielwagnerhall for fail test on slow machine
updated the icon resource for the share menu item in CaptureActivity to ensure the share menu displays the correct icon resource
replaced the use of Collections. class. getMethod ( " emptySortedSet " ) with a new JVM _ SPEC _ VERSION constant to improve
updated network timeout handling in ` PoolUtilities ` to include ` NoSuchMethodError ` to improve error handling for non - JDBC 41 compliant drivers
refactor GenericContainer class to improve code readability and maintainability
replaced Set with List in Enclosed. java to improve performance by using a more efficient data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl, ImmutableAuthentication, AbstractCasProtocolValidationSpecification, and AbstractCasView to improve code
rearranged whitespace in ChartProvider. java to improve code readability and maintain consistency
fix : use getparent ( ) instead of path ( )
modified JavacParser's return statement in ` JavacParser. java ` and added a new ` ExtraSemiTest. java ` file to
added support for querying users by createdat after and before keywords in the User repository to enhance query capabilities for users with and before keywords
rename Test15FloatJNIArgs class to improve clarity and consistency in naming conventions
removed unused imports and updated version information in PlotSquared to streamline code and improve clarity in versioning information
fixed substring index in MockProcessContext and added a test for fake encryption and decryption in TestMockProcessContext to ensure correct decryption behavior and validate
enforcement of reentrant calls in the archive
added null check for inp _ dep before merging dependencies to avoid potential NullPointerException when inp _ dep is null
added a timeout of 10 seconds to the @ Test annotations in SslBytesServerTest. java to improve test stability by ensuring tests are
refactor Peer class for improved readability to enhance maintainability and ease of understanding for future developers
updated methods in RealtimeIndexingCoordinator, RealtimeSegment, StreamProvider, and StreamProviderConfig to improve clarity and consistency in method naming
modified FailureWatcher to check for null before writing output to avoid potential NullPointerExceptions when accessing viewCaptureDataSupplier
refactor scrolling calculations in RecyclerViewFastScroller. java to improve code readability and maintainability
updated error message and added a method to check if the tool window is instantiated to improve clarity of error messages and ensure proper handling of the tool
added a conditional check for Windows before adding a JCheckBox to preventSleep to ensure that the JCheckBox is only enabled for Windows users
updated import statements from javax. servlet to jakarta. servlet in HttpConfigurationAuthorityOverrideTest. java to ensure compatibility with Jak
added support for vertical bar layout in QuickstepAppTransitionManagerImpl to ensure proper scaling of window dimensions based on device profile settings
added full - screen exclusive mode management in XWindow and its peers to improve user experience by ensuring consistent fullscreen behavior
added substring operations for played duration strings in StringUtil. java and created a new UMSUtilsTest. java file to enhance the functionality of the
added methods to handle DAG credentials in DagUtils. java to enhance functionality for adding DAG credentials based on path requirements
( chore ) camel - core : use entryset iterator instead of keyset iterator
trim whitespace from the names array in SessionState. java to ensure proper formatting of thread names without leading or trailing spaces
updated the message in GpsMainActivity to refer to a file instead of the current one to improve clarity and accuracy in user feedback regarding the logged
refactor Job class to improve code readability to enhance maintainability and ease of understanding
added an ` Unused ` class with methods for retrieving integer, boolean, and double fields in the ` Main ` class to provide a mechanism
updated HBASE _ MASTER references from " hbase _ master _ host " to " hbase _ master _ hosts " in multiple files to ensure consistency
deleted ` EventReaderDeserializer ` and ` EventWriterSerializer ` interface files to streamline the codebase by removing unused components
updated performJoin method to return a list of output records instead of a single record to enhance data handling by allowing multiple output records
updated MAX _ DELEGATE _ LOCK _ PERIOD logic and modified related conditions to ensure that the lock period accurately reflects the maximum
fix nics to return null when network rate be 0.
updated CmcExchange constructor to initialize services and apply exchange specification to ensure proper initialization and configuration of exchange services
refactor IP address retrieval logic in GossipLocalNode. java and update test CONFs in Constant. java to improve code clarity and ensure
use system property ` ` hazelcast. client. tpc. enabled'' instead of ` ` hazelcast. client. tpc. enabled '
update version from 2.1. 2. 10 - 1 to 2.1. 18 in multiple API application classes to ensure compatibility with the latest version of the
refactor the division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve performance and facilitate
modified the key assignment logic in NamedObjectList. java to ensure a default empty string is used when the name is blank to improve clarity and
corrected the spelling of " tmpTableName " to " tmpTableName " across multiple files to ensure consistency and correctness in the code
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with kryo to enable serialization support for RCFileInputFormat in the application
added default methods for retrieving Java types and categories in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host headers in HTTP requests to improve robustness by throwing an exception for invalid host headers
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ReflectionHelpers for time zone lookup to improve compatibility with newer SDK versions
modified the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp. java ` to ensure proper handling of outgoing values
refactor ` SegmentCoreReaders ` and ` SegmentReader ` to use ` si. name ` instead of ` core. segment ` to improve
added a new method ` hasMainThreadProfile ` in ` AggregateDao ` and related classes to check if a main thread profile exists before proceeding
added annotation validation for non - required source ABI rules in InterfaceValidator to ensure that annotations are only processed when the source ABI is absent
updated the name constants in GreekLowerCaseFilterFactory, IrishLowerCaseFilterFactory, UAX29URLEmailTokenizerFactory, and TUR
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
[ ds - 4892 ] fix backward compatibility of search servlets
added a list of strings for America / Dawson, America / WhiteHorse, and America / Yukon in BasicDateTime.
updated SurfaceSyncGroup instantiation to include a " TaskBarController " to provide a more descriptive name for the SurfaceSyncGroup
refactor GridFS file deletion and opening download stream methods to improve code clarity and maintain consistency in method usage
added unit tests for COLUMN _ TOTAL _ SIZE and COLUMN _ BYTES _ DOWNLOADED _ SO _ FAR in ShadowDownloadManagerTest
modified character insertion logic in TextField. java to handle both ENTER _ DESKTOP and ENTER _ ANDROID cases to improve text insertion accuracy for
fix ` ` nullpointerexception'' in group node view
added afterSetStatements method and refactored related logic in BlockLexicalContext to improve code clarity and maintainability by encapsulating logic
added hashCode and equals methods to ` IntervalXYDelegate ` and ` XYSeriesCollection ` classes to improve hash code generation and ensure proper equality comparison
fix clientqueuerdisruptiontest
corrected formatting of method parameters in CloudWatchAppender. java and added a new test class for scripted attribute filtering to improve code readability and ensure
updated the method call from serializeSpecialDoubleValues ( ) to serializeSpecialFloatingPointValues ( ) to ensure proper serialization of special floating point values
added calls to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed. wait
added checks for empty language tags and modified language canonicalization logic in Locale and LanguageTag classes to improve robustness and correctness of language processing
kvm. ssh. to. agent : add config to allow to SSH into KVM Agents
changed access modifier of several methods in SchedulerWhen from public to package - private to allow access to these methods from outside the Scheduler class
updated import statement from ` com. astuetz. viewpager. extensions ` to ` com. astuetz. viewpager
added a condition to check if's'is not empty in SimpleSearchQueryConverter to ensure that the filter only processes non - empty strings
updated sort column labels to use " Natural column order " instead of " natural order " in BrowserContentPane. java to ensure consistency in
removed a method call to Arrays. copyOf with a size of 6 to streamline code and improve performance
replace ` write ( remoteAddr ) ` with ` htmlEncodeButNotSpace ( remoteAddr ) ` in ` HtmlSessionInformationsReport
change itemstatetriggerhandler to use smarthome / items instead of /
removed unnecessary synchronized blocks from FastHttpDateFormat. java to simplify code and improve readability
added thread pool for file moving operations in Hive to improve performance by reducing contention during file operations
added ` trigger ` and ` trigger ` methods to ` WrapTimer ` to enable flexible task scheduling based on a specified period
added support for additional SQL types in TypeStringUtils to ensure proper handling of various data types in the type conversion process
added a verbose option to the error setting in AbstractStatusReporter to enable conditional logging of messages based on configuration options
added menu toggle functionality to header and item controls to enhance user experience by allowing toggling of menu
s2s vpn : don't esit connection between same account's vpn gateway and customer gateway
updated error handling in CursorReadingTask and added unit tests to improve error management and ensure proper exception handling
pdfbox : don't throw an error if the pdf be encrypt
curatorwatcher don't close the curatorwatcher if the client don't close the curatorwatcher (
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code clarity and maintainability
updated the method for deleting items in HostsList. java to improve code clarity and ensure proper deletion of items
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of ` replaceOrderBulk ` from ` Collection ` to ` List < BitmexPrivateOrder > ` to improve type
renamed the method ` enterDefault ` to ` enterIdentNode ` and added a new method ` enterFunctionNode ` in ` Lower `
added a new utility class ` J9ConstantHelper ` for retrieving long values from a class to improve encapsulation and ensure correct retrieval of long values
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification exceptions during multi - threaded testing
added notification of roster offline and resource removal to transport session.
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator. java ` and added a method in `
updated method call formatting in FunctionObjectCreator. java to improve code readability and maintain consistency
added null check before initializing ExtensionTypeCustomDesers in MessagePackFactory to avoid potential NullPointerExceptions during deserialization
remove the system property " mockserver. logLevel " and set it to " WARN " to streamline logging by removing unnecessary system properties
removed the @ Test annotation from AbstractRegistryFactoryTest. java to streamline test code by eliminating unnecessary test cases
removed unused JettySolrRunner creation method from AbstractSolrMorphlineZkTestBase. java to streamline code and improve maintainability
updated scoreMap and termScoreMap to use String and termScoreMap instead of scoreMap and scoreMap respectively to improve clarity and consistency in
modified the data comparison logic in U64. java to use'< 0'instead of'& 0x8000000000000000L'to
remove line break in mainviewmodel. setheadlinestyle ( ` ` font - weight : bold'' )
updated notifyChange logic to include a condition for didSupportDarkText to ensure proper handling of dark themes based on support status
[ hotfix ] [ runtime ] fix non - force queue in checkpointrequestdecider
increased the maximum pool size from 2 to 8 and added a timeout for idle threads to improve thread management and allow more time for idle threads
replaced filter method with anyMatch method in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver. java to improve performance and readability of the code
[ testbug ] don't fail on window server core container
http : / / issues. apache. org / jira / browse / amq - 4237 - fix for http : / issues.
modify the getReturnValue method to throw an Throwable instead of null and modify exception handling to improve robustness by ensuring that the return message is
added a Repeatable annotation and a new Issue interface to the Issue class to enhance the functionality of the Issue class by allowing annotations to be
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor. java to align
updated socket connection logic to conditionally use the " socksProxyHost " system property to improve flexibility in connecting to different socks proxy hosts
[ hotfix ] [ runtime ] fix typo in slotreport and slotstatus
removed unused import of ClassUtils from ReflectionUtils. java to streamline code by eliminating unnecessary dependencies
replaced instances of HashSet with LinkedHashSet in SslContextFactory. java to ensure predictable iteration order for improved performance
added functionality to retrieve the system resource if it matches the specified location to ensure that the system resource is only retrieved when the specified location matches the
added a constant PLAINTEXT _ SEGMENT _ EXTRA _ SIZE in StreamingAeadDecryptingChannel and StreamingAeadSeekableDec
added a test for invalid fallback scenarios in ServerMvcIntegrationTests to ensure proper exception handling for invalid fallback scenarios
fix app page to use hostname verification
replaced the resetBytesReadCounter ( ) method call with a setSizeLimit ( 0x7FFFFFFF ) to ensure proper handling of size limits
move preferaccesstor field to protectionpolicy.
( chore ) camel - opentelemetry : remove system. out. println
added a new test method ` testLoadBalancerInstanceOperations ` in ` ElbIntegrationTest. java ` to verify the functionality of the ` register
rename ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver. java ` to improve clarity by explicitly indicating the purpose of the
added error handling for file creation in DiacriticTest. java to ensure robustness by preventing crashes due to invalid file paths
hhh - 146643 - followonlockingtest fail on oracle 11 when use a driver other than ojdbc6
updated texture file handling and improved error messaging in TextureUnpacker. java to enhance robustness and provide clearer error messages when the texture file
refactor cluster creation and update service state handling in AmbariManagementControllerImpl. java to improve thread safety and ensure consistent state updates
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code clarity and maintainability
added unit test for closing statements and modified resource management in Hive classes to ensure proper resource management and prevent potential memory leaks
don't call inputstream. mark ( ) if it's not support
modified the retrieval of the database schema response to include pre - deleted databases to ensure that the response accurately reflects the state of the database
added a null check for " chunkedWriter " before writing to the pipeline in Http1xUpgradeToH2CHandler. java to ensure
added a delete confirmation button to the EnhancedBrowseFragment and FullDetailsFragment to ensure users confirm deletion of items before proceeding
refactor RuleFinder to implement RuleBank and update related classes to improve code modularity and maintainability
added exception handling to the doFinal method in JcaTlsCrypto. java to improve robustness by throwing a TlsFatalAlert with
fix for jdk - 81
replaced the ` removeMetaDataSource ( session ) ` method with a call to ` toFront ( ) ` in ` DataBrowser. java `
phoenix - 2184 : fix nullpointerexception in defaultmemstore. seek
[ hotfix ] [ taskmanager ] use localrecoverystatedirectory in taskmanagerservices
modified AlterTimeSeriesStatement to set the'isAlterView'property to final and updated constructor accordingly to ensure proper handling of ALTER _ TIMESER
fix regex pattern for ` ` matchtext ( )''
added error handling for routingTableBuilder retrieval in HelixBrokerStarter. java to improve robustness by preventing application crashes due to potential exceptions
fix npe in http client with empty map.
( chore ) camel - jms : use char [ ] instead of string
bug cs - 154292 : fix for bug in apiservice.
removed the ` toSortedListWithCounts ` method from ` Counters ` and updated equality checks in ` CountersTest ` to simplify the code and
modified the ` initialize ` method in ` BasicTumbleStepper ` to accept a ` original ` SimulationStatus ` and set warnings
truffle : add miss compilerdirectives. transfertointerpreterandInvalidate
modified the handling of variable names in PrettyPrinter. java to improve code clarity and maintainability by using a more descriptive variable name
added null checks for indexToNode in LRUDictionary. java to avoid potential NullPointerExceptions during indexing
refactor filtering logic in DatagramSocket. java to improve clarity and functionality to enhance filtering accuracy and ensure proper handling of datagram packets
updated JUnit imports and annotations in TestQueryDNS. java to use the newer JUnit 5 features and improvements
added a new class NutchServerInfo with getter and setter methods for startDate, job, and runningJobs to provide access and modification of
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter ` to improve attribute handling
add timestamp option to cqlinserter and thriftinserter
refactor DSAParameterGenerator to use BigInteger. ONE and improve error messages to enhance code readability and maintainability by standardizing constant names
refactor NumberUtils and Numbers classes to improve type conversion and encapsulation to enhance code readability and maintainability by standardizing numeric operations
updated mask check in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and validate expected values in tests
added SQL state check for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to constraint violations
remove setzeroifnotfound ( ) from remotingcommand rewriterequestforstatictopic ( ) method
added methods to add and edit tabs in the Tabs class to enhance tab management by allowing customizable tab creation
replaced ` toArray ( new Object [ 0 ] ) ` with ` toArray ( new String [ 0 ] ) ` across multiple Java files to ensure
[ hotfix ] [ test ] add mockenvironmentbuilder. settaskmanagerruntimeinfo ( )
refactor conditional checks in MavenVisitor. java for clarity to improve readability and maintainability of the code
updated mock names from " MOCK _ APP _ NAME2 " to " MOCK _ APP _ NAME _ UPDATE " and added new mock names for
added a new file FormatCheckingTest. java to validate class format errors to ensure that the application correctly handles and reports illegal class names
updated line number assignment in CodeGenerator to use the current line number directly to improve accuracy in line number reporting
added a try - catch block around the addition of a service property to the result to handle potential exceptions when accessing service properties
added methods to create RadioButton instances with command and image to enhance the functionality of the RadioButton class
updated cache size in LRUCache and MetadataQuerierByFileImpl to optimize performance by using a dynamic cache size
changed access modifier of DEFAULT _ CAPACITY from private to public and updated argument handling in ChannelParser and MessageBusParser to allow external access to
fix npe in camel - osgi when bundle name be null
updated log messages to use placeholders instead of string literals to improve readability and maintainability of log messages
[ hotfix ] [ test ] fix timeout issue in yarnsessionfifoitcase
refactor ` RobolectricTestRunner ` to use ` androidManifestPath ` instead of ` projectRoot ` to improve clarity and consistency in managing the
added null and empty checks for notPropagatedHeaders in AbstractMessageProducingHandler to ensure proper handling of non - existent headers in message processing
refactor CompareMode class to improve code readability and maintainability
added HasTests interface to Arg class and implemented tests in RustBinaryDescription and RustLibraryDescription to ensure that the Arg class implements Has
updated placeholder drawable references in FileMessageVH. java to improve clarity and consistency in drawable resource usage
refactor OnExitTest class to improve code readability and maintainability
added onUserPreferenceChanged method to recreate the taskbar when user preference changes
added support for IBM VM dumps in HeapDump. java to enhance compatibility with different VMs
( chore ) camel - mybatis : ensure session be close even if commit fails
douniaberrada : fix a bug in the ie driver.
updated annotations and variable types in IteratorToFor. java to improve type safety and clarity in the code
set the application's state to unavailable to ensure proper state management during application state transitions
updated position and limit calculations in ByteBuffer and StringCharBuffer classes to improve accuracy of position and limit calculations
changed the method call from ` toUri ( ). toString ( ) ` to ` toString ( ) ` in ` ConditionalResolverMergeFiles. java
added null checks and modified setEmpty methods across multiple classes to ensure proper array handling and prevent potential NullPointerExceptions
changed the visibility of the ` Protocol ` and ` Transport ` enums from package - private to public to allow access to these constants from outside the
chewing gumor's query test : fix broken test
don't send offline payment status for pending ticket
added a timeout thread management in HttpChannelState and removed IOExceptions from AsyncEvent methods in QoSFilter to ensure thread safety during timeout handling and simplify event method signatures
replaced printStackTrace ( ) with logger. warn ( ) and added debug logging in multiple test classes to improve logging detail for debugging purposes
updated package - info. java files for mmm and ppp packages to improve clarity and maintainability of package documentation
patch by jbellis ; review by brandonwilliams for cassandra - 1373
added support for the " Home " model in the HeosDiscoveryParticipant and updated the HeosPlayerHandler to handle the " Home " model
added a new ` Wait ` class with getter and setter methods in ` PlainSelect ` and ` SelectDeParser ` to enhance SQL parsing capabilities
refactor Neo4j node and edge data handling to use AttributeController for better attribute management
added null check for serverName in SessionManager to prevent potential NullPointerException when serverName is null
nifi - 1086 : move rocksdbmetronome to controller package to avoid use of rocksdb
updated the method call for retrieving the " IS _ GRANTABLE " value to improve clarity and accuracy in retrieving the grantable status
added logging for asynchronous execution and modified URL validation logic to improve debugging capabilities and ensure proper URL validation
( chore ) camel - cxf : allow camel - mtom test to run on macos
added a check for a new column descriptor before modifying it in LoadTestTool. java to ensure that modifications only occur when the column descriptor is
modified Texture class to implement Disposable interface to ensure proper handling of disposable textures
added null checks for ` tldBundleLocation ` and replaced ` WebappRegistrationHelper ` with ` WebBundleDeployerHelper ` to improve
don't use goquorum privacy if goquorum privacy be enable
replace IOException with Throwable in HttpInput. java to improve error handling by using a more general Throwable type
added a country check for " JP " in LocaleTest. java to address issues caused by country changes in the JVM
updated response type from Wrapper to HostResponseWrapper across multiple services to ensure consistency in response handling across the application
updated query equality and hash code calculations in FilteredQuery. java to ensure proper handling of boost values in queries
removed unnecessary whitespace in the constructor of FileMenuFilter to improve code readability and maintain consistency
ggb - 2852 : show log message only if there's location
added a new file TestCMSClassUnloadingDisabledHWM. java to test CMS class unloading behavior to ensure that the CMS class
check for empty entity list before create a new item tossevent
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated method signatures to conform with ` ItemPreparedStatementSetter ` interface for better integration with Spring Batch
use identityqueryfilter instead of range. forkeyrange ( )
added null check for " type " attribute in MiniAapt. java and introduced a new test case in MiniAaptTest. java to
added support for the SPEL operator in the OperatorEnum and created a new SpELJudge class to enhance the functionality of the Spel
updated the type check from BIGINT to BIGINT in LocalExecutionPlanner. java to ensure proper type validation for BIGINT
bugfix # 20611, use eventqueue. getdefault ( ) instead of service. providers ( )
updated import statements in ConscryptTest. java to improve code clarity and maintainability
updated initialization of ` start _ offset ` and ` length ` Refs in ` ShadowArscAssetManager9. java ` to ensure proper
updated the source and target options in SetupHid. java from " 1.0. 5 " to " 6 " to ensure compatibility with the latest
[ hotfix ] [ table - planner - blink ] optimize pushprojectIntotablesourcescanrule
added imports and modified the way localized names are retrieved in AboutActivity. java to improve code clarity and ensure consistent ordering of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a conditional check for liveStreaming before refreshing shared preferences to ensure refresh only occurs when liveStreaming settings are enabled
added the exception object to the MappingException for better debugging to improve error reporting by providing more context on the exception
( chore ) camel - ftp : use awaitility in test
updated generic type parameters in CompositeType and DynamicCompositeType classes to enhance type safety and eliminate unchecked warnings
added support for transport checks in GitClientApplication and modified repository URL handling in RepositoryUrlPanel to enhance security by allowing transport checks in the application
[ unstash ] add a debug log to trackpad gestures
added null check for mavenMetadata before retrieving available versions to improve robustness by preventing potential NullPointerExceptions
added checks for " Disabled " in TestLargePageUseForHeap. java to ensure proper handling of large page support scenarios
cloud _ usage : skip event migration if usage db don't exist
( chore ) camel - broker : fix test failure on window
added a new test class for ObjectStreamClass functionality to ensure proper serialization and deserialization of ObjectStreamClass objects
removed redundant null checks for myself. getDataCenterInfo ( ) in ZoneAwareDiscoveryFilter. java to simplify the code and improve readability
change log level from error to warn for tracing data capture failure
added a ` toString ( ) ` method to the ` Generator ` class to provide a meaningful string representation of the registered generator
refactor URI handling to improve clarity and consistency to enhance readability and maintainability of the code
added a null and empty check for resources in ClusterControllerImpl. java and implemented a test case in ClusterControllerImplTest. java to ensure
refactor API response handling in AccepttoApiUtils. java to improve error logging and streamline response extraction process
modified vertex buffer allocation logic in VertexBufferObject. java to ensure compatibility with devices running Android and above
refactor SybaseASADatabase class to improve code readability to enhance maintainability and facilitate future updates
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related code accordingly to enhance the functionality of the ` Hash
added a method ` getStringDistance ` to ` SpellChecker ` to provide access to the ` sd ` variable for external use
added FLAG _ IMUTABLE and modified PendingIntent creation methods in AndroidImplementation. java to ensure proper handling of mutable PendingIntents across different Android versions
added methods to append read column IDs in HiveFileFormatUtils and updated HiveInputFormat to utilize this new method to improve code clarity and maintainability
updated upNP address method from UPNP to IPv4 multicast address to ensure proper handling of IPv4 addresses
added functionality to DisplayTemporaryToast in SavedExperiments. java to improve user experience by displaying a temporary toast
added version handling in ServiceModule and a corresponding test case in ServiceModuleTest to ensure correct version reporting for service resolution
added a new test class RawSerializationTest for Gson serialization to ensure proper serialization and deserialization of collections and objects using Gson
simonstewart : add support for ssl certificate generation.
modified the loop to iterate through replies and set padding based on the size of replies to improve performance by avoiding unnecessary iterations when processing replies
increased the timeout duration for ResourceAccessException in ExpiringUrlCacheTests from 3 seconds to 60 seconds to accommodate longer test cases by allowing
added a test method to verify the payload in the NGramFilters class to ensure that the payloads are correctly handled during token processing
refactor AclImpl class to improve code readability and maintainability
added a test to verify that different array sizes are randomized with different sizes in EasyRandomTest. java to ensure that different array sizes are
ssvm : fix findbugs warning in citrixresourcebase. java
added a ThreadLocal for managing the ` tryWriteAgain ` state in ` SslConnection. java ` to improve thread safety and prevent potential race conditions
refactor Actor class to use actor's parent directly to improve code clarity and maintainability by using actor's parent context
added logging for deployment group failure in RollingUpdateOpFactory to improve error handling and debugging capabilities
[ hotfix ] [ table - planner - blink ] fix checkstyle violation
added handling for AuthenticationFailureUsernameNotFoundEvent and updated logger messages accordingly to improve error handling and provide clearer logging for authentication failures
modified AtMostXVerificationTest. java file to enhance verification accuracy
updated default QType assignment from " lucene " to " LuceneQParserPlugin " across multiple files to ensure consistency in the default QType and
updated SimpleDateFormat instantiation to include Locale. US to ensure consistent date formatting across different locales
added a ` isInitialized ( ) ` method to ` ILanguageServer ` and created a new ` LocalsCompletionTest _ template ` class to
updated test parameters and variable names in ClientAPITokenIntegrationTest. java to improve clarity and consistency in assertion logic
added beginTransaction ( ) and setTransactionSuccessful ( ) methods to DatabaseAdapter and modified transaction handling in GncXmlHandler to improve transaction management
replaced byte array handling with ByteArrayOutputStream in MimeType. java to improve performance and reduce memory usage during file operations
added @ Override annotations and simplified exception message assignment in MessagingTemplate. java to improve code clarity and ensure proper handling of client timeouts
added an override to the isAcceptable method to check if the source file is a CompilationUnit to ensure proper handling of source files in the
added maximum buffered documents and RAM buffer size configuration in TestIndexWriterMergePolicy. java to improve indexing performance and reduce memory usage
added functionality to update witness counts in the Manager and ManagerTest classes to ensure that the witness capsule updates correctly and improve test coverage
added error handling for iterator access in CopyOnWriteMap to improve robustness by preventing NoSuchElementException during iteration
flume shell don't log the flume version
updated metrics assertions in BasicAuthIntegrationTest. java and modified DaemonStream. java to use ExecutorService to improve accuracy of authentication metrics and ensure proper
changed the implementation of the ` nodes ` variable from ` HashMap ` to ` LinkedHashMap ` to ensure predictable iteration order for the ` nodes `
add jerseysupport. toresponse ( internalerrorexception ) to jerseysupport
refactor header validation in Http2TestBase to use a dedicated validateHeader method to improve code readability and maintainability by centralizing header validation logic
added conditional logic to map system properties based on Java version to ensure proper handling of system properties based on Java version
updated method signatures in StringSubject and StringTest to accept CharSequence instead of String to improve flexibility in handling character sequences in string operations
add jvm. countertime ( ) and jdk. jfr / internal / jvm. getClassId ( ) and jvm. getEventwriter ( )
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated CONNECTION _ FACTORY2 assignment to use ds2 instead of ds to improve flexibility in managing database connections
refactor DeploymentOptions class to improve code readability and maintainability
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` instead of a ` ConstantState ` to simplify drawable handling and
updated InputStream handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve performance and simplify resource management
added support for coalesce operations in RexNodeConverter to ensure proper handling of non - null coalesce expressions
( chore ) camel - hl7 : remove unused unit test
updated proxy factory to use context class loader to ensure proper class loading for the proxy factory
refactor DefaultDateTypeAdapter to remove DateFormat dependency to simplify constructor and ensure thread safety during serialization and deserialization processes
reformatted code in DocumentUtil. java for consistency to enhance code readability and maintainability
refactor query parsing logic in HttpClientRequestBase. java and add assertions in HttpClientRequestBaseTest. java to improve code clarity and ensure proper handling
removed the filterOldEntries method from FeedRefreshUpdater. java to streamline the code by eliminating unnecessary functionality
change log level from fatal to warn in FSHLog. java to improve error handling by providing a more appropriate log level
refactor NodeMap class to implement Iterable < T > and improve iterator implementation to enhance code clarity and ensure proper handling of null values
updated predicate handling in DiscoveryClientRouteDefinitionLocator to use FilterDefinition instead of FilterDefinition to improve clarity and consistency in predicate definitions
added a null and empty check for fields in MongoRecordReader and updated return logic in RexToMongoTranslator to ensure robust handling of empty fields and
of - 2716 : add admin to default admin list if there be no xmpp server
replaced usage of MultiFields with SolrIndexSearcher in multiple files to improve compatibility with SolrIndexSearcher for term retrieval
( chore ) camel - core : optimize constantbeanholder. tostring ( )
updated GroovyParserVisitor to check for non - null primitiveType before building names to improve robustness by ensuring proper handling of null primitive types
remove uninterruptible hashcode ( ) method from frameinfoqueryresult
increase offer timeout for seda blockwhenfull test
add new file package - info . java for the ppp package to establish package - level documentation for organization and clarity
update read length calculation in MessageUnpacker. java to ensure proper handling of buffer position to prevent potential ArrayIndexOutOfBoundsException
updated import statement from ` io. micrometer. common. lang ` to ` io. micrometer. core. lang
updated SQL query in IconCache. java to filter results based on user serial to ensure that only valid user data is processed in the database
fix typo in defaultmqproducerimpl # getbackpressureforasyncsendnum
added a boolean parameter to the addWhitelistedResource method across multiple classes to enhance resource filtering by allowing only class files to be whitelisted
added foreign key constraints to the ` baremetal _ dhcp _ devices ` table in the ` cloud ` table to ensure proper data integrity and
removed IJava2DRenderer interface and its implementation from Java2DRenderer to simplify the code by eliminating unnecessary complexity
added @ NonNull annotation and an onTearDown method in DefaultAudioSink to ensure proper handling of offload buffer emptying when the listener is
refactor UpstreamCacheManager to use a ScheduledThreadPoolExecutor for scheduling tasks to improve efficiency and maintainability of the upstream task management
refactor StreamType class to improve code readability and maintainability
updated assertion message in Recording. java to include the expected output to provide clearer context for the assertion failure
refactor filestore page to use ` RequiresAdminRole ` instead of ` GitBlitWebSession ` to enhance security by restricting access to
( chore ) camel - elasticsearch : ignore camelelasticsearchresttest
added a check for the declaring class in the method's accept method to ensure that only non - lifecycle methods are processed
changed button labels from " leftButtonAltcoin " and " rightButtonFiat " to " buyWithFiat " and " sellWith
camel - 8016 : camel - restlet - allow restlet route to match restlet context path.
make block. coinbaseversion nullable in block. createnewblock ( )
updated serialization methods in BTreeMapJava and ConcurrentSkipListMapTest to use a generic serialization method to improve serialization handling and eliminate unchecked warnings
added null check for the cause in the error logging to avoid potential NullPointerExceptions during rule execution
refactor conditional check in Main. java to improve readability to enhance code clarity and maintainability
changed the method call from ` mFilesAll. indexOf ( file ) ` to ` mFiles. indexOf ( file ) ` to improve clarity
deleted the PlainVerifier. java file to remove unused code that is no longer needed
added a conditional check to close system windows when triggered from an AltTab to ensure proper handling of system windows when triggered from an AltTab
updated DialogFragmentIT and OCFileListBottomSheetDialog to use bottom sheet behaviors to enhance user experience by ensuring proper interactions with the bottom sheet
updated MimeUtil's parseCharset method to include " UTF - 8 " encoding to ensure proper handling of character encoding in email parsing
added a call to the superclass's deinitialize method to ensure proper initialization of the TextField instance
replaced ObjectInputStream with TestUtilities for serialization testing to simplify serialization process and improve code maintainability
updated preRange parsing and added new test cases in GroupByFillDataSet and PhysicalPlanTest to ensure correct handling of last values in SQL queries
added validation for negative array size and improved argument list handling in JAXWSExceptionBase. java to ensure proper error handling for negative array sizes and
test : migrate ctresolvedimporttest to junit 5
increased the join duration from 10 seconds to 60 seconds in T6567415. java to improve responsiveness by allowing more time for thread
[ hotfix ] [ test ] fix default scheduler configuration for legacy mode
added ` @ Implementation ( i18nSafe = false ) ` annotations to ` ShadowActivity ` and updated ` @ Implementation ( i18n
updated POIFSFileSystem to use POILogFactory and POILogger instead of commons logging to improve logging consistency across the codebase
modify alarm handling in InstarHandler. java to use channel state methods to improve clarity and maintainability of alarm processing
increment of remove latency when map be delete
refactor status checks in Response. java to use a switch statement to improve code readability and maintainability
refactor JavaFileManager location retrieval to improve clarity and maintainability to enhance code readability and facilitate easier debugging
add -- project - name option to createadditionalsettings. ( # 2858 )
added a new test class ` DeprecatedStubbingTest ` to verify the behavior of stubbing methods in Mockito to ensure that stubbing functions correctly
replaced ` org. eclipse. jetty. server. DispatcherType ` with ` javax. servlet. DispatcherType ` in ` ITBraveServlet
add support for nml and NX to participialmodifiergrannotation
add system property ` ` org. bouncycastle. jsse. allowrsakeyexchange'to allow rsa key exchange
replaced the use of ` output _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent potential memory leaks
[ pubsub ] delete the access token when an access token be delete.
updated interpolators from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView. java to improve animation
added handling for ` UpdateRegionLocation ` in ` ConfigPhysicalPlan ` and updated log messages in ` ProcedureManager ` and ` DataNodeInternalRPC
added a new file ` FileDialogLeakTest. java ` to test the finalization of ` FileDialog ` to ensure that the final
updated package structure and imports in TestOpenTableInCoprocessor. java to improve organization and maintainability of the code
svm : do not return false for uninterruptible implementation method.
[ flink - 26400 ] [ table - planner - blink ] remove split method from pbcodegenrowserializer
updated null check for dims [ 1 ]. disi in DrillSidewaysScorer. java to ensure proper handling of potential null pointer
updated ExoPlayerTest and DynamicConcatenatingMediaSourceTest to use blocking calls and modified FakeMediaSource to synchronize access to timeline changes
added JVM version checks in Constants. java and updated conditional logic in Helper. java to ensure compatibility with different Java versions
updated FileReporterTest to accept a String and a File parameter to enhance flexibility in file reporting by allowing different input types
updated the method call from ` getEndToEndEncryptionKeysExist ( ). isFalse ( ) ` to ` getEndToEndEncryptionKeysExist (
added support for action bar navigation in DirectMessageConversation to enhance user experience by providing smoother navigation options
added GET _ USER functionality and updated PROTOCOL _ VERSION in RpcServlet and RpcUtils to support retrieving users based on specific request types
added a system property check for 64 - bit architecture in TestJdbcPluginWithMSSQL. java to ensure compatibility with 64 - bit systems
updated the method call to use ` originalStartClass ` instead of ` startClass ` to ensure consistency in class handling by using the original class
DexBody. java to improve error message and add local handling for parameter registrations to enhance debugging clarity and ensure local management during method execution
replaced calls to ` getAsyncContext ( ). getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
fix for nimbus look and feel
updated regex pattern in AppPage. java to ensure consistent formatting to improve code readability and maintainability
added startAlpha and startY calculations for appsView and appIcon in LauncherAppTransitionManagerImpl. java to ensure proper handling of alpha and translation
dumpedprivatekey : improve error message
fix typo in edit offer data
updated milestoneParameters assignment based on whether the milestone is open to ensure proper handling of open tickets and repository parameters
change the battery limit from 640x640 to 640x808 in PipeItemsWood. java to allow for more than 80 items in the
added a new parameter ` blueprintName ` and ` blueprintRev ` to the ` getStateMachineClusterInstance ` method to enhance functionality by allowing the
initialized ` downgradeAllowed ` to ` true ` in ` UpgradePack ` and added a test in ` UpgradePackTest ` to ensure that the
updated scan method calls to use ` fEntityScanner. scanQName ` instead of ` fEntityScanner. scanQName ` across multiple files to
[ lwjgl ] emulation of native library on linux.
replaced references to ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` LauncherModel. java ` to improve
added closeEntry ( ) method to DefaultPlatformManager and modified file output handling in FatJarStarter to ensure proper resource management and prevent potential
updated test method parameters and assertion messages in TestSecretKeyCredentialHandler. java to improve clarity and accuracy of test assertions
camel - 16400 : camel - spring - boot should use springcamelcontext instead of applicationcontext
polish ` ` only effective when a reporter be configure''
hbase - 19836 testfulllogrestruction should not use hbase. regionserver. flushlogentries
added methods for setting buffer size, reuse address, and traffic class in DatagramSocketOptions to enhance flexibility in configuring socket options
fix ` ` server. shutdown - message'' typo
remove deprecate Locatable interface from the internal package
updated error messages in VersionInfo. java to clarify field requirements to improve clarity and accuracy of error messages related to non - indexed fields
replaced equalityPredicateColumns with predicateColumns in StarTreeIndexOperator. java to improve clarity and consistency in predicate handling
modified formatting in HelloMessage. java and HandshakeHandler. java to enhance code readability and maintain consistency in formatting
bug fix : ` ` {'' } ;'' should be ` ` } ;''
changed access modifier of several fields from private to static in RecordReaderFactory. java and added a new test class in RecordReaderTest. java
added support for " GREATER _ THAN _ EQUAL " and " GREATER _ THAN _ EQUAL " queries in MongoQueryCreator to
refactor group by clause checks in ` CalciteSqlParser. java ` to improve clarity and correctness of group by clause validation
refactor MappedByteBuffer and FileChannelLinesSpliterator to use AtomicInteger for buffer management to improve resource management and prevent potential memory leaks
refactor method calls from ` l. getValidator ( ) ` to ` validator ` in ` LdapUtils. java ` to improve code clarity and
added schedule ( ) method to CircuitBreakerImpl and modified testCircuitBreaker to include ExecutionException and TimeoutException to improve circuit breaker reliability
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS condition from the intent configuration to simplify the intent configuration by removing unnecessary
update webui. submit. upload. ajax to webui. submit. progressbar
updated the display annotation for ` @ DisplayName ( " Retrieve view column privileges " ) ` to ` @ Disabled ( " Allow for retrieval
added synchronized keyword to the addExportedCount and getExportedCount methods to ensure thread safety when accessing shared data
updated import statement from ` IntRangeUtil1 ` to ` IntRangeUtil ` to ensure proper usage of the ` IntRangeUtil ` class
updated character encoding logic in HttpParser and added unit tests in HttpParserTest to ensure proper handling of encoded HTTP headers
changed the layout resource from trends _ activity to configuration _ activity to align the application with the new configuration layout
update print statement in SLWTTextListing. java to include position information to improve debugging by providing more context on the position of the SLWT
solr - 12028 : forceleaderwithtlogreplicas test be flaky due to race condition
refactor Thread class to improve code readability to enhance maintainability and ease of understanding
added a ` forceTemplateMode ` boolean to the ` RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES ` set in ` Abstract
camel - cxf : use equal ( ) instead of string + " : " + ns
removed unnecessary whitespace in YamlRepresenter constructor to improve code readability and maintain consistency
updated date formatting in ToChar. java and added a test for timestamp truncation in TestFunctions. java to improve clarity and correctness of date
added validation for transaction and write ID configurations in GenericUDTFGetSplits. java to ensure valid transaction and write ID configurations are handled correctly
replace ArrayList < String > with Collections. emptyList ( ) in JsonSerDe. java to improve code clarity and reduce potential null pointer exceptions
added null check for the book path and improved logging messages to enhance robustness by preventing null pointer exceptions
corrected formatting in SSTDeserializer. java and added a new test case in TestSTSSTDeserializer. java to improve code readability and ensure
updated default grid column handling in AppPreferencesImpl and ExtendedListFragment to ensure consistent scaling behavior based on user preferences
updated error message from " empty - differences in line breaks? " to " but line - break characters differ " in tests to improve clarity and
fix clippingmediasourcebuffer # waitforkeys ( )
updated API paths in OkexV3. java to align with the new API structure for account management
updated boundary conditions for boundary calculations in LineUtilitiesTests. java to ensure accurate detection of line boundaries
added error logging for varargs and old array syntax in JavacParser. java and created new classes VarargsAndOldArraySyntax. java and T
add warn if defaultdrmsessionmanager be use on wrong thread.
added support for method and string indices in VariableContext to enhance functionality to support method calls in variable contexts
added unit tests for invalid compilation and profile strings in ExperimentParserTest. java to ensure proper error handling for invalid compilation and profile strings
refactor buffer position handling in Piece. java and SharingPeer. java to improve code clarity and maintainability
added responseTimeout functionality to NettyRoutingFilter and related classes to enhance HTTP client handling by allowing configurable timeout duration
updated ` getNativeLinkTargetGroup ` and ` getNativeLinkTargetInput ` methods to use ` BuildTarget. getTargetForPlatform ( cxxPlatform ) `
camel - main : add unit test to verify rest configuration
added support for ` RexFieldAccess ` in ` ASTConverter ` and ` RexNodeConverter ` to enhance functionality for handling field access in query planning
replaced direct reference to ` QueryLogEntry. values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
add a no proxy predicate to the web client request
refactor certificate handling in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and maintainability of certificate processing
added reflection access checks and refactored related methods in NativeObject and ReflectionCheckLinker classes to enhance security by verifying access permissions for reflection
changed access modifier of constructors in CollisionMap from public to package - private to allow access to these constructors from outside the package
deprecated the getRawInputFromTransactionInput method and added a null check to ensure input is not null to avoid potential NullPointerExceptions
refactor logging level handling to use a switch statement to improve code readability and maintainability
don't use region _ id in insertsql ( ) statement. patch by jbellis
added support for handling EncryptedDocumentException in OldExcelExtractor to ensure proper exception handling for unsupported Excel file formats
add -- add - exports = org. graalvm. nativeimage. builder / com. oracle. svm. core. jdk = ALL
removed an unnecessary else block in TimeLineCursorAdapter. java to streamline the code for better readability and maintainability
increased sleep duration in BatchingStateChangeUploadSchedulerTest from 10 to 50 milliseconds to allow more time for attempts to complete
refactor EXTERNAL _ FILES _ DIR creation and deletion logic in ShadowContext and ContextTest to improve robustness by ensuring a valid directory is created
updated exception handling in ExceptionFactory. java to use Class. forName ( " org. opentest4j. AssertionFailedError " )
increased WAIT _ TIME _ MS from 10000 ms to 60000 ms to allow more time for the launcher to complete
updated imports and added AUD support in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance security by allowing customizable audience
camel - kafka : remove default value for ` breakonfirsterror `.
added a new static final integer named selectableItemBackground to facilitate the management of selectable items in the application
replaced individual import statements for trade DTOs with a wildcard import and added a method to place stop orders to streamline import statements and indicate that
updated event type assignment logic in TxnSetOperation. java to ensure proper event type handling when the record is null
add resumable randomaccessfile listener to throttle request
changed class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to accurately reflect the class being loaded
added support for setting formats in HSSFDataFormat and updated assertions in TestWorkbook to ensure proper handling of cell styles in the data format
toffffff
updated the condition for checking the maximum compressed length in CompressedInputStream. java to ensure that the checksum length does not exceed the maximum allowed lengths
camel - 16400 : add an idempotent repository to avoid idempotent operation
fix entity can not beRepaired due to entity not be render properly.
[ mng - 5018 ] don't return local artifact in legacylocalrepositorymanager
make sure taskmanager be start before jobmanager be initialize
added Maven deploy command to AbstractArtifactResolutionException. java to enhance the build process by providing detailed deployment information
updated the ` getInternalTemporalPath ` method to include ` mContext ` in ` FileStorageUtils ` to ensure proper context for temporary files
updated import statements and added a method to find FeedEntryStatus by entries to enhance functionality by allowing retrieval of FeedEntryStatus instances
added thread execution handling in ContextImpl and refactored DeploymentOptions usage in BlockedThreadCheckerTest to ensure proper handling of blocking execution in
updated the ` instantiate ` and ` convert ` methods to accept a ` formatterString ` parameter and improved error handling in the ` FormatterConverter `
updated Ezvcard parsing logic based on Android version to ensure compatibility with devices running Android O and above
refactor setRemoteAddress and setRemoteHostname methods to use instance variables to improve code clarity and reduce potential null pointer exceptions
added a null check for the realClass in Robolectric. java to ensure that the class is not annotated with @ Implements to prevent
added a check for ` tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory ` to ensure
updated character encoding from ISO _ 8859 _ 1 to ISO _ 8859 _ 1 and added a test for requesting a plain HTTP endpoint that throws a
added getter method for consumer and producer in AbstractKafkaResumeStrategy to allow access to these methods from subclasses
reformatted code for better readability in PageChangeListener. java and FrameRenderer. java to improve code clarity and maintainability
updated warning message from " no address / subject / text " to " no from / text " in CommunicationsManager. java to clarify
# 3952 - add query optimization for draftable element
added error handling for IOException during file transfer to improve robustness by gracefully handling potential IO exceptions
fix checkstyle issue in executablefactory and zipfolder
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
fix : when attach a file, use the current working directory
updated ` AccessTest. java ` to use ` LoadOptionsBuilder ` instead of ` newSchemaCrawlerOptions ` to improve flexibility in configuring
updated package structure and modified test methods in TestLoadLegacyLibrary. java to improve test organization and ensure proper functionality of native method invocations
modify TestReader to return null instead of throwing an exception to simplify error handling by returning a placeholder instead of throwing an exception
added methods to set the name, enabled, and expanded properties of the ProjectProperty class to enhance the functionality by providing context about the project '
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and prevent potential memory leaks
refactor DataStreamJob class to improve code readability and maintainability
refactor error handling in TestContentProvider to use try - with - resources for better resource management to improve robustness by avoiding potential FileOutputStream leaks
camel - 7999 : fix classcastexception in camel - cxf
added a conditional check for the " h2 - 14 " protocol in the HTTP2ServerConnectionFactory to ensure proper handling of the " h
updated method and parameter handling in LambdaToMethod and ClassFileVisitor to improve clarity and functionality of method references
loosen the restriction on sbarq in coordinationtransformer.
increased the timeout duration of the copyURLToFile method from 5000ms to 60000ms to allow more time for file operations to complete
added mpq. setSlop ( phraseSlop ) method to QueryParser. java to enhance query parsing accuracy by incorporating slop
increased sleep duration in LongPressMouseListenerTest from 10 milliseconds to 100 milliseconds to improve test stability by allowing more time for mouse events
updated the default value of Servers. parse from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to ensure
fix : add parallel task to game scheduler ( # 1373 )
updated visibility conditions for the compound view based on the availability of edit options to ensure proper visibility based on the availability of edit options
added progress calculation to ensure progress does not exceed minimum values to prevent potential errors during rendering
remove unused ` packetreceived ` method from clientsession and session
updated error handling and logging in ` DefaultCasDelegatingWebflowEventResolver ` and ` DelegatedAuthenticationGenerateClientsAction ` to improve clarity
added null checks for the service parameter in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction to enhance
add ` ` hidden = true'' to ` ` enable account level permission via smart contract''
added doNotInstrumentClass for " androidx. room. CoroutinesRoom $ Companion " in AndroidConfigurer. java to ensure
removed reliance on the current thread's context class loader in ` isSupported ` method to simplify the code and improve performance by eliminating unnecessary
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unnecessary setter
camel - 16400 : camel - jms - add maxconcurrentconsumers to reply manager so we can configure thread name for each reply manager
refactor AuthenticationProvider and TargetObject classes to improve code readability and maintainability
added tagging functionality to the PdfDocument class to ensure that text elements are properly closed when the writer is tagged
log4j2 - 1343 log4j2 - 1343 added patternselector test
updated HTA mode launch method and modified WindowsHTMLRunnerTest to handle UnsupportedOperationException to improve error handling for running Selenium tests under Selenium Core
added MwThankPostResponse class and modified thank method to return MwThankPostResponse instead of MwPostResponse to enhance
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` to extend it to improve separation of concerns in socket management
refactor revokingStore initialization and adjust maximum size settings to improve code clarity and ensure proper configuration of the revoking store
added tests for implicit joins in HQL queries involving calls and timestamps to ensure correct behavior of implicit joins in database queries
modified the assertion to trim whitespace from expected and actual strings to ensure consistent line separation across different operating systems
replaced references to ` pendingCommit ` with ` filesToCommit ` in multiple classes to improve clarity and consistency in managing file states
changed the ` final ` access modifier of methods in ` BaseError. java ` from ` public final ` to ` public final ` access to
added validation for user resource percentage input in ConsumeUserResourcePercentActuator to ensure that percentage values are within valid range to prevent runtime errors
added a condition to check if the legacy login setting is enabled to ensure that the login display only when the legacy login setting is enabled
rename test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to clarify the purpose of the test class
refactor response page handling in EditTeamPage. java to improve code clarity and maintainability
updated debug log message to include exception details to improve error reporting for better debugging
added exception handling for closing the serverSocket channel to ensure proper resource management and avoid potential resource leaks
refactor methods in Rocket. java to improve code readability and maintainability
added a method ` createDynPartSpec ` to ` BaseSemanticAnalyzer ` to handle dynamic partition creation to improve code clarity and maintainability
make sure round _ half _ up _ factor be set to 1 when use scientific format
added a method to visit a directory in ` JarDirectoryStep ` and updated ` DirectoryTraversal ` to handle directory entries to ensure that the directory
added a new JWKSetEditor class to handle setting JWKSet values to enable editing and editing of JWKSet objects
refactor term handling in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to improve code clarity and maintainability by centralizing term management
truffle : add truffle boundary for partial evaluation constant.
changed the default value of fetcher. threads. per. host. by. ip from true to false to ensure that fetcher threads are only accessed
updated condition to check for queryTimeout in StatementUtil. java to ensure proper handling of transaction timeout conditions
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest. java to ensure proper handling
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
cloudstack - 4417 : fix the bug that the initial delay for network usage stats update task be incorrect.
updated animation interpolators in multiple classes to use a constant for the FINAL _ FRAME value to improve code readability and maintainability by centralizing the
updated swipeLength calculation and adjusted visible bounds accordingly to improve the responsiveness of the navigation bar based on display density
added a new module - info. java file for the ` org. eclipse. jetty. http3. server ` module and updated the `
updated null handling in setTextValue and renamed JSON object names in JsonTest to improve robustness by preventing null pointer exceptions
refactor context assignment in ResourceResolverBean. java to improve code readability and maintainability
[ hotfix ] [ doc ] fix default value of checkpointingoptions. tolerabletfailurenumber
updated InnerClassesTable to use Element instead of TypeElement and modified the reportInnerClassReferences method to improve accuracy in identifying inner class references
updated command line formatting in TimestampCheck. java to enhance readability and maintain consistency in command construction
replaced FluentIterable with Java Streams in ChromeTraceBuildListenerTest. java to improve code readability and leverage modern Java features
don't export dubbo service registry if registry be set to true ( # 2453 )
fix crash when otr mode be disabled
added properties for node label outline size and transparency in the PreviewProperty and NodeLabelRenderer classes to enhance rendering flexibility by allowing configurable outline size and
updated ProxySelector, URL, and URLStreamHandler classes to improve code clarity and maintainability
modified the boolean parameter from false to true in Win32FontManager. java to ensure proper handling of font changes during rendering
added null check and cursor setting for the TreeVisitor instance to ensure stability by preventing potential NullPointerExceptions during execution
added error handling policy to the JDTBatchCompiler class to ensure proper handling of compiler errors based on environment conditions
added content and text anchor properties to LabelBlock and updated drawing logic accordingly to enhance label alignment functionality and improve rendering accuracy
refactor Class and Parameter classes to improve code readability and maintainability
refactor IndexReader class to improve code readability and maintainability
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added a null check for ` networkInterface ` to
updated ` fromRfc1123DateString ` method to accept ` Locale ` as a parameter to ensure consistent date formatting across different locales
fix flaky test : ` ` download miss file''
add option to output flowfile even when there be no hit
bug fix : use aggregation ratio instead of aggregation ratio
[ java ] fix switch / cases indentation see http : / / code. google. com / p / mybatis / issues / detail
fix npe in streamfilesp # drainwatcherevents ( )
refactor widget skipping logic in PageChangeListener. java to improve code readability and maintainability
added iswriteprotected ( ) method to workbooks that define a username of the length of the input stream.
added a try - catch block to unregisterInvalidatedSessions ( ) to handle potential exceptions during session unregistration
refactor CategorizationFragment. java to improve code readability and maintainability
updated the status message from " Bridge reports light as reachable = false " to " Bridge reports light as not reachable " to clarify that the bridge
add a loading flag to fmlclienthandler so it can be use by other client.
updated return statements to use Core. bundle. getOrNull for " unit. millions " and " unit. thousands " in UI and BlockInventory
refactor byte type handling in MessagePackParser and add a new BinKeyPojo class in MessagePackDataformatTestBase to improve type validation and
added parameterized test for querying queries with reserved words as identifiers in HqlQueryTransformerTests. java to ensure proper handling of reserved words as identifiers
added tests for serialization and deserialization of nested Maps in MapTest. java to ensure correct handling of nested Maps in JSON serialization and deserialization processes
fix geometryutils. getx2 and gety2 to account for offset
refactor sorting order handling in multiple activities to improve code clarity and maintainability
added error handling for missing TestPlan in StandardJMeterEngine. java to improve robustness by logging errors when TestPlan is not found
replaced instances of ` Method. of ( " dbmsName ", String. class ) ` with ` Method. of ( " getDbms
updated argIdent assignment logic to handle non - strict idents to ensure proper handling of null values and avoid potential NullPointerExceptions
updated the default protocol from " SSL - HTTP / 1.0 " to " scf. getProtocol ( ) " in JettyHttpComponent9. java
volume display : set displayvolume to true by default
refactor version method to accept a boolean flag and update related message retrieval to improve clarity and maintainability of versioning functionality
refactor logic in ChangeLogParameters. java to improve clarity and correctness to enhance readability and maintainability of the code
changed log level from warn to debug in JtaTransactionManager. java to improve log verbosity for troubleshooting
skip setoperationtest due to bug in basicformatterimpl cause exception
added startHandshake ( ) and setSoTimeout ( socketTimeout ) calls in the SSL connection setup to ensure that the socket timeout is properly set
updated size calculations to account for MainActivity's popup status to ensure consistent behavior across different activities
change the default value of ` CHA ` from false to true in ` EspressoOptions ` and ` DefaultClassHierarchyOracle `
http : / / issues. apache. org / jira / browse / amq - 4237 - fix for http : / issues.
replaced deprecated method ` generateSeededTimeRandomizersAndTheirExpectedValues ` with a new test method ` shouldGenerateTheSameLocalDateFor
updated WebDescriptor. java to conditionally redirect entities based on the SERVLET _ MAJOR _ VERSION to enhance security by ensuring URLs
add readiness. isready ( ) method to check if a node be ready
use handler. endpoints instead of liveendpoints in StorageProxy. java to improve clarity and maintainability of the code
added a null and empty check for creationStatements in IdTableHelper. java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig to ensure compatibility with the latest RPC standards
added a null check for security manager before calling checkPackageAccess in ObjectStreamClass and ObjectStreamField to enhance security by preventing potential NullPointerException
removed unused imports and refactored time extraction methods in Utils. java and XLCDCommunicator. java to streamline code and improve
refactor DefaultMetricsTagProvider to use a HashMap for tagging to improve clarity and maintainability of the code
removed unnecessary whitespace in ClientDriverSuite. java to improve code readability and maintain consistency
changed default value from Level. OFF to Level. ERROR in mmm Launcher. java and ppp Launcher. java to accurately reflect the
changed member variables to be final in IconNormalizer. java to ensure immutability and prevent unintended modifications
added a boolean flag ` firstCallPrepareDo ` and modified ` PrefixMethodInvocationUtil. invokePrefixMethod ` to enable or disable the first
refactor showWorkspace and exitOverviewMode methods to improve clarity and maintainability of the code
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ` in ` Auth. java ` and ` AuthWithStoreFeature. java `
don't include invisible association in graphicaldatamodelview # getinvisibleassociations
cloudstack - 7143 : remove private ip from capacity table when pod be delete
add note about basic usage in profiler home page
added support for ` @ schema : required = true ` in ` required ` field
corrected the spelling of " Cas " in multiple configuration classes to ensure consistency and accuracy in naming conventions
refactor FeatureFlags class to improve code readability and maintainability
updated UUID and ID formatting in ConfigStore. java and added a new test for ID conversion in CommonSetup. java to ensure proper handling of
added picture handling in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the holder's image is only set when a picture is present
updated the description of compaction settings in HiveConf. java to clarify that compaction on full CRUD tables will always run via queries
added a null check for the storage path in the FileDisplayActivity to ensure that the file path is valid before proceeding with further operations
replaced resizeThreshold checks with a new resize check in multiple classes to improve code clarity and maintainability by centralizing resize logic
refactor LDAP connection handling to improve code readability and maintainability
( chore ) camel - aggregate : deprecate @ xmlattribute ( required = true )
removed debug tracing logs in TouchInteractionService, RecentsAnimationDeviceState, and TestProtocol to streamline tracing process for better performance and clarity
added a condition to check if the class name starts with " com. intellij. rt. junit. " to ensure compatibility with IntelliJ IDEA '
updated assertions from hits. length ( ) to hits2. length ( ) in TestMultiSearcher. java to ensure the test accurately reflect
added a new file ` LucenePackage. java ` to facilitate the construction of ` LucenePackage ` instances
adjusted the calculation of sizeInBytes in RAMDirectory. java to correct the logic for adding bytes to the sizeInBytes array
updated calculations in ` StatsRulesProcFactory ` and added ` estimate ` method in ` GenericUDAFBloomFilter ` and ` GenericUDA
added null check for getDrawerToggle ( ) before processing animations to avoid potential NullPointerExceptions when accessing shared resources
added a @ SuppressWarnings annotation to the convertToAuthentication method in DefaultAuthenticationAdapter. java to suppress warnings about unused subject parameter
added conditional logic to enable system class loader scanning based on ` overrideClassLoaders ( ) ` and ` scanModules ( ) ` to ensure
fix for masquerade mode ( e. g. for corpora corpora )
added a method to cancel core recovery before shutting down the instance to improve recovery handling and ensure proper cancellation of core states
updated time calculations in bug5070081. java to improve accuracy in time measurement
remove debug print statements and modify the found size check logic in RepoEditView. java to streamline code and improve user experience by simplifying
updated startup messages in PGProperty. java for clarity to enhance user understanding of connection parameters in the application
added support for trust resolver and permission evaluator in SecurityEvaluationContextExtension to enhance security by allowing customizable role prefixes
added a check to set the exponentSize to primeSize - 1 if it is zero to ensure the exponentSize does not exceed the primeSize
replaced direct usage of ` getSavePath ( mAccount. name ) ` with ` getUsableSpace ( mAccount. name ) `
updated DistinctSqlAggregation to accumulate values for both values and added a new test for combining distinct SQL aggregations to improve aggregation accuracy and ensure correct
added a test case to verify that post - login activities are executed on successful authentication to ensure that login activities are correctly executed on successful authentication
extractor : add spanishstrippedverb constructor to extractorframereare
refactor CharArraySet to improve code readability and maintainability to enhance code clarity and facilitate easier debugging
updated error messages and refined the check for unsupported track formats in MuxerWrapper. java to improve clarity of error messages and ensure proper
updated JsBundleGenrule to return AndroidPackageable instead of JsBundleAndroid to ensure proper handling of APKs in the build process
added UTF - 8 character encoding in PinotClientRequestServlet and refactored string retrieval in StringDictionary to ensure proper handling of UTF -
updated case label from " Logical Analyzer " to " Logic Analyzer " and modified resource references in InstrumentsFragment. java to improve clarity and consistency
added static variables ` instanceClassName ` and ` instanceClass ` to facilitate dynamic instantiation of ` vector ` based on class type
removed syncMetaLeader ( ) method from CMManager. java to streamline code by eliminating unnecessary calls
[ edit ] instructorfeedbackresultspageuitest : return empty string instead of null
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging functionality for debugging purposes
( chore ) camel - meta - infra - java : add support for camel case map name.
add support for VIOMI _ WATERHEATER _ E1 device in MiIoDevices. java to enhance the functionality of the
replace calls to ` getSslSessionData ( ). getCerts ( ) ` and ` _ keySize ` with ` sslSessionData `
added a new file CreateNewSpreadsheet. java to implement functionality for creating a new XSSF workbook
polish ` ` spring. cache. redis. time - to - live '
updated content URI constants to use CONTENT _ URI _ NO _ NOTIFICATION and improved null handling for icon retrieval to enhance clarity and prevent potential null pointer
updated the version in the testCompile group from 2.1. 0 to 2.1. 2 to ensure compatibility with the latest version of the dependency
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager. java ` to improve
added a condition to check if the variable'c'is equal to'<'in DocClassUtil. java to ensure proper handling of
replaced String. format with a direct return statement in Workspace. java to simplify the code and improve readability
added validation error message in ValidateCommandStep. java to provide user feedback when no validation errors are found
make integrationtestcontextloader more resilient
updated scroll handling and condition checks in multiple classes to improve responsiveness and correctness of component retrieval
corrected formatting in the UUID class check to improve code readability and maintain consistency
added ClientStat class and updated related methods in StatsService and DefaultStatsService to support multiple site counts in the application
updated expression replacement logic in CellContentConverter. java to replace " $ 1 " and " $ 2 " values to ensure accurate representation of values
fix flakiness in testng.
mondrian : fix typo in comment
added thread dumping functionality and modified launcher checks in CustomLauncherTest. java to enhance debugging capabilities and ensure proper permissions are enforced during launcher
removed the ` testEmbeddedImage ` method from ` TumblrRipperTest. java ` to streamline the test by elim
added a condition to check if the symbol has a slot before conversion to ensure that conversion is only attempted when the store type is available
re - initialize the extractorwrapper in preparation for replay replay
updated BaseLockFactoryTestCase to use PrintStreamInfoStream for improved output formatting to enhance readability and maintainability of the test code
tikaconfig : add support for the ` ` dynamic'' attribute on the ` ` serviceloader'element.
updated import statements and modified type declarations in DocLint. java and DocLintTester. java to improve error handling and ensure compatibility with expected package
added support for the " import " command in DataImportHandler and DataImporter classes to enhance functionality by allowing the import command to be programmatically
added a test to verify that inner classes are not modified if the ` ignoreDefinition ` flag is set to true to ensure that the ChangeType
removed unused import of android. util. Log from JettyService. java to streamline code by eliminating unnecessary dependencies
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to ensure proper handling of workspace screen
simonstewart : add / quitquit to kill jvm
[ sparc ] fix potential npe in llrealtimesegmentdatamanager
added a check for Windows OS to skip processing for Teredo nic names to ensure that Teredo nic names are excluded from processing
add contact error dialog when contact be not connect.
replace registration method for USER _ DETAILS _ SERVICE _ FACTORY in AuthenticationConfigBuilder to improve code clarity and maintainability by using a
changed the parameters of the drawBitmap method from'r. left'and'r. top'to'null'in FastBitmapDrawable
add ` ` yymmdd'' to meitrack and totem protocol
changed method access modifiers from public to protected for getFontPath and getPlatformFontPath in SunFontManager and X11FontManager to enhance encapsulation and
to be compatible with java 11.
clientmapstoretest : catch executionexception instead of reachedmaxsizeexception
add option to keep empty sentence in the document pipeline.
mavenartifactfetcher : don't throw an exception if createartifactsubdirectory fails
removed unused imports and simplified method implementations in ReusableCompiler. java and JavaLanguageServer. java to improve code clarity and maintainability
added null check for answer in DirectAgentAttache. java to ensure proper handling of null cases to avoid potential NullPointerExceptions
don't swallow exception in sendemail ( )
fix npe when try to remove an item from an obsidian pipe
updated date parsing methods to use Locale. ROOT instead of Locale. UTC to ensure consistent date formatting across different locales
added a checkbox to enable or disable the inclusion of Decals in StorageOptions to enhance user experience by allowing users to choose whether to include Dec
updated the generateDocumentation method to include a null parameter and added a suppression annotation in the getImplementedDatabases method to improve documentation generation by
added queue configuration for LLAP _ DAEMON _ QUEUE and modified performance tracking in HiveProtoLoggingHook to improve logging accuracy and ensure accurate
updated assertWarnOrFail message in SolrIndexConfig. java and adjusted log message formatting in DocExpirationUpdateProcessorFactory. java to improve clarity
updated class file version check from 58. 65535 to " MAJOR _ VERSION " in ignoreRecordAttribute. java to ensure accurate class file
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP authentication to ensure that LDAP authentication functions correctly within the application
updated imports and condition checks in TaskCompiler. java to use BasicStatsNoJobTask to improve accuracy in determining if a particular table can be
fix a nullpointerexception when save all ( # 2858 )
refactor methods in VisibleAdvance. java to improve code readability and maintainability
fix : reflector don't throw exception when reconnecting
added a check for dynamic numeric columns in EdgeDataTable and NodeDataTable to ensure Sparklines are only processed for dynamic numeric columns
added null checks for getGroupId ( ) and artifactId in ResolvedGroupArtifactVersion constructor to ensure required parameters are provided to avoid potential NullPointerExceptions
added a null check for apiInfo before assignment to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code maintainability and readability
added OpenGL lighting and texture disposal methods in PhotoPanel and FlameRenderer to improve texture management and debugging capabilities
increased the scene size from 460ms to 520ms and added context menu items in InsnListEditor and InsnProxyListEditor
modified condition for character validation in CSSParser. java to ensure that only valid characters are processed to avoid potential ArrayIndexOutOfBoundsException
added a check for the " isDecorated " property before setting the default look and feel to ensure that the system's default look and
removed the'this'keyword from the SQL query in HostRoleCommandDAO. java to simplify the query and improve code readability
updated F2 _ TEST and F6 _ unknown constants to F5 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRAN
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and maintainability of swipe handling logic
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to improve data handling by utilizing a more
refactor methods in String class to improve code readability and maintainability
removed unused logger imports from multiple Java files to streamline code and improve maintainability
added a method to retrieve global entries from the map to enhance functionality by allowing retrieval of global entries from the map
added assertions to verify the PublicMethed status in MultiSign34. java to ensure that the PublicMethed status accurately reflect
[ test ] migrate CUFilterTest to junit 5
updated path separator handling in JavadocReport. java to ensure consistent path formatting across different operating systems
changed method visibility of augmentSuccessViewModelObjects from static to instance to allow access to the method from outside the class
hhh - 10866 - fix testutilities. getfield ( string fieldname ) inheritancetest.
removed the ` getConf ( ) ` parameter from the ` Outlink ` constructor across multiple parser classes to simplify constructor calls and eliminate unnecessary dependency on
removed the ` LexicalContext ` parameter from several methods in ` Lower. java ` to simplify method signatures and improve code clarity
added imports and modified return statement in UseLambdaForFunctionalInterface. java and added a condition in TypesInUse. java to improve code clarity
replaced ` appendClassSelector ` with ` createFileSet ` in ` TestNGAntTask. java ` to simplify class file handling by removing unnecessary class
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization. java to streamline the code by eliminating unnecessary checks
fixed npe in registryevent. getregistry ( )
updated x3 and y3 assignments in Intersector. java to ensure correct positioning of intersections
add default sbelimit and sbedecodedlength to messagedecoderflyweight
updated the Elasticsearch version string from " 5.6. 12 " to " 5.6. x " in ElasticsearchContainerTest. java to ensure compatibility
use bytebuffer instead of bytebuffer in peermessagereader. parse ( )
updated ClusterDefinition to use constants for cluster names and versions to improve clarity and maintainability of cluster definitions
camel - ftp : remove unused setconfiguration ( ) method from ftpendpoint
zeppelin - 5905 : fix npe when fetch interpreter dependency
updated method calls in Gen. java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest. java to ensure
added conditional check for basic constraints in ForwardBuilder and created a new class BuildEEBasicConstraints to ensure proper handling of certificate constraints
added database initialization logic in JdbcPostgresqlDAO to ensure values with the same time will be upserted for compatibility with newer database versions
updated WebSocket buffer size handling in ` AbstractWebSocketConnection ` to ensure minimum buffer size is enforced to prevent excessive buffer size errors
lucene - 3852 : fix double write bug in indexreader. undeleteall
added null check for scopes in ClientRegistration and updated associated test cases to enhance robustness by preventing NullPointerExceptions
added null checks before adding expression parameters in CartesianProductStream. java to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
cloudstack - 5131 : don't allow back up vms on kvm vms
refactor initialization of HiveLog4j in HiveServer2 to improve clarity and maintainability of the initialization process
added a check for non - empty tasks list before proceeding to avoid potential NullPointerExceptions during asset loading operations
openpgp PubSubManager and OpenPgpPubSubUtil to return boolean instead of void to improve error handling for node deletion
fix npe in getallbyid and getallbytype ( )
don't throw illegalargumentexception when no barcode find
changed the type of the ` suites ` variable from ` TreeSet ` to ` LinkedHashSet ` in ` SSLContextImpl. java ` to ensure that the
modified the control character validation logic in Escaper. java and updated the internationalization test in InternationalizationTest. java to ensure
added support for CharSequence in ProviderSqlSource and SqlProviderTest classes to ensure proper handling of CharSequence types during SQL provider invocations
updated import statements and added null checks for aliasChildren in InternalMNode. java to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView. java and updated scrollDelta calculation in Workspace. java to
rename ` synthetic ` to ` pruned ` in ` JavaTemplate. java ` to improve clarity and consistency in the generated code
added accessibility for the method in WidgetInterceptor. java to ensure that the method is accessible for testing purposes
added a check for " database. server. id " before setting the literal initializer in ConnectorConfigGenerator. java to ensure that the default value
don't return a geckodriver in the browser
added a web interface item with an action listener in BasicSystemUtils. java to enhance user experience by allowing quick access to the PMS server
refactor value handling in HandleGetter. java to improve clarity and maintainability to enhance code readability and facilitate easier updates
added a try - catch block around the Record. buildRecordAtOffset method to handle potential ArrayIndexOutOfBoundsException to improve robustness by preventing potential
improve logging and error handling in the Queue and FileCheckpointIO classes to enhance clarity and debugging capabilities during checkpoint operations
removed redundant call to loadBattlePassManager ( ) in Player. java to avoid potential null pointer exceptions during avatar loading
updated Docker image version and command options in PortForwardingContainer. java to ensure compatibility with the latest Docker version and enhance configuration options
added a bigObject array and forced garbage collection in ThresholdTest. java to optimize memory usage and prevent premature garbage collection
added checks for log names starting with " name ( ) " in StdErrLog. java and updated debug logging assertions in StdErrLogTest
fixed - rremotewrincipal. getremoteservicename ( ) method throw classnotfoundexception
added methods to retrieve and set the selected state of RadioButton, CheckBox, and Boolean in MultiButton. java to enhance functionality for better user
replaced UpNextActivity with NextUpActivity in CustomPlaybackOverlayFragment. java to align the app with the new next up functionality
( chore ) fix checkstyle issue in brokercontroller. java
close redis connection in case of connection leak
refactor getBrandColor method to accept a resource ID parameter to improve code clarity and maintainability by centralizing theme retrieval
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture
added multiple instances of ` creator ( ) ` in ` ToolingApiLauncher. java ` to ensure proper creation of type adapters in the builder
updated test cases in TestPayloadCheckQuery. java to improve test coverage for payload check functionality
refactor ConsoleReader to streamline string processing and improve readability to enhance code clarity and maintainability while ensuring proper output handling
added user information retrieval in BaseCommand. java to enhance user experience by providing context about the client during command execution
move org. graalvm. compiler. test to the correct package
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
added a condition to check if " one. util. streamex. emulateJava8 " is true in StreamExInternals. java to
updated texture paths from " wheel. png " to " sys. png " in DecalTest and MusicTest classes to reflect the new system
added unregistering and reregistration of the mCloseSystemDialogsReceiver to ensure proper resource management and prevent memory leaks
removed an unused import statement from HostsRemovedEvent. java to clean up the code and improve readability
added support for introspection in the ClientDetailsEntity and IntrospectionEndpoint classes to enhance security by allowing introspection requests
added html encoding for session attributes in HtmlSessionInformationsReport. java to ensure proper handling of special characters in session data
added PhraseQuery, PhrasePrefixQuery, and org. apache. lucene. search. spans. in Query. java to enhance the
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter ` and ` CommentsParser ` to improve
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve clarity and correctness in identifying string types
updated method parameters in AbstractAssert and Assert classes to use Object objects instead of generic types to improve type safety and reduce potential runtime errors
updated ` ThrowingFunction ` interface to use generics to improve type safety and flexibility in handling exceptions
refactor ` getUploaderBehaviour ` methods to be instance methods in ` PreferenceManager ` and ` UploadFilesActivity ` to improve code modularity
fix ( ctfieldwrite ) : do not initialize final field in constructor
replaced direct instantiation of BitmapDrawable with Robolectric's newInstanceOf method to improve compatibility with Robolectric's Bitmap class
corrected the spelling of " isValidSEnding " to " isValidEnEnding " and added a new character type to improve code clarity and
updated PageIndicator icon from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to clarify the purpose of the
added a reinvocations variable and updated log messages to include reinvocations to improve clarity and debugging by tracking the reinvocations value
updated the calculation for topPadding in DefaultLookAndFeel. java to correctly account for the inner height of the text area
added a break statement in Recognize. java to ensure proper flow control during method execution
added Haptic feedback functionality for home screen lock in multiple classes to enhance user experience by providing haptic feedback when the home screen is
added support for handling string formula types in ExcelBatchReader. java and a new test case in TestExcelFormat. java to enhance functionality for
fixed bug 1463232 - immutablefield no longer flags assignment in anonymous inner class method
added a ` userAgent ` field and modified user agent assignment logic in ` CommaFeedConfiguration ` and ` HttpGetter ` to ensure user agent
camel - barcode : align the code with the late change in the java microgenerator
changed log level from info to debug for file not found messages to improve log verbosity for troubleshooting purposes
rename the test class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain. java to use getDeclaredMethod ( " getUniqueID " ) instead of getServerVersion ( ) to improve
camel - 19836 : camel - core - routescollector should not try to discover route when includepattern = false
added vertexColor property and modified vertex color handling in PShape3D. java to support customizable vertex colors
updated methods and variable names for consistency and clarity to improve code readability and maintainability
replaced Shadow. extract ( ) with matrix. getValues ( m ) in ShadowMotionEvent. java to simplify the code and improve readability
changed package and import statements from ` com. facebook. buck. parser. api ` to ` com. facebook. buck. parser ` to
refactor class handling logic in GroovyEngine. java to improve clarity and maintainability of the code
[ hawtio - web ] move brandingservlet from web to plugin
removed duplicate print statement in NativeCodeGenerator. java to streamline output by eliminating redundancy
replaced ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` Flight
added a test for ExpectedException in ThrowableAssert _ hasCause _ Test. java to ensure that both types throw an AssertionError
removed flattening and package name retrieval from AutomaticDependencies. java to streamline code by eliminating redundancy
rename requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint. java to improve clarity and consistency in scope handling
add marionettetest. cancansetprofileinfirefoxoptions and marionettetest. cansetprofileinfirefoxoptions
camel - 16400 : camel - core - optimize to make it easy to read route description
refactor JavacTreeMaker class to improve code readability and maintainability
added weight setting to the edge object in ImporterCSV to ensure the edge's weight accurately reflects the data being processed
fix tariff cost per month issue
updated SQL queries and modified tuple assignment in DatabaseMetaData. java to ensure correct retrieval of attributes from pg _ attribute definitions
added a null check for binarized sentences in SentimentAnnotator. java to ensure that Binarized sentences are not built by the
added detailed user information to the user object to enhance debugging by providing more context on the user's state
updated MessageHelper to check for null body before extracting the message to improve error handling and provide clearer feedback on null values
[ hotfix ] fix typo in task deployment descriptor factory
jmsserrostermanager. isgroupvisible ( ) now check if a node be a member of a node group.
added Maven test classpath reference to AbstractJRubyMojo and removed unchecked warnings in CucumberMojo to ensure proper handling of test dependencies in the
updated type comparison logic in MethodHandleImpl. java and added a new test in MethodHandlesTest. java to ensure correct handling of method handles based
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory, AnalysisSPILoader, and LegacyHTMLStripCharFilterFactory
updated width and height checks from " > " to "! = " in URLImage. java to ensure that images are only
added a condition to check if the name does not start with " META - INF / " and modified the logic to append the package name to
added edt flag to the createImageToFileSystem and createImageToStorage methods to enable background task execution for edt mode
updated assertions and logging messages in StackWalkerTest. java to ensure correct expected values and improve logging clarity
changed the access modifier of the addViewportJob method from protected to public to allow access to the method from outside the Chart class
removed the ` partitions ` parameter from the ` buildFlow ` method across multiple files to simplify method signatures and improve code clarity
updated server settings and system exit checks in TestDatabase. java to ensure proper server behavior during application shutdown
added null and empty checks in NodePathsConvertOperator and refactored child retrieval logic in SchemaQueryMergeOperator to improve robustness by preventing
added a method to get the total harvesting time in IceUdpTransportManager and its implementation in RawUdpTransportManager and Transport
updated font drawing parameters for frame rates in ParticleEditor. java to improve visual clarity and performance of particle rendering
added configuration properties for " hadoop - env " in UpgradeCatalog240. java and updated corresponding tests in UpgradeCatalog240Test. java to ensure
svgviewerfactory : set background to transparent
removed unnecessary minSdk configuration from ShadowKeyguardManagerTest and ShadowKeyguardManager to streamline code by eliminating unnecessary minSdk settings
changed method parameter type from Object... rest to Object.. varargs in containsExactly and added a new test for array contains exactly to improve
updated Bucket4jFilterFunctions to include refillGreedy and refillGreedy parameters to enhance functionality by allowing a refill greedy
updated GermanAnalyzer, GermanStemmer, and WordlistLoader classes to improve documentation and enhance code readability
updated transformations to include postExecHooks and added HiveHook handling in the Generator class to enhance the optimizer's ability to execute lineage
added error handling for NoClassDefFoundError in REngine. java to improve robustness by preventing potential runtime exceptions
refactor span handling in ` TraceWebFilter ` to use ` SpanAndScope ` to improve clarity and maintainability of the code
added a null check for the getCause ( ) method in AbstractUpdateCommandStep to avoid potential NullPointerException when getCause ( ) is null
updated ` SolrServerException ` constructor to include ` getBaseURL ( ) ` to enhance error handling by associating the exception with the base URL
inverted the ` setLandscape ` and ` return ` conditions in ` HSSFPrintSetup. java ` to ensure proper handling of landscape output
updated null check in JavaVoidObjectInspector to handle potential null values to improve robustness by preventing potential NullPointerExceptions
added a check for illegal argument names in ArgDesc. java to ensure proper error handling for invalid argument names
added background location listener functionality in AndroidLocationPlayServiceManager to enhance user experience by allowing background location updates
modified the condition to check if primitiveType is equal to GL10. GL _ POINTS to ensure proper handling of geometry types in the mesh
trufflestring. execute ( byte [ ] a, byte [ ] b, int [ ] a, int [ ] b
added command list functionality to ComboBox to enhance user experience by allowing toggling of command lists
nifi - 6643 : fix issue with client certificate file with forward slash.
updated command invocations in ZkCLI. java to use localhost instead of hardcoded values to improve flexibility and maintainability of the command execution
updated equality checks to use ` equals ` method in ` FirmwareUpdateProgressInfo ` and ` BridgeHandler ` to ensure proper equality comparison for
added a condition to check if remoteGrpcStatus is OK before posting a severe event to ensure that the error message is only sent when the
refactor method signatures and formatting in various classes to improve code readability and maintainability
added entity ID to entity entities in ForgeChunkManager to ensure proper handling of entity IDs during tick processing
add error string to glsurfaceapi18. geterrorstring ( )
added a method to retrieve supported locales and updated InfoRequestHandler to handle locale retrieval to improve locale management and error handling for unsupported locales
updated server URI handling and assertion messages in RFC2616BaseTest. java to ensure accurate representation of the server's URI in tests
added a call to addToHelperList ( ce ) in the Construction class to enhance functionality by allowing helper lists to be added
added a condition to skip the first occurrence of " [ [ [ " escape sequence in GlyphLayout. java to improve robustness by skipping
added security permissions for setting context class loader in mmm Transport. java and mmm TCPTransport. java to enhance security by ensuring proper
added null checks for file and folder retrieval in ReceiveExternalFilesActivity to ensure robustness by preventing null pointer exceptions during folder operations
added null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
updated deltap calculation in TubeCalc. java and removed debug logging in BarrowmanCalculator. java to improve accuracy of the deltap
modified column addition logic for Node objects in TimelineControllerImpl. java to ensure correct handling of column additions based on object type
added a method to register extra components for the BrokerAdminApiApplication to facilitate the management of additional components in the application
added a test case for bug 4658 in MultiCfQueryExecIT. java to ensure that the query correctly handles cases where clauses with
peergroup : use linkedlist instead of arraylist to avoid concurrentmodificationexception
don't change the amount of cycling in the builder.
remove config _ node _ simple _ consensus _ snapshot _ trigger _ threshold and update retry attempts in RatisClient and related classes to stream
updated import statements in multiple Java files to improve code clarity and maintainability
added a conditional check to register JMXHelper based on class annotation to ensure JMXHelper is only registered when the ManagedService annotation is present
tika - 2693 -- detect non - unicode entry name in ziparchiveentry.
added a new file TestSplitThruPhiDivMod. java with multiple test methods for division and remainder to evaluate the correctness of division
added methods to lookup generic types and superclass in TemplateRegistry to enhance type resolution for improved functionality
increased the buffer size from 512 to 1028 in ByteArrayOutputStream to optimize memory usage and improve performance
added comments to the ` languagesExcluded ` array in ` PlayerSettingsScreen. java ` to clarify error messages related to unavailable languages
updated byte array allocation logic in TransferCompletionHandler to accommodate a maximum of 8192 byte values to improve performance by limiting the number of byte
remove windowfocuslistener from sipcommpopup and make it final
modified exception handling in SemanticAnalyzer to check for null values before throwing an exception to improve robustness by ensuring valid source nodes before proceeding
added scaling and center extent creation for aabb in SkeletonRenderer to enhance rendering accuracy by incorporating scaling factors
added ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to provide access to the Solr
added ComponentScan annotation to SpringWebConfig to enable scanning of component dependencies for better integration
removed the ` getAccount ( ) ` method from ` UserListItem ` to streamline the account retrieval process
added unit tests for package installation in ShadowPackageManagerTest and modified processName assignment in ShadowPackageManager to ensure proper handling of null values and
refactor AvailableSettings class for improved readability to enhance maintainability and facilitate future updates
added TransactionTrace with initialization and execution methods to enhance transaction processing capabilities
add a shuffle _ member _ list property to cluster listener support
replaced ` Text ` with ` CrawlDatum ` in ` SegmentReader. java ` to improve clarity and consistency in the codebase
refactor JsonDeserializer class to improve code readability and maintainability
updated CONFIG _ NAME and CONFIG _ DEFAULT _ PATH in TsfileDBConfig. java and changed fetchSize in QueryProcessExecutor. java
updated error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument to " trunc ( ) only takes STRING /
removed unused import of ExecutionContext in TaskletStep. java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure proper initialization of the title variable
fix npe in asyncclientcall when body be null
doc : deprecate embeddedserverinstance ( ) and move to io. micronaut
replaced the instantiation of ` MacAdapter ` with reflection to facilitate the registration of MacEvents for the ` JabRefFrame `
renamed the class ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` to clarify the purpose of the
changed the type check from ` Enum. class. isAssignableFrom ( type ) ` to ` Enum. class. isAssignableFrom ( type ) `
changed the visibility of ` hideUnprivilegedObjects ` from private to private final to ensure that the ` hideUnprivilegedObjects ` variable
change log level from info to fine in threadedacousticscorer
added a condition to return a call to saveGiphyAndroid11 for Android Q to ensure compatibility with the latest Android version when saving video
fix nullpointerexception in service task variable
refactor EhCacheTicketRegistry, LdapPasswordPolicyEnforcer, GoogleAccountsService, SamlService, and SamlCompliantUnique
replaced manual creation of logger instances with a computeIfAbsent method to simplify the code and improve readability
hbase - 2697 remove outputstreamoutputstream because it's no longer use
updated transaction ID from 1 to 2 in TestAcidOnTez. java to ensure correct row IDs are generated during testing
changed log level from info to debug in MavenEnhancePlugin. java to improve logging granularity for enhanced classes
added a method to retrieve the default " Conscrypt " provider and updated provider name logic to ensure proper identification of the " Consc
added Captor annotation processing in MockitoBeforeTestNGMethod to enhance testing capabilities by processing captured fields
added checks for non - existent class and method names in TestSuiteBuilder. java to ensure proper error handling when no test cases are available
updated imports and modified method calls in GroovyAutoComplete. java and GroovyLanguage. java to improve code clarity and ensure proper handling of special characters
use osm instead of deprecated graphhopper. init ( )
simonstewart : fix a dumb bug in handlesession.
changed the visibility of mHideSysUiScrim from private final to non - final and added a preference manager for showing the top shadow to
updated method signatures and exception handling in OkHttpCall. java to improve clarity and ensure proper cancellation during execution
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and maintainability of swipe handling logic
updated the RequestMatcher interface to extend from org. springframework. security. web. util. matcher. RequestMatcher to improve dependency management and
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified the existing ` DeferredAttr ` class to
test : use testboxingconstructor instead of testboxedprimitiveequality
added unit tests for populating display metrics with different screen dimensions to ensure that display metrics are correctly populated based on different screen dimensions
make pinot jdk 11 compilable ( # 6424 )
updated icon resource from ` logo ` to ` mipmap. ic _ launcher ` to improve the visual representation of the launcher icon
added content text setting in errorBuilder to improve user experience by providing clearer error messages
refactor ConcurrentHashMap class to improve code readability and maintainability
added methods to adapt user trades and raw trades in Abucoins classes to facilitate manipulation of user trades in the
updated plot claim logic and added new case cases in multiple classes to enhance plot claiming functionality and ensure proper handling of new cases
simonstewart : allow the htmlunit driver to connect to the correct browser
added handling for " VARBINARY " data type in BlobType. java to ensure correct handling of VARBINARY data types in database operations
refactor version checking logic in SetCookieSupport. java to improve code readability and maintainability
added synchronization to ` LibFFIContext. java ` to ensure thread safety when creating ` EnvType ` instances
replaced ` Context ` with ` ContextInternal ` and ` VertxThread ` in ` InboundBuffer. java ` to ensure proper handling of
updated timeout values and refactored timeout handling in LdapTimeoutTest to improve test reliability and accuracy of timeout values
updated usage message from " UniocdeData. txt " to " UnicodeData. txt " in CharacterName. java to reflect the
camel - 7999 fixed the unit test error of cxfmessageheadersrelaytest
updated multiple Synth - related UI classes for consistency to improve code maintainability and readability across the UI components
added support for ` BoosterSet ` in ` ComponentAssemblySaver ` and modified return value in ` BoosterSet ` to enhance functionality
implement password authentication for proxy requests in JabRef. java to enhance security by allowing proxy requests
replaced calls to MetricsKey. BLOCKCHAIN _ FORK _ COUNT with MetricsKey. BLOCKCHAIN _ FORK _ COUNT across multiple
changed the return value of the Compile stub method from throwing InternalError to returning false to indicate that the stub is no longer supported in JEP 3
updated logging statements in TestIPCUtil. java to use LogFactory and Log4JLogger to improve code maintainability and reduce dependency on
removed the chunkedTransfer parameter from the HTTP request method in NettyRoutingFilter. java to simplify the request handling by eliminating unnecessary chunked transfer logic
added a call to clearAttributes ( ) in PatternTokenizer. java to ensure that attributes are cleared after processing
updated VerificationAfterDelayImpl to include a polling period parameter and improved error handling to enhance error management and provide clearer feedback during verification failures
added compaction checks in multiple classes to ensure proper handling of compaction state during query processing
[ zeppelin - 5892 ] fix the issue that zeppelin don't have the zeppelin. jar file
hbaseadmin : fix typo in hbaseadmin # gettableregions
added an @ Ignore annotation in PartialEscapeAnalysisTest. java to temporarily disable the test due to known issues
removed the ` calcXBounds ` method from ` Renderer ` and ` CombinedChartRenderer ` to streamline the rendering process by eliminating
added error handling around XML parsing in SimpleSAX to ensure proper resource management and prevent potential memory leaks
added memory management for headerBuffer in HttpSenderOverHTTP to ensure proper resource management and prevent potential memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated ` Java17TypeSignatureBuilderTest ` to ensure correct
added null and closed check for the ResultSet object to ensure proper resource management and prevent potential NullPointerExceptions
updated driver version from - 1 to 6 in DerbyDatabase. java to ensure compatibility with the latest Derby database features
fixed bug 142372 - usestringbufferlength no longer flags stringbuffer. equals ( ).
removed error logging from RemoteSparkJobMonitor to streamline error handling by eliminating unnecessary logging
refactor createDb method to return a Connection object to improve resource management and ensure proper closure of the database connection
refactor CreateCustomMetric and ListResources classes to improve code organization and maintainability
hbase - 25811 add option to disable of off - peak compaction size
added null check for " address " in BitstampDepositAddress. java and created a new test class DepositAddressJSONTest.
replace IllegalStateException with response. abort ( new IllegalArgumentException ( " Buffering capacity exceeded " ) ) in BufferingResponseListener. java to
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure the correct absolute path is used for directory
renamed ` operationType ` to ` invocationType ` in ` InvocationFinishedEvent ` to improve clarity and consistency in naming
added a loop to check if network interfaces support multicast support to improve robustness by ensuring only valid network interfaces are processed
removed duplicate checkSums in ChangeSet. java to streamline code by eliminating redundancy
added clone ( ) method to BufferedChecksumIndexInput class to ensure proper cloning of IndexInput instances
replaced Math. sqrt ( x * x + y * y ) with x * x + y * y < = radius in Circle. java
updated frequency band assignment logic and added @ Override annotations in P25Channel and P25ExplicitChannel classes to ensure proper handling of frequency band identifiers
renamed ` tapSquareSize ` and ` inTapSquare ` to ` tapRectangleSize ` and ` inTapRectangle ` to improve clarity and
set the default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false to disable replication by default
added a ` lastFillTime ` parameter to ` CryptoFacilitiesAuthenticated ` and implemented date formatting in ` CryptoFacilitiesTradeServiceRaw `
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes to provide access to the delegate object for tracing operations
refactored error handling and improved snackbar logic in FileActivity and FileDisplayActivity to enhance code clarity and maintainability while ensuring proper
added handling for the ` quiche _ conn _ stream _ writable ` method in multiple classes to ensure proper error handling when writing to a
updated method call to include a boolean parameter to enhance functionality by allowing conditional execution based on the boolean parameter
removed padding from TableCell constructor calls in BaseTextFormattingHelper. java to simplify constructor parameters and improve code readability
in - - - - - - - - - - - - - - - - - - - - - - - - - - -
added a new Para instance before adding content to the second page to ensure that the first page of the submission is properly formatted
updated the ` getPrunedQueryableSegments ` method to accept an ` listOfQueryableSegments ` parameter to ensure that the number of segments
refactor VertxBufferTest class to improve code readability and maintainability
bug fix : messagesubmissionchunk don't handle hyphen character
changed the access modifier of mContext from private to protected to allow subclasses to access and override the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added MongoDataIntegrityViolationException class and updated MongoTemplateTests to include write result and action operation to improve error handling for duplicate data integrity
changed the return type of jobCompletionFuture from JobCoordinationService to JobCoordinationService to ensure that the method returns the job completion future
refactor ` bitsToHumanReadable ` to ` bytesToHumanReadable ` and introduce a new ` bytesToHumanReadable ` method to improve code clarity and
replaced the instantiation of ` MergePolicy ` with a direct instantiation of ` TieredMergePolicy ` to simplify the merge policy creation process and
added a check to return early if mOverviewStateEnabled is false to optimize performance by avoiding unnecessary processing when the overview state is disabled
# step - 11 - check - cpu - support - for - hardware - extensions - avx
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter to enhance flexibility in loading settings from external properties
added null checks for incoming fields and terms in FilterLeafReader to ensure robust handling of input to prevent NullPointerExceptions
bcjsse : add test to verify key size
updated exception handling in NetSocketReader and removed redundant constructors in SoftEndOfStreamException to improve error handling clarity and streamline exception construction
remove unnecessary dependency on javax. inject. inject
updated the expected size in BundledDistributionTest and added assertions in PostgreSQLTest to enhance test coverage for database user attributes
[ flink - 17599 ] [ stream ] support user - defined job name in streamexecutionenvironment
updated scale calculation based on device profile type to support two - panel layouts in the launcher
updated IcePlainsBiome class to extend SnowyBiome and replaced GrassyBiome with a PopulatorTree to
removed timezone parameter from ` getMaxTime ` and ` getMinTime ` methods in ` StorageUtils ` to simplify code and improve readability
[ j2kt ] [ j2kt ] support qualify type in ` thisreference '
updated regex pattern in XhamsterRipper. java to allow URLs with w characters in addition to wmde characters
fix entity iteration in world. getall ( glowentity. class )
hhh - 146113 - fix oracle dialect to handle null schema
fix a syntax error in the FlutterConsoleFilter class to improve code readability and maintainability
added a new variable ` mNumberOfAllFiles ` and modified the ` FileMenuFilter ` constructor to accept a variable to track the number of
[ java ] : fix off - by - one error in network publication.
fix typo in guildupdateownerevent # getroles ( )
increase in portal tick limit for creative and entity.
added support for compressed items in ClusterMonitorTileSkin to enhance the visual appearance of chart elements based on their dimensions
updated multiple codec template classes for consistency to improve maintainability and readability of the codebase
changed the data type of ` lengthDataBits ` and ` numberTriplets ` from ` int ` to ` long ` to ensure proper
removed null check for header in RendererConfiguration. java to simplify the condition for better readability
don't allow scale cpu and / or memory of vm with custom service offering
replaced wildcard imports with specific imports in HitbtcAdapters. java to simplify import statements and improve code readability
rename variable ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager. java ` to clarify that the variable
corrected the label from " automation : jruby " to " automation : jrubyscripting " to ensure consistency and accuracy in label
updated displayName assignment and modified write method to use displayName instead of name to improve clarity and consistency in variable naming
modified the conditional check to include a check for negative exchange amounts to ensure that exchanges do not allow negative amounts to avoid potential errors
removed unnecessary iteration and break logic in FeedUtils. java to streamline code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` in ` HDFParserTest. java ` to verify the functionality of the ` HDF4
[ calcite - 6092 ] don't cast time ( 0 ) to timestamp ( 0 )
removed unnecessary whitespace in IDEEditor. java to improve code readability and maintain consistency
added methods to quietly close all resources from a list of AutoCloseable objects to improve resource management and prevent potential memory leaks
updated the confirmation button string and changed the argument key from posBtn to common _ yes to enhance user experience by providing a more descriptive confirmation
added a conditional check to ensure srcWidth and dstWidth are non - zero before calling drawImage to prevent potential NullPointerExceptions when drawing images
replaced ReflectionHelpers method calls with direct reflection invocation in UnsafeAccess. java to improve flexibility and maintainability of the code
updated regex pattern in GUIUtil. java and added tests in GUIUtilTest. java to ensure proper validation of domain names in the validation process
replaced boolean variable ` conflict ` with ` conflicts ` for better clarity to improve code readability and maintainability by using a more descriptive variable
fix an npe in sdkconfigurationnotificationprovider. getversion ( )
added equality check for reference assignment in ReferenceMemory to ensure proper handling of reference references based on the current instance
refactor seed file injection logic and improve error handling in Injector. java to enhance robustness by ensuring only valid seed files are injected
added a condition to hide the original view in the FloatingIconView to ensure that the original view remains hidden when hidden
defaultloopPolicies : fix edge case when maxnodes be negative
added a check for texture coordinate type support in the CombinedTexture class to ensure only supported texture coordinates are processed
added null checks for input parameters and improved error handling in multiple classes to enhance code robustness and prevent runtime errors
added seek and close methods in TracingConsumer and TracingProducer classes to enhance functionality for seeking and close operations
updated the SQL statement to use ` oldPrefix ` and ` oldPrefixLength ` instead of ` locate ` and ` locate ` to ensure correct
removed the addition of elements to the convertedValsList list in JSONSerializer. java to simplify the code by directly adding elements to the convertedVals
added a deprecated constructor to AbstractTimer class to indicate that the constructor should no longer be used in favor of an alternative implementation
added a nightly warning message for users when the Universal Gcode Sender is a nightly build to inform users about issues related to nightly
[ # 7701 ] instructor : list response by team ( # 7701 )
updated return statement in UnnecessaryThrows. java to clarify the purpose of the return statement
deleted CacheApplication. java and replaced CacheController with CommonsApplication in ShareActivity. java to simplify codebase and improve maintainability
replaced calls to ` realObject. getApplicationContext ( ) ` with ` RuntimeEnvironment. application ` in ShadowContextImpl. java to improve consistency and
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
updated configuration handling in RuntimeEnvironment to ensure compatibility with devices running Android KitKAT and above
added a constant for the latest repository update link exists in VersionDefinitionResourceProvider. java and a corresponding test in StackManagerTest. java to
refactor ApplicationImpl, NodeImpl, and Witness classes to improve code organization and maintainability
patch by brandonwilliams, patch by jbellis ; review by jbellis for cassandra - 154
added imports for " com. sun. org. apache. xml. internal. resolver. helpers. " and " com. sun. org
rename method from ` persistExecutionContext ` to ` updateExecutionContext ` across multiple classes
bugfix : loopexitnode should replace loopbegin ( ) with null.
replaced RecyclerView with a WidgetsRecyclerView in SearchAndRecommendationsScrollController. java to improve flexibility and maintainability of the RecyclerView
added a check for terminal support in ConsoleReader to ensure that only supported terminals are processed
changed data types from long to int for timeAllowed and added time allowed checks in LBHttpSolrClient to improve data handling and prevent potential
added validation for session validity in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure proper session flushing during response commit
refactor index change handling to check for null values before setting columns to improve robustness by avoiding potential NullPointerExceptions
replaced Vector with ArrayList for buttons in ButtonGroup. java to improve performance and maintainability of the code
updated UserManagerCompat to extend UserManagerCompatVL and UserManagerCompatVN classes to improve compatibility with newer Android versions
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to various database classes to retrieve the major and minor version
refactor ActionGraphCache to use a constant for the number of mismatched rules to improve code clarity and maintainability by centralizing mismatched rules
added LockDatabaseDesc and UnlockDatabaseDesc classes to support for lock and unlock database operations
updated RankingTopComponent, RankingUIModel, RankingUIModel, and RankingToolbar to improve code clarity and maintainability by
added handling for DisconnectMessage in HandshakeHandler and updated logging in NodeImpl to improve logging clarity and ensure proper handling of disconnect messages
added a test for setting and deleting STORAGE GROUP in IoTDBAuthorizationIT. java to ensure proper handling and deletion of storage groups in the
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added checks for variable types in the type validation logic to ensure proper handling of missing types during type validation
added ` afterTestClass ` and ` beforeTestClass ` methods to ` StepScopeTestExecutionListener ` to facilitate the execution of test steps
[ java ] : use cachedepochclock instead of epochclock in countersmanager
updated logging statements in MultiSteps and SendEmail classes to use parameterized logging to improve performance and readability of log messages
added a null check and cloning mechanism for joinKeys in JoinDesc. java to ensure safe access to joinKeys and prevent potential NullPointerExceptions
added PrincipalResolver dependency in WebAuthnConfiguration to enhance authentication handling by allowing customizable principal resolvers
updated ` addSettingsFromFile ` method to accept an additional ` searchPaths ` parameter to enhance flexibility in specifying search paths during configuration parsing
changed variable declarations from non - final to final for several fields in Oracle. java to ensure immutability and prevent unintended modifications
[ hotfix ] [ doc ] disable unaligned checkpoint until unaligned checkpoint be complete
throw unsupportedoperationvisitor when order _ by or order _ by be not support
add a log option to compileworldtest. log
added a check to throw an exception for non - local variables in LambdaRewriter to ensure proper exception handling for invalid variable types
added MySQL support for timestamp handling in CreateTableGenerator to ensure proper handling of NULL values for MySQL databases
updated class loader management in EnvConfiguration. java to ensure proper class loading when the current class loader changes
added a check for stageNr and set ejection delay if it is zero in SimulationListHandler. java to ensure proper handling of
refactor ` runFunctionalCommandLineRunnersAndApplicationRunners ` to use ` BeanDefinitionOrderRunnerConfig ` to improve clarity and consistency in
refactor TransactionUtil2 class to improve code readability and maintainability
updated ` validateIssuerClaim ` method to accept ` Optional < OAuthRegisteredService > ` to enhance issuer resolution by utilizing ` Optional < OAuth
updated string concatenation and added null check for collection objects to improve robustness and prevent potential NullPointerExceptions
replaced ` getStyle ( ). setAlignment ( align ) ` with ` getAllStyles ( ). setAlignment ( align ) ` to improve consistency
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance functionality for managing foreign database and schema names
[ java ] catch timeoutexception in election.
replaced Robolectric Shadows. shadowOf with Shadow. extract in ShadowActivity and ShadowBluetoothDevice to improve code clarity and maintainability by
added validation for the root path in FileSelection. java and introduced a new test case in TestBugFixes. java to improve robustness
deprecate oninventorytick method in favor of oninventorytick
don't overwrite exist war file when export
added null check before calling invalidateOptionsMenu ( ) to avoid potential NullPointerException when getSherlockActivity ( ) is null
refactor widget binding logic in Launcher and PendingAddItemInfo classes to improve error handling and ensure options are properly managed
[ ecobee ] add capability for air quality, air quality, and voc ppm
reformatted code in OperationSetServerStoredContactInfoFacebookImpl. java for consistency to improve readability and maintainability of the code
added environment variables " AAPT " and " AAPT2 " to the Genrule class to support AAPT and AAP
don't dump access table when instrumentation be enable.
added null check before disposing of message to avoid potential NullPointerExceptions during message disposal
fix ( checkpoint v1 recover success )
update log messages in CoreContainer. java to indicate that logwatch is not yet implemented for log4j to improve clarity and user feedback on
replaced print statements with failure messages in CategoryPlotTests. java to improve error handling by returning early if cloning fails
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation. java and added a new SmallByteArrayOutputStream class to improve performance and handle larger byte arrays
shader : use intmap instead of hashmap to store attribute
changed the connection string from " jdbc : derby : territory = en _ US " to " jdbc : derby : ; shutdown =
added null checks for firstExchangeCompletedTimestamp and lastExchangeCompletedTimestamp retrieval to improve robustness by avoiding potential NullPointerExceptions
updated Javadoc documentation to include locale parameter and added output checks in TestUseOption. java to enhance documentation clarity and ensure proper handling of default locale
updated the condition to check if the result is incomplete and exceeds 10 items to improve the accuracy of completion results by ensuring only valid items
updated command - line arguments and refactored time column name handling in HybridClusterIntegrationTestCommandLineRunner. java to improve clarity and functionality
updated output format handling and added support for different output formats to improve flexibility in specifying output formats based on the provided format
inverted the condition for checking QSB enable status to ensure proper handling of QSB margin conditions
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` and ` GltfModel
added functionality to store and retrieve the timestamp buffer in HTTP headers to improve request handling and facilitate easier debugging
replaced Adler32 with CRC32 in Store. java to improve performance by using a more efficient CRC function
bugfix : default value of xen. heartbeat. interval should be null
added a new warning constant ZERO _ AREA _ FIN in Warning. java and updated FinSetCalc. java to include it to improve warning
[ beam - 8470 ] use jackson in elasticsearchio to serialize document metadata
hhh - 117486 - add support for truncate function in h2
added a memory pool check before logging warnings in MetricUtils. java and updated error handling in MetricUtilsTest. java to ensure warnings are only
make sure we don't return null from fileaccess # getparent
fix checkstyle issue in validationtask. java
change BACKFILL path from " / generateAnomaliesInRange " to " / replay " to align the endpoint with the intended
updated data retrieval logic in PrecompiledContracts. java to include the latest proposal number to ensure accurate data retrieval for dynamic properties
refactor item update logic in AllAppsContainerView to use BubbleTextView instead of AlphabeticalAppsList. AdapterItem to improve accuracy in updating
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
updated comments for context start methods in ResourceHandlerTest. java to clarify the expected behavior after ContextHandlerCollection is started
added a condition to return false if mDrawIdentifier equals WORKSPACE _ CUSTOM to ensure proper handling of custom drawing identifiers
truffle : remove assertion that ben't need
added JUnit @ Ignore annotation to shadowInvocationWhenChildIsInstrmentedButUnshadowed method to mark the test as ignored due to
updated import statements in ItBit demo classes to ensure compatibility with the latest version of ItBit components
ww - 3683 fix nullpointerexception when session reset be not define
updated Utils, ApplicationUtils, AsyncSocketFactory, and Whois classes to be final and added private constructors to enforce immutability of utility classes
fix memory leak when deserializing useraccountvo
fix for jdk 1.4 compatibility
added tableNameWithType to the warning message in RetentionManager. java to provide more context about the table being processed
added trimming to fragmentList size checks in QueryExecutorImpl. java to ensure proper handling of empty strings in query execution
updated the method call from ` modFile. getFilePath ( ). toFile ( ) ` to ` modFile. getFilePath ( ).
updated methods and variable names for better clarity and consistency in the PartitionToolbar class to enhance code readability and maintainability by using more descriptive names
added a check for task view visibility in RecentsView to ensure proper handling of task views during grid display
updated CalculatorRestEndpoint and CalculatorService to use BMIViewObject instead of Map to enhance functionality by integrating BMIViewObject for better
replaced Comparator. comparing ( Entry < TargetNode <? >, Integer > : : getKey ) with Entry < TargetNode <? > :
modify damage calculation to account for BlockHayBale type to ensure proper handling of damage objects in the game
refactor environment variable handling in WindowsProcessAddressSpace and J9DDRImageProcess classes to improve code readability and maintainability by using a more
added support for custom plugin properties in OptionsParser to enhance flexibility in plugin configuration parsing
updated null and empty checks for hashTable in HashJoinBatch. java to improve code robustness and prevent potential NullPointerExceptions
updated timestamp formatting and test cases in Timestamp and TimestampTest classes to improve accuracy of timestamp string representation and ensure correctness of tests
[ java ] use ` ctx. archivecontext ( ). clone ( ) ` instead of ` archivectx. clone ( ) `
added a condition to check if the method is compiled before executing COMPILE _ THRESHOLD to ensure that the method is only executed when the
added unit tests for ` Image2 ` and ` Image2Joined ` in multiple classes to enhance testing coverage for various image types in the
refactor TogglableFlag to use constants for default values and add a change listener to improve code readability and maintainability by centralizing default values
updated log messages in DockerClientFactory to include placeholders to improve logging clarity for better debugging
added a check to return early if the current platform is ANDROID to optimize performance by avoiding unnecessary operations on non - Android platforms
updated test assertions in RoutesTest. java to use assertThat with containsString to improve test readability and ensure expected output
added new functional interfaces for various data types including Byte, Float, Short, and Short in the common function package
changed the return type of ` getSubsColor ` and related methods from ` int ` to ` String ` across multiple classes to accommodate
added a conditional check before deregistering the invocation registry to avoid potential NullPointerExceptions during invocation execution
replaced the instantiation of ControlFrameBytes with a call to output ( null, nop, null, close. asFrame ( ) ) in Abstract
modified intent handling in LoginActivity and added a redirect flag in SignupActivity to ensure that the welcome activity is only started when the " redirected
added ShadowCheckedTextView class to Robolectric to enable testing of CheckedTextView functionality
updated ParserState to implement Serializable and made fields transient in AccessorProperty and Property classes to ensure proper serialization and deserialization of ParserState
added " identrustdstx3 [ jdk ] " to VerifyCACerts. java to support identrust certificate verification in
removed redundant line of code in WebInfConfiguration. java to streamline code and improve readability
fix muc occupant. getNick ( ) not return the correct nick
removed the'context'parameter from the constructors of ` QuicSession ` and ` QuicConnection ` to simplify constructor parameters and improve code
replaced direct calls to ` writer. setMergeScheduler ( ) ` and ` writer. setMergePolicy ( ) ` with a call to `
updated character type checks to use ` Character. getType ( c ) ` instead of ` Character. getType ( c ) ` to improve clarity and
added ` ComputedDateValue ` and ` ComputedNumericValue ` methods in ` AddDefaultValueChange ` and modified ` AbstractDatabase ` to
refactor NbtScoreboardIoService for improved readability to enhance maintainability and facilitate future updates
refactor SAML2 metadata handling to check for writable resources before processing to improve robustness and prevent runtime exceptions when metadata resources are not writable
changed access modifier of ` printer ` from private to protected and refactored printer creation logic to allow subclasses to access the ` printer ` variable
added BigDecimal import and updated order's average price calculation in HuobiAdapters. java to improve precision of order averages for
updated method calls and variable types in ProjectionOperation and TypeBasedAggregationOperationContext to improve clarity and consistency in field handling
modify the player addition logic to check if the player is already in the viewers list to ensure that the player is only added when the player
added constant state management in FolderAdaptiveIcon and ShiftedBitmapDrawable to improve performance by avoiding unnecessary drawable operations
refactor SPDYClient to use a controller for connection creation to improve modularity and maintainability of the code
fix npe in protostuffobjectoutput. serialize ( null )
pdfbox - 4071 : fix typo, a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability and maintainability
don't draw ax if ax number don't show
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap methods to improve code clarity and maintainability by using a unified method for
[ ds - 3892 ] fix bug in xml workflow service
added SSL context factory and hostname verification in CustomUrlJob. java and introduced a new CustomUrlTrustEverything class to enhance security by
add a method to get the real used clock rate string in the MediaFormatImpl class to improve accuracy in retrieving the used clock rate string
refactor TextureAtlas class to improve code readability and maintainability
replaced ` getProductNameForBuildTargetNode ( node ) + " - Swift. h " with ` getModuleName ( node ) ` in `
[ hotfix ] [ test ] fix race condition in testslot
# 273 - add test case for findids with inheritance
updated WebSocketServletRFCTest to use a ByteBuffer for reading from the input stream to improve code clarity and ensure proper handling of response headers
[ wasm ] set referencemultitablereferencestack to null in wasm.
[ clickhouse ] add ` ` ttl'' to log collect plugin ( # 1868 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper and CustomPreconditionWrapper to ensure correct handling of
replaced the use of a queued thread pool with Jetty's thread pool in DeploymentExceptionTest. java to improve performance by leveraging a
added error handling for Fresco initialization and improved null handling in NearbyController to improve robustness and prevent crashes due to Resources. NotFound
added a null and empty check for the objectName variable in PostgresDatabase. java to ensure that the method handles null or empty object names gracefully
updated error message from " could not find file " to " could not open file " in Command. java and TestPrint. java to improve
[ flink - 1782 ] [ table - planner - blink ] use old plannerfactory and executorfactory
updated X500Name assignment and modified subject assignment logic to handle null values to improve robustness and prevent potential NullPointerExceptions
added a deprecation annotation to the RuntimeOptions class to indicate that the class is no longer recommended for removal
replaced ByteBuffer encoding with direct string conversion using UTF - 8 encoding to simplify code and improve performance by directly using UTF - 8 encoding
added a new interface PermissionEvaluator in the org. springframework. security. expression package to provide functionality for permission evaluation in Spring Security
added support for the ERASE _ LINE _ ON _ FINISH option in LineReader and LineReaderImpl to enhance line reading functionality by
hbase - 2697 addendum : don't add server to the list of online servers
updated exception types from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ MERKLE _ ERROR in multiple files to align
use jfuc. getjarurl ( ) instead of juc. getjarurl ( )
don't fire exception after completing the full netty client response
changed the container's center method from BorderLayout to centerAbsolute to ensure proper positioning of the spinner component relative to its parent container
[ hotfix ] [ network ] fix recycling of buffer in networkbufferpool
refactor MBeanServer initialization and release condition in TestJmxIntegration. java to improve code clarity and prevent potential null pointer exceptions
replaced usage of JUnit's RunWith with a RetryTestRule in AbstractIT. java to improve test reliability by integrating RetryTest
refactor QueryStateMachine constructor to accept a required transaction ID instead of a autoCommit boolean to enhance flexibility in transaction management
updated import statements in CsvFieldType, CsvTable, CsvTableScan, CsvTest, and added a new package - info. java file to
added support for " javax. microedition. khronos. opengles. GL " in InstrumentationConfiguration to support additional
[ hotfix ] [ test ] use lambda instead of anonymous inner class
refactor request handling in Request. java and add a new test case in RequestTest. java to improve code clarity and ensure proper handling of CONNECT
updated methods to use ` WhatsNewActivity. KEY _ LAST _ SEEN _ VERSION _ CODE ` instead of ` appPrefs ` to improve
added methods to retrieve available and unavailable session information and updated session retrieval logic to improve clarity and functionality of session management
added a call to addPackageToScan ( " liquibase. pro " ) in ServiceLocator. java to enable scanning of the Liqu
renamed the method from ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to improve clarity by
updated the ` loadWithNewGlobal ` method to accept an additional ` args ` parameter to enhance functionality by allowing additional arguments during the loading process
updated regionMatches method to include start index parameter in FastPathResolver. java to ensure correct parsing of URLs starting from the start index
replaced length ( ) method calls with getRetainedSize ( ) in HiveClientModule. java to improve accuracy in determining the retain size of
corrected the spelling of " isExceedRandomizationDepth " to " hasAlreadyRandomizedType " across multiple files
added support for the " LEAD " and " LAG " function in UnsupportedOperatorsVisitor. java and a corresponding test case in TestWindow
added a line to clear the headers in the proxy request to ensure that headers are cleared before processing requests
added a check to skip tests if SA attach is expected to work to ensure that the test is skipped when SA attach is expected to work
added null check for bgColor and introduced TranslucentWindow class to enhance robustness by preventing potential NullPointerExceptions
added null checks for user information and improved error handling in UserInfoActivity to ensure user information are only displayed when the user's web page is
added serialization support for PrecompiledHeaderData in PrecompiledHeaderData. java to ensure that precompiled headers can be deserialized on different machine
[ flink - 208362 ] [ connectors / kafka ] validate kafka update mode
added a new file ` MultipleOutputsIntegrationTest. java ` to implement tests for named output groups in the project workspace
updated regex pattern in FileSettings. java and added content comparison in FileSettings. java to ensure correct parsing of file content and include setting values
[ hotfix ] fix checkstyle violation in statelesource
replaced usage of ` new Object [ ] { } ` with ` ArrayUtils. EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests.
added a @ TaskbarModeSwitch annotation to TaplTestsQuickstep. java to enable persistent taskbar mode switching for testing purposes
added new DeviceStatus entries for " leaving - dock " and " energy - save - mode " to the DeviceStatus class to enhance device status
don't swallow exception while load an item model
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest. java to temporarily disable the test due to known issues
added a conditional check for graphics before retrieving the current surface scale to ensure correct scaling behavior for non - 2x graphics
refactor RussianLowerCaseFilter class to improve code readability and maintainability
updated server and client properties handling in CsvBulkLoadToolIT and modified test driver initialization in QueryUtil to improve code clarity and ensure proper configuration
added replace calls for File. separatorChar and File. pathSeparatorChar in FileDisplayActivity. java to ensure consistent file path formatting across different operating
wavloader now support seekableinputstream.
added a ` repeatFirstLineIndent ` flag and updated indentation logic in ` ColumnText ` to support repeat lines in column text formatting
changed the type casting in the equals method from Oid to Object to ensure proper type handling for Oid comparison
issue # 563 do not start the house - keeping thread until after pool initialisation have complete .
rename controlflowanchornode to controlflowanchored to avoid confusion
remove focus painted from the button in WindowsPlacesBar to improve user experience by ensuring that only relevant buttons are focused
updated condition in DatabaseSnapshot to include UniqueConstraint and ForeignKey alongside PrimaryKey to ensure proper handling of cases where there is no backing index
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and updated ` AccountAPI ` to
ds. title ben't processable when create community group
added a check for non - empty words in GapInsertionDetector. java to ensure that only valid words are processed to avoid potential errors
camelscript : add unit test for groovy engine
updated thread selection logic in FeedRefreshUpdater and added getter and setter methods in ApplicationSettings to ensure proper handling of database update threads
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller. java to improve performance by allowing more items to
replace ` metautil. tointernalname ( system. class. getName ( ) ) ` with ` Ljava / lang / System ; `
hhh - 13644 - fix npe in procedurecallimpl. getresultstream ( )
added a null check for the configuration before retrieving API properties to avoid potential NullPointerExceptions when accessing configuration properties
added ` BinaryFrameGenerator ` and ` TextFrameGenerator ` classes to establish a structure for handling binary and text WebSocket frames
danielwagnerhall : replace ` $. findelement ( by. id ( " peas " ) ) ` with
refactor randomGeo3dShapeGenerator to use random ( ). nextBoolean ( ) instead of Math. abs ( lat ) and Math.
added a keepAlive method to handle ClassLoader to improve resource management by allowing the ClassLoader to be garbage collected
changed return value from false to true in SQLiteDatabase. java to ensure proper functionality of the method
don't report special case for java. util. concurrent signature
added MkdirStep to multiple classes including AndroidAar, AppleBundle, ApplePackage, and FatBinary to ensure proper directory handling
added detailed error messages for coordinate alignment errors in MeshLeveler. java to improve debugging by providing detailed error messages for illegal coordinates
[ drools - 7 ] don't allow applypmmlmodelcommand to remove jpmml from classpath
corrected the spelling of " locationMode " to " thermalStatus " to ensure accurate representation of the thermal status
use ` ` java. io. tmpdir'' for temporary directory on macos
make prjfilereader and catalogmanager aware of memory map bug
added a null check for the organization in the PluginManager to ensure that users are required to have an organization in the pom. xml file
removed contributor license agreements from SepPostingsWriterImpl. java to ensure compliance with licensing requirements
deleted the ` TerminateWebSessionListener. java ` file to streamline the codebase
updated the method call to use the system property ` java. class. path ` instead of an empty string to ensure the method uses the correct
replaced ` ArrayUtils. EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device. java ` to
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest. java ` to address issue # 3198 related to
changed the LAUNCHER3 _ PHYSICS flag from false to true to enable the translation feature for improved user experience
added a div class'noPrint'to HtmlThreadInformationsReport. java to indicate that the report should no longer be printed
updated LUCENE _ MAIN _ VERSION and TEST _ VERSION _ CURRENT from LUCENE _ 31 to LUCENE _
added private long variables for symbolicator and task handling in BsdDebuggerLocal. java and updated OS detection in PlatformInfo. java to enhance
use weakreferences in networkdispatcher to prevent memory leak
only log ` ` connection reset by peer'' exception
[ java ] use commonconfiguration. admin _ dir _ name to avoid npe.
added a break statement in the TouchImageView class to ensure proper flow control during image loading
chore ( regen ) : update advanced setting proto to v3.15. 3
refactor FeedableBodyGenerator to simplify SSL handling to improve code readability and maintainability
added type checking for JavaType's CONTRAVARIANT in TypeUtils. java to ensure correct handling of primitive types in type inference
use concurrentskielistset instead of nonblockinghashset in memtablespendingflush
added null check for ` tree. errs ` in ` MemberEnter. java ` and modified error condition in ` JavaCompiler. java `
use SWT. NONE instead of SWT. NO _ BACKGROUND in BugInfoView. java to ensure consistent browser behavior across different platforms
replaced ` finish ( ) ` with ` dialog. cancel ( ) ` in ` AboutActivity. java ` to simplify the button's behavior
fix overflow in integerstamp. divide ( )
added a method to read an InputStream and updated image retrieval to use this method to improve code readability and maintainability by encapsulating image loading logic
added variable definition and undefining in SwitchCompiler and modified CaseStmtToken to extend StmtToken and manage locals effectively
added error handling for unsupported cipher provider initialization in RSAClientKeyExchange. java to improve robustness by logging exceptions during the handshake process
added " psapi. lib " to the AdditionalDependencies list in WinGammaPlatformVC10. java to ensure compatibility with the latest API changes
updated SQL comment strings to include a newline character to ensure consistent formatting of SQL commands across different operating systems
added compatibility and encoding configurations in TemplateEngineFreemarker. java and updated HTML escaping in ApplicationControllerTest. java to ensure compatibility with
replace ByteArrayInputStream with a byte array and print it to a String to improve performance and readability of the code
remove unused static field in sampleresenderfactory
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure that the EmailableReporter
added a boolean flag ` quoted ` in the ` CommandLineBuilder ` class and updated assertions in ` CommandLineBuilderTest ` to ensure proper handling of
remove'public'modifier from interface in java. time
added a line to set the number of reduce tasks in the FreeGenerator job to ensure the job accurately reflects the number of reduce tasks
updated field retrieval logic in SchemaGeneratorHelper to use ObjectField to improve accuracy in handling object fields from default values
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the correct file version
added support for GL _ ARB and GL _ TEXTURE _ float extensions in FloatTextureData. java to ensure compatibility with desktops
add method to fileserver. write ( string, string ) so that it don't throw an exception
added null check for outputDirectory and jarStream before setting output directory to avoid potential NullPointerExceptions when jarStream is null
added performance measurement to the getFuture method in ShadowSQLiteConnection to enhance performance monitoring capabilities for sqlite operations
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest. java ` and
[ geos - 8016 ] [ geos - 8016 ] move resourceerrorhandling enum to org. geoserver. config package
added a condition to check if pos is less than BUFFER _ SIZE and handled EOFException in TestRAMDirectory to ensure proper buffer position handling and prevent
add more detail to error message in case of miss resource
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and modified access control context handling to enhance thread management and ensure proper permission
updated CHECK _ EVERY _ N constant to 0xFFFF and modified cache free logging to improve memory management and enhance debugging capabilities
hbase - 25801 : fix flaky testsplittransaction. testsplittransaction
added null check for currentSelectionArea in CompatibilityEngine. java to avoid potential NullPointerExceptions during selection enabling
added parameterized test for the ` demos ` module in the ` DemoModulesTests ` class to ensure that the ` demos ` module behaves
added spanX and spanY conditions to the canCreateFolder method to ensure proper positioning of cells within their space
refactor CacheOffHeap class to improve code readability and maintainability
throw an error if a reference to a table depend on another reference to prevent the database from be re - opened
added validation for row and column indices in TiledLoader. java to ensure tiles are only updated when the current layer height is below the expected
added synchronized keyword to the setWorkingSet method to ensure thread safety when modifying the working set
added a new Java class named Solution that calculates the minimum and maximum steps based on a starting stone to implement functionality to calculate the minimum and
add multichat operation set definition and gibberish protocol implementation
fix incorrect rendertypes in multilayermodel.
added tagless tag removal functionality in GuiConfigEntries. java to enhance user experience by allowing tagless tags to be removed
changed thingTypeVersion from an integer to a string in ModuleType and Capability classes to allow for more precise representation of the thing type version
added null check for recieptents before sending messages to avoid potential NullPointerExceptions when recieptents are null
simplify issing ( ) method in routinginboundhandler
updated DockerClientFactory to include a failFast parameter and improved logging in RemoteDockerImage and ImageFromDockerFile to enhance error handling and
added support for resourcesMode in AndroidMetadata and related classes to enhance functionality by allowing resource management based on device configuration
replace DateUtils. addDays ( ) with Calendar. getInstance ( ) for date manipulation to improve code readability and maintainability by using a standardized
replaced ` gradleImporter. importProject ( projectFile ) ` with ` gradleImporter. importProjectCore ( projectFile ) ` to ensure the
added error handling for CommandFailedException in LiquibaseCommandLine to improve user feedback during command execution
refactor TreeMap class to improve code readability and maintainability
added methods to enable and manage async stack traces in the Display class to improve debugging capabilities for async stack traces
added a method to set the glow color in BubbleTextView and set it in Folder to allow customization of the glow color of the
set the class of " file - row - text " to " file - row - text " in LinkedFilesEditor to ensure consistent styling for
modified AbstractJdbc2ResultSetMetaData to return " java. lang. Short " instead of " java. lang. Short " and added a new
removed exception handling for file writing in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the code and improve performance by eliminating
added a null check for _ info before evaluating the upgrading status to avoid potential NullPointerExceptions during the upgrade process
added a constructor to ShadowLocation that accepts a provider string to facilitate the initialization of the provider object
added a condition to check if the deviceRam is less than 2048 to ensure proper handling of RAM limits in the application
don't store stats for non - data map in localmapstatsprovider
added logging for file existence and missing file checks in FileProfileActivator to improve debugging capabilities by providing visibility into file activation status
updated the parameter name from " noname1234 " to " invalid _ " in the addToBody method to improve clarity by using a more des
don't convert list to a set in guildimpl. getroles ( )
updated array size check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter. java to ensure the array
added assertions to verify the deletion of a user in the dashboardUserMapperTest to ensure that the delete operation behaves as expected in the dashboard application
rename recipient to primary to secondary to improve clarity
llvm : : llvmpointerstorenode : isderefhandle ( ) method.
added a method ` getBufferSize ( ) ` to ` BufferedIndexOutput ` to provide a way to retrieve the buffer size
add usage help auto - width for standalone launcher
refactor action bar title setting logic in DrawerActivity. java to improve user experience by ensuring notifications are enabled when interactions change
refactor CommandLineParserTest class to improve code readability and maintainability
added interpolator settings for animation transitions in PortraitStatesTouchController to improve animation responsiveness and performance during transitions
updated method call from ` javaName ` to ` javaNameFromExternal ` to improve clarity by using a more descriptive method name
added native methods for setting and releasing a long object in CWrapper. java to enhance frame management capabilities in the application
added constant value checks in mmm Checker. java and created a new ValueTest. java file to ensure that constant values are handled correctly
8151501 : [ testbug ] compiler / intrinsification / montgomerymultiplytest. java fails due to
removed null check for constructors in PojoUtils. java to simplify the code and improve readability
refactor JiraConfiguration to improve code readability to enhance maintainability and facilitate future updates
updated error and coverageFailed messages to include parentheses to improve clarity and consistency in error reporting
updated bounds calculations in DeviceProfile. java to include search bar offset to improve layout accuracy by accounting for search bar offset
fix potential npe in pulseaudioclient when idletimeout = = 0.
refactor activity launch logic to run on the UI thread to improve responsiveness and responsiveness of the app
removed the ` getSourceGroupOptional ( ) ` method from ` AppleSource ` to streamline the code by eliminating unused functionality
increased await timeout from 22 seconds to 32 seconds in TestSimTriggerIntegration. java to improve test reliability by allowing more time for trigger firing
[ hotfix ] [ core ] fix compile error in floatstreamreader
added a null check for bestSoFar [ 0 ] in AbstractNodeCostSearch. java to ensure that the bestSoFar array is not
added a condition to skip processing for specific component types in ResourceEditorView to ensure that only valid component types are processed
replaced ` UiThreadHelper. getBackgroundLooper ( ) ` with ` LauncherModel. getWorkerLooper ( ) ` in ` DragView. java
added a null check for commitPoint and initialized the latest commit if it is null to ensure proper handling of null commit points and retrieve the latest
added unit tests for getting and setting IMEI and MEID in ShadowTelephonyManagerTest and ShadowTelephonyManager to ensure correct functionality
added debug logging for HTTP requests in SimpleHostRoutingFilter to improve traceability and debugging capabilities for HTTP requests
added ` destory ( ) ` method to ` IndexSegment ` and implemented ` close ( ) ` method in ` IndexSegmentImpl ` to
[ hotfix ] [ test ] fix npe in normalmessagesendandrecvit
replace ` Charset. forName ( " UTF - 8 " ) ` with ` StandardCharsets. UTF _ 8 ` in ` StatVisualizer.
hbase - 19330 : do not retry ioexception when bulk load fails
added a ` commission ` field to ` DefaultWithdrawFundsParams ` and updated ` RippleWithdrawFundsParams `
removed unused import of StreamTerminator in AutoClosingReferenceStream. java to streamline code by eliminating unnecessary dependencies
updated exception handling to include both IOException and SolrServerException to improve error handling by distinguishing between IOException and SolrServerException
added validation for abstract overloaded methods in Java2TypeScriptTranslator to ensure proper handling of overloaded methods and improve error messaging
replaced direct call to sweepDisk ( ) with a try - with - resources statement to enable logging of session garbage collection
updated ` SqlDataType ` to implement ` Serializable ` and refactored entity maps in ` Entities ` class to improve data integrity by ens
refactor SubExactLConstantTest and SubExactLNonConstantTest to improve code clarity and maintainability
added null check for claimRequestString before parsing to avoid potential NullPointerExceptions when claimRequestString is null
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the code
updated the ` processTypeHintForNestedDocuments ` method to handle null values and added tests for null values in ` UpdateMapperUnitTests `
refactor CoreAdminRequest to use CoreStatus directly instead of CoreAdminResponse to improve clarity and consistency in obtaining core status
make moddirtransformerdiscoverer non - static so that it can be reuse.
updated error message formatting in AbstractQuerydslProcessor. java to improve clarity and consistency in error reporting
pegraphdecoder : make pemethodscope. getcallstack ( ) return - 1
( chore ) camel - resttemplate : use copiedsetof instead of setof ( )
( chore ) camel - mail : use identityhashcode instead of string concatenation
http : / / issues. apache. org / jira / browse / amq - 4237 - fix nullpointerexception in prefetchsubscription
updated getIdentifierName ( ) method to include setIsPropertyName ( ) to ensure proper handling of property names in identifier generation
added new activity for wave generator and updated InstrumentsFragment to use it to improve user experience by providing an easy way to start the wave generator
added logging for sheet application issues in KeyedProperties and SheetOverlaysManager to improve error handling and ensure proper logging when no sheet is available
add unit test for exec and log in pod
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to ensure that a new Solr server is created when there is no writer
added an else block to call the superclass's dispatchMethodKernelOkra method to ensure proper handling of method kernel okra dispatching
added Comparable interface and modified record sorting in DefaultDnsClient to enhance sorting functionality for MxRecords by implementing Comparable interface
refactor thread creation to use a privileged action in XToolkit. java to enhance security by ensuring proper thread creation
added validation in SelectBox. java and set " Linux6 " selection in UITest. java to ensure the dropdown reflects the correct Linux
replaced ` IllegalStateException ` with ` Collector. printStackTrace ( e ) ` in ` JobGlobalListener. java ` to improve error handling by providing
added a parentSplit parameter to the createState method and modified state handling in SplitState to enhance state management by associating SplitState instances with
changed connectionState variable to be volatile and modified its return statement to ensure thread safety when accessing connection state
increase default polling period to 1 second and add endpointid to pollablebridge
refactor encoding methods in MemoryStack and MemoryUtil to use nmalloc ( ) and MemoryUtil. wrap ( ) to improve code clarity and maintain
added error handling for ` DocletAbortException ` in ` HtmlDoclet ` and ` AbstractDoclet ` to improve error reporting and provide
fixed false positive with unusedmodifier
refactor code to use method references instead of lambda expressions to improve code readability and maintainability
make test use ssl = { 0 } instead of ssl = { 0 }
improve logging and exception handling in TransformationHelper. java to enhance clarity of error messages during transformation failures
changed userPermissions retrieval from userPermissions to activeConnectionPermissions to ensure correct permissions are retrieved from the active connection object
replaced equality check with an EqualsBuilder implementation to improve the accuracy of point equality comparison
added a null check for the ` outputRoot ` parameter in the ` process ` method to avoid potential ` NullPointerException ` during file processing
pdfbox - 2576 : add annotationfilter to pdpage and pdfrenderer
refactor StackTraceCleaner class to improve code readability and maintainability
modified content type handling for CSS and JavaScript files in PluginServlet. java to ensure correct content type is set based on file extensions
hhh - 14611399 : skip testliteralinselectexpression
changed the parameter name from ` slot ` to ` slotSize ` in the ` upgrade ` method and updated null and empty checks to improve clarity
added getStats ( ) method to AbstractDataImportHandlerTest and Context classes to provide a way to retrieve statistics from the context
[ drools - 10 ] add longpolling option to kiecomb. config. kie. client
added accessibility support for scroll events in PagedView and BaseOverview to enhance user experience by ensuring proper scrolling behavior
added functionality for displaying unlocks in the PausedDialog to enhance user experience by allowing easy access to unlocks in the application
clear the drain map from the event's getDrops ( ) method to ensure proper resource management and prevent potential memory leaks
added a new constant DEFAULT _ PARAM with a value of " inputName " in StreamResult. java to provide a default value for the input
changed the method signature of ` testNormalizeOrder ` from ` MalformedURLException ` to ` IOException ` to align method signature with the expected exception type
updated printlnBoth method to include chunk type and modified buffer handling in LocalTsFileInput to enhance debugging by providing more context on the chunk type
added a mechanism to exclude Swift headers from the UMBrella header to ensure that only Swift headers are excluded from the project
reformatted the ` onHttpError ` method declaration for consistency to improve code readability and maintainability
added encode ( ) method to RequestPlugin. java to ensure proper handling of special characters in requests
mondrian : fix bug in mondrian. mondrian. rolapnativemondrian.
added error handling for null or blank password in LdapAuthenticationProviderImpl and created a corresponding test class TestLdapAuthenticationProviderImpl to ensure proper authentication
pdfbox - 4071 : simplify code, a suggest by valerybokov
added a condition to clear complex writers in ProjectRecordBatch to ensure proper resource management during processing
added ` @ SuppressWarnings ( " serial " ) ` annotations across multiple cache classes to suppress warnings about the'serial'attribute
modified ClassGraphClassLoader to include null check for classInfo to enhance robustness by preventing potential NullPointerExceptions
added handling for schema errors in ErrorResponseException to improve error reporting by including additional schema errors
added a constructor to the EventSourcingRepository class to initialize the EventSourcingRepository with specified parameters to ensure that the eventStore
refactor symbol definition logic in mmm Attr. java to improve code clarity and maintainability
updated text setting logic in SearchedPeopleCursorAdapter and adjusted search text handling in QustomDialogBuilder to improve accuracy in displaying search results by
updated command handling in NuvoConnector and NuvoHandler to improve clarity and functionality of command processing
tiff : use ` ` tiffBaseline'' instead of ` ` tiffextension''
close thumbnail file stream after use - fix for leak that leave open file
add a utility class to calculate average of a value and use it in the assembler.
added two new classes, SigInt and SigIntBarrier to implement a concurrent mechanism for signal handling in a concurrent environment
refactor graph model handling in ExporterGEXF. java to support hierarchical graphs to improve accuracy and maintainability of graph operations
refactor TCTLSeparatedProtocol to use Text objects instead of byte arrays to improve performance and maintainability of the code
add check for invalid index in response detail
updated catalog comparison logic to use CatalogAndSchema. CatalogAndSchemaCase. ORIGINAL _ CASE to ensure correct comparison of schema and catalog case
simonstewartial failure in the browsermobproxytest
updated error message formatting in ModelRepositoryImpl. java to include line and column details to improve clarity and consistency in error reporting
removed redundant call to mTextWatcher. reset ( ) in InPlaceEditView. java to streamline code by eliminating redundancy
refactor internalbytearray and trufflestring to improve code readability and maintainability
[ flink - 3687 ] [ flink - 3688 ] use tuple2 < k, v
updated multiple assertion classes in the codebase to improve consistency and maintainability across the codebase
deleted ` Class Á ` and added ` DiacriticTest ` class to facilitate testing of diacritics on Mac
[ java ] use a cyclic barrier in cluster membership test.
[ mng - 5957 ] fix npe when a reactor be not present.
updated SSL scheme comparison logic in ServiceRegistryConfig and modified test assertions in TestServiceRegistryConfig to ensure proper SSL handling and validate expected values for
updated Mockito library version to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency in formatting
added a ensureInstance method to the ServletHolder class to ensure proper initialization and retrieval of the Servlet instance
[ binance ] improve accuracy of delta server time in binance
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8. 5 " to enhance compatibility with additional
updated the method to retrieve the current form if it is null to ensure that the current form is properly initialized before usage
modified ` decodeResource ` and ` decodeByteArray ` methods to accept an additional ` BitmapFactory. Options ` parameter to enhance bitmap decoding functionality by allowing
[ java ] use executor instead of executor in example subscriber and rate subscriber.
added a ` preventNextClick ` flag and modified tweet text handling in ` TimelineArrayAdapter ` to improve user interaction by preventing the click action
added " text " to the unmodifiableDataTypes in PostgresDatabase. java and modified database type handling in NumberType. java and ColumnSnapshotGenerator
fix entryprocessorbouncingnodesstest ( # 3683 )
updated method names and state checks in AmbariManagementControllerImpl and State classes to improve clarity and accuracy in state representation
added a null check for ` bridgeUid ` before adding results in ` CreateBridgeServlet ` to avoid potential ` NullPointerException ` during bridge re
refactor methods in PreconditionEnforcer and CrawlServer for consistency and clarity to improve code readability and maintainability
added null checks for the display name in multiple classes to avoid potential NullPointerExceptions when checking the display name
added support for a default shader in the SpriteBatch class to enhance flexibility in shader initialization
added options " - c synchronous _ commit = on " to TestUtil. java to enable synchronous commit functionality in tests
added TypeCoercer to handle duplicate elements in SortedSetTypeCoercer to improve error handling for duplicate elements in collections
updated message IDs based on file type and favorite status in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve user experience by displaying appropriate confirmation messages
added a condition to check if'c'is less than 256 in URLPathEncoder to ensure proper handling of special characters in URLs
updated the registration of fragment storage to use a dynamic port instead of a hardcoded value to improve flexibility and maintainability of fragment storage registration
updated mock call to expect an empty map in HostResourceProviderTest to ensure proper handling of clusters without returning an empty map
removed the logger parameter from the loadConfiguration method across multiple classes to simplify configuration loading by eliminating unnecessary logging
fix for the issue report http : / / github. com / codenameone / codenameone / issues / 207
removed the ShadowHtml class from RobolectricBase. java and updated HtmlTest. java to include spanned functionality to streamline testing by
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl. java ` that implements the ` StarTreeRecordStoreFactory ` interface
updated logger names from " org. eclipse. jetty " to " org. eclipse. jetty. http3 " and " org. eclipse.
changed the visibility of the addListeners method from private to package - private to allow access to the method from outside the class
refactor StateHandleStore to improve code readability to enhance maintainability and ease of understanding
replaced ` org. eclipse. jetty. util. security. Constraint ` with ` org. eclipse. jetty. http. security. Constraint `
add error message if a student try to put a team in two different section
use try - with - resources in favor of try - with - resources
camel1145routetest : use a dynamic port number instead of a hardcoded one
added a new ` BuildTarget ` parameter and refactored related methods in ` JarBuildStepsFactory ` to enhance functionality by allowing access to the
remove # validating - cerficates from the certificate verification message
npe in listcapacity - remove getPageSizeVal ( ) method
added a case for CLOSED state in IteratingCallback to handle cases where the state is closed
added a boolean flag ` isAuthorized ` to ` AccessControlContext ` and updated the ` impliesCreateAccessControlContext ` method in ` ProtectionDomain
added binding processing in OSGiDeployer to ensure proper deployment of applications based on their type
correct mimetype for tiff image report in # 910
replace result array with type array and improve assumption handling to enhance code clarity and ensure proper handling of null values
added a new file ` CubocDesktop. java ` and modified loops in ` Map. java ` and ` MapRenderer. java `
updated test file paths in PolicyMonitorTest. java to include " test - classes / monitor - test - 1 " and " test -
added a call to removeAllFiles ( ) in TrashbinActivity to ensure that all files are removed from the trashbin list
replace ` org. eclipse. jdi. Bootstrap. virtualMachineManager ( ). allConnectors ( ) ` with ` com. sun
[ gr - 174992 ] add checkglobalvariablestoragenode to truffle. llvm
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted related logic to enhance event handling by associating intents
add a constant for max burn target lower fee and update the return statement accordingly to improve code readability and maintainability by using a defined constant
updated UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database and streamline database object snapshot generation to enhance compatibility with H2 database
modified SQL item assignment logic in DMLTransformer. java to ensure correct SQL generation based on the presence of namedValues
updated import statements and method names in ServiceValidateControllerTests. java to improve clarity and consistency in test cases
added a ` isStatement ` parameter to the ` getDefaultValidFunctionName ` method and introduced a ` hideDefaultName ( ) ` method to
refactor methods in JarLauncher class to improve code readability and maintainability
updated generics in several classes and methods for better type safety to enhance type safety and prevent runtime errors
make sure we don't send hole punch packet if we don't have any audio device.
added a test for updating a PGobject in ResultSetTest. java to ensure correct date handling for PostgreSQL updates
modified the PasswordResetEndpoints to handle empty results and added a test for non - UAA origin to improve error handling and ensure proper user creation
replaced the method of obtaining the document element from getChildNodes ( ) to getDocumentElement ( ) to improve efficiency by directly accessing the document element
refactor Cache class to improve code readability and maintainability
[ isochrone ] rename timeinsec to timemillis in isolabelWC
don't allow light relay to be bind if it's invalid
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to enhance the functionality of the ` contains
refactor Model class to improve code readability to enhance maintainability and ease of understanding
update recordedTime to use a constant value of 619315200000L to improve accuracy of recorded time tracking
added a condition to resize the status buffer for Windows terminal types to ensure proper handling of windowed terminals
added a state check for the host version state in UpdateDesiredStackAction. java to ensure that the host version state accurately reflects the
[ java ] move javatests and jsinterop - bundle - deploy. jar to integration test
switch to linkedhashmap to preserve order
remove try - catch block and make operation variable final to improve code readability and prevent potential null pointer exceptions
refactor method call formatting in KnativeEnvironment. java to improve code readability and maintainability
fix typo in commitlogarchiver
added connection handling in CloudSolrClient and a corresponding test in TestCloudSolrClientConnections to ensure proper functionality and reliability of Solr client configurations
synchronize access to allBindings in Breakpoint and DebuggerSession classes to ensure thread safety during concurrent access
refactor ShadowContext to use CACHE _ DIR and FILES _ DIR constants to improve code clarity and maintainability by centralizing cache and file management
sec - 825 : add miss style to xstream
[ drools - 10 ] use kiemodule instead of kiemodule in kierepository.
refactor block event handling in BlockEventListener to improve clarity and maintainability of the code
added a default implementation of the getLocalIp method in FinishedSpan. java to ensure that the method returns null instead of throwing an exception
replaced ` JdbcStepExecutionDao ` with ` SerializationUtils ` for storing ` OBJECT _ VAL ` in ` JdbcStepExecutionDao ` to improve
lucene - 10865 : remove excessive number of character for the first and last symbol
added support for " python37 " and modified resource extensions in tensorflow. java to enhance compatibility with different Python versions and ensure proper resource loading
refactor PluginTab to use a refresh button for table updates to improve user experience by allowing users to refresh the plugin list
change log level from info to warn for loading, saving, and trimming history files to reduce log verbosity and improve user experience
vmwarestorageprocessor : don't try to find the vm's data center if it's null
camel - sftp : don't stop sshd if it's already stop
refactor ExperimentalMockitoJUnitRunner class to improve code readability and maintainability
refactor code to use a utility method for retrieving Build Serial to improve code readability and maintainability by centralizing serial retrieval logic
refactor SwapGBuffers class to improve code readability and maintainability
added null check for skeletonControl in AnimControl. java to ensure proper removal of the skeletonControl when spatial is null
added methods to set and retrieve smart replies in ShadowRanking to enhance functionality for managing smart replies in the ranking system
[ java ] only add segment file to archive if they don't already exist.
refactor resource directory retrieval in CarrotClusteringEngine. java to improve code clarity and maintainability
added null check for testRect in WindowsTreeUI. java and created a new test class bug8004298. java to ensure robustness
updated ASM API version from ASM7 to ASM9 in CompilationConfig to ensure compatibility with the latest ASM features and improvements
improve error message for null pointer exception
added clientInfo field and setup method to SurrogateAuthenticationEventListenerTests to ensure proper client information is included in the event listener tests
added isUserView variable to CardPresenter. java to ensure isUserView is set to false before further operations
refactor GraphvizJavaExecutorUtility methods for improved clarity and consistency to enhance code readability and maintainability by standardizing utility methods
added a new assignment of ` syncLogTimePerRequestHistogram ` to ` constructBatchHistogram ` to ensure ` syncLogTimePerRequest `
added a new module - info. java file for the sqlite connector module to define module exports and dependencies for better modularity
added a sleep delay in StreamResetTest. java to improve test stability by allowing more time for tests to complete
removed conditional check for " new " in permissionsManager initialization to simplify the code and improve readability
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added import statement for Context and implemented getDepth method to provide a way to retrieve the depth of the application based on context
replace System. arraycopy with Arrays. copyOfRange for data copying to improve code readability and maintainability by using predefined constants
[ hotfix ] [ doc ] fix typo in executiongraph javadoc
removed the SwipeLayout dependency and modified notification handling in NotificationRenderer to simplify the code and improve maintainability by eliminating unnecessary swipe - related
updated exception handling logic to handle " none. msg " in multiple test files to improve error handling by providing a default message when the invocation is
fix npe in glowcontainer # getsnapshotinventory ( )
replaced MethodHandle method lookup with reflection for retrieving the target field to improve compatibility with modern Java versions that do not require reflection
changed the type casting of values from int to Integer in MathTest. java to ensure correct retrieval of integer values from MathEntity
updated the return statement to include " - " prefix for metrics and datasets in BaseEmailContentFormatter. java to improve clarity and consistency in subject
added functionality to manage the visibility of theProvidedPanel based on the layout node's properties to improve user experience by ensuring that the provided
added null check for location in ServerCallable. java to ensure robustness by preventing potential NullPointerExceptions when location is null
[ hotfix ] [ doc ] fix typo in javadoc
added a check for null DSA key parameters in BasicChecker. java to ensure that only valid DSA keys are accepted to prevent runtime errors
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring media types to improve code readability and maintainability
updated task assignment logic in LlapBaseInputFormat. java to include taskAttemptId to improve clarity and debugging by providing more context on task attempts
added " allow - bean - definition - overriding = true " to the SpringBootTest annotation to ensure proper configuration for bean definition overriding
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor package structure for BTCMarketsStreaming services to improve code organization and maintainability
added a new test case ` issue151 ` in ` FencedCodeBlockParserTest. java ` to ensure that the ` issue151
added a new file ` CompatibilityTest. java ` that tests internal DTD and XML properties to ensure proper validation of internal DTD and XML
added new utility classes for push notifications and security to enhance user experience by integrating push notifications and managing security preferences
fix bug in tablerebalancer when there be too many instance in the cluster
bump version to 2.17. 0 and tidy release note
log4j2 - 1343 : fix line separator issue in unit test
improve handling of timeout in ajpaprocessor. readtimeout.
initialize ` friction ` and ` restitution ` to zero and set ` isSensor ` to false to ensure default values are set to
updated method signatures to include anomalyFunctionSpecMap and adjusted fetchSaclingFactors to fetchScalingFactors across multiple classes to enhance anomaly
removed shell command execution for waiting for broadcast idle to streamline code by eliminating unnecessary shell command execution
added unit tests for reading font and link tags with attributes in ResourcesTest. java to ensure correct string representation for font and link tags in resource
fix incorrect patch reference in guistatscomponent.
added permission handling for CALL _ PHONE in Launcher. java to ensure proper user experience when accessing shared resources
updated return values in SimulationPanel and PlotDialog, modified warning handling in BasicEventSimulationEngine, and added locale handling in Startup to improve
refactor GeoPointDistanceQuery, GeoPointInBBoxQuery, GeoPointInPolygonQuery, and GeoEncodingUtils to improve code clarity and maintainability by
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to ensure thread safety when accessing the Docker instance
added a new constant for the VPX codec in CodecTypes. java to facilitate the use of the " vpx " codec
added a new ` coordinatorAddress ` option to ` DistBuildFactory ` and modified ` getCoordinatorAddress ` method in ` AbstractDistBuildExecutor
added a new method ` match ` to ` FsUtils ` and modified ` WrapTimer ` to use ` timer ( ). schedule ( task
added a conditional check to ensure ent. getValue ( ) is greater than zero before adding labels and totValue to avoid potential errors when ent.
make sure we return ` ` true'' for ` ` false''
removed the @ Test annotation from TestPerfBenchMarkDriver. java to clean up the test code and reduce unnecessary dependencies
added a method to set the materialization time in ObjectStore and a test for metadata updates in TestObjectStore to ensure proper handling of creation
added error handling for UnsatisfiedLinkError in VoskSTTService. java to improve stability by logging warnings for missing native dependencies
remove jmssampler. is _ one _ wAY property and add response code to jmssampler.
modify break weight determination logic in GlyphView. java to improve accuracy of break weight determination
refactor data reading logic in RCFile. java to improve readability and maintainability of the code
added an @ AwaitsFix annotation in AutoAddReplicasPlanActionTest. java to indicate that the test is currently failing due to a
refactor ToePool to use a LinkedList for storing unwound steps and processors to improve clarity and maintainability of the code
removed the ` flavorsForFormats ` parameter from the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable ` and ` Data
hbase - 27890 add - infoport argument to thrift test thrift server
added a condition to return false if the file is at the end of the file to ensure proper handling of end - of - file scenarios
refactor metrics and timers handling in Debug. java to improve clarity and maintainability of the code
fix nullpointer exception in chatroom. getroom nickname ( )
improve error message when filename be miss
refactor refresh token creation into a separate method ` createRefreshToken ` to improve code readability and maintainability
updated error message formatting in BuckConfig. java to improve clarity and consistency in error reporting
[ flink - 2594 ] [ yarn ] remove unnecessary lock in yarnflinkapplicationmasterrunner
added a method ` nativeGetHardwareBuffer ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a mechanism for retrieving hardware buffer information
updated the SSL URI for the BTCChinaMarketDataService initialization to ensure the service connects to the correct data location
pmd : fix ant build on window
shenyu integration test for oauth plugin
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future updates
added flatMap and flatCollection methods to AbstractStreamEx and removed them from EntryStream and StreamEx to streamline the code and improve clarity in
updated error message in RestCodec and enhanced exception handling in ExceptionToProducerResponseConverters to improve clarity of error messages and ensure proper exception handling
updated ` shouldComeFromThisClassLoader ` to include ` org. specs2 ` and ` scala. ` to ensure compatibility with Maven Sure
changed the condition from checking if ` sdp ` is equal to checking if it does not already contain ` sdp ` to ensure that the
updated type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator. java and added a new test case in CreateTableGeneratorTest
added station checks for WFS document formats in NormalizedMultiValuesTest. java to ensure correctness and correctness of geographical measurements in the
updated the ` wasInvoked ` field to be volatile in ` NetworkTestUtils ` and modified server setup in ` UaaHttpRequestUtilsTest `
added a check to ensure the processor is configured before expanding regex mapping to prevent potential errors when the processor is not configured
updated the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and refactored the ` split
added XLCDCommunicator and XLCDController classes to enhance firmware handling in the application
[ drools - 7 ] fix kmodule marshalling to work with kmodule. xsd file
added retry logic to check if message is empty in multiple event triggers to ensure that retry occurs only when the message is not empty
refactor WorkerProcessPoolTest to use a constant for thread timeouts and simplify thread state awaiting to improve code readability and maintainability by centralizing
updated hashCode ( ) and equals ( ) methods in DelegatingMethod. java and added a new test class DelegatingMethodTest. java to
updated fee constants from 20000 to 10000 in EnergyCost. java to optimize memory usage and improve performance
modified the ` command ` method to include ` throws ConfigurationException ` and removed redundant calls to improve error handling and streamline configuration management
deleted the SpringTransactionHooks. java file to remove unused code to streamline the codebase
refactor AbstractClassAssert class to improve code readability and maintainability
add test to verify that getuninitializedstringvalue throw an illegalargumentexception
added support for " first _ order _ deps ( ) " in AndroidLibraryDescription and related tests to enhance dependency resolution and improve test coverage for
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to facilitate synchronization between home and all apps
replaced the retrieval of system anomaly message with a static boolean flag to improve performance by avoiding repeated logging of anomaly messages
added support for the " cinepack " format in ` FormatConfiguration ` and ` LibMediaInfoParser ` to enhance media format handling for
added support for the camera bobbing feature in the Player class to enhance user experience by allowing the player to decide whether to manipulate the hand movement
replaced ` data. describe ( ) ` with ` digest. toString ( ) ` in ` GrpcCasBlobUploader. java ` to
deleted the HSQLDBServerFilesFilter. java file and refactored file listing logic in TestUtility. java to streamline the codebase
walletappkit : fix nullpointerexception in restorefromseed / restorefromkey
updated the method call from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and added a trace log statement
added a new method ` visitMethodInvocation ` to check for existing method invocations to ensure that only valid method invocations are processed
replaced magic numbers in AmbientCubemap. java with a constant NUM _ VALUES to improve code readability and maintainability by using a defined
bugfix for method and class mode in profiler
added handling for zero values in GenericUDFMask and GenericUDFMaskFirstN and GenericUDFMaskLastN to ensure correct masking
use temporaryfolder in derbyblockstoretest
add method to itemstack. isitemstackedamageable ( ) and add method to itemstack. gethassubtypes ( )
fix mc - 167447 by use line _ width instead of alpha
simonstewart : set the browser startup page to " 1 " in firefoxdrivertest.
modified the condition in Http1xClientConnection to include additional checks for CONNECT and GET methods to ensure proper handling of HTTP requests that do not
rename task from " compile " to " process - classes " to clarify the task's purpose in processing classes
replaced ` shutdown ( ) ` method with ` closeIdleConnections ( 1L, TimeUnit. MICROSECONDS ) ` in ` HTTPH
added a null check for the aggregate function suffix before creating a new Metric to ensure that metrics are only added when the suffix does not already exist
added a method to set fullscreen parameters in TaskOverlayFactory and updated the method to retrieve the current corner radius to improve flexibility in managing fullscreen parameters
added a new Java class named Counting to calculate the frequency of a given input to provide a solution for counting occurrences of a given input
fixed nullpointerexception in clusteredagentmanagerimpl. java
modified the MutisignOperationerGodicTest. java file to improve test coverage and accuracy
added error handling for ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` in ` StaxEventItemReader
replaced specific imports with a wildcard import and added null check for qualifiedResourceName in TestAttributeSet to simplify import statements and prevent potential NullPointerExceptions
updated JSON imports from nimbusds. jose. shaded to net. minidev. json in ClaimConversionServiceTests and Claim
updated OS name checks and added support for " Linux - s390x - 64 " in PKCS11Test. java to ensure proper handling of
bug fix for vr reboot
added a new method ` invokeWithoutBlockingWithResultSync ` to ` Display ` to facilitate synchronous execution of RunnableWithResultSync operations
introduced the presencemessagelisttests. java file to remove unused test.
update calculations in PortraitPagedViewHandler to use Math. round for width and height adjustments to improve accuracy in calculating task dimensions
replace tab with space , for consistency
hbase - 26400 add row cache size to keyvalue. get ( ).
camel - 16400 : camel - core - do not throw runtime camel exception when add service to the camelcontext
added handling for ConditionalTask in SparkCrossProductCheck. java to improve task dispatching for conditional tasks
updated ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED in multiple classes to ensure proper
updated conditional logic in ` LoginInfoEndpoint. java ` and added tests in ` LoginInfoEndpointTests. java ` to ensure proper handling of
hbase - 25801 add todescriptive string ( ) method to assign region state and server information
added ` msg ` and ` result ` fields to ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw `
added support for the " PERIOD " column in MariaDB to enhance SQL generation capabilities for the " PERIOD " column
[ beam - 8470 ] improve error message in portablepipelineoptions
added support for Android 7. 1 - specific dictionary loading mechanism in VersionChangeLogs. java to inform users about changes to the dictionary loading mechanism
changed the visibility of ` NUM _ MILLIS _ IN _ DAY ` from private to public to allow access to ` NUM _ MILLIS _
removed debug print statement from ImageResourceLoader. java to clean up the code and reduce unnecessary console output
[ java ] invoke aeron client only when it own aeron client.
added validation for implicit lambda parameters in mmm Attr. java and created a new test class NoWarnOnImplicitParams. java to improve type
refactor hideMenuItem method to showMenuItem in FileMenuFilter and FileDetailFragment to improve code readability and maintainability
added reserved fields and updated type assertions in BTCETransHistoryResult and BTCETransHistoryJSONTest to support new transaction types and ensure
changed lists from List to Set in RetryFilterFunctions. java to improve data integrity by preventing duplicate entries
marked the PluginLoader class as deprecated to indicate that the class is outdated and should no longer be used
updated timestamp comparison logic in LastQueryExecutor. java and added a new test case in IoTDBLastIT. java to ensure correct handling
updated newline character formatting in HttpResponse. java to ensure consistency in newline handling
( chore ) camel - build - maven - plugin : set log level to error
added titleBar safe area setting in Sheet. java to enhance user experience by allowing title bar to be accessible
modified the loop to iterate over the last index of TimeSeriesChunkMetaDataList to ensure correct retrieval of the last index of TimeSeriesChunkMetaData
added SQL ALTER TABLE command to rename test _ column to " test _ c " to ensure that the SQL syntax for renaming test cases is correctly
changed the visibility of the copyState method from package - private to public to allow access to the method from outside the class
fixed - rexecutorservice. executecallable ( ) method throw classcastexception
filesystemsplit now use the suffix _ split _ file constant
[ hotfix ] [ table - planner - blink ] fix checkstyle violation
refactor null check for nameArg in CompareFunctionsProcessor. java to improve code readability and maintainability
don't warn about insufficient disk space for compaction
added ` toString ( IndexReader ir ) ` method to ` SegmentTermVector `, ` TermFreqVector `, and ` QueryTermVector
added a check in AbsSwipeUpHandler and unregistering TaskStackListener in TaskAnimationManager to improve stability by preventing unnecessary listener registrations
refactor getLockTimestamp and setLockTimestamp methods to use preferences directly to improve code clarity and maintainability by centralizing lock timestamp management
replaced direct artist retrieval with a helper method to retrieve the artist to improve code readability and maintainability by encapsulating artist retrieval logic
added null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is null
npe in splittext when there be no header marker match
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows key store types in the application
increased DEFAULT _ CHECK _ TIMEOUT from 400 ms to 1 _ 000 ms in RestTemplateSenderTest and WebClientSenderTests to improve test stability
added a condition to check if the result is not FILE _ NOT _ FOUND and modified the conditional logic to handle cases where the remote folder is
added animation capabilities to the Slider class to enhance user experience by allowing smooth animation effects
updated assertions for detectedLineSeparator and lineSeparator _ fd in LineSeparatorProcessorTest. java to ensure correct handling of line separators in tests
changed the maximum dimensions of maxWidth and maxHeight from 512x512 to 1024x1024 to optimize memory usage for texture packing
added a test for negated ternary expressions in UnnecessaryParenthesesTest. java and modified the return condition in UnwrapParentheses
camel - hazelcast : fixed npe when exchange body be null.
added TextFeedbackTest class and modified AllTests to include it to enhance test coverage for TextFeedback functionality
replaced Math. round with Float. compare for score comparison to improve accuracy in scoring accuracy
updated DENSITY constants from DENSITY _ HD and DENSITY _ 2HD to DENSITY _ 4K across multiple files
added a method to retrieve the array class element offset in HotSpotReplacementsUtil. java and updated ArrayCopySnippets. java to use this
added a boolean flag to check if the stage total points are equal to zero to improve performance by avoiding unnecessary processing when the stage total points are
add - r on / off support for remote scm system
[ mielecontrol ] fix state _ state _ state _ state _ state _ state _ state _ state _ state _ state _
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events to standardize event logging across the application
changed log variable name from ` log ` to ` LOG ` in ` LocalZookeeper. java ` to improve clarity by using a more des
added tests for ProjectGenerationEvent's finished and started events in EventSerializationTest. java to ensure proper serialization and deserialization of project generation events
apps : fix for selection of preview point
refactor JavaCompiler class to improve code readability and maintainability
add sanity check for non - positive time leave for random reads in integration test
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added " -- gc - sections " and " - nocopyreloc " options to the ldflags in NdkCxxPlatform. java to
updated SpringCloudCircuitBreakerFilterFactory to expand fallback URIs using ServerWebExchangeUtils to enhance flexibility in fetching circuit breaker URIs
simoniously fail test in a headless environment
added null checks for URI and localName in ReadOnlySharedStringsTable. java to improve robustness by preventing potential NullPointerExceptions
added a method to retrieve the account network from a specified address in HttpMethed. java and a corresponding test in HttpTestAccount001
added a null check for availTextWidth before returning clipped string to ensure that clipped strings are only returned when text width is non -
refactor FlatteningIterator and related classes to improve clarity and maintainability to enhance code readability and facilitate future modifications
updated the ` removeColorHtml ` method to replace HTML tags with spaces to ensure proper HTML formatting by removing unnecessary HTML tags
doc : generate sample code in the java microgenerator ( # 269 )
added reloadanddeleteanyexistingquestion test to instructorfeedbackeditQuestionsuitest
updated row number checks in HSSFSheet. java and added assertions in BaseTestSheet. java to ensure correctness of row numbers in the sheet
added permission checks in InstallShortcutReceiver and Launcher classes to ensure proper handling of potentially malicious intents
[ java ] fix race condition in sequencer agent.
added hashCode implementation to AbstractParquetMapInspector class to ensure proper hash code generation for object equality
added a check for remotelyClosed state in HTTP3StreamConnection to ensure proper flushing and release of the buffer when the connection is closed
[ hotfix ] [ runtime ] make splitreader autocloseable
removed the deepCopy ( ) method from GsonBuilder to streamline the code by eliminating unused functionality
don't throw npe in llsourcebuilder. getallsources ( )
refactor file opening and closing logic in RestClientRequestImpl. java to improve code clarity and streamline asynchronous file handling
removed unnecessary whitespace in GrblController. java to improve code readability and maintain consistency
replaced ` MockFactory. class. getClassLoader ( ) ` with ` SearchingClassLoader. combineLoadersOf ( toMock ) ` to improve class
add test case to reproduce bug
added support for LEFT _ SEMI _ JOIN in condition checks to ensure proper handling of LEFT _ SEMI joins in join conditions
modified condition checks in HttpReceiver and HttpSender classes to improve clarity and correctness in handling HTTP responses
rename arraylengthoffset to arrayoopdesclengthoffset.
fix intermittently fail test
refactor multiple Java classes for consistency to improve code maintainability and readability
added a check for ` appCtx. isRunning ( ) ` before calling ` appCtx. stop ( ) ` to ensure that the application context
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return the font instead of void
refactor metrics handling in SpringmvcClient and update exception handling in CodeFirstSpringmvc to improve code clarity and ensure proper error handling for JSON processing
replaced ` AccountAgeWitness1 ` with ` AccountAgeWitness ` in AccountAgeWitnessService. java to improve clarity and consistency
updated formatting in StructureHeader. java and StructureReader. java to improve code readability and maintainability
added support for ` ResourceUrlProviderExposingInterceptor ` in ` CasWebflowContextConfiguration ` to enable handling of ` resourceUrlProvider
added a new class ` DexReturnInliner ` and modified the ` DexBody ` and ` DeadAssignmentEliminator ` to enhance the
[ smarthome ] enhance enrichedrule to include configuration property
removed the ` LinkOption. NOFOLLOW _ LINKS ` parameter from ` PathResource ` and updated ` AliasCheckerSymlinkTest ` to
[ hotfix ] [ table - planner - blink ] remove unused dialect property
updated AndroidPackageableCollection to use a Supplier for managing RDotJavaPackages to improve flexibility in managing RDotJavaPackages
add a test case for pmd's ` ` package info''
added configuration for minimum cross - compaction unseq file level in IoTDBDescriptor to ensure proper handling of unsequenced unseq files during
[ hotfix ] move activeresourcemanager into correct package
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify that
updated URI construction in ZipResource. java and added unit test in ZipResourceTest. java to handle spaces in feature file names to improve robust
updated the formatting and improved thumbnail handling in ExpandableUploadListAdapter. java to enhance code readability and ensure proper thumbnail generation during uploads
updated RobolectricTestRunner to merge parent classes and method configurations to ensure proper merging of parent classes and methods based on annotation presence
filter block and item registry in ModelLoader. java to ensure only valid items are processed
refactor methods in WebsocketCollector and WebsocketDataChangedListener to use default implementations to improve code clarity and ensure consistent behavior across classes
updated JSONPojoConvertor to handle Enum types and improved test assertions to enhance functionality and ensure correctness in color representation
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper. java ` to inform users that the option is
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` in ` GWTRequestWrapper ` to improve performance
updated GyroControl class to implement OrientationEventListener and added orientation adjustments to improve responsiveness for device orientation changes
change BIOME _ LIST _ SIZE from 256 to BiomeGenBase. getBiomeGenArray ( ). length to ensure the
replaced instances of ` println ` with ` print ` for function execution in ` GetInterfaceTest. java ` to improve readability and consistency in function
removed redundant assignment of the environment variable to streamline code by eliminating redundancy
added a new interface ByteToLongCollector with a supplier and BinaryOperator to provide a mechanism for collecting long values
added a preload configuration to MMapDirectoryFactory to enable or disable the preload feature based on user parameters
added custom metrics for world, economy, plot expiry, and MySQL components in BukkitPlatform. java to provide insights into
refactor QuickConnectREST class to improve code readability and maintainability
added aspect ratio and drawable resource for the default card image to enhance the visual representation of the card in the application
[ ds - 3892 ] fix login redirect for implicit auth method
updated VectorHashKeyWrapper to handle empty array cases for longValues, decimalValues, byteStarts, and byteLengths to improve robustness
added test cases for System. nanoTime ( ) in TimeChangeTest. java to ensure correct timing behavior during CRIU restores
added null - safe line trimming in MultiPartFilter and printed parameter in MultipartFilterTest to improve robustness by preventing potential NullPointerExceptions
fire livingexperiencedropevents when the entity be cancel
updated status messages in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and consistency in error reporting
remove unsupportedoperatorsvisitor from beam - dsls - sql
added support for RdepsFunction in GraphEnhancementQueryEnvironment to enhance functionality to support Rdeps in query environments
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added logic to scale entire rockets in ScaleDialog. java to ensure that only specific components can scale the entire rocket
replaced usage of Arrays. toString ( bytes ) with direct calls to rs. getBytes ( 4 ) in UpdateableResultTest. java to improve
added time boundary information for hybrid tables in BaseBrokerRequestHandler. java to ensure proper handling of time boundary for hybrid tables
fix regression cause by race condition in connector. getpoller ( ).
updated regex pattern and refactored album title extraction logic in EightmusesRipper. java to improve accuracy in extracting album titles
replaced instances of ` mDevice. wait ( ) ` with ` TestHelpers. wait ( ) ` across multiple test files to improve code consistency
added a condition to check if the profile is a phone and not in landscape mode to ensure proper layout behavior for phone devices
replaced calls to ` getValue ` with ` unwrap ( QueryImpl. class ) ` in ` PartTreeJpaQueryIntegrationTests. java ` to
replaced the method ` Files. readAllLines ` with ` readMatchingLines ` and added a ` readMatchingLines ` method to enhance security by
removed dynamic check for jpaQuery's getResultStream method to streamline the query execution process by eliminating unnecessary dynamic checks
fixed nullpointerexception in physicprocess when entity be null.
add a test to verify that predicate clears map when value attributes are indexed
add multichat operation set definition and gibberish protocol implementation. related issue : issue # 241, issue # 244,
updated color values in mmm Utils. java and mmm UtilsTest. java to use a different font format to improve consistency in color representation
added subscription for disabling text inputs in DefaultMenu and EditorMenus to ensure proper handling of empty names input in the user interface
updated scratch path format and added RmStep to Aapt2Link. java to improve clarity and functionality of scratch path generation
replaced instances of ` new Capture < > ( ) ` with ` Capture. newInstance ( ) ` in ` ExternalJavacTest. java `
ggb - 2852 : don't clear selection when click on algebra view
improve error reporting when parse cql expression fails
added isCanceled ( ) method to BehaviorCall, Calls, and OkHttpCall classes to ensure proper handling of canceled calls
added a default implementation of the ` isAnnotationPresent ` method across multiple classes to provide a default implementation for annotation presence checks
added a default implementation of the ` removeAllWidgets ` method in ` UILayout. java ` to indicate that the method is not implemented yet and
[ hotfix ] [ yarn ] fix yarn test failure
opensslcipher : use math. max ( ) to calculate output size for update
added support for forced transcoding of high - res transcoding in PlaybackController to enhance user experience by allowing transcoding of high - res
[ beam - 8470 ] make datasetsourcemockbatch implement microreaderbatch.
updated import statements and modified listener management logic in GpsLoggingService. java to improve clarity and functionality when managing GPS listeners
changed the data type of ` fullwidths ` from ` boolean [ ] fullwidths ` to ` byte [ ] fullwidths `
added support for BaseItemDragListener in FolderIcon. java to enhance drag - and - drop functionality in the launcher
added methods to createEmptyArtifact and its implementation in AbstractRepositoryConnector and FileSystemConnector to enhance artifact creation functionality and ensure proper type casting
updated formatting in RabbitMQPublisherImpl. java to improve code readability and maintain consistency
removed unnecessary calendar checks in VideoViewerActivity. java to simplify the code for better readability and maintainability
camel - sftp : use fileutil. compactpath ( ) when create a sftp sftp object
( chore ) camel - weather : use assertMockEndpointsSatisfied with a timeout of 20 seconds
rename groupSortStr to sortWithinGroupStr in QueryComponent. java to clarify the purpose of the sorting within a specified group
added support for lARGE _ FERN in the double plate and under plate species to ensure proper handling of tallies in the system
changed the focusable property from " setFocusable " to " setRequestFocusEnabled " in TranscodingTab. java to ensure that the tree is
don't swallow interrupted exception
added a condition to check if the test system is not an instance of DB2TestSystem to ensure proper handling of database interactions in the test
added unitgroup functionality and updated related methods in DoubleModel and GeneralOptimizationDialog to enhance the functionality of the optimization goal by allowing dynamic unit
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to facilitate the integration of the BTC
added logic to set the number of samples based on context settings to ensure that the number of samples is accurately validated before proceeding
updated task name assertions in StepWithSimpleTaskJobParserTests to improve clarity and consistency in task naming conventions
changed variable declarations from ` cred ` to ` final ` in ` CentralAuthenticationServiceImplTests. java ` to ensure ` cred ` and ` svc
fix : ggbabs ( ` ` )'should be ` ` )''
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer. java ` to ensure proper handling of service output
fix parsing of bigdecimal type in executable model
added a new class " org. eclipse. jdt. " to hide the jdt used by jetty in addition to existing functionality
change return value from super. useAuthCache ( ) to false in NegotiateAuthentication. java to ensure proper handling of authentication cache
pagetitle : capitalize namespace by default
( chore ) camel - direct : use directconsumernotavailableexception to avoid backwards compatibility
added a null check for zooKeeper before assignment to avoid potential NullPointerExceptions when zooKeeper is null
fix a typo in the progress bar message
replaced direct calls to mVibrator. vibrate ( ) and mVibrator. cancel ( ) with runOnUiHelperThread (
added a call to updateLastRemoteStreamId in HTTP2Session. java to ensure proper tracking of the last remote stream ID
added text anti - aliasing to Graphics2D in EditorHeader and EditorToolbar classes to improve text rendering quality for better user experience
[ java ] change termwindowsize to currentwindowsize in preparation for flow control over run.
refactor ( noclasspath ) : remove static import of enums in ctannotationimpl. java
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
modified the ` getRGBPixelImpl ` method to return a rectangle instead of a native method to enhance functionality by providing a way to retrieve pixel data
added a new method ` newPrintStream ( FileOutputStream fos, String enc ) ` to improve encoding handling for output streams based on system properties
updated the vibration duration from 1 to 25 milliseconds to improve responsiveness by allowing more time for touch events
[ test ] fix checkstyle violation in flybush module
refactor constructor parameters in WebSocketClient for consistency to improve code readability and maintainability
simonstewart : move i18n test to a different directory
improve error reporting in sharedgraphbuilderphase
added restoreAuthSystemState ( ) method call in XmlWorkflowServiceIT. java to ensure proper management of authentication system states
added a lowercase comparator to the CoNLLUFeatures class to ensure consistent ordering of features based on case sensitivity
improve error message when there be no source file
danielwagnerhall : fixing test failure on opera
added validation to check the length of keys in HighestKvno. java to ensure that the count of keys does not exceed the expected
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by logging warnings when only Huge objects BTrees with 1 record
[ beam - 8470 ] use writeresult. in ( beam - 8470 )
updated the XMLRootElement name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added an ApiImplicitParam annotation in Process
added a new file TestMultiANewArray. java to implement a test case for creating a class with a specific class file
remove secondary storage. vm config for management server
refactor block ID handling in SyncBlockChainMsgHandler. java to improve clarity and correctness in determining block IDs
added a call to set the preview content's theme using preferences to ensure the correct theme is applied for the preview tab
added null check and closing logic for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` in ` ConnectorTimeoutTest. java ` to verify the idle timeout behavior for HTTP requests
add property dcoref. dictlist, dcoref. dictpmi and dcoref. signatures
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to
updated parameter values in JpaPagingItemReaderIntegrationTests and modified assertion message in JobLaunchingGatewayParserTests to improve clarity and accuracy of
changed log level from warn to debug for found child node with improper name to reduce log verbosity and reduce noise in logs
refactor ColorExtractionService to use getHotseatPallete ( ) method instead of updatePalette ( ) to improve code clarity and ensure
added methods for setting default data table entry and cell transformer in TypeRegistry to enhance functionality by allowing customization of table entry and cell transformations
removed assertion for newAvailableShared in AtomicRemainder. java to streamline code by eliminating unnecessary assertion
chore ( regen ) : regenerate with update copyright year ( # 4382 )
removed the ` projectGenerated ` boolean from ` ProjectGenerator ` and updated its value in ` WorkspaceAndProjectGenerator ` to streamline the project
[ java ] fix checkstyle issue in driverutils. java
added contact form functionality to the application to enhance user experience by allowing users to post contact data
guacamole - 641 : change permission to objectpermission in simpleuser.
updated RELEASE _ VERSION from 20 to 21 in IconCache. java to reflect the latest version of the code
[ drools - 7 ] fix typo in drools - kogito - kogito - kogito - kogito
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to improve
replaced manual closing of PerDocConsumer with IOUtils. closeSafely to improve resource management and avoid potential resource leaks
refactor AbstractDataChangedListener, HttpLongPollingDataChangedListener, and RuleServiceImpl classes to improve code organization and maintainability
set the click listener for the overflow button in ExpansionViewHelper to ensure the menu is shown when the overflow button is clicked
updated error messages related to null and non - null references in multiple classes to improve clarity and accuracy in error messages related to null references
ggb - 2118 fix for heuristic problem
test : move protobufferutilstest to core package
update divider position calculation in JabRefFrame. java to improve accuracy in setting divider positions based on user preferences
fix issue with crossref entry in aux file
make geoserverfeaturesource serializable ( fixes regression )
changed the variable name from extractTypes to dataTables to clarify the purpose of the variable for better understanding
fix update of meta contact's avatar when a contact be add or remove.
updated import statements from org. apache. sshd. server. command to org. apache. sshd. server. command. Command to
added a test method to clean up the audit log table post parameters by position to ensure that the audit log table is cleaned up after a specified
added a suppressWarnings annotation to the inject method in ComponentContext. java to suppress warnings and ensure type safety during bean injection
added regex patterns and modified comment line parsing logic in ACLFileParser. java to improve robustness against dependency on ` commentLine `
updated ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` and modified ` isReadable ` method to include ` FileSystemPlugin ` to
added ancestorDimensionValues to the StarTreeImpl and StarTreeNodeImpl classes to enhance the handling of dimension values during dimension splitting
added user unlock check before closing open views in multiple classes to ensure that views are only closed when the user is unlocked
changed variable name from widthStr to positionStr in Photo. java to improve clarity by using a more descriptive variable name
refactor PKIXValidator logic to improve clarity and structure to enhance maintainability and readability of the validation process
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org. apache. shenyu. integratedtest. alibaba. dubbo ` to ` org.
vpc : listnetworks don't include the domainid in the listnetworks api response
replaced ` remove ( typeFieldName ) ` with ` get ( typeFieldName ) ` in ` RuntimeTypeAdapterFactoryFunctionalTest. java ` to
make sure undo info be store for property.
replaced direct retrieval of the " sun. java2d. xrgradcache " system property with a privileged action to enhance security by ens
updated StreamCloseTest to use Awaitility's await method to improve test reliability by allowing more time for stream executions
added ` doAfterFlush ( ) ` method to ` DocFieldProcessor ` and modified conditions in ` TermVectorsConsumer ` to ensure proper handling
filter non - deprecated properties in ConfigurationMetadataGenerator. java and annotate nested properties in AbstractJpaProperties. java to improve error handling and ensure proper
updated variable declarations in BiInt2ObjectMap and Int2ObjectHashMap to use'values'instead of'capacity'and'mask '
updated HIVE _ MOVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored file renaming logic to improve
don't swallow exception in case of connection failure
added a null check for the context before creating a new SchemeAndroidIDE instance to avoid potential NullPointerExceptions when context is null
nativeimagegeneratorrunner do not unhook custom class loader
changed the return type of modifyGrantedAuthorities method from void to List in SwitchUserAuthorityChanger. java and updated authority handling in Switch
refactor ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and create new ` JaxrsSpringIntegrationTest `
add support for setquerytimeout ( ) method in hikariconfiguration.
added DataProviders for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest. java to enhance testing capabilities for substring operations
replaced ` eventWriter. close ( ) ` with ` delegateEventWriter. close ( ) ` in ` StaxEventItemWriter ` and
added support for MariaDB sequences in CreateSequenceGenerator to ensure compatibility with newer database versions
removed unnecessary concatenation operators in MappedResizeableBuffer, UnsafeBuffer, and CompilerUtil to improve code readability and maintain consistency in formatting
updated import statements and set ServerMetrics for TableDataManagerProvider in multiple test classes to ensure consistent server metrics across test cases
updated the condition to check for " enableMFLNExtension " in SSLExtension. java to ensure compatibility with additional configuration requirements
updated the generic type of the iterator in ObjectHashSet and added tests for string representation in ObjectHashSetIntegerTest to improve type safety and ensure proper
updated character count from 22 to 23 in Compose. java and TweetFragment. java to ensure the character count accurately reflects the
[ kairosdb ] add ttl to data point write buffer
modified the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and updated related logic to enhance user experience by
added method to get terraing at a cell coordinate in terraingrid.
added default value printing functionality in Pretty. java and created a new class T6665791. java with a Java compiler test to enhance
added error handling for missing QuestEncryptionKeys. json file to improve robustness by logging an error when the file is not found
modified the return statement to check if the HTTP transport is not pushed to ensure that the operation only proceeds when the push feature is not
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method from blockCapsule to streamline the code by eliminating unnecessary method calls
modified return logic in FileSystemView. java and added security checks in Win32ShellFolder2. java to improve robustness of path retrieval and
updated row height retrieval and conditions in ColumnText. java and renamed copyContent method in PdfPRow. java to improve accuracy of row height
added a SparseArray to manage the insertion and deletion of notes in the ListFragment to improve performance and maintainability of the code
[ fix # 701830 ] uploadbackupdata don't persist feedback question
added a null check for the data object in bug8024061. java to ensure that the method returns a non - null data to
no effective change - remove unused statementdelegate interface
refactor padding handling in AppWidgetResizeFrame and Launcher classes to improve consistency and maintainability of padding calculations
refactor method handle initialization into a static block in NashornBeansLinker. java to improve code readability and maintainability
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
rename the variable ` latch ` to ` goAwayLatch ` and update related assertions to improve clarity and accuracy in waiting for idle timeouts
replaced calls to ` getFailure ( ). getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest. java `
replaced calls to ` Workbook. currentBook. set ( ) ` with ` Workbook. currentBook = book ` across multiple classes to
modified the ` vote ` method in ` ContactSecurityVoter ` to support different object types to ensure that only valid object types are accepted to
removed unused imports from DataLoader. java to clean up the code and improve maintainability
added functionality to track the number of affected rows in the update log to improve user experience by providing detailed information on the affected rows
mow - 388 : fix margin for gwt backend
set default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration to ensure the application defaults to 60 fps
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog to ensure proper tracking and releposal of the current transaction
replaced DefaultWebSocketFrame with ChannelFutureListener in DefaultHttpServer to ensure proper handling of WebSocket frame closures
updated ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` and added an ` OnStateMachineError `
refactor SettingsActivity to use a dedicated method for setting the list background to improve code readability and maintainability by encapsulating background color logic
updated StringUtils import from commons. lang3 to openhab. core. util. StringUtils and added null check for'line'variable to
added a method ` accumulate ` to ` JavaUserDefinedAggFunctions ` to calculate the sum and count of a user - defined aggregate
nifi - 2693 : fix typo in javadoc of put and replicationsink
refactor VALID _ CACHE _ SET to REGEXP _ CACHE to improve performance by reusing compiled regexps
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the game thread state
added a login method in DigestAuthenticator to check the realm of the login service to ensure that the login service is validated against the correct realm
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance code readability and maintainability while ensuring proper parameter merging
updated log messages to use ` lc ` instead of ` hiddenSingleton ` and modified the ` toString ` method in ` LoggerContext ` to improve
fix race condition in commitlog and ha service
added a condition to exclude Android O devices in PhotoViewerActivity to ensure compatibility with devices running Android O and above
updated schemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerTest. java to ensure compatibility with the latest SchemaInfoLevel
replaced ` XMLStreamWriter ` with ` BufferedOutputStream ` in ` SaveTask. java ` and removed call to ` writeEndElement ( ) ` in
replaced byte array conversion with UTF - 8 encoding in TestPayloads. java to ensure proper handling of Unicode strings with UTF - 8 encoding
fix mc - 103516 entity. get ( entity ) throw nullpointerexception
added Tomcat 10ContainerAdapter and Tomcat101ContainerAdapter to the list in ProbeConfig. java to support additional Tomcat adapters in the application
[ drools - 5 ] fix marshalling of accumulate ( ) in protobuf
refactor case handling in NowSearchTerm and SearchTermBuilder to improve code readability and maintainability
pdfbox - 4071 : remove public modifier from class pdfcloneutility
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for URL resolution to improve code clarity and maintainability by using Spring's
added a new method ` newResponseBuilder ( SolrQueryRequest req, SolrQueryResponse rsp, List < SearchComponent > components ) ` to
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start notifications
updated the ` recomputePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` to improve robustness by ensuring
refactor tokenizer and filter handling in LukeRequestHandler to improve code clarity and maintainability by consolidating tokenizer and filter functionalities
replaced null checks with ParamChecks. nullNotPermitted for'plot ','generator ', and'hotspot'arguments to improve
added verbosity parameter to ` createSubContext ` method in ` JavacStep ` to conditionally print output based on the verbosity setting
added logic to set the schema to uppercase if the database type is Oracle to ensure proper handling of database types in case of Oracle
log4j2 - 1343 : fix log4j2 - test failure
added a new file TestShrinkToOneRegion. java that includes a main method that calls System. gc ( ) to facilitate testing
replaced string split method with Splitter's on method call to improve code readability and maintainability
replaced ` utf8ToString ( ) ` with ` toString ( ) ` in ` AnalyzingInfixSuggester. java ` and added a
updated the encoding logic for local attachments in PushsaferMessageBuilder. java to ensure correct content type is used for local attachments
remove the usage of the ` showLabelStats ` command from both ` ModelExplorer ` and ` SequenceModelExplorer ` to streamline the command
pdfbox - 4071 : remove unneeded null check, a suggest by valerybokov
updated string concatenation in multiple field test classes to ensure consistency in output formatting
updated UDFRound to accept a Integer parameter and modified the evaluate method to use BigDecimal to enhance flexibility in handling different input types
replaced manual configuration retrieval for injection and inclusion in GraalJSScriptEngineFactory to improve code readability and leverage OpenHAB's ConfigParser
changed access modifiers of Test1 and Test2 classes from package - private to public to allow access to these classes from outside the Test classes
updated permission messages and variable names in PlayerEventListener. java to improve clarity and consistency in permission handling
mondrian : fix bug in conditionandor and conditioninconstantset
replaced ` doTestNormsVersusStoredFields ( new LongProducer ( ) ) ` with ` doTestNormsVersusDocValues (
added unit tests for creating boxes and circles and resetting frictions in Box2DCharacterControllerTest to improve test coverage and ensure proper
added tests for " ThreadBufferSizeExceedMemorySize " option in TestBadOptionValues. java and updated associated test cases in TestMemoryOptions.
removed duplicate check for " must be a multiple of 8 " in ObjectAlignment and Options classes to streamline code by eliminating redundancy
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs `, ` AndroidInstrumentationTest `, and ` Default
refactor methods in DocHelper class to improve code readability and maintainability
updated the constructor of acceptableThrowawayItems to accept an ArrayList of items to enhance flexibility by allowing an ArrayList of items
replaced generic type conversion for ` mh1 ` and ` mh2 ` methods with explicit type conversions to simplify type conversion and improve code clarity
no longer starving thread when a lot of fetcher thread be use
refactor Inflection class to improve code readability and maintainability
added methods to retrieve and set the locale in EvaluationContext to facilitate easier access and modification of the locale in the context
removed unused import of Plugin in SummaryPrinter. java to streamline code by eliminating unnecessary dependencies
added a break statement in DrawerActivity. java to ensure proper flow control during activity transitions
replaced ` where ` with ` query. getQueryObject ( ) ` in ` MongoQueryCreator. java ` to improve clarity and consistency in query
ww - 4068 add system property ` ` xwork. loggerfactory'' to allow customization of loggerfactory
fix adminaddpeerwithp2pdisabled acceptance test
polish ` ` livenessstatehealthindicator'' and ` ` readinessstatehealthindicator''
added concurrent management for PStore configurations in LocalPStoreProvider to improve performance by reducing contention during write operations
changed the access modifier of the deleteFiles method from package - private to private to allow access to the method from outside the class
refactor ServiceLoaderSpliterator and TypeUtil to use'service'and'error'instead of'provider'and'error'to
don't throw illegalargumentexception in javainteropreflect. setfield.
added methods to check if a toolchain is created and updated the DaemonLifecycleManagerTest to validate that the Android SDK changes correctly when the toolchain is
don't add context to engine if it's already add to the engine
abstractcheckdescriptor : use contains ( ) instead of indexOf ( )
` ` -- some - flag'' in prebuilt cxx
updated the ` updateRecentsRotation ` method in ` AbsSwipeUpHandler ` and ` RecentsView ` to improve clarity and consistency in
updated ` ItemProcessListener `, ` ItemWriteListener `, and ` ItemReader ` to use wildcard generics in type checks to improve type
added getHashAsString ( ) to the object array in AbstractBlockChain. java to ensure that the new block's hash is accurately represented
[ hotfix ] use getstorepathphysic ( ) instead of getstorepathphysic ( )
removed unnecessary try - with - resources in MicrometerMetricManager. java to simplify code and improve readability
hhh - 146643 : compaction log - addendum ( addendum )
add @ deprecate annotation to jpansi class
added system UI object checks and shell command execution in AbstractLauncherUiTest. java to ensure proper handling of keyguard status view interactions
changed logger from static to instance in SessionRegistryImpl. java to allow access to logger from outside the class
added checks for empty cookies in InMemoryCookieStore and modified test cases in NullUriCookieTest to ensure proper handling of empty store scenarios and improve
fix npe in bonsai state updater
changed the parameter type of ` getText ` from ` String ` to ` CharSequence ` in ` ITextRepository ` and ` LimitedSizeCache
@ notyetImplemented annotation in AlertsTest. java to indicate that the test is not yet implemented in Firefox
added a try - finally block to handle potential IOException during connection closure to ensure proper resource management and prevent potential resource leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` across multiple files to clarify the purpose of
added synchronization to the heartbeatExecutorService initialization to ensure thread safety during heartbeat operations
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced ` wrapWithTracingAndCancellation ` method
added a method ` updateFirstLineShowing ( ) ` in ` TextArea. java ` to update the text area's bounds for better user
added configuration properties for various Hadoop configurations in TestInformationSchemaWithPrivilege. java to ensure proper directory paths are used for MapReduce operations
refactor graphics configuration retrieval logic in Component. java to improve clarity and efficiency in obtaining the graphics configuration
tika - 3952 -- allow oom to be use in legacy mode
camel - core - pipeline : doprocess ( exchange, callback, index ) - > doprocess ( exchange, callback, index ) - >
refactor PrintTagList to use the parser's basic category and improve error handling to enhance the parser's ability to parse and display basic categories
updated the method call from ` getFullyQualifiedName ( ) ` to ` toString ( ) ` in ` InsertDeParser. java ` and added
http : / / issues. apache. org / jira / browse / amq - 4237 - fix test case
[ java ] use awaitleadermemberid ( ) instead of awaitleadermemberid ( )
updated arc calculation and outer assignment in LineBorder. java to improve accuracy in rounded rectangle calculations
added a null and empty check for galleryImages in PostGalleryTypeImageRecyclerViewAdapter. java to ensure robustness by preventing potential NullPointerExceptions
updated the DEPLOYMENT _ ID column in the StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator classes to ensure proper handling of
pdfbox - 4071 : fix typo in usage message
removed the ` false ` parameter from the ` canUseIndex ` method across multiple classes to simplify the method signature and improve code clarity
added support for managing provisional engines in QuickfixjComponent to enhance engine management by allowing users to start or stop QuickfixjEngines
added support for display zoom control in RoboWebSettings to enhance user experience by allowing customization of zoom settings
add corporea block to corporea spark and corporea slab and corporea slab ( #
refactor connection handling in ConnectionFactory to improve code maintainability and readability
added ` EnableDisableMenuItems ( ) ` method to ` GpsMainActivity ` to enable menu items based on user settings to improve user experience
updated message strings for empty lists in ExtendedListFragment to clarify the purpose of the list alongside server search and favorites
hhh - 146131 - add @ serviceregistry to @ entitytests
added auto - resizing mode for the table in MotorMountConfigurationPanel and modified the constructor of MotorMountConfigurationPanel to ensure proper UI
replace ` System. lineSeparator ( ) ` with ` System. getProperty ( " line. separator " ) ` in ` StringJoiner.
added getter and setter methods for creator and subject properties in POIXMLProperties to facilitate access and modification of POIXML properties
removed unnecessary whitespace in the doStop method call to improve code readability and maintain consistency
[ java ] don't try to read cnc file if it's empty.
replaced instances of ` MarkedFoo ` with ` FooCommand ` in the ` UnsatisfiedTypeBounds ` interface to improve clarity and consistency in
added support for Jmod files in ClassFileSourceImpl. java to enhance functionality for processing jmod files
updated TreeBackedElement and TreeBackedPackageElement to remove PostEnterCanonicalizer parameter and improve null safety to enhance code robustness by
replace ` setClientId ` with ` PublicTokenRequest ` in ` Saml2TokenGranterTest ` and ` UserTokenGran
updated the method call from ` array. get ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor. java ` to ensure
added sync calls in ZKAssign and ZooKeeperWatcher classes to ensure consistent synchronization between nodes
add check for egl _ no _ context in glutil. getcurrentcontext ( )
[ drools - 2852 ] add test case for ruleflowgroup deactivation
added a return statement in HystrixDashboardConfiguration. java to ensure proper flow control before proceeding
removed exception handling for PipeNotExistException in DropPipeProcedure. java and added exception handling in IoTDBPipeIT. java to improve robust
fix clientqueuerdisruptiontest
refactor : use defaultjavaprettyprinter in ctreferenceimpl. getsignature ( )
changed the access modifier of validateInstance method from public to protected to allow subclasses to access and override the validateInstance method
added LUCENE - 6930 : Decouples GeoPointField from NumericType by using a custom GeoPointTokenStream and TermEnum to
added a new class ` FakeBuildable ` and modified ` OnDiskBuildInfoTest ` to use it to facilitate testing of the
fix npe in guiingameforge and universalbucket
corrected the spelling of " rule path " to " rule timeseries " in TSParser. java and SQLParserTest. java to ensure consistency
added a check to return 0 if the velocity is less than an EPSILON to ensure that the method handles invalid velocity values gracefully
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage ` in ` GcsPinotFS. java ` to improve
removed redundant call to blockCloseVertxByName in TestHighwayTransport. java to streamline code by eliminating redundancy
support for postgres history view ( e. g. postgres )
updated the expected value in the clustering engine check from 2 to 3 to ensure the test accurately reflects the expected behavior of the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest. java to temporarily skip tests that need to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand. java ` and added a new ` ParserStateObject
updated objectQuotingStrategy initialization in ChangeSet. java and added checks in DatabaseChangeLog. java to ensure proper handling of object quoting strategy
replace MetainfoParser. parse with MetainfoParser. fromXmlStream in SliderAppsViewControllerImpl. java to improve compatibility with
deleted the CsrfControllerAdvice. java file to remove unused code
updated string concatenation logic in AntCompiler. java to use quotePathList method to ensure consistent path formatting across different operating systems
added scrim animation functionality to the Launcher and AllAppsDrawable classes to enhance user experience by providing smoother transitions when the screen is off
updated the range check in ` TypeInferenceUtils ` and modified test cases in ` TypeInferenceUtilsTest ` to ensure accurate parsing of integer values
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added validation for path prefixes in WindowsPathParser and updated test cases in PathOps to ensure proper handling of path types and improve robustness against
modified multicast socket creation in Promiscuous. java to simplify the code and improve readability
updated the closing sequence for the writer and query in TestWildcard. java to ensure proper resource management and prevent potential memory leaks
replace nBits with nBits. clone ( ) in IndexColorModel. java to ensure that modifications to nBits do not affect the original
changed access modifier of ` deriveCollectorName ` from private to protected and added assertions in ` TestProfilerCollector ` to allow subclassing of `
refactor type hint handling in MappingMongoConverter to improve clarity and maintainability of the code
added PerfStatsCollector to measure the creation of a proxy factory to improve performance tracking for proxy factories
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine. java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the exception as a parameter to improve error reporting by providing more context about exceptions
refactor reinflateWidgetsIfNecessary ( ) to improve clarity and maintainability of widget inflation logic
added a new file ` DeleteInsideFileDialogTest. java ` that attempts to delete a file using the right click popup menu to ensure that the
don't auto - flush when renderable be set to false
add test case for upload and update student profile picture
added methods and variables to ignore tests based on the " onlyrun " and " method " system properties to improve test clarity by distinguishing between
removed the ` pointer ` parameter from the ` fling ` method in ` ScrollPane. java ` to simplify the method signature and focus on
updated QueryDslJpaRepository to handle null pageable cases to ensure proper handling of null values and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] add memorymanager. computememorysize ( double fraction )
increase test timeout to avoid intermittent failure
refactor SnowballAnalyzer to improve code readability to enhance maintainability and facilitate future updates
update previousIndex and previousBatch initialization in StreamingAggTemplate. java to ensure proper indexing and prevent potential null pointer exceptions
throw an error if a plugin don't require a receiver
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to provide a way to
updated debug and info log messages to reflect " fully played " instead of " watched " to improve clarity and accuracy in log messages regarding file playback
refactor InjectorProxy methods to use newInstance instead of setAccessable to improve flexibility and maintainability of the code
[ hotfix ] [ stream ] fix resource leak in flinkstreamingcreatefunction
added unit tests for various SQL statements in various classes to ensure correct parsing and deparsing of SQL statements
changed return value from null to an empty list to ensure that the method returns an empty list instead of null
updated the expected output format in NamedSetTest. java to improve clarity and accuracy of test results
added a new flag for websocketReconnect and modified WebSocket connection logic to handle disconnection scenarios and improve error handling during WebSocket connections
replaced calls to ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI
from from
added functionality to disable PMS configuration in FormatRecognitionTest to ensure compatibility with recent media formats
bug fix : create ovddisk templates fail if the template format = ov
updated import statements and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests. java to improve code readability and align with JUnit4 testing practices
added @ Override annotations in CentralAuthenticationServiceImpl, RemoteCentralAuthenticationService, and NoOpLockingStrategy classes to ensure proper method overriding and improve code
modified SQL statements in AppendOnlySchemaIT. java for consistency and clarity to enhance code readability and maintainability by standardizing column names
added a check to ensure deletedDocs count matches the expected document count in SegmentReader. java to improve error handling for mismatched document counts
add logtrace and logexception to sip communicator jain sip logger.
updated version from 0.19 to 0.9 in FilamentFactory. java to ensure correct handling of staves with no starting barline
set the handleFileUploads property to true in VertxPlatformHttpServerConfiguration and updated its value in VertxPlatformHttpEngineTest to ensure
added a test case to verify that the CSRF protection matcher allowed methods as case - insensitive to ensure that the CSRF protection matcher correctly handles cases where
make hotspotobjectconstantimpl. fields non - static
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming
[ beam - 8470 ] add watermark to filesystems. match ( element, time )
fix npe in sqmqmctesstatement. copy ( context )
added import statement for ResultSetMetaData in QueryCompilerTest. java to enable retrieval of ResultSetMetaData for improved data handling
updated the library command from " -- out % s " to " -- root % s " in JsLibrary. java to ensure the correct root
updated the angle range in the BasicSlider from 180 degree to 180 degree in RailButtonConfig. java to improve the responsiveness of the
fix a crash when try to save a block of type ` ` save''.
added expressionLanguageSupported ( true ) to KerberosProperties. java to enable support for expression language in Kerberos configuration
removed null check for remoteMountPointComponent before setting its scale to simplify the code and improve performance by eliminating unnecessary checks
updated the ` setupViews ` method to accept a ` ScrimView ` parameter and adjusted animation parameters to improve animation responsiveness and performance
[ log4j2 - 1343 ] add an option to enable periodic materialization.
added value attribute to protocolparameter in list.
add unit test for httpservletresponse. gethead ( )
add ` ` bumped : yes'' to checkrouteranswer
added " Content - Type " header to " Content - Type " in SwitchToPostInterceptor and SearchRequestUnitTest to ensure proper handling of content
refactor EmbeddedClientConnector to improve code readability to enhance maintainability and facilitate future updates
replaced SQLFeatureNotSupportedException with a warning log message in PhoenixResultSet. java to improve error handling and provide clearer feedback on ignoring setFetchSize
added multiple instances of AndroidNet in AndroidDaydream. java to ensure proper initialization of AndroidNet instances
[ sparc ] fix wrong variable name in log message
when request a deposit address in kraken , the address be create if do n ' t exist but we do n ' t force to create more than one
hbase - 25827 fix javadoc warning in tablemapreduceutil
added a boolean flag ` inflationFailed ` in ` DesignerActivity ` and modified ` root ` to be final in ` XMLLayoutInflater ` to
refactor PushbackInputStream class to improve code readability and maintainability
make loweringtool base class abstract and use schedulephase. containslowerable
updated message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter. java
makefile ( makefiles )
updated the method to use MultiFields for retrieving deleted documents to improve compatibility with multi - field data handling
updated refresh flags in SimpleBatchNode to include RF _ TRANSFORM to ensure proper handling of refresh states during batch processing
do not insert safepoints if cfunction be uninterruptible
added callback for window size change notifications in LwjglWindow to ensure proper handling of window size changes
updated translation calculations and animation effects in LauncherAppTransitionManagerImpl. java to improve animation accuracy and performance during transitions
replaced NodeLiteralNode with NullLiteralNode throughout the codebase
added methods to set file and output lengths in ` CompoundFileWriter `, ` FSDirectory `, and ` IndexOutput ` classes to improve file
updated AndroidNdkScriptGenerator and AntScriptGenerator to include memcpy _ wrap. c and modified imports in LwjglDebugStarter
camel - aws2 - s3 : use sourcebucket ( ) and sourcekey ( ) instead of copysource ( )
added support for wildcard role permissions in RuleBasedAuthorizationPlugin and updated test cases accordingly to enhance security by allowing only " * " permissions
refactor ZookeeperClientServerRegisterRepository to improve null and empty path handling to enhance robustness by preventing null or empty paths
renamed methods and variables related to deep stubs in ReturnsDeepStubs. java to improve clarity and consistency in naming conventions
updated getCallValue ( ) method to return an empty string if the size of the call value is zero to improve robustness by handling cases where
bibentry : improve debug message for date parse failure
modified the ` mapPBEAlgorithmToOID ` method to include ` throws NoSuchAlgorithmException ` and updated the algorithm retrieval method to improve error handling
renamed variable ` length ` to ` inputLength ` and updated related conditions in ` TIFFReader. java ` to improve clarity and consistency in
added validation for job parameters in CommandLineJobRunner to ensure parameters are valid and provide clearer error messages for invalid parameters
remove carriage return characters from assertions in SmtpTests and MailTests to simplify test cases by removing unnecessary carriage return characters
updated case statements in ExtendedConnectionDataSourceProxy. java to use diamond operator to improve code readability and maintainability
updated LongSequenceGenerator to use AtomicLongFieldUpdater for tracking the last sequence ID to improve thread safety and performance in sequence generation
added a new file ` Test. java ` containing a static method ` sum ( ) ` to facilitate the computation of the sum of
updated ` @ Config ` annotations to include ` maxSdk ` and changed private fields to protected in ` WifiUsabilityStatsEntryBuilder ` to
added a new Java class named Solution that implements a solution for sorting queries based on specified parameters to implement a solution that processes queries based on specified
patch by jbellis ; review by jbellis for cassandra - 1373
refactor taskbar recreation logic to use a boolean for orientation changes to improve clarity and maintainability of the code
refactor SyncFutureCache class to improve code readability and maintainability
updated the default DUBBO protocol version from " 2.0. 1 " to " 2.0. 2 " and updated the response ATTATCHMENT
pmd : fix false positive with uselessstringvalueof
added a test case for Ellipse NoseCone drag in SymmetricComponentCalcTest. java to ensure that the NoseCone
added a default value for target max type shard size in HollowProducer to ensure consistent handling of shard sizes across different components
added support for version " 5.5. 2 - cfs " and " 5.5. 2 - nocfs " in TestBackwardsCompatibility.
refactor CompilationTask class to improve code readability and maintainability
added a comment to indicate that location is not shown in test mode and modified parameters handling in DDLTask to improve test clarity and ensure correct
added a call to execute ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to ensure proper clearing of database change log tables
added versioning functionality to CallPath and updated related classes to handle null values to improve robustness by ensuring valid path and version values
updated error messages and refactored resource management in PhoenixDriver. java to improve clarity of error messages and ensure proper resource management
add exception throw to touchapp so that it don't throw unsupportedoperationexception
added test cases and modified FolderPickerActivityIT to extend AbstractIT to improve test coverage and ensure proper functionality of the FolderPickerActivity
[ gr - 17822 ] don't remove phase in compile queue.
added length check in StringHelper and a test for removing leading and ending quotes in StringHelperTest to ensure proper handling of empty strings and validate
refactor type handling in JpaQueryCreator and add a test for not containing methods in UserRepository to improve code clarity and ensure proper functionality of the
don't retry retry retry if authdurtoolong
added a call to dispatch a new P25Message instance to enhance message processing capabilities
added null checks for the WebSocket handler in WebSocketImpl. java to ensure that the WebSocket handler is set to null when the socket is closed
[ ds - 3892 ] fix discoveryit to work with claim and pool task.
updated padding calculations in AppWidgetResizeFrame and Launcher classes to ensure consistent padding across widgets
added methods to hide all apps and close overlays in TaskbarUIController and TaskbarAllAppsController to improve user experience by ensuring
removed the synchronized modifier from the launch method and replaced Thread. sleep ( ) with launcher. join ( ) to simplify the method signature and improve
updated the calculation of the mouse position in JavaSEPort. java to ensure correct positioning of the zoom level relative to the canvas
replaced notificationManager . notify with startForeground for handling upload notifications to improve user experience by ensuring uploads are run as foreground services
fixed bug 1362372 - excessivepubliccount no long report false positive for static final variable
hbase - 19748 addendum set hbase. client. retries. number to hbase. client. retries. number
change log level from info to debug in TransactionalMessageServiceImpl. java to reduce log verbosity and improve performance during rollback operations
added error handling for FileNotFoundException and changed logging level from debug to trace in ResourceUtils and AbstractCipherExecutor to improve robustness by providing clearer
added a new class ` BittrexTickersResponse ` and updated ` Bittrex ` and ` BittrexDataServiceRaw ` to
refactor enumConstants retrieval to use enumType directly to improve code clarity and reduce potential ClassCastExceptions
refactor session registration methods to accept an object instead of a class to improve flexibility in session management
updated character encoding in FileUtils. java to improve accuracy in character representation
added stylesheet handling in ResourceService and updated related methods to improve resource management and ensure proper stylesheet retrieval
added a call to clearIndex ( ) in TestFiltering. java to ensure that the index is cleared before further operations
changed method call from " getAddress " to " PointerParameterStrategy. class " in X86MethodGenerator. java to align method signature with the
updated conditional check for MariaDB and CockroachDatabase in CreateSequenceGenerator. java to ensure compatibility with CockroachDatabase
removed unnecessary check for " java. lang. String " in ObjectStreamClass. java to simplify the condition for better readability and maintainability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library. java ` and added a new ` SymbolNotFoundError ` class to
updated BinaryResponseWriter to conditionally use SolrDocument based on returnFields to improve flexibility in document retrieval based on specified criteria
added handling for PING and PONG cases in WebSocketImplBase and implemented a test for pausing WebSockets to ensure proper WebSocket state management and
added a " - " to the NON _ IDENT _ ESCAPES string in RegExpScanner. java to ensure proper handling of special characters in
add cache option for authoritative dns server
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to ensure that MessagingTracing class is only included when MessagingTracing is present
mondrian : fix test failure on db2
updated import statements in multiple Java files to streamline dependencies and improve code clarity
added handling for the'/'character in XMLLightweightParser to ensure proper handling of file paths in lightweight parsing
removed the setVisibility ( GONE ) call from TouchCharInput. java to streamline the user interface by removing unnecessary visibility settings
added null check for getCurrentUser ( ) in Group. java to avoid potential NullPointerException when accessing getCurrentUser ( )
modified the slot setting logic in JSObjectLinker. java to handle cases where the index is greater than - 1 to improve robustness by ens
refactor ` DefaultUniqueTicketIdGenerator ` to remove the ` suffix ` parameter and initialize ` randomStringGenerator ` with a default suffix to simplify
added a @ Deprecated annotation to SecurityConfig. java to indicate that the class is outdated and should no longer be used
added ` @ Deprecated ( forRemoval = true, since = " TODO " ) ` to multiple Java files to indicate that these classes are outdated
deleted the JoglDebugAdaptor. java file and replaced it with GuiceJumbJoglDebug. java to streamline the codebase
added ` toString ` methods to ` ExtraFieldPropagation ` and corresponding test cases in ` ExtraFieldPropagationTest ` to enhance debugging capabilities by providing
added PendingIntent imports in FileDownloader and FileUploader classes to utilize PendingIntent for notification updates
refactor the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to include a ` set ( ) ` method to improve code clarity and
refactor DateTimeFormatter class to improve code readability and maintainability
removed unnecessary try - catch block for ClassNotFoundException in WToolkit. java to simplify code and improve readability
added null and empty check for administrator credential in KerberosOperationHandler. java to ensure proper handling of null or empty principal values during authentication
added a constant for MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated width calculation based on device profile conditions to
added rendering methods in PSurfaceJOGL. java to ensure proper rendering of the sketch window with the correct color
refactor Hashing class implementation to improve performance and maintainability of the hashing algorithm
modified the accept method to accept a file path instead of a string to enhance file validation by distinguishing between zip files
updated UserInfoActivity to include user information strings instead of drawable resources to enhance user experience by providing localized information
removed null check for type in J. java to streamline code by eliminating unnecessary null checks
increased ACTIVITY _ START _ DELAY from 500ms to 800ms to improve the responsiveness of activity transitions
updated paths in SolrJettyTestBase and JettyWebappTest to use constants from SolrJettyTestBase to improve code maintainability and
refactor diameter assignment and clear selection in ThrustCurveMotorSelectionPanel. java to improve code clarity and ensure proper handling of selected motor
added BufferUtil import and called clearToFill method in ByteBufferPool. java to enhance buffer handling capabilities for improved performance
fix npe in notification rule create via rest api
updated references from " authorization. ldap " to " authentication " in LDAP configuration to align the configuration with the new authentication framework
fix for intermittently fail test
[ hotfix ] fix flaky testbulkslotallocationfulfilledwithnewslot
updated connection handling in PingService and ServerInfoService to improve error handling for connection issues
refactor CompositeHandlerAdapter class to improve code readability and maintainability
refactor Quartz2Adapter class to improve code readability and maintainability
added error handling for method execution in SulongLibrary. java to improve robustness by catching potential IllegalStateExceptions
updated Spring Security version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improvements
updated NameResolver methods to accept Args as a parameter and modified DiscoveryClientNameResolver to use an argument for synchronization to enhance flexibility in managing service
updated JavacParser to handle non - empty annotations and added a new TestAnnotatedAnonClass class to improve error handling and ensure correct position calculations
added " com. sun. naming. internal. " to CheckPackageAccess. java to enhance access control for internal classes
changed the default value of strict from false to true to enable strict mode for improved data handling
modified the ` readPartition ` method to include an additional boolean parameter ` isExhausted ` to enhance the functionality of the ` OfflineSorter
refactor ActionResetingPool class to improve code readability and maintainability
updated the method to check if the light state is in XY mode to improve accuracy in determining if the light state is in XY mode
refactor folder creation logic to use a target cell array to improve accuracy and maintainability of the code
added import for FileDisplayActivity and removed the showLoadingDialog ( ) method from FileDetailFragment and OCFileListFragment to streamline loading handling
added a null check for the uigestureFile before loading logs to avoid potential NullPointerExceptions when the uigestureFile is missing
updated method calls to use Locale. getDefault ( ) in FieldNamingPolicyTest to ensure consistent behavior across different locales
added listener functionality to the result in XmlSuite. java to ensure proper management of listener states during test execution
added a new property ` loadWithNewGlobal ` and modified method handles in ` Global. java ` to enhance functionality by allowing dynamic loading of
added JSON string conversion methods to ` StarTreeIndexSpec ` and updated test assertions in ` TableConfigTest ` to improve JSON handling and ensure
added import statement for ObjectPostProcessorConfiguration in multiple configuration classes to ensure proper handling of object post - processing in security configurations
replaced string literals " " with'"'in multiple files to ensure consistency in string handling across different operating systems
fix npe when in ( null, npe )
added import for FieldCache and modified commit ( ) and purgeFieldCache ( ) methods in TestDistributedSearch. java to ensure proper handling of
added test case for message boundary event on subprocess and subprocess
updated method signatures to include the ` target ` parameter in ` resolveInterfaceOrVirtualCall ` and ` resolveStaticCall ` to enhance method resolution
http : / / issues. apache. org / jira / browse / amq - 2576 - add messagegrouphashbucketcount to policy
added slot ID constants and refactored slot assignment logic in Secmod. java to improve code readability and maintainability by using named constants
added alignment support to the add method in Layout. java and modified the startRenderering method in GdxRenderer. java to improve layout handling and
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added import statements and a conditional check for class equality in JDK13Services. java to ensure that only relevant classes are processed
added a check to avoid adding duplicate entries in keywordToReference to ensure that duplicate entries do not result in duplicates
camel - core - optimize multicast eip to reduce stack frame
removed unused methods from SegToken and SegGraph classes to streamline code and improve maintainability
fix # 644 ( telegraf escape ) ( # 644 )
[ java ] : add udp port to member package.
rename operatormulticast to operationmulticast to avoid confusion
increased the send timeout duration from 1 to 100 milliseconds in EventBusTracerTestBase. java to improve test reliability by allowing more time for
added a try - finally block around the node start operation to ensure proper resource management and prevent potential resource leaks
hhh - 117483 - hhh - 11755 don't clear cache event listener registry when session be destroy
danielwagnerhall : fixing test that fail on window
add ivalueutilstest. test tuples and mapoftndarray ( # 186 )
added a TaskStackChangeListener to clear the visible flag when the pinned stack animation starts
pdfbox - 4071 : improve performance of defaultsplitcharacter. checkdatepattern
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - cxfr
refactor animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added logging for duration calculations in LauncherAnimationRunner to improve debugging and debugging capabilities during animations
added a conditional check for BailoutOnException in C1XCompilation. java and introduced a constant in C1XOptions. java
initialized signup and passwd variables to null in Links. java and updated assertions in IdentityZoneConfigurationBootstrapTests. java to ensure default values are set
[ hotfix ] rename slotprofile. getpreviousexecutiongraphallocations to getreservedallocations
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and updated related method calls to improve clarity and consistency in
added NoDataContainer to GeoTiffReader and updated test cases accordingly to ensure that the NoDataContainer behaves as expected in the rendering process
sulong : improve error message when exception source section be null.
replaced ` out. toString ( ) ` with ` new String ( out. toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
replace blockUntilConnected ( ) with CountDownLatch to manage connection state changes to improve responsiveness by waiting for connected connections
refactor ArrayTypeHandler to handle null values safely to improve robustness by preventing potential NullPointerExceptions
replaced the deprecated RegexpTunnel class with a direct access to the compiled program using reflection to simplify the codebase and improve maintainability by eliminating
updated method call to use Application. class instead of null to ensure compatibility with the new application configuration
[ drools - 10 ] avoid npe on mutablelistener global in executable model
replaced Preconditions with TransactionUtil methods for asset name and description validation to improve error handling and ensure valid asset inputs
don't copy algos in copypaste if the parent algorithm be the same
updated label and property properties in LGWebOS classes and modified status messages in LGWebOSHandler to improve clarity of status messages and
updated node configuration methods to include seeds, active, and trust nodes to ensure that only relevant nodes are included in the configuration
added assertion messages and modified thread handling in BaseTokenStreamTestCase. java to improve test clarity and ensure proper thread management during analysis
log4j2 - 1342 : fix bug in timebasedtriggeringpolicy.
added methods to perform item click and find item containing text in ShadowAdapterView and ShadowListView to enhance functionality for item interactions in the ShadowAdapter
pdfbox - 4892 : avoid classcastexception, a suggest by valerybokov
graphdecoder : dump dump after pe method scope
refactor ` HttpSessionDestroyedEvent ` to use ` getSession ( ) ` for attribute retrieval and add unit tests for ` HttpSessionDestroyedEvent ` to improve
added a test to verify that the service name in zipkin is set to the manually provided one to ensure that the service name is correctly set
added logging for SpoolMode in JavaInMemoryFileManager and JavacToJarStepFactory to improve visibility into the Spool mode during processing
rename SeparatedProjectGenerator to SeparatedProjectsGenerator across multiple files to improve clarity and consistency in naming
increase timeout in clientmultimaplocktest to avoid flakiness
updated the ` ConfluentSchemaRegistryDeserializerProvider ` to include a ` DEFAULT _ CACHE _ CAPACITY ` parameter to enhance the configuration options for
replaced JCheckBox for " Remind me later " with a new " CheckUpdates " checkbox to improve user experience by providing a clear and informative
added methods for checking weak key and value strength in NodeGenerator. java to improve clarity and maintainability of the generated code
hhh - 117793 : cascadingactions don't throw transient valueexception for non - hibernate proxy
added constants for PROTO _ PROPERTY _ NAME and SETPROTOCHECK in ScriptObject. java to improve code clarity and maintainability by central
changed the default read mode from " heap " to " mmap " in CommonConstants. java and added logging in ImmutableSegmentLoader. java to
added ByteArrayTemplate import and modified ArrayTemplateBuilder to return the instance of byte class to enhance functionality for byte class handling in array templates
added a new ` Hipchat ` property and created a new ` CasSamlSPHipchatConfiguration ` class to enable integration
changed the type of ` commandRegistryUrls ` from ` List < URL > ` to ` Set < URL > ` and updated resource retrieval logic
updated warning messages to include context information and added debug logging to improve clarity of warning messages and enhance debugging capabilities
camel - 16400 : camel - sftp - allow to configure whether to log in or not.
http : / / issues. apache. org / jira / browse / amq - 4237 - allow lazy - create transaction manager without transaction
cloudstack upgrade : fix typo in vmwareresource
refactor Timers class to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter. java ` to
removed deprecated string constants from UAX29URLEmailTokenizer to streamline code and improve maintainability
removed Map < Object, Object > from ScriptObject class and replaced it with ScriptObject in ContextTest to simplify the class and improve type safety
refactor EventBusMetrics class to improve code readability and maintainability
[ ds - 3892 ] add i18nutil. getepersonlocale ( )
updated JaversTransactionalDecorator to implement InitializingBean and modified ensureSchema method to ensure proper initialization of the schema after properties set
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify the code and improve readability
added server initialization in ScopedHandlerTest to ensure proper server setup for test cases
add calltimeoutexception constructor to calltimeoutexception and calltimeoutexception constructor
sec - 1648 : fix npe in restloginprocessingfilter when username or password be empty
updated permission check from " " to " * " in CommandMap. java to ensure proper permission validation for account operations
rename ` encoding ` to ` sourceCharset ` in ` AbstractCompiler ` and ` ICompiler ` classes to improve clarity and consistency in variable naming
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and ` TerminalBridge `
refactor simulation handling in GeneralOptimizationDialog. java to use final variables and improve code readability and maintainability
camel - 16400 : add support for contextreloadenabled option in camel - core
updated log level settings from DEBUG to INFO in CommonTestUtils. java to provide more detailed logging information for debugging purposes
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code readability and maintainability
added a conditional check for non - markSupported methods in RequestBody. java and created a corresponding test in RequestBodyTest. java to ensure proper handling
added a check for the enabled state of embedded settings in EmbeddedNeo4jServer. java and improved filtering in DefaultBeanContext.
add ` ` prefab : player'' to movement debug command
modified the random method to include a half length total weight parameter and adjusted related logic accordingly to improve the accuracy of random number generation based on weights
updated error messages and method names in GsonParser. java and MetricsResourceTest. java to improve clarity and consistency in error handling for invalid timestamps
added comments to the " gcmsort " and " gcmdir " parameters in ApacheHttpClientMediaWikiApi. java to clarify sorting behavior
in the case where a share session don't have a transaction
[ iotdb - 4523 ] pipe task coordinator can be acquire by the same thread ( # 245 )
added a conditional check for the " robolectric. usePreinstrumentedJars " system property before creating DependencyJar instances to enhance flexibility in
removed unnecessary whitespace in ExecDriver. java to improve code readability and maintain consistency
added checks for default and required fields in IndexSchema. java and introduced a corresponding test case in BadIndexSchemaTest. java to ensure that
don't randomlyread repair on digest mismatch. patch by jbellis
replaced ImmutableSortedSet with Iterables for adding system include roots in PrebuiltCxxLibrary. java and added a test for includes in PrebuiltC
updated ` AdaptableX509CertSelector ` to initialize ` startDate `, ` endDate `, ` isSKIDSensitive `, and `
log4j2 - 1343 use abstractappender. parsestring ( string, int ) instead of try / catch
deprecate guesscreenscreenevent # getcurrentscreen ( ) in guesscreenevent # getcurrentscreen ( )
added methods to addToCategories, removeFromCategories, and addToNewCategories to manage category additions and removal from a list to improve category management functionality and
# 2693 - enh : add servercachetype parameter to cache method
refactor RocketComponent to use enhanced for - each loops for mass, CG, and CDOverriddenBy to improve code readability and maintainability
fixed memory leak in java diagnostic provider
refactor Task class to use a Supplier for task execution to improve code reusability and reduce boilerplate code
added a mutex to the executor in WanReplicationServiceImpl. java to ensure thread safety when shutting down the executor
added null checks for ` tPartition ` and ` table ` methods in ` Partition. java ` and ` DDLSemanticAnalyzer. java
refactor code to use lambda expressions for improved readability to enhance code clarity and maintainability
added a new file ` FilesTest. java ` that tests the ` delete ` method in ` Files ` to ensure that the ` delete `
removed try - catch blocks around socket closure in ServerSocketAdaptor and SocketAdaptor to simplify exception handling and improve code readability
updated class name check from " java. lang. System " to " Logger. class. getName ( ) " in SSLLogger. java to
replaced usage of ` this. currentWorkingDirectoryList. clear ( ) ` with ` addWorkingDir ( f. toString ( ) ) ` to
added null check for variable'cn'in ItemInfo. java and set insets in Workspace. java to ensure proper handling of null values and
changed the access modifier of the String variable from public to private to restrict access to the String variable for better encapsulation
updated Java URL patterns in SimplePostTool. java to ensure consistency in URL formatting
apps - 2184 fix bug in algebraitem. issymbolicdiffers ( )
replaced ShutdownThread registration with a deregistered ShutdownThread in JavaxWebSocketClientContainerProvider to improve resource management and ensure proper shutdown
updated conditional logic to check for both null and open application presence to improve the logic to handle cases where the application is not present
ensure webapplicationcontext be clean up after each test
added search functionality and improved error handling in RemoteBrowseHandler. java to enhance user experience by providing dynamic search results
added a line to hide the neutral button in SetupEncryptionDialogFragment to improve user experience by hiding the neutral button
add count ( distinct i ) to count ( distinct i )
updated SQL statements to use single quotes for column and part keys to ensure compatibility with SQL standards and prevent SQL injection vulnerabilities
added exception handling for OAuth2 exceptions in CheckTokenEndpoint. java to improve error reporting for OAuth2 exceptions
updated method names in various classes for consistency to improve code readability and maintainability
updated test cases to use parameterized type references for identity zones to improve test reliability and ensure proper handling of identity zones
updated tooltip delays in ExtractionModelFrame and DataBrowser classes and enhanced tooltip messages in SQLConsole to improve user experience by providing clearer feedback on
add support for run single test method with junit 5
changed exception handling from a HumanReadableException to a RuntimeException in WorkerShellStep. java to improve error handling by using a more general IOException
[ hotfix ] add @ experimental annotation for datastreamutils and datastreamutils
refactor StreamCepstrumSource class to improve code readability and maintainability
modified index calculation to ensure it does not exceed the size of items to prevent index out of bounds errors
updated expression type check from OrExpression to Parenthesis in CloneHelperTest. java to ensure proper type recognition for expression expressions
updated the DebugPaste class to include confirmation and requiredType options to enhance user experience by providing confirmation options for debug paste commands
use ` orElseThrow ( ) ` in endpoint management context configuration to improve error handling when no endpoint is found
ggb - 2118 fix : prevent double click in algebra view
updated GoBinaryDescription to use AbstractGoBinaryDescriptionArg instead of Arg to improve clarity and consistency in the codebase
added a null check for the " application. env " configuration in Jooby. java to ensure robustness by avoiding potential NullPointerExceptions
refactor SimpleRetryExceptionHandler to implement RetryListener instead of extending RetryListenerSupport to simplify class hierarchy and improve code maintainability
add support for decimal format in elastic meter registry ( # 498 )
refactor Contribution class to use final fields for email and author to improve code clarity and ensure immutability of email and author
refactor loop structure in JUnitFormatter to use a do - while loop to improve code readability and maintainability
refactor elements assignment logic to ensure proper handling of non - LinkedList instances to improve code clarity and prevent potential ClassCastExceptions
enhanced error messages in ` StaxEventItemReader ` to include the URL to improve clarity and debugging by providing more context on input resources
* testmulticollerarget now use pointlights instead of geometry
added null check for currentProfile before retrieving the client to avoid potential NullPointerExceptions when the currentProfile is null
replaced target. addNamespaceDeclaration ( namespace. prefix, namespace. namespaceUri ) with newElement. addNamespaceDeclaration ( namespace. prefix, namespace
added BigInteger instances for cryptographic parameters in KeyStoreManager. java to enhance security by integrating additional cryptographic parameters
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape. java ` and ` Mesh
act - 5 : fix for act - 5 and act - 5 ( act - 5 )
updated property keys from " runtime. references. strict " to " resource. loader. file. path " and " runtime. strict _ mode
updated thread verification logic in CEntryPointSnippets and VMThreads to enhance thread verification accuracy
added null check for map objects in GenericUDFMapValues. java and created a corresponding test class TestGenericUDFMapValues. java
rename " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests to improve clarity and consistency in naming conventions
added properties for oil well generation and discrepancies in the OilGenerator class to improve clarity and control over oil well
added error handling for directory deletion in ImportContext and updated file existence checks in JobQueue and ImporterIntegrationTest to improve robustness by ens
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 437 : use
removed redundant import statements in CRLDistributionPointRevocationCheckerTests. java to streamline code by eliminating redundancy
added import of ` ZipConstants64 ` in ` ZipEntry. java ` to facilitate the use of ` java. util. zip.
refactor ` newFileSystem ` methods to improve file validation logic to enhance robustness by ensuring only regular files are processed
replace JLabel width with Box. createHorizontalGlue ( ) in IfControllerPanel. java to improve layout alignment for better user experience
updated the connection creation method in FailoverUpdateURIsTest. java to ensure consistent connection setup across test cases
added Gson annotations for baseUrl, mirrorsList, repoId, and repoName in ServiceOsSpecific. java to enable proper serialization and deserialization of
add a method to delete a database entry only if the file deletion succeed.
fix a few typo in the javadoc comment.
update the buffer length calculation in AbstractAjpProcessor. java to ensure proper handling of response message boundaries
of admin console plugin should not be start / stop.
replaced the unregisterHandlers ( ) method with a direct assignment of binaryConsumer and textConsumer in WebSocketImplBase. java to streamline the handler registration
added configuration properties for device ID transformation method, enable ID table, and table log file in IoTDBDescriptor. java to enhance configuration flexibility
increased the expected number of documents in ExitableDirectoryReaderTest and introduced a new DelayingSearchComponent class to improve test coverage and ensure correct
updated the condition for mockTsp to check for null values to ensure that the expected value is not null to avoid potential null pointer exceptions
updated script creation to use ` witnessScript ` instead of ` scriptCode ` to improve clarity and consistency in script handling
added " fieldType " to the expression in IndexSchema. java to support additional field types in the schema
added a null check for valueCompleter in Completers. java and created a new OptionCompleterTest. java file to ensure completers
refactor S3Utils to streamline object listing process to improve code readability and maintainability
changed the data type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger data sets
refactor file upload logic into a separate method ` UploadFile ` to improve code readability and maintainability
removed unused imports and set the reply button alpha to 0.5 to improve code clarity and ensure proper visibility of the reply button
updated the expected remote IP format in AccessLogSupportTest. java to include the expected timestamp to ensure that the remote IP format accurately reflect
updated the file path for maryCacheFile from " testfiles - deleteme " to " tmp / testfiles - deleteme " to
remove null check for subscribers and simplify property change logic to improve code clarity and reduce potential null pointer exceptions
updated error handling in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to throw an IllegalArgumentException for missing marshaller to improve robustness
replaced printStackTrace ( ) with LogUtil. warn ( t ) in DataBrowser. java to improve error handling by logging warnings instead of stack trace
added a condition to check if the asset directory exists in development mode to ensure proper handling of static files in development mode
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend
updated the default format string from " value - tag - index " to " value - index " to improve clarity and consistency in the default format
updated hint settings in GraphHopper. java to use request for hints to improve user experience by providing hints ongoing operations
change default value of ` useNative ` from ` false ` to ` true ` in multiple Java files to ensure proper handling of native values and
rename ` DuclsSandboxTest ` to ` SandboxTest ` to improve clarity and consistency in test naming
( chore ) camel - cxf : use setexchange ( ) instead of log ( )
make forwardpropagatetree public so that it can be use by other class
updated SQL query in JDBCExample. java to include milliseconds to ensure accurate counting of milliseconds in SQL queries
improve error message when use $ { project. basedir }
refactor methods in Style. java to improve code readability and maintainability
added zoom functionality in ShareActivity to handle back navigation to enhance user experience by allowing users to zoom out of the application
added a conditional check to skip processing for deprecated fields to improve performance by avoiding unnecessary processing when deprecated fields are present
added animation effects for floating composing messages to enhance user experience by providing smoother transitions during message display
updated method reference syntax in Utils. java for consistency to improve code readability and maintainability
added Progressable parameter to various methods in Utilities and PTFRowContainer to enhance functionality by allowing progress during write operations
[ hotfix ] fix typo in log message
remove a contribution from the panelByContribution and update panel ordering and color updates to ensure that the contributions are properly removed from the panel
changed class name from HyervisorTemplateAdapter to HypervisorTemplateAdapter to improve clarity and consistency in naming conventions
added a check to set dPath based on the user's directory property to ensure that the application uses the system's user's
updated the sample rate assignment logic in DefaultAudioSink. java to ensure that the maximum supported channel count respects the specified sample rate
log4j2 - 1343 : mapfilter. filter ( mapmessage ) now return true for match
modified VerificationInOrderWithCallsTest. java file to improve test coverage and accuracy
swapped the order of parameters in setFromAxis method call to ensure proper functionality of the setFromAxis method
corrected the constant name from COLLECTION _ DELIM to COLLECTION _ DELIM to ensure consistency and accuracy in naming conventions
curatorframeworkfactory. newconnection ( ) should check that the listener be connect at start of the server.
updated the formatting logic in DocRenderer. java and added new test cases in GH5355 _ 01 and GH5355 _ 02
replaced calls to SystemProperties. getBoolean ( SUPPORT _ ONE _ HANDED _ MODE ) with a boolean variable mIsOneHandedModeSupported
added onDetachedFromWindow method to manage task execution to ensure proper resource management and prevent potential memory leaks
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors to allow users to specify a dictionary
removed redundant count increment and failure checks in ResultSetTest. java to streamline exception handling and improve code clarity
changed the default value of the message from " debug " to " " in GradleBuildService. java to improve clarity and consistency in the initialization
refactor exception handling in AbstractPhenomenaTest to use AtomicBoolean instead of AtomicReference to improve readability and maintainability of the code
refactor tooltip text handling in ComponentTree and ComponentTreeRenderer to improve code clarity and maintainability by consolidating tooltip logic
increased timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests to improve test stability by allowing more time for the zipkin server
deviantart ripper now take into account username and password
replaced an array of known Google signing keys with a single string to simplify the code and improve maintainability
updated method call from ` commonApp. solutionBusiness ` to ` commonApp. createSolutionBusiness ( ) ` to improve code clarity and ensure
added a method to notify window state changes in WWindowPeer. java to improve event handling for window state changes
added functionality to set the " emailDescription " property in EntityGroupKeyContentFormatter and TestEntityGroupKeyEmailContentFormatter to facilitate
updated the method call from ` remove ( sel ) ` to ` data. remove ( sel ) ` to ensure the method uses the correct data
updated ` getISO3Language ( ) ` method to handle empty language strings and improved error handling in ` LocaleTest. java ` to ensure
replaced direct instantiation of ChangeLogParser with a factory method to improve code readability and maintainability
added a check to return early if screen pinning is active to optimize performance by avoiding unnecessary processing when screen pinning is active
added functionality to display " No chart data available " in the chart to enhance user experience by providing clear indication of unavailable chart data
added synchronization to checkheadwritten ( ) method to ensure thread safety when accessing shared resources
don't flush chunkedinput in case of ssl
added " : scheme " header to multiple test cases in Http2TestBase and TestHttp2Section _ 8 _ 1 to improve test coverage
fixed - rlocalcachedmap. keySet ( ) and rlocalcachedmap. values ( ) and rlocalcachedmap. entrySet ( )
camel - jpa : ensure entitymanager and transactionmanager be set only when need
fixed jumpspeed not be set when fallspeed = false
added a null check for reparsedFunction in the condition to ensure proper handling of cases where reparsedFunction is null
from user
deprecate getolduploadsegmenthttpuri and getolduploadsegmenthttpuri in favor of getolduploadsegmenthttpsuri
updated the method call from ` dbCol. findOne ( ) ` to ` dbCol. findOne ( filter ) ` to ensure the tracking object
( chore ) camel - core : added unit test to assert predicate fail
added alpha clamping to the boundToRange method in RecentsView. java to ensure the correct alpha value is used for rendering
update version string formatting in ManifestReversion. java to ensure consistency in versioning format
refactor DataSyncConfiguration class to improve code readability and maintainability
added import for JavaSnippetRepository and initialized JavaSnippetRepository to ensure the Java snippet functionality is properly initialized
modified the loop structure in StarTreeRecordStoreCircularBufferImpl. java to include a loop for updating sums to improve code readability and maintain
[ java ] use chrome. storage. googleapis. com instead of code. google. com
camel - 16400 : use string. format ( string, string... ) instead of string concatenation
updated import statements from ` com. sun. syndication. feed. synd ` to ` com. rometools. rome
added content - length header handling in TransferCompletionHandler and updated NettyAsyncHttpProvider to use it to ensure proper handling of Content - Length headers
refactor Dialog class for improved readability to enhance maintainability and facilitate future updates
removed unused constructor parameters from EnhancedRuntimeException class to streamline error handling by eliminating unnecessary constructor calls
added synchronization to the SocketAppenderTest to ensure thread - safe event addition to the list
( chore ) camel - aws2 - dsl : remove unused import
updated method signatures and exception handling in ByteArray. java to ensure compatibility with JDK 8 and improve error handling
added a method to disable the input proxy in RecentsAnimationWrapper to ensure proper handling of touch events during animations
camel - 6770 : remove @ ignore from restletdomainservicetest
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify the method signature and improve code clarity
move module - info. java and module - info. java to com. hazelcast. test. modulepath
updated error messages in JavaLanguageServer. java and JavaServerConfiguration. java to include class paths and source directories to improve clarity of error messages
updated menu item case from menu _ open _ web to menu _ mute _ hashtags to accurately reflect the functionality of mute hashtags in
updated test method names and assertions in AncestorDescendantTests and HasParentNode to improve clarity and accuracy of node assertions
fix for worldeditplayer. getblocky ( ) with searchpos and pos
added a new exception for PathNotExistException in the selfCheckDataTypes method to improve error handling when measurement schemas are missing
removed unnecessary spacing in JavaCompiler. java to improve code readability and maintainability
[ hotfix ] [ table - common ] remove mailboxexecutor from abstractstreamoperatorfactory
hbase - 24523 addendum fix unauthorized settablestateinmeta / settablestate
refactor meter mapping in GatewayMetricFilterTests to use method references to improve code readability and maintainability
mondrian : fix typo in blockjunit4classrunner
use lasttimedata instead of remoteitems in kieswatcher. delete ( )
update calculation for allAppsCellWidthPx to ensure proper spacing between allAppsCellPaddingPx and allAppsCellWidthPx
[ hotfix ] [ core ] add log level to core option
replaced calls to ` doc ( ) ` with ` this. doc ( ) ` in ` BooleanScorer2. java ` to ensure proper
added a call to ` writer. forceMerge ( 1 ) ` in ` TestMultiPhraseEnum. java ` to ensure that the multi -
hhh - 147484 - make session implement java. io. closeable
refactor GetLocations class to improve code readability and maintainability
removed unnecessary stack trace printing in SchemaValidatorTask. java to streamline error handling and improve code readability
modified exception handling in Contents. java to throw an IOException instead of throwing an exception to improve error handling by ignoring unnecessary exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with older Android versions
ruby flavor : use string. subsequence instead of string. emit snippet
changed log level from warning to debug in DerbyDatabase. java and added null checks for username and password in BaseLiquibaseTask.
remove the usecaches boolean from the nio2endpoint
updated CasGeoLocationConfiguration to use Resource instead of MaxmindProperties to improve compatibility with Spring's resource management
[ fix ] instructorfeedbackresultspageuitest : fix typo
phoenix - 5957 : fix nullpointerexception in encodedcolumnsutil. useencodedqualifierslistoptimization
change visibility of several methods in ApprovalStore and ApprovalControllerService from public to package - private
added a flag ` mStartedDownload ` and a delayed execution in ` FileDownloader. java ` to prevent unintended downloads when the download
replaced the method ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in ` Abstract
updated project version from " 1.0. 11 " to " 1.0. 13 " in JFreeChartResources. java to ensure compatibility with the latest
replaced ` yield ( ) ` with ` Thread. yield ( ) ` in ` SyncThread. java ` to ensure consistent yield behavior across threads
refactor GsonBuilder class to improve code readability and maintainability
added null checks for centerGeo and circleCenters in ProverBotanasMethod. java to avoid potential NullPointerExceptions when adding circles
use -- java. espressohome instead of -- java. espressohome
doc : fix typo in doc ( # 2697 )
changed access modifiers of ` deleteSession ` and ` timeToDieInSeconds ` from protected to private to enhance encapsulation and restrict access to session properties
renamed ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to improve clarity and consistency in exception naming conventions
updated ` JoinQParserPlugin `, ` SolrIndexSearcher `, ` SolrIndexSearcher `, and ` TestJoin ` classes to improve
updated the method call to include the file parameter in FileDataStorageManager. triggerMediaScan to enhance functionality by allowing media scan to be triggered
removed conditional printing of test results and streamlined result posting logic to simplify test result processing and improve code readability
added custom G - code settings to the MainWindow class to enhance user experience by allowing customization of G - code settings
added UTF - 8 encoding to XMLWriter in AdditionalJaxbMappingProducerImpl. java to ensure proper handling of character encoding
refactor JsonElement class for improved readability to enhance maintainability and facilitate future updates
added imports and modified exception handling in TestBadConfig. java to improve test reliability by ignoring specific system properties
added a method to remove fragments and hide the action bar in GpsMainActivity to improve user experience by ensuring the action bar is removed when
added " ( " to the list of spanish tokens in TokenizerAnnotatorITest. java to ensure proper handling of whitespace in tokenization
replaced ` Range. asByteRange ( ). asByteRange ( ) ` with ` Range. Byte ` in multiple handlers to improve handling
updated gcode file and added new bounds prints in VisualizerCanvas. java and GcodeView. java to improve clarity of test files and
added support for versions " 8.4. 0 - cfs " and " 8.4. 0 - nocfs " in TestBackwardsCompatibility.
fix flaky test assertion _ sync _ with _ instanceofassertfactories _ Test. java
added a condition to check if the query execution stage is completed and the result column is set to " true " to ensure proper handling of query
add integrity check test to ensure that integrity check don't fail if there be no file
removed unused SolrClient dependency from ChaosMonkey. java to streamline code by eliminating unnecessary dependencies
don't throw npe if config file be null
rearranged whitespace in NestedRepositoryTreePanel. java to improve code readability and maintain consistency
allow extension type to be within - 128 to 127
pdfbox - 2576 : don't swallow ioexception
renamed ` pushOnShutdown ` to ` pushOnShutdown ` and updated related getter and setter methods accordingly to improve clarity and consistency in representing the
added error handling for trigger events in ReactiveStateMachineExecutor to improve error management and debugging
added a test to verify that multiple Python executables on the same path are used to ensure that the correct Python interpreter is set based on the
added a default button to the root pane in InitialAccountRegistrationFrame to ensure the user interface reflects the registration process
added support for the " hive. tez. dynamic. semijoin. reduction. for. mapjoin " configuration in HiveConf. java
updated error logging messages to include the exception as a parameter to improve error reporting by providing more context in error messages
move reflectionutils class to org. axonframework
added a listableCollector method to OidcIdTokenClaimCollector and created OidcIdTokenClaimCollectorTests to facilitate
removed the private Vector2 center declaration from Circle, Ellipse, Polygon, and Rectangle classes to streamline the code by eliminating redundancy
fix a nullpointerexception in registerandprocessbundleoperation.
refactor SslContextFactory to improve code readability to enhance maintainability and facilitate easier updates
[ ci ] change default _ max _ expectations to 5000
changed return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer error messaging for access confirmation errors
[ 3.0 ] fix classnotfoundexception when class loader be not set ( # 245 )
added a new parameter ` copyRowHeight ` and modified the ` shiftRows ` method to include a ` copyRowHeight ` parameter to enhance
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods with ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods
refactor grid translation handling in TaskViewUtils and TaskViewSimulator to improve code clarity and maintainability by centralizing translation logic
refactored assertions in Assertions. java to improve code readability and maintainability
added null check for currentDateTimeFunction in multiple database classes to avoid potential NullPointerExceptions during execution
added anonymousPath method and updated Log4jUtils to use it to improve path handling and enhance logging clarity for merged log files
added a new parameter ` remainingTimeMs ` to the ` call ` method in ` DigitalWellBeingToast ` and updated the ` TaskView `
hbase - 25836 wait for timeout when getmetaserverconnection ( ) return null
updated LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
use stateconverterutil. defaultconversion ( state, typeclass ) instead of return null
updated BidirectionalOneToOneNPlusOneTest to use ClassImportIntegrator and added new test cases for fetching posts and details from PostSummary
added a call to removeExtraEmptyScreen ( ) in Launcher and modified startSearchPageIndex initialization in LauncherModel to ensure proper handling of empty
fix for null pointer in indexedvaluemap.
updated string literals in GoogleLineChart and GooglePieChart from single quotes to double quotes to ensure consistency in string formatting across chart components
modified the calculation of waitForBatches in SendingAccountor. java to handle potential InterruptedException during batch processing to improve robustness by ensuring
added position handling in WALPrettyPrinter and updated related command - line options to enhance functionality for seeking to the current position in the file
updated the port number in the NettyTransceiver constructor from 1 to 0 to ensure the transceiver uses the correct port for error handling
added sorting of log events before generating a report to ensure that only relevant events are processed during the report generation
added a test to verify the functionality of the CSVFileLogger class to ensure that the CSV line description contains double quotes and correctly handles escaped quotes
add coref. doscore and coref. useconstituencytree to the benchmark test
don't try to connect to a remote server if it's not a remote server.
removed the @ JniImpl annotation from VM. java to streamline code by eliminating unnecessary annotations
updated configuration settings in Fetcher2. java to use Protocol. CHECK _ BLOCKING and Protocol. CHECK _ ROBOTS to improve
added a null check for the video HDR format in FFMpegVideo. java and removed multiple debug print statements in MediaInfoParser.
rename ScopingRules from " other _ package " to " other _ package2 " in AstTests. java to clarify the purpose of
fix worldborder. getdiameter ( ) when percentage be great than 99.
hbase - 24523 add getwalgroupsreplicationstatus ( ) method to hmaster
make sure we remove the caller when the login event be successful
fix flaky test by use generateinstanceconfigs
changed the access modifier of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
added unit test to verify that an erroneous Maven project contain a reference to ensure that the project correctly handles and reports errors related to missing
simplified the conditional check for oldProto and protoGetSwitches to improve code readability and maintainability
updated the ` getControllerId ` and ` getControllerId ` methods to accept a ` configId ` parameter to enhance functionality by allowing optional configuration ID
replaced sessionFactory. close ( ) with session. close ( ) to ensure proper resource management and prevent potential memory leaks
removed the check for ` service. isGenerateRefreshToken ( ) ` in the ` OidcConsentApprovalViewResolver ` to simplify the
removed debug print statement from Http2SolrClient. java to clean up the code and improve readability
updated BaggagePropagation to use NoopGetter for handling null values to improve code clarity and ensure proper handling of null values
refactor ConditionalOnEnabledResourceChain class to improve code readability and maintainability
added a condition to check if the tree root is a child of the tree to ensure that the tree root is valid before proceeding
updated the method from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter. java `
updated log messages and modified session state handling in FacebookImpl. java to improve clarity and ensure proper state management during login
changed return values from " h : mm a " to " skeleton " in ShadowICU. java and updated corresponding test in ShadowICU
removed the dependency on KeyguardManager in TouchInteractionService. java to simplify the conditional check for device locking
fix npe in listvolumes api when there be no disk offering
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel to improve compatibility with asynchronous file operations
[ java ] fix checkstyle issue in sigint and siginttest
don't update the bounding box when resize text
changed return value from - 1 to 0 in Asset. java to ensure that the method returns a value of 0 instead of - 1
refactor ComputeBenchmark to use a mapping function instead of lambda expressions to improve code readability and maintainability by using defined constants
added an ` setOnRefreshListener ` method to ` UploadListFragment ` to notify the adapter when the refresh state changes
bibdatabasecontext : use optional. empty ( ) instead of optional. empty ( )
replaced calls to ` ParticleEmitter. items [ i ] ` with ` ParticleEmitter. get ( i ) ` in ` ParticleEffect. java
refactor tomcat to use findservices ( ) instead of getservices ( )
updated " desired file " to " desired file. " in BuildRuleFactoryParams. java and Console. java to ensure consistency in file naming conventions
added a check to return early if playback state is not PLAYING to optimize performance by avoiding unnecessary processing when the playback state changes
replaced ` findByPK ` method with ` findById ` method in ` DeleteServiceTest. java ` to simplify the retrieval of the service component desired
refactor inner class handling in Java2TypeScriptTranslator and add a new InnerClassFieldClash test in StructuralTests to improve code clarity
added logging and follow redirect filter functionality to DockerClientFactory and DockerClientProfile to enhance Docker client configuration flexibility
replaced direct call to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit. java to ensure thread safety when
updated NationalizedScalarQueryTest to use SQLServer2008Dialect instead of DB2Dialect to ensure compatibility with the latest SQL Server standards
added a try - finally block to close the input stream in OPCPackage. java to ensure proper resource management and prevent potential memory leaks
changed the access modifier of the storeClassFile method from private to public to allow access to the method from outside the class
added a new test class ` TestSortedSetDocValues ` and updated assertions in ` SingletonSortedSetDocValues ` to ensure proper handling of missing values
updated error messages in CGIHandler. java and added JavaVMCallbackHandler in JavaVM. java to improve clarity of error messages and ensure proper
added support for additional newline characters in LineReaderImpl to enhance compatibility with different line endings
changed data types from List to Set in multiple classes to improve performance and consistency in handling hash codes
added a check to return early if the vertex count is zero to optimize performance by avoiding unnecessary processing when the vertex count is zero
updated the IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationErrorsTest to improve test clarity and ensure error messages are
changed method call from ` createData ` to ` createFolder ` in ` MacroService. java ` to improve clarity by using a more
remove unused import to fix checkstyle issue
refactor JsonObject class to improve code readability and maintainability
updated the condition for idleTimestamp in SelectChannelEndPoint and modified idle time retrieval in HttpConnection to ensure proper handling of idle timestamps and improve resource
fix farmlandblock. cansustainplant ( state, direction. up, direction. up, direction. down )
added primary key verification for SALTEDTABLE123 in QueryDatabaseMetaDataIT and removed view indexes in ConnectionQueryServicesImpl and UpgradeUtil to
updated date formatting in ` HttpCookie. java ` and added a new test class ` B6791927. java ` to ensure consistent
removed multiple redundant calls to db. close ( ) in DbHelper. java to streamline code by eliminating redundancy
increased timeout duration from 1 second to 5 second in tests to improve test reliability by allowing more time for messages to be processed
add tracer option to economy allocation stage
fix issue with save database in source tab
added a line separator property to the ObjectMapper initialization to ensure consistent newline handling across different operating systems
fix nativeenvironmentrepository to work on window
updated references from ` appTest ` to ` appT ` across multiple test files to ensure consistency and clarity in the codebase
[ java ] remove recording log validation from record log.
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.1
remove debug code from testfuzzoptimizations
added a private boolean variable ` reverseImage ` and updated its assignment in ` CameraManager. java ` to improve clarity and maintainability of the
updated conditional checks in LoaderZipEntries. java and Repackager. java to improve code readability and maintainability
[ te ] fix minkdmtest failure ( # 2453 )
updated JUnit imports and method visibility in AuthenticationSuccessListenerTests. java to ensure compatibility with JUnit 5 and modernize the testing framework
mondrian : fix a bug in settypes which be cause a concurrentmodificationexception
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated triggerTime assignment to use LocalDateTime instead of DateObject to improve accuracy in date handling by using LocalDateTime for better accuracy
added a method to handle abstract method throwing for non - static methods in MethodHandleResolver to improve error handling by throwing an appropriate AbstractMethodError when method
camel - 16400 : camel - catalog. validateimpleexpression should throw an exception if the expression be invalid.
removed early return of TargetGraph. EMPTY in AbstractParser. java to streamline code by eliminating unnecessary checks
camel - 8913 : camel - jclouds should use ioutils for copy input to output stream
camel - consul : remove @ ignore from camelconsultest
added a check for ` Flags. DEFAULT ` in the ` CheckACC _ STRICTFlagOnDefaultMethodTest ` class to ensure
[ java ] increase timeout for channel validation test.
added a new file ` FileExtensions. java ` with constants for source, header, and CLANG _ SOURCES to facilitate the
refactor ThreadLocalDateFormat to use ThreadLocal's withInitial method to improve code clarity and maintainability by using a cloned DateFormat instance
[ gr - 205362 ] [ gr - 20536 ] remove ` ` usecgroupmemorylimitforheap'' and
added displayName property and modified related classes to handle customizable client display names to enhance flexibility in managing client display names across CI environments
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling for early termination
removed unnecessary whitespace in TraceFunctionAroundWrapper. java to improve code readability and maintain consistency
added connection consumption logic and modified response handling in HttpBindServlet and HttpConnection to improve connection management and ensure proper handling of connection states
fix npe in forgeeventfactory. getcapabilities ( )
wallettool : catch blockstoreexception instead of keycrypterException.
[ hotfix ] [ doc ] deprecate submitorderedcompletionservice
updated the computation of the hyphenation string to use the original length instead of the original length to ensure the hyphenation correctly reflects the original
added a sleep delay in IQRegisterHandler. java to improve responsiveness during user operations
move resourcemanagementservice. getresource ( ) to simpleaccreg
updated the description of PARAMETER _ NEEDS _ TO _ BE _ NAMED to specify " Java 8 + use the javac flag - parameters "
set providersChanged to false in ConfigurationManager. java to ensure that changes are only made when the provider changes
added a method to quote identifier tokens in SemanticAnalyzer to ensure proper handling of escaped characters in SQL identifiers
pdfbox - 4892 : skip'missing'entry for'postscript'font
updated type casting and variable assignments in SolrResourceLoader. java to improve type safety and eliminate unchecked cast warnings
modified the boundary condition in the Window class to check for the current hit's parent before proceeding to ensure that the current hit does not
added null check for appManifest before retrieving target SDK version to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationCatalog to improve code readability and maintainability
added userName property and related getter / setter methods to Driver and HiveSemanticAnalyzerHookContext classes to facilitate the retrieval and modification of the
camel - 11727 : added setter method to xsltbuilder to allow to set transformer source and output stream
added HadoopShim functionality to ContainerRunnerImpl, TaskRunnerCallable, and TaskExecutorTestHelpers to enhance Hadoop functionality by integrating Hadoop shim
updated expectedFileSize in ShadowAssetManagerTest and modified variable names in ShadowDownloadManagerTest to improve code clarity and maintain consistency in naming conventions
add null check to avoid npe
fix throughputlogger to log message with total duration
updated VM version checks to use ` Platform. isDebugBuild ( ) ` instead of ` System. getProperty ( " java. vm. version "
refactor MeterStatisticsManager to use a map for storing MeterDetailStatisticsModel to improve efficiency and maintainability of the statistics module
updated logback configuration handling in FrameworkLauncherExtended. java to improve clarity and ensure correct configuration file resolution
updated method signatures to include @ NotNull annotations and changed class names from ` CasCookieValueManager ` to ` NoOpCookieValueManager `
replaced references to ` Escaper. BASH _ ESCAPER ` with ` Escaper. SHELL _ ESCAP
refactor ` startContainerWithCommand ` to use try - with - resources ` in ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest
changed the class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
updated formatting in RelativeDateFormatTests. java to improve code readability and maintain consistency
added a method to generate ShieldAddress in RpcApiService to enable retrieval of shield addresses from the wallet
changed the return type of readConsoleInput from byte array to String in JansiWinSysTerminal and JnaWinSysTerminal classes to
updated regex patterns for presubmit and postsubmit types in TestStabilityRule. java to improve accuracy in determining platform compatibility
updated DefaultSolrHighlighter to limit fragments for multi - valued fields to improve accuracy in highlighting results
modified the tryToLogin method to accept a Uri and username and password parameters to enhance the login process by allowing more flexible credential management
added null checks and broadcasting for entities in ` HandlerSceneEntityDrownReq ` and ` PacketSceneEntityDrownRsp ` to improve
( chore ) camel - jms : fix checkstyle violation
removed the wrapCollection call from the update method in DefaultSqlSession. java to simplify the method signature and improve readability
added logging for illegalcurrencies in BTCEAdapters. java to improve error handling and debugging
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 588
pdfbox - 4071 : change default value of averagechartolerance and spacingtolerance from 0.5 f to 0.3 f
updated ` startController ` method to accept a ` useTenantIsolation ` parameter and modified related methods to enhance flexibility in tenant creation
replaced ImmutableMap. builder ( ) with ( ( Map < String, Object > ) response. getValue ( ) ) in HasSettings. java to
added a condition to check if the size of the attrs array is greater than 4096 to ensure that the code only executes when the size of the
added abstract methods to ` AbstractIjProjectConfig ` and refactored ` IjProject ` to use these methods to improve code clarity
updated the description of " Experimenal " to " Experimental " in HiveSessionProperties. java to improve clarity and understanding of the
added unit tests for the GrantedAuthorityEffectiveAclsResolver class to ensure correct behavior when resolving authorities based on user details
don't use reflectionclassdeclaration in solvemethodintype ( )
added button count management logic in XToolkit. java to ensure that the button count does not exceed the maximum allowed button count
changed import statement from ` jdk. testlibrary. Asserts. assertEquals ` to ` com. oracle. java. testlibrary. Asserts
added a new ` MessagePackFactory ` class for creating ` MessagePack ` instances to facilitate the creation of ` MessagePack ` instances
add new tag for is _ desert and is _ cave to the biome tag. close # 2113
rename ` present ( deltaTime ) ` to ` draw ( deltaTime ) ` across multiple screens to improve clarity and consistency in method naming
added conditional checks for horizontal orientation in ComponentGroup. java to ensure proper UI identification for " GroupElement " elements
fix : doiurlpattern. matcher ( identifier ). matches ( ) should be matcher. matches ( )
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLocklessInput
[ java ] make sure to close the commit position counter in clusteredservicetests
[ te ] - add a new record class for user site with note and version
improve error handling in case of malformed url.
bug fix : listcapacity api don't return capacity _ type _ storage _ allocated or capacity _ type _ storage
replaced the method ` openInput ` with ` fileLength ` in ` NRTCachingDirectory ` to improve clarity and consistency in file length handling
updated imports and modified method signatures in JavascriptCompiler. java to improve clarity and functionality of the generated class
added synchronization to the store method in UISettings class to ensure thread safety when accessing shared resources
added a conditional check for native text input support and changed the access level of fireDataChanged method from private to public to improve user experience by
spannerio : retry on concurrent transaction error message
use diamond operator in type inference
changed the type of the array type from double [ ] to short [ ] in ObjectInputStream and added a new CloneArray class with serialization tests
changed nonce retrieval method from ` getClaim ` to ` getStringClaim ` in ` OIDCAuthenticationFilter. java ` to improve clarity and consistency
added a condition to return true for relationship fields in DCInputSet. java to ensure proper handling of edge cases for relation fields
added support for server logan functionality in the database to enhance user experience by allowing users to log into the system
refactor conditional check for menuItem assignment in DrawerActivity. java to improve code readability and maintainability
replace fail test with assumeNoException in SolrRequestParserTest. java to improve test reliability by avoiding unnecessary failure messages
avoid run autodeps when the build have no failure .
added new test cases for data 5 - 4 in StringHelperTest. java to ensure that the test cases accurately reflect the expected data format
added a warning log when the data provider is returned an empty array or iterator to improve debugging by providing clearer feedback when the data provider is not
camel - core : use collections. emptylist ( ) instead of collections. empty _ map ( )
bug fix for map style selection style with rich style
remove mass parameter from setRestitution method in PhysicsRigidBody. java to simplify the method signature for better clarity
added a new file ` AutoFtpActivity. java ` to handle FTP notifications to facilitate automated testing of FTP interactions
refactor token type checking in BaseSemanticAnalyzer to improve clarity to enhance readability and maintainability of the code
added getter and setter methods in ImageViewer, OnOffSwitch, Component, GenericSpinner, and UIBuilder classes to enhance component state management and improve
added a new file ` RemoteExecutionEnabled. java ` to handle serialization and deserialization of ` RemoteExecutionConditional ` to enable or disable remote execution
pdfbox - 4071 : fix typo, a suggest by valerybokov
replaced deprecated FileReader with InputStreamReader in ImportCsv. java and added @ SuppressWarnings for S3551 in PublicBAOS. java to
added assertWorkingScoreFromScratch method to AbstractScoreDirector to ensure that shadow variables are not stale during the scoring process
updated SEMIJOIN _ CONVERSION configuration from " hive. enable. semijoin. conversion " to " hive. optimize. semijoin
added SLF4J logger imports and debug logging statements in multiple classes to enhance logging capabilities for debugging purposes
updated file removal logic and improved error handling in SynchronizeFolderOperation and FileDisplayActivity to enhance user experience by notifying when the current folder
added assertions to check the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly
[ iotdb - 5892 ] fix schemaregion. constructchemaregion ( ) test failure
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided to avoid runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource ` to ensure
updated the ` @ AllArgsConstructor ` annotation to include ` @ JsonCreator ( mode = JsonCreator. Mode. PROPERTIES ) ` to
added a check to throw a SQLFeatureNotSupportedException for creating an index on a view to inform users that creating an index on a view is not
added a new class ` Website ` with getter and setter methods in ` PopulatorImplTest ` to facilitate testing of the ` Website
added a setup method in BSFormatterTest to set the default locale to ensure consistent localization across test cases
log a severe message if a user try to download a few bad jar file.
updated the assertion method in MultiPartParsingTest to use Matchers for better accuracy to improve test reliability by ignoring case differences in expected values
added conditional checks for single and multiple parameters in SimpleExprGenerator to ensure proper handling of single and multiple parameters in the expression generation process
added a volatile boolean flag ` createdVertx ` and modified the null check in ` VertxComponent. java ` to ensure that vertx
updated writeAttributes calls to use the node object directly instead of null to ensure that the writeAttributes method uses the correct node object for consistency
updated logging statements in SynchronizeFolderOperation. java and added null checks in FileDisplayActivity. java to improve logging clarity and prevent potential null
added a new property ` ignoredReadStatus ` in ` Entries ` and updated related methods in ` CategoryREST ` and ` FeedREST `
replaced the use of ` MavenTestingUtils. getTargetDir ( ). toURI ( ) ` with ` MavenPaths. findTestResourceDir (
[ shenyu - register ] fix npe in registerserverconsumerexecutor
updated the isPlaying condition in GwtMusic. java to check if the audio is not paused to ensure that the audio playback only occurs when the
added permission for the ADMIN _ SUDO _ AREA permission in the Captions class to allow users to use sudo access for area permissions
updated query options handling in ServerRequestPlanVisitor and added a new test case in QueryRunnerTest to improve query performance and ensure correct handling of
updated path validation logic in ReloadableJava11ParserInputFileObject, ReloadableJava17ParserInputFileObject, Java8ParserInputFileObject, and
added a mix emoji and text assertion for attribute values in ResourcesTest. java to ensure that the test cases accurately reflect the mix emoji and
changed native method name from NMTWaitForDataMerge to NMTOverflowHashBucket and added a new native method NMTMallocWith
[ flink - 2594 ] [ serializer ] migrate eitherserializer to javaeffounderializersnapshot
updated DEFAULT _ NDOTS and DEFAULT _ ROTATE _ RESOLV _ OPTION initialization in AddressResolverOptions and AddressResolver to improve
added superclass association in RequestRockerTemplate and created a test for NullPointerException in RequestRockerTemplateTest to ensure proper context associations and validate
pdfbox - 2576 : don't return null value for non - terminal field
updated references from " liquibase / parser / core / xml / dbchangelog - ext. xsd " to " www. liquibase.
move commonmimetypelocator to test module
updated the RepositoryVersionState from INIT ( 2 ) to NOT _ REQUIRED in multiple classes to ensure consistency in state management across the application
updated the comparison logic in GenerateChangeLogTask. java to include SchemaComparison alongside CatalogAndSchema to enhance the comparison process by allowing
updated JUnit import from ` org. junit. Test ` to ` org. testng. annotations. Test ` to ensure compatibility with TestNG framework
added a new file ` ProgressiveJPEGTest. java ` to implement a visual representation of a progressive JPEG file
updated MaterialLoader to set alpha values and modified list assignment to use mat. getName ( ) instead of matName to ensure proper handling of alpha
include 32 - bit architecture in error message
added a null and empty string check before setting the size to avoid potential NullPointerExceptions when the text is null
modified the way theVarInt is read from a fixed value to a fixed value to improve the handling of large data sets
changed ` PushUtils ` and ` ThumbnailsCacheManager ` classes from public to final classes and added ` private ` access modifier to these classes to
refactor length calculation in RocketPanel to use curConfig's length method to improve clarity and maintainability of the code
changed the type of the ` dir ` variable from ` MockDirectoryWrapper ` to ` dir ` to ensure proper usage of the ` dir `
updated the load method call to use a wildcard argument for presets to improve flexibility in loading CSV files
added a condition to check if the app is in the app before announceing accessibility to ensure that accessibility announcements only when in the
refactor Node instantiation to use RefreshTask instead of MyKey to improve code clarity and maintainability by centralizing node creation logic
pmd : add ant task to target jdk 1.5
fix flaky test due to powermock
added PrintStream initialization and error stream settings in TestSchemaToolCatalogOps. java to enable customized output streams for debugging purposes
added DFSClient as a parameter to several methods in FanOutOneBlockAsyncDFSOutputSaslHelper to enhance security by ensuring proper
updated constructor parameters in MongoQueryMethod and MongoRepositoryFactoryBean to include RepositoryMetadata to enhance query functionality by allowing metadata to be passed
add support for entityresolver2 in xml dsl.
removed unused static imports and reordered imports in MetaDataEndpointImpl . java and FunctionParseNode . java to improve code clarity and maintainability by cleaning up unnecessary dependencies
increased ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added a deadlock retry mechanism in TxnHandler to improve transaction
refactor BarChartActivity and LineChartActivity1 to use a local variable for XAxis and adjust YOffset accordingly to improve code readability and ensure
added methods to check for printable characters in FsUtils. java to ensure only valid Unicode characters are processed
rename webdriverrunner. in ( ) to webdriverrunner. using ( )
resolved - issue batch - 1373 : add processpluginconfiguration to projectbuilder request
changed return values in ProxyConnectionManager and ServerTrafficCounter to double precision to ensure accurate representation of network traffic data
[ vision ] fix integration test that depend on google cloud vision
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added getRemoteHost method in Authentic
add admin permission to the community list page
replaced custom thread name format for longCompactions and shortCompactions with AtomicInteger to ensure unique thread names for compaction processes
replaced getApplication ( ). getPackageName ( ) with resources. getResourcePackageName ( R. array. wallpapers ) to retrieve the correct resource package
replaced the method ` getPlayersInPlot ( ) ` with ` getPlayersInPlotVisible ( plot, PlotPlayer <? > ) `
refactor multiple classes including AndroidManifest, ResName, ShadowMediaPlayer, ShadowActivity, and ShadowMediaPlayer to improve code organization and maintainability
rename MlibOpsTest. java to improve clarity and consistency in naming conventions
[ gr - 3688 ] native native native library should not be register for awt headless.
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator. java and added a test case in SchemeGeneratorTest
removed null checks for encryption keys and IV in UploadFileOperation. java to simplify key and IV generation logic
added a Stability annotation for local and PLATFORM _ POSTSUBMIT flavors in WorkProfileTest. java to ensure compatibility with the application's
removed conditional check for bucketing version in TezCompiler. java to streamline code by eliminating unnecessary checks
replaced ` setCursorPosition ( x, y ) ` with ` input. setCursorPosition ( x, y ) ` in GwtTestWrapper. java
refactor LockFreeBucket to use an abstract class for ContendedTimeMeter and FinalFields _ CacheLinePadding to improve encapsulation and facilitate
add tpstats to nodeproces to print thread pool stats
updated ` setMaxBitrate ` method to use ` userPreferences. getValue ( ) ` instead of ` Utils. getMaxBitrate ( ) `
refactor ZipkinHttpSpanExtractor to improve handling of trace and span IDs to enhance clarity and maintainability of the code
add getuserpayment accounts ( ) method to createoffermodel and duplicateoffermodel
remove reflection call to dartservercompletioncontributor. withtypetext ( ) and withtypeiconrightalign ( )
added a call to setProject ( p ) in LauncherUtils. java to ensure the project is properly initialized before use
updated JsBundle and JsBundleBuilder to include ProjectFilesystem as a parameter to enhance functionality by allowing the build root to be passed
update javadoc for databindingfactory and databindingmode
refactor MetricsDSLContext class to improve code readability and maintainability
refactor VersionBuckConfig to use ImmutableSet for universes retrieval to improve performance and maintainability of the code
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by avoiding potential NullPointerException
make assertthatthrownby and assertthatthrownby error message public
fix : update gapic - generator - java with mock service generation fix ( # 10 )
added SLF4J logging imports to SimulationStatus. java to facilitate easier debugging and monitoring of simulation status
updated the VERSION _ POSITION _ Y and VERSION _ FONT values in Splash. java to reflect the correct font size for better compatibility
refactor notification addition to run on the UI thread to improve UI responsiveness by ensuring notifications are executed on the UI thread
updated ReturnsElementsOf to return a list of elements instead of a single element to enhance functionality by allowing multiple elements to be returned
[ hotfix ] [ table - planner - blink ] improve error message
added a test for LineFileDocs in BaseStoredFieldsFormatTestCase. java to ensure that LineFileDocs functionality works as expected
added a method to retrieve the version code and updated FeatureList to use this method to improve code clarity and maintainability by centralizing version code
( chore ) camel - spring - boot : fix ambiguous method call
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamParser. MultiPart
added buffer ownership handling in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leaks
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing the password change action to
fix a typo in the javadoc of jerseyclientconfiguration
int - 193, int - 194, int - 195, int - 196, int - 197, int - 19
replaced instances of ` s ` with ` o ` in ` InstanceOfPatternMatchTest. java ` and modified return type in ` TypeUtils
added methods to handle empty arrays in StringDict and Table classes to improve robustness by ensuring only valid array elements are processed
added deprecation annotations and implemented the ` AutoCloseable ` interface in ` GenericContainer ` to improve code clarity and ensure proper resource management
changed logging level from info to error in MediaInfo. java and modified method signatures in RendererConfigurationTest. java to improve error handling and ensure
added schemapattern option to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance configuration options for database connectors
bcjsse : return empty byte array instead of null for null tls session
refactor bitmap creation logic to use intermediate variables for width and height calculations to improve code readability and maintainability by reducing redundancy
refactor Base64 class implementation to improve code maintainability and readability
llvm : add miss assumption to readmanaged and readmanaged method
danielwagnerhall : ignoring test that fail on iphone
updated FlowBuilder and FlowJobBuilderTests to improve code clarity and maintainability
changed the data type of ` resName ` and ` value ` from ` Map < ResName, List < ResEntry > > ` to
add support for ` dockerContextTLSFile ` in ` DefaultDockerClientConfig ` to improve flexibility in managing TLS file paths during Docker configuration
camel - test - infra - elasticsearch : use @ before instead of @ after
modified type checking logic in mmm Attr. java and added a new class T6450290. java to improve type handling and demonstrate the
add - log - level option to java. util. logging. config to specify log level.
added logging for package removal events and modified deleteItemsFromDatabase method to return a Collection <? > instead of Iterable <? > to improve
added ` allFilesOption ( ) ` method to ` FileActivity `, ` FileDisplayActivity `, and ` PreviewImageActivity ` to
added deprecated methods for forEachOperation and hasMatching in MutationOperationGroup. java to signal that these methods should no longer be used
updated the calculation of numPredictiveAppCols based on phone type to ensure correct number of app columns based on device type
updated StringUtils to use UTF - 8 encoding to ensure proper handling of character encoding in content
added RequestMatchers class and corresponding tests in RequestMatchersTests to enhance request matching capabilities in the application
don't allow button to be click outside of applet
update position calculations in the ProgressBar to correctly account for the height and width of the knob after element to ensure correct positioning of the knob
[ native ] fix external _ functions. json path in native query runner
changed ` extra _ L0 ` and ` extra _ L4 ` to ` final ` in ` BruteArgumentMoverHandle ` to
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only proceeds when the state
updated dimensions calculations in CellLayout and Workspace classes to use constrained dimensions to improve layout accuracy for different screen orientations
added a condition to check if the redir URL matches the " / robots. txt " file in HttpRobotRulesParser. java to
don't show warning icon on mac o x
updated button names from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen. java to
added a null check for the second element in UDFOPDivide and created a new test class TestUDFOPDivide to
updated formatting and exception handling in FlowJob. java and JobRestartJobParserTests. java to improve code readability and maintainability
updated BeanDefinitionBuilder in FormLogin and LogoutBeanDefinitionParser to use constructor arguments for login and logout URL to improve flexibility and maintainability of
added onDestroy ( ) method to ShareActivity and ContributionsActivity to ensure proper resource management and prevent memory leaks
corrected the spelling of " thumbNail " to " thumbnail " in WallpaperPickerActivity. java to ensure consistency and accuracy in referencing the
updated import statements in multiple Java files to improve code clarity and maintainability
added a method to set the request timeout in the Rpc configuration to ensure proper timeout handling for RPC requests
updated logging level in TsFileResourceManager and modified test cases in ResourceManagerTest to improve logging clarity and ensure proper handling of time index
added system properties to setModelSource and setSystemProperties in MavenModuleLoader to ensure proper handling of system properties during module loading
added " READINESS _ CHECK _ OK _ CALLS " and " READINESS _ CHECK _ BAD _ CALLS " metrics to
fix animatedtorch not register properly
added null check before closing the writer to prevent potential NullPointerException when closing the writer
replaced direct instantiation of HiveConf with a utility method from UtilsForTest to improve code readability and maintainability by centralizing configuration logic
added a new link for " Muting Users " in FeaturesActivity to enhance user experience by providing relevant links
added initialization for the jdk. reflect. useDirectMethodHandle property to ensure proper handling of direct method handles in the application
hbase splitonLeadingvarcharcolumnspolicy change from constantsizeregionsplitpolicy to steppingregionsplitpolicy
[ flink - 2594 ] [ yarn ] don't fail yarn deployment if lib and plugins directory do not exist
updated method calls to use ` getWord ( word ). getPronunciations ( null ) ` and ` getWord ( wordWithoutParent
updated JSON string format in JsonUtilsTest. java to ensure consistency in JSON formatting
added intent extra for tweet ID in TimeLineCursorAdapter, TimelineArrayAdapter, and Compose classes to include the tweet ID in the compose
( chore ) camel - core : log warn about unsafely routed ring buffer data relate to reliable topic
don't throw an exception when there be no class find to analyze
replaced the import of Key with PublicKey in KeyFetcher. java to ensure compatibility with the latest cryptographic standards
removed redundant assignment of isIncompatible to improve code clarity and maintainability
updated RpcApiService to use AccountCreateContract to enhance account creation functionality
pdfbox - 2576 : avoid npe in case of empty array
http : / / issues. apache. org / jira / browse / amq - 2576 - fix dlq consumer redelivery test
updated the default value of StarTree format from " ON _ HEAP " to " OFF _ HEAP " across multiple files to ensure consistency
modify title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to ensure that the title does not exceed the maximum of
updated JColorChooser and BasicColorChooserUI to utilize the chooser's preview panel to improve UI responsiveness by utilizing the chooser '
changed log level from info to debug in DefaultBuildExtensionScanner. java to improve log verbosity for debugging purposes
added a null check for the reusableBitmap before setting bitmap options to avoid potential NullPointerExceptions during bitmap decoding
added ` getLayoutParams ( ) ` method to ` FakeView ` class to provide access to ` ViewGroup. LayoutParams `
added a check to ensure that a Cursor is already closed to prevent IllegalStateException when accessing the cursor after the session is closed
pdfbox - 3017 : don't create a page tree if there be no parent dictionary
added @ Ignore annotation to JMSClientTest. java to temporarily disable tests that are not ready for execution
added a new private field'ts'with getter and setter methods to store and retrieve the timestamp associated with the message
opengrok - web - api : expose error message in genericexceptionmapper
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
[ isochrone ] remove legacy hint from routeresource
updated import statements and class visibility from public to package - private to allow access to test classes from outside the package
refactor CSRF setting into a separate method to improve code readability and maintainability
added conditional checks for ` bootstrap ` in ` EclipseLoaderPatcherTransplants. java ` to ensure proper handling of shadow class loading based
add a flag to enable / disable numeric in decisiontable rule
changed log level from info to debug for default value logging to reduce log verbosity and improve performance during production
added null checks for axes and buttons in Lwjgl3Controller. java and improved controller management in Lwjgl3ControllerManager. java
updated ObjectFactory import from cucumber. api. java to io. cucumber. core. backend. ObjectFactory in WeldFactory and WeldFactoryTest
refactor savePortForward logic to use HostDatabase to improve code readability and maintainability
added a configuration option to check if Liquibase snapshot data is enabled to enhance flexibility in snapshot data behavior
refactor SyncedFolderObserver to improve event handling and logging to enhance clarity and maintainability of the code
refactor LocationMarshaller to improve code readability to enhance maintainability and facilitate future updates
updated conditions in StatusBarTouchController. java and modified conditions in TouchInteractionService. java and OtherActivityInputConsumer. java to improve touch
updated package structure and refactored VectorReader and related classes to improve code organization and maintainability
updated import statements from ArgumentMatchers to Matchers across multiple test files to standardize the use of Matchers across test classes
updated methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` and ` getRelativePathSupplier ( ) ` to
fix inconsistency between recordreader and recordreaderfileconfig
added a null check for the extractor in ControllerMethodInvoker. java and updated the @ WithArgumentExtractor annotation in Param. java to ensure proper
cloudstack api : don't set max project secondary storage for non - project account
fix shiftevent not fire in gui screen
add a deprecated constant for the removal of the COLD _ READS _ TO _ OMIT _ KEY in SizeTieredCompactionStrategyOptions
added a call to leech. stop ( ) in ClientTest. java to ensure proper resource management and prevent potential memory leaks
add label _ is _ retry to pop message processor
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
replaced the @ Test annotation with an @ Ignore annotation in ShadowDateUtilsTest. java to mark the test as ignored for a moment
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve clarity
added upgrade request handling in the WebSocket connection tests to ensure proper functionality and reliability of the WebSocket connection
added timeout functionality to AndroidImplementation to manage connection timeouts effectively
refactor getUserAccessPermissions and getTeamAccessPermissions methods to use a list of RegistrantAccessPermission for user and team access permissions to improve
added a test case for quoted cast expressions in SelectTest. java to ensure proper parsing and deparsing of SQL statements with escaped quotes
815130 : misc test fail on non - root operating system
added logging and modified executor selection logic in FixedThreadExecutor to improve debugging and ensure correct executor selection based on configuration
added null check for the " catalogname " field in AbstractChangeGenerator. java to avoid potential NullPointerException when the " catalogname " field
replaced ` CasEventListener ` with ` InitializingBean ` across multiple configuration classes to improve consistency and align with the latest library structure
refactor animation end handling into a separate method to improve code readability and maintainability
added a close method to the DeflaterOutputStream that calls super. close ( ) to ensure proper resource management and prevent potential memory leaks
added a new Java file gsp001. java to test the JVMTI GetSystemProperty method to ensure that system properties are retrieved at early
polish ` ` declare bean'' annotation for non - static method
* added read / write method to camerode and lightnode so they can be use by the camera / lightcontrol system.
updated PopupNotificationPanel to ensure proper disposal of the popup window to improve user experience by ensuring the popup window is properly closed
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` to simplify exception handling and improve clarity in
added a method ` getFeatureValue ( ) ` to return the feature value to provide access to the feature value for external use
changed the parameter type from ` int ` to ` long ` in the ` after ` method from ` int ` to ` long ` to allow
added ` OnBuild ` and ` ExecutionDriver ` fields with getter and setter methods in ` ContainerConfig ` and ` Info ` classes to enable
added conditional logic to set icon based on the target type for rtl mode to ensure proper icon placement based on the target type
added functionality to enable or disable position increments in StopFilterFactory to improve flexibility in processing stop words based on user preferences
added support for the TEAMMATES Admin email in EmailsTest and SystemErrorEmailReportTest to ensure proper handling of TEAM
added a new variable ` mTryShareAgain ` and initialized it to false to ensure proper handling of shared resources during file operations
added functionality to retrieve JVM version from properties in JansiNativePty. java to enhance compatibility with different JVM versions
updated variable names and logic in BandwidthProcessor. java for consistency to improve clarity and maintainability of the code
replaced direct assertions with Awaitility's await method in Issue410Tests. java to improve test reliability by leveraging the
refactor URL constants in EaseeBindingConstants. java to improve code readability and maintainability
updated sleep duration and added startup attempt configuration in KafkaIOIT. java to improve test reliability by allowing more time for read operations
replaced allOf with is ( itemName ) method in SearchResultMatcher. java to improve clarity and accuracy of JSON path assertions
added SSL trust management in OkHttp. java to enhance security by trusting certificates
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by utilizing Assist
added a new file ` HyperlinkFormula. java ` and modified ` StringPtg. java ` to use unsigned unsigned unsigned unsigned unsigned unsigned
added nullability annotations and null check for workingDirectory in ShellStep. java to ensure proper handling of null values and prevent potential NullPointerException
increased TIMEOUT _ MILLIS from 1000ms to 2000ms in AsyncAppenderTest. java to allow more time for tests to complete
abstractdatabase # escapedatabaseobject ( string, class <? extends object > )
added a boolean field ` inputChanged ` and modified conditions in ` MaterialRenameDialog. java ` to ensure the dialog reflects the changes made
added a test for state changes in ShadowDisplayTest and implemented setState method in ShadowDisplay to ensure proper handling of display states in different devices
add support for invoke direct invocation service in dispatcher
ggb - 2118 fix for x and y keycodes in gwt backend
added support for pg _ catalog. pg _ depend dep and pg _ catalog. pg _ class pkic in SQL queries to ensure compatibility with
add nullability annotation to queuechannel to avoid npe
updated method signatures and variable names for clarity and consistency to improve code readability and maintainability by using a more descriptive method name
added support for Jenkins nodes in the CollectorServer to enable monitoring of Jenkins nodes in the application
updated header attribute resolution in HeadersBeanDefinitionParser and added tests for secure and missing headers in HttpHeadersConfigTests to ensure proper handling of secure headers and
hbase - 2697 addendum to make sure we seek to the end of the file
don't destroy nacos registry if nacos be already shutdown
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAway state handling to use a dedicated method for writing status codes to improve code readability and maintainability by encapsulating status code logic
updated formatting in AuditEvent and added assertions to verify JSON output to improve code readability and ensure correct JSON output
updated MathUtils. FLOAT _ ROUNDING _ ERROR check and modified the return statement in Interpolation. java to ensure proper handling of floating - point
fix path in forge / forge / forgeworldedit. java
refactor code to store the result of getDxExecutable ( ) in a variable before adding it to the builder to improve code readability and maintainability
added multiple assertions for PointRangeQuery instances in TestPointQueries. java to ensure that PointRangeQuery instances are asserted correctly to validate the
hbase - 2697 testhfilecleaner should use mock _ archived _ hfile _ dir instead of hardcoded value
added a condition to check if the download file name differs from the fileTransferRequest's getFileName ( ) method to ensure that the file label
don't throw a jce when there's an error
[ hotfix ] [ table - planner - blink ] set the chainingstrategy to always
replaced ` RegExpBasedFilterInvocationDefinitionMap ` with ` PathBasedFilterInvocationDefinitionMap ` in ` FilterInvocationDefinitionSourceEditor ` and updated
added benchmarks for QMapReadRandomKeyBenchmark and QMapReadSequentialKeyBenchmark to improve performance and accuracy of map operations
added a new HashMap for G _ SCH _ B in HybridPlotWorld. java to facilitate the initialization of G _ S
updated null and empty checks for fields and methods in GroovyEngine. java to enhance robustness by ensuring proper handling of empty fields and impro
don't draw the gradient of the number if it's not a valid angle.
added TCP keepalive configuration and modified TServerTransport instantiation to use it to improve flexibility in managing TCP keepalive settings
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` in ` FileRenameAction. java ` to improve clarity by
no effective change - code cleanup - remove unused import
refactor RealtimeSegmentRelocator to use lambda expressions to improve code readability and reduce boilerplate
cloudstack - 3685 : don't return success = true in createcpctbyadmin command
updated interpolation logic in WindowTransformSwipeHandler. java and modified condition in FloatingIconView. java to ensure windowAlpha is non - negative and
updated error message for Spring Security version 3.5 to ensure users are aware of the latest Spring versions
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
make some field final in disruptorproviderManage, queueconsumer, and disruptorprovider.
added a new file TestConfigureUDF. java and updated ExprNodeGenericFuncEvaluator. java to enhance functionality for configuring UDFs in Hive
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to enhance regex matching accuracy and improve test coverage for
removed the use of ` logger ` for ` debug `, ` info `, and ` warn ` methods in ` LOG. java ` to
renamed methods from ` updatePurgedShards ` to ` deletePurgedShards ` across multiple classes to improve clarity and consistency in database operations
added default Java versions " 16 " and " 17 " to the LanguageRegistry to ensure compatibility with the latest Java features and improvements
attempt to wait for compression job to finish to avoid race condition
[ gr - 34494 ] volatilereadnode : don't assert that last location access be null
added a method ` getSteps ( ) ` to return an unmodifiable list of ` Step ` objects to facilitate access to the ` steps
removed unused ` fromBase58 ` and ` toBase58 ` variables from ` TronJsonRpc ` and ` TronJsonRpcImpl
refactor currency pair creation in BitstampAdapters. java to improve code readability and maintainability
fix meterregistrycompatibilitykit for longtasktimer
[ euphoria - flink ] [ euphoria - flink - euphoria - core ]
refactor HostEditorActivity to use CharSequence instead of String for better type handling to improve code clarity and ensure compatibility with ListPreference
rename ` ` incompatibledatabasehandler'' to ` ` databaseversionhandler '
added a maximum tweet count limit in the query processing to ensure that the query does not exceed the defined number of replies
increased the refresh interval from 1ms to 2000ms in AbstractCachedLDAPAuthorizationMapLegacyTest. java to improve test reliability by allowing
fix to get persisted byte size correctly for fully acked deleted tail page
fix checkstyle issue in net. glowserver
refactor growth logic in DataIO to improve code readability and maintainability
removed unused import of java. io. DataOutputStream in GdxSetup. java to streamline code by eliminating unnecessary dependencies
add getsubmittedfilename ( ) method to make it easy to access the file name
added markReadForLoad ( ) method in LauncherFragment. java to ensure data is properly marked as read for loading
updated the ` main ` method to throw ` ClassNotFoundException ` and modified the ` instrumentJar ` method to handle ` NegativeArraySizeException `
added a method ` checkForSpillPossibility ` to check the availability of partitions to ensure that the system handles out - of - memory
changed variable declaration from ` info. getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter. java ` to ensure consistency and
added a default name ID format constant in SamlProfileSamlNameIdBuilder to ensure consistent handling of name IDs across the application
added error handling for password change aborted to improve user experience by providing clear feedback during password changes
removed unnecessary line breaks in Deadlock2. java to improve code clarity and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest. java file to remove unnecessary code that is no longer needed
added validation for filter start and end dates in RRD4jPersistenceService. java to ensure that only valid start and end dates are used
added checks to return early if numVectors is less than zero to optimize performance by avoiding unnecessary processing
test : migrate executablereftest to junit 5
added null checks before setting view and glassPane in JLayer. java and created a new bug6994419. java file to
camel - 16400 : wiretap eip to allow dynamic route to be use with an expression.
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option validator for " planner. enable _ topn " and implemented the matches method in PushLimitToTopN to enhance
[ java ] remove redundant call to deprecate aerondirectoryname ( ) in driverloggingagenttest
fixed - batchping don't respect queued redis connection
replaced ByteArrayOutputStream with FileOutputStream and modified the getConfVarURL method to return a URL instead of an InputStream to improve file handling and ensure default
updated method call from ` defaultDevice ( ) ` to ` criteria. getDevice ( ) ` in ` BaseModelLoader. java ` to ensure
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer. java to enhance menu functionality and improve user experience
refactor CertificateValidator class to improve code readability and maintainability
use ` ` hawtio. dirname'' instead of ` `.''
added a condition to return SINGLE _ SPACE for empty comments to ensure proper handling of empty comments in the code
changed ` mClosed ` and ` mActualDictionary ` and ` mNativeDict ` to ` volatile ` in multiple classes to ensure thread safety when
added printStackTrace ( ) method to ContextHandler to improve error handling by avoiding stack trace printing
fix customitemdrostest by move it to a separate module
added ` ifNotExists ` parameter to ` AddPartitionDesc ` and ` DDLSemanticAnalyzer ` to enable conditional creation of partitions based on
updated input reading logic in NfsSecondaryStorageResource. java to improve performance and memory management during file operations
remove redundant controlRequestStreamId method call in EchoServiceNode and BasicAuctionClusteredServiceNode to streamline code by eliminating unnecessary
added spatial operator support to wfs and wfs test
added import for LuceneTestCase and annotated the test class with @ LuceneTestCase. AwaitsFix to address issue SOLR - 2161
refactor preface validation logic in Http11InputBuffer. java to improve code readability and maintainability
[ java ] set ` isIngressExclusive ` to false in aeron cluster.
updated configuration keys for offheap and bucket cache in HBaseStorageHandler to support additional configuration options for offheap and block cache sizes
updated exception context to include the current record number in the file to improve context tracking by accurately tracking the current record count
added filtering logic to remove specific items from mergedItems to enhance user experience by filtering out relevant items
updated color settings in CacheableTextView, CellLayout, and HolographicOutlineHelper to use CLEAR instead of 0x00000000 to
added OpenGL ES 2.0 error handling in Mesh. java to ensure compatibility with OpenGL ES 2.0 features
added ActionContext initialization in BackgroundProcess. java to ensure proper context management during command execution
modified the ` getUnescapedName ` method to accept a ` dbName ` parameter and adjusted related logic to enhance functionality by allowing the user to specify
added a connection timeout configuration in TestConnections. java and changed the count variable in StubConnection. java to improve connection reliability by ensuring
added multiple test cases for the approx _ percentile function in Hive aggregation queries to ensure that the approx _ percentile function works correctly for both orders and
updated default idle and write timeout values in WebSocketConstants and WebSocketChannel classes to ensure consistent timeout values across WebSocket connections
updated the method call to use ` user. toPlatformAccount ( ). name ` instead of ` account. getName ( ) ` to ensure
updated type declarations and improved null handling in Inet6Address. java to enhance type safety and prevent potential NullPointerExceptions
refactor button state management in PlaybackControlView to improve clarity and maintainability of the code
updated method references and variable names in Session and Token classes to improve clarity and consistency in session management
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary. java ` to ensure
change the default value of UseExceptionProbability from true to ____ to ensure consistency in exception probability usage across the application
modified the creation of the newPlateColor based on the icon's themed state to improve visual feedback based on whether the app
guacamole - 1100 : remove dependency on guacamole - mysql
added " centre " alias to the aliases list to enhance clarity by distinguishing between center and centre functionalities
added dependency injection for DirectUpload in CommonsApplicationComponent to facilitate dependency injection for direct uploads
added space adjustments for left and right axes in BarChartActivity and updated legend position logic in BarLineChartBase to improve chart readability and
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance compatibility with new ABI architectures
added operation event status type to request parameters in OnlineHubService and initialized the services list in CompositeLogService to ensure proper handling of operation events
add visibility annotation for method parameters in DexAnnotation. java to enhance debugging capabilities for annotation handling
( chore ) camel - jms : use @ setup instead of @ finishbundle
refactor process creation to include classpath in ProcessBuilder to improve clarity and maintainability of the process creation process
updated separator handling in PackageResourceLoader to ensure correct file separator is used for Android applications
[ flink - 2594 ] [ dataset ] remove unnecessary'this'call in groupbyoperator
added JUnit Ignore annotation to WorkProfileTest. java to temporarily disable the test due to known issue ( b / 243855320 )
added escapePercent method and updated error message formatting in tests to ensure proper formatting of error messages
fixed - jcache. geturi ( ) method throw npe if cachemanager. geturi ( ) return null
fix log level when exception be not a technical exception
reformatted the instantiation of ALPNClientConnectionFactory to improve code readability and maintainability
entitypropertiespacket : use instance. getbasevalue ( ) instead of instance. getvalue ( )
update onosaudiosink to use handlerhelper. ishandlerinitialized ( )
increased timeout duration from 500 milliseconds to 5 seconds in multiple test cases to improve test stability by allowing more time for latch operations
changed log level from info to debug in LightThingHandler. java to clarify the reason for adding support on GitHub
add db property to make sure asyncjobmanager thread pool don't exceed db. properties
updated method signatures and formatting in Reporter. java and ReturnsSmartNulls. java to enhance clarity and consistency in error messages
changed the parameter type of the generateData method from Frame to DataFrame to improve type safety and eliminate unnecessary type casting
updated package - info. java and module - info. java files for consistency to improve code readability and maintainability
added a check for empty physical column names in OrcPageSourceFactory and implemented a test for ORC use column names with an empty orc
added a call to ` methCla. mixPlay ( input, amp ) ` in ` Engine. java ` to enable mixing of audio
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
pdfbox - 4892 : fix corner in finder pattern finder, a suggest by valerybokov
updated error message in PreprocessorDelegate. java to clarify that leadingIncludePaths is not serializable
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and
add ` ` $ $ x'' and ` ` find'' to the list of all element
updated the sample rate assignment logic in DefaultAudioSink. java to ensure that the maximum supported channel count respects the specified sample rate
added getFormula ( ) and setFormula ( String formulaText ) methods to XSSFName class to enhance functionality by allowing formula values to be
updated the target value in HighDimensionsTest from 60000 milliseconds to 90 seconds to improve accuracy of the test by allowing more time for scaling
gmlparser : fix parsing of patternfacet state. xsd file
added unit tests for the ClassPathXmlJobRegistry class to ensure correct retrieval of job names from the job registry
change mhistorictimes from float to long to avoid overflow
camel - 12320 : camel - restlet - allow to configure restlet label and consumer option.
( chore ) camel - test - infra - log : remove unused method
replaced ` submitTraceEvent ` with ` writeChromeTraceMetadataEvent ` in ` ChromeTraceBuildListener. java ` to improve trace event submission
added a check to ensure only non - canceled, filled, and rejected limit orders are added to the limitOrders list to avoid adding duplicate orders
added pixel offset calculations and validation in LCMSImageLayout. java to ensure proper image layout validation and prevent errors
refactor timestamp handling in Event and JrubyEventExtLibrary classes to improve clarity and consistency in timestamp management
added a condition to return the resource if the path ends with " / " in ContextHandler. java and created a test case in WebAppContext
updated ScriptFunctionImpl constructor to use TYPE _ ERROR _ THROWER _ SETTER and TYPE _ ERROR _ THROWER _ GETTER
fix issue with scroll on macos. http : / / github. com / codenameone / codenameone / issues / 207
added null check for callerloopscope in graphdecoder.
test : migrate sniperjavaprettyprinterjavaprettyprinter to junit 5
refactor URLOutputStream initialization to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added @ Entity annotations to Mail. java to enable the Mail class to be annotated with Entity to facilitate database interactions
updated the default value of the " includeTablespace " option from " false " to " true " to ensure tablespace is included based on
added getter methods for ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` in ` CountersReader. java ` to provide access to
added functionality to check for non - empty files in ScanBatch. java and created a test case in TestJsonReader. java to ensure proper
added null check for internal name before failure handling in StringSubject. java and updated assertions in StringTest. java to improve robustness of failure
[ pytorch ] fix ` ` lib. so ( )'' to ` ` lib. dylib''
updated exception handling from ClassNotFoundException and NoClassDefFoundError to a more general Exception in JrtJavaBasePackages and PackageHelper to improve error handling by
hbase - 25801 add safemode check to master filesystem ( chaoyu tang )
updated error message format in TranslatingJavacPhaseTracer. java to include class name and exception message to improve clarity of error messages
remove unused plugindescriptor clone method from defaultplugincache
don't fire presencechangedevent for contact that don't exist resource
remove servletrequestdetails. withresourceandparams since it be no longer use
added a new file AccountInfoFetchIntegration. java to facilitate fetching account information from BTCE exchange
added mouseWheel method to VDUInput and vt320 classes and updated TerminalView to handle mouse wheel events to enhance user interaction by allowing custom
updated library path handling in Natives. java to ensure correct library path is used based on user preferences
no effective change - remove deprecate annotation
don't set playersskinflags in metadataindex.
updated LoadBalancerWithServiceTests to use SLF4J Logger and modified service invocation logic to improve logging clarity and simplify service setup
refactor member creation in MapService. java for consistency to improve code readability and maintainability
replaced direct system property retrieval with AccessController's doPrivileged method to improve security by using a secure system property
changed fileSuffix from static to instance variables in TemplateEngineFreemarker. java to allow configuration of the file suffix dynamically
updated hash code calculation in SelectMessageQueueByHash. java and added new test cases in SelectMessageQueueByHashTest. java to improve
ggb - 1975 fix : animation don't work in toolbar
replace bindConditionally with bind. when ( hasCaret ). bind ( area. caretColumnProperty ( ), hasCaret ) to improve
updated Cxx platform handling to include declared platforms in multiple classes to improve accuracy in determining platform relationships
replaced SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator and JpaQueryExecution to standardize parameter handling across the codebase
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added support for array types in DataUtilities and created a test for default values in DataUtilitiesTest to ensure proper handling of array types and validate
updated SSL engine creation logic to handle null address cases to improve robustness by ensuring proper host name verification
testfstabledescriptors : assert ( count * 2, count * 2 + 1 ) > = count * 2
danielwagnerhall for delete cooky in the ie driver
added a boolean flag to track if the launcher transition has ended to ensure proper handling of launcher transitions when the gesture state changes
updated HTML content encoding in HTMLListWriter and HTMLWriter to ensure proper handling of character encoding for better compatibility
refactor IndexReader class to improve code readability and maintainability
increased the maximum value of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 in multiple files to accommod
updated the addition of the arrow button in BasicComboBoxUI and added a new bug6337518 class to ensure proper functionality of the JComboBox
refactor TestRandomAccessBuffer class to improve code readability and maintainability
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added notification for content URI changes in multiple services to ensure that changes are only sent when the content provider changes
added functionality to invalidate pressed or focused backgrounds in ` BubbleTextView ` and ` Launcher ` to improve user experience by ensuring appropriate background
updated ` getFallbackResponse ` method signatures to include an ` Throwable ` parameter across multiple policy classes to enhance error handling by associating exceptions with
simplified conditional check for ` _ dest _ dir ` in ` DumpBytecode. java ` to improve code readability and maintainability
added null checks before accessing tags in ChannelUri. java to avoid potential NullPointerExceptions when tags are null
updated JAVA _ REGEX _ SPECIALS string format and added SQL pattern assertions in TestSqlPatterns to ensure correct handling of special characters in SQL
added functionality to update the action bar title in FileActivity to ensure the action bar title reflects the current state of the file
updated method call from ` getOnlyElement ` to ` getLast ( convertedElements ) ` in ` PythonDslProjectBuildFileParser. java `
change hour and minute from " * " to " 0 " in CleaningService. java to ensure that the clean service starts with a default value
updated TransactionalValidationListener to handle partition retrieval for partitioned tables to improve accuracy in validating partition data for partitioned tables
hbase - 25827 fix javadoc warning in replicationhandler ( addendum )
changed ` generatedKey ` from ` int ` to ` long ` and updated SQL execution to use ` RETURN _ GENERATED _ KEYS `
updated variable name from'proxy'to'_ rc'in SimpleReferenceCache. java to improve clarity by using a more descriptive variable
updated test failure messages to include " failed to inline : " to improve clarity and accuracy of test failure messages
updated the default values for keepAliveTimeoutShared and keepAliveTimeoutCustom in WebClientFactoryImpl. java to improve configuration clarity and ensure proper handling of null
deleted the HttpTestAccount001. java file to remove unused test cases
changed exception handling from Exception to Throwable in Dispatcher. java and updated DispatcherTest. java with a new test case to improve error handling and ensure
camel - 7999 : don't set cxfdataformat. cxf _ message when use camel - cxf
added a case for the'~'character in ClientUtils. java to handle the case'~'in the client configuration
camel - slack : allow to configure a delay in slack consumer.
fire blockharvesting event instead of block. getdropped
updated layout spacing in TranscodingTab. java and corrected a string concatenation in the JCheckBox message to improve layout spacing and ensure proper string concatenation for
added a new file ` bug8057791. java ` that implements a JList with a specified color to address bug 8057791
modified flags handling in LambdaToMethod and added a new interface LambdaInterfaceStaticField to improve code clarity and ensure proper handling of static fields
refactor subscription manager creation in RunnerBuilder and add a test for EthSubscribe availability in RunnerBuilderTest to improve code clarity and ensure Eth
updated null check from ` to. length ( ) > 0 ` to ` to! = null ` to improve code robustness and prevent potential
refactor ParquetFixedWidthDictionaryReaders to conditionally handle reading records based on the dictionary to improve performance by avoiding unnecessary try - catch blocks when
refactor code to use ` dividerScale ` instead of ` dividerBar ` for better clarity to improve readability and maintainability of the code
shenyu - examples / springcloud / aop - springcloud - aop and springcloud - aop
updated the thread dumping logic in QueuedThreadPool. java to improve clarity and correctness of thread state representation
renamed ` keyType ` and ` valueType ` to ` implementation ` in ` CacheGenerator ` and ` CacheProvider ` to improve clarity and consistency in
added totalFrameSize ( ) to the createReferenceMap method in FrameMap. java to ensure the reference map uses the correct total frame size
refactor TypesafeConfigurator class to improve code readability and maintainability
camel - graphql : added unit test base on user forum issue
updated method names and added BigDecimal initialization in RFE2891944. java to improve clarity and functionality of the code
don't use ` ` utf - 8'' in url encoding
replaced the unsupportedPlatformTool implementation with a new ` UnsupportedPlatformTool ` class to simplify the class structure and improve code readability
changed the type of loopCount from double to int and updated recovery retry duration to improve accuracy in recovery retries by using a more precise timeout
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
( chore ) camel - jbpm - address - manager : use reflection to avoid reflection.
removed unused imports and updated layout constraints in VLCVideo. java to streamline code and improve layout consistency
use bitsquare / bitsquare instead of bitsq / bisq
updated AUTHORITY string from " com. klinker. android. talon. provider " to " com. klinker.
updated user configuration directory to include " /. m2 " and modified file handling in MBoot. java to ensure compatibility with m2 and
added glBindBuffer method call in VertexBufferObjectWithVAO. java to enable buffer binding for improved performance
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate easier updates
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily skip tests that are not ready for execution
added default headers management in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration by allowing customizable header values
add error response to userpassnotvalidexception
deleted the NoOpConfigPathGetter. java file to remove unused code that is no longer needed
replace Codec. base16Decode with Bytes. fromHexString in EngineAuthService. java to improve compatibility with Apache Tuweni '
replaced CascadedStyle with CSSName and added checks for null or empty values in FloatUtil. java to improve styling accuracy and ensure proper
planning - planner - planner - planner - planner - planner - planner - planner - planner
updated the ` getDefaultHeaders ( ) ` method to return a ` MultiMap ` instead of creating a new ` MultiMap'map
mondrian : replace string with charset in proxyserver and realm.
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced ` compareTo ` method calls with ` Long. compare ` in ` ExpandableUploadListAdapter ` and ` FileStorageUtils ` to improve code
change log level from error to debug for jdk client
updated import statements in LegacyAuthenticationHandlerAdapter . java to refine dependencies to enhance clarity and remove unnecessary imports for better maintainability
changed the access modifier of the WingDings class from package - private to public to allow access to the WingDings class from
don't remove invalid filter from the network if it's the owner of the filter
add wrap ( inputstream ) method to pgpkeyring to allow subclassing of inputstream
use bufferedoutputstream in minimallockingwriteaheadlog
added unit test for selecting rows from a view in TestJdbcDriver2. java and modified column names handling in HiveBaseResultSet. java to
refactor FocusTransitionTest class to improve code readability and maintainability
replace org. gwtproject. core. client. GWT with com. google. gwt. core. client in ShareControllerW. java
added a null check for sourceTask before retrieving counters to avoid potential NullPointerExceptions during job execution
removed unnecessary whitespace in HttpInput. java to improve code readability and maintain consistency
refactor color change logic in AppearancePanel to use ColorSelectionModel and ChangeListener to improve code clarity and maintainability by encapsulating color change
updated the constructor call in TaskHelper to use'hidden'instead of'false'to ensure proper handling of the'hidden'parameter in
fix intermittently fail test
pdfbox - 4071 : close randomaccessfile in createfromrandomaccessimpl ( )
added import statement for DefaultParameterHandler in LanguageDriver. java to enable proper handling of default parameter handlers in the scripting framework
lsra : optimize spill : don't optimize spill position
add support for groovy compilation in micronaut ast transform
refactor PgResultSet and PgStatement to use closeInternally ( ) method to ensure proper resource management and prevent potential memory leaks
changed the default value of serviceAdvisorType from null to PYTHON to ensure that the service advisor type defaults to Python
refactor resolver management in GenericDatumReader to use a ThreadLocal for thread - safe access to improve performance and scalability of the code
changed ` Collection ` to ` List ` for ` Path ` and ` PdfContentStreamProcessor `, ` PdfCleanUpContentOperator `,
updated memo size calculations in SendCoinShieldTest. java to improve test accuracy by using a random byte array
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalization based on date and locale to enhance the
removed redundant line break in CodeGenerator. java to streamline code for better readability and maintainability
updated scroll parameters in multiple classes to use new Rect instances instead of 1 to improve code clarity and reduce potential errors in gesture calculations
changed the visibility of the ` pointer ` variable from private to public and added reset methods to the ` FlatRecordReader ` class to allow external access
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
fix : castexpression don't implicitly cast to boolean type
replace ArrayList with a boolean variable acceptsAll and update related logic to improve code clarity and ensure proper handling of accepted media types
added a new boolean variable'false'to TaskView. java to ensure proper initialization of the TaskView class
added ` isAutoIncrement ` method to ` LiquibaseDataType ` and declared ` @ Override ` in ` LiquibaseDataType ` to ensure
added a default value for the errorText variable to provide clearer feedback on command failures due to Internal Server Error
updated imports and modified command - line arguments in LocalManagementTest. java to utilize ProcessTools and improve performance measurement options
replaced ` add ` method with ` push ` method in ` BasicEventSimulationEngine ` to improve clarity by using a more descriptive method name
added support for ajp port configuration in GitBlitServer. java and updated related methods in GitBlitServer. java to ensure proper
added type erasure logic in TransTypes. java and created a new Intersection03. java file with a test case to ensure proper type handling
rename the EmbeddingTest class from EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread conditionally to ensure that the toolkit thread is only started when the current thread is active
add an option to compress a collection of localization in parallel.
hide surface and surface in papplet. setvisible ( true )
updated the tempDir initialization in AbstractRecordExtractorTest to use getClass ( ). getName ( ) instead of " RecordTransformationTest " to improve clarity
added support for enabling full and solidity node HTTP settings in the application to enable or disable HTTP features based on configuration
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and modified the ` GoogleCloudFirestoreTicketRegistry ` to include
refactor methods in Generate. java to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] fix scalar function with null argument
updated BadgeRenderer to use a constant for dot - only size calculation and modified FOLDER _ ICON _ PALETTE initialization to improve code
removed the'final'modifier from the'getConfiguration'method in FreemarkerManager. java to allow modification of the'getConfiguration
added unit test for invalid exclusion of package name patterns in OgnlUtilTest. java to ensure that the application correctly handles invalid package names
updated device Udid assignment logic to differentiate between macOS and iphone platforms to improve accuracy in determining the simulator Udid based on the selected platform
updated exception handling in DefaultHttpClientFilter and TestDefaultHttpClientFilter to improve error reporting and ensure proper response types
added null checks for mScript before binding and executing mInvokeResetWAR to ensure proper execution of mInvokeResetWAR when mScript
added a conditional check for TEXT _ BURN in Utilities. java to ensure shadow effects are applied only when the text is burned
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of temporary tables and views after tests
added parser retrieval in SecurityNamespaceHandler to enhance functionality by allowing dynamic configuration of parsers
updated the condition in the ` BoundedLocalCache ` class and added a new test for ` fastpath ` in ` BoundedLocalCacheTest `
updated the ` RawConnection ` interface to extend ` WebSocketConnection ` and added flushing functionality to improve connection handling and ensure proper flushing of
added multiple test cases for assertions in SoftAssertionsPerfTest to ensure correct behavior of assertions in the soft assertion framework
added a constant for TEST _ FAILURES _ EXIT _ CODE and updated the execute method in PythonRunTestsStep to improve error handling and ensure
refactor GlyphLayout to store glyphs in a variable before processing to improve code clarity and ensure proper handling of glyphs when markupEnabled is
refactor assertions in TestBooleanRewrites to use streams for comparing scores to improve readability and maintainability of the test code
updated enumClass assignment to use getSuperclass ( ) instead of getEnclosingClass ( ) to ensure correct class hierarchy for anonymous classes
remove unnecessary cast to playerconnection in updatemanager and connectionmanager
added a check to prevent multiple invocations of OnDrawListener in Launcher and LauncherAnimUtils to improve performance by ensuring listeners are only registered once
refactor multiple classes to improve code organization to enhance maintainability and readability of the codebase
solr - 9143 : fix replicaassigner to return null for not _ applicable node
changed the default return value of getBoolean for MEDIAPARSERV2 from false to true to ensure that the media info parser is only valid
add support for round _ type annotation in aop proxy
added assertions for table existence and permission verification in FolderPermissionBase. java to ensure that operations are performed on the correct partition
add multichat operation set definition and gibberish protocol provider state change.
updated color generation logic in PastelColor. java to enhance variability in color generation
refactor ScriptEngineFactory class to improve code readability and maintainability
updated bitmap creation methods in HolographicViewHelper to include original and outline dimensions to enhance visual representation by utilizing original and outline dimensions
refactor request method handling to use ` fromString ` for better null safety to improve robustness by avoiding potential ` NullPointerException `
improve the performance of multword preprocessor
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
modified class loading logic to conditionally use the output format class to enhance flexibility in determining the output format class
refactor ChunkListener, AfterChunk, and BeforeChunk classes to improve code readability and maintainability
updated the null and length validation logic in DOMBuilder. java to ensure proper validation of input lengths to prevent potential ArrayIndexOutOfBoundsException
updated method calls to use HierarchicalUndirectedGraph and modified edge retrieval to improve compatibility with HierarchicalGraph and enhance clarity in error messages
camel - 15836 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region,
added a new file ` PublicStaticInterfaceMethodHandling. java ` implementing interfaces with static and default methods to demonstrate the use of default methods in
camel - 16400 : added support for property placeholder in keyselector to make it easy to configure keyselector.
fix a bug in the log resolver
from application application
updated JGit version from " 1.0. 0 ( 201109151100 - r ) " to " 1.0. 0 ( 201109151100
fix npe when use @ client annotate with @ clientpath
introduced support for ` ` < transformer >'' namespace
rename BACK _ FACTOR to REWIND _ TIME and update related conditions in ResumeObj. java to improve clarity and accuracy of duration
added a method ` isScrollWheeling ` to ` CodenameOneImplementation ` and its implementation in ` Button ` and ` JavaSE
updated usage formatting in UtilityCommands and DocumentationPrinter classes to improve code readability and maintainability
fix typo : ` ` collection. map''
update crossspacecompactionselector to use mergefiles [ 0 ] and unseqFiles [ 1 ]
removed redundant @ Override annotations in Observation. java to improve code clarity and maintainability
update the projet according to preferences to ensure that the project's ruleset reflects changes in preferences
don't wait for phantom class to be load
add name convention to elastic meter registry ( # 2373 )
added methods for listener listeners and command creation in IController and updated BackendAPI to use IController instead of AbstractController to improve modularity and
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify rendering of a huge horizontal rule in the
replace System. out. println with TTY in TypeSystemTest. java and PartialEscapeAnalysisPhase. java to improve code consistency and maintain
updated import statements in multiple Java files to improve code clarity and maintainability
changed the condition from checking for frame length to checking if it is less than zero to ensure that the frame length is valid before proceeding
added return statements for zeroValue in IntFloatMap and IntIntMap classes to ensure proper handling of zero values in the map
fix npe in imagedownloadservice when resize the component form
added null check for registered variable in HandlerRegistration. java to prevent potential NullPointerException when registered is null
removed native method ` hasNextSibling ( ) ` from ` AttributeNode `, ` DocumentNode `, and ` IeNavigator ` classes to
added null check for results in RedisDistributedMapCacheClientService. java to avoid potential NullPointerException when results is null
updated log messages in MobFileCache. java to clarify cache configuration to improve clarity and understanding of cache behavior
refactor ColConvCCMTest class to improve code readability and maintainability
replaced the use of ` source. allowCovariantReturns ( ) ` with a new variable ` allowCovariantReturns ( ) `
pdftext stripper by area ; addencoding ( ) to getregions and getcharacterlist
replace Float. toString ( ) with asString ( ) in Json. java and add a new class X with JSON serialization and deserialization methods to improve
camel - 16400 : camel - ftp : don't try to write to file if there be an error
added EventQueue. invokeLater call in bug6638195. java to ensure that allInvoked ( ) method runs on the Event Dispatch Thread
updated the maximum size calculation in CompressExtension. java to ensure proper handling of text message sizes
update steering value calculations in TestAttachDriver and TestFancyCar and TestPhysicsCar to improve accuracy of steering values
replaced ` Arrays. equals ` with ` MessageDigest. isEqual ` in ` PasswordEncryptionService. java ` to improve performance by using a more efficient
updated JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp conversions to improve accuracy and consistency in date and timestamp handling
updated the VERSION constant from 2 to 3 and modified metadata reading logic to ensure compatibility with the latest metadata format
refactored FlywayInitializerJpaDependencyConfiguration to conditionally use LocalContainerEntityManagerFactoryBean and AbstractEntityManagerFactoryBean to improve configuration flexibility and
added a call to sorted ( ) in ClassesImpl. java to ensure that the classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated related logic in ` AbstractLauncherUiTest ` to improve
refactor SharedInformer class to improve code readability and maintainability
8u172372 : fix jdk. internal. foreign. memoryscope test
increased the timeout duration of the test method from 50, 500, and 5000 to 5 seconds to improve test stability by allowing more time for
updated CaptchaChannelProcessorTests. java to enhance test coverage for Captcha functionalities
fix a bug in the metadata import where the owner of a collection don't have a collection
added retry mechanism for saving cache files in AbstractRegistry to improve reliability of cache file operations during retry
updated the initialization of TrackingDirectoryWrapper to use the correct directory parameter to ensure that the TrackingDirectoryWrapper uses the correct directory for tracking operations
fixed bug 1188372 - unusedimports no longer report false positive
added validation in HiveIcebergStorageHandler to prevent insert overwrite queries on partitioned Iceberg tables
updated assertions in BootstrapTests to check for legacy SAML keys to ensure correct handling of legacy SAML keys in the configuration
ignore non - static local field in excluder
don't return an empty vector if there be an unexpected e - mail address
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT from CommentsParser. java to
modified the release method to throw an IOException and added a new LockReleaseFailedException class to improve error handling and ensure proper resource management
change package from ` org. springframework. batch. test ` to ` org. springframework. batch. test ` to ensure compatibility with
added a condition to check if the current node is a unary operator before transforming the expression to ensure that the transformation only processes non - unary
updated ByteBuddy initialization to use TypeValidation. DISABLED to disable type validation for improved performance
replaced DeclaredType with TypeElement in AnnotationSetScanner and related methods to simplify type handling and improve code clarity
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and modified timeout values in MySQLTableLock
allow loggingapplicationlistener to reference system property's log file
added redirect handling in ServiceApiRequest by introducing isRedirect method and modifying request method parameters to improve reliability of HTTP redirects by ensuring
added constants for SERVICE _ MAPPING and VERSION _ MAPPING in MicroserviceConstants and MicroserviceFactory to improve code clarity and maintainability by
updated method call from ` proc. getName ( ) ` to ` proc. getBeanName ( ) ` in ` ToeThread. java `
updated DB _ PATH _ REGEX to static final String and modified database operations to ensure consistency and accuracy in database path handling
updated return statement to use HomeDataSource to retrieve unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a ` @ DisabledForJreRange
modified the ` getAllOrder ` method to accept a ` limit ` parameter and introduced a constant for limit in the ` Parameter ` class to allow
refactor user retrieval logic in HomePage. java to handle null cases to improve robustness by preventing potential NullPointerExceptions
fix localfilesystem. match (.. ) to match relative wildcard path
added MAX _ WIDTH and MAX _ HEIGHT constants and updated bounds handling in ComponentBuilders. java to ensure that dimensions do not exceed defined maximum dimensions
added logging functionality and deprecated the ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer ` to improve debugging capabilities and ensure proper timeout settings
updated error handling in PrintController. java to include exception details to improve error reporting for document creation failures
refactor ` hashed _ filename ` to use lambda expressions to improve code readability and maintainability
added number validation in SpellChecker and created a corresponding test in SpellCheckerTest to ensure proper handling of scientific notation in number processing
updated the MESSAGE constant value in HelloWorld. java to ensure consistency in message formatting
refactor file action handling in FileDisplayActivity to improve code readability and maintainability
hbase - 25827 add daemon flag to replicationhandler so that it don't interfere with the daemon thread
updated the recid parameter in the update method call to ensure consistency in data handling
refactor StreamerLoader constructor to use a more descriptive variable name to improve code readability and maintainability
added support for " Core Library for LibGDX " and improved error messages in DependencyBank. java to enhance the game's functionality and
added maximum recycled views for various grid types in AppsContainerRecyclerView to improve performance by reducing the number of views in the recycler view pool
added a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest. java ` to ensure proper handling
update examplebaritonecontrol to show good message when there be no waypoints
added imports for ParsedNode, ParsedNodeException, and ResourceAccessor in CreateProcedureChange. java to enhance functionality by integrating ParsedNode and
added null bitmap handling in FilterOperatorUtils and created a test for range filtering in NullHandlingEnabledQueriesTest to ensure proper handling of null values
added validation for bootstrap method signature demands and arguments in JDynamicInvokeExpr. java to ensure correct argument types and improve error handling for bootstrap
( chore ) camel - jms : fix unit test on window
removed the clear method call from runtimeOptions to streamline code by eliminating unnecessary method calls
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and updated related code to ensure proper type
updated workspace label adjustment logic to conditionally hide workspace labels based on cell size to improve user experience by ensuring workspace labels are only visible when appropriate
updated assertions in ReplicationFactorTest to use assertRf ( ) method to improve clarity and consistency in assertion messages
llvm should not be initialize during pre - initialization
removed JUnit Ignore annotations from ChaosMonkey tests to streamline tests by eliminating unnecessary dependencies
replace RuntimeException with JsonIOException in error handling to improve error handling by using a more specific exception type
replaced Integer. valueOf ( values [ 0 ] ) with Integer. parseInt ( values [ 0 ] ) in VisualScoreTagTest. java to
updated error messages from " Unable to create " to " Unable to copy " to improve clarity and accuracy in error reporting
refactor segment name validation to use a helper method to improve code readability and maintainability
added multiple ` startActivity ` methods to ` ShadowFragment ` and created corresponding test cases in ` FragmentTest ` to enhance fragment functionality and ensure proper
modified the way the current time is calculated in DueDateBusinessCalendar. java to ensure accurate date calculations by using the current time from the clock
updated the return statement to include " - target " with a value of " x86 _ 64 - none - linux - android " to enhance
added a method to delete all account files in FileDataStorageManager and integrated it in ManageAccountsActivity to ensure proper cleanup of account data during
updated the command format in SchemaCrawlerCommandLine. java from " -? " to " - h " to improve clarity and consistency in command
added a static factory method ` createSuiteDescription ` and updated equals methods in ` TestDescriptionTest ` to improve test coverage and ensure unique IDs
replaced usage of Hashtable hints with MultiFormatReader for decoding to simplify code and improve readability by using a unified MultiFormatReader
removed the unused ` ImmutableList < String > sources ` parameter from ` BuckTarget ` and related classes to streamline code by eliminating unnecessary
added unit tests for the ` getRange ` method in ` GWCZoomContextFinderTest ` to ensure correct range calculations for different zoom contexts
added support for dependency tracking in JRubyScriptEngineConfiguration to enablement of dependency tracking based on configuration
updated request method from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter. java ` to ensure correct servlet
patch by jbellis ; patch by jbellis for cassandra - 173
fix for splash screen background image in macos
fix for rtl2832 tuner not be able to resubmit transfers
added HasTests interface to AbstractShBinaryDescription and implemented a new test for shBinary functionality to enhance test coverage and ensure proper functionality of sh
added a condition to include " db : hsqldb " in TestFilter. java to enable support for the HSQLDB database in the
removed unnecessary whitespace in JavabinLoader. java to improve code readability and maintain consistency
trufflestacktrace : don't materialize exception if it's empty.
refactor service loading and export logic in GraalServices. java to improve clarity and maintainability of service loading logic
add unit test for duplicate command handler resolution
[ flink - 20865 ] [ stream ] allow fine - grained resource management in batch mode
fix fish not be able to place block outside of their bounding box.
( chore ) camel - ftp : fix javadoc warning in camel - ftp
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
renamed the variable ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` to clarify the purpose of the variable
added a check to return early if no items are available to optimize performance by avoiding unnecessary processing when no items are available
added a conditional check for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure that the bean is only registered when
log4j2 - 1343 : xmllayout don't escape character in tostring ( )
added a new constant ` OMIT _ HEADER ` in ` CommonParams ` and implemented the ` remove ` method in ` NamedList ` to
updated property retrieval method in EscherProperty. java and added unit tests in EscherSimpleProperty. java and EscherComplex
updated method call to use ` Description. getBuildRuleType ( key. getSimpleName ( ) ) ` to ensure consistent retrieval of the build rule type
modify the hierarchy of the method numberer in the SootClass to ensure that the method numberer correctly reflects the current scene hierarchy
fix npe in tradedatavalidation. testifdisputeriesreplay ( )
added ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified methods in ` DatabaseSchemaCrawler ` and ` TableRetri
wallet : add not _ seen _ in _ chain to send tx.
allow @ requestbody annotation on @ httpserver and @ httpserver annotation on client
don't attempt to parse config / factories / constants. json if they don't exist
hbase - 24523 addendum to catch exception in hregion. open
refactor null and empty checks in Credential. java to improve code clarity and prevent potential NullPointerExceptions
[ java ] don't check for image correlation id when check for subscription image.
[ hotfix ] [ test ] don't invoke destroyforcibly in testjvmprocess
added a check for Oracle alongside MariaDB in the conditional statement to ensure compatibility with both MySQL and Oracle databases
camel - mail : don't try to connect to mailboxstore if not connect to mailboxstore
added token validation in the parser to ensure there are more tokens in the query that have not been consumed
camel - 16400 - aws - translate : list all the available language in the enum - start with ` ` g'' complete
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified model creation logic in the ` Voice ` class to
added email domain functionality to the LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable flexible email settings in the identity provider
added new timeout constants and methods to retrieve timeout values from properties in ViewRegistry to improve configurability and allow for configurable timeout values
api : don't try to process concept link when it's empty
added RedisCategory import and annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
updated the ` findDeprecatedUses ` test to use ` @ NullAndEmptySource ` and modified the ` doNext ` method to handle
added a call to the superclass's paintComponent method in OverlayPanel and modified mImageHeight in WaterfallPanel to ensure proper rendering of
removed unused imports from multiple Java files to clean up the code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule and ContractEventTrigger classes to improve clarity and functionality of event signatures
updated filter condition from " contains " to " endsWith " in FileTestHelper. java to improve clarity and accuracy in session file naming
fix issue with mapview. clearregion ( ) and mapview. fillRect ( )
don't report compilation error when there be no invoker
- remove unused code , printlns and add copyright notice to graph editor for plugin
added a conditional check for NaN scores before assertions in TestFieldCacheSort. java to ensure tests are only executed when the score is NaN
use set. copyof ( ) in devicestate. getentitykeys ( )
added zeroTime method to ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure proper handling
rename ` offerMultiSigPubKey ` to ` offererBtcPubKey ` in multiple files to align the contract
updated the type parameters in FunctionAllGroupHeadsCollector, FunctionFirstPassGroupingCollector, and FunctionSecondPassGroupingCollector to use wildcard types
[ drools - 1752 ] add unit test for ksession6
updated the constructor of HiveMetaStoreClient to include'this. conf'to ensure proper context is used for the HiveMetaStoreClient instantiation
added a conditional check to return early if modalness matches to improve performance by avoiding unnecessary processing when modalness matches
added unit test for CodecCapabilities creation based on the profile level to ensure correct handling of video formats based on their profile level
fix # 5460 : when enter key use, focus be wrong
added validation for width and height in SunVolatileImage and improved error handling in X11SurfaceDataProxy and XRPMBlitLoops
updated the thousands separator from ". " to " \ u00a0 " in FormatData _ uk. java to ensure correct formatting for
replaced array of integers with an array of AtomicInteger for thread safety to enhance concurrency handling and ensure data integrity during parallel execution
added menu visibility based on beta flavour settings in AchievementsFragment and LeaderboardFragment to improve user experience by displaying appropriate
updated SearchMethodVisitor to set access, name, and desc from the context to ensure accurate retrieval of access, name, and description from the
added sleep calls and modified exception handling in IoTDBInsertWithoutTimeIT. java to ensure proper timing and error handling during database operations
refactor code for improved readability to enhance maintainability and clarity of the code
camel - core - resourcedefinition and streamresequencerconfig should not require a name attribute
fix npe in tablereader. read ( )
flume - 2905 : remove keymanager - type and trustmanager - type from thrift rpc client
replaced ` JavaIsoVisitor ` with ` TreeVisitor ` in ` PrimitiveWrapperClassConstructorToValueOf. java ` to streamline code
added exit ( ) method and condition for tab key handling in Blockmania. java to improve user experience by ensuring proper exit behavior when
changed access specifier constants from PACKAGE _ PRIVATE to NONE across multiple files to ensure consistency in access specifications across the codebase
renamed the method from ` unHandled ` to ` unhandled ` in ` Check. java ` and added a new test class ` T99
refactor stripe stats assignment logic in OrcInputFormat. java to improve code clarity and maintainability
added a null check for the variable'ex'to prevent potential NullPointerExceptions during execution
update myhentaicomics. com url to https : / / myhentaicomics. com
added argument checking and output for current jar version in App. java to ensure the application uses the correct jar version when available
replace split method with splitTokens method in Sketch. java to improve clarity and consistency in handling token splitting
added rotation handling in ConsoleActivity and updated input connection handling in TerminalView to improve user experience by allowing customizable rotation settings
changed the type of the ` hq ` variable from ` PriorityQueue ` to ` PriorityQueue < ScoreDoc > ` and added a ` @ Suppress
added a null check for ownerConnectionAddress in ClientSmartListenerService to avoid potential NullPointerExceptions when ownerConnectionAddress is null
camel - 4687 : added support for the ` ` headersmapfactory'' property on camel - core
updated formatting in JavaCompiler. java and Diagnostic. java to improve code readability and maintainability
introduced setter for jmsmessagefactory and jmsmessagechannel in jms outbound gateway
updated the index in the condition from i + 1 to i2 in ArrayFunctions. java to correct the index used in the array replacement logic
updated class loader creation logic and added error logging in ` AbstractScriptProcessor ` and ` InvokeScriptedProcessor ` to improve error handling and enhance
updated PooledConnectionImpl to use org. postgresql. PGStatement for prepared statements to ensure compatibility with the new PostgreSQL dialect
make sure memtable and size estimation be refresh before test
changed log level from error to warn in AtomicRemainder. java to improve clarity of log messages regarding fragment limits
don't sort the candidate's min timestamp when calculate ttl expiry
fixed - rblockingqueue. poll ( ) and rblockingdeque. poll ( ) method throw npe if timeout = = 0.
updated printMap method calls to use consistent formatting to improve code readability and maintainability
refactor Engine class for improved readability to enhance maintainability and facilitate future updates
refactor child retrieval to use ` entrySet ( ). stream ( ) ` instead of ` Stream. of ( children. values ( ) ) `
[ issue # 1868 ] fix aclclient to use access key ( # 186 )
changed the condition from numIndexDims to numDataDims in BKDWriter. java to ensure correct handling of data dimensions
[ zeppelin ] fix npe in notebookserver
updated ExpressionNodeEvaluator to use'lt'instead of'funN'to improve clarity and functionality of the ExpressionNodeEvaluator
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor. java ` to
server : improve error message when fail to create snapshot policy
changed access modifiers of several methods from public to package - private to allow access to these methods from outside the ItemWriter class
added " test " to the mocked ThingImpl in RoombaHandlerTest. java to ensure that the mocked thing behaves as expected in the test
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and created a test for ` toString ( ) ` in ` ImageName
replaced FSDirectory with RAMDirectory in TestNorms. java to improve performance by using a more efficient RAMDirectory
added a check to ensure mLineHeight does not exceed the screen size to improve performance by avoiding unnecessary calculations when text area exceeds the screen size
refactor WalletAppKit class to improve code readability and maintainability
don't use nashorn engine if it's not available
chattransportselectorbox : remove menu item from the buttongroup when remove the transport menu
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` and ` Context ` classes to enhance functionality by allowing
don't set bsqblockchainexplorer if it's null
added attributes management functionality to the StandardSession class to improve session management and facilitate attribute management
added assertions to verify the type of the returned plain bean in TestDbJson _ List. java to ensure that the retrieved plain bean is correctly
updated the averages array from pageSize to initialPageCount to ensure the averages array accurately reflects the initial page count
refactor BatchCommandLineLauncher class to improve code readability and maintainability
added support for HSQL and JdbcTransactionManager in BatchMetricsApplication to enable integration with HSQLDB in the application
remove unauthenticatedhttpservice interface from glowrootloghttpservice
pdfbox - 4892 : fix regression in pdfbox - 4892
removed unnecessary synchronized keyword from DocumentsWriter and added a refresh call in DocumentsWriterPerThread to improve thread safety and ensure proper resource management during index
added methods for retrieving and setting multiple choice options and validation constraints in UiBinding. java to enhance UI component functionality for better property management
updated method calls from ` setReflectively ` to ` setReflectively ` across multiple files to ensure consistency in method usage and improve
bugfix : only update the stored copy of the sub tree for a full save
ignore testalldictionary. testalldictionaries. testalldictionaries. testall ( )
updated the instantiation of KrakenMakerFees and KrakenTakerFees in KrakenAdaptersTest. java to
removed import of CharTermAttribute from DefaultIndexingChain. java to streamline code by eliminating unused imports
refactor NBJavacTrees class to improve code readability and maintainability
added a check for unsupported data encoding in VectorizedPrimitiveColumnReader to ensure proper handling of unsupported data encodings
added SLF4J marker logging and modified conditional checks in HttpSolrCall. java to enhance logging clarity and ensure consistent logging practices
added a call to destroyMetadataServiceProxy to ensure proper resource management during service instance destruction
fix infinite recursion in defaultentityqueryrepository. getlvlfilter ( )
updated HubChangeExecListener to conditionally display messages based on the presence of a changelog to improve clarity in error messages when no changes are registered
added support for the ` TRY _ HARDER _ HINT ` hint in the ` AbstractBlackBoxTestCase ` to enhance error handling
replaced ` int ` with ` ProcessExecutor. Result ` in ` CxxPreprocessAndCompileStep. java ` and added a new test in
updated event limit calculation and loop condition in ObjectStore. java to ensure proper handling of event limits during query execution
refactor validation logic in ValidatedLocalValidatorFactoryBean to improve clarity and maintainability of validation checks
don't clear temporaryblockentities in entityawareworldprovider. cleanup ( )
intrinsification : remove redundant type check from intrinsificationarraycopyphase
don't set log level to all in test
replaced the ` WantedAnywhereAfterFollowingInteraction ` class with a new ` WantedAnywhereAfterFollowingInteraction ` class to
added null checks for owner address and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that only valid accounts are
replace Comparator with TreeMap for sorting command elements to improve performance and maintainability of command retrieval
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
changed property assignments from ` addProperty ` to ` setProperty ` in ` BaseSingleTreeBuilder. java ` to improve clarity and consistency in setting properties
updated AsmLoader initialization to use interfaceClass's class loader to ensure proper class loading by using the correct parent class loader
pdfbox - 4892 : avoid npe in type1charstring, pdfbox - 4892
modified print statements in Java2TypeScriptTranslator to conditionally include " declare " or " namespace " based on whether the class is definitionScope
replaced the EmptyServerHandler with an AbstractHandler in HttpClientTest. java to ensure proper handling of server requests during testing
updated listener names in HelloInput. java for consistency to improve code readability and maintainability
added a null check for the lhs variable and used the findRoot ( ) method to improve robustness by avoiding potential null pointer exceptions
refactor package structure in multiple test classes to improve code organization and maintainability
refactor image creation logic in AwtCanvas. java for improved clarity and efficiency to enhance readability and maintainability of the code
[ gr - 205362 ] use jvmci native image location qualifier in libgraal.
[ beam - 8470 ] remove dataflowportabilityapiunsupported. class usage in pardotest
chore : update java microgenerator to 1.0. 2 add request initialization to sample code ( # 388 )
added serialVersionUID to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these enum classes
refactor CallStack class to improve code readability to enhance maintainability and ease of understanding
log warn if max size of per node don't allow any data in map
updated return statements to use " LST " instead of " AST " across multiple files to ensure consistency in terminology across the codebase
updated scoreable calculations in ThreadedAcousticScorer. java to improve accuracy of scoreable calculations
replace AssertionError with null return in NetHooks. java to simplify error handling by returning null instead of throwing an AssertionError
updated method calls and variable names in ApplicationControllerFluentLeniumTest. java to improve clarity and consistency in accessing window properties
added default ` makeString ` methods to ` ParallelIterable `, ` RichIterable `, and ` AbstractMultiReaderMutableCollection ` to enhance
replaced the constant ` HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` OidcServicesManagerRegistered
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated validation logic to enhance the flexibility of weak associations by allowing rules to
modified the Deflater class to improve compression efficiency
added a try - catch block to handle exceptions and throw an IOException to improve error handling by converting throwable exceptions into IOExceptions
added a null and empty string check in VersionTypeBinding. java to ensure that a valid content is provided to avoid potential NullPointerExceptions
removed the'result'variable from the'loadAttractionsFromLocation'method and simplified the'onPostExecute'method to improve code clarity and
convert content type to lowercase in MailConverters. java to ensure consistent handling of content type regardless of case
add support for ssh - rsa key to openssh spec
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding folder names to improve flexibility in managing folder names based
updated InheritanceCacheTest. java to replace specific Hibernate annotations with a wildcard import and modified entity retrieval logic to streamline code and improve performance by
updated import statements in ConnectOAuth2RequestFactory. java and added getUserApprovalRequest method in TofuUserApprovalHandler. java to ensure
fix influx tag name convention ( # 645 )
don't use system. out. println in quickfix test
updated key from " Cookie " to " Cookie2 " in HttpURLConnection. java to correct the key used for cookie verification
added a static method ` classMetadataUnsupported ( ) ` in ` Platform. java ` and updated references in ` Subject. java ` and `
added functionality to toggle the visibility and click listener of the clear all button in OverviewActionsView and RecentsView to enhance user experience by
modified the ` desiredRepoVersion ` variable to be final and adjusted timeout duration in ` ClusterStackVersionResourceProvider `, ` HostStackVersion
remove memoryleaktest since it be no longer use.
updated the method to return a dynamic URL based on the local address to improve flexibility in obtaining the local address for testing purposes
added support for MvDWAPI in ServerListener and Settings to ensure compatibility with MvDWPlaceholderAPI when PlotSquared is
fix partition assignment test by assert cluster size eventually
added SingletonHolder class and implemented FFIProvider instantiation based on the " jafl. UseJNA " system property to improve modularity
tika - 4687 -- add test case for hierarchical file list
added null checks and improved null handling in MongoTemplate to enhance robustness and prevent potential NullPointerExceptions during save operations
updated Position constructor calls to use NODE _ LIST instead of 0 for direct input and successor count to ensure correct handling of NODE _ LIST in the
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated the constructor in ` BithumbTrade
updated logging statements in RealtimeSegmentDataManager and AvroUtils to include segmentName as a parameter to enhance logging clarity and provide more context for
changed the maximum number of parallel tasks from 10 to 100 in OverseerTaskProcessor. java to optimize task management by using a consistent constant
replace ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to improve thread safety and performance
add miss license header to dictionary impl class.
added a null check for the destination buffer in FlipTransition. java to prevent potential NullPointerExceptions during execution
( chore ) camel - msv : remove @ ignore from camelmsvtest
updated the condition from " beginCycle = = currentCycle " to " beginCycle > currentCycle " in DelegationService. java to ensure
increased the initial value of ` RandomValueStringGenerator ` from 6 to 10 in ` JdbcExpiringCodeStore ` and ` CodeStoreEndpoints
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints in the database
updated the handling of language codes and descriptions in MediaDetailFragment. java to improve accuracy in extracting language codes from the description string
log recoverable exception in case of classcastexception
listimagecmd : add support for reference and value filter
( chore ) camel - jms : disable bridgeerrorhandler on jms endpoint
added conditional checks for " # ifndef " and " # endif " in OpExclusionUtils. java to ensure proper handling of cases
added return statements in DatabaseCommand. java to ensure that the method returns false to avoid potential null pointer exceptions
[ honestpolitician ] fix typo in politician example
[ zeppelin - 5957 ] fix nullpointerexception in beanshellinterpreter
update restlet component to use getport ( ) to avoid nullpointerexception
removed unused block imports from SchematicFormat. java to streamline code and improve maintainability
added a system property " hive. query. max. length " in QTestUtil. java and removed a method call in SessionState. java
updated access modifiers and simplified HttpConfiguration instantiation in WebServer. java to enhance encapsulation and improve code clarity
rename sink names from " writeHadoop " to " hdfsSink " across multiple files to improve clarity and consistency in terminology
updated HiveConf to compare " spark. app. name " with " spark. app. name " and modified HiveSparkClientFactory to handle null
rename variable ` whiteName ` to ` includedName ` in ` ManagedClassFactory. java ` to improve clarity by accurately reflecting the
simonstewart : don't restore the window when maximizing a window
add main cell buckout info to projectfilesystem
updated assertion in TestXMLEntityExpansion. java to check for the presence of " entity expansions " to ensure that the exception message
updated table offset and length calculations to mask values with 0x7FFFFFFF to ensure proper handling of non - negative values in table operations
updated the customize method to check for null values to ensure that the form's customized state is validated before proceeding
updated boundary checks in LineChartRenderer to use first and last coordinates to improve accuracy of boundary detection between coordinates
refactor flavor checks and improve error handling in AndroidBinaryDescription. java to enhance clarity and maintainability of the code
changed buffer assignment from ` offset ` to ` i ` in ` LwjglGL11. java ` to ensure correct buffer generation for improved
added new classes Property, PropertySuper, and TestClassResolutionFail, along with a test case for NoClassDefFoundError to facilitate testing of the
added a condition to check if the shutdown hook is enabled before removing it to ensure that the shutdown hook is only removed when the group properties are
updated FilterChainProxy to use FilterChjainProxy instead of URL to improve clarity and consistency in URL handling
[ hotfix ] [ table - common ] use arrays. sort instead of collections. sort
added schema loading logic in MetaDataBasedSQLCompletionProvider and modified mdTable retrieval logic in QueryTypeAnalyser to ensure proper handling of schema loading
initialized ` baseType ` to null in ` DatabaseInfoRetriever ` and initialized ` literalPrefix ` and ` literalSuffix ` and ` localizedTypeName
replace < a href = ` ` # \'' with ` ` @ link'' in javadoc
replaced multiple instances of ` ObjectEqualEvaluator ` and ` ObjectNotEqualEvaluator ` with a single instance of ` ObjectEqualEvaluator ` and `
updated references from " / / : osx _ x86 - 64 " to " / : osx _ config " in multiple test files
added sound effect playback functionality in AllAppsView. java to enhance user experience by allowing sound effects to be played consistently
changed the method signature of ` main ` from ` throws Exception ` to ` throws IOException ` to improve error handling by explicitly indicating that the method
added granularity support to the left axis in BarChartActivitySinus to enhance chart visualization by allowing granularity on the left axis
refactor version comparison logic in GdxSetup. java to improve code readability and maintainability
refactor ContextHandlerGetResourceTest to use MavenTestingUtils for target testing directories to improve code maintainability and ensure proper directory creation
added close ( ) method to Connection and JsonAsyncHttpPinotClientTransport classes to ensure proper resource management and prevent potential memory leaks
[ log4j2 - 1757 ] fix socketremoteaddressallostest failure
[ beam - 4142 ] add sanity check for non - directory resource
removed unused SpriteBatch imports from IsometricStaggeredTiledMapRenderer. java to streamline import statements and improve code clarity
removed redundant call to unbindHandle in ItemServiceImpl. java to streamline code by eliminating redundancy
refactor Config and Attribute classes to improve code readability and maintainability
simplified conditional checks in OtherActivityTouchConsumer. java to improve code readability and maintainability
replaced the condition checking for three button navigation with a method that updates the taskbar navigation button's dark intensity to improve code readability and maintain
changed abort method from " Could not determine the language for file " to throw " Could not determine the language for file " to improve error handling
changed the data type of bootstrapMethodIndex and nameAndTypeIndex from short to byte to ensure correct handling of different data types
refactor findBox and findElementBox methods to include BlockFormattingContext to enhance flexibility in handling block formatting contexts
added a method to retrieve standard error output from the process in WorkerShellStep to improve error handling and provide a way to retrieve standard error output
added null checks for the operator in Collections and CheckedListReplaceAll classes to ensure proper handling of NullPointerExceptions during list operations
added a new boolean variable ` _ testFill ` and a ` FutureCallback < Void > ` in ` SslConnectionTest. java ` to
refactor DeviceFlag and FeatureFlags to streamline listener registration and removal processes to improve code maintainability and reduce redundancy in listener management
added JUnit Ignore annotation to GatewayRSocketIntegrationTests to mark the test as ignored due to issue # 1114
removed unused import of MalformedURIException in StandardRequestHandler. java to streamline code by eliminating unnecessary dependencies
instructorfeedbackeditpage : make it possible to click on the'edit'button on the'edit'page
refactor ownTradesObservableSet logic in KrakenStreamingTradeService. java to improve code readability and maintainability
changed the error message from " Ignoring Class - Path entry " to " Ignoring Class - Path entry " to improve clarity of error messages
added a boolean parameter to the SparseRowMatrix constructor and modified the constructor to accept a shallow copy of the rows to improve flexibility and control over
bug fix : when delete a volume, the volume don't have a poolid
updated file handling in Utilities. java to use configuration variables for HADOOPJT and HIVE _ PLAN to improve flexibility and maintainability
[ beam - 8470 ] use org. apache. beam. vendor. guava. v26 _ 0 _ jre. com. google
bugfix : memorycallgraphbuilder don't register the cctprovider if it's already register
fix a nullpointerexception in the conference chat manager.
added check to prevent write to a file that can not be write
added FolderSyncActivity to handle folder synchronization in DrawerActivity to enhance user experience by allowing sync functionality in the app
[ hotfix ] [ test ] use clos for network buffer pool in sequentialchannelstatereaderimpltest
update spanish tree normalizer to handle number of token
replaced the use of ` reader. getReader ( ) ` with ` heapPointWriter. getPackedValueSlice ( i ) ` in ` SimpleText
added a new LocaleRandomizer class and its corresponding test class to facilitate randomization of available locales in the application
tika - 2852 -- add unit test for font printer metric
[ java ] update java version number to avoid false positive.
refactor access control flow in TCPTransport. java to enhance security by ensuring privileged actions are executed on the correct thread
modified socketWrapper read timeout handling in Http2AsyncParser. java to ensure read timeout is set to zero when the block flag is not set
updated default delay from 120 to 600 milliseconds in TimelineMetricConfiguration to improve responsiveness by allowing more time for metric updates
updated error message formatting in SelectStatement. java to improve clarity and consistency in error reporting
added support for custom date formats in ThirdEyeJiraClient to enhance date handling capabilities in the application
replaced parent stream ID validation with a priority frame generation method in HeadersGenerator and PriorityFrameGenerator to simplify priority handling and improve code clarity
added a constant for the maximum scan - replace code size and updated the condition for scalar replacement to ensure that the replacement option does not exceed the
added DATE _ TAKEN to MediaColumns in MediaProvider. java to ensure proper sorting order for media files
updated image drawing parameters in TexturePacker2. java to ensure correct positioning of images in the graphics context
replaced FilterHolder with a ServletContextHandler in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to streamline servlet context handling and improve code clarity
added shutdown ( ) method calls in Manager and NodePersistService classes to ensure proper resource management and prevent memory leaks
added RawJsonRequestBody annotation processor in JaxrsSwaggerGeneratorContext and created RawJsonRequestBodyAnnotationProcessor class to enable handling of raw JSON
added a new method ` newTarget ( int targetType, TargetExtension extension ) ` to the ` LoggerUtils ` class to facilitate the
updated the constructor of ListBeanContainer to accept an ArrayList and added a new test class BeanContainerTests to enhance functionality by allowing the creation of
hbase - 26400 fix typo in testmetricsregionserver
camel - 16400 : cache outputstream should release fileinputstream cache if exchange do not complete
set the device ID in the TeltonikaDecoder to ensure proper identification of the device during decoding
replaced ` Files. readFirstLine ` with ` Files. asCharSource ` in ` HybridProjectBuildFileParser. java ` to
added a new method ` visitAssignop ` in ` ppp Attr. java ` and created a new test class ` Test. java `
added a flag to enable account handling in FirstRunActivity and BaseActivity to conditionally call onCreate based on account management settings
[ isochrone ] improve performance of heuristicallyfindmainconnectedcomponent ( )
updated DrillViewTable to accept a list of paths and modified method calls accordingly to enhance flexibility in view handling and improve code clarity
add system property io. netty. allocator. maxorder and io. netty. allocator. usecacheForAllThreads in pooledbyteb
changed the type of the array type from double [ ] to short [ ] in ObjectInputStream and added a new CloneArray class with serialization tests
added configuration for LLAP _ IO _ THREADPOOL _ SIZE in HiveConf. java and modified thread pool initialization in LlapIoImpl.
8 and 11 don't re - initialize sun. security. ssl. ssllogger during class initialization
added validation for latitude and longitude range in LatLonGrid. java and introduced a new test for growing polygons in TestLatLonGrid.
simplesecontainer forget to override method in expectedconditions.
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated related logic to enhance functionality by allowing deletion of
added a test for ` SomeInnerClassReflector ` in ` ReflectorTest. java ` to verify the correctness of the enclosing object
updated configuration keys from " disable _ r _ java _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources
updated logging messages in HubChangeExecListener. java to include the change set ID and author to improve clarity of logged messages for better debugging
added properties property handling in Link class and corresponding test cases to ensure that overridden properties are correctly handled in the QuickLinks configuration
removed unnecessary @ EqualsAndHashCode annotations and added a custom ` toString ` method in ` YamlConfigFileDTO ` to improve code clarity and ensure proper
updated generic type parameters in SimpleForwardingServerClientCall and SimpleForwardingClientCallListener to enhance type safety and improve code clarity
added CallerSensitiveAdapter to Class. forName methods to enhance class loading flexibility based on caller context
updated assertions from ` not ( isEmptyOrNullString ( ) ) ` to ` is ( emptyOrNullString ( ) ) ` in RequestItemRepository
replace LinkedBlockingQueue with ThreadPoolExecutorEx in GroupExecutor. java to improve code clarity and maintainability by using a more specific class
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from outside the ClientAdminEndpoints
updated imports and refactored methods in TimeStepdefs. java to use Jchronic's Chronic utilities to improve code
fix ` ` spark _ isolated'' and ` ` spark _ recessive'' recipe
updated the ` createProxy ` method calls to use ` getUri ( ) ` instead of ` ExchangeSpecification ` to ensure that the correct URI is
remove unused println statements from RecordGenerator. java to improve code readability and maintainability
( chore ) camel - kafka : increase auto commit timeout
removed lock release and updated SQL output statements in LoggingExecutor and StandardLockService to streamline code by eliminating unnecessary lock release and ensure proper
updated ` @ SuppressWarnings ` annotations in ` AbstractAuthorizeTag ` and ` AuthorizeTagCustomGrantedAuthorityTests ` to improve clarity and
remove synchronized block in database. flush ( )
camel - spring - boot - plugin : allow to customize nested property
updated the method call from ` getVirtExTicker ` to ` getVirtExTicker ` to use ` counterSymbol ` instead of ` base
( chore ) camel - core : fix checkstyle violation
replaced UUID generation with system property retrieval in HoneycombJdbcInterceptor to improve consistency and maintainability of the code
added synchronized blocks to parse date and number formats in DefaultJobParametersConverter to ensure thread safety when modifying date and number formats
updated package - info. java files for mmm and ppp packages to improve clarity and maintainability of package documentation
[ fractalheightmapgrid ] change the default height scale to 256.
updated equality check in SecurityConfig and changed assertion in SecurityConfigTests to ensure proper comparison of security strings in tests
changed the default value of ` dumpPartitionId ` from ` getBoolean ( " dump - partition - id " ) ` to ` false ` to
added TronTXOutput and TXOutput classes to UTXOSetTest to enhance testing capabilities for transaction outputs
[ java ] fix false positive for unused var name
pdfbox - 2576 : avoid npe, a suggest by valerybokov
added a test for overriding previous restart parameters in JsrJobOperator to ensure correct behavior of job restart properties
added a new boolean variable ` disallowBatchOnCascade ` and its getter method in ` DatabasePlatform. java ` to provide a way to
refactor principal assignment logic in JaasAuthenticationHandler. java to improve clarity and maintainability of the code
replaced MDCLoggingContext with a custom MDCAwareFixedThreadPool to ensure proper resource management during core shutdown
added a null check for mActionsView and set visibility based on fullscreenProgress to improve stability by preventing potential null pointer exceptions
updated the null check for parameters in RunIdIncrementer. java to improve robustness by avoiding potential NullPointerExceptions
refactor methods in BasicEntity and TestUtil classes to improve code readability and maintainability
add a new test case for getMatchedDevices method in SchemaRegionBasicTest. java to ensure that the expected result for getMatchedDevices method
[ 3.0 ] fix dubbo. common. metrics. metricscollectormexception ( # 2453 )
added a new EigenvectorCentralityBuilder class and modified calculations in EigenvectorCentrality. java to enhance the
refactor registry registry creation to use a random port to improve reliability and maintainability of registry operations
geometry generator : set type of geometry data for ifc product
set the amplifier of the entity to 0 instead of 2 to ensure that the entity correctly reflects the intended behavior of the entity
refactor TubeCalc class to improve code readability to enhance maintainability and ease of understanding
disable health check by default
add sanity check for group in defaultvalidator.
added a timeout attribute to the @ run method in bug8057791. java to improve user experience by providing immediate feedback ongoing
fix # 322 - make the threads daemon to allow speedment application to exit via main method completion
[ gradle ] fix lexicon version number format
added reflection access check in JavaAdapterFactory to enhance security by verifying access rights
add lazysessioncreation = true to the unit test of camel - mina
updated the initialization of the I / O context in CombineHiveRecordReader and HiveContextAwareRecordReader to ensure proper initialization of the I / O context
deleted ClassLoaderHolder and LoaderManager classes to streamline codebase by eliminating unused classes
added configurationChanged method and modified file removal logic in FileStore and JavaLanguageServer classes to ensure proper handling of temporary files during file operations
added error handling for session callback registration and unregistration in PackageInstallerCompatVL. java to improve stability by preventing crashes due to unhandled
removed " src / test / org / apache / lucene / index / index. nocfs " and added " 23. nocfs " to
[ hotfix ] [ runtime ] add akkarpcserviceconcurrent to akkarpcserviceconcurrent
hbase - 25836 testexportsnapshot should retry on failure
pdfbox - 4071 : don't create symbolic file if it's not a symbolic one
add test to verify that ssl connection be close before fill.
added validation for IPv4 and IPv6 address types in InetAddress. java and NetworkInterface. java to ensure proper handling of IPv4 and IPv
added a test for date serialization in collections using Gson to ensure correct serialization behavior for date objects in the collection
refactor Message class to improve code readability to enhance maintainability and ease of understanding
npe in putdatabaserecord when firstupdatekey be true
adjusted the loop condition in TableOutput. java to correctly account for the maximum width to ensure that the loop does not exceed the defined maximum width
pdfbox - 2576 : avoid npe, a suggest by valerybokov
updated the priority handling in the FormatStringChecker class to improve clarity and maintainability of the code
add property to ignore non - final loop variable in a for - each statement
added PDF versioning and full compression settings in PDFExporter. java and updated test cases in PDFExporterTest. java to enhance PDF export functionality
added unit tests for LdapUserDetailsMapper to ensure that role attributes are correctly mapped to authorities
make ldap read timeout configurable
updated test cases in TestDescription. java to improve clarity and maintainability of test cases
refactor Pixmap, ManifoldPoint, and TextureRegion classes to improve code organization and maintainability
updated method names from ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity on whether to cache iterators
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only proceeds when the state
updated WORKSPACE _ ROTATION and mOverScrollPageIndex calculations to improve accuracy in determining folder creation and overview page rotation
updated OciConfigConfigSource to use ConfigProviderResolver and modified property retrieval logic to enhance configuration handling and improve code clarity
refactor Testjsig class to improve code readability and maintainability
multiply the count of mana * stack. count instead of multiply it by the count of the mana.
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added a serialVersionUID annotation to P11TlsPrfGenerator. java to suppress serialization warnings for the class
updated validation logic to differentiate between empty and non - empty file scenarios to improve error handling and ensure proper file management
added new classes Switch21 and Switch19 for pattern matching to enhance type - checking capabilities for switch operations
updated error messages in ComparableSubjectTest to include " java. lang. String cannot be converted to test. MyTest. ComparableType " to
updated XML content handling in StreamHelper and added a new test case in TestStreamHelper to ensure that standalone XML elements are handled correctly in the
updated size checks and improved error messages in Int2ObjectCache. java to ensure correct handling of array sizes and enhance clarity in error messages
removed sorting for security filter chains in WebSecurityConfiguration and WebSecurityConfigurationTests to ensure proper ordering of security filter chains based on bean definitions
removed TimeInForce. GTC from the order type in BinanceTradeService. java to simplify the order type handling by removing unnecessary time
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer to improve flexibility in random number generation
change the KEY _ SEP character from'\ 0'to'\ t'in RocksDBBuildInfoStore. java to ensure
camel - 16400 : camel - jms should return documentation for jms component.
added error handling in SourceUtils and created a new test class SourceUtilsTest to improve robustness against NoSuchFieldError during method calls
refactor LeafFilterFactory to use a method for retrieving the leaf filter builder by the Parquet type to improve code readability and maintainability by encapsulating
added a check to ensure the original artifact name does not start with the " SCOPED _ TARGET _ BEAN _ PREFIX " prefix to avoid
added a loop to read the certificate serial number from the input stream before setting the server key to ensure that the certificate is read from the input
modified getDefaultBooleanValue logic in mmm Config. java and added DnsFallback. java for testing to enhance robustness by ensuring fallback values
ww - 3682 - improve error message when write tag fails
changed the type of the ` success ` field from ` boolean ` to ` String ` in the ` DepositAddress ` class to allow for
modified the return statement in WindowsSecurity. java to include a try - finally block to ensure proper resource management and prevent potential memory leaks
removed " address " from scope in CommonOAuth2Provider and updated test assertions accordingly to simplify scope handling and ensure consistency in test cases
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4688
added saturation and segment index handling in WLedBindingConstants and WLedHandler to enhance color representation and support for segment indexing
replaced the method ` isValidCaller ` with a ` Set < String > VALID _ CALLERS ` to improve code clarity and maintainability by using
added a new caseJSRInst method in InstSwitch. java to handle JSRInst functionality in the application
add transactionmanager to subscriptionactivatingsubscriber to avoid deadlock
refactor SQL statement construction in DBMSProcessor. java to improve clarity and ensure proper resource management during database operations
added elevation handling in ContactItemInflater to ensure compatibility with devices running Android versions below Lollipop
renamed ` typeInformation ` to ` identifier ` in ` J. java ` to improve clarity by using a more descriptive identifier
refactor file access to use privileged actions in SandboxFileManager. java to enhance security by ensuring privileged actions are executed on the
added handling for Access types in Groovy parsing and printing to improve clarity and functionality of binary operations
updated warning log message to include the exception class name to improve clarity of error messages for better debugging
fix for bug # 4684 - incorrect handling of unsigned char in unicode string
added a test for downloading a file with Norway characters in the name to ensure that the download functionality correctly handles Unicode characters in file names
replaced RuntimeException with CancellationException in AsyncResource and FingerprintScannerSample to improve error handling for cancellation scenarios
fix npe in timedmemberstatefactory when statistics be null
added a test for removing objects from an explicit collection in MongoTemplateTests to ensure that the template correctly removes objects from an explicit collection
` ` copyright'' from svn eol by eol
[ hotfix ] [ table - planner - blink ] fix string. format ( string, coder )
refactor scroll handling in RecentsView and PagedView to improve code clarity and maintainability
added a constant for COMMON _ HMS _ PROPERTIES and refactored parameters handling to improve code readability and maintainability by centralizing
added a method to check if an address is already in use to improve error handling by preventing duplicate socket addresses
added a call to ` argList. add ( 0, " - cp " System. getProperty ( " test. class. path " )
updated SchemaTextDetailType from verbose to verbose _ schema to improve clarity and consistency in schema output
from user
# 3687 - enh : fix regression in nested transaction
replaced an integer fetchSize with a ThreadLocal < Integer > fetchSize in QueryProcessExecutor to improve thread - safety and performance in managing fetch size
[ java ] remove sharednetworkidlestrategy from embeddedpingpong.
improve error handling in http client
added HDP _ VERSION property handling in SliderAppsViewControllerImpl. java to ensure HDP _ VERSION is dynamically set based on configuration
refactor JavacProcessingEnvironment to improve resource management and ensure proper closure to enhance code reliability and prevent potential memory leaks
added DeepCloner to ParameterizedRobolectricTestRunner and RobolectricTestRunner to enhance functionality by allowing deep cloning of parameters
added binding for Boolean annotated with JETTY _ SHOW _ STACKTRACE in ResourceBase. java to ensure proper handling of stack trace
added a type check to return null if the object type is an instance of JSType. OBJECT to improve robustness by preventing null pointer exceptions
refactor OopField fields to well - known klasses in SystemDictionary. java to improve clarity and maintainability of the code
updated JwkKeyListView to use type hierarchy adapters for RSAPublicKey and ECPublicKey to improve compatibility with various cryptographic algorithms and enhance
nativebootimage : use only writable boot image heap
updated MBeanServerMXBeanUnsupportedTest. java to improve test coverage for MBeanServerMXBean functionality
removed unused import of OrderClassLoaders from MavenPluginCollector. java to streamline code by eliminating unnecessary dependencies
replaced the ` Validator ( ) ` method with ` validator ( ) ` in multiple actuator classes to standardize the implementation of the ` validator
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 46
updated sendCommand calls to include byte array values for min and max values to improve data handling by distinguishing min and max values
protobuf serialization : add empty index to the dependency graph edge
[ java ] remove redundant call to remove correlationid from asynccommandidset.
added saveConflict calls in FileDataStorageManager, FileDownloader, and FileUploader classes to ensure that conflicts are handled correctly when the file is
http : / / code. google. com / p / mybatis / issues / detail? id = 567 : use parameterized type
replaced ` StrUtils. splitFileNames ` with ` splitFileNames ` across multiple filter factory classes to streamline code and reduce dependency on
added support for " remarksReporting " and " useInformationSchema " based on the database type to ensure proper handling of remarks reporting and information
updated the constructor parameters in ` SignedSupportingClassProxyFactory ` and modified the ` @ Ignore ` annotation in ` PartialMockingWith
updated time calculations in FileChangedExclusiveReadLockStrategy to use minTriggerTime instead of newOlderThan to improve accuracy in determining file timestamps
refactor ExecutionContext usage in LocalExecutor and LocalExecutor to use wrapClassLoader to improve code readability and maintainability by using a wrapped class loader
added buffer change handling in TerminalView and updated buffer height calculation in TerminalTextViewOverlay to improve responsiveness and ensure accurate buffer height updates
added a check to ensure the service pid namespace is not empty before processing the configuration to improve robustness by ensuring valid service pid namespaces are
refactor freeze logic based on VM configuration to improve clarity and maintainability of the code
added support for insecure TLS configurations in TlsConfig and TlsUtils to enhance security by allowing customizable TLS settings
refactor source and class path handling in JavadocTool. java and add new classes T7091528. java and T7091528. java
rename nodeColumns to edgeColumns in ExporterGDF. java to improve clarity and consistency in naming conventions
added cascade option to OneToOne relationship in DefaultUserInfo to enhance data integrity by enforcing cascade behavior during association
refactor equals and hashcode methods in Message class to improve code readability and maintainability
updated the response body format from "???? " to " \ u017D " in AsyncProvidersBasicTest. java to ensure
[ hotfix ] [ test ] remove unused test method
added static permission retrieval in ProtectionDomain and updated subjectPd initialization logic to enhance security by allowing dynamic access to ProtectionDomain instances
added null check for the recipe in RecipeHandlerBrewery and RecipeHandlerElvenTrade to prevent potential NullPointerExceptions during recipe processing
refactor parsing logic in Parser. java to improve clarity and maintainability of the code
added a method to show a connection error popup in UploadMediaDetailFragment and UploadMediaDetailsContract to improve user experience by providing clear error messages
added a new file ` Issue596. java ` to implement a test for handling unhandled requests to ensure that the application correctly handles 404
changed bitwise operation from bitIndex to bitIndex in NodeBitMap. java to ensure correct data type handling for bit indices
refactor ImportLayoutStyle class to improve code readability and maintainability
updated ConsoleUIService to use standard input from stdin based on TERM _ PROGRAM and MINTTY values to enhance user experience by allowing
refactor ShadowAccountManagerTest to use TestAccountManagerCallback directly to simplify test code and improve readability
make analysistype non - final so that it can be subclassed
polish ` ` fix typo in ` ` in - pairs''
nifi - 2693 : fix putallcallable to not set timeout to 1 second
fix npe in mqclientinstance when consumer be empty or not
[ java ] add source identity generation to the driver.
added a new file ` TopTabAction. java ` that implements the ` Presenter. Toolbar ` interface to provide a visual representation of the
camel - dynamicrouter : don't start the dynamic router if recipient mode _ all _ match
updated test class to use JUnit's @ Before and @ Test annotations to improve test structure and ensure proper setup
updated the Procedure constructor in AbstractObjectValueTypeMap to include generics to enhance type safety and improve code readability
updated import statements and refactored wikidata edits handling in multiple Java files to improve user experience by displaying user - specific edits for
added validation to ensure the length is within the Short. MAX _ VALUE limit to prevent IllegalArgumentException when the length exceeds Short. MAX _ VALUE
added a new BugAccumulator instance and modified conditional logic in DumbMethods. java to improve tracking of absolute values and ensure proper bug reporting
refactor multiple dataset classes for consistency to improve code maintainability and readability
updated exception messages in ` ProvisionClusterRequest. java ` and modified tests in ` ProvisionClusterRequestTest. java ` to improve clarity of error
updated random value generation in TestVectorUtil. java to allow for a fixed number of values to enhance variability in vector generation
changed the return type of ` compareBy ` from ` int ` to ` long ` and simplified time comparison logic to improve accuracy of date comparison
added SSL configuration to TestUtil and updated assertions in PGPropertyTest to ensure SSL settings are correctly set based on system properties
add ` ` safebrowsing. enabled'' to chrome preference
added null check for oldConfig before cloning in setFlightConfiguration calls to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if the renderer is not forced transcoding to ensure that transcoding is disabled when transcoding is disabled
updated column retrieval logic to handle empty lists and added a test for diffing empty lists to improve error handling and ensure correct behavior when comparing empty
added support for custom ignore tags in RobustJavaMethodParser to ensure proper handling of cases where custom ignore tags are not present
camel - 16400 : optimisticlockingexception should throw optimisticlockingexception instead of runtimeexception
fix issue with @ configurationproperties ( ` ` parent'' )
updated PreferencesActivity to extend LimitlessIDEActivity and modified layout adjustments to improve UI responsiveness and ensure proper layout adjustments
deleted the ClusterNodeInfo class from the codebase to streamline the codebase by eliminating unused components
corrected return value in ShieldedTransferActuator. java to ensure proper functionality of the method
added debug messages for Standard and Legacy ciphersuite in ServerHandshaker. java to provide clearer context for ciphersuites during the handshake process
added template selection handling in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve user experience by ensuring only relevant templates are
added functionality to handle duplicate node labels in the ImportContainerImpl and ImportContainerParameters classes to improve error handling and provide clearer feedback when a node
added a new file R2303044ListSelection. java to implement a GUI with a list selection to ensure that the list items are
[ java ] check for aeronclient timedout rather than checkkeepalivetimeout.
added a null check for mWorkspace in Launcher. java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` in ` StepScopePlaceholderIntegrationTests. java ` to ensure that compound properties are
mondrian : fix bug in statsruleprocfactory. computenewrowcount ( )
added path URL formatting and updated query parameters handling in SpringBootDocBuildTemplate. java to improve code clarity and ensure proper handling of query parameters
guicontray action handler should not use getactionhandlers ( ) and getactionhandlers ( ).
updated DistBuildSlaveExecutor to replace DistBuildCachingEngineDelegate with CachingBuildEngineDelegate and added conditional materializeSourceFilesOnDemand to improve
updated the exception message to include a more descriptive error message to improve error handling by providing clearer feedback on parsing errors
added a conditional check for DEBUG before logging in WidgetsModel. java to ensure logging only occurs when DEBUG is enabled
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase. java and added a test for discount overlaps in TestSimilarityBase. java to ensure
added reflection - based verification for the ` send ` method in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests `
added exit and quit methods with getter methods in Global. java and removed them from ScriptingFunctions. java to streamline exit and quit functionality
[ lootembrokertest ] fix typo in lootembrokertest demo
rename methods from " getFirstUnverified " to " findLastInvocationStackTrace " across multiple files to improve clarity and consistency in method naming
bug fix for vwware web service request context
updated authority assertions in ResinAcegiAuthenticatorTests. java to ensure consistency in authority retrieval
added 32 bit size to the bigIntegerToBytes method in ECKey. java to ensure proper handling of key sizes
changed the property key from " fml. disabledMods " to " fml. modStates " to reflect the state of the mod
refactor account selection handling in ReceiveExternalFilesActivity to improve code readability and maintainability
improve error message in CollectSink to include host and port details to enhance debugging by providing more context on connection issues
throw an exception if unexpected result from validator smart contract call
updated JSON deserialization logic in TexturePackerFileProcessor. java to handle null cases to improve robustness by preventing potential NullPointerExceptions during JSON
removed null check for getDataSourceJNDI ( ) in PooledConnection. java to streamline code by eliminating unnecessary null checks
updated target memory allocation and count calculation in TestRefprocSanity. java to improve memory allocation accuracy and accommodate larger data sets
fix a crash on startup problem ( console be null )
added a method to set the credentials refresh delay in KinesisConfigUtil. java to improve the responsiveness of the Kinesis service by allowing
replaced AlertDialog. Builder with a method call to showInfoAlert in SingleUploadFragment. java to improve code readability and maintainability by consolidating
modified the ` test ` method to include a ` pack ` parameter and added a ` - package ` argument to enhance functionality by allowing packing
updated Jetty version from 1.7. 0 _ 60 to 1.7. 0 _ 31 in ` ModulesTest. java ` and ` TestBadUseCases
added a check to ensure the dependency is not already included in the dependency resolution to enhance dependency resolution by excluding dependencies from being processed
added functionality to manage ZipFileInputStream instances to ensure proper resource management and prevent potential memory leaks
rename datamatrix format to data _ matrix format to avoid confusion
added methods to run active and idle state in SequenceGeneratorSource to ensure thread safety during processing operations
changed method names from ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in BlobServer and BlobServerGetTest
replaced ` findAny ( ) ` with ` findFirst ( ) ` and ` getAnnotations ( Class < T > type ) ` in ` Annotated
added support for " ppc64 " and " ppc64le " architecture checks in Bits and ByteArrayAccess classes to enhance compatibility checks for
updated the exception message in RoboMonitoringInstrumentation. java to include a link to the GitHub pull for details
replaced ` COMMIT _ TIMEOUT _ MINUTES ` with ` Long. MAX _ VALUE ` in ` waitWithDeadline ` calls to limit the
fix flakiness in dateutiltest
refactor BytesRef class to improve code readability to enhance maintainability and ease of understanding
added a Toast message to indicate that YouTube Player doesn't work on Lollipop yet to improve user experience by informing users about
added checks for unterminated dollar and block quotes in SQL parsing to ensure proper parsing and error handling for SQL syntax errors
added a null and vibrator check in the mVibrationDuration and mVibrator conditions to ensure proper handling of vibration duration
updated background color settings and modified arrow tail formatting in DotRenderer. java to improve clarity and consistency in color representation
added support for decoding encoded Par configurations in HiveConf and SetProcessor to improve handling of encoded Par configurations in the application
pdfbox - 2852 : catch stringindexoutofboundsexception, a suggest by valerybokov
refactor X509Certificate class to improve code readability and maintainability
fix wavefront uri validation ( # 3903 )
removed BitmapLruCache from TimeLineCursorAdapter and added loadImage method in NetworkedCacheableImageView to streamline image loading process and
removed the'view'parameter from the ` ofFloat ` method across multiple classes to simplify the method signature and improve code clarity
added a new constant for the " gdxControllersVersion " in DependencyBank. java and updated its usage in BuildScriptHelper. java to
refactor LaunchedURLClassLoader class to improve code readability and maintainability
added SQL result handling using DataAccessUtils in DataSourceHealthIndicator to ensure proper retrieval of database data from the database
add cache - control header to layout tag
updated warning message formatting to use Locale. ENGLISH to ensure consistent locale handling for warning messages
modified the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility by allowing custom analyzer configurations
updated copyright year from " Copywrite " to " 2017 " in multiple Java files to ensure compliance with licensing requirements and encourage
removed unused imports from MainTest. java to streamline code by eliminating unnecessary dependencies
refactor TypeContributions class to improve code readability and maintainability
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper creation of VoidColumnVector instances
updated parameters in StatementGenerator. java to use request. getName ( ) instead of templateName to ensure correct request context is used for processing measurements
removed redundant type check from the ` isTypeMatch ` method in ` AbstractConfig. java ` to streamline the code by eliminating unnecessary
[ java ] : add timestamp and correlationid to sessiondecorator.
renamed the method ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` in ` XForwardedRemoteAddressResolver ` to
added a new interface ` NoBootstrap ` and modified ` BootstrapInserter ` to check for bootstrapping annotations to ensure that only bootstra
hbase - 2697 fix nullpointerexception in tabledescriptorchecker
updated the calculation of ` numCommits ` to use ` Math. max ( requestedCommits, maxCommits ) ` instead of `
added InvocationTargetException to main method signatures in bug6794831. java to enhance error handling by incorporating InvocationTargetException
added a constant ` BUILD _ ID ` in ` CachingBuildEngine ` and updated ` CachingBuildEngineTest ` to use this constant to improve
removed unused imports from TransactionCapsule. java to clean up the code and improve maintainability
removed redundant call to markAsDone in HttpProtocol. java to streamline code by eliminating redundancy
added import for TezConfiguration and integrated it into TezConfigurationFactory to enhance configuration handling and improve code maintainability
added null check for keyPurposes in TimestampedSigner. java to avoid potential NullPointerException when keyPurposes is null
removed unnecessary visibility check from conditional statement in CustomPlaybackOverlayFragment. java to simplify code and improve readability
added a null check before stopping the least recent sound and implemented a method to forget a sound to avoid potential null pointer exceptions and manage sound references more effectively
fix issue where discontinuity be report only once
added DecimalFormat instances for various decimal places in NumberAxis. java to enhance precision in number formatting
refactor TargetsCommand and AbstractTargetGraphAndBuildTargets to improve code readability and maintainability
removed the ` IndexFileNameFilter ` class and updated the ` accept ` method in ` IndexFileDeleter ` to simplify the file deletion logic and
don't write texture stitched. just a small performance tweak.
added a compression level parameter to the constructors of ` SignedJarBuilder ` and ` ApkBuilderStep ` to allow customization of compression behavior
added a test method ` shouldIncludeStaticFields ` in ` MirrorTest. java ` to ensure that static fields are included in the stub
updated ` UNDEFINED _ FIELD _ SIZE ` to ` UNDEFINED _ METRIC _ SIZE ` across multiple files to ensure consistency in data type handling across
updated string formatting in multiple failure messages across multiple test files to improve readability and consistency in error messages
replaced ` id. hashCode ( ) ` with ` Objects. hashCode ( id ) ` in ` Trade. java ` and removed the call to
added caching functionality to SpringDataJPAJoinFetchPaginationTest and SpringDataJPAJoinFetchPaginationConfiguration to enhance cache management and improve test
marypropertie : use localeprefix instead of hardcoded string
updated SimpleHttp and TestHttpPlugin to handle null post bodies to ensure proper handling of empty post bodies and improve test coverage for null post configurations
added executor service cleanup in ClientSideSlb and ClientSideSlbTest to ensure proper resource management and prevent potential memory leaks
modified the setV2 method to include conditional flipping based on vertical orientation to ensure proper handling of texture dimensions when flipping
throw invalidconfigurationexception instead of hazelcastexception
changed the contextPath variable from final to non - final and added a null check for it to ensure that the contextPath is set to " NA "
[ drools - 7 ] avoid npe when reiniting class
added a check for B _ TREE _ MAP _ ROOT _ HEADER in SerializationHeader. java and defined a constant in BTreeMap.
added support for ` prefix _ header ` and ` precompiled _ header ` in ` AbstractCxxSourceRuleFactory ` to ensure proper handling
replaced WeakReference with a custom AccWeakReference in ImageWatched. java to enhance security by ensuring proper access control during image updates
changed access modifier of ` findNextIndex ( ) ` method from package - private to private in ` ObjectMap ` and ` OrderedMap `
changed the value of isDirect from true to false in VertexBufferObject. java to ensure proper handling of direct data
remove redundant code in MaryClient. java to improve code readability and maintainability
changed the return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to allow the method to return
pdfbox - 5764 : use input. limit ( ) instead of input. capacity ( )
added null check for context before calling removeCloseHook to prevent potential NullPointerException when context is null
updated border spacing handling in CellLayout and DeviceProfile classes to improve layout consistency based on container type and folder type
replaced NumberFormat. getInstance ( Locale. US ). parse with ValueNumeric. of ( ) for handling numeric values to improve code maintainability and
added a condition to return _ deferred if the request is not a deferred authentication to ensure that the authentication process only proceeds when the response is
changed module - start - ini argument checks from " -- module - start - ini = " to " -- add - to - start " to
added default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure proper assignment of partition values based on configuration
[ hotfix ] [ stream ] fix npe in streamnode
camel - core - artifact : use ` ` classifier'' instead of'classifier '
camel - kafka : fix issue with offsetstaterepository. getstate call twice for topic rebalance.
improve error message in case of miss dependency
[ jabber account ] enable email notification in jabber account registration wizard
doc : generate sample code in the java microgenerator ( # 15 )
increased concurrency level in LumberjackMultiThreadTest from 125 to 25 * concurrencyLevel to improve test reliability by accommodating more concurrent
don't send health message if player be dead
refactor Exchange class for improved readability to enhance maintainability and facilitate future updates
api : make api _ key and secret _ key optional in updateuser api call
refactor switch - case statements to if statements in multiple classes to improve readability and maintainability of the code
( chore ) camel - maven - plugin : fix typo in abstractmetadataexportmojo
added handling for SQLIntegrityConstraintViolationException in Hive. java to ensure that users are prompted to drop any materialized view
updated property check from " githubAccessToken " to " gitHubAccessToken " to ensure consistency with the correct property name used in the project
added a new file ` RoboExecutorService. java ` that extends ` org. robolectric. util. concurrent ` to facilitate
add subgroups to the menu when there be no root group
updated the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check for path
refactor dynamic thread option handling in TestDynamicNumberOfGCThreads. java to improve clarity and maintainability of the code
default to ` ` platform'' for cxx system
updated SQL CREATE statements and modified parameter handling in CreateTableDeParser and CreateTableTest to improve clarity and correctness in SQL creation commands
added alpha transparency to the background drawable in ChatViewerFragment to enhance the visual appearance and transparency of the chat background
test : migrate ctiteratortest to junit 5
added token clearing functionality in CharTokenizer, KeywordTokenizer, TokenStream, and StandardTokenizer classes to ensure consistent token clearing across tokenizer implementations
fixed bug 1463228 - astinitializer don't crash if a block statement be declare inside an anonymous inner class
added error handling for missing state machine configurers in StateMachineConfiguration and StateMachineFactoryConfiguration to ensure proper configuration and prevent runtime errors
simonstewart : don't require ` ` link =''
ww - 3683 add support for number format in number format
no longer use unitofwork. getcurrentscope ( ) to get the current scope
changed touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to ensure touch
removed a conditional check for the'~'symbol in FencedCodeBlockParser. java to simplify the code by eliminating unnecessary checks
added functionality to set and retrieve socket timeout in multiple classes to enhance socket configuration flexibility and improve error handling
added sleep functionality in ElementAttributeTest. java to handle interruptions during test execution
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding in HTTP requests
refactor List class to improve code readability to enhance maintainability and ease of understanding
added support for URI handling in AsyncFileImpl and created corresponding test case to enhance functionality and ensure proper error handling in file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are marked as stable and should not be modified
cloudstack : fix npe if there be nuage vsp device configure on physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` to improve clarity and
updated Java version handling in ConstantPoolTagTests. java to ensure compatibility with newer Java versions
don't crash when try to compile with - xlint
add a method to clear the client header map in the asynchttp client
replace Vector with ArrayList for input and output file names to improve performance and simplify data handling
updated the default grid column value from 4. 0 f to 3f to improve the visual consistency of the user interface
added a condition to check if ` forViewCreation ` is false in ` CalcitePlanner. java ` to ensure that the query does not
updated regex patterns in TestHS2HttpServer. java to improve accuracy of date pattern matching
don't swallow exception in graphprinter
simonstewart : use firefox's firefoxdriver instead of ie
updated byteOffset calculation in ByteBlockPool and added a test for acquiring too many allocations in TestByteBlockPool to improve accuracy in
changed ` firstEncoder ` and ` secondEncoder ` from static to instance variables and modified string formatting to use ` Locale. ENGLISH ` to ensure
added error handling for unexpected errors in TcpTransport to improve robustness by ensuring proper exception management
added a @ SuppressWarnings ( " serial " ) annotation in PApplet. java to suppress serialization warnings and improve code clarity
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` to simplify class hierarchy and improve
add more informative message when database have change
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator and updated error messages in OAuth20AccessTokenEndpointController to ensure
added a check for the index value in DrillBuf. java to ensure that the index value is validated before proceeding
updated the ` initTableMapperJob ` method to accept a ` Class <? extends InputFormat > ` parameter to enhance flexibility in configuring table
removed redundant call to append in AbstractJRubyMojo. java to streamline code by eliminating redundancy
llvmpolygloteval : throw an exception if no language be available.
added deprecation check for reserved commit duration in ReplicationHandler to ensure that both master and replication configurations are exclusive
hhh - 142992992 : fix typo in cachedsqlentityprocessor
changed the data type of the ` generateECKeyPair ` method from ` long [ ] ` to ` Object [ ] ` to accommodate
added a ` suspend ` method to ` Restarting ` and modified ` StateWithExecutionGraph ` to accept a ` JobStatus ` parameter to enhance
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RotationTouchHelper ` to simplify the instantiation process and
refactor code to use flatMap for portable port table filtering to improve code readability and maintainability
updated thread ID parameters from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in
add check to avoid duplicate offer in the list
use testsupport. defaulttlsprotocolfortof13 instead of testclientcerttlsv13
refactor mock handling in MockitoMethodInvocationControl and SystemClassUserTest for improved clarity and consistency to enhance code readability and maintainability while ensuring
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple files
replaced the import of DisplayUtils with a call to getIntent ( ). putExtra ( EXTRA _ FILE, ( OCFile ) null ) to stream
added error handling and improved file management in StoreDirect and StoreWAL classes to ensure proper resource management and prevent potential memory leaks
replaced direct calls to ` SystemUiProxy. getInstance ( mContext ). stopSwipePipToHome ` with a call to ` SystemUiProxy
added functionality to handle hidden command arguments in LiquibaseCommandLine and CommandArgumentDefinition classes to improve command argument management by allowing toggling of hidden
updated the port number from 8090 to 9092 in LoggingKafkaPluginTest. java to improve test reliability by using a more precise port
geot - 6907 - refactor layergrouphelper to use geotools. bean ( ` ` catalog'' )
added permission checks in InstallShortcutReceiver and Launcher classes to ensure malicious intents are validated before proceeding
added ` getId ( ) ` and ` setId ( int id ) ` methods to multiple map tile classes to ensure consistent identification of tile instances
refactor Manager class to improve code readability and maintainability
updated JDBC connection and Session initialization to include versioning to ensure compatibility with V _ 0 _ 13 database schema
added new properties ` schemas ` and ` includeSchema ` to ` DiffOutputControl ` and updated the ` doGenerateChangeLog ` method to
replaced ` putIfAbsent ` method with ` put ` in ` JmxRegistry. java ` to improve performance by reducing redundant method calls
change log level of singlebenchmarkrunner's warmup method to warn
changed the access modifier of the doPutRecord method from protected to package - private to allow access to the method from outside the class
fix file path in fileselectorfragment.
added tests for handling large response content in FastCGIProxyServletTest to improve test coverage and ensure proper handling of large response content
added startService call in MarkReadService to enable the ReadInteractionsService to ensure that the ReadInteractionsService is stopped when the service is stopped
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader. java ` to ensure warnings are only logged when the
added support for dynamic port assignment based on configuration settings in Email. java to allow users to configure the SMTP server port dynamically
added retry policy for SSLFactory recalculation in TlsUtils. java to improve reliability and prevent issues during SSLFactory renewal
updated the date format in ObjectMapperProvider from " yyyy - MM - dd'T'HH : mm'Z'" to " yyyy -
updated error message in SpyingOnRealObjectsTest to clarify the reason for mocking a private class
added methods to check if line ends on NL and modified conditions in LineBox to ensure proper handling of line ending with NL
updated filePathString assignment to handle null cases to improve robustness by avoiding potential null pointer exceptions
removed unused import of DocCollection in TopicStream. java to streamline code by eliminating unnecessary dependencies
refactor NinjaServletContextTest to use HttpServletRequestInputStream for multipart requests to improve code clarity and maintainability by encapsulating input stream logic
updated the property configuration in AbstractCasEndpointTests to include " management. endpoints. web. exposure. include = * " to enhance test
added validation to ensure the current graph is a dynamic graph to prevent runtime errors due to invalid graph configurations
ignore disabled bean when use @ scopedone with @ scopedone
add option to suppress exception in jsonpath expression
removed duplicate call to ControllerLeaderLocator. create ( _ helixManager ) to streamline code by eliminating redundancy
updated usage messages in CLHSDB and HSDB classes to include " hsdb " instead of " executable " to improve clarity and consistency
refactor FaultTolerantStepFactoryBean and SimpleStepFactoryBean to improve code organization and maintainability
[ hotfix ] remove deprecate writablesinkitcase
refactor ShadowAccessibilityManagerTest to use AccessibilityManager instance instead of accessibilityManager to improve test clarity and ensure correct functionality of accessibility manager methods
add group _ display _ id to analytics to track usage statistic
removed dependency on SourcePathResolver in JavaSourceJar and related classes to simplify code and improve maintainability
refactor PostgreSQLEnumDataTypeHelper to use a new class for enumerated column values to improve code organization and maintainability by encapsulating enumerated column
updated file path assertion to use File. separatorChar to ensure compatibility with different operating systems
inter inter inter inter inter
added a check for index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations when dropping index tables
added a check to update disabled flags in RecentsView based on visibility state to ensure that the overview actions are disabled when the view is visible
added a platform - specific highlighter for Windows in Repl. java to ensure proper syntax highlighting for Windows users
add optional local variable in cross - site scripting
replaced ` toUri ( ). getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS. java ` to improve
removed an unnecessary line of code in SelectBox. java to improve code readability and maintainability
changed the value of _ metaDataComplete from true to false to ensure that metadata completion status accurately reflects the intended behavior
changed the return type of the removeTaskTarget method from boolean to void and modified bitmap creation logic based on bitmap dimensions to improve method clarity and
added support for " PLATFORM " and " RELEASE " flavors in JsBundleGenrule to ensure proper handling of environment variables in the build process
updated type casting logic in ` ppp Lower. java ` and added a new test class ` T6500701. java ` to
added tests for handling crlf new lines in comments and Javadoc to ensure correct formatting of new lines in comments and Javadoc
added a method to set the Liquibase HubMode in the AbstractLiquibaseMojo class to enable configuration of the HubMode
refactor skipPolicy initialization in JsrFaultTolerantStepBuilder and JsrChunkProcessor to improve code readability and maintainability
added error handling for linkDb usage in IndexerMapReduce to improve robustness by logging warnings when linkDb is missing
replaced manual retrieval of the " setIndexerThreadPool " method with reflection to improve code readability and maintainability
updated the address string format in GameCanvasImplementation. java to improve clarity and consistency in address formatting
updated MapJobExecutionDao to use a copy method for job executions to ensure that modifications do not affect job executions
added a new file ` DownloadTest. java ` to implement unit tests for downloading PNGs using ` Gdx. net `
fix checkstyle issue in core / langtools / format. java
updated UDF argument types in GenericUDFRound. java to improve clarity and consistency in error messages
added null check for selectedVersion in ManageDependencies. java to avoid potential NullPointerExceptions during version processing
added multiple AntPathRequestMatcher instances in SecurityConfig. java to enhance security by restricting access to certain paths
added JUnit @ Ignore annotation to TestConcurrentDppInserts. java to temporarily disable tests that are not ready for execution
don't generate ` ` java. lang. object'' for non - concrete class
added an @ Ignore annotation in HttpClientRedirectTest. java to temporarily disable the test due to known issues
updated method names and variable types in OpenWebNetEnergyHandler and OpenWebNetThermoregulationHandler to improve clarity and consistency in
simplify code in aprendpoint
deleted the SunToolkitSubclass. java file to remove unused code that is no longer needed
replaced MathUtils with Matrix4 in DefaultRenderableSorter. java and added hasRotationOrScaling method in Matrix4. java to improve rotation handling
added a new test method and modified import statements in TypeHandlerRegistryTest. java to address issue # 165 and temporarily disable the test
added a method to convert to RGB images in PDSeparation. java to improve image processing for alternate color space
updated URLs to use BuildConfig constants instead of CommonsApplication constants to improve configurability and maintainability of the code
camel - main - health - add fake health check to camel - main
added null check for blockpos before check if it's null to avoid potential NullPointerExceptions during block state processing
added a test for altering a table with indexes in ` AlterTableWithViewsIT. java ` to ensure that the ALTER TABLE command correctly
updated offset handling in FileFloatSource and modified assertions in TestFunctionQuery to improve accuracy in document indexing and ensure proper commit behavior
removed DrillMongoConstants ID from fields in MongoRecordReader to streamline data handling by eliminating unnecessary fields
added disconnection functionality in YeelightHandlerBase and DeviceBase, and modified WifiConnection to handle disconnection state to improve connection handling and
fix for compatibility with mysql 5.2
fix : sharedindexinformers don't return the same informer
cloudstack - 7143 : fix npe in listtemplates api.
changed the type of ` image ` from ` Point ` to ` RobolectricBufferedImage ` and modified image initialization logic to improve robustness by
removed deprecated constants from LauncherSettings. java to clean up the code and improve maintainability
move to / org / drools / examples / broker
added legendTop variable and updated legend positioning calculations in PieChart. java to improve legend positioning and ensure correct positioning of legend elements
added a check to return early if the renderable's world transform is not zero to improve performance by avoiding unnecessary processing when the world transformation
added a new file MaryScriptCreator. java to implement a script creator for generating database selections
added attribute for restlistener. remote. source. host in ListenHTTPServlet. java to ensure that the rest listener correctly identifies the source
refactor compactionLogger initialization and ensure proper resource cleanup to improve code clarity and prevent potential memory leaks
updated URL construction to use " href " instead of " xlink : href " to ensure consistency in URL formatting
camel - aws2 - s3 : use different executor name for timeout checker
hbase - 20772 controlled shutdown fill master log with the disturbing message ' no matching procedure find for rit = open , location = zzzz , table = yyyyy , region = xxxx transition to closed '
added null check for span before logging messages in Slf4jSpanLogger and DefaultTracer to enhance robustness by preventing NullPointerExceptions
trim whitespace from the argument passed to the addActiveOption method to ensure valid input formatting for active options
added depth - based wallpaper zoom settings to improve wallpaper zoom behavior based on user preferences
updated the assertion in OverseerTest. java to check the success count of overseer actions to ensure accurate reporting of overseer
modified the return value of the ` xattrChecked ` method in ` LinuxFileStore. java ` to ensure compatibility with newer kernel versions and
refactor ExecConstants to improve code readability to enhance maintainability and facilitate future updates
added ScreenRecordRule import and annotation in ThemeIconsTest. java to enable screen recording functionality for testing purposes
added ` setScanAttributeForPaging ` method to ` TableSnapshotResultIterator ` and ` ScanUtil ` classes to enable retrieval of scan
update lowRange assignment logic in Request and RequestV2 classes to ensure lowRange values are within a valid range to avoid potential overflow issues
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected and updated cache size estimation in AsyncCache and WriteCache to
fix npe in getzoneuuid ( )
zeppelin - 5957. change the content - type to application / json.
updated filesystem removal method to include zfs parameter to ensure proper handling of filesystems by using the correct zfs object
changed the type of ` obj ` from ` Object ` to ` String ` and updated the ` toJson ` method to improve clarity and consistency in
updated polling timeout values in SoftAutoCommitTest. java to improve test reliability by allowing more time for commit operations
catch exception in selenidelogger. beforeevent ( ) and afterevent ( ) method
add copyright header to javadocs
updated error logging format in SyncQueue. java to improve clarity and consistency in error reporting
updated the version of the Ryuk container from 0.4. 0 to 0.4. 1 to ensure compatibility with the latest features and improvements in the
replace hook. getBootstrapPaths ( ) with hook. getAdditionalBootstrapPaths ( ) and add a new TestHook class to enhance functionality
fix patchy library load on macos
[ hotfix ] use createyarnclusterdescriptor instead of createyarnclient
add stats per map to localmapstatsprovider
deleted the AllTests. java file to the test suite is no longer needed
added constants for UNICODECHAR _ NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE in AbstractWordConverter
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that large stack trace invocations do not star
replaced ` nestedResultMap. getResultMappings ( ) ` with ` getResultMappingsForRowKey ( nestedResultMap ) ` to simplify the method
added eventHandled flag to UIText. java to ensure proper event handling during text processing
deleted the Controller interface and renamed Weldby class to WeldModule to streamline the codebase by removing unused components
added a boolean flag ` monitorCaptureGroupsInEmptyCheck ` and modified conditional checks in ` TRegexBacktrackingNFAExecutorNode. java
changed the initialization of ` liquibaseProLicenseKey ` from a system property to a protected variable to allow access to the ` liquibasePro
mondrian : fix nullpointerexception in mondrian. mondrian
add - g option to generate debug information
mondrian : fix typo in comment
added functionality to retrieve friend paths from Kotlin arguments to enhance functionality by allowing users to specify paths
added support for BATK, BRAHMI, and MANDAIC aliases in Character. java and CheckScript. java to
updated equality and hashing logic in ExecutionCommand and added a new method in StageUtils to ensure proper comparison and deserialization of ExecutionCommand objects
updated Mockito library version to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code readability and maintainability
added a ` toString ` method to ` SystemScope ` class to provide a readable string representation of the ` SystemScope ` object
refactor CSS parsing logic to handle percentage and percentage values more robustly to improve clarity and error handling for invalid parameters in the cmyk (
added tests for local index reverse scan in LocalIndexIT. java to ensure that all rows are returned for reverse scan
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and updated test method names in ` BackupHelperTest `
updated error messages to use string literals instead of hardcoded strings to improve internationalization support and maintainability of the code
refactor condition checks in RendererUtilities and add a new test method in RendererUtilitiesTests to improve code clarity and ensure proper functionality of the XYSeries
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid iterators and update related methods to improve code clarity and maintainability by
added error handling to prevent adding the same column twice during upgrading from 24 - > 30 to improve stability by preventing potential errors during database schema
removed debug print statement from AsyncServletIOTest. java to clean up the code and reduce unnecessary console output
refactor data size computation in ConvertJoinMapJoin to use a dedicated method to improve code readability and maintainability
modified the ` buildView ` method to accept ` Context ` instead of ` LayoutInflater ` to enhance flexibility by allowing customizable background resources
added support for asserting authentication in the SecurityMockMvcResultMatchers class to enhance security by allowing custom authentication behavior
vpc : don't set vpcid to null in gatewaynet
[ flink - 10955 ] [ test ] skip flinksavepointtest on jdk 11
changed the ` @ EdgeType ` and ` @ CaptionStyleCompat ` annotations to ` @ EdgeType ` and ` @ CaptionStyle
simplified loop condition in Actor. java to improve code readability and correctness
updated the BitmexStreamingExchange class to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex API
[ task ] add unit test for virtual metadata
added null check for spatial before processing tris to avoid potential NullPointerExceptions during spatial operations
updated ConditionalTokenFilter and FixedShingleFilter to set lastTokenFiltered to true and added LimitTokenFilter classes to enhance token filtering functionality and
fix unsafestorenode. setstateafter ( ) to set stateafter ( ).
replaced the call to ` super. putAddress ( base + offset, value ) ` with ` io. putAddress ( base offset, value
added an assertion to check if the CAS event repository is empty to ensure that the event repository is not empty before proceeding
removed the ` attributeTemplateName ` parameter from ` AuthenticationAttrProcessor. java ` to streamline the code by eliminating unnecessary parameters
added null checks for the specified key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that a NullPointerException is thrown
removed the ` setTypeface ` method from ` CodenameOneTextPaint. java ` to improve error handling by throwing a ` Runtime
added open ( URI ) methods to AzurePinotFS, LocalPinotFS, and HadoopPinotFS classes to enhance file handling capabilities
simonstewart : remove deprecate fail ( ) method from webdriverrunner
removed a condition that checks if the item's size is greater than zero to simplify the code and improve readability
replaced the use of ` resultObject. getValue ( ) ` with ` this. useConstructorMappings ` in ` DefaultResultSetHandler. java `
updated SQL syntax in the CREATE TABLE statement to include double quotes to ensure consistency in SQL syntax across different platforms
refactor filtering logic in VectorizationContext to improve clarity and maintainability of the code
use generic in configutils. inheritconfig ( moveselectorconfig, inheritedconfig )
replaced the existing ReorganizeTableStatement instantiation with a new modifyDataTypeStatement to simplify the code by removing unnecessary parameters
updated cluster name references to use constants from IoTDBStartCheck to improve code clarity and maintainability by centralizing cluster name logic
improve logging and error handling in PeerEventListener and ClientConnectionManager to enhance clarity and debugging capabilities for connection issues
added checks for multiple style strings in Nano. java to ensure consistent style retrieval based on defined strings
replaced direct usage of ` fixer. fixUp ` with ` AdventureNBTConverter. fromAdventure ` in multiple classes to
updated error message from " Use ` String ` " to " No # toString ( ) on String " to provide clearer context for the method '
updated the JVM option " - Xmx64m " to " - Xmx32m " in TestThreadFailure. java to ensure proper
[ testng ] add retryanalyzer to testng data provider
updated the method call from ` tokens [ 0 ] ` to ` tokens [ bandwidth ] ` to improve accuracy in obtaining tokens by using a more
simonstewart : add a couple of method to the backed selenium driver that don't implement yet.
removed the ` printWarning ( ) ` parameter from the ` doPrintEntry ` method and replaced it with a variable to simplify method signature and
removed unnecessary whitespace in TaskAsyncCallTest. java to improve code readability and maintain consistency
added opacity, shape, and background methods to Dialog and Frame classes to ensure proper handling of dialog properties and prevent illegal component exceptions
changed the ` state ` variable from non - final to final to ensure immutability of the ` state ` variable
refactor Redis configuration handling in RedisObjectFactory. java to improve clarity and maintainability of the code
add ` ` lastseendelayedmessage'' system property for chat room.
replaced the usage of ` new Callback. Adapter ( ) ` with ` Callback. NOOP ` in ` notifyContent ` method to simplify the
refactor sharing operations to use a service instead of direct operation creation to improve code maintainability and reduce coupling
polish ` ` don't use @ inject on fieldpropertyinject''
replaced calls to ` getMinBuildHeight ( ) ` with ` yStart ` in ` ClassicPlotManager. java ` to improve code clarity
added a check for NullPointerException in SmackIntegrationTestFramework to ensure proper handling of NullPointerExceptions during integration tests
tmi - tiff : fix reading of subtyped subtyped directory
added support for ENABLED _ LS mode in VersionTargetGraphCache to enable or disable versions based on the specified mode
added a condition to check if the child's video format is video before proceeding to ensure proper handling of video formats in the media processing
sample code in the AutoMlClient. java file to improve code readability and maintainability
added a load method to LwjglNativesLoader and modified LwjglApplet to use reflection to improve performance by avoiding unnecessary loading of
added support for the " escape " parameter in CSVRequestHandler and updated related error handling to enhance CSV processing capabilities by allowing customizable escape sequences
updated grant type validation in ClientRegistrations and modified test cases in ClientRegistrationsTests to ensure that only supported grant types are handled correctly and
enhanced exception handling in ` Throwable ` and ` SuppressedExceptions ` to improve clarity and consistency in error reporting
added a new SQL query in DerivedTableIT. java and modified the iterator initialization in ClientAggregatePlan. java to enhance query coverage and ensure
added support for the " RSquare " field in the RegressionEvaluator and StreamExpressionTest classes to ensure that the RSquare value is accurately
added request header handling in ThreadContextMDCServletFilter to ensure proper context attribute management for HTTP requests
updated method calls to use the mapWork object directly to improve type safety and reduce casting overhead
refactor PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for fetching images by country to improve code maintainability and
updated cache configuration in ` JwtIssuerReactiveAuthenticationManagerResolver ` and added a new test in ` JwtIssuerAuthenticationManagerResolverTests
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` and added a test for database initialization with directory locations to improve
added a ` isMethod ` parameter to the ` Function ` constructor and modified interop function calls to include the ` isMethod ` parameter to
removed redundant sleep statement in AbstractBasicMockingIntegrationTest. java to streamline code by eliminating redundancy
added a new file ` KernCrash. java ` that implements a custom font rendering to facilitate testing of the KernCrash class
added a fail ( ) method call in LinkedHashTreeMapTest. java to ensure proper failure handling during test execution
added a method to retrieve network interface IPs based on a specified prefix to improve accuracy in identifying network interfaces by their prefix
added housekeeper cleanup test to ensure that the scheduled task be properly shut down
[ amazonechocontrol ] fix misuse of client address in sync state check
refactor assertion methods in Assert. java to improve code readability and maintainability
added a new test file ` Issue247Test. java ` to validate the functionality of creating and retrieving a tree map from a file
changed the type of ` results ` from ` CategoryItem ` to ` ArrayList < String > ` in ` CategorizationFragment. java `
add test for todayLeapYear and birthLeapYear in ValidatorTest. java to ensure that todayLeapYear and birthLeap
added new GrblLookups for alarm and error codes in GrblController to enhance error handling by distinguishing between alarm and error codes
updated the method to return a dynamic label based on the number of screens to improve user experience by displaying appropriate labels based on the number of screens
removed the count parameter from the getTrades method across multiple classes to simplify the method signature and improve code readability
refactor ConsoleReader and MemoryHistory to improve null handling and indexing logic to enhance robustness by preventing potential NullPointerExceptions
updated the path construction for the ". jdk " file in JavaBuild. java to correct the path format for the application folder
updated method calls from ` getDescription ( ) ` to ` getType ( ) ` across multiple classes to improve consistency and clarity in accessing build rule types
added a logger parameter to the JFCModel constructors and methods to enable logging of warnings during model instantiation
added a validation check for the tolerance parameter in MaximumInscribedCircle. java to ensure that the tolerance parameter is non - positive to prevent
added methods to create and drop views in TestUtil and DatabaseMetaDataTest to enhance functionality for managing view privileges in the database
added checks for stable float and double expectations in NaNTest. java to ensure tests are only executed on supported platforms
added a new class ` DesktopTaskbarUIController ` and updated ` TaskbarManager ` to check for PC features to ensure proper icon s
added TaskCountListener to ModItemAdapter and updated RecyclerView implementation to improve task management and ensure proper UI updates
refactor methods in Files. java to improve code readability and maintainability
refactor GrpcServerAutoConfiguration to use GrpcServerFactory instead of GrpcServiceDiscoverer to improve code clarity and maintainability by
updated DomainAwareServicesManager to extend ServicesManager and modified ChainingServicesManager to extend ServicesManager to enhance service management capabilities in the application
use mod : : : getModInfos ( ). get ( 0 ). getModId ( ) instead of modfile : getFileName ( )
chore : update gapic - generator - java version to 2.1. 0 ( # 241 )
added growX and growY methods to Cell class to facilitate dynamic resizing of cell elements
refactor bindings management in DefaultInputHandler. java to improve code clarity and maintainability
fix for http : / / issues. apache. org / jira / browse / amq - 4237
replaced long array with byte array and added memory fail count check in MetricsMemoryTester. java to optimize memory usage and prevent excessive memory usage
deleted the JobParametersPrototype. java file to remove obsolete code that is no longer needed
added a securityEnabled field to the MappingsTable class and updated related methods accordingly to enable or disable the mapping functionality based on security settings
rename ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLE _ SWIFT _ EXPORTED _ OBJ
changed the constant ` DUMP _ TO _ FILE ` from ` true ` to ` false ` to disable dumping for file operations
[ android ] workaround for espressoprocesWorkaround ( )
[ java ] check for spy position before set the producer limit.
added a condition to check if the output options are not empty to ensure proper handling of cases where no information is present
don't use ssl on uris that don't have port 443
updated the buildDOMSubtree method to include error output options to enhance error handling for XHTML output
refactor assertion methods in Assert. java to improve code readability and maintainability
add ` ` retain'' property to event to track retained event
updated JSON string representation in EventSerializationTest. java to include testCaseName to improve clarity and accuracy of test cases
[ flink - 21163 ] [ table - planner - blink ] use $ tumble instead of $ tumble
updated import statement from org. fastparse. core. Parsed to org. fastparse. Parsed in LatexToUnicodeAdapter. java to
make sslcontext. newssl ( ) thread - safe.
updated condition check from ` size ( ) = = 0 ` to ` isEmpty ( ) ` in ` AppModule. java `, modified Watch
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext. java ` to ensure compatibility with Ansi SQL
changed debug log level from debug to trace in FirmwareUpdateService. java to improve logging granularity for better debugging
added tests for retrieving null dates and timestamps in the database to ensure that null values are handled correctly in the database operations
updated string concatenation in ` StringSubject ` and ` Subject ` classes to improve clarity and consistency in string representation
added unit test for repository permissions in UserModelTest. java to ensure correct permission handling for multiple team models
added a new file Test7088020. java that implements a MethodHandle test for missing stack frame arguments to ensure proper handling of missing stack frame
replace audience restriction matching logic with a set to ensure that the audience URI matches the expected SP configuration
refactor cache update logic in ` AbstractDataChangedListener ` to improve code clarity and maintainability
updated stderr handling in StdErrLog to check for null before printing to improve robustness by preventing potential NullPointerExceptions
added a SEPARATION _ ORDER constant in Warning. java and modified BasicEventSimulationEngine. java to include stage active status checks to improve
updated the parameter from ` offlineTableConfig ` to ` realtimeTableConfig ` in the ` optimize ` method call to ensure that the query optimizer
added functionality to enable or disable the " hbase. normalizer. enabled " property in the UpgradeCatalog classes to ensure that the " hbase. normalizer
refactor SavepointV2 and FileStateHandle classes to improve code readability and maintainability
added Bluetooth class handling in ShadowBluetoothDevice and ShadowBluetoothDevice to support setting and getting Bluetooth class dynamically
updated method name from ` contains ` to ` containsProfile ` in ` GlowOfflinePlayer ` and ` GlowPlayer ` classes to improve
sum ( [ ] ) : improve error message for null and empty list
replaced graphModel. getGraph ( ). readUnlockAll ( ) with graph. readUnlockAll ( ) in DataBridge. java to improve
updated coreNodeName assignment to use nodeProps's getCoreName ( ) method to improve clarity by using the correct core name from properties
add backpressure to contact list update.
rename TaggerParserPosTagCompatibilityITest. java to improve clarity and maintain consistency in naming conventions
added @ LuceneTestCase. SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase. java to suppress codecs
updated element type comparison logic in mmm Types. java and added a new class T7005671. java with multiple test cases to ensure
updated DelaunayTriangulator to use fixed xmid values and replaced EarClippingTriangulatorTest with Delaunay
a report by ant ant ant ant ant ant ant ant ant ant ant ant ant task
refactor JWTClaimsSet initialization to use a builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl. java to improve clarity and maintainability of state transitions
added shadow methods to ShadowSQLiteDatabase and ShadowContentValues in Robolectric. java to enhance testing capabilities for SQLite database interactions
added a ` initiateGL ( ) ` method to ` LwjglGraphics ` and modified ` LwjglAWTCanvas ` to call `
replaced ` bytesPerDim ` with ` ArrayUtil. getUnsignedComparator ` in ` BKDWriter ` to improve performance by using a custom comparator
updated Locale class to include script and country handling to enhance locale retrieval by incorporating script and country information
update text alpha return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure correct text alpha is returned based on the
corrected a typo in the warning log message from " Confimap PropertySources does not match " to " ConfigMap PropertySources does not match "
replaced LimitedModeLoginMockMvcTests with UaaJunitSuiteRunner's allSuiteClasses method to streamline test suite execution by
trim whitespace from token values in GzipFilter and related tests to ensure consistent handling of whitespace in method calls
corrected formatting in Response. java to improve code readability and maintain consistency
updated the property key from JDK to JONI in RegExpFactory. java to ensure compatibility with the updated Nashorn regex implementation
replaced ` LooperExecutor ` with ` Executor ` and refactored task handling in ` ViewCapture. java ` to improve concurrency handling and
[ mary ] add support for query parameter'style'in info request
added a check to ensure the parent folder exists before creating it to prevent errors when attempting to create a non - existent folder
updated node discovery bind IP from " 0.0. 0.0 " to " 127.0. 0.1 " to ensure consistency in IP address formatting
( chore ) camel - jbpm : fix typo in camel - jbpm
pdfbox - 4071 : make jpegutil constructor final
updated the ` WorkModeToggleContainer ` and ` WorkFooterContainer ` classes to improve clarity and consistency in naming conventions
updated copyright year in some file
refactor type parameter printing logic in DefaultJavaPrettyPrinter. java to improve clarity and ensure proper handling of implicit types
[ hotfix ] [ runtime ] free memory in operatorcontext
updated error messages in QueryByExamplePredicateBuilder and JpaPersistentPropertyImpl to improve clarity and consistency in error reporting
updated ` evictionCounter ` and ` statsList ` in ` ConcurrentLRUCache ` and modified data handling in ` FastLRUCache
don't run action on fx thread in defaulttaskexecutor. run ( )
don't check if the intended destination be a Inet4Address instance
added RuntimeEnvironment initialization in MainFrame. java to ensure proper configuration of database properties
added ` MarkedClientEnabled ` and ` AdminServerEnabled ` constructors to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration `
[ hotfix ] [ table ] fix typo in tableenvironment javadoc
replaced the ` setStatementTimeout ` method with a direct call to ` timeout ` on ` statementBuilder ` to simplify timeout handling and improve code clarity
refactor ` hangingTscTimeout ` to ` options. getHangingTscTimeout ( ) ` across multiple transpiler classes to improve code
added serialization for GeoLocationRequest and GeoLocationResponse classes in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and Geo
updated ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl ` to improve clarity
tika - 4687 -- fix for tika - 4687 -- throw an exception when there be no hpsf document
don't trigger concurrent modification on circular definition
don't try to write to pipe when there's no data available
added error messages to ` HasValue ` methods in ` GuavaOptionalSubject ` to provide clearer error messages when equality checks fails
updated the ` getVisibleElements ` method to include ` VERTICAL _ SWIPE _ INDICATOR ` in ` BackgroundAppState ` and
added a null check for the nav variable in MatDefEditorlElement. java to prevent potential NullPointerExceptions when accessing nav variables
DrawImage. java and DrawImage. java to improve readability and maintainability of the code
refactor ErrorOccuredInOnExceptionRoute class to improve code readability and maintainability
astrodiscoveryservice : use schedulewithfixeddelay instead of scheduleatfixedrate
simplified unit assignment in SinglePassAndImageBasedLightingLogic. java to improve code readability and maintainability
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang
updated import statements in GuiceFactoryTest. java to streamline dependencies and improve code readability
added system feature management functionality in RobolectricPackageManager to allow users to enable or disable the camera feature
added support for path property in RCAFrameworkLoader and created a corresponding test case in RCAFrameworkLoaderTest to enhance property handling and ensure
added logging for the start of cancellation watch dog to improve visibility into the cancellation process
added null and empty checks for enumerationValues in RADProperty. java to ensure proper handling of null values and prevent potential NullPointerExceptions
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 46
add ` ` remote _ ip'' to the ` ` collectandsendtelemetrydata ( )'' message
updated column type change logic for MySQL in UpgradeCatalog260. java to ensure correct handling of database types for MySQL
updated error messages in BaseTableDataManager. java to include space and write permissions to improve clarity and user understanding of directory permissions
[ hotfix ] [ dataset ] fix typo in datasetutilities
added selector ID " : " to the key in mmm Matcher. java and ppp Matcher. java to ensure the correct identification of
updated debug logging format and corrected formatting in GouraudShadingContext. java to improve readability and consistency of debug logs
updated taskbar alpha constants and added methods to manage visibility and visibility of the taskbar to enhance the taskbar's functionality and improve user
rearranged import statements in KeyExchange. java to improve code clarity and maintain consistency in import statements
added a type check for ` conn ` before executing a query in ` CockroachDatabase. java ` to ensure proper handling of `
updated error messages in ServerMainTest. java to include a conditional check for index2 and index3 to improve test reliability by ensuring
added methods to retrieve media ordering MIME type in CodenameOneImplementation, MediaManager, and ImageIO classes to enhance functionality by allowing retrieval of
change the access modifier of the ` useShaders ` method from private to public in ` ShaderHelper ` to allow external access to the sh
mondrian : fix druidadaptertest to match druid
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintain consistency
updated XMPMetaParser. java to improve code formatting and enhance feature settings to enhance readability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org. springframework. security. oauth2. client ` package to provide
replace ` indexOf ( " < script > " ) > = 0 ` with ` while ( result. indexOf ( " < script > " )
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modified conditional checks for varargs access to
replaced null checks for BORDER _ TOP, BORDER _ BOTTOM, and BORDER _ LEFT with a new method ` borderIsNotSetOrBlank ` to
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager to improve log verbosity for better troubleshooting
updated InternalDropAllCommandStep to include HubRegisterResponse in the attachProjectToConnection method to enhance functionality by providing a response for project
replace ` ( b [ off ] & 0xff ) ` with ` Byte. toUnsignedInt ( b [ off ] ) ` across multiple
updated string conversion from " Hello RocketMQ " to " Hello RocketMQ " to ensure consistency and correctness in encoding
changed DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig. java to align caching behavior with updated requirements
changed the rangePannable property from true to false in CategoryPlot. java to ensure that the rangePannable state accurately reflects the
updated conditions for setting main activity and view removal in AllAppsContainerView. java to ensure proper handling of work mode switching based on current page type
changed access modifiers of ` glCaps `, ` renderer `, and ` animator ` fields in ` Visualizer2TopComponent. java `
added exception handling for CancellationException in FunctionTest. java to improve robustness by gracefully handling potential cancellation issues
changed constructor visibility from package - private to protected in JarFileResource and JarResource classes to restrict access and improve encapsulation
[ hotfix ] fix typo in defaulttrackselector javadoc
added a sleep mechanism for unseqMerging in LevelCompactionTsFileManagement. java to ensure proper handling of unseqmerging processes
updated fee assertion from AUD to BTC in BTCMarketsAdaptersTest. java to ensure compatibility with the latest cryptocurrency
updated SQL queries and refactored test cases in Hibernate classes to improve clarity and accuracy of database interactions
refactor methods in Unicode class to improve code readability and maintainability
updated ` installAutoInstance ` method to include ` Service ` parameter and added logic to update Hive LLAP settings if the corresponding service is present
removed unnecessary whitespace in SendHeadersFirstPublisher. java to improve code readability and maintain consistency
update aws module to use builder instead of custom deserializer
added handling for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
renamed ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper. java ` to improve clarity by accurately reflect the
removed unused import and print statements for annotations in ParameterInfo. java to clean up the code and improve readability
added support for Ac3 playback in the PlaybackController and VideoManager classes to enhance playback control and improve error handling during seek operations
replaced the existing HttpResponse with a map of values and modified the return statement to include a null value to improve the handling of null values in the
added @ SuppressWarnings ( " deprecation " ) annotations for Commons DBCP and FileUpload in DelegatingStatement and DiskFileItem classes to address
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT. java ` to ensure that SQL statements are correctly
refactor RTimerTree class to improve code readability and maintainability
updated package names from com. facebook. buck. rules. graphbuilder to com. facebook. buck. core. rules. graphbuilder to
fix issue with text that don't appear in the middle of the text
modified the executor and scheduler initialization in ClientConnector. java to include a unique name for the client thread and the client scheduler to improve clarity and
refactor ViewResultsFullVisualizer to improve code readability and maintainability to enhance maintainability and readability of the code
added descriptions for phone numbers in ScimUserEndpointDocs. java to enhance clarity and understanding of phone numbers within the user interface
added private constructors to DeleteFiles, IndexFiles, IndexHTML, SearchFiles, and SearchFiles classes to ensure these classes are accessible from outside
added null checks for responseMap in JsonHttpPropertyRequest and URLStreamProvider to ensure proper handling of null properties and improve error logging for HTTP
refactor SolrRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the parallel parameter is not DEFAULT _ PARALLEL in XmlSuite. java to ensure that the parallel processing
testvmwareutil : fix checkstyle violation
added support for SCARD _ E _ NO _ SMARTCARD in error handling to enhance error handling by allowing additional card types
added SuppressSysoutChecks annotation to Test2BTerms. java to suppress unnecessary console output for debugging purposes
camel - bindy : add bind method to bind complex collection of key - value pair
changed default values for " useOwner " and " useTimeStamp " from Boolean. TRUE to Boolean. FALSE to ensure consistency in default values for
updated the ` runAndCheckException ` method to accept a ` ThrowingRunnable ` instead of a ` Runnable ` to improve exception handling by allowing
added null checks for ` via ` and ` viaContext ` methods in ` CrawlURI. java ` to avoid potential ` NullPointerException `
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated VERSION from " 4.1. 1 " to " 4.1. 2 " and refactored object retrieval methods in LiquibaseXMLTransformer to
change the default value of cert. validity from 7 to 90 to allow more flexibility in certificate validity settings
updated the ` frame ` variable and related calculations in ` ThreadHandler. java ` to improve accuracy of time calculations by using a smoothed delta
added null check for tableSpec ( ) and modified URL parsing logic in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of null
added null check for the CompactionInfo client and introduced a test for finding the next compact exception to improve robustness by preventing null pointer exceptions
modified fragment state handling in ShadowFragmentActivity and added a test for onSaveInstanceState in FragmentActivityTest to ensure proper restoration of fragment state during
updated formatting in BatchResourceFactoryBean. java for consistency to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the application correctly handles color references in the application
added error handling for query result retrieval in AbstractJPAQuery. java to improve robustness by logging exceptions when no results are found
mondrian : fix nullpointerexception in collection. getparents ( )
updated the method call to use LawnchairApp for retrieving wallpaper depth effect preferences to ensure compatibility with the latest Lawnchair
removed an unused import statement for ProcessTools in LocalManagementTest. java to streamline code by eliminating unnecessary dependencies
updated the ` updateTotalEnergyAverageUsage ` method to use ` getHeadSlot ( ) ` instead of a ` now ` parameter to improve
refactor ExtensionStack to handle null extensions and improve string formatting to enhance robustness by ensuring proper handling of null values
2. x : 3. x : 3. x : 3. x : 3. x : 3. x : 3. x :
added connection timeout settings in MultiGetRequest and updated error handling in ServerTableSizeReader to improve connection management and enhance error logging for timeout issues
updated formatting in AndroidPrebuiltAarDescription. java to improve code readability and maintain consistency
replaced NewModelTest with ModelTest in LwjglDebugStarter. java to align test with the new model implementation
replaced SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher in EdgeSyncCursor. java and modified inlineImage method in BaseImageService.
updated the success condition in CachingBuildEngine and added a test in CachingBuildEngineTest to ensure that output hash updates correctly when cache is not
camel - netty - allow to turn off bytebuf by default
replace getOldName ( ) with Warehouse. getQualifiedName ( tbl. getTTable ( ) ) in alterPartitions method to ensure correct retrieval of
improve error message when use prefernativetransport = true to create domain sockets
test : move enumtypehandlertest to coretypes
refactor StreamEx class to improve code readability and maintainability
removed hint settings for query timeouts in SessionImpl. java to streamline query execution by eliminating unnecessary timeout hints
added a new class ` StaticLoggerBinder ` to the ` org. slf4j. impl ` package to facilitate the use of
hbase - 1372 don't clone the family map in some case.
added orientation checks for window dimensions in TaskbarManager to ensure proper handling of window dimensions when orientation changes
fix for jabber chatroom's nickname contain special character.
updated the ` longStackPut ` method call in ` StoreDirect. java ` and added a new test class ` Issue265Test. java
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable collections and improve code clarity
http : / / issues. apache. org / jira / browse / http / issues. apache. org / jira / browse / http
updated type checks for audioTracks and subtitleTracks in DLNAMediaInfo. java and FFMpegVideo. java to improve code clarity and
modified NBWriteServlet constructor to accept an unlimited state to enhance flexibility in handling write operations by allowing unlimited writes
fix ( blockchain ) : update totaldifficulty after import
modified action handling in DefaultPlaybackController to return BASE _ ACTIONS when the player is not the current window seekable to improve code clarity and
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport. java and updated method calls in SecurityServicesFeature. java to improve thread safety and
addedUniformAlloc initialization and modified bend angle calculations in AllAppsView. java to improve performance and accuracy of bend angle calculations
modified condition to check for the presence of a colon in the key to ensure proper handling of edge cases in URL processing
added PrincipalResolver import and modified method signature in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration. java to enhance dependency management and improve
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse. java to improve compatibility with NogGit's JSON parsing library
added a method to remove trailing slashes from StringBuilder to ensure proper handling of trailing slashes in URLs
added methods to match various patterns in the PatternsMatcher class and corresponding test cases in PatternsMatcherTest to enhance pattern matching functionality and ensure
hbase - 25836 improve error message in loadincrementalhfiles ( addendum )
added potion - based block fading event handling in BlockFire. java to ensure proper block fading behavior based on potion IDs
removed unnecessary whitespace in ` beginOrAdjustReorderPreviewAnimations ` method call to improve code readability and maintain consistency
updated calculations for decreasePercent and supportUnfreezeDelay in ContractStateCapsule and ReceiptCapsule to improve accuracy in determining if TVM
updated isready ( ) method to onreadunready ( ) in AsyncContentProducer and added isready ( ) method in BlockingContentProducer
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that the weightField parameter is mandatory to prevent runtime errors
refactor AppleBundle to use a variable for plist variable expansion to improve code clarity and maintainability by centralizing plist variable handling
fix the laser turret not be able to turret
changed return type of ` adaptOrder ` methods from ` OrderCreateApiRequestBuilder ` to ` OrderCreateApiRequest. OrderCreateApiRequestBuilder `
added a new file ` PreParseGrammarTest. java ` to facilitate testing of XML grammar parsing
suppress doclint : missing warning in javax. swing. plaf. *
added FontManager import and updated overrideFont method call in ExtendedEditText. java to enhance font customization functionality for improved user experience
added null check in AuthorizeTag to return an empty list if no user is present to ensure that the tag correctly handles cases where no user
( chore ) camel - cxfrs - cxfrs - cxfrs - cxfrs - cxfrs - cxfr
added an override method ` setUpData ( ) ` in ` JDBCGeometryTestSetup. java ` to ensure proper initialization of the ` setUpData
removed unused import of DumpHandler in MultipartFilterTest. java to streamline code by eliminating unnecessary dependencies
[ hotfix ] [ runtime ] don't stop restore attempt for already cancelled task
add server. rmi. create property to enable rmi registry creation
use string. join instead of string. join for anticompactranges log message
updated display metrics handling in multiple test classes to ensure accurate retrieval of display metrics across different SDK versions
[ java ] : add cluster member id to service heartbeat counter.
updated the calculation of numAttributes based on the version check to ensure accurate tracking of thread allocation based on version requirements
modified the calculation logic and added a conditional check for negative infinity and positive infinity in CustomExpression. java to ensure proper handling of NaN values and
( chore ) camel - jms : improve logging of consumer and continuation
added authentication and authorized routes to the AuthenticityController and created AuthenticityFormTest to enhance functionality for authenticated users
add assertion to ensure that the next node be alive before proceeding
changed the logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HTTP client implementation
[ trackselectors ] fix compareto method in defaulttrackselector
refactor RuntimeSerialization class to improve code readability and maintainability
DrawImage. java to check if the image be crop before use it to ensure that only valid coordinates can be croped
refactor UnitOfWorkFactory for improved readability to enhance maintainability and facilitate future updates
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated its assignment in ` WidgetPreviewLoader ` and `
tika - 2852 -- set default resource name if no content disposition file be provide
updated URI construction in ThumbnailsCacheManager. java to use fileId instead of getRemotePath ( ) to ensure correct file ID is generated for thumbnail generation
added support for marking and resetting in the Source class to ensure proper handling of input state during operations
added @ Deprecated annotations to AsyncProcessor, BehaviorProcessor, AsyncSubject, and BehaviorSubject classes to deprecate methods and improve code clarity
added a configuration property ` SERVER _ SHOW _ ERROR _ STACKS ` to control the visibility of error stacks in the application
bug 7143 : don't fail domain cleanup while remove account
[ sparc ] do not throw bailoutexception when foreign call be not available via jvmci
[ drools - 5 ] add support for legacy drools 5. x api
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to call ` callSerially ` to ensure proper handling
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest to allow more time for tests to complete
updated ResName qualification logic in ShadowAssetManager. java to ensure correct handling of resource names based on the parent string
deleted two files MrefStat. java and MrefStat1. java to remove unused classes to streamline code
added a check for blank scopes in DependencyInsight. java and DependencyInsight. java to ensure a default value is provided when the requested scope is
updated error handling in BTCETradeServiceRaw. java to improve clarity and maintainability of error messages
use hamcrest assertion instead of junit in unit test
bitcoinuri : add method to get payment request url.
[ planner - 383 ] throw illegalargumentexception for unsupported type argument
removed redundant line setting folder information in FolderPagedView. java to streamline code by eliminating redundancy
updated conditions in JfrBufferNodeLinkedList, JfrChunkWriter, and JfrThreadLocal classes to improve lock ownership checks and enhance
refactor null value handling in BasicAbstractTuple to improve code readability and maintainability
refactor LinterConfigs parsing logic to use InputResourceUtility for improved error handling to enhance robustness and maintainability of the code
replace direct call to updateBackgrounds ( ) with a Runnable to execute updateBackgrounds ( ) and updatePaddings ( ) concurrently
fix inventory. oninventorytick not call oninventorytick.
added a case for the OCELOT _ BABY event in PlayerEvents. java to handle the new event type for improved gameplay
[ hotfix ] [ ttl ] add @ publicevolving annotation to statetlconfig
added null check for x before setting it in PreparedStatement and Array classes to ensure proper handling of null values in set operations
[ java ] : improve archive tool output to include invalidated recordings.
changed string literal from double quote " \ n " to single quote " \ n " to ensure consistent character handling across different operating systems
updated the formatting of the ` directory ` and ` propertiesFile ` in ` SiteSnapshotVariationsTest. java ` and added a new test
added caching functionality to the BroadTest class to improve performance by optimizing transaction and block management
add support for ` LeLensMask [ 0 ] ` command in ` AmcrestHandler ` and ` DahuaHandler ` to
removed the ` NoSuchBuildTargetException ` declaration from the ` getBuildTargetForFullyQualifiedTarget ` method in ` BuckConfig ` and ` BuildRule
refactor ChangeLogIterator constructor to accept a list of ChangeSetFilter objects to improve flexibility in initializing ChangeLogIterator instances
don't swallow guest exception in launcher.
updated method to use ` Utils. getEnvOrSystemProperty ( " OPT _ OUT _ TRACKING " ) ` instead of ` Utils
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
fix : space before ( ) and after ( ) for annotation array initializers
# 827 - enh : add copy ( ) method to servercacheproperty to allow setnearcache ( true ) to be
added a new test method to verify that the hidden border behaves as expected on floated elements with overflow hidden
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator. java ` to
updated Kucoin sandbox URI from LIVE _ URI to PROD _ URI and added error logging for Kucoin host exceptions to improve
simplified string concatenation in SpringResourceAccessor. java to improve code readability and maintainability
added unit tests for MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE
updated vertex mask retrieval from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader. java `
deleted the Tls12SocketFactory. java file to remove obsolete code that is no longer needed
fix : don't replace bibfile with citations in texbibentriesresolver
added Robolectric legacy mode check in ResourcesTest. java to ensure compatibility with Robolectric's testing environment
added a check for FirebirdDatabase to return a new DatabaseDataType with " DOUBLE PRECISION " to ensure proper handling of double precision in
added null checks before setting the data source and transaction manager in DefaultBatchConfigurer to avoid potential NullPointerExceptions during initialization
add package - info. java file for unittest stubs.
updated test timeouts in ` @ Test ( timeout = 60 _ 000L ) ` and ` @ Test ( timeout = 60 _ 000L )
no effective change - code cleanup - try - with - resources
updated TermScorer instantiation to use scoreMode when scoring is not needed to ensure proper handling of scoring behavior based on the scoring mode
make dataflowmetrics. metric ( ) return an empty list instead of null
bug fix : don't fail vm start if data center don't exist vm
refactor DynamicPartitionPruner to use a new method for finding the target object inspectors to improve code clarity and maintainability by centralizing
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ArtifactFilesystemTest ` and ` ActionExecutionStep ` to
added row selection logic to the table in ThrustCurveMotorSelectionPanel. java to ensure that the selected row does not interfere with
replace assertthrows arraystoreexception with assertthrowsarraystoreexception.
refactor PropertySource class to improve code readability and maintainability
added support for custom user agent in the HTTP client configuration to enhance flexibility by allowing custom user agents
refactor session creation logic into a separate method to improve code readability and maintainability
updated assertions to expect 5 distinct test instances and changed the collection type from HashSet to IdentityHashMap to improve test accuracy and ensure predictable iteration order
camel - 16400 : fix npe in consumeeservice when content type be null
add event to denial when an activation request be deny
added @ SuppressWarnings ( " serial " ) and modified calculations in GraphApplet. java to improve code clarity and ensure proper method overriding
added ` updateTaskViewsSnapshotRadius ( ) ` method to ` RecentsView ` and updated the ` updateSnapshotRadius ( ) ` method
added logging functionality and modified schema addition process in StaticMicroserviceVersions. java to enhance debugging capabilities and improve schema generation process
changed the return type of the put method from void to int in ArrayMap. java to allow methods to return the index instead of void
updated KafkaContainerCluster to set a startup timeout and streamline brokers processing to improve reliability and performance of Kafka transactions
( chore ) camel - defaultmq : don't send message back in case of failure
refactor header checking logic in StaticServerHttpHeadersWriter to improve clarity and ensure headers are not duplicated
replaced Class. forName with ReflectUtil. checkPackageAccess in EventListenerList. java to enhance security by ensuring proper package access checks
added functionality to display a list of applications in the ApplicationsFragment to enhance user experience by allowing easy access to the applications list
updated the applyIcon method to accept a nullable Task parameter and added a null check for the task object to enhance functionality by allowing null checks for
refactor DownloadStateCursor to use try - with - resources to ensure proper resource management and avoid potential memory leaks
( chore ) camel -Sqm - to - sql : fix compilation error
added JUnit test annotations to HibernateCursorItemReader, HibernateCursorItemReaderStateful, and HibernateCursorProjectionItemReaderIntegrationTests to improve test
refactor DataInputStreamWithTimeout to use an ExecutorService for thread interruption handling to improve responsiveness and reliability when reading input data
added ENABLED _ TS ( 0 ) to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150 class to improve code readability and maintainability
rename networkparameters. testnet3 to networkparameters. oldtestnet
remove redundant code in PropertiesViewD. java to streamline the code and improve readability
refactor onboarding preferences handling in AppsDividerView. java and add nullability annotation in ActivityContext. java to improve code clarity and
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for resource closure to improve performance and reliability of index output operations
pdfbox - 4071 : don't set clippingpath if it be not complete
removed unnecessary synchronized block around localAddress assignment to simplify code and improve readability
refactor TemplateTransformer to improve row handling by introducing addToRow method to enhance code readability and maintainability by encapsulating logic in a dedicated method
added a method to check if the program is running on Windows and modified file renaming logic to ensure proper handling of file names and improve error handling
replaced ` CHARACTER _ ENCODINGS [ 39 ] ` with ` ASTERISK _ ENCODING ` in ` Code39Reader ` and ` Code
added checks for non - null and non - generic return types in NodeGenFactory to ensure proper handling of unexpected types during type generation
refactor stored field value handling in IndexingChain. java to improve code readability and maintainability
fix ( sql ) : timestamp _ sequence ( ) don't work with where clause
updated error handling in LwjglCanvas to simplify stack trace retrieval to improve code readability and maintainability
updated the description for the storage API URL in AbstractGCSProcessor. java to improve clarity and consistency in the documentation
replaced assertInitialized method with waitUntilInitialized method in ConnectionPoolTest. java to improve synchronization and ensure thread safety during connection initialization
changed the directory context from " null " to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure the directory context is
refactor UserData to use a filter count instead of a size - based approach to improve clarity and maintainability of the code
updated methods and imports in FileWithTabs. java and T4994049. java to improve code organization and enhance error handling for file
replaced redundant conditional checks with a static import for ` assumeTrue ` in ` ConsoleReaderTest. java ` to streamline code and improve readability
remove unnecessary check for admin user in getfeedbacksessionsaction
updated calculations for newSelection and condition checks in AllAppsView. java to improve the responsiveness and accuracy of message processing
bugfix : don't notify client on result availability
added functionality to load and refresh the model list in DataModelManagerDialog and modified database connection handling in DbConnectionDialog to improve user experience by
changed ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` and updated constructor calls to use ` String. valueOf ( ) ` to improve
updated segment size calculation in DocumentsWriter. java and added a test case in TestIndexWriter. java to improve accuracy of segment size calculations and
blender loader : fix illegalargumentexception in armaturemodifier
refactor FileDisplayActivity for improved readability to enhance maintainability and facilitate future updates
[ hotfix ] avoid fill in stack trace in applyspecialization
updated the method to return the average line height instead of a fixed height to improve accuracy of label rendering by using the average of the line height
updated the constructor of RotationTouchHelper to accept a DisplayHolder parameter to enhance flexibility in managing display states during animations
modified string quoting logic in AVA. java to ensure proper handling of quote characters to improve robustness and prevent potential errors when quoting strings
replaced ` Long. valueOf ( s, 16 ) ` with ` IdConversion. convertToLong ( s ) ` and updated the ` setStateCurrent
renamed the test method from ` name ` to ` testSmall ` and added a new test method ` testBig ` to improve clarity of test
updated the COUNTRY _ CODE _ CODE _ s query in TestSqlEntityProcessorDelta. java to ensure consistency in the expected COUNTRY _
refactor Cache class to improve code readability and maintainability
changed variable names from " e " to " ev " in ResourceSetRegistrationEndpoint. java to improve clarity and consistency in naming conventions
updated IndexSearcher initialization and modified seenDocIDs initialization in TestUnifiedHighlighterTermVec. java to improve code clarity and ensure consistent handling of
added a new GUI component to display a persistent JTable with data to enhance user experience by allowing users to add data to a GcodeTable
updated the CONNECT _ TIMEOUT constant to use the configuration's connection timeout to improve flexibility in determining if the web application is reachable
updated generic type in SamlUtils and RevokedCertificateException to improve type safety and clarity in error handling
refactor TestMediaService class to improve code readability and maintainability
removed the constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK from Messages. java to streamline the code by elim
add new file marketsprinttool. java to display fiat and crypto currency
validate that the provided component don't contain alphanumeric and dash in the request to ensure that the provided component don't exceed the
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` and ` HttpAccount ` classes to enhance
refactor ServerSpanThreadBinder class to improve code readability and maintainability
updated user pointer retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics. java ` and modified block bounds
updated the name of the Point class from " Location " to " the _ geom " and added " number " to the builder to improve clarity
replaced ` callGasWord ` with ` gasCost ` in ` VM. java ` and removed unused imports from ` Program. java `
refactor methods in Parameters. java to improve code readability and maintainability
added a method to ignore null values in the piePlot to ensure that null values are ignored during plot processing
refactor bundle loading logic to improve efficiency and readability to enhance performance and maintainability of the bundle loading process
changed the character from'_'to'-'in TaggedPdfReaderTool. java to ensure proper formatting of the code
allow executescript action to be mark a allowed during edit
added userModified flag to LoginSamlAuthenticationProvider to ensure that user modifications are tracked during authentication
added a new file TestSealedObjectNull. java to test the behavior of SealedObject with null cipher to ensure proper handling of null
renamed the ` onOpen ` method to ` setResponse ` and updated its implementation in ` ConnectPromise ` and ` WebSocketClientConnection ` to improve
added support for SNOW events based on server version to ensure compatibility with newer server versions
added lastTradeId to trade tracking in CryptsyAdapters and CryptsyPublicTrade classes to improve trade tracking by tracking the last processed trade
added error handling for closing the HMS connection to ensure proper resource management and avoid potential memory leaks
use random. nextLong ( ) instead of system. currenttimemillis ( )
updated device profiles in DynamicGrid. java to include " Nexus 5 " to ensure compatibility with the latest device profiles
2. x : 3. x : 3. x : 3. x : 3. x : 3. x : 3. x
replaced direct instantiation of SynthContext with ReflectUtil's newInstance method to improve compatibility and maintainability of the code
added support for " WHITESPACE _ AROUND _ TEXTUAL _ OP " in FormatToken and related classes to enhance the tokenizer's functionality
added checks for empty or null file existence in SaveTask. java and improved test cases in SaveAndLoadTaskTest. java to ensure proper
added synchronized keyword to several methods in MLogWriter. java to ensure thread safety during concurrent access
[ log4j2 - 1757 ] fix log4j2 - 1343. add ( log4j2 - 1342 )
changed the constant ` PADDING ` from ` LengthLike ` to ` NonNegativeLengthLike ` to accurately reflect the purpose of the constant
remove getUser ( headers ) call from createcontext ( ) in multiple resource classes
refactored exception handling in MethodIRBuilder and updated method calls in SootWorldBuilder to improve code readability and maintainability by consolidating
updated test result handling in JUnitRunner and modified error messages in AndroidPlatformTarget to improve test coverage accuracy and provide clearer guidance on the Android SDK
increase cache size from 16 to 8 in OmniNotes. java to optimize memory usage for improved performance
added a condition to check if ` start ` is equal to ` finish ` and ` operationPerfs ` in ` InvocationStageTrace. java
add protection against npe when load a key store.
updated the server port initialization and modified URL checks in UpstreamCheckUtilsTest. java to improve test reliability by dynamically obtaining the local port
ggb - 1987 fix for ticket : 269
added checks for the " GL _ ARB _ compute _ shader " and " GL _ ARB _ geometry _ shader _ 4 " caps
refactor PopulatorContext class to improve code readability to enhance maintainability and ease of understanding
don't reload project if project don't exist
updated ZQLJobManager to use UTF - 8 encoding for JSON serialization to ensure proper handling of character encoding in JSON output
added a check for non - empty arguments in the IkStepDefinition class to ensure robustness by preventing potential NullPointerExceptions
replaced hardcoded string literals with a static PREFIX in OSSOHeaderDecoder. java to improve maintainability and maintainability of the code
deprecate - suffix - strategy option in generatejavasources and generatejavasources
removed debug log statements for accessing the Apache Derby driver class to streamline error handling for better debugging
( chore ) camel - esp : fix flaky test
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider. java to improve performance and readability of the code
updated the handling of the ROLLBACK operation to check if the Liquibase Hub mode is already set to " Liquibase H
added constants for IBM J9 and Eclipse OpenJ9 VM versions in Constants. java and a corresponding test in TestDDRExtensionGeneral.
refactor font handling in FontFamily. java and add DebugFonts. java to improve clarity and functionality of font logging
added HTTP version checks in NegotiatingServerConnectionFactory to ensure proper handling of HTTP version in negotiated connections
added RateControl configuration to MaxConcurrentStreamsTest. java to disable rate control for improved performance
added a new file Test6741426. java that implements a Runnable to create a GUI with a JComboBox and JTextField using Nimbus
updated error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest to improve clarity and consistency in error reporting
added null checks for ` dbMgdPath ` and ` dbExtPath ` in HMSHandler. java to ensure that the directory is
move s3copyobjectrequest to package com. cloud. bridge
refactor setup methods to use PreferenceScreen directly instead of accentColor to simplify code and improve consistency in theme handling
updated error message in TemporaryFolderUsageTest to include " fileAtRoot " to improve clarity and accuracy in error reporting for relative paths
replaced usage of ClassTypeInformation. from ( Map. class ) with ClassTypeInformation. LIST in MappingMongoConverter. java to simplify type
add check for empty or null address in clientnetworkconfig. addaddress ( ).
added " keynectisrootca [ jdk ] " to VerifyCACerts. java to support trusted certificates in the application
change return type of compute ( ) from void to int.
added a condition to check if the popup is not displayed before setting the menu's state to ensure that actions are only performed when the popup
pdfbox - 4071 : avoid arrayindexoutofboundsexception, a suggest by valerybokov
added a new file ` FinalizerInfoTest. java ` to test the ` GC. finalizer _ info ` functionality of ` MyObject `
camel - 16400 : use doonnext instead of map in cachingroutelocellocator
refactor compensation request handling in BurningManService. java to improve clarity and maintainability of the code
modified StringSubject . java files to enhance functionality related to string operations
updated byte array size from 1, 000, 000 to 1000, 000 in BatchValidateSignContractTest. java to improve test reliability and
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in naming conventions
updated query handling in RetweetActivity and Search classes to replace " from : " with " from : " to ensure accurate query results by removing
removed a conditional check forRebalance in SimulatorDiscoverer. java to streamline the code by eliminating unnecessary complexity
added a new POST endpoint to import YubiKey accounts from the YubiKeyAccountRegistry to handle YubiKeyAccount requests
updated method calls to use " tex " instead of " texture " across multiple classes to improve clarity and consistency in texture parameter usage
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted padding in ` SideMenuBar ` to ensure proper handling of null
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future updates
modified caption assignment logic to handle null subName cases to ensure proper assignment of caption based on the provided subName
changed the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem. java to align
added null checks for sim and name in CustomExpression. java to avoid potential NullPointerExceptions during execution
don't send republish request in votingresultservice. requestBlindVoteListFromNetwork method
added a new test case ` testCase4 ` in ` PostgresTest. java ` to ensure proper configuration and thread execution for the database connection
updated string literals in SubtitleUtils and RemoteUtil to use single quotes to improve code readability and maintainability
added a constant for LINE _ SEPARATORS _ RE and updated line splitting logic in DefaultJavaPrettyPrinter. java to improve code readability and maintain
make singleimplementor snapshot volatile
added null check for excludeSet before adding queries to the qlist to avoid potential NullPointerExceptions when filtering queries
fix : merging of bridge with generic thing
replaced calls to ` printHelp ( ) ` with ` error ( " Unknown command : " ) ` in ` Ktab. java ` to
added a check for the existence of the output file before returning it to avoid potential errors when the output file does not exist
added support for parsing date strings using the ` toCalendar ` method in ` DateConverter ` to ensure correct formatting of date strings in the converter
added assertions and query annotation in SpringDataJPALockTest and PostRepository classes to improve test coverage and ensure correct retrieval of posts by their
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related exception handling to improve
added HTTP client request timeouts in ClientRegistrations. java to improve stability and stability of HTTP requests
updated SourceTest to check the existence of a non - existent file before creating a Source instance to ensure that the Source class correctly identifies and
remove dependency on graalvm. version system property
added validation checks for access and refresh token validity in ClientAdminBootstrap to ensure proper handling of client validity settings
updated the return statement to include a conditional check for Android API version to ensure that the application uses the correct Android API version based on options
removed'this'keyword from substring calls in PropertyPlaceholderHelper. java to simplify code and improve readability
updated the description of the Owner and Subject Public Key Algorithm in Resources. java to improve clarity and consistency in the description
updated ZkSolrClientTest to handle concurrent collection management to improve test reliability by ensuring thread safety during collection processing
removed BigInteger import and added it to simpleTypes in MongoMappingContext. java to streamline code by eliminating unnecessary BigInteger imports
added a condition to check if the button text matches the toast message to ensure that the toast message is displayed only when the button text matches the
added a condition to check if the MEncoder is not out of sync when dismissing Mc0 and Noskip is disabled to
reduce the number of event loop threads from 10 to 15 in ConfigurationProperties and ConfigurationPropertiesTest to accommodate increased number of event loop threads
changed access modifiers from package - private to protected in multiple classes to enhance encapsulation and restrict access to these methods
added a method to retrieve the file float source in ExternalFileField and created a new test class ExternalFileFieldSortTest to enhance functionality for
updated error message from " Invalid URL " to " Connection error " to improve clarity in error reporting for connection issues
added source attribute handling in OpenRocketSaver and related classes to improve event representation and ensure proper identification of rocket components
changed the access modifier of the check method from private to protected final to allow subclasses to access and override the check method
added functionality to handle SynchronizeFileOperation in FileActivity to improve user experience by providing a way to resolve conflicts during file synchronization
updated thumbnail URI generation to use URLEncoder for URL encoding to ensure proper encoding of remote files in URLs
added a null check for the client property " cn1 $ infinite " in InfiniteContainer. java to ensure proper handling of cases where the
updated the ` total ` variable from ` 0 ` to ` 1 ` and modified its calculation to ensure the total value accurately reflects the
added a lock check before updating an entry in FeedRefreshUpdater to ensure that the update operation only occurs when the feed is locked
refactor conditional checks in SolarisAclFileAttributeView. java to improve readability and maintainability of the code
replaced the list implementation with an array implementation for edges in LatLonTree. java to improve code readability and maintainability by utilizing a sorted
added a try - finally block to close the I / O resource to ensure proper resource management and prevent potential memory leaks
replace newlines in comment buffer with [ \ x0d \ \ x0a ] in BibtexParser. java to ensure proper formatting of
added strict property handling in Main. java and corresponding test cases in MainTest. java to ensure properties file parsing correctly handles " strict = false
enforcement of customizable constraint on pojo object
camel - 17499 fixed the unit test error of camel - http4
added a method call to waitForThingsToLevelOut in TestCloudPivotFacet. java to indicate that the method is outdated and should
simplified conditional checks for writing bytes in UBJsonWriter. java to improve code readability and maintainability
refactor ApplicationTest class to improve code readability and maintainability
changed the type of the ` details ` variable from ` String ` to ` StringBuffer ` to improve performance and reduce memory overhead associated with string concatenation
rename Type to RoboType across multiple files to improve clarity and consistency in type usage
[ java ] return action. abort when there be no dispatch for aeron archive.
dataimporthandler shouldn't throw exception if'cachekey'or'cachelookup'be miss.
added a new file PutfieldError. java to test error handling for IncompatibleClassChangeError to ensure proper error handling for incompatible class change errors
don't add private address to public address if they don't already exist
skip memtable flush after memtable _ throughput _ in _ mb and memtable _ operations _ in _ millions
replaced instances of ` Space. build ( " ", emptyList ( ) ) ` with ` Space. SINGLE _ SPACE ` across multiple files to
removed redundant declaration of encodedLength ( ) in Flyweight. java to streamline code by eliminating redundancy
refactor TestMethodResultMapBuilder class to improve code readability and maintainability
don't crash on non - java. lang. numberformatexception or java. lang. illegalargumentexception
[ hotfix ] [ runtime ] remove unnecessary lock in tasklocalstatestoreimpl
updated string return values to return " m " instead of " context. getResources ( ). getString ( context. getResources ( ). getString (
modified conditions in Utilities. java and FloatingIconView. java to handle DeepShortcutView and SystemShortcutView more effectively to improve code clarity and
changed the type of the ` validator ` from ` String ` to ` Object ` in ` JwtIssuerValidator ` and updated its instantiation logic
renamed methods for buy and sell quick rate in Coinmate classes to improve clarity and consistency in method naming
added CoverageConfig class and modified CoverageController to use it to improve clarity and maintainability of the CoverageController configuration
added a null check before registering EventBus sticky to ensure EventBus is only registered when the current instance is not registered
added ASCII - only checks for strings in NormalizerBase. java to ensure proper handling of special characters in normalized strings
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL updates in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL does not fail
( chore ) camel - test - junit4 : use @ test instead of @ test
updated HR, AttrKind, START, CELLPADDING, and COMPACT attributes in HtmlTag. java to ensure compatibility with
added a line break in HtmlCoreReport. java to ensure proper formatting of HTML output
updated the calculation of ` ramBytesUsed ` in ` DocSlice. java ` to handle null scores to improve robustness by avoiding potential `
updated CustomTypeAdaptersTest to use Gson's StringHolder class for serialization and deserialization to improve type handling and ensure proper serialization and deserialization
update extraData in MergeCoordinator and add a test for mining parameters in MergeCoordinatorTest to ensure correct handling of extra data during mining
added a static final Map < String, Integer > numArgs and updated the argsToProperties method to include parseFile and outFile parameters to enhance
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
fix migrationrulelistenertest # testwithinitandnointradefaultrule ( # 1163 )
rename parameter ` part ` to ` partOrList ` in ` RestClientRequest ` and ` RestClientRequestImpl ` classes to improve clarity
[ drools - 5752 ] use twitterbootstrap instead of bootstrap in the benchmark
removed the basicCategory method from SpanishTreebankLanguagePack. java to simplify category extraction logic and improve code maintainability
hhh - 146113 : add entityloader. load ( session, lockoptions ) to abstractentityloader
hbase - 19836 regionserverflushtableproceduremanager and regionserversnapshotmanager should use poll ( ) instead of remove ( )
set the superclass's size if it's non - zero to ensure proper rendering when no dimensions are provided
remove unnecessary call to fillPool ( ) in hikariconfiguration.
replaced the ` assureMatchVersion ( ) ` method calls across multiple filter factory classes to ensure compatibility with the latest Lucene version
fix aop proxy generation for abstract method
added a conditional check for the input LA ( 1 ) in DRLParser. java to ensure the match is only performed when the input matches
updated subject classes for consistency to improve code maintainability and readability
throw an exception if the payload be invalid.
move publishsubscribechannel from'channel'to'dispatcher'package
updated execution ID from String to Long across multiple classes to improve data handling and consistency across the application
added byte digest updates for width and height in ImageProcessor. java to ensure accurate digest generation for image dimensions
added logging for the overlay version in SolrConfig. java and imported necessary classes in SolrConfigHandler. java to improve visibility of the overlay version
updated the delay duration in FileSyncAdapter from a fixed value to a dynamic delay based on the current time taken for synchronization
updated variable assignment in SegmentV1V2ToV3FormatConverterTest. java to ensure consistency in variable naming
updated the ` addPathToMTree ` method to accept a ` Path ` object instead of a ` fullPath ` string to enhance functionality by allowing
add support for ` ` file :'' in jar file
[ hotfix ] [ table - planner - blink ] introduce timestampextractorutils
use the ldapuserdetails in the spring security context.
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code clarity and maintainability
updated minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager to ensure compatibility with the latest Android features and improvements
replaced autoSuggestDialog with a cache file suggestion using Hint and SimpleFormDialog to improve user experience by caching file names
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the parameter name from ` entityType ` to ` entityType ` in the ` stream ` method to improve clarity and consistency in the method signature
bugfix : map overview zoom don't take into account scroll amount
added similarity support to KNearestNeighborClassifier and updated related tests to enhance search accuracy by utilizing a custom similarity algorithm
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler. java to improve query performance by utilizing a more efficient query parsing
replace ` lowResourceCheck. toString ( ) ` with ` lowResourceCheck. getReason ( ) ` to improve clarity and consistency in retrieving reason
updated package - info. java files for mmm and ppp packages to improve clarity and maintainability of package documentation
updated MTU request handling in ShadowBluetoothGattTest and ShadowBluetoothGatt to ensure correct MTU request behavior across different Android versions
replaced the method ` read ( ) ` with ` createServletOutputStream ( ) ` in ` TestPayloadNameRequestWrapper. java ` to improve
added logging for unsatisfied link errors in VoskSTTService to improve error handling and debugging capabilities
[ java ] use concurrenthashmap instead of hashmap in channelprocessingmanager
updated the string in Japanese resource files to include " all, " all, " and " grouped " options to enhance clarity and consistency in
updated size check from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and ` JDBCTypeMappingTest `
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene. java to ensure thread safety during player operations
replaced the isScreenReaderActive ( ) method with a new instance of AccessibilityStateTester to improve code clarity and ensure proper handling of accessibility
fixed issue with sidemenubar not be able to close the menu
updated subscription syntax in PoloniexManualExample. java and added error handling in WampStreamingService. java to improve code clarity and
updated energy limit validation logic and assertion message in UpdateSettingForEnergyLimitContractActuator and UpdateSettingForEnergyLimitContractActuatorTest to
refactor URL handling in PostmanJsonBuilder and add protocol property in UrlBean to improve code clarity and ensure protocol is correctly set
camel - soap : added getter and setter for namespaceprefixref in soapjaxbdataformat
refactor date parsing tests to use a constant for one - day timestamps to improve code readability and maintainability by centralizing date comparison logic
added JettySolrRunner functionality and security checks in BasicAuthIntegrationTest and ZkStateReader to ensure proper server restarts and validate security properties
added support for market price in the TradesChartsViewModel to enhance market price customization options
from to ( )
modified the handling of the ` from ` and ` end ` variables in ` NativeString. java ` to improve accuracy in determining the end position
added file downloading functionality using FileDataStorageManager to enhance user experience by allowing users to download files efficiently
[ java ] set the length of the randomaccessfile to the length of the log buffer.
added a method to check if a registry is running and a method to delete a file if it throws an exception to improve reliability of registry
removed unused import statements and added ` startLoading ( ) ` method in ` Quick3dMain ` and ` TextureTest ` to streamline
removed unused private variables and added @ SuppressWarnings annotations in multiple Java files to improve code clarity and suppress warnings related to unchecked warnings
added null check for instances in TraceFeignContext to prevent potential NullPointerExceptions during execution
added isolation level handling in SQLExceptionCode and modified transaction status checks in PhoenixConnection to ensure proper isolation settings based on transaction settings
added DefaultTransactionAttribute to AbstractStepFactoryBean and enhanced error handling in ItemOrientedStep and SkipLimitStep to improve transaction management and
refactor CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient to improve modularity and maintainability of the security interceptor
removed menu item visibility and case handling in ListFragment and NavigationDrawerFragment to streamline the user interface by eliminating unnecessary menu interactions
renamed ` cancel ` method to ` cancelMatchingOperation ` in ` DownloadFileOperation. java ` and ` FileDisplayActivity. java ` to
pdfbox - 2576 : avoid classcastexception, a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve font size management and ensure consistent text size retrieval
added validation for the fact object before modifying the fact to ensure that the fact is only modified when it's valid
fix a few typo in the javadoc.
replace direct return statement with a new ArrayList instance to improve performance by reusing existing ArrayList instances
replaced lockService. waitForLock ( ) with lockService. parse ( ) in Liquibase. java to streamline lock handling and improve
added a ` setRevision ` method to ` MicroserviceVersions ` and modified ` InstanceCacheChecker ` to set the revision to null to ensure
refactor foreign key name generation logic in TableRetriever. java to improve clarity and maintainability of the code
camel - aws2 - s3 - allow to configure uri - endpoint - override on the s3 component
removed currencyPair check from getBitstampUserTransactions method to simplify method signature and improve readability
added error handling for component retrieval in BlueprintContainerRegistry to improve robustness by gracefully handling cases where no components are available
don't send push request if remote setting enable push
refactor LegacyAddressTest to read data from a file before asserting comparison to improve test reliability by reading data from a file
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from outside the Container class
refactor push notification handling in NotificationsActivity and DrawerActivity to improve code clarity and maintainability by encapsulating push warning logic
nettyasynchttpprovider. replayrequest should close the channel if the cause be an ioexception
replaced null checks with StringUtils methods in LdapPasswordPolicyEnforcer. java to improve code readability and reduce potential NullPointerExceptions
updated DefaultAnnotationEngine and Stubber classes to improve code clarity and maintainability
added an @ Ignore annotation in MemoryManagerTest. java to mark the test as ignored due to issue PHOENIX - 2840
nifi - 6643 : added timezone support to the AboutDTO class.
don't split boundary if we don't split them
remove unnecessary try - catch block in beancontextsupport
fix possible deadlock in cdp connection cache
replace GdxRuntimeException with IllegalStateException in ShaderProgram. java to improve error handling by using a more specific exception type
flume - 197. remove eventdrivensourcerunner. start ( ) and sinkrunner. start ( ).
changed log level from error to info in FastBindLdapAuthenticationHandler to improve logging clarity for failed authentication attempts
refactor ContainerOrderFocusTraversalPolicy class to improve code readability and maintainability
don't throw exception if freehand function don't exist
corrected a typo in the constructor parameter name from " CasRiskBasedAuthenticationEvaluationStartedEvent " to " CasRiskBasedAuthentication
refactor connection handling in SchemaCrawlerMain and Executable classes to improve resource management and logging
bump default tl version to v1.2
corrected a typo in the exception message from " Unable to allocate counter, values buffer is full " to " Unable to allocate counter, metadata buffer
modified audio queue position handling in MediaManager. java to ensure proper audio playback when mCurrentAudioQueuePosition is zero
updated debug logging statements in HttpConnection. java to include the cancelled parameter to improve traceability of connection states during debug logging
added support for transient fields in JpaPersistentPropertyImpl and its unit tests to ensure that transient fields are correctly handled during persistence
updated stack version assertions in UpgradeResourceProviderTest to ensure correct stack version retrieval
trufflevm : make eval ( ) return an object instead of symbol
changed access modifier of ` isBinaryType ` method from private to public and modified debug logging in ` Proxy. java ` to allow access to
updated the configuration key from " hive. tez. dynamic. parition. pruning. max. data. size " to " hive
remove problem priority since we ' re go to do it manually in pdex . errorchecker
replaced DictionaryIndexConfig. DEFAULT _ OFFHEAP with DictionaryIndexConfig. DEFAULT in multiple files to standardize the configuration for the dictionary index
added a system property ` LINE _ SEPARATOR ` in ` TableWriterTest. java ` to ensure consistent line separators across different operating systems
refactor DebugHelper class to improve code readability and maintainability
added a boolean flag ` ownsTexture ` in ` ParticleEffect. java ` and checked it in ` ParticleEffect. java ` to ensure
added LDAP authentication properties to HiveConf. java to enhance security by allowing custom LDAP configurations
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated InputMethodManager to use SHOW _ FORCED and HIDE _ IMPLICIT _ ONLY instead of HIDE _ IMPLICIT _
added a test for converting a primitive to a map of primitive types in DataTableTypeRegistryTableConverterTest to ensure proper conversion of primitive types to
increased the size in TestFileSystem from 500x500 to 50x50 to accommodate larger data sets and improve performance
updated error messages in ContentTypeManager. java to provide clearer guidance on file triggering issues to enhance user understanding of error conditions and ensure proper resource management
changed the ` dropSequences ` method to be abstract and implemented it in subclasses to allow subclasses to override the ` dropSequences ` method
added a null check for the status variable in MainWindow. java to prevent potential NullPointerExceptions during execution
refactor variable assignment for improved readability to enhance code clarity and maintainability
bug fix for hierarchical icon event
added a test for upserting a non - existing object in MongoTemplateTests to ensure that the upsert functionality returns the correct result for non -
hbase - 2697 fix the calculation of'mid'in various class
added a method to record app launches and updated broadcasting logic to handle null shortcuts to improve robustness and prevent potential NullPointerExceptions during app
replaced direct data manipulation with graphics rendering in JavaSEPort. java to improve performance by avoiding unnecessary data updates
[ fix ] instructorfeedbackresultspageuitest : don't show team member in team
added a check for zero inventory IDs in Inventory. java and created a test case in InventoryTest. java to ensure proper ID generation and validate
added a conditional check for the'found'variable before breaking the loop to ensure proper handling of cases where the'found'variable is not
updated ` ReloadableJava11ParserVisitor `, ` ReloadableJava17ParserVisitor `, ` ReloadableJava17ParserVisitor `,
updated TileMapRenderer to handle blended tiles more robustly to improve error handling and ensure proper initialization of blended tiles
815332 : remove sun. crypto. * from test / sun / util / concurrent / probe. java
modified the getArea method and adjusted the calculation of the last segment in IfcTools2D. java to improve accuracy in geometric calculations
refactor lockOnSync initialization to use'this'instead of'currentThrottleRate'to improve code clarity and maintainability by using a
pipeeventbus extensible to allow subclassing of pipeeventitem
increased timeout duration for ZkController instantiation from 1000ms to 5 seconds to improve test reliability by allowing more time for controller operations
added a test for passcode requests with client parameters in TokenMvcMockTests. java to ensure proper handling of client parameters in the OAuth2
added support for the LengthFilter and KeepWordFilter constructors in TestRandomChains. java to ensure compatibility and correctness in handling different input types
removed unused JUnit import from RandomPlaneTest. java to clean up the code and improve maintainability
use integer. tounsignedlong in llvmx86 _ 64bitvum
updated return statements to use btCollisionObject. getInstance ( gdxBulletJNI. btCollisionObjectArray _ at __ SWIG _ 0 ) to improve
added copyright year retrieval in BuildProperties and updated OPENROCKET _ URL in AboutDialog to ensure copyright information reflects the build's copyright
add getdistributedobjects ( ) method to jetclientinstanceimpl.
updated inertia calculations and test cases in FinSet and MassCalculatorTest to improve accuracy and accuracy of inertia calculations
changed the calculation of TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep. java to ensure that the Semaphore uses the maximum
changed catch block from MetadataException to Exception in StandaloneSchemaFetcher. java and modified the method name in CreateAlignedTimeSeriesPlan. java to
don't validate amount of delayed payout tx output
updated input string formatting and added exception handling in JsonLoaderTest to improve code readability and ensure proper exception management
updated the capacity check in ObjectSet. java from 1 < < 30 to 0x40000000 to ensure that the required capacity does not exceed
updated import statements and added null check for dataScale in ColumnSnapshotGenerator. java to ensure proper handling of null values and prevent potential NullPointerException
removed the ` @ AddToRuleKey ` annotation from ` @ AddToRuleKey ` and ` @ AddToRuleKey ` annotations to
added a SecurityException to the getContent ( ) method in FileHelper and TextHelper to handle potential SecurityException when accessing shared resources
added support for resolving styles with multiple attributes in ShadowThemeTest to enhance the theme functionality by allowing multiple attribute resolution
updated sheet name checks in HSSFWorkbook and modified test cases in TestHSSFWorkbook to ensure correct sheet handling and improve test coverage for sheet
replaced ` primaryColor ` with ` elementColor ` in ` ManageAccountsActivity. java ` to ensure the correct color is used for element elements
added null check for replyHandler in DefaultEventBus and simplified path resolution in DefaultPlatformManager to improve robustness by preventing potential NullPointerExceptions
added support for binary collation in MariaDbDbmsType and MySqlDbmsType classes to enhance compatibility with MySQL's collation requirements
added a new method ` whenType ( Class < T > treeType ) ` to the ` Tree ` class to provide a default implementation for
refactor user view destination retrieval in ItemLauncher. java to improve code readability and maintainability by consolidating user view logic
replaced Response. ok ( Status. OK ) with a temporaryRedirect ( URI. create ( applicationSettingsService. get ( ). getPublicUrl
[ flink - 19801 ] [ kinesis ] improve error message when deserialization schema be not serializable
( chore ) camel - crypto : fix checkstyle issue in camel - crypto
replaced sleep duration with a boolean flag and added a try - finally block to ensure proper resource management and prevent potential resource leaks
renamed methods and updated references from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
refactor read method calls in ProxyHandler to use a dedicated read method to improve code readability and maintainability
replaced BufferUtil with ByteBuffer in ABCase1 _ 2. java to simplify code and improve readability
refactor prepareStreamsToUpload method to return a boolean instead of an illegal argument to improve code clarity and ensure proper handling of input cases
updated comparison logic in AbstractConfigLoader and modified test parameters in TestMicroserviceConfigLoader to ensure proper ordering and prevent issues with negative values
added a new file PicOfDayAppWidget. java to handle loading of a photo from the WikIMEDIA API to implement functionality for
bugfix : fix npe when default system internal lb offering be null
updated HiveParserCalcitePlanner to use HiveRelOptUtil and modified join condition handling to improve accuracy in handling non - equi conditions
[ hotfix ] deprecate old code in favor of new code
added user and password options to NodeToolCmd to allow users to access the remote JMX JMX credentials
removed duplicate BytesRef initialization to streamline code by eliminating redundancy
updated method calls in AppsCustomizePagedView. java to use mPageViewIconCache instead of null to improve compatibility with different device
ggb - 5883d : show 3d thumbnail only for 3d view
updated rotation calculations in GcodeRenderer. java to ensure proper positioning based on angle limits
added WORKSPACE option to DAEMON and updated TerminalClient to utilize it to allow users to specify a workspace directory
changed the file path from " options. apt " to " options. html " in CLIManagerTest. java to align the test with the
refactor ScimUtilsTest to use JUnit 5 annotations and introduce PollutionPreventionExtension to improve test clarity and ensure proper exception handling
replaced ` @ ModelAttribute ` with ` @ ModelAttribute ` in ` confimAccess ` method and updated session attributes to improve clarity and consistency
updated assertions in HibernateIT. java to use assertTrueEventually for clearing stats to improve test reliability by ensuring stats are cleared before session
refactor EventBusHook class to improve code readability and maintainability
modified MultiPaintEventTest. java file to enhance test coverage for multi - paint functionality
removed the'final'modifier from the'mNewScale'variable to simplify the variable declaration and improve code readability
refactor SyncFactory class to improve code readability and maintainability
added handling for uniqueKey field in LukeRequestHandler to ensure proper identification of unique keys in the schema
added roundBorderColor functionality to Border classes and updated EditableResources to use it to enhance the visual representation of rounded borders in the application
add compilerasserts. neverpartofcompilation ( ) to check that assertion be never part of compilation
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridge
added logging statements in GatewayRSocket, GatewaySocketAcceptor, and modified return values in PingPongApp to improve debugging capabilities and ensure
added OnMenuItemClickListener to RecentChatFragment to handle toolbar menu item clicks to improve user experience by notifying users when actions are under construction
changed ` InfoDropTarget ` to extend ` UninstallDropTarget ` and modified ` startDetailsActivityForInfo ` method to return a boolean
replace tail method with peek method in symbol table
updated URLs from " https : / / test. wikipedia. org / w / api. php " to " https : / commons. w
refactor index update logic into a separate method ` setIndex ` to improve code readability and maintainability
replaced usage of ` Collections. sort ` with direct method calls to ` configurers ` and ` filter ` to simplify code and improve readability
added new DateTimePatterns in the FormatData _ hr _ HR. java file to support additional time formats in the application
added a call to clearFocus ( ) in DetailFragment. java to ensure focus is cleared when the clicked view changes
replaced ` notifyDataSetChanged ( ) ` with ` setSelection ( position, true ) ` in ` DescriptionsAdapter. java ` and modified language selection
updated time zone name from " WSST " to " WSDT " across multiple language files to ensure consistency and accuracy in time zone representation
added native methods for registering global and weak registrations and modified access field handling in FastGetField. java to enhance accessibility capabilities and improve
added default values for UNION and NULL types in ReflectData and TestReflect to ensure correct handling of null values in field schemas
increase timeout for seda blockwhenfull test
added a null check before calling remapRClass to avoid potential NullPointerExceptions during resource remapping
added constructors to various Hapi FHIR dialect classes to ensure consistent initialization across different HAPI FHIR dialects
http producer : add request header ` ` connection : close'' to the end of the http connection
increased timeout duration from 60000ms to 120000ms in BasicDistributedZkTest. java to improve test stability by allowing more time for
added assertion to verify that the count of ticket statuses equal'FREE'and final _ price _ cts is greater than zero to ensure
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter class to improve code readability and maintainability
refactor : use dom. getfirstelementchild ( ) instead of dom. getfirstchild ( )
[ optaplanner - 10 ] add testdataobjectenum and fix a bug in look up strategy
[ java ] wait for node to be shut down before shut down the cluster.
changed log level from warn to info in ELContextCleaner to clarify the reason for purging beans from javax. el.
added a default content type of " application / octet - stream " in WebdavEntry. java to ensure proper handling of application / octet
added getQueueSize method to LazyTraceThreadPoolTaskExecutor and created corresponding unit tests to ensure correct retrieval of the queue size from the task executor
fix distanceop for geometry that don't use the minimum distance
rename ` required ` to ` requiredLabel ` in ` AbstractUITag ` to improve clarity and consistency in naming conventions
removed redundant ` next ( ) ` method from ` PurgingPartitionIterator ` to streamline the code by eliminating unnecessary complexity
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to ensure proper handling
added abstract methods getHeight ( ) and getWidth ( ) in BaseMonochromeBitmapSource to provide access to the methods for retrieving bitmap dimensions
added validation to ensure polygons contain at least 6 points to prevent illegal argument exceptions when accessing vertices
replaced ` new ObjectMapper ( ) ` with ` newDefaultInstance ( ) ` in multiple files to simplify object creation and improve code clarity
add null check for coeffSquarefree array in order to avoid potential null pointer exception
drill - 47384 : fix externalnamerecord. getname ( ) when multibyteflag = 0
camel - jms : fix typo in jms destination description
added logic to exclude username and password from login prompts in the LoginInfoEndpoint to ensure proper handling of login prompts in the application
updated listener removal logic to use ` removeIf ` to improve efficiency by avoiding redundant listener removal
added a case to toggle the spin operation in PieChartActivity to improve user experience by allowing users to toggle between spinning and cylinder
bug 7163 : don't return null value for copy _ vhd _ to _ secondarystorage
hbase - 26979 fix npe in namespaceauditor ( # 2697 )
updated import statements and added a resize method to AndroidInput. java to improve code clarity and ensure proper resource management
added a static method ` propertyValuesOf ` to ` PropertySupport ` and updated the ` @ VisibleForTesting ` annotation to improve code clarity and
added JUnit @ Ignore annotation to ClientMapNearCacheTest. java to mark the test as ignored due to blocking PRs
fix hopperhock not be able to place item outside the bound box
added authentication dialog functionality in SsoWebViewClient to enhance user experience by providing informative feedback during authentication
added methods for deleting documents and deleting queries in TestStressIndexing2. java to enhance functionality by allowing deletion of documents based on their
[ flink - 22559 ] [ table - planner - blink ] ignore upsertkafkaitcase
replace ` dtohs ( chunk. size ) ` with ` computeIfAbsent ( j, k - > new ArrayList < > ( ) ) `
added a configuration for JSON serialization in DefaultEntityMapper to ensure proper handling of single values in JSON serialization
updated localization information in VersionChangeLogs. java to include UK and SL to enhance localization support for the application
use resourceutils. getstring ( string, string ) instead of hardcoded string
renamed ` ExpressionInstanceOfContext ` to ` RelExpressionInstanceOfContext ` in ` ASTBuilderVisitor ` and added tests in ` FEELParserTest
nifi - 7143 : added content - type attribute to gethttp response
updated provenance assignment in BaseHapiFhirDao and ResourceHistoryTable to use historyEntry's toProvenance method to
corrected the spelling of " exit " to " done " in HelpActivity. java and SearchBookContentsActivity. java to improve code clarity and
fix checkstyle issue in natsconfiguration
updated ` invalidateStalePartition ` method to accept ` metastoreContext ` as a parameter to enhance functionality by allowing multiple partition names to be invalidate
make view result tree more resilient to slow machine
replace ` ic _ group ` with ` ic _ chat _ bubble ` in multiple classes to improve user interface consistency by using a more appropriate chat
changed method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure proper retrieval
updated import statements and method names in MocksCreationTest. java to improve clarity and consistency in naming conventions
added a constant for CSVThirdEyeDataSource and modified the visibility of the generateDetectionConfig method in YamlDetectionConfigTranslator to improve code clarity
updated awaiter timeouts from 10 seconds to 30 seconds to improve responsiveness by allowing more time for phaser operations
removed the BuildSlaveFinishedStatusEvent class and updated publishBuildSlaveFinishedEvent to use returnCode directly to simplify event handling by directly publishing the
fix findbugs encode issue in vmwarestoragemanagerimpl. java
add test to verify that workspaceitem be deposit without workflow
[ hotfix ] make classloadersupportimpl # classpath ( ) distinct ( )
removed the method ` isBoxedPrimitive ` from ` Unbox. java ` to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a test for ordering of flags in TestSpecificCompilerTool to improve code clarity and ensure correct ordering
added a check for external tables before deleting the directory in HiveMetaStore to ensure that external tables do not delete their part files
updated the maximum number of asynchronous threads and improved error messaging to enhance thread management and provide clearer feedback on busy threads
added a try - catch block around the dismissDialog call to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a constant for service and component names to improve code readability and maintainability
added a variable ` diff ` to track the current conference information in ` OperationSetTelephonyConferencingSipImpl. java ` to
reload the log tree when a new log entry be add. ( # 3898 )
added additional conditions to the return statements in ChannelEndPoint. java to ensure proper handling of input and output shutdown scenarios
refactor SetNullableGenerator class to improve code readability and maintainability
camel - example - reportincident use a servlet transport to make camel - example - reportincident work on window
updated import statements and modified form handling logic in NettyRoutingFilter. java and FormIntegrationTests. java to improve code clarity and ensure proper form
added API operations for " hello " and " helloWithValue " in AbstractBaseService, IBaseService, MyEndpointWithInterface, and MyService
modified lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to ensure proper disposal and management of lifecycle listeners
updated the FG _ FK color from 90 to 200 in UIUtil. java to improve the visual appearance and performance of the UI components
fix issue with soundmanager not be able to load mp3 file
against
pmd plugin : add ` ` android'' and ` ` android'' preference
[ hotfix ] make customserializationitcase more resilient
refactor MediaFormatUtil class to improve code readability and maintainability
added ` isCellEditable ` method to ` GeneralTab ` class to ensure proper handling of cell editing functionality
added a new method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified the message formatting in ` JavaBuck
updated the VocalTractModifier and VocalTractScalingProcessor to increase the size of the vscales array to improve performance by
updated import statements for BaseScalarUdfTest in TestUDFRound and TestGenericUDFConcat to ensure correct usage of BaseScalarU
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
update testskinningcontrolrefresh to use animcomposer instead of skeletoncontrol
rename NodeFilter to NodeCountFilter in NodeUtil. java to improve clarity and consistency in naming
updated size comparison in NodeImpl. java to ensure correct size validation for sync block fetching
updated debug expression types in DebugExpressionParser. java to improve accuracy and accuracy of debug expression parsing
updated dependency resolution logic in ExcludeDependency. java to improve accuracy in determining dependencies within classpath
replaced the tmp ( ) method with dst2 ( t v ) and updated the lerp ( T target, float alpha ) method to
initialized the ` args ` variable in ` GridHubConfiguration ` to ensure proper initialization of the ` args ` array
updated linker argument handling in RustBinaryDescription. java and added a new test in RustLinkerIntegrationTest. java to ensure linker flags
[ te ] add travis and appveyor test to test
added functionality to include DAG name in LLAP splits to enhance tracking and debugging capabilities for LLAP splits
removed unused import of ` java. io. File ` from ` TileAtlas. java ` to streamline code by eliminating unused imports
refactor EscapeProcessingOutputStream to use AtomicBoolean for managing closed streams to improve code clarity and ensure proper handling of closed streams
updated the ` validateQuery ` method to accept an additional ` Object.. arguments ` parameter to enhance error handling by providing more context on query
updated INDEX _ VERSION from 1 to 2 and refactored getTree method to improve clarity and maintainability of the code
[ flink - 11331 ] [ flink - 1133 ] [ kryo ] fix the default kryo registration
added null check before removing configuration properties in BlueprintConfigurationProcessor. java to avoid potential NullPointerExceptions during property removal
refactor Boolean handling in MetaStoreDirectSql. java to use BooleanUtils for better error handling to improve robustness and maintainability of the code
added a method to hide the customization drawer in the Launcher class to improve user experience by hiding the customization drawer
refactor term vector handling in TermVectorComponent to use a constant for warning keys to improve code clarity and maintainability by centralizing warning key management
added logging for optimistic types and modified log messages for clarity to enhance performance monitoring and improve readability of log messages
refactor methods in Expect. java to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enable access to a Unix socket Docker instance using the
added JUnit 5 @ Tag annotation to testEvenLowRateIP method in CloseableDoSFilterTest and CloseableDoSFilterTest to address fla
camel - 16400 : camel - reactive - throw an exception when there be no active subscription
refactor vectorization task methods to improve clarity and maintainability to enhance code readability and facilitate easier updates
updated the constructor calls in StringAppender and LogDivertAppender to include a new boolean parameter to enhance logging functionality by allowing conditional logging behavior
add null check before call guipackage. getcurrentgui ( )
make sure weak function don't crash on weak function
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
no effective change - add unit test for defaulttransactionthreadlocal
added validation for " Invalid OperationHandle " and " Operation does not exist " messages in HiveStatement. java to improve error handling and provide clearer
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL `
camel - aws - secrets - manager - add unit test base on user forum issue
refactor SimpleTree class to improve code readability and maintainability
updated response formatting in UserREST. java to improve code readability and maintain consistency in formatting
modified the ` fromContent ` method to accept a ` subTree ` parameter and updated related logic to enhance flexibility in handling nested structures
modified column width calculations in HSSFWorkbook and added a test case in TestHSSFSheet to ensure correct column width calculations and validate functionality through
added configPath parameter to the Commands. less function call to enhance functionality by providing additional configuration options
replaced ` Set ` with ` Collection ` in ` DotWriter ` and ` GraphExecutable ` classes to simplify data structures and improve performance
updated the Docker image URL from " sshd @ sha256 : 18aa929c6532189fc9cefa45b73
cloudstack - 4892 : remove assertion from agentmanagerimpl. updatestatus ( )
refactor multi - valued column handling in DefaultGroupKeyGenerator to improve clarity and maintainability of the code
renamed the test method from ` seekNegative ` to ` seekingExceptions ` and updated its implementation to improve clarity and accuracy in testing seek operations
fix for cilicon recipes that use nbt.
rename method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn. java ` to improve clarity and consistency in
updated visibility handling in CellLayout and refactored drag exit method to improve code clarity and encapsulate drag - exit logic
updated ModifyRequestBodyGatewayFilterFactory to use originalBody instead of rewriteFunction and added a test to verify that the upstream request body is empty to ensure
added a check for package accessibility in multiple finder classes to ensure that only accessible classes can access these classes
changed logging level from warn to trace in LoggingHandler. java to improve logging granularity for debugging purposes
fix ( issue #348 ) : whitelistpath non - recursive ( ` ` *'' )
added menu item handling for gallery attachments in GalleryActivity to improve user experience by providing appropriate options for gallery actions
added null checks and instance initialization in MongoDBServiceFactory to ensure proper service creation and prevent potential NullPointerExceptions
added tests to prevent code formatting for boolean values in InlineConstantMutatorTest. java to ensure that boolean values are correctly formatted for final boolean
added a Blackhole parameter to the decode method in RecordTest. java to improve the handling of state decoding by incorporating a blackhole
fix : update gapic - generator - java with mock service generation fix ( # 10 )
[ knx ] fix npe when read dpt unit from knx channel
removed the call to dbManager. getWitnesses ( ) to streamline the code by eliminating unnecessary operations
don't throw prestoexception when abort
replaced ` getScriptStackString ` method with ` delete ` method and added stack property handling using ` ScriptFunctionImpl ` to improve code clarity and
removed a condition that checks if the path name starts with ". " to simplify the path validation logic
renamed the variable ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added a call to clearIndex ( ) in BasicFunctionalityTest. java to ensure that the index is cleared before further operations
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to reflect the new bold weight in the application
changed ` fThreadGroup ` to ` volatile ` and modified ` fLookForStuckThread ` to be final in ` Timeout ` to
rename methods from ` getValue ( ) ` to ` setValue ( ) ` in ` ValueResultData ` to improve clarity and consistency in method naming
updated hashCode method and equality check in FuzzyQuery. java to ensure proper comparison and prevent null pointer exceptions
removed debug print statements from PushedResourcesTest. java to clean up the test output and reduce unnecessary console output
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to allow method overriding of these methods
updated JDBC driver version from 5.1 to 6.0 in tests to ensure compatibility with the latest database features and improvements
updated attribute retrieval and logging in PersonDirectoryPrincipalResolver. java to improve clarity and functionality of principal creation process
changed log level from info to warn for ZigBee USB Gateway and BUS Gateway to improve logging clarity and reduce unnecessary information
updated method names from ` intHash ` to ` hash ` across multiple classes to improve clarity and consistency in hash function implementations
added a new constructor to ThumbnailGenerationTask and modified null checks in FileUploader to ensure proper initialization and prevent potential NullPointerExceptions
modified the condition to check if ` nrFound ` is less than ` count ` and ` tries ` is less than 5 to ensure that the
add test case for bug 1933922
refactor comparisons and formatting in MultipleSeriesProvider and Tokenizer classes to improve code readability and maintain consistency in formatting
added a comment to indicate that control characters 0 - 31 are invalidated for space characters 0 - 31 to improve code clarity and ensure proper validation
added focus request for the component in the Display class to improve user experience by ensuring the component receives focus
[ fix ] instructorhomepageuitest and instructorhomepageuitest
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
refactor Crouton handling in DetailFragment and MainActivity to improve code clarity and maintainability
added a new test method for schema queries and fetching unrelated templates in IoTDBSchemaTemplateIT. java to ensure that schema queries return
refactor Dialog class for improved readability to enhance maintainability and facilitate future updates
replaced Runtime. getRuntime ( ). exec ( ) with ProcessBuilder to modify process creation to remove JAVA _ TOOL _ OPTIONS environment variable
updated the InetAddress conversion from getLocalHost ( ) to getByName ( " 127.0. 1 " ) to ensure compatibility with the expected address format
refactor controller and base assignment in Metrics. java to use a loop to improve code readability and maintainability
added assumptions in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed when the Apple platform is available
make jvmciversioncheck. java. specification. version a non - null property
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory. java to improve test coverage for memory allocation
updated method calls to include context in ` BinaryParser ` and ` PlainTextParser `, and added charset handling in ` ParsingExecutionContextView `
added support for handling ` MultiPartFormDataCompliance ` in ` HttpConfiguration ` and created a new ` MultiPartFormDataCompliance ` enum
added JDK version " 7. 2 " to GradleDistributionManager to ensure compatibility with JDK 17 features
added a method to add types in SnapshotControl and modified type addition logic to improve code clarity and maintainability by encapsulating type addition logic
refactor Term class to improve code readability to enhance maintainability and ease of understanding
modify the return statement to handle null or empty values to improve robustness by preventing potential NullPointerExceptions
fix for http : / / issues. apache. org / jira / browse / amq - 4237
refactor multiple classes to improve code organization to enhance maintainability and readability of the codebase
[ pdf417 ] use blackbox1 test instead of test blackboxcountingresults
added a new variable ` mTintAmount ` and updated its assignment in ` TaskView. java ` to ensure that the toast reflects the
added a new file ` SumZeroFunctions. java ` for processing sum zero functions to implement sum zero functionality in the codebase
[ flink - 2595 ] [ table - planner - blink ] fix bug in firstvaluefunctionit and nthvaluefunction
hbase - 27820 improve error message when bucketallocator can't be allocate
added a null check for propName before adding properties to the roleObject to avoid potential NullPointerExceptions when propName is null
fix bug
added methods to log containers using a stream parameter to improve resource management and prevent indefinite stream opening
mvstore performance improvement
change LONG constant from " L " to " J " in PrimitiveType. java to ensure consistency in naming conventions across the codebase
changed the visibility of the delegatingApplicationListener method from instance to static to allow the method to be called without an instance of WebSecurityConfiguration
camel - 16400 : camel - rest - dsl - set body to null to avoid npe
added new files ` FileDeletingTasklet. java ` and ` TaskletJobFunctionalTests. java ` to implement tasklet functionality
don't update scale regarding view when it's just create.
refactor output buffer calculations and improve code readability across multiple classes to enhance performance and maintainability of the code
updated ` sendEventToTest ` method to use ` stateOrdinal ` instead of ` eventTag ` and ` eventTag ` to improve event handling
added checks for video thumbnail requests in RequestHandler and RequestHandlerV2 to ensure proper handling of thumbnail requests based on user - agent settings
don't scroll tofront ( ) if line number be less than zero
updated SideMenuBar to conditionally add left and right buttons based on theme settings to enhance UI elements to accommodate different theme configurations
added " libskia " to the list of supported libraries in the Skia build system to ensure proper loading of the Skia library for
networkparameters : don't return unittests for unittestnet
added error handling for unsupported format arguments in QueryCommand to improve robustness by ensuring users do not specify format arguments
updated variable names and logic in IntIterator. java to improve clarity and consistency to enhance code readability and maintainability by using consistent naming conventions
added a ` SourcePath ` parameter to the ` walkRuleAndAdd ` method to conditionally visit dependencies based on the specified build target
added support for override module in patchmodulefilemanager
[ java ] don't use semantic _ major for candidate term id check.
modified the default policy settings for SAML authentication in MainApp. java to ensure proper session management based on SAML authentication settings
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure required values are provided when building batches
remove unnecessary try - catch block
refactor anonymous authentication handling in the AnonymousAuthenticationFilter class to improve clarity and maintainability of the filter
modified the ` removeActor ` method to include a ` unfocus ` parameter to enhance actor removal behavior by allowing the actor to be unfocus
changed the variable name from " managed _ schema _ configs " to " validConfigs " in SolrCLI. java to improve clarity and consistency in
added logging functionality and modified channel flushing in NettyHttpServer and RoutingInBoundHandler to enhance logging capabilities and improve response handling
refactor multiple classes including DatumAliases, AbstractParser, Formattable, and Parser to improve code organization and readability
replaced direct call to ` update ( ) ` with ` SwingUtilities. invokeLater ( this : : update ) ` to ensure that the update method runs
camel : groovyexpression should use reflection to load groovy class from cache
don't include versionless key in plugin dependency log
changed access modifiers from package - private to public in ` CliFrontendParser. java ` and ` ProgramOptionsUtils. java ` to allow
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to improve
removed redundant storageAlias assignment in HttpsMessenger. java to streamline code by eliminating unnecessary variable assignments
simonstewart : don't throw an exception if we can't convert text to response
changed access modifier of updateImage ( ) method from private to protected in ImageButton and ImageTextButton classes to restrict access to updateImage ( )
fix drop on server level ( # 4987 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for managing spatial location calculator configurations
fix a few typo in the javadoc.
replaced ` keySet ( ). isEmpty ( ) ` with ` isEmpty ( _ root ) ` and added a new method ` isEmpty ( Node <
updated method calls in AttributedStringBuilder to use parameters r, g, and b to improve code readability and maintainability by using standard method
solr - 10783 : peersync now honor solr. disablefingerprint system property
changed access modifier of the moveFunds method from private to public to allow access to the method from outside the class
replaced ` maybeEmitEvent ` with ` maybeEvent ` in ` MongoTemplate ` and added ` setApplicationContext ` method in ` MongoTemplate
fix settransactiontest to use testhazelcastinstancefactory instead of static instance
fix for tika - 198 -- close input stream to avoid resource leak
updated JSON string format and exception handling in TestCollectionAPIs. java to ensure proper JSON structure and improve error handling
updated the configuration loading method in OptionsParser. java to ensure consistency in configuration loading
[ fix ] instructorfeedbackcopyactiontest : fix typo
[ beam - 8470 ] make pipelineoptions final in externalworkerservice and jobservicepipelineresult
removed step variable and related methods from HmDatapoint and DisplayTextVirtualDatapoint classes to streamline data point management and improve code clarity
updated logging messages and added exclusive lock handling in PostgreSQLReadWriteAdvisoryLocksTest. java to improve clarity of logged messages and ensure proper
remove duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl. java to streamline the job scheduling process
simonstewart : fix false positive in testgettextcontent
refactor logger to use a thread - local variable to improve performance by reusing the logger instance
fix flaky test in functioninitializertest
added type handling for primitive types and updated compound method to return null to improve type safety and prevent potential NullPointerExceptions
updated the focus state handling in RecentsView and removed the initialization method in TaskView to ensure proper state management and avoid potential null pointer exceptions
hbase - 25836 testflushfromclient # testflushfromclient don't return all region
updated TransactionExecutor to use original repository for tracking contract details to ensure that changes in the original track do not affect data integrity
updated balance calculations in TokenIssueProcessor and ContractProcessorConstant to include asset issuance to ensure accurate fee calculations for asset issues
fixed crash in realisticrenderstrategy
bug : bug # 7049339. createimage ( ). createimage ( ).
added support for unselected styles in Label and DefaultLookAndFeel classes to enhance user experience by allowing unselected styles
initialized ` ArrayList < DefaultMapping > ( 0 ) ` to ` new ArrayList < DefaultMapping > ( 0 ) ` in multiple classes to ensure
` `''''''''''
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a new constant for MP4 sample with increasing timestamps URI string and updated import statements accordingly to ensure compatibility with newer Android API versions
refactor firmware check logic in TradfriGatewayHandler. java to improve clarity and maintainability of the code
refactor AjaxElementLocator to improve code readability to enhance maintainability and facilitate future updates
updated layout checks to include " table - cell " in addition to " block " to ensure proper handling of table - cell display in layout
refactor JsonDecoder to improve handling of JSON parsing levels to enhance clarity and maintainability of the code
blockcache. removelocation now take into account removal cause
added JUnit @ Ignore annotation to SavepointTestBase. java to temporarily disable tests that are not ready for execution
jbrules - 2801 : add @ test annotation to droolmvelparsertest
changed ` private ` fields to ` private final ` in ` ContextRegisterListener. java ` to ensure ` publisher ` and ` appName ` fields
refactor ObjectHashSet to use a cache iterator and improve iterator initialization to enhance performance by reducing object creation overhead
added batch byte handling in SparkReduceRecordHandler and ReduceRecordSource to ensure batch processing does not exceed batch size
changed MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE
updated logging messages and added handling for connection closure in JdbcProxyGenerator. java to improve clarity of log messages and ensure proper resource management during closure
updated the animation state retrieval and added a method to set the important for accessibility to ensure proper accessibility handling based on the current state
reduce log level for malformed edits from warn to debug
modified scope handling in UaaTokenServices and added a test for persisting a token longer than 1000 characters to ensure that the token does not
updated import statements and modified logger initialization in AvailableJDBCDrivers. java to improve code clarity and ensure consistent logger usage
[ drools - 561 ] add executablecommand interface for kie - api
camel - 16400 : remove jdbctableservice from camel - itest
added padding retrieval methods in CellLayout and refactored bitmap creation in Launcher to improve layout handling and optimize bitmap creation
added a length check before filtering candidates in LineReaderImpl. java to avoid potential errors when the candidate list is empty
refactor ` SamlMetadataUIParserAction ` to use ` ActionMetadataUIParserAction ` instead of ` SamlUIParserAction ` to
added a method ` checkOpenPorts ` to ` LdapMockMvcTests ` to check for LDAP ports using the specified port
log4j2 - 1343 : change default executorservicedeamons to 0, addendum
updated URL handling and logging in Fetcher and HTMLMetaProcessor classes to improve clarity and correctness in URL processing
updated the query string from " * : * " to " name : samsang " in TestSpellCheckResponse. java to improve clarity
refactor terminal initialization to support old and new Karaf Console API to enhance compatibility with old and new console API
modified the ` getVerticesColors ` method to conditionally use ` mloopcol ` based on the ` isBMeshCompatible ` flag to ensure
added EXCLUDE _ TIMESTAMPED _ REPORTS _ DIRECTORIES import and modified the copyDirectory method to include this filter to enhance
refactor test method names and use parameterized tests in DataValidatorTest. java to improve readability and maintainability of test cases
pdfbox - 4071 : remove unused method, a suggest by valerybokov
improve error message when form binding fails
removed debug print statements from JoglInput. java to streamline output by eliminating unnecessary console output
added a static boolean flag ` allowExtractingPrivateFields ` and updated related method calls in ` FieldSupport ` to allow extracting private fields to
replace string " { name } " with device. getName ( ) in WebDataHandler. java to ensure that the device name is accurately
refactor constructor initialization to use MethodHandles for Java 8 compatibility to improve compatibility with Java 8 and modernize the codebase
updated weights method references from ` weights ` to ` weightsByDouble ` in ` SortedSetCommandsTest. java ` to improve clarity and consistency in
updated writeCustomHTML method signatures to include an additional ` Database ` parameter across multiple writer classes to enhance functionality by integrating Liquibase '
updated key serialization and deserialization logic in BTreeMap. java to improve code clarity and ensure proper handling of null values
replaced ` Exception ` with ` BalanceInsufficientException ` in ` CancelDeferredTransactionContractActuator ` and UpdateDeferredTransactionContractActuator
bugfix : disable zero file writing in profiler
refactor code to use Scope. getCurrentScope ( ). getUI ( ). sendMessage ( CommandLineUtils. getBanner ( ), Liqu
updated byte buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter to improve
added ItemReadListener and ItemWriteListener imports from org. springframework. batch. core to enhance batch processing capabilities
refactor code for improved readability and maintainability to enhance code clarity and facilitate future updates
updated print statements and parameters in SearchFiles, SortedSetDocValuesFacetCounts, and MessageFilesParser to improve code clarity and align with updated naming conventions
refactor Test7005594. java to improve code readability and maintainability
updated error message formatting in ResourcesValidationProcess. java to improve clarity and consistency in error reporting
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
cloudstack rule : fix npe in listvirtualmachine api.
updated Gamepad. java to replace mModifierDigitalTriggers with mModifierAnalogTriggers and added a new MCOptionListener to enhance
replaced deprecated method ` iteratesOverSequence ` with ` iteratesOver ` in ` IterableSubject. java ` and ` IterableTest. java ` to
camel - 9143 : camel - http - add support for http header with thanks to martin
added unit tests for COUNT ( * ) queries in ActivityHistorySQLServerStoredProcedureTest. java to ensure that the count ( * ) function
updated BarChartActivityMultiDataset and BarLineChartBase to use a new LargeValueFormatter class to improve code maintainability and facilitate
added support for INNOCUOS _ CHAR and INNOCUOS _ CHAR in commentsParser to improve character handling in comments parsing
remove @ suppresswarnings ( ` ` argument. type. incompatible'' ) from platform. java
updated the printLir call formatting in TraceLinearScanLifetimeAnalysisPhase. java to improve code readability and maintain consistent formatting
removed the TODO Auto - generated method stub in NullAssertionValidator. java to clean up the code and improve maintainability
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in the build process
added system profile directory creation in PmsConfiguration and modified test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandlerTest to ensure
replaced the use of ` DefaultThreadFactory ` with ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExecFactory. java
updated the implementation of the LongAdder in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to improve clarity and maintainability of the code
added functionality to set the " accept " attribute to " image / * " in ImageFileInputDialog to allow users to choose an accepted image format
updated imports and instantiation methods in ElasticIndexWriter and TestElasticIndexWriter to improve code clarity and align with the latest transport client practices
added detailed information for witnesses in ForkController. java to improve debugging by providing more context on witness types
added a new file ` NullPointerAndEmptyArrayTest. java ` to test the behavior of ` CustomURLClassLoader ` to ensure that the test
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` and updated its implementation in ` IjProjectBuckConfig ` to streamline the
added support for wildcard patterns in UaaStringUtils and updated related tests to enhance flexibility in handling wildcard patterns
refactor alias validation logic in Vectorizer. java to ensure proper error handling for invalid aliases to work
updated import statements and modified exception handling in WeatherQueryTest. java to ensure compatibility with the latest Mockito version and improve error handling
added error handling for setting values in TinyGFirmwareSettings. java to improve robustness by logging errors when setting firmware settings
replaced multiple specific imports with a wildcard import and modified the getLangs method to return a sorted set of strings to simplify import statements and improve
reordered import statements and adjusted formatting for clarity to improve code readability and maintain consistency
hbase snapshotmanager don't throw exception when take snapshot
[ j2kt ] implement finally via control flow.
added a test for modifying the HTTP RPC endpoint in DockerQuickstartTest to ensure that the correct HTTP response is returned for the specified EXPL
added a volatile boolean field ` isSuspended ` and modified thread state checks in ` Thread. java ` and updated version checks in ` Test _
updated Javadoc visitor classes to handle DCTree. DCReferenceTree instances to improve clarity and functionality when processing Javadoc nodes
( chore ) camel - spring - remoting : fix nullpointerexception when use two camel context
removed redundant @ Override annotations across multiple classes to improve code clarity and maintainability
added module import for Java2TypeScriptAdapter and updated assertions in EnumTests to improve module handling and ensure accurate representation of static fields
use http : / / www. w3. org / 2001 / XMLSchema instead of w3c _ XML _ SCHEMA _ NS _ URI
added content description handling for badge notifications in BubbleTextView to improve user experience by providing appropriate content descriptions based on badge status
added mouse wheel movement functionality in TestMouseWheelScroll. java to enhance user experience by providing accurate wheel rotations
pdfbox - 4892 : fix npe when position absolute
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
fix npe in vacuumview
updated currency selection logic in BitfinexAdapters. java to ensure currency values are correctly converted to uppercase
updated JsonFormat to use GeneratedMessageV3 and added a boolean flag for always output default fields to improve code clarity and ensure default values are
added checks for array and enum types in JacksonXmlFormatMapper to ensure proper handling of array and enum types during JSON serialization
updated variable names and added handling for PARKED and SUSPENDED states to improve clarity and correctness in thread state management
updated DirectoryTaxonomyWriter and NameIntCacheLRU classes to enhance taxonomy handling and improve code clarity
refactor methods in VetoableChangeSupport. java to improve code readability and maintainability
adjusted height calculation in BrowserContentPane. java to ensure correct Y - coordinate calculation
pdfdocument. load ( ) don't throw invalidpasswordexception
added unit tests for ` getShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper security
ggb - 2118 fix for exam exam exam
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory to improve code readability and maintainability
updated sleep durations in BackendInitializerHelper, TerminalClient, and added new test cases in GcodeParserUtilsTest to improve responsiveness and
refactor version comparison logic in SwingStartup. java to improve clarity and correctness in handling release status
added functionality to include a generated file comment in the migration process to improve clarity and maintainability of migration output
added ` < player | * > ` to the argument in multiple Java files to enhance permission handling for players in plots
deleted ` BadHdfsThreadsFilter. java ` and ` BadZookeeperThreadsFilter. java ` files to remove unused filters that are no
updated method names from ` nameVariableName ` to ` optionName ` in ` OptionProcessor. java ` to improve clarity and consistency in method
added a condition to check for parallel execution in TestNGContentHandler to ensure proper handling of parallel execution in tests
( chore ) camel - test - infra - infra - infra - infra - infra - infra - infra
refactor ( ctmethodimpl ) : remove static import
added serialVersionUID to multiple exception classes to ensure proper serialization compatibility across different versions
rename DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve clarity and consistency in naming conventions
updated the hashing method in ShibbolethCompatiblePersistentIdGenerator to include a separator parameter to ensure consistent hashing behavior across different operating systems
added null check for system actions in Parameters. java and modified conditional check in TestAction. java to enhance robustness by preventing potential NullPointerException
added a new file ` Person. java ` in the ` org. apache. maven. it0074 ` package to facilitate the
use systemtables. getgeneration ( ) instead of getlocaladdress ( )
changed the method call from ` indexOf ( timeStr ) ` to ` indexOf ( timeStr. toUpperCase ( ) ) ` to ensure consistency in
added assertions to retrieve time column and time unit metadata in SegmentMetadataImplTest to ensure correct handling of time - related metadata in the metadata
updated import statements and changed foreground color from RED to DARK _ RED in SimulationPlotPanel. java to improve compatibility with the OpenR
added disconnectEmitters. onNext ( new Object ( ) ) method call in NettyStreamingService. java to ensure proper handling of disconnect events
changed method names from ` getAnnotationNamesByStereotype ` to ` getAnnotationTypesByStereotype ` in ` DefaultBeanContext
danielwagnerhall for click on hidden element on double overflow
added a try - catch block around the dismissDialog call to handle potential exceptions during dialog dismissal
hhh - 147373 - allow to use a custom jndi location for jta transaction manager
changed access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library. java to streamline the code by eliminating unused functionality
rename variable ` enabledCiphers ` to ` result ` in ` JSSESocketFactory. java ` to improve clarity and consistency in variable naming
[ beam - 8470 ] change timestamp type to micros in bigqueryutils
replaced IllegalArgumentException with requireNonNull for buffer and userCredentials in Identifiers and DatabaseConnector classes to improve error handling by providing a non - null argument
fix nullpointerexception in valuesresolver. coercevalue ( )
added bounds checking for row and column indices in FlightConfigurablePanel. java to ensure that only valid indices are processed within the table
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel. java to improve user experience by ensuring smooth scrolling
fixed false positive for unnecessarylocalbeforereturn
refactored the initialization of ` scriptEngineManager ` and removed null - check for ` scriptEngine ` to improve code clarity and ensure proper
mahout - 2697 : fix computation of correlation in euclidean distance
don't run incremental backup if there's no sstables
added a new method ` relativize ` to ` MorePaths ` for comparing two paths to ensure that only non - dot paths are included in
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure correct representation of column size and decimal digits
( chore ) camel - test : skip current writer head file 1. log. tmp
replaced ` ByteArray. toHexString ` with ` ByteArray. toJsonHex ` in ` TronJsonRpcImpl. java ` to improve clarity and consistency
renamed ` ErrorHandlerController ` and ` Error404Controller ` to ` Error403Controller ` and updated test files accordingly
replaced ` TerminalFactory. resetTerminal ( this ) ` with ` TerminalFactory. resetIf ( this ) ` in ` UnixTerminal. java
fix for Tiny collection type to ensure compatibility with the latest source version
fixed - connectionpool # acquireconnection ( ) method lead to concurrentmodificationexception
corrected the method name from ` getDateConverter ` to ` getLdapDateConverter ` across multiple files to ensure consistency and accuracy in naming conventions
pdfbox - 4892 : avoid npe in case of cosname. id _ tree
improve error message when class creation fails
increased exception handling for reader and writer threads in LargeStreamletTest to improve test reliability by ensuring proper exception management
updated MainActivity's mViewPager item setting to include extraPages based on user preferences to improve user experience by allowing dynamic adjustment of extra pages based
added handling for brokenGaussian detection in Android versions to improve image processing robustness and prevent crashes on unsupported Android versions
added @ SuppressSubnodes annotation to BaseParser. java and modified string concatenation in ImplicitActionsConverter. java to improve code readability and maintain
refactor FDFParser instantiation to use try - with - resources to improve resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo. java to remove obsolete test cases that are no longer needed
added shell command " input keyevent 82 " in AbstractLauncherUiTest. java and modified assertion in LauncherInstrumentation. java to enhance input handling
added JSON serialization for the filenameToUrl map in FileDumper. java to facilitate the conversion of output files to JSON format for
bugfix : reset the resultnotified flag in profilerthandlerthread
blender loader : use loadimage ( ) instead of loadtexturefromimage ( )
polish ` ` application :'' to ` ` application''
updated the seed value in RandomizersTest. java from " 9781797745008 " to " 9781797845005 "
updated notification sound setting to parse the notification sound URI to ensure consistent notification sound settings across devices
added a method ` reportLoopCount ` to the ` RootNode ` class to enable reporting of loop counts based on the caller's type
added stack version handling for clusters in FinalizeUpgradeAction. java to ensure proper versioning during cluster finalization
bug fix : listbyregionidandstatesearch should use regionid instead of rangeid
removed redundant method call to streamManager. open in ItemOrientedStep. java to streamManager to improve code clarity and maintain consistency in
added a new file ` CountedLoopProblem. java ` that generates a random number based on a specified hash code to validate the correctness of
updated method signatures to use Object array instead of metaspaceMethod to improve flexibility and performance in executing compiled methods
don't throw jvmcierror when attempt to get the pending failed speculation offset
updated KafkaStreamsTracing class to replace TransformerSupplier with ValueTransformerWithKeySupplier to improve clarity and consistency in tracing functionality
update feedbackconstantsumquestiondetails to show total and receive point
removed the call to applyToActivitiesIfAvailable in BaseApplication. java to streamline the code by eliminating unnecessary method calls
added thread management and stack dumping functionality in CloseRace. java to ensure graceful termination of child threads during process execution
updated IntPointField to return an integer instead of a string and added assertions in TestPointFields to ensure proper handling of integer values and validate
changed arcSize from a fixed value to a dynamic value based on the width of the button to ensure proper scaling of the button based on its
fix image size in addandscalemulticontainer
rename method from ` isMinifySqlEnabled ` to ` isShrinkWhitespacesInSql ` across multiple files to clarify the purpose of
refactor waitForStateTransitionToEnd method in AbstractLauncherUiTest and WorkProfileTest to improve clarity and maintainability of launcher state transitions
added ` CasCoreConfiguration ` and ` CasCoreLogoutConfiguration ` to multiple test classes to enhance test coverage for various configuration classes
replaced direct calls to ` raf. readLong ( ) ` with ` raf. readFully ( buf ) ` for reading a single byte array to improve
camel - 15429 : camel - http - should not log http response code if debug logging be disabled.
use module boot path instead of empty classpath
add the scope element to the default script scope provider
added methods to get and set the layer manager in AnimComposer and updated AnimEvent to use this new method to improve layer management
added a check to return early if the queue size is zero in DeferredHandler. java and removed the showDefaultScreen method in Workspace. java
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness by preventing null
refactor center and center calculations in CylinderRegion. java to improve code clarity and maintainability
make test failure message more meaningful ( include full stacktrace )
added a null check for subparams in QueryExecutorImpl. java and implemented a test case in StatementTest. java to ensure proper handling of
added a conditional check for the customized environment in the SecurityModel class to ensure that only customized environments are logged and logged
added " rctag = android% 20app% 20edit " to the URL query in ReviewInterface. java to allow users to edit
refactor Test class to improve code readability to enhance maintainability and facilitate future updates
updated PBEKeySpec to use keyLength instead of blkSize to improve accuracy in key generation
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader. java ` to ensure proper handling of section definitions in
added distance calculation and accuracy checks in GpsLoggingService. java to improve performance by avoiding unnecessary distance calculations
updated UI messages in TableCellLayout, TableLayout, and TableLayout2 for clarity to improve user experience by providing clear insights into the
doc : generate sample code in the java microgenerator ( # 269 )
updated ` InsightFilter ` to use ` Reference < Object > ` for ` rootNameFn ` and ` sourceFilterFn ` to improve
removed binary search and added operations from AllAppsList. java to simplify the code and improve performance by eliminating unnecessary binary search
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to streamline the
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests. java to clarify the purpose of the
change assertion from assertRootArcs ( ) to assertRootArcs ( ) to ensure that the assertion accurately verifies the root arc
added assertion to check if the security policy exists and is a file to ensure that the security policy is valid before proceeding with tests
camel - olingo2 : align olingo2 component configuration with other olingo2 component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest. java to improve test stability by allowing more time for recovery operations
removed the ` e ` parameter from the ` info ` log statement in ` MongoPersistentEntityIndexResolver. java ` to simplify error logging by
added functionality to send images by HTTP using XMPP in the XMPPClient class to enhance user experience by allowing uploads of images using HTTP in the application
camel - 19836 : camel - netty producer should set the netty exchangeexception if the producer don't get the channel
fix spliturl ( ) for valid and invalid hostnames
remove system property ` org. apache. jasper. compiler. disablejsr199 ` from ` FragmentActivator. java ` to clean up unused
added null string handling in CSVRecordReader and related classes to ensure proper handling of null values in CSV processing
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip specific Liquibase services
updated method signatures to use JavaSourceFile instead of J. CompilationUnit to ensure compatibility with Java source files
modify itemcommandtriggerhandler and itemstatetriggerhandler to use'/'instead of'/ * '
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration. java ` to align exception handling
solrxmlconfig : deprecate ` ` zkaclprovider'' in favor of ` ` zkcredentialsprovider''
fix the mana tablet not show the durability bar.
added a method to set the identifier collection in the call event to ensure that the current call event has the correct identifier collection
removed the import of DictionaryCompoundWordTokenFilter from TestRandomChains. java to streamline code by eliminating unused dependencies
updated the method name from " ScryptUtil : deriveKeyWithScrypt -% d " to " ScryptUtil : deriveKeyWith
refactor GeneratedCode class to improve code readability and maintainability
updated assertion message in TypeDefinitionRegistry to include the definition parameter to enhance clarity by providing a more descriptive assertion message
hide the share with me icon in LocalFileListAdapter to improve user experience by hiding the share with me icon
change the crossorigin attribute from ` ` http'' to ` ` https'' in multiple filter classes to ensure proper access to external resources
updated import statements and modified method parameters in RouterFilter and RouterServerListFilter to enhance code clarity and ensure proper handling of null headers
updated assertion message format in TestIndexWriterMergePolicy. java to improve clarity of failure messages for better debugging
[ multilayerperceptron ] deprecate multilayerperceptron
added null check for context awareness in CrawlerSessionManagerValve and updated request expectations in TestCrawlerSessionManagerValve to ensure proper context
added security check to the getJspApplicationContext method to ensure proper initialization of JspApplicationContext based on security settings
replaced hardcoded values with constants for minimum and maximum values in RocketComponentConfig. java to improve accuracy and maintainability of the code
added Scopes. SINGLETON to the NonceService binding in OpenIDAuthenticationProviderModule to ensure proper scoping of the Nonce
updated child links in FileWrapper. java to include additional parameters to enhance functionality by allowing child links to be updated
removed the ` HttpMethod ` import from ` doExecute ` method in ` SpringCloudPlugin. java ` to simplify method signature and improve code clarity
increased the publishWithDelay duration from 100ms to 500ms in RetrievalBlockingMessageStoreTests. java to improve test reliability by allowing
add support for the ` ` isShiftAlways'' attribute on the ` AnyKeyboard ` class to ensure that the ` isShiftAlways `
curator - 107 : add timeout to check zk leader for role reach
removed unnecessary whitespace in NearbyActivity. java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer to check for reference identity to improve accuracy in identifying identity references
modified the ` newInstance ` method to accept a ` noop ` parameter across multiple classes to enhance flexibility in creating ` ArtifactCache ` instances based on
added a sleep delay in the exception handling in TestListenTCPRecord. java to improve responsiveness by waiting for interrupted exceptions
updated argument assignment logic in PatchExtensionMethod. java to ensure original arguments are preserved during method execution
replaced ` Map ` with ` Set ` in ` RawNativeLibraries ` to improve performance and simplify library management
added support for " apply - sequence " and " ignore - send - failures " attributes in the DefaultRouterParser and AbstractChannelNameResolving
removed unused x509 publish URL and view name from ClientKeyPublisher and JwkViewResolver to streamline the code and improve maintainability
modified the handling of the readers array in QueryComponent. java to ensure proper assignment of the readers array when there is only one reader
replaced ` MaxFloatFunction ` with ` Math. max ` and ` Math. min ` in ` ValueSourceParser. java ` to improve
simplified the return statement in the Container class to improve code readability and maintainability
removed unused variables from Highlighter and updated import statements in TokenSources to improve code clarity and maintain consistency in import statements
updated SQL insert statement to include UUID as a primary key in user table to ensure unique identification for users and improve data integrity
updated ` CasMultifactorAuthenticationWebflowConfiguration ` to use ` @ Qualifier ( " flowBuilderServices " ) ` to ensure
updated SQL commands and variable names in WriteJdbcPTest. java to improve clarity and consistency in database operations
don't set laf if it's empty
replaced calls to ` getDesiredStateEntity ( ). getDesiredState ( ) ` with ` getDesiredStateEntity ( ). getDesired
simplified margin calculations in FloatingTaskView. java to improve code readability and maintainability
updated status line handling in NavigationShareTab and RootFolder to improve user experience by providing clear feedback on the status line
removed the ` threadId ` parameter from the ` instrFilter ` method in ` CPUCallGraphBuilder. java ` to simplify the method signature and
mondrian : don't show the default perspective when there be no toolbar
added NetworkAddressChangeListener to HomeKitImpl and updated warning messages to enhance network address handling and improve logging clarity
hbase - 19801 testhdfseventsinkonminicluster should use getleasealtime ( ) instead of getleaseByPath (
replaced ` Optional. absent ( SourcePath ) ` with ` Optional. absent ( ) ` for ` prefixHeader ` and ` linkStyle ` to
added null check for the message in ExceptionHandlerRegistryFactory to avoid potential NullPointerExceptions when handling null messages
changed the ` nextID ` variable to be volatile and modified the ` getSize ` method to return ` nextID ` instead of ` this `
resolve intermittent test failure on slow machine
added HasSourcePath interface and implemented getPath ( ) method in multiple classes to provide functionality for source paths in the build system
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify error handling and improve code readability
added support for custom index field names in OrdinalMappingAtomicReader and TestOrdinalMappingAtomicReader to enhance flexibility in indexing by allowing custom index
added validation for seconds and nanos in the ` toEpochMilli ` method to ensure accurate conversion between seconds and nanoseconds
updated method calls from ` getAttribute ` to ` getAttribute ` in ` OGLESShaderRenderer. java ` and ` Lwjgl
added functionality to block update scripts based on user preferences to enhance user experience by preventing scripts from being processed
added a new file TestCMoveLimitType. java to implement a performance optimization for moving characters using CharBuffer
reset temporal attributes in ChannelState and refactored audio packet processing in AudioPacketWaveRecorder to improve accuracy of metadata handling and streamline audio
camel - 16400 : fixed arrayindexoutofboundsexception in camel - sql - stored
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer. java to reflect the
refactor color handling in Main and VersionCommand classes to improve readability and maintainability of the code
refactor token validation logic in InputStreamBinder and NextcloudRequest to improve code clarity and maintainability by encapsulating token validation logic
add iib. eof. error to http11inputbuffer. read ( )
add unit test to verify deletion of non - existent group member
( chore ) camel - ftp : remove unnecessary object [ ] { new object [ ] { } }
deleted the V2ReplicationProtocol. java file to remove unused replication protocol implementation
updated method and variable names from ` compileTimeClasspathDeps ` to ` compileTimeClasspathSourcePaths ` across multiple classes to improve clarity and consistency
added new classes ` ConstructorArgsDemo ` and ` StupidFinal `, ` StupidFinalDemo `, and ` StrictDemo ` to
make directtemplatefeaturecollectionfactory thread safe
updated assertion to check that responseCount is less than 2 * DatabaseDescriptor. getReplicationFactor ( ) to ensure that the response count does not
added a null check for the index number in the ItemRowAdapter to prevent potential NullPointerException when the index number is null
rename method parameters from " areAnchestorsShown " to " areAncestorsShown " across multiple classes to improve clarity and consistency in
add a check to return early if the app's width is less than 12 to avoid unnecessary processing when the application's width exceeds 12
updated equality check in ChangeLogParameters. java and added a new test case in ChangeLogParametersTest. java to ensure consistency in property values
changed the loggers map from static to final to ensure that the loggers map cannot be reassigned after initialization
modify return statement to use getBasePlot method to ensure correct plot retrieval based on specified conditions
restserverendpoint : don't warn if upload directory don't exist
added a ` sendStatus200 ` parameter to several constructors in ` ServerGenerator `, ` HttpTransportOverFCGI `, and ` Server
added a check for the'comment'length in the multi - line comment condition to ensure that comments are only processed when the'comment '
added file type management functionality in BuckModule to ensure proper file types are removed when the default extension differs from the default file extension
replaced specific function imports with a wildcard import in ComposedUtil. java to simplify import statements and improve code readability
added a new error message for unsupported CPU options in RTMGenericCommandLineOptionTest and updated related tests to improve clarity on unsupported CPU options and
reformatted code in AccountsActivityTest. java for consistency to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added a mockito package import method for ChannelTypeUID in AbstractModbusOSGiTest. java to facilitate mocking of ChannelType
fix infinite loop in polyglotexceptionimpl.
added context reset functionality to ShadowFontsContract to ensure proper context management during testing
added a ` toMillis ` method to ` TimeGranularity ` and updated date queries in ` PinotDataSourceMaxTime ` to support time zone
added handling for null finally blocks in ControlFlow. java to improve robustness by ensuring proper flow analysis
updated assertions in Assert. java and ArrayEqualityAssertTest. java to improve clarity and correctness of error messages for array comparisons
add default to windowclicklogic. isvalid ( )
modified the index calculation in MeshBuilder. java to correct the index calculation logic to ensure correct indexing in the MeshBuilder class
nifi - 5643 : remove unnecessary dependency on controllerserviceprovider in flowcontroller
added support for ResolvedJavacPluginProperties in KotlincToJarStepFactory to enhance functionality by allowing custom processor configurations
updated RESCROLL _ DELAY to use PAGE _ SNAP _ ANIMATION _ DURATION _ DURATION in DragController and Paged
added functionality to refresh shortcuts only if necessary to improve user experience by ensuring shortcuts are only refreshed when necessary
added case HISTORY _ SEARCH _ BACKWARD in ConsoleReader. java to handle history search functionality
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robust handling of null core names and
added marker selection functionality to the NearbyMapFragment to enhance user experience by hiding the bottom sheet when a marker is selected
added error handling to printStackTrace in FileSyncAdapter to improve debugging by providing more informative error messages
refactor Docker test execution to use OutputAnalyzer for error handling to improve robustness by catching potential RuntimeExceptions during memory checks
modified filter logic in FeedQueues. java to conditionally display feeds based on application settings to improve feed retrieval accuracy by excluding health checks based on application
add warn if defaultdrmsessionmanager be use on wrong thread.
updated ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` toUpperCase ( ) ` for package type and resource compression modes to ensure
change mime type from ` ` text / xml'' to ` ` application / xml''
updated references from ` configFile ` to ` INSTANCE. confFile ` in ` Args. java ` to ensure consistency by using the correct instance reference
removed " sleep 5 " from the assertion in HostPortWaitStrategyTest. java to simplify the test by removing unnecessary sleep duration
updated the data type of ` getGroupingIdValue ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule.
added multiple instances of ` GraphicsEnvironment. isHeadless ( ) ` in ` mmm Toolkit. java ` and ` ppp Toolkit.
added a condition to check if the current recipe matches the furnace before smeltting to ensure that only valid furnace instances are
add ` movethreadcountdescription ` to solve ( )
fix : search with revinclude don't select wrong resource with same spname
added a new test file ` Issue582Test. java ` to test the functionality of the ` BTreeKeySerializer ` class
[ native ] add e2e test for decimal overflow
refactor LoadingCache class to improve code readability and maintainability
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest class to handle cases where " AvoidNonConstructorMethodsWith
simbody should catch staleelementreferenceexception in expectedconditions. isselected
refactor view existence checks in ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator to improve error handling and ensure proper resource management
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future updates
added translation calculations in TaskViewUtils and introduced a method to log matrix in Utilities to enhance animation transitions and improve debugging capabilities
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in both FeatureFlags. java and RotationHelper
added a static method ` walk ` to ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to use this method to improve
added SolrQueryRequest parameter to multiple DocTransformerFactory methods to enhance the augmenter's functionality by integrating Solr's request handling
added triggers for post content and announcement checks in SingleTableMySQLTriggerTest. java to ensure proper handling and validation of post content and announce
refactor comparator assignment in FieldValueHitQueue and TopFieldCollector to improve code clarity and maintainability by centralizing comparator logic
updated SQL query prefixes in PhoenixQueryBuilderTest. java to use double quotes for column names to ensure consistency and correctness in query formatting
[ hotfix ] [ test ] use spark. awaitinitialization in requestertest
added methods to manage and retrieve total storage pool and fee in DynamicPropertiesStore. java to enhance functionality for managing storage pools and fees
added support for streaming files from the ` src ` directory in ` AssetsController ` and updated tests accordingly to ensure proper handling of non -
bugfix : map mark should use map mark key instead of position
added a ` TokenRewriteStream ` parameter to several methods in ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` to enhance the
removed ` IOException ` from method signatures in ` JavaCompiler. java ` and ` JavacProcessingEnvironment. java ` to simplify method signatures and improve
updated variable names and improved logging messages in JxBrowserManager. java and FileUtils. java to enhance clarity and consistency in file path handling
added a check for " AppVersion " in IOSImplementation. java and modified image format equality checks to ensure proper handling of file formats based on
updated method call from ` getBridgeUID ( ). getId ( ) ` to ` getUID ( ) ` in ` SomfyTah
disable flaky test on github ci
added SSL keystore properties in OpenWireConnectionTimeoutTest. java to facilitate SSL configuration for testing purposes
updated logging messages for NaN values and modified metric serialization logic to improve clarity of logged metrics and ensure proper handling of NaN values
added a method to remove a session from the session manager to ensure proper resource management and prevent memory leaks
added hostname assignment for alerts in HeartBeatHandler and updated alert state logging in AlertReceivedListener to ensure proper handling of null values and
simplified the flushing logic in ChannelEndPoint. java to improve code readability and maintainability
[ kie - api ] fix kmodule xsd in kie - api module
added unit test for seeking in ShadowMediaPlayerTest and implemented seekTo method in ShadowMediaPlayer to ensure correct playback behavior when seeking to a
rename task from ` createTask ` to ` createThrowingTask ` across executor classes
added border settings for the tab close button in AQUA _ LAF to improve the visual appearance of the close button in the user interface
added HTTP POST request and connection timeout settings in TSPTimeStampService. java and refactored various imports in TestSignatureInfo. java to
drools - 5383 : allow xstream creation with a reflectionprovider ( drools - 538 )
added type validation for diamond application in ` ppp Attr. java ` and introduced a new ` DiamondRaw. java ` file
[ hotfix ] [ table - planner - blink ] fix style violation in reloptutil
updated condition checks for setting IDs and values in Http2Settings. java to ensure that setting IDs and values are valid long literals
removed MapInterfaceTest . java and Issue664Test . java files to eliminate unused test files and improve codebase clarity
[ hotfix ] [ test ] remove useless test in sessionpooltest
added start and end points for the " FeatureCollection " object in GeoJsonWMSBuilder. java to ensure proper handling of root objects in
modified the way the index is set in the PopupMenuButton class to ensure the correct index is set based on the selected index
added canCurrentlyManuallyUnstash ( ) method to check if the currently stashing state changes to ensure proper handling of unstashing
camel - 7314 : camel - jbang - dump route to xml if customid property be not present.
modified the ` getEventMismatchMessage ` method to accept a boolean parameter ` waitForExpectedCount ` to enhance event mismatch messaging to differentiate between expected and
added a new file ` HeaderFixer. java ` to handle licence header files to facilitate the processing of licence - related
added functionality to send broadcasts for the first loading completion in the launcher to improve user experience by allowing broadcasts for the first loading action
deleted the ` SuperJumperAndroid. java ` file to remove unused code that is no longer needed
updated the return value in SystemTableScan and modified test cases in TestStarQueries to improve accuracy in determining if a table is distributed and enhance
removed KeyValuesProviderAware and ObservationConventionAware interfaces to streamline the codebase by eliminating unnecessary interfaces
added missitems to the processIdRematches method signature to ensure proper handling of missing mappings in the registry
updated return statements in AtomicIntegerArray, AtomicLongArray, and AtomicReferenceArray to cast the result to long to ensure proper handling of long values in calculations
added caching mechanism for date format strings in HSSFCellStyle. java to optimize data format retrieval and improve performance by reducing redundant calculations
updated the URL query in RemoteAuthenticationEndpointTests to include a filter parameter to enhance security by allowing filtering of users based on their attributes
updated the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor. java ` to ensure that the
updated getStatsLogManager ( ) method to include additional container information and page index to improve logging clarity and provide additional context for launcher exit events
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
deleted the DeadlockTest. java file to remove unused test class
bugcontentprovider : don't refresh job if input be null
added functionality to open the " Reopen in Browser " menu item and modified server opening logic to enhance user experience by allowing quick access to the
added a new error message for cases where multiple outputs cannot be present multiple times to improve error handling and clarity in semantic analysis
updated the Runnable implementation to throw a NullPointerException when adding an entry listener with an EqualPredicate to ensure that the addEntryListener method correctly handles
fix : coordinatearray. reversed ( ) throw indexoutofboundsexception
removed unnecessary whitespace in ToolbarPanel. java to improve code readability and maintain consistency
added a variable ` first ` to the ` TestPayloads ` class to ensure that the ` first ` variable is properly initialized before usage
replace mWorkspace. enterOverviewMode ( ) with showOverviewMode ( true ) to improve overview mode display logic
http : / / issues. apache. org / jira / browse / amq - 2576 - fix networkroutetest failure
change return value from Integer. MIN _ VALUE to Integer. MAX _ VALUE in MessageHandlerInterceptorDefinition. java to ensure maximum value is returned
add @ suppresswarnings to floatsupplier. normalfloatvalue to avoid warning
replaced calls to ` pending. addComponent ( pendingChunks ). writerIndex ( ) ` with ` pending. addComponent ( true, pendingChunks ) `
updated the verbose level assignment and enhanced artifact name replacement regex to ensure correct verbosity level and improve artifact handling by preventing unintended replacements
pdfbox - 4071 : use getcosdictionary ( ) instead of getdictionaryobject ( )
removed debug print statements from ReferenceUtil. java to streamline code by eliminating unnecessary print statements
add query type to field visibility predicate
added constants for solidity HTTP JSON - RPC port and enablement to enhance configurability and allow for dynamic configuration of the JSON - RPC
added a type check before removing a drop target from the folder to ensure proper handling of non - DropTarget instances
refactor stubJar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability
added " Setup wizard " and " Workflow helper " features in StartPageTopComponent. java to provide users with guidance on how to setup,
don't schedule meteredflusher until compaction be complete. patch by jbellis
simplified the retrieval of the available boolean in OnlineTestCase. java to improve code readability and reduce unnecessary type casting
changed ReturnAttributes from NONE. value ( ) to ALL _ USER. value ( ) in LdapUserGraphicalAuthenticationRepository. java to ensure
modified the handling of onIdleTimeout and invokeOnContentAvailable in HttpChannelState. java to improve robustness by ensuring proper task execution
changed CreateEndPoint from implementing Runnable to extending Invocable. NonBlocking to allow for non - blocking operations on the CreateEndPoint class
refactor TABLE _ HEADER _ SEPARATOR regex pattern and update its usage in TableBlockParser. java and add a new test case in TablesTest.
change return value from 32.0 f to 31.0 f in Camera. java to improve accuracy in camera interactions
added a preference for " startonbootSetup " and modified return values in Utilities. java and GeneralLocationListener. java to enhance user experience
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService. java to enhance security by restricting the number of
updated error message from " [ 1 ] position was null " to " [ param ] name was null " in ParameterRegistration # enablePassing
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest. java to mark the test as ignored due to race conditions
added exception handling to getInputPinotFS and getOutputPinotFS methods to improve robustness by ensuring proper exception handling during file operations
added locale - based date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent across different locales
added MetalLookAndFeel import and set it to the UI to enhance the visual appearance of the user interface
added pre - destruction for ping task in Bot. java to ensure thread safety during ping operations
removed the throwable message parameter from the error method call to simplify error handling by directly passing the throwable object
rename ` module ` to ` from ` in ` ModuleTable ` and ` PackageTable ` to improve clarity and consistency in naming conventions
updated exception handling in PinotAdministrator. java to catch CmdLineException and log an error message to improve error handling and provide clearer feedback
replaced ` super. equals ( o ) ` with ` isEqualTo ( o ) ` and marked the ` hashCode ( ) ` method as deprecated to
refactored methods and variables in CustomPlaybackOverlayFragment and ImageButton to improve code readability and maintainability
update zoom level settings for map entries in BasicMapViewer. java to ensure zoom level accurately reflects the current zoom level for better user
refactor admin user and process user variables to use processUser and processUserGroups to improve clarity and maintainability of the code
replaced ` AccessController. checkPermission ( perm ) ` with ` sm. checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` Windows
added ArgumentExtractor support to the DelegatedClientAuthenticationAction and updated related classes to enhance functionality by allowing custom argument extraction
changed the defaultGroup variable from private to private final to ensure immutability of the default group variable
fix cache leak in tilesizechanger
removed redundant code in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code by eliminating redundancy
refactor cleanEntriesForFeedsWithoutSubscriptions method to accept a list of feeds to improve code readability and encapsulate logic for cleaning feeds without subscriptions
replaced ` CoreAuthenticationTestUtils. getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests. java ` to streamline authentication handling
nifi - 5907 : fix test failure on window
fix for conic curve with non - zero value
reformatted conditional statements in RandomAccessReader. java to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked ", " vararg " } ) annotation to Fields and MockitoBeforeTestNGMethod classes to suppress unchecked
added methods to create images from arrays and modified the ` createFromImage ` method to accept a list of images to enhance image handling capabilities and improve
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder. java ` to ensure compatibility with the latest HBase
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` to clarify the purpose of ` runtimeVisibleAnnotations `
replaced null - checks with ` Objects. equals ` in multiple classes to improve code readability and leverage built - in utility methods
refactor method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple classes to improve clarity and consistency in
added assertions to verify the retrieval of default view locations in NinjaDefaultTest to ensure that the system correctly handles different view configurations
renamed ` allAppsWidth ` to ` allAppsContainerWidth ` and updated related calculations in ` DeviceProfile ` and ` InvariantDeviceProfile
updated timestampsViewPaddingBottom calculation and adjusted list position offsets in DetailFragment and ListFragment to improve layout responsiveness and ensure proper vertical margin for
added exception handling for InterruptedException in ZkStateReader to improve error reporting for interrupted processes
added null checks for request fields in HttpFields. java and implemented a test for empty headers in RequestTest. java to ensure proper handling of
don't allow static nat rule for non - supported network
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment. java to ensure header scrolling state is
added a method call to removeExtraEmptyScreen to improve user experience by removing extra empty screen content
added a fixedWidth flag and modified xAdvances calculation logic in BitmapFont. java to ensure proper handling of glyphs based on their
refactor ChangeLogFragment to accept a Bundle for displaying messages instead of a boolean flag to simplify the fragment's functionality and improve maintainability
added preEvent, preTransition, and postTransition methods to AbstractStateMachineFactory to enhance state machine functionality by integrating state machine interceptor
refactor ConfigDescriptionProvider class to improve code readability and maintainability
updated role creation in ` TestAuthorizationApiAuthorizer ` and modified ` startMetaStore ` method in ` StorageBasedMetastoreTestBase ` to
refactor facet sorting logic to use a boolean variable for clarity to improve readability and maintainability of the code
updated property handling in CheckstyleReport. java to use configuration instead of hardcoded values to improve flexibility and maintainability of the code
refactor DeleteInactiveReplicaTest to improve the handling of Jetty collections to enhance clarity and accuracy in error reporting during replica deletion
modified FileActionsDialogFragment to accept a filename parameter and updated header visibility logic to enhance user experience by allowing customizable file names in the dialog
added a new constant ` INVALID _ DIRECTION ` and updated conditions for previous reorder direction in ` CellLayout. java ` to ensure proper handling
updated InnerTransferRequest and AccountAPI to include new fields for currency, from, to, and modified the API path accordingly to enhance API functionality
added method to get the execution id for a specific job in JobExecutionService. java and updated test assertions in JetTestSupport. java
added a new annotation interface ` EnableAdminClient ` in the ` org. noear. solon. admin. client ` package to enable
replaced specific imports with a wildcard import and implemented visitIdentifier methods in FindTypes. java to streamline import statements and enhance type handling for identifiers
added action text color setting in AuthenticatorActivity to improve user interface clarity by using a defined color scheme
added a new ` find ` method in ` Manager ` and ` StreamSupplierComponent ` to handle foreign key constraints to improve error handling for foreign
refactor test step creation methods to improve clarity and consistency in the codebase
corrected a typo in the test method name from " noArgMethodIsNotValid " to " validNoArgMethod " to ensure consistency and accuracy
added a method to cancel clients in RpcServer and updated startDriver to handle cases where the Child process exits before connecting to improve error handling and
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo `, ` ParamInfo `, and ` ReflectionParamInfo
initialized ` lastDisplayedUser ` with ` Optional. empty ( ) ` to ensure ` lastDisplayedUser ` has a default value to avoid potential
added a new method ` findAll ( OrderSpecifier <? > ) ` to ` QueryDslMongoRepository ` and updated related test cases to
added null checks before stopping instances in DataNode to avoid potential NullPointerExceptions during shutdown
added a break statement in DefaultPlannerBenchmark. java to exit the warm - up loop in case of a failure to improve test reliability by
add xread ( ) and xreadgroup ( ) method to multistagepipelinebase and redispipeline
updated the ` LinkedBufferInput ` and ` StreamInput ` classes to replace ` incrReadByteCount ` with ` incrReadByteCount ` and
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and updated related methods in CasWebSecurityConfigurerAdapter and CasWebSecurityConfigurer
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to establish a test environment for the ` minikdc `
added a method to register a ContentProvider in ShadowContentResolver and modified ContentProviderController to handle ProviderInfo to improve provider registration functionality and ensure
updated the Version variable references from ` Version ` to ` ClassFile. Version ` to ensure consistency in versioning across the codebase
added a keep - alive configuration to SingleConnectionManager to enhance connection management by allowing configuration of whether to keep alive
[ java ] : rename unicast flow control to multicast flow control.
gbasicstroked : don't crash when point be null
added concurrent access to ` ChannelEndPoint ` and improved error handling in ` HttpServerTestBase ` to enhance thread safety and ensure proper resource management during
danielwagnerhall : add selenium. take. screenshot option
replaced assertEquals with assertThat in multiple test classes to improve readability and maintainability of the test code
remove deprecate context reference from trufflelanguage.
updated exception handling in StubberImpl. java and added new test classes StubbingWithBadThrowablesTest. java and UninstantiableThrowable
modified exception messages in Actor. java and Group. java to throw exceptions for non - ascendant and descendant actors to improve error handling and clarity
added location permission handling in LocationPickerActivity to improve user experience by allowing access to location data
http : / / issues. apache. org / jira / browse / amq - 4237 - add countermdb example
added CookieSpecs import and set the request configuration to standardize cookie requirements for improved security
simplified the intersection check in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule. java and modified audio processing in AirspyTuner
added monitoring URL support to the ScrollingPanel and SystemInformationsButtonsPanel classes to enhance user experience by allowing monitoring of Java applications
added a new configuration option for service creation timeout in KubernetesConfigOptions to provide a configurable timeout value for Kubernetes service creation
added cases for different place types in NearbyListFragment to improve user interface by displaying appropriate icons based on their description state
added a null check for the package before processing classes to avoid potential NullPointerExceptions during class resolution
added a new file PrintInlining. java that includes a main method that prints " Passed " to facilitate debugging by providing
refactor Javadoc parsing logic to handle nested brackets correctly to ensure correct parsing of Javadoc comments with nested brackets
[ java ] fix checkstyle violation in archivetest
updated EdgeDataTableModel to use edgesAndMetaEdges instead of edges to ensure that the model reflects both edges and metadata edges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to streamline code by eliminating unnecessary dependencies
changed error message format from " Invalid playback speed requested " to " Setting playback speed " to improve clarity of error messages for better debugging
don't trigger room remove event when cluster be start
updated the variable name from'replicas'to'cores'in AutoScalingHandlerTest. java to accurately reflect the intended use of the
added flipping and texture key settings in TextureHelper. java to improve rendering performance by optimizing texture rendering
refactor ` ProjectBuildFileParseEventStarted ` to use ` CloseRecordingProjectBuildFileParser ` across multiple classes to improve event handling and ensure
[ j2kt ] don't execute normalizations in j2cl pass
replaced ` retrofit. nextResponseBodyConverter ( this, innerType, annotations ) ` with ` retrofit. responseBodyConverter ( innerType, annotations )
[ hotfix ] [ runtime ] make memorymanager. getmemory ( ) return null
cloudstack - 7042 : add miss @ temporal annotation to consolessionvo
added a new file ` Hbs. java ` that implements the ` TemplateEngine ` in the ` io. jooby. handlebars
updated ChatMessageAdapter to handle null or empty hint cases and refactored setUpIncomingMessage method to improve message handling robustness by ensuring
updated measurement retrieval from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv. java ` to improve accuracy in processing header
add test for waituntilalertdialogappears ( )
added a check for distinct column indices in ReduceSinkDeDuplication. java to ensure that the method returns null when there are fewer columns
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 6
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated the groupId and artifactId from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty
changed return type from unmodifiable to unmodifiableMap for identity attributes to enhance immutability and thread safety of attribute access
don't update the header if the user edit a sketch code
replaced instances of ` new Double ( bytes ) ` with ` return bytes ` in multiple classes to improve performance by avoiding unnecessary object creation
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in ` JdbcDataSource. java ` to ensure correct retrieval of timestamp data
updated the condition to check for both Context and javax. naming. Context in HtmlJndiTreeReport. java to ensure compatibility with additional context
refactor database options retrieval to use a switch statement to improve code readability and maintainability
changed the edge type check from " double " to " mutual " in ImporterGEXF. java to accurately reflect the intended
replaced the static final integer ` FLAG _ SLIPPERY ` with a static import of ` FLAG _ SLIPPERY ` in `
trufflelconstantfieldprovider : don't compute array dimension for non - array field
added functionality to retrieve and set the Google Drive folder path in PreferenceHelper and related components to enhance user experience by allowing access to the Google Drive
ggb - 2118 fix : add shuffle suggestion to algebra input item
added @ Nullable annotation to method parameters in Truth. java to improve null safety and prevent potential NullPointerExceptions
updated case handling for newSize in ArrayUtil. java to improve accuracy in bit manipulation operations
added a new test class ` ApiExceptionTest ` and modified the ` instrumentConstructor ` method in ` ClassInstrumentor ` to ensure proper exception handling
added a synchronized Multimap to track waiting for Anticompaction in StreamIn and StreamInitiateVerbHandler to ensure thread - safe access to
added support for the ` isKeyguardSecure ` property in ` ShadowKeyguardManager ` to enhance functionality for managing keyguard settings
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for these classes
replace'>'with'' in GrblUtils. java and add a length check for overrideParts to ensure proper handling of edge cases
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
modified the checkDrained ( ) logic in AsyncFileImpl. java and added a new test in FileSystemTest. java to ensure that
updated light intensity constants and modified shader creation parameters in HybridLightTest. java to improve lighting accuracy and ensure proper shader creation
replaced instances of ` FakeProjectFilesystem ` with ` workspace. getProjectFileSystem ( ) ` in multiple integration test files to simplify filesystem retrieval and improve
changed the type of ` loadRerunFile ` from ` String ` to ` PathWithLines ` in multiple files to improve type safety
updated imports in Gson and JsonArray classes to improve code clarity and maintainability
added a TODO comment to the TEST _ DIRS array declaration to indicate that this feature will be removed in future versions
added a call to Shadow. directlyOn ( realObject, ParcelFileDescriptor. class ). close ( ) to ensure proper resource management by closing
added thread - local prefix index management in ` BasisLibrary ` to improve thread safety and performance when managing prefix indices
added LogLevel annotation to TestDistributedStatsComponentCardinality. java to enable debugging of HttpConnection in production environments
added ` throwIfImmutable ( ) ` method to ` IntList. java ` to ensure immutability of the list before proceeding
updated GrpcServerRunner to use @ NotNull annotation and modified GrpcClientBuilder to use URI. create ( ) to improve code clarity and
refactor Graal class to use a Supplier for the workDir variable to improve code readability and maintainability
invalidate function array when instrumentation be invalidate.
updated GenerateManifestStep to convert the manifest file path to a UTF - 8 encoded UTF - 8 string to ensure proper handling of line endings
fix rcn _ redundant _ nullcheck _ of _ nonnull _ value
added nullability annotations to method parameters in ConfigDescriptionRegistry. java and refined null check in ThingResource. java to improve code clarity
don't throw cancellationexception in masterjobcontext. createcancellationexception ( )
added a condition to initialize the stream based on the presence of a crop box to ensure proper initialization of the image stream based on the presence of
refactor ManagerBase class to improve code readability and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags. java to enable accessing All Apps from the
refactor FragmentTestUtil to use Robolectric's ActivityController for activity lifecycle management to improve code maintainability and leverage Robolectric's
renamed method ` getFileCoordinates ` to ` processFileCoordinates ` and updated variable names for clarity to improve code readability and maintainability by using a
rename ABCase classes to TestABCase classes to improve clarity and consistency in naming conventions
modified the parameter name from ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check in ` Manager
added a new RocketChangedEventHandler to handle changes in the current rocket to ensure that changes do not interfere with the current rocket
added a new file ` ChangeDependencyGroupIdAndArtifactId. java ` to implement a recipe to change Maven dependency IDs and artifactId
refactored file system and directory initialization in IndexingJob. java and added validation in SegmentChecker. java to improve code clarity and ensure
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1. java ` to ensure
refactor PreprocessorDelegate to use a memoized Supplier for replacementPaths and pathToSourcePathMap to improve performance and maintainability of the code
rename JsonExamples class to Examples and update package - info. java to improve clarity and consistency in naming conventions
added debug logging statements for extracting, making, and stream retrieval in ViewExtractor. java to improve traceability and debugging capabilities during extraction and stream
refactor methods in FindsByLinkText. java to improve code readability and maintainability
added a new Main class in the com. facebook. buck. oop _ javac package to facilitate the execution of the Java compiler
make sure we don't get an exception when register a sip account.
removed redundant continue statements in NativeScanner. java to streamline code and improve readability
changed the package of RendererConfigurationTest from ` net. pms. test ` to ` net. pms. configuration ` to align the
replaced ` ImmutableSet. Builder ` with ` Supplier < ImmutableList < BuildRule > > ` for retrieving queried and exported dependencies to improve performance and efficiency
replaced ` remoteContainsResults. stream ( ). count ( ) ` with ` remoteContainsResults. size ( ) ` to improve performance by
added charset extraction in ExtractingDocumentLoader to ensure proper handling of character encoding in metadata
updated SQL insert and select statements to use parameterized queries to improve performance and maintainability of the code
added a check to return early if the slot is - 1 in PlayerInventory. java to optimize performance by avoiding unnecessary processing when the slot is
add cli option to ignore transitive dependency
removed redundant injection of backgroundJobManager in ContactsPreferenceActivity to improve code clarity and reduce dependency on backgroundJobManager
updated ColorsActivity to extend AppCompatActivity instead of Activity to improve compatibility with older Android versions
added null check before closing the selection to prevent potential NullPointerException when closing the selection
added a condition to check if the matcher's start and end matches to improve robustness by preventing out - of - bounds errors during regex
added a " server. port = 0 " configuration to the IntegrationTest annotation to ensure proper server configuration for integration tests
added a new UDF named " reverse " in the UDF to provide functionality for reverse operations in the Hive framework
replaced calls to ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in multiple classes to improve clarity and consistency in accessing
refactor Tracer class to improve code readability and maintainability
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest. java to improve code readability and maintainability
added synchronization and modified buffer clearing logic in StarTreeRecordStoreCircularBufferImpl. java to ensure proper handling of buffer data during split operations
updated the default values of forecastMinutes, forecastHours, and forecastDays in OpenWeatherMapOneCallHandler. java to improve the accuracy of
fix flaky test
updated RemoteTargetGluer and FloatingHeaderView to improve code clarity and ensure proper handling of task IDs during creation and assignment
renamed ` splitAndThenFlatMap ` to ` splitAndThenFlatMap ` and updated the return type of ` parseRerunFile
added item for quartz chiseled block in vanilla creative tab
fixed typo in assertion in TestRadioButtons. java to ensure consistency in test cases
added support for file size options in RCFileCat and RCFile classes to enhance functionality by allowing users to specify the number of row sizes for
add license header to license header
[ hotfix ] [ test ] add checkndarray ( ) method in jnautils
refactor BlobServer class to improve code readability and maintainability
fixed bug 1423731 - unusedprivatemethod no longer report unused private constructor
refactor variable names from ` lexicalScope ` to ` lexScope ` for consistency to improve code readability and maintainability
added a test method to verify the auto - startup behavior of the SourcePollingChannelAdapter to ensure that the SourcePollingChannelAdapter is properly initialized
* fixed bug in treesetting constructor.
modified version parsing logic to differentiate between minor version and minor version to improve accuracy in extracting version numbers from version strings
added a check to ensure tags are not empty before persisting active items to avoid potential NullPointerExceptions when tags are not set
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and its implementation in ` DateTimeFunctions ` to enable
hhh - 17100 fix nullpointerexception in customtype. disassemble
refactor Log4j2ConfiguratorServlet class to improve code readability and maintainability
refactor exception creation to return a new HiveException and AuthorizationException to improve code clarity and maintain consistency in exception handling
updated the method for putting " CC " in CGoCompileStep. java and added a new test case in GoBinaryIntegrationTest. java
added Buildable annotation to CustomResource. java to enable the Buildable annotation for the API builder package
removed the @ Override annotation from the Only class to clean up the code and improve readability
added a timeout constant for three hour in HttpClientFactory to improve connection stability by allowing more time for HTTP connections
added " nonresolving _ raw _ target _ node _ parse _ pipeline " to PerBuildStateFactoryWithConfigurableAttributes. java and updated
simonstewart : add a ` ` trace'' to the security configuration
removed the @ Singleton annotation from ApplicationController. java to streamline code by eliminating unnecessary dependencies
added functionality to retrieve the username from OwnCloudAccount to improve user experience by dynamically retrieving the username based on display name
added a test for resuming a paused job in SimpleJobLauncherTests to ensure that the JobLauncher correctly manages and maintains the paused status
added null check for cacheConfig before accessing its properties to avoid potential NullPointerExceptions when cacheConfig is not initialized
[ grid ] fix checkstyle violation in localnode
fix compilationunitcontext # trytosolvetype ( string )
pdfbox - 3017 : don't parse dictionary object for non sequential pdfs
mahout - 2697 : fix typo in testdistributedloanczossolvercli. java
refactor HttpServerTestBase class to improve code readability and maintainability
updated assertions in PortletApplicationMapTest to use Set < String > instead of Set < String > to improve test reliability by ensuring keys are
added tests for handling ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` to ensure proper handling of null values in DynamoDB
added support for spring boot starter to customize spring boot config
[ ta4j ] fix indexoutofboundsexception in indicator. todouble
add ` execincontainerwithuser ` method to ` execincontainer ` api
update interestedInByteMessages and interestedInTextMessages assignments to include WebSocketTextListener to ensure proper handling of WebSocket message types
added test cases for different attribute scenarios in SemgrexTest. java to enhance test coverage for different attribute scenarios
added a broadcast intent to clear the pull - pending unread action in HomeFragment to enhance user experience by allowing users to dismiss the pull -
removed conditional checks for pre - Gingerbread and overScroller initialization to simplify code for better readability and maintainability
add flush ( ) method to defaultprofilevalidationsupport for dstu21
( chore ) camel - base - engine : do not throw runtimeexceptions when veto be not start
added FloatingActionButton functionality to ShareActivity to enhance user experience by allowing users to interact with Google Maps directly from the fragment
added InlineParslet to ToDateTokenizer for parsing input fragments to improve error handling by throwing an exception for unhandled cases
updated TestAnonymousClassUnloading. java file to improve test coverage for anonymous class unloading functionality
updated error messages from'' to'' in multiple language files to improve clarity and consistency in error reporting
added a condition to check if the server is checked before binding the OperationsServiceConnection to improve user experience by preventing unnecessary operations when the server is
updated Position constructor calls to use getBeginLine ( ) and getEndColumn ( ) instead of getBeginColumn ( ) and getEndColumn ( )
added error handling in CxxPreprocessAndCompileStep and implemented waitFor method in ManagedThread to improve robustness by ensuring proper process termination and
added a boolean field ` requireAllRepositorySources ` and implemented a new ` BaseAdditiveAttributeMerger ` in ` CoreAuthenticationUtils ` to
fix ` ` max - size - per - node'' issue
added support for configurable SSL protocols in NettyWebServer and ServerBasicConfig to enhance security by allowing configurable SSL protocols
replaced AtomicBoolean with AtomicReference in SetOnce. java to improve atomicity and performance of the SetOnce class
updated QueryDslMongoRepository to handle null property cases and added a test for empty string in SpringDataMongodbSerializerUnitTests to
updated assertions in RoundRectBorderTest to use " equal " instead of " unequal " to ensure that roundRect borders are equal to the
[ iotdb - 453 ] fix empty cluster in ibft test
remove parallel test from selenide
updated CountDownLatch and List initialization to use'min'instead of'cnt'and added a validation check for sign length to improve code clarity and
change condition from " windows " to "! windows " in ProcessInformationsPanel. java to ensure proper handling of window states
refactor methods in MoreCollectors to improve clarity and consistency to enhance code readability and maintainability by standardizing method names
added null checks and improved WebSocket client handling in BitmexStreamingExchange and BitmexStreamingService to ensure proper handling of null values and
added validation checks for lat and lon in GeoPointField to ensure that invalid latitude and longitude values are handled correctly
updated methods to use ` workflowFilesService. createFile ` instead of ` workflowFilesService. saveDraft ` to improve clarity and consistency in
refactor ResponderId class to improve code readability and maintainability
updated getTableDocument method to include a boolean parameter to control whether dependent tables are processed based on dependency requirements
added functionality to handle uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing feedback on consecutive uploads without coordinates
added a new POST endpoint for retrieving profile data and modified profile retrieval logic to improve resource management and ensure profile data is properly processed
updated ` setPropertyValue ` method in ` JpaMetamodelEntityInformation ` to handle ` @ IdClass ` annotations to improve property value handling and
added index creation and validation in UpgradeIT and related classes to ensure accurate timestamps for indexes and views in the database
add default exception mapper to jersey error handler
added a boolean parameter ` false ` to ` EntryEditor. java ` to control the behavior of the ` storeFieldAction `
updated the ` nativeCreateNSWindow ` method to use ` ownerPtr ` instead of ` contentViewPtr ` to ensure proper handling of window
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to improve clarity and consistency in database schema
added support for the STOCK case in the Tile class to enhance the visual representation of the STOCK state in the game
fixed - rbuckets. get ( ) method throw classcastexception
don't fail qq due to complex generic signature
refactor LauncherBackAnimationController to utilize BackProgressAnimator for managing back animations to improve responsiveness and maintainability of the back animation
changed the ` _ initialPageNo ` from ` final ` to non - final and added a conditional check to ensure ` _ initialPageNo
fix crc16 calculation bug ( # 1865 )
added comment parsing logic in FormattedSqlChangeLogParser and corresponding test cases to ensure correct handling of comments in SQL format changes
( chore ) camel - maven - plugin : set the archiver on the plexus - maven - plugin
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader. java to improve error handling by providing a more informative
fix npe when query multi - aggregation ( # 2373 )
added support for handling unsigned _ byte and unsigned _ byte formats in GwtGL20. java to ensure proper handling of pixel data in WebGL rendering
refactor method names and method invocations in OutputMemoryTest and VarDump classes to improve clarity and consistency in method naming
replaced UnmodifiableClassException with a custom exception handling mechanism to improve error reporting and provide clearer feedback on class instrumentation issues
add trace to class initialization.
http : / / issues. apache. org / jira / browse / amq - 4237 - fix query level timeout
use caffeine's cache instead of guava's one
updated createDataSource method to include a readOnly parameter and set database connection properties to improve flexibility in data source creation by allowing the connection to be read
updated the regex pattern for invalid source target release in FindBuildToolFailures. java and added a new error message in FailureLogAnalyzerTest.
added a check for location availability before constructing the URI to ensure that the URI is constructed only when the location is not available
initialized ` referencedIds ` with an empty list when ` getInheritedParameterContexts ( ) ` is null to avoid potential ` NullPointerException ` during
refactor ClassLoader class to improve code readability and maintainability
added a method to set the origin response headers in ProxyRequestHelper and its test case to ensure proper handling of response headers in the context
added a new ProfileSettingDrawerItem instance to GpsMainActivity to enhance user interface interaction with profile settings
add ` ` org. apache. jasper. xml _ validation'' to the context
danielwagnerhall : fixing firefox driver to return ` ` null''
added a maxRows variable and modified fetch size handling in IoTDBStatement. java to ensure fetch size does not exceed the maximum number of
refactor : rename iscountoptimizable ( pipeline ) to allactionsareoptimizable ( pipeline )
added mouse event dispatching for node and node selection in StandardVizEventManager to ensure proper handling of mouse events in the visualization process
replaced Integer. valueOf calls with a zeroBuffer method in ManyToOneRingBuffer. java to improve code readability and maintainability by encapsulating buffer
terminalnode : expose the xorgroup through the terminalnodememory
removed the ` getHeight ( ) ` and ` getWidth ( ) ` methods from ` LCDUIImageMonochromeBitmapSource ` to stream
refactor methods in SourcePathResolver to use a unified implementation for retrieving absolute paths to improve code clarity and maintainability by centralizing path retrieval logic
fix dstu2 encode issue
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to include encoded URL checks to ensure proper handling of encoded URLs in WebSocket upgrades
fix name of test suite to match the name of test suite
refactor CxxPlatform retrieval logic in HaskellBinaryDescription. java to improve code clarity and maintainability by encapsulating platform retrieval logic
added imports from org. apache. lucene. index. IndexReader and org. apache. lucene. index. Field in multiple Java files to
added null check for ` current. get ( ) ` in ` ConcurrentLinkedStack ` to avoid potential ` NullPointerException ` during concurrent access
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before assignment to prevent potential NullPointerException when mDirectories is not initialized
added a condition to check if the overview state is not enabled and the first layout is not enabled to ensure proper handling of gesture end targets in
added package - info. java files for various Lucene packages to provide package - level documentation for various Lucene packages
added a line to set the visibility of the autoleveler panel in the AutoLevelerTopComponent to ensure the user interface reflects
added optimization handling in DirectUpdateHandler and DirectUpdateHandler2 to improve performance by allowing callbacks to be executed during the update process
updated CompressionMode and Deflater initialization to include a padding mechanism to ensure proper compression behavior by explicitly setting a dummy byte to zero
removed user _ data check from Shaderc. java to streamline data validation process
added a check for local metastore in retryingMetaStoreClient to ensure retries are handled correctly for local metastore scenarios
added error handling for timeout exceptions in HeliosSoloLogService to improve robustness by ignoring timeout exceptions
refactor methods in Subject. java to improve code readability and maintainability
added weak and strong reference type to the ConcurrentMap in AbstractSerializationService. java to ensure proper serialization behavior for weak and strong types
updated color distance calculations in HSSFPalette and added a test for findSimilar method in TestHSSFPalette to improve accuracy of color calculations and
chore ( regen ) : regenerate client with updated copyright year ( # 4382 )
danielwagnerhall for xpathelement. getattribute ( ` ` id'' )
added a flags parameter to the registerReceiver method across multiple classes to enable the receiver to be registered with specific flags
updated FFmpegTest to use Mockito's InvocationOnMock for mocking the runFunc method to improve test reliability by ensuring the method
added a previousInputStream parameter to the OggInputStream constructor and updated related logic to ensure proper resource management and prevent potential memory leaks
replace hardcoded string " Response was null " with a constant RESPONSE _ WAS _ NULL to improve maintainability and readability of failure messages
[ te ] migration ] fix anomaly migration failure detection
refactor ` BaseActivity ` to replace ` Toast. makeText ( ) ` with ` showToast ( ) ` in ` DetailActivity ` to improve
updated the method call in TracingFeignClient to include requestTemplate parameter to enhance the request creation process by incorporating the HTTP
added LDAP name validation and modified referral handling in LDAPCertStore. java to ensure proper handling of LDAP names and improve error handling
refactor retain logic into a separate retain method to improve code readability and maintainability
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click functionality to improve test clarity and ensure proper functionality of item
[ hotfix ] [ test ] use @ classrule in checkpointfailuremanageritcase
remove genericitemuiprovider ( no longer use )
added a ` selectedObject ` field and modified ` setSelected ` methods in ` SIPCommSelectorBox ` to allow retrieval and modification of the
added import statement for Isolated annotation and annotated the FileSystemPool class with @ Isolated to ensure proper accessibility of the FileSystemPool
added a line to set the server's bind address using HTTP _ INFO. bindAddress to ensure proper configuration of the server's binding
added conditional checks for grant types in the DynamicClientRegistrationEndpoint to improve token validity logic based on whether the client is hearted or implicit
added a ` CloverInstrumentationFilter ` class and modified the condition in ` SplitLogCounters. java ` to include ` @ Deprecated ` annotation
added support for the Smartmi Evaporative Humidifier in MiIoDevices. java and updated the ReadmeHelper. java
don't allow plausible to break block outside of cost _ inf
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari should log an error if the repository list be empty ( dlysnichenko )
updated the condition to check for missing values in IntHashSet to enhance the logic to correctly handle cases where missing values are present
added Serializable interface to RuleAdministratorImpl to ensure proper serialization of RuleAdministrator instances
` ` `''''''''''
updated references from " g3d / cube _ anim. g3dj " to " g3d / knight. g3dj
added error logging for updating the latest solidified block in Manager. java to improve stability by preventing errors during block updates
hbase - 25829 fix npe in execresult. get ( ) ( addendum )
added a method ` hasAccess ` to ` HttpServer ` to check if the remote user is authorized to access the page
replaced the ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror ` and refactored the ` CreateStubAction `
added a view binding for the internal link text in FileDetailSharingFragment to improve user experience by displaying relevant text based on whether the file
updated assertion to use Locale. ENGLISH for accuracy formatting to ensure consistent formatting across different locales
changed the condition check from ` Calendar. SATURDAY ` to ` Calendar. SATURDAY ` in ModelZooTest.
added functionality to hide the IME keyboard in AllAppsContainerView and LauncherAllAppsContainerView to improve user experience by preventing interaction during interactions
test : use embeddedeventstoreengine in test
refactor path handling in ` BsdFileStore ` and ` BsdNativeDispatcher ` to improve clarity and functionality of the ` getmnton
add test case for issue # 1599 ( # 1599 )
added support for optional arguments for the spawn command in SpawnCommand. java to enhance command functionality by allowing optional arguments for spawn commands
replaced the use of ` mContent. getDesiredWidth ( ) ` with ` getContentAreaWidth ( ) ` and introduced a constant ` MIN _
make graalcompilegraph ( ) final so that it don't affect test.
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter. java ` to ensure compatibility with Windows
added plugin check class names to the UpgradeCheckRegistry and modified the addColumnsToUpgradeTable method to improve error handling and ensure consistency in plugin
refactor Environment class to improve code readability and maintainability
added LuceneTestCase import and annotation to RecoveryAfterSoftCommitTest to address issue SOLR - 7421 related to test failure
updated file system separator handling in CodenameOneImplementation. java and removed unnecessary type check in HashtableContent. java to improve compatibility with different
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _
replaced deprecated ResourceAccessor with CompositeResourceAccessor in LiquibaseEntityResolver. java and modified XMLChangeLogSAXParser. java to enhance resource
added ` Security. setProperty ( " jdk. tls. disabledAlgorithms ", " " ) ` in ` ComHostnameVerifier. java `
replaced ` CxxDeps. EMPTY ` with ` CxxDeps. of ( ) ` in multiple files to simplify dependency management and improve code clarity
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` in ` StubJarTest.
removed unnecessary whitespace in Int2ObjectHashMap. java to improve code readability and maintain consistency
added a check for empty folder names before setting hint and text to improve user experience by providing clear feedback when the folder name is empty
updated clientDetailsService calls to include the " uaa " parameter in the loadClientByClientId method to ensure that the client is loaded with the
changed access modifier of methods from public to private in ShadowSQLiteDatabase to restrict access to these methods for better encapsulation
updated string concatenation to include closed state checks in AtomicCounter, AtomicLongPosition, and UnsafeBufferPosition to improve clarity and accuracy in value representation
refactor MimetypeIconUtil class to improve code readability and maintainability
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a test case for negated instanceof in UnnecessaryParenthesesTest. java and modified the condition in UnwrapParentheses.
added a ` built ` boolean and ` built ` boolean flags to the ` Location ` class and modified the instantiation logic to utilize reflection to improve
replaced deprecated ` Base64. encode ` methods with ` Base64Utils. encodeToUrlSafeString ` in ` TokenKeyEndpoint ` to
updated import statements and added ProjectComponent dependency in TranslatorManagerHelper. java to ensure proper handling of project components during generation
rename the annotation from ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity regarding the annotation ' s purpose
added a null check for the result object in ObjectIdentityImpl. java to ensure that the method returns a non - null value to avoid potential
refactor ` setUpRevampedTweet ` and ` setUpRevampedTweet ` methods to improve clarity and maintainability of the code
added conditional logic to display verified text based on user theme settings to enhance user experience by displaying the correct verified text based on user theme settings
changed the visibility of the ` timeDiffFromServer ` variable and its initialization in ` AbucoinsDigest ` to enhance encapsulation and prevent
camel - mongo - spring - boot : enable autowire on the mongo connection
[ geot - 6013 ] [ geot - 6013 ] fix npe in dataaccessmappingfeatureiterator
throw prestoexception for corrupted column statistic when altering a partition
added a call to UserGroupInformation. isSecurityEnabled ( ) to enable security checks for user authentication
refactor ConnectivityReceiver, TerminalKeyListener, AbsTransport, and EastAsianWidth classes to improve code organization and maintainability
escape html for contact email in geoserver home page
add modulemanagerimpl. enrichingreflectionswithsubsystems ( ) method in terasologyengine
add assertion to make sure we have the correct number of feature
don't use string. startswith ( ` ` < math'' )
added null checks for debug logging and trace logging in SingleNodeKafkaResumeStrategy. java to avoid potential NullPointerExceptions during Kafka operations
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat. ACTION _ SET _ PLAYBACK _ SPEED
added handling for " automatic " separation in IgnitionConfigurationHandler and updated related methods in AxialStage and FlightConfigurationID to improve
tika - 2852 -- improve mime type detection, and add unit test
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest. java to mark the test as ignored due to non - deterministic
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by encapsulating lock file creation logic
updated sync interval constants from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added multiple sync interval constants
added a check to return null if the username equals " FEDERATION _ USER " to ensure proper handling of federated users
don't check if a truffleobject be a truffleobject in executemethodnode.
removed unnecessary ` Collectors. toList ( ) ` usage in ` JakartaClientShutdownWithServerWebAppTest. java ` to streamline
don't log access event if it's deny
refactor Collection and Map classes to improve code readability and maintainability
removed unused import of Version in CreateIndexTask. java to streamline code by eliminating unnecessary dependencies
added logic to handle missing primary keys in Oracle and AbstractDb2Database to ensure proper handling of missing primary keys in the database schema
updated exception handling in MsckOperation. java and added a new test case in TestMSCKRepairOnAcid. java to improve
[ flink - 26400 ] [ kafka ] retry kafka transaction commit
add receipthandle processor to the ForwardMessageToDLQActivity to enable handling of receipt handles in the activity
added a list of services and modified DockerComposeContainer to handle empty or null service cases to improve flexibility in DockerComposeContainer by allowing
use copyset ( ) in export and StructContextDecorator classes to improve code readability and maintainability
replaced HtmlCleaner with a direct XML return statement in FeedParser. java to improve error handling and simplify XML processing
modified the condition to check mAppsCustomizeContent instead of mAppsCustomizePagedView and adjusted the method for retrieving custom pages to

added a new file ` bug4150029. java ` to create temporary directories to ensure that the system's temporary directory is defined
added functionality to track and manage Spark configuration updates to improve resource management and prevent potential memory leaks
added a ` getLongPressIndicator ` method to ` AppIcon `, ` AppIconMenuItem `, and ` Launchable ` classes to provide
added checks for empty polygons in WKBWriter and updated related tests in WKBWriterTest to ensure proper handling of empty polygons and improve test
refactor UnflavoredBuildTarget to use an interner for better memory management to improve performance and reduce potential memory leaks
added a new file MultiplyByMaxInt. java with a method to calculate the maximum value of a given integer to facilitate the
added a check to enable drawer indicator based on the current file's status to improve user experience by enabling drawer indicators when the current file
removed unused imports from TestRAMDirectory. java to clean up the code and improve maintainability
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton. java ` and ` Operations. java ` to simplify code and improve performance
drools - 2250 : improve error message in dmnevaluatorcompiler
replaced instances of " @ ContainedBy ( AC. class ) " with " @ Repeatable ( AC. class ) " in multiple
updated message formatting in AbstractController. java to include the duration of sending files to improve clarity and debugging by providing more context on file sending duration
updated class name retrieval and access check in OpenMBeanAttributeInfoSupport. java to improve security by ensuring proper package access validation
patch by jbellis ; review by jbellis for cassandra - 174
updated the calculation of freeSize in StoreDirect. java to ensure proper handling of size adjustments
add touch event handling in AnyKeyboardView and AnyKeyboardViewBase to ensure touches are only enabled when the last finger is up
replaced ` SslContextFactory ` with ` SslContextFactory. Server ` in multiple server classes to improve clarity and consistency in SSL context initialization
removed the use of PrivilegedSocket in PG _ Stream. java to simplify connection creation by directly using the connection object
refactor InputTest class to improve code readability to enhance maintainability and ease of understanding
updated ` finishRecentsAnimationOnTasksAppeared ` method to accept a ` onFinishComplete ` to ensure proper handling of recents
updated import statements and refactored location marker removal logic in NearbyMapFragment. java to improve code clarity and ensure proper handling of
updated client retrieval methods in ClientAdminEndpoints and added mocking in ClientAdminEndpointsTests to enhance functionality by allowing retrieval of client details
updated SQL query formatting in SqlSourceBuilderTest. java to ensure compatibility with different XML formats
http : / / issues. apache. org / jira / browse / amq - 4068
added a test case to verify handling of UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown key scenarios
updated filtering logic in ShenyuTrieRuleListener. java and added return statements in ZookeeperSyncDataService. java to improve code
* spatialcontrol now use a clone for the control dir and light name.
added @ SuppressWarnings ( " unusedAssignment " ) and modified conditions for hidingStacks in StdErrLog. java to improve code clarity and
added logging for ServletContextEvent publishing and modified method calls in HttpSessionEventPublisher to improve debugging capabilities and ensure proper context handling
added a check to throw an exception if the syntax of CREATE CQ statement has changed from v0. 14 to ensure proper error handling for
[ hotfix ] [ doc ] fix typo in flinkiotdbsink
add counter for custom simplifying of node in canonicalizer
updated the method call to use a context parameter for retrieving the file type icon to ensure correct context is used when retrieving the file icon
updated the ` readIdentifierWithSchema ( ) ` method to use ` schema. getName ( ) ` instead of ` schema. getName ( )
[ bigquery ] add support for ` ` time'' field in bigquery table
added implementation of ` findViewWithTag ` in ` ShadowView ` and ` ShadowViewGroup ` classes to ensure proper retrieval of views by their
replace raw types with generics in multiple Java files to improve type safety and reduce potential runtime errors
removed unused imports from IndexTool and MetaDataClient to streamline code and improve maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated related logic in SpringBootDocBuildTemplate and JavaClassUtil to
don't try to extract jar file from classpath if it's not a jar
updated CUDA _ R _ *, CUDA _ *, CUDA _ *, CUDA _ *, CUDA _ *, CUDA _ *, CUDA
refactor ResourceLoader class to consolidate resource loading logic to improve code maintainability and reduce redundancy
use simpleattachablematerialdata in blockredstoneorch. getattachedface ( glowblock me )
added support for VARBINARY in RelToStageConverter to enhance data handling for VARBINARY types
removed unused import of DateHelper from NoteAdapter. java to streamline code by eliminating unnecessary dependencies
updated message conditions for backup loading and improved error messaging in Captions. java to enhance user experience by providing clearer feedback on backup failures
mow - 193 fix for style. position. absolute
removed unnecessary file deletion logic in ShadowParcelFileDescriptor. java to simplify the file creation process and improve error handling
int - 190 remove useless call to securitycontextholder. poll ( )
rename the rule from " optimizations " to " controversial " in BooleanInversionTest. java to clarify the purpose of the rule
canonicalization of xor neutral reference to y = = x
remove unused constant STRING _ ARRAY in TypeFactory. java to streamline code and improve maintainability
added ` hideIme ( ) ` method to ` AllAppsContainerView ` and refactored logging in ` LauncherAllAppsContainerView ` to
fix blockstatecontainer. setbits to force bit density to fix network issue
updated assertions in TimelineMetricCacheSizingTest to include expected values to improve clarity and accuracy of test cases
add gl _ max _ texture _ size to the playerusagesnooper patch. patch by stu hood ; review by jbellis
[ java ] don't stop log recording in case of failure.
added a check to reset startPosn if isInTransform is true to ensure proper initialization of startPosn based on transformation state
replace the method ` isStarTreeDisabled ( _ queryContext ) ` with ` isSkipStarTree ( ) ` across multiple classes to improve
added a mechanism to lock the nearby view before refreshing the progress bar to improve user experience by preventing unnecessary updates when the nearby view is
add maptransformer. of ( ) and maptransformer. bimap ( ).
rename EmeddedObjects and EmbeddedObjects classes to improve clarity and consistency in naming conventions
added support for loading launcher widget information in ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` to enhance functionality by allowing retrieval of loaded widget
updated StageSelector and StageAction classes to implement StateChangeListener instead of ChangeEvent to improve consistency in event handling across components
added methods to retrieve calling process ID and UID in ShadowBinder to enhance functionality by allowing retrieval and resetting of process IDs and UID
refactor ExpectationFailure class to use Guava's Objects utility to improve code maintainability and leverage existing utility methods
removed warning log for unsupported operations in BitcoinSerializer to streamline error handling and improve code clarity
updated calculations for new dimensions in ImageReplacedElement. java to ensure proper scaling based on new dimensions
added handling for HTML escape characters in CoreMarkdownNodeRenderer and MarkdownWriter to ensure proper handling of special characters in Markdown rendering
added a neutral button to the SharePasswordDialogFragment and modified the setPassword method to accept a boolean parameter to enhance user experience by providing a
refactor method calls in IoUtil. java to use reflection to improve flexibility and maintainability of the code
removed ` public ` access modifier from several methods in ` AbstractAssert _ describedAs _ printed _ to _ console _ Test. java ` to
added support for slider AM keytab configuration in LlapOptionsProcessor. java to enhance user experience by providing clearer guidance on setting default settings for
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation handling to enhance the functionality of the
added functionality to bind complete runs after loading the workspace to ensure that shortcuts are only added when the workspace is loaded
[ iotdb - 4523 ] fix npe in node path operator
renamed ` error ` to ` messageType ` and updated related methods in ` IssueInterface ` and ` ValidationReport ` to improve clarity and consistency in
added a safe provider name retrieval method in RSAClientKeyExchange. java to improve error handling and provide clearer output when the cipher provider is unavailable
[ hotfix ] rename ` ` dynamicconfiguration'' to ` ` flinkconfiguration '
change log level from WARNING to OFF in CCJSqlParserUtil. java to disable logging for improved performance
added a condition to append a newline to the output if the index does not match the expected size to improve output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public to allow access to these constants from outside the class
removed the @ Ignore annotation from CovariantOverrideTest. java to indicate that the method is not implemented in covariant scenarios
refactor curly ( ) method to use Qtype instead of Node to improve code readability and maintainability
camel - 16400 : camel - core - reloadstrategy now support to load route from xml file.
added space minimum and maximum settings for the X - axis in the ScatterChart to improve the visual appearance of the scatter chart
modified SQL interval expression formatting in ExpressionStringBuilder. java to enhance clarity and consistency in SQL expression generation
added shouldPreserveDataStateOnReapply method to multiple classes to ensure data state is preserved during animations
added a check for the UTF8 key in the ClassLoader's getSystemResource method to ensure proper handling of missing UTF8 keys and prevent runtime
updated print statements in TestReproduceMessage and modified annotations in LuceneTestCase to improve error handling and clarify the use of MixWithSuiteName for
added logging for long - press events on AllApps items in the launcher to improve user interaction tracking for long - press actions
added null check for ` log ` in ` StoreWAL. java ` and created a new test class ` Issue112Test. java ` to
added a condition to check if the sector preset is null before displaying land information to ensure that land information is only displayed when a valid sector preset
[ hotfix ] [ table - planner - blink ] fix compilation error
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
improve error message when random selection ben't allow
remove temporarycache. removelastupdatetime ( ) and remove it from cacheablepacket.
hide the create sql view container and webmapserver in NewLayerPage. java to improve user interface by ensuring proper visibility of components
initialize Availability _ availability to UNAVAILABLE to ensure availability status accurately reflects the availability state
added checks for sync finishing in multiple classes to ensure proper handling of pbft commits based on peer state
fix : update gapic - generator - java version to 2.1. 0 ( # 48 )
changed the type of ` _ freeSpaceReclaimDisabled ` and ` _ powerSavingModeEnable ` from ` boolean ` to ` int
changed access modifiers from public to static for KDC _ OPT _ PROXIABLE and KDC _ OPT _ FORWARDABLE in KDCO
updated the initialization of the JsonWriter instance and set the writer variable to null to ensure proper initialization and prevent potential NullPointerExceptions
renamed ` mentions ` to ` mentions ` and ` mentionsQuery ` in ` ProfilePager. java ` to improve clarity and consistency in naming conventions
renamed the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider. java ` to improve clarity and consistency in method naming
added a method ` valueFromClassConstant ` to retrieve FQN < dot > constant values from a ` Configuration ` class to ensure that
added error handling for initialization in KafkaService to improve robustness by logging errors during service initialization
replace ` Sets. newHashSet ( " build. prop " ) ` with ` ImmutableSet. of ( " usr / share / zoneinfo / tz
use'channelname'instead of'channel'for defaultmessageendpoint.
added functionality to retrieve and store the " contents " field in HTMLDocument to enhance metadata handling for indexed documents
updated SDK version check from ` S ` to ` R ` to ensure compatibility with the latest Android version
refactor address assignment logic in MemcachedSessionDataMapFactory to improve clarity and maintainability of the code
replaced ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` class ( ) ` in ` CorrespondenceSubclassToFactoryCall
refactor Builder class to improve code readability and maintainability
make isbn to bibtex fetcher more robust
polyglot api : set keepalive time to 10 second
added null check for the text before firing data change listener to prevent potential NullPointerException when the text is null
update sentimentmodel to use rnnutils. paramstovector ( )
added line trimming in SuffixURLFilter. java to ensure consistent processing of URLs without leading or trailing spaces
added a check to return early if the player is in the godmode to optimize performance by avoiding unnecessary processing when inGodmode is
don't register and unregister popups in checkboxes / text dialog
updated constructor parameters in LinkedHashMapCache and BoundedLinkedHashMap constructors to improve clarity and consistency in constructor usage
corrected formatting in ChannelEndPoint. java to improve code readability and maintain consistency
added null check for keyIndex in FixAcidKeyIndex and refactored KeyIndexBuilder instantiation in various classes to improve robustness by
updated exception handling in DirectUpdateHandler2. java to use Locale. ROOT to ensure consistent error reporting across different locales
add a storecheckguard input to the canonicalizer phase so that it can be use by the compiler.
fix a bug where exception dispatch block be not reachable
added ` getClassificationDisagreement ` method implementations in ` AbstractCloud `, ` DBCloud `, and ` ViewFilter ` classes to
replaced ` BuildTarget. copyOf ( buildTarget ) ` with direct assignment in ` AppleLibraryDescription ` and ` AbstractDependencyFileEntry ` to simplify
refactor SqlRunner class to improve code readability to enhance maintainability and ease of understanding
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
refactor ` knownApis ` to ` knownSdks ` and update related methods to improve clarity and maintainability of the code
use confidenceprogressindicator instead of progressindicator for create offer
updated header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 to ensure correct handling of UMS
modified iterateBpt method to accept a forceIterate parameter to enhance flexibility in block indexing during blueprint rendering
added constants for message types and modified onCreateViewHolder method to handle different view types to improve code readability and maintainability by using defined constants for message
fix linux and osx library loading . close # 155
fix for sbarq and sinv in grammaticalreations
removed the canvas parameter from the insert method and added a new method for writing pack entries to simplify the method signature and improve code readability
refactor RefactorModule to use a default apply method and simplify stream processing to enhance code readability and maintainability by centralizing the apply logic
added methods to retrieve child elements by their names in XML to enhance functionality by allowing retrieval of child elements by their names
added " Content - Charset " header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of
updated SystemUiController to use @ SystemUiControllerFlags and refactored state updates to use IntDef for flags to improve code clarity and
removed the private ClientConfigurationService from IntrospectingTokenService to streamline the code by eliminating unnecessary dependencies
updated the exception message format in HiveRecordSet. java to include additional context for debugging purposes
removed the ownerId variable from NodeEntry. java to streamline the code by eliminating unnecessary dependencies
rename backupsnapshotafertakingsnapshot to backupsnapshotaftertakingsnapshot
added a score calculation to the merge method in TextFragment. java to ensure that the score does not exceed the defined score
removed the private digester variable from Md4PasswordEncoder to streamline the codebase by eliminating unnecessary dependencies
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish. java to ensure that the maximum unimpro
added a check to return early if currently opened editors are empty to improve performance by avoiding unnecessary processing when no editors are available
added verification methods to BDDMockito for expected behaviors to enhance test coverage for expected behaviors that should not be invoked with the verification system
replaced the use of ` Thread. currentThread ( ). getContextClassLoader ( ) ` with ` PathScanner. class. getClassLoader ( ) ` to
refactor sayHi2 method to return CompletableFuture < String > and update related tests to improve asynchronous handling of the ` sayHi2 ` method
fix flakiness in abstractsplitbraintest
added null check for logout configuration in ` DefaultLoginPageConfigurer ` and ` ServerHttpSecurity ` to ensure logout page is only created when logout
giac : use degree ( ) instead of degree ( )
added logging functionality to DockerComposeContainer to improve monitoring and debugging of Docker processes
modified the formatting of the testMapping method in StandardJavaTypeMappingTest. java to enhance code readability and maintain consistency in method formatting
removed unused imports from AmbariMetaInfoTest. java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to ` ThrowingSupplier ` to facilitate the retrieval of a ` ThrowingSupplier ` from
replaced a break statement with a return statement in ConsoleActivity. java to ensure proper flow control and avoid potential null pointer exceptions
added handling for Buffer in VertxPlatformHttpSupport and created a test for text content post in VertxPlatformHttpEngineTest to ensure proper
added platform - specific path handling in MorePaths and updated test assertions in AarWithLibsIntegrationTest to improve compatibility with different operating systems
added a null check for authorizationContext parameters before processing to avoid potential NullPointerExceptions when accessing parameters
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` in ` NativeLibraries. java ` to improve error handling by throwing exceptions
updated SDK version from " 4611349 " to " 4514284 " and added unit tests for the isStopped method in ShadowTextTo
queuetransactionlog : add new key to encapsulate transaction log key
added functionality to enable SQL without profile in JdbcEnvironmentProperties and JdbcEnvironmentRepository to improve flexibility in managing SQL settings
added a try - finally block around the write method call in ConnectHandler. java to ensure proper resource management and prevent potential memory leaks
fix ( modloader ) : use eventgenerator. fromfunction instead of supplier
updated date formatting to use a calendar variable in DateUtils. java and modified assertion in FontParsersTest. java to improve accuracy in date formatting
updated the ` getThreadInfo ` method to include a ` STACK _ TRACE _ DEPTH ` parameter in ` CachedThreadStatesGaugeSet `
added a protected method ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to ensure
updated the job ID from " FastAsyncWorldEdit - P2 - V6 / " to " FastAsyncWorldEdit - 1.17 /
modified file existence checks and added a null check for the input path in SegmentGeneratorConfig. java to improve robustness and prevent potential NullPointerException
added methods to calculate normal vectors in ObjUtils and TriangulationHelper to improve accuracy and maintainability of the code
updated JdbcAuditService to use identity _ zone _ id instead of identity _ zone to improve accuracy in retrieving audit events based on the identity zone
refactor SpanCollector class to improve code readability to enhance maintainability and ease of understanding
added a null check for the getCurrSession ( ) method in AuthorizationFilter. java to ensure that the session manager is not null before proceed
refactor TransactionIsolationLevel class to improve code readability and maintainability
rename method from printLVgroups to printLogicalVolumegroups in OshiController. java to clarify the purpose of the method
set the current thread's name to " Forwarding to " slot. getRemoteURL ( ) " to ensure proper identification of the current
refactor CookieManager class to improve code readability and maintainability
replaced a loop that adds a component key to an ArrayList in LauncherExtension. java to simplify the code and improve performance by directly returning an empty
added a new OverviewToAllAppsTouchController to the list to enhance user experience by integrating OverviewToAllAppsTouchController for
refactor scaleHotseatWithWorkspace method to getHotseatScaleAndTranslation in LauncherState and WorkspaceStateTransitionAnimation to improve accuracy in
added a check for " org. mockito. internal. junit. JUnitRule " in DefaultStackTraceCleaner to ensure that stack trace elements
[ java ] : replace directbuffer. hasarray ( ) with directbuffer. isdirect ( ).
added a private BalanceListener instance and modified balance listener handling to improve balance listener management and ensure proper cleanup of balance listeners
modified color conversion logic in RealisticRenderer to handle edge mode to ensure proper color assignment based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor. java to avoid potential NullPointerExceptions during execution
remove patternutil. checkpattern ( ) from gl200protocoldecoder.
refactor playback event timing logic in FullDetailsActivity. java to improve accuracy of playback events during episodes
added handling for elliptic nodes in SpanishXMLTreeReader. java to ensure tokens match lemmas and improve error handling for
added a condition to clear the DC " language " from the item if it's empty to ensure that the item defaults to " iso "
updated the ` overrideScheme ` assignment logic in ` ReactiveLoadBalancerClientFilter ` and added a test in ` ReactiveLoadBalancerClientFilterTests
( chore ) camel - defaultmessagestore : don't duplicate bytebuffer
changed the access modifier of the fullFilePathFromClassName method from private to package - private to allow access to the fullFilePathFromClassName from other
refactor the return statement in ShadowBackupManagerTest to use Correspondence. from to improve code readability and maintainability
corrected the spelling of " Locale " to " Currency " in multiple files to ensure consistency and accuracy in terminology
removed redundant null check for redeemData in LocalTransactionSigner. java to simplify the conditional logic for better readability
add forge client support to render terrain texture
added a return statement in TxCacheDB. java to prevent further processing during transaction processing
pr - - - - - - - - - -
refactor FastDictionary class to improve performance to optimize data processing efficiency
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4617
updated FlightEvent types for GROUND _ HIT and SIMULATION _ END in FlightEventsTest. java to improve event
[ beam ] upgrade grpc to v1p26p0
replaced target. addNamespaceDeclaration ( namespace. prefix, namespace. namespaceUri ) with newElement. addNamespaceDeclaration ( namespace. prefix, namespace
instructorfeedbackresultspagedata : add displayablefsname and courseid to profile picture link
added a shortRules list and modified defaultRules initialization in DefaultPasswordValidator to allow dynamic rules based on the password length
simonstewart : add a command to retriving remote control logs and screenshots to the selenium server
removed unused JUnit import and annotation from ProxyClassSerializationTest. java to streamline test code by eliminating unnecessary dependencies
updated scale and format settings for thumbnail dimensions in DLNAMediaInfo. java to ensure proper scaling and formatting of thumbnail dimensions
remove speculativelocationphase. replacespeculativelocationphase call.
added a condition to check if the AUTHENTICATION _ MANAGER bean is not already registered to ensure that multiple authentication manager registrations are handled correctly
added support for the X - Forwarded - For header in the ForwardedRequestCustomizer class to ensure proper handling of X - Forwarded -
added a call to sb. setLength ( 0 ) in ConsoleReader. java to ensure proper resource management and prevent potential memory leaks
changed access modifiers of allowedRoles and disallowedRoles lists from private to protected to allow subclasses to access these list
update version numbers in OpenIDE - Module - Specification - Version files to ensure compatibility with the latest version of OpenIDE
hbase - 19801 add hbase. server. netty. tls. wrapsize to hbase - server
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit's Assert. assertEquals and Assert. fail annotations to improve test readability and ensure proper exception handling
added protocol binding validation in OpenSamlAuthenticationRequestFactory and created corresponding test class to ensure the correct protocol binding is used for authentication requests
refactor SurfaceControl transaction handling in DepthController. java to improve code clarity and ensure proper transaction application
update version check from " main " to " 2.0. x " in AsciidoctorConventions. java to ensure compatibility with the
hbase - 25836 bulk load operation should be create instead of write ( jesus camacho rodriguez, review
updated subList logic in TsFileManagement. java and modified measurementSchemas in MergeTaskTest. java to ensure correct handling of unseq compaction
camel - 7999 : fileinputstream should return an inputstream if the file be a file
added a login method to DefaultShardManager and modified its invocation in DefaultShardManagerBuilder to ensure proper handling of login credentials in the shard manager
fixed typo in DeleteGlobalRef method call to improve code readability and maintain consistency
changed the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to align the database schema with the new
added a check for completion status before terminating the exchange to ensure that the exchange is terminated only when it is marked
don't show comment if the user don't have a giver
added security checks for linked profiles in BMPImageReader. java to enhance security by ensuring only valid linked profiles are processed
updated the calculation of the world coordinates in setSimpleCuboid method calls to ensure accurate positioning of world coordinates within the specified range
added a wait message in PMDOpenTool and modified the actionPerformed method to run pmdCPD asynchronously to improve user experience by ensuring
refactor grid size handling in StdGridFragment and JumplistPopup to improve code readability and maintainability
changed return values from false to true in ContributionsListFragment. java to ensure that the contributions list is updated correctly
added a test case for distinct prefix filtering in DistinctPrefixFilterIT. java and modified filter logic in BaseResultIterators. java to
added unit test for acrobat checkbox group properties in PDButtonTest. java to ensure correct behavior of checkbox properties in the acrobat
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation to enable retrieval of the last modified date of a file
added a condition to check for the existence of " metaTable " in the tableProps to ensure that the ICEbergStorageHandler correctly handles
don't show currency other than the default currency in cash deposit form
changed catch block from IOException to Throwable in WriteFlusher. java to improve error handling by catching all potential exceptions
added an ` mStartedEnterAnimation ` boolean and modified item range notification logic to ensure proper handling of animation state during task updates
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the ` activeKeyId ` property in the
rename ` send a text mail ` to ` sendAttachmentMessageActionLabel ` and ` sendAttachmentMessageActionDescription ` to improve clarity of action
changed the ` isActive ` variable from non - volatile to volatile to ensure thread - safe access to the ` isActive ` variable
updated method names from ` isDesc ( ) ` to ` isAsc ( ) ` in ` SelectionPartiallyOrderedByDescOperation. java
cast stringbuilder to charsequence second part - this be need in geogebraweb because otherwise there be a runtime exception - so with geogebra desktop , i have not do anything
added a condition to check if the app name is equal to " ownCloud " in DisplayUtils. java to ensure that the app name is
hbase. rootdir. perms should be configurable in hbase - site. xml
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange. java ` and
refactor Instant class for improved readability to enhance maintainability and facilitate future updates
changed the return type of getStateFormat from int to String across multiple files to improve clarity and consistency in representing the state format
updated logging format in CentralAuthenticationServiceImpl. java and modified class type checks in AbstractTicket. java to improve clarity of logged messages and ensure proper
added support for IllegalArgumentException in profile exception handling to enhance error handling by supporting additional exception types
removed unnecessary check for file extension in AbstractFileResourceSet. java to simplify the condition for better readability and maintainability
add pathtranslator to pluginparameterexpressionevaluator so it can be use by maven.
[ beam ] move ByteStringcoder to beam - sdk - extensions
updated JpaQueryParsingToken instantiation to include a boolean parameter and added a test for signedNumericLiteral to enhance query parsing functionality by allowing numeric literals
updated LaunchLugHandler and RailGuideHandler to include instance count parameter to enhance functionality by allowing dynamic instance counts
removed the getNonceFactory method from BitmexStreamingExchange to simplify the codebase by eliminating unnecessary method
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] use default timeout value in driver conductor test.
changed the initialization of loaded classes from true to false to ensure that classes are only loaded when necessary
added focus handling for the search field in FullTextSearchPanel to improve user experience by ensuring focus is properly managed
refactor NioParams initialization in TlsConnectionLogging. java to improve code readability and maintainability
removed an assertion for retrieving a random double value from the ResultSet to simplify the test by eliminating unnecessary assertions
updated assertion message formatting in TestSolrConfigHandler. java to improve clarity of failure messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests. java ` to align with
updated drawable density handling in FilterResourcesStep. java to improve clarity and accuracy of density pattern matching
added a buttonUIID variable and refactored UIID updates to use it to improve clarity and maintainability of component updates
removed the check for display densityDpi in RecentsAnimationDeviceState. java to simplify the condition for displaying display information
bug in gc _ array _ copy _ with _ different _ length _ constant
added import for LuceneTestCase. AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to indicate that the test
fixed - rexecutorservice. schedule ( ) method throw npe
simplified the condition for updating credentials in FileDownloader and FileUploader classes to improve code readability and maintainability
refactor scanner handling in Compactor. java to improve null safety to ensure proper resource management and prevent potential NullPointerExceptions
replaced direct calls to ` get ( ) ` with ` getOrDefault ( ) ` in ` NetMetrics. java ` to improve performance by avoiding
added nonce verification in TokenMvcMockTests to ensure that the nonce is correctly retrieved from the token
updated import statements in multiple Java files to improve code clarity and maintainability
added width and height settings for formLayeredPane in mmm Form. java to ensure proper layout management for the form layered pane
removed unused imports and added a method to calculate the Y - coordinate based on owner's height to improve code clarity and ensure proper height calculations
fix : close the database if the database be not connect
replaced references to ` System. getProperty ` with ` Platform. DOCKER _ COMMAND ` in ` DockerTestUtils. java ` to improve consistency and
added null check for input stream in TestIsartorValidationFromClasspath. java to enhance robustness by preventing potential NullPointerExceptions during input
updated drawLeaveBehind method to accept a color parameter to allow customization of folder leave - behind colors
show a clear error message if the plugin don't work properly with Canary versions of Android Studio
fix npe when identityproxy table name be null
removed modulePersistEnable and modulePersistDisable lists from StartArgs. java to streamline the configuration by eliminating unused options
updated conditional check for argument length in GeminiMarketDataService. java to ensure correct argument validation for last trade time
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction. java to ensure predictable iteration order for the questions map
add test case to verify that
[ entesb - 10642 ] remove excessive jsps from authcheckfilter
fix race condition in scheduler. postdelayed ( )
changed method signatures from String [ ] to String.. args in multiple classes to improve method flexibility by allowing varargs arguments
refactor XMLParser to handle end - of - stream conditions to improve error handling by returning END _ TAG when the input stream is closed
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest. java ` to ensure that overflow pages do
set the pivot X and Y values for the arrow in DeepShortcutsContainer to ensure proper alignment of the arrow when the icon is above the
don't print stacktraces in exception catch block
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter to enhance functionality by allowing thumbnail updates based on the refresh state
pdfbox - 4071 : use class. getname ( ) instead of org. apache. pdfbox. ExtractTTFFonts
updated EmailFormatSpecifier and HostnameFormatSpecifier to include validation for valid domain names to improve error handling and provide clearer feedback on invalid domain names
removed redundant calls to ` DrawerActivity. this ` and ` AccountUtils. getCurrentOwnCloudAccount ( ) ` across multiple activities to simplify code
updated the ` SizeBasedDocIdIterator ` and ` FilterBlockDocIdSet ` classes to use ` _ maxDocId ` instead of
added methods to prompt to open files based on file availability to enhance user experience by allowing users to choose between valid and non - existent file names
updated sPageSleepDelay and refactored page count updates in AppsCustomizePagedView and AppsCustomizeTabHost to improve respons
refactor FlightConfiguration to use InstanceMap for managing active instances to improve code clarity and maintainability by centralizing component update logic
( chore ) camel - micrometer : use direct endpoint instead of seda endpoint
updated DateTimeFormatter instantiation to use Locale. ROOT to ensure consistent formatting across different locales
dspaceobjectconverter don't return metadata for non - admin dspace
added a test method ` testMissingRequired ` to ` TestStarTreeConfig ` to ensure that ` StarTreeConfig ` correctly handles cases where
camel - 16400 : camel - jbang - add support for building static and dynamic recipient list
refactor InlineLayoutBox and HoverListener to improve handling of child boxes to enhance performance and maintainability of the code
refactor AuthenticatorActivity to use ServiceConnection and OperationsService for improved service management to enhance reliability and maintainability of the authentication process
