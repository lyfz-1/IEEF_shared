socketappender now set remote host and port correctly.
refactor prompt header handling in BasicAuthPlugin. java to improve readability and maintainability of the code
updated message length retrieval in ManyToOneRingBuffer. java to ensure consistency in message alignment
cloudstack - 7092 : fix npe in cs - vmcapacityimpl when vmdetailcpu be null
added flags property and methods to set and get Anti alias in ShadowPaint to enable flexible handling of Anti alias settings in the Paint class
updated title in MassSetFieldsDialog to use Localization to improve localization support for managing field names and content
modified the bug reporting logic in DetectorsTest. java to check for Eclipse before reporting to improve error handling and ensure that the bug reporting
don't use scheme for digest auth when auth scheme = ` `'' '
added a ` RemoteInputListener ` interface and modified the ` RemoteInput ` constructor to handle connection and disconnection events to improve the handling of
refactor conditionals in OrcEncodedDataReader. java to improve code readability and maintainability
[ homeconnect ] only filter thing that be not enabled
added null check before removing and adding policies in AuthorizeManager to avoid potential NullPointerExceptions when manipulating policies
updated date formatting assertions in multiple test files to use ` hPM ` instead of ` PM ` to ensure consistency in date formatting across different Java
added JSON serialization of " context " and " dagInfo " in TezTask. java to enhance data representation for better debugging and tracking
improve heap dump time calculation by introducing headerTime and tagTime variables to enhance accuracy of heap dump timestamps
replaced RxJava2Tasks with CommonsApplication for upload count retrieval to simplify code and improve maintainability by centralizing upload count logic
remove unnecessary check on mvstore lock mode in mvtable. getlockmode ( )
[ hotfix ] fix commitlog. commitlog ( ) when offset size be small than maxoffset.
added a check to prevent opening folders from being marked as open and associated folders to ensure that only valid folder instances are recorded in the launcher
added a new test method ` testSortOrder ` to ` PGPropertyTest. java ` to ensure that property names are in ascending order for
remove warning for student who give a list of point that this student gives to others
refactor ` supportsDrop ` and ` getUninstallTarget ` methods to use ` ItemInfo ` instead of ` Object ` to improve type safety and
updated assertion message in RequestBuilderTest to include an isIn method to enhance clarity of error messages for better debugging
updated NearbyActivity to replace " RetainedFragment " with " NearbyListFragment " to improve clarity and consistency in fragment management
hhh - 14611 fix a bug in the flatprofilecontainerfree constructor.
[ te ] send _ zero _ anomaly _ email be a boolean field in emailconfiguration to allow zero anomal email address to be send
[ flink - 20948 ] [ kafka ] fix flinkkafkaconsumerbase # open method not invoke with restore state
removed getUser and getGeofence methods from DataManager to streamline the code by eliminating unused methods
modified the constructor of BlockingResponseListener to accept a maxLength parameter to enhance flexibility in handling large request data
[ mcast ] remove the thread name from the memberadded broadcast method. ( # 2451 )
added logging for snapshot operations and ensured closure of the reader to improve debugging and resource management during snapshot processing
updated the query parameter from " go = bears " to " bears " in the LoginSAMLAuthenticationFailureHandlerTest to ensure the
refactored test cases in ConfigMetadataProviderTest. java to improve code clarity and maintainability
removed unused imports from ListFragment. java and updated method signatures in SnoozeActivity. java to streamline imports and improve code clarity
added a private static class AcceptAllFilter to streamline directory stream handling to improve code clarity and maintainability by encapsulating filter logic
updated JdbcTestDataSet. java to improve test coverage and maintainability
make hotspotjvmciruntime. lookuptype ( string, class member ) throw classnotfoundexception
added validation for Docker image names in GenericContainer. java and created corresponding tests in DockerImageNameTest. java to ensure valid Docker image names
updated login failure messages to reflect incorrect credentials to enhance user experience by providing clearer feedback on login failures
added setautofocus ( " autofocus " ) to multiple form classes to ensure that focus is properly set during form execution
added unit test for zone - specific SAML properties in SamlIDPRefreshMockMvcTests. java to ensure that the SAML properties are correctly
added checks for non - empty list and non - empty versions in ComparableVersion. java and updated corresponding test cases in ComparableVersionTest. java
replaced topLeftMode and topRightMode methods with bottomRightMode and bottomRightMode methods, and updated return statements to ensure proper handling of
updated imports and package structure for ParallelUniverse and ParallelUniverseTest to improve organization and accessibility of the Robolectric test
replace direct type change with a constant method call in LocalCacheFactory and NodeFactory to improve code readability and maintainability by using a named method
change fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills. java to improve visual appearance by using a
added functionality to draw self - loops in the ProcessingPreview class to enhance visual representation of self - loops in the graph
replace allow _ tvm _ solidity _ version _ 5 _ 10 with allow _ 059
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
set the translation of the drag handle indicator to zero to ensure the drag handle indicator is positioned correctly during transitions
remove some unneeded debug log.
updated the description of optimization settings in HiveConf. java to clarify that filters may be pushed down in the operator tree during query optimization
added an assumption to skip tests on the build server to address issues related to build server issues
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser. java to enhance OSGi bundle debugging capabilities
fix lock time update in async runnable
updated transaction handling logic to improve performance and reliability of transactions
replaced CustomFieldBehavior with ExcludeFromRuleKey in GenruleBuildable. java to exclude genrule executions that are not relevant to artifact
simonstewart : allow the firefox custom profile launcher to work on window.
avoid concurrentmodificationexception in phitableimpl # addcolumnfamily ( string, list )
[ hotfix ] [ python ] fix rawtypes warning in hadoopoutputcollector
phoenix - 5957 : add miss column and index from parent table for map table
update student entity only if they exist in the same google account
updated import statements for TestCellReference in AllXSSFTests. java to ensure compatibility with the latest Excel library structure
fix a crash when interact with an obsidian block that don't have a hole.
added a new file LongPointerPressTest3049. java with basic UI components and error handling to facilitate testing of long pointer press
truffle : do not inline truffle function if the inlining be enable.
refactored null checks in multiple builders to use a ternary operator to improve code readability and reduce potential null pointer exceptions
removed unnecessary type check in ListBlockParser and added deeplyIndentedList tests in SpecialInputTest to improve parsing logic to handle deeply
added a new abstract class AbstractOptionalAssert and refactored the existing AbstractOptionalAssert class to improve extensibility and maintainability of the assertion
added an import statement for JUnit's Ignore annotation in WebfluxNotIncludedTests. java to temporarily disable tests related to issue # 1070
remove jsinterop. jspackage. global from testcaselogger. savemessage
fix a syntax error in RouteStartupOrderLastTest. java
added a condition to check if the video format is video before processing web subtitles to ensure that web subtitles are only processed when a video format is
added security property for disabled algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing unsupported algorithms during hostname verification
cloudstack - 5685 : don't allow storagepool. ismanaged ( ) to be true for zone vms
enhanced logging in Driver and QueryResultsCache classes to improve code readability and maintainability by using a formatted string
[ java ] add option to skip model update after manage dependency update.
added a test for sending a pending intent with the request code in ShadowActivityTest. java to ensure correct handling of pending intents in the
refactor RocketFigure3d to use overlay graphics instead of rendering hints to improve visual consistency and ensure consistent rendering behavior
added synchronization to the controllerListeners list to ensure thread safety when modifying the listener list concurrently
solr - 9893 : disable EasyMock test that do not work with java 9
updated year retrieval method in TimestampUtils and added new DateTimeFormatter tests in SetObject310Test to ensure correct year handling and improve test coverage
fix a null pointer exception when disconnect a jabber connection.
added a new column name " cur _ ws _ commit _ id " to the existing statement in TxnHandler. java to improve clarity and
replaced ByteChunk with ByteBuffer and updated related methods to improve performance and handle buffer overflow exceptions
added a new method ` toSync ` in ` AsyncUtils ` to convert a ` CompletableFuture < T > ` to a ` Future <
added ActionGraphBuilder import to multiple compiler factory classes to enhance rule handling by integrating action graph management
simonstewart : fix invisible input for upload
removed unnecessary try - catch blocks in SQLManager. java to improve code clarity and handle potential SQL exceptions more gracefully
added a check to return the parent Maven directory if the file does not exist to ensure the application uses the correct local Maven directories
ggb - 2118 hide algebra label when new label change
fix : fix npe in ctelement # getmetadata
replace ` setFlags ` with ` addFlag ` in ` DefaultTrackOutput. java ` to improve clarity by using a more descriptive method
hhh - 147486 - entityiterablebase. isreorderingenabled ( ) should return false for non - sorted by column
updated error message for missing method call in verify ( mock ) to clarify the context of missing method calls in the verification process
added a null check for backupFolder before logging the expire date to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid. java ` implementing a basic array creation test to demonstrate usage of ` Array. newInstance ` with
added @ AddToRuleKey annotation to ToolType fields in ClangCompiler and GccCompiler classes to ensure proper handling of rule keys in
added a constant PINCODE _ TIMEOUT and modified the conditional check to use it to improve code readability and maintainability by centralizing timeout logic
polyglot sample to match prometheus implementation
added @ Ignore annotations to multiple test classes to ensure tests are executed without required MongoDB server dependencies
http : / / issues. apache. org / jira / browse / amq - 4071 - fix compile error
update condition in MetaDataSource to check if the table is artifical instead of just name to ensure that the table is not artifical
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer. java ` and `
refactor session attribute handling logic in MongoSessionManager. java to improve clarity and correctness of attribute management
changed surfaceHolder. setFixedSize to surfaceHolder. setSizeFromLayout ( ) to simplify surfaceHolder sizing method for improved layout handling
refactor stop handling in AbstractConnector to improve clarity and prevent potential NullPointerExceptions
removed unnecessary whitespace in HuobiStreamingService. java to improve code readability and maintain consistency
camel - 13312 : defaultmessagelistener should not use stopwatch to calculate elapsed time.
( chore ) camel - test - infra - delayedmonotest : fix flaky test
changed assertion from assertTrue to if the error is an instance of WebSocketHandshakeException to improve error handling by expecting a WebSocketHandshakeException
refactor ` AllAppsTransitionController ` to use ` View. OnLayoutChangeListener ` instead of ` View. OnLayoutChangeListener ` to improve code
refactor variable names from'the'to'handler'for clarity to enhance code readability and maintainability by using a more descriptive variable name
added support for the " default - output - channel " attribute in XPathRouterParser to enable dynamic configuration of the default output channel in the XPath
changed cacheSeconds from an integer to a String in MessageBundleProperties and CasCoreWebConfiguration to allow for more flexible cache duration representation
updated version strings in ParameterDeSerializationTest. java and ParameterSerializationTest. java to ensure consistency across test files
removed the append method call from ByteBufferPool to streamline buffer handling by eliminating unnecessary method calls
added a check for the presence of " alt - rt. jar " in the boot classpath to avoid test failures when an alt - rt jar
updated user names in JdbcScimUserProvisioningTests for consistency and clarity to enhance code readability and maintainability by using a uniform naming convention
refactor FlightRecorderProfiler to use ArrayList instead of Arrays and add conditional options based on Java version to improve flexibility in flight recording options based on
added a method to check if the stream is empty in WebCamInputPanel and modified the imageDropHappened call in WebcamInputDialog
added a condition to ensure the buffer is not empty in HttpParser. java and created a new test for chunked transfer encoding in ProxyServletTest
( chore ) camel - atmos : fix checkstyle violation
modified conditional checks in Java2TypeScriptAdapter to include " printf " and " print " alongside " async " to enhance functionality to
added a new file TestCapacityUntilGCWrapAround. java and native methods incMetaspaceCapacityUntilGC to ensure that metaspace
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
update the calculation of the endTime in SamplingStatCalculator. java to ensure accurate tracking of timestamps at the start of the sampling process
added unit test base on user forum issue
jpegimagereader should not throw icc profile on invalid icc - profile chunk number.
fix terraform rod and terraform rod not cause reactivate animation
added a conditional check to ignore certain entries in JoobyModule and SpringModule to ensure only relevant entries are registered for the application context
remove the creation of the loaderrule in the contextruleset.
add support to load additional nameupdater. properties file from meta - inf / resources
added a line to set the started state of the ellipsoidRegionSelector to ensure the ellipsoid region is ready for processing
replaced all instances of " http : / / www. codenameone. com " with " https : / www. codenameone. com "
[ geos - 8470 ] add sortby parameter to wfs getfeature.
updated the assignment of grantor to check for null owner to ensure that grantor is always set to null to avoid potential null pointer exceptions
updated DiagramGenerationTest to use compatible images instead of the expected width and height to ensure the image is compatible with the expected width and height
throw a runtimeexception when attempting to fml on top of fml
refactor DataUtilities and ReTypeFeatureReader classes to improve code clarity and maintainability
fix flaky locktest. testlockconcurrently ( )
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` class to enhance tokenization functionality for improved usability
use response. error ( 404, ` ` not found'' ) instead of response. status ( 404 )
refactor command handling in SystemHighlighter. java for improved clarity and correctness to enhance code readability and maintainability by using a consistent command index
update version to " 1.0. 1 - SNAPSHOT " and version date from " 2012 - 07 - 14 " to " PENDING " to prepare for
updated buffer position calculation to use dimensionSize instead of idx to ensure correct buffer position based on the provided dimension size
added handling for drag and drop requests in the QuickstepTestInformationHandler and SystemUiProxy classes to ensure proper drag and drop functionality and improve
[ log4j2 - 1349 ] skip socket option test on jdk7
added PSK - AES256 - GCM - SHA384 + TLSv1. 2 to the TestCipher class to support additional encryption protocols in
replace ` getDescription ( ). getText ( ) ` with ` getLongDescription ( ) ` in ` NearbyMapFragment. java ` to
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for better data handling
updated HqlQueryRenderer to handle reserved words and added a new test for schema scoping to improve query parsing functionality and ensure proper schema
( chore ) camel - subscription : fix typo
refactor Parser class to improve code readability and maintainability
modified the ` offsetStreamIndex ` method to include a new parameter for indexStartsAtOne to enhance the method's functionality to correctly
tika - 697 : fix magic detection, and add test for cpio
[ hotfix ] [ table - planner - blink ] remove deprecate monotonicity method from flinksqloperatortable
added equals, hashCode, and toString methods to OneTimeTokenAccount and OneTimeTokenAccount classes to enhance object comparison and ensure proper string representation
added a condition to check if the assistant is notLaunchedAssistant before fling to ensure proper handling of assistant interactions when not
added a new file ` SolarisShortDSA. java ` to demonstrate the use of ` KeyPairGenerator ` and ` Signature ` in Solaris
added a call to toggleSearchLabel with a value of false to ensure the search label is properly displayed when needed
bug 7143 : don't lock the volume when create a snapshot.
refactor the connection management in FileDetailActivity to use a dedicated class for connection handling to improve code clarity and maintainability by encapsulating connection logic
refactored error handling in HttpClientTLSTest to use AtomicReference for SSLPeerUnverifiedException to improve code clarity and ensure proper handling of SSL
modified the equals method in ConjunctionScorer to ensure proper comparison of Scorer instances
added a null check for the variable'v'in the bindItems method to prevent potential NullPointerException when colliding items
fix getRaftGroupIdsOp timeout issue in cmemberaddremovetest.
updated cache size calculations and added timing for cache removal to improve cache performance and prevent excessive memory usage
updated API version from " / api / v2 " to " / api / v3 " and modified limit order conditions in CryptoFacilities
added an empty ( ) method to the freenect2 class to provide a way to check if the size of the freenect2
added null handling for page data in AsyncPageReader and created a new test for empty dictionary pages in TestDrillParquetReader to improve
updated argument validation and improved error handling in SerumStreamingService. java to enhance input validation and ensure correct market data type is used
add config option to disable the charging animation when a mana pool be charge on top of a pool.
[ java ] don't wait for cluster state to be ready for cluster restart.
log interrupted exception instead of ignore
updated file system checks in DefaultServletTest. java to use assumeTrue for better clarity to enhance test reliability by ensuring filesystem operations are
updated the order of injected styles in ResourcesInjectorFull. java to ensure correct styling is applied for dialog and screen styles
replaced ` String ` and ` String ` types with ` FileResource ` in multiple classes to enhance resource management and improve code consistency
fix checkstyle issue in blockworldvector
changed ` CacheEntry < V > ` to ` final ` and modified ` key ` and ` value ` fields in ` LongConcurrentLRU
updated regex handling in resource configuration to ensure proper parsing of literal strings in resource configuration
updated FileCredentialsCache to retrieve the Kerberos KerberosCCNAME environment variable and modified EmptyCC to accept command - line arguments for the credentials cache to
updated the database path in ValidateMultiSignContractTest. java to reflect the new testing environment
peer count requirement must be great than the minimum required peer count of ethprotocolmanager
simonstewart : fix a syntax error in the driverservlet. java file
fix ( freezev2 ) : don't expand string in AreEqual operation
added a condition to clear pending rendering operations when the component is minimized to optimize rendering performance by reducing unnecessary operations when the component is minimized
fix flakiness in ` hazelcasttestsupport `. testhazelcastdeadline ( ) `
write - behind : fix coalescedwritebehindqueue. put ( key, value )
added a null icon to the JLabel in GroupTreeCellRenderer to improve resource management by preventing potential null pointer exceptions
updated test methods in TestBlacklistAwareRedirectResolver to use setStrictMatch instead of setStrictMatch to simplify test cases by removing strict match
added closing of the serverSocket in ShutdownMonitor and modified test methods in ShutdownMonitorTest to ensure proper resource management and improve test reliability
improve performance of randomaccessstore. read ( )
refactor serialization logic to improve code readability and maintainability to enhance maintainability and reduce redundancy in field retrieval and error handling
[ hotfix ] [ runtime ] move componentclosingutils from util package to operator package
destroy volume when vm be expunge to error state
don't allow ipv6 address for vlan that don't have ipv6 address
updated variable names from ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` to improve clarity and
increased retry timeout from 15000 ms to 30000 ms in CollectionsAPIDistributedZkTest. java to improve reliability of the leader
removed the'Exception'parameter from the error handling methods in AbstractParam, BooleanParam, IntParam, LongParam, and UUIDParam classes
updated drawImage calls to use negative coordinates in URLImage. java to ensure proper rendering by using the correct coordinates
updated field name comparison from solrDocument1 to solrDocument2 to ensure correct validation of field names in the test cases
mondrian : fix check for zero - dimensional list in setfunctiondef.
[ hotfix ] [ stream ] include exception cause in streamconfig exception
replaced the use of ` expandedTag ` with a new ` hashtag ` string and refactored digit extraction logic to improve code clarity and
reformatted the ` read ` method in ` MessagePack. java ` for consistency to improve code readability and maintainability
added a new annotation interface Mapper in the org. apache. ibatis. annotations package to provide a custom Mapper annotation with default values
fix : jsonparser don't encode empty extension list
fix a bug in the library manager that could cause an artifact to be add to the modlist.
added alias " node _ popup _ scripting " to the entry navigator to enhance the functionality of popup scripting in the script menu
updated constants and added alpha animation logic for tablets in OverviewActionsView and RecentsView classes to improve user experience by ensuring proper
camel - jms : fix class cast exception in jmsproducer
[ hotfix ] fix checkstyle violation in generated file
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` to remove unused code to streamline the codebase
updated ` GzipHandlerTest ` to use ` final String ` instead of ` static String ` and added a new ` MicroServlet ` class to
use backpressureutils. getandaddrequest instead of deprecated ` consumercapacity. getandadd `
added logging functionality for component installation and stopping processes in SpeedmentImpl. java to enhance debugging capabilities by providing insights into component installation status
[ dsspace ] load oai config from servlet context
hbase - 19801 fix nullpointerexception in storescanner. reset ( )
( chore ) camel - test - jmx : disable jmx and enable jmx on camel - test
replaced'/'with a constant'CANONICAL _ PACKAGE _ SEPARATOR'in SourceLineAnnotation. java and SourceCodeDisplay. java
added YARNBIN configuration and application info printing in RemoteSparkJobMonitor to enhance application management by displaying application information for Spark jobs
added support for both " mysql " and " maria " databases in the DbConnectionManager to enhance compatibility with MariaDB while ensuring
hbase - 25836 splitlogmanager. splitlog ( ) should print empty log instead of null
added a new file ` ExecuteAndReturnStringTest. java ` to demonstrate the functionality of executing a string in a UI
added a new file InvokespecialInterface. java with interfaces and methods to demonstrate the use of the ` doSomeInvokedynamic `
refactor EvictingBoundedList class to improve code readability and maintainability
modified the logic for setting encoding manager in GraphHopper. java to ensure proper traversal mode based on needsTurnCostsSupport
added a null check for style. backgroundDisabled and improved selection validation in SelectBox. java to ensure that the selection parameter is non - negative
added a null check for the method name in RpcServer. java to ensure that UnsupportedOperationException is thrown when the method name is null
update hotseatCellSize calculation to use cell layout border space instead of padding to improve layout accuracy for better visual consistency
updated the calculation of ` valString ` in ` ExpressionTree. java ` to use ` values ` instead of ` partitionName ` to improve
added version check to taskdecorator to check if it be version 4.4 _ 1
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler. java ` to ensure
updated the boolean comparison logic in DisplayModeTest. java to ensure that display mode comparisons are correctly validated against expected values
added a check for non - BMP code point before appending to the UnicodeToLatexFormatter to ensure proper handling of Unicode characters in the
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 47
simonstewart : fix a bug in the webdriverbackedSelenium that cause the window handle to change to the original window handle
added a " Clear " button and a separator to the BookmarksPanel and DataBrowser components to enhance user interface by allowing users to clear of
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for constructing the base URL to improve code readability and maintainability by utilizing a central
updated date assertions in SoftAssertionsTest. java to use parseDatetime and containsSequence methods to improve accuracy of date comparisons and enhance test reliability
updated ` adaptOrders ` method to include an ` boolean ` parameter for reverse order handling to enhance order adaptation by allowing the order to be
delombok should print ` ` var'', not ` ` var''
simonstewart : remove unimplemented test from the test suite
changed the instantiation of ` Configuration ` from ` Configuration ` to ` Configuration ` with a ` false ` parameter to ensure that the Hadoop configuration overrides
replaced super. drawChildren ( batch, parentAlpha ) with super. draw ( batch, parentAlpha ) to simplify the method signature for better
added unit test base on user forum issue
use get catalinabase ( ) instead of system. getProperty ( ` ` catalina. base _ PROP')
added tests for the ` getBestDateTimePattern ` method in ` ShadowICU ` and modified the return logic in ` ShadowICU `
added color codes to the information map in PlotSquared to enhance the visual representation of the PlotSquared's color codes
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance tracing capabilities by integ
tika - 3852 -- fix unit test for font - like metadata
added a new file ` SampleApplication. java ` and refactored ` getBuildTime ( ) ` in ` BuildInfoMojo. java `
updated calculation of xDist to use the absolute value of mScroller. getCurrX ( ) to ensure accurate xDist calculation based on the
deleted the GUIRWTester. java file to remove unused test suite
removed nullability annotations from constructor and method signatures in LazyMessage, StandardSubjectBuilder, and CustomFailureMessageTest classes to simplify code and
updated the error message format in TestStream. java to improve readability of the error message
move thymeleaftemplatereader from org. thymeleaf. templateparser to org. thymeleaf. templateparser. markup package
( chore ) camel - saxon - java : added unit test for xpath
added Nullable annotation import to FutureUtils. java to improve code clarity by indicating that Nullable values are not processed
warn when invokedynamic be not resolve during call - graph construction
update email from " myfakeemail @ gmail. com " to " myrealemail @ example. com " in ContextTest. java to
updated the response format in HttpConnectionTest. java to use hexadecimal string representation to ensure consistency in HTTP message formatting and improve readability of the test
added getColumnDataType method implementations in AbstractResultSet, ResultTableResultSet, and ResultResultSet classes to provide a consistent way to retrieve column data type from
fix ( java ) : add unsupportedoperationexception to interface
refactor HSSFPictureData class to improve code readability to enhance maintainability and readability of the code
replaced ` long ` and ` long ` methods with ` Instant ` methods in ` Statistics. java ` to improve accuracy of time measurement by using
added version handling in LibMediaInfoParser to ensure compatibility with newer library versions
added methods to create a Proxy for IdeaDependency to enhance dependency management and improve proxy creation for IdeaDependency
added a new SerialHeap class to the codebase to implement a standardized garbage collection mechanism
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types. java to suppress serialization warnings and improve code clarity
updated mouse wheel event handling to use the mouse's position instead of the player's position to improve user experience by providing context for mouse
datamongo - 1608 - fix nullpointerexception in findbyfirstnameIgnoreCase method
[ hotfix ] [ table - common ] fix incorrect return value of maptypeinfo. hashcode
added a method to retrieve an identity provider by issuer in XOAuthProviderConfigurator. java and corresponding test cases in XOAuthProviderConfiguratorTests.
pdfbox - 4892 : fix cmapparser with poor - whitespace
refactor ContactsBackupJob to use a ServiceConnection for better connection management to improve reliability and maintainability of the service management logic
refactored type constraints and introduced new classes T6938454a and T6938454b to improve type handling and facilitate
account list : add isconfighidden ( ) method to accountid
added logging for inconsistent display state in DisplayController to improve debugging and track display state issues
removed a schema name from the metadata in PMetaDataImpl. java and added a test for schema removal in PMetaDataImplTest. java to
make sure passive login listener be listen for ` ` loginpassive'' action
added a new file ` Box2DTest. java ` and updated ` JoglApplication ` and ` Box2DTest. java
use ` ` < anonymous >'' instead of ` ` - deleted -''. patch by jbellis
[ hotfix ] [ network ] increase default buffer request timeout to 5 minute.
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 ( # 5 )
openoffice : add ` ` help'' button to openoffice
[ java ] add channeloption. childoption. TCP _ NODELAY to channeloption. childoption.
updated method signatures in BinanceAuthenticated, BinanceAccountServiceRaw, and BinanceTradeService classes to improve type safety and reduce unchecked warnings
refactor class name handling in ScanResultObject by introducing classRef variable to improve code clarity and maintainability by encapsulating class reference logic
remove unnecessary try - with - resources block in decodeservlet.
added null handling functionality to Querydsl and created corresponding integration tests to enhance query functionality and ensure proper functionality through unit testing
added a null check for the actor in ParallelAction and SequenceAction to ensure proper handling of actions and prevent potential NullPointerExceptions
fix ( test ) : fix typo in cttypetest.
added synchronization to the flush operation in HDFSEventSink. java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and ` JJ ` with implementations ` aa ( ) ` and ` JK (
added a method to revoke an agent certificate and updated certificate generation logic to enhance certificate management and improve error handling
added a check for no body codes in the HTTP response handling to ensure that the response does not contain a body when no body is provided
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5583
added support for additional connection pooling configurations in Hive configuration to enhance database connection management and improve error handling
replaced instances of ` mDevice. pressHome ( ) ` with ` mLauncher. pressHome ( ) ` in multiple test files to ensure
added functionality to conditionally show lock and unlock files based on availability to enhance user experience by providing appropriate actions when files are locked or unlocked
updated versioning logic in mmm Version. java and ppp Version. java to ensure compatibility with the latest version releases
clear endpoint cache when update keyspace
refactor lock wait logic to use a separate waitForState method to improve code readability and maintainability by reducing duplication
updated ` SkylarkDescriptionArg ` and ` SkylarkRuleContext ` to use ` SkylarkRuleContextAttr ` instead of ` Map <
simonstewart : move the storage interface to a separate file for better code organization
fix npe when create view statement with replace option
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner. java to improve error handling by providing a broader range of exceptions
updated query string retrieval logic in SpellCheckComponent. java to ensure default value is used when no query string is provided
added validation for header values by checking for illegal characters and whitespace to ensure header values do not contain illegal characters or whitespace
replaced instanceSize with arrayBaseOffset in HybridLayout and added afterFieldsOffset getter in HostedInstanceClass and UniverseBuilder to
pmd : fix compile error in apex tree builder
hhh - 14613 log association with ` @ fetch ( ` ` FetchType. LAZY'' ) will be interpreted as lazy
refactored filters from SwaggerSpecFilter to AbstractSpecFilter in NoGetOperationsFilter, NoUserOperationsFilter, and RemoveInternalParamsFilter
added assertions to verify database and table names in TestCompactionTxnHandler and TxnHandler to ensure correct retrieval of database and table names from the
camel - 15836 : timer consumer should be suspendable so you can graceful shutdown the timer
added a conditional check before adding traces to ensure traces are only added when the block is processed
updated the ProviderManager class to use CollectionUtils for checking providers to improve code readability and ensure proper handling of null elements
updated version check for PostgresDatabase in InsertOrUpdateGeneratorPostgres. java to ensure compatibility with newer database versions
added support for local index limits in various classes to enhance query performance and resource management
added a check to prevent adding a collection with the same name and a different type in the past to ensure data integrity by preventing duplicate collection names
updated cursor management logic in VDUBuffer and vt320 classes to ensure correct cursor positioning based on screen size changes
added a new constant USE _ RETRIES in HttpShardHandlerFactory to provide configurable retry settings for shard handling
update version number regex in JavaVersion. java and add a test for it in TestJavaVersion. java to ensure correct parsing of Java versions
[ hotfix ] [ task ] don't execute task that don't exist in the environment
added a test method to the TestReceivingMessageSourceParserTests class to facilitate unit testing of the receiving message source functionality
added null check for properties in RemoteCluster. java to avoid potential NullPointerException when accessing properties
( chore ) camel - util : replace throw with cause
updated error message formatting in RepositoryVersionResourceProvider. java to improve clarity of error handling during stack upgrade failures
txidtextfield now properly update the confidence.
added a new constant G1 _ PERM _ GEN in JmxSupport. java to support for G1 Perm Gen functionality in the
removed unnecessary import statements and simplified return logic in NearbyController. java to improve code clarity and maintainability by eliminating unnecessary dependencies
pdfbox - 4071 : add miss generic to clonefornewdocument
updated activity type checks in BaseSwipeUpHandlerV2. java to improve accuracy in determining if a task is an home activity
rename ` DefaultEdgeClientFilter ` class to ` EdgeAddHeaderClientFilter ` and update related methods to improve clarity of the filter's
updated method names and logic in ShadowTelephonyManagerTest and ShadowTelephonyManager to ensure proper handling of network and sim country codes
updated the method to set unfreeze amount in UnfreezeBalanceV2Actuator to ensure proper handling of unfreezing balances in the
fix typo in conferSchedulingxlsxfileio
simonstewart : replace google common's file. copy with apache commons's fileutils. copydirectory.
updated assertion classes in the codebase to improve code clarity and maintainability
[ hotfix ] fix typo in javadoc of observable. delay ( )
replaced the use of ` keyValue ` with ` addMultiFieldOperation ` in the ` Update ` class and added tests for multiple push operations to
added a null check for randomUUID before setting the hubChangeLog ID to avoid potential NullPointerException when randomUUID is null
added hover event handling in InputConsumer classes to improve responsiveness for quickstep live tiles
added a condition to check for " bootstrap _ conf " in CoreContainer. java to ensure that the bootstrap configuration is only set when the server
camel - netty - http : use label ` ` consumer'' instead of ` ` 8192''
[ flink - 2594 ] [ test ] increase hbase client retry limit
replace file resolution method with new File constructor to ensure compatibility with different operating systems
avoid transient failure in encodedgraphtest.
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a
added currency metadata handling for asset assets in KrakenAdapters. java to ensure accurate currency metadata for asset assets
added a ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test ` to
[ te ] fix empty email subject in alertgrouper
[ influxdb ] add precondition check for influxdb measurement
replace dotransform ( number ) with downcast ( number ) in converter
filter : : / filter, filter fd00 : : / filter, filter fec0 : / filter fd00 : / filter, filter
added a method to quote column names in the DataTextFormatter class to ensure proper handling of column names in data formatting
added methods for setting, getting, and retrieving properties in WrapSystem. java and refactored method names in StrUtils. java to enhance
added a constructor to UpdateRequest that accepts a URL parameter to enhance flexibility by allowing requests to a specific URL
fix javadoc warning in com. google. cloud package
added ` addExperimentalFormatWarning ` method in ` RequestHandlerUtils ` to indicate that the response format is experimental to encourage the use of
updated logging format in JpmsUtil. java to include multiple module names to enhance log readability by providing more context in module names
update row height accord to the uitools default label font
[ hotfix ] fix potential npe in defaultbrokerheartbeatmanager
refactor partition size calculation logic in CqlInputFormat. java to improve clarity and maintainability of the code
updated conditional logic in JUnitTestsShouldIncludeAssertRule. java to simplify the conditional check for JUNIT4 _ CLASS _ NAME
[ drools - 7 ] fix equal ( ) and hashcode ( ) in ruleterminalnodelefttuple
added a check for StageIDsRearranger in TezCompiler. java to ensure proper handling of stage ID rearrangement based on configuration
use ` ` org. apache. cassandra. net : type = messagingservice'' rather than ` ` org. apache. cassandra. concurrent
updated memory allocation logging in LotsOfOutput. java to improve memory management during the initialization process
added necessary imports and refactored DEFAULT _ DIM _ CONFIG in various classes to enhance documentation and improve code clarity
polish ` ` anonymous - only'' property in spring - ldap
refactor DatabaseMetaData class to improve code readability and maintainability
( chore ) camel - test - echo : make echo pipeline test private
added a ` finishMocking ` method with a ` Throwable ` parameter in ` DefaultMockitoSession ` and ` StubbingWarningsTest `
updated GoTestDescription. java to remove extraDeps parameter and added new test cases in GoTestIntegrationTest. java to streamline dependencies and
replaced ` buffer ` and ` handler ` with ` readBuffer ` and ` writeBuffer ` and ` writePending ` in ` SPDYAsync
change block name from staticblock to flowingblock in blockliquidwrapper.
updated location intent handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to improve location retrieval by using a URI instead of a specific class name
fix a typo in the javadoc of aprendpoint
[ hotfix ] [ table - plan - api ] fix classcastexception in clifrontend
update craftingmanager. getshapedrecipes to use computeIfAbsent instead of immediate null check
flume - 197. fix flaky test filechannelrestart test.
tabsandindentsvisitor don't handle \ r / \ n correctly.
added a pattern to match ". * pg _ temp _. * " in NeuteredLinesFilter. java to ensure the filter
doc ( regen ) : regenerate client with updated copyright year ( # 4382 )
added support for handling " NCLOB " data types in DataTypeFactory and ColumnSnapshotGenerator to ensure proper handling of data types including " INTERVAL "
don't publish wavefront timer if it's publishing histogram
updated the upstream handling in ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to improve the respons
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable listener registration for a sensor event listener
added socket exception handling for ` testFullMethod `, ` testFullURI `, and ` testFullHeader ` methods in ` SelectChannel
camel - ignite : fix npe when use karaf
added conditional logging for empty sets in AbstractClient. java to improve clarity of output messages when no data is available
pdfbox - 4071 : don't swallow exception, return false
add tests for HDR capabilities in ShadowDisplay to ensure compatibility with different display configurations
added a finally block to reset classLoader to null to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of error messages for better debugging
added a default constructor to the Message class to ensure proper instantiation of the Message class
bug fix for serialization of java. awt. component
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and enhanced BigDecimal creation to improve type safety and ensure accurate decimal representation
updated content encoding handling in CompressionResponseStream and CompressionServletResponseWrapper classes to ensure proper handling of response encoding based on transaction status
refactor getAuthorization method to accept an optional authenticateHeader parameter to enhance flexibility by allowing different authentication headers
added a condition to check if the name starts with " EJS ", " com. ibm \ ", and " org. omg "
added a method to retrieve the thread group name from the thread object to improve clarity by using a more descriptive identifier for the thread group
added logging functionality and improved access decision handling in MethodInvocationPrivilegeEvaluator. java to enhance debugging capabilities and ensure security interceptor is mandatory
changed package and logger name from " org. apache. nutch. crawl. DmozParser " to " org. apache. nutch
removed Lombok's ToString import from ChainingRegisteredServiceDelegatedAuthenticationPolicy. java to streamline code by eliminating unnecessary Lombok
bugfix : add the iso path to the migration answer when the vm be start from the root volume
refactor signal handling logic in SigInt. java and improve test cases in SigIntTest. java to enhance code clarity and ensure proper handling of
replaced the static import of ArrayUtils with a utility method from ArrayUtils to improve code readability and maintainability by using a standard utility method
remove @ contextconfiguration annotation from spring - cloud test
added multiple @ Override annotations in ColorRGBA. java to improve code clarity and maintainability
planner : remove planningentityselector. uninitialize and plannerconfig. uninitialize ( object planningentity )
updated TwoLevelArtifactCacheDecorator and ManifestRuleKeyManager to include build time as a parameter to enhance cache functionality by associating build timestamps with
refactor field retrieval in GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) to improve accuracy in handling field types during aggregation
wallet : fix npe in addblockappearance ( )
added new currency pairs for " CNC " and " BTC " in the BTCEUtils and TickerDemo classes to support trading
updated ` skewAllowance ` from ` int ` to ` int ` across multiple classes to allow more flexibility in handling allowance values based on
updated song list item sorting logic to use String arrays instead of null to ensure consistent sorting behavior for song data retrieval
removed unused imports and added a method to read request body to streamline code and improve request handling
add legacybaseblockwrapper, deprecate legacyblock
updated IcebergBranchExec to retrieve tag existence from table to improve robustness by ensuring the correct tag is used when creating a branch
replaced ` newArrayList ` with ` Collections. singletonList ` in ` AbstractLdapMockMvcTest. java ` to simplify code and improve readability by using
refactored bounce handling logic in HybridDemoSsboInstancing and PhotonMappingDemo classes to improve code clarity and
added validation for requirePasswwordChange property in IdentityProviderEndpoints to ensure proper handling of password change requirements for identity providers
added a call to ` notInitializedInConstructors. removeAll ( assumeReflective ) ` in ` UnreadFields. java ` to ensure that
added a check for the connection state before throwing an exception in JdbcExecutor. java to ensure proper exception handling when the database connection is closed
added a new test method ` testRequiredBody ` in ` SpringmvcClient. java ` to verify that missing user data and service names are
updated regex patterns for user and password in CredentialInjector. java and its corresponding test in CredentialInjectorTest. java to ensure correct parsing of password
added a new menu item " Item4 " and a key binding for the'ENTER'key in ActionListenerCalledTwiceTest. java to
updated print statements and assertion logic in TestCoreParser. java to improve readability and maintainability of the test output
simplified conditional checks in SimpleNode. java to improve code readability and maintainability
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
replaced ` int ` with ` long ` in ` MoreLikeThis ` and added a small sample from corpus in ` TestMoreLikeThis
refactor event triggering logic for QUEST _ COND _ STATE _ NOT _ EQUAL to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest static
added " $ gt " and " $ lt " to the EXPIRY collection in MongoSessionDataStore. java to ensure that the EXPI
workaround for unsafegetlong in compilerdirectivessubstitutions.
update time zone entries for " Asia / Amman " from ARAST to EET to ensure accurate representation of time zone data for
updated id from 90000010 to 90000011 to correct identifier for deprecation logging
hhh - 147483 fix deadlock in sessionimpl. checkrollbackonly ( )
modify downloadexternalfile. download ( ) to return empty string instead of null
disable menu bar on macos by default
[ giac ] add piecewise integration test for piecewise integral
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods from private to protected
added a whitelist pattern configuration in HiveConf and a corresponding test in TestJdbcWithSQLAuthorization to enhance security by allowing modification of whitelist parameters at
added a new entry name and value to the invalidClasses map to ensure that invalid entries are properly recorded in the entry loader
mobileinput : use player team instead of sharded
updated domain from " comp1 " to " getHostName ( ) " in Cookie creation to ensure the correct domain is used for cookie handling
added validation logic for nullable columns in ` MissingColumnChangeGenerator ` and ` MissingTableChangeGenerator ` to ensure proper handling of nullable values based
doc ( regen doc )
updated collection client operations and constants in ` CustomCollectionTest ` and ` CompositeIdRouter ` classes to improve code clarity and enforce immutability of
replaced InputStreamList with SnapshotGeneratorFactory in ` ExecutablePreparedStatementBase. java ` and added scratch data handling in ` PostgreSQlnt
updated conditional checks and formatting in DefaultServlet. java to enhance code readability and maintain consistent coding style
fix ` ` no database open'' error when open a new bib file
replaced ` createDescription ` method with ` createTestDescription ` method in ` ExecutionUnitRunner ` and updated child assertions in ` CucumberTest `
replaced `! isEmpty ( ) ` checks with ` StringUtils. isNotEmpty ( myVersion ) ` and ` buildTimeString ` checks to improve code
removed the public access modifier from several static methods in TimeUtils. java to restrict access to these methods for better encapsulation
updated security frame handling logic in RefectionMHTests. java to ensure compatibility with versions 18 and above
updated file extension check in PreviewImageFragment. java to ensure correct file extension validation for image processing
[ gr - 34494 ] fix debug info for host method.
added ` getIcon ( ) ` method to various Data classes using ` ImageUtilities. loadImageIcon ( ` org / gephi / dat
modified the substring extraction logic in CounterRequestAggregation to handle cases where the request name does not end with a period to ensure the correct substring is
updated regex replacement logic in FindAndReplace. java and added a new test for dollarsigns in FindAndReplaceTest. java
smack packet debugger will now use the port of the xmpp connection if it's an xmpp connection.
refactor SchemaExtractionProcessor class to improve code readability and maintainability
added a method to copy files to a specified directory to enhance file management by ensuring source and destination directories are properly managed
added a check for unknown Avro datum classes in JacksonUtils. java to improve error handling by throwing an exception for unknown data types
replaced calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` requireRule ( Has
simplified height calculation in SelectBox. java to improve code readability and maintainability
added normalization of database and table names in ObjectStore. java to ensure proper handling of database and table names
added support for Oracle database type in the DbSqlSession class to ensure compatibility with the database's schema when retrieving tables
removed the call to Logout on an empty response in HomeFragment. java to ensure that the app does not log out when the API is
updated the number of parameters in MockStreamingRuntimeContext across multiple test files to ensure consistent and reliable testing of the streaming runtime context
don't fail fastimport if the list of element be null.
updated managed state checks in ContainerLifeCycle and modified assertions in ContainerLifeCycleTest to ensure correct tracking of lifecycle states
rename iexecutionattributessdialect to iexecutionattributedialect.
added a call to metadata. clearUnsafe ( ) in AlterTest. java to ensure thread safety during metadata operations
fix ` ` index out of range'' error
added null measurement check in TabletInsertionDataContainer and refactored DisruptorQueue's setRingBufferSize and setThreadFactory methods
deleted the Session2Token. java file to the file is no longer needed in the project
volume be expunge when volume creation fail. if the volume be create fail, the dest volume be already remove.
added a new ` Install ` class and integrated it with ` InstantAppResolver ` in ` SystemShortcut ` and ` InstantAppResolver ` to
added a constructor to ` LdapAuthenticationProvider ` that accepts an ` LdapAuthenticator ` and provided a ` NullAuthoritiesPopulator ` to enhance
added fallback for retrolambda jar retrieval in both Executor. java and CN1BuildMojo. java to ensure retrolambda jar is available
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera. java ` to simplify the build process and improve code
replaced ` FixedBitSet ` with ` Bits ` in ` DocumentsWriterPerThread. java ` to utilize ` org. apache. lucene. util
added handleNullResult method call in JMESPathExtractor. java to ensure proper handling of null results during path extraction
updated import statements in AuthorizeTag. java to include specific utility classes to improve code clarity and prevent potential ClassCastExceptions
updated assertions in various test classes to use the new URL constructor to ensure consistency in URL construction and improve code readability
cloudstack - 7092 : fix typo in error message
updated config handling to use ` @ Config. class ` and ` @ Config. class ` instead of ` @ Config. class ` to ensure
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner. java ` to ensure compatibility with the latest Jetty API
updated partition key comparison logic in HiveAlterHandler. java to improve accuracy of partition key validation
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags. java to provide a feature toggle for showing the icon
simplified the conditional check for component activation to improve code readability and maintainability
replaced ` SharedBlockingCallback. Blocker ` with ` Callback. Completable ` in multiple files to simplify the code and improve resource management
added workspace listener to PreviewControllerImpl for handling workspace events to ensure that changes to the graph are only made when the workspace changes
added a check for non - anonymous classes in conditional statements to ensure accurate inflation checks for anonymous classes in the ReflectionFactory class
updated import statements in TransportHelper. java to improve code clarity and maintainability
updated file path from " file : / / " to " file : " in CatalinaAcegiUserRealm. java to ensure
added logging for the ActionManager instance in AmbariServer. java to improve visibility of server and agent start processes
updated JSONWriter. java to include null checks for ` init `, ` modify `, and ` getter ` to enhance robustness by ens
refactor HDFS configuration handling in SliderAppsViewControllerImpl. java to improve clarity and maintainability of the code
added a conditional check before attaching the background to ensure the background is only attached if it is not already attached
added functionality to set the current tab in the launcher and adjusted child width calculations in PagedView to improve user experience by ensuring proper tab
added validation to ensure the URL is valid in BaseDataSource. java and introduced a new test for handling invalid PostgreSQL URLs in SimpleDataSourceTest.
added JUnit 5 conditional checks for the PebbleTemplateEngine instantiation in PebbleModuleTest to ensure compatibility and compatibility of Pebble
added functionality to handle directory creation and deletion in FileDisplayActivity to improve user experience by ensuring the directory is properly managed during file operations
added functionality to toggle bar borders in multiple chart activities to enhance user interface by allowing toggling of bar borders
updated the SSL URI from " http : / / www. okcoin. com " to " http : / www. okex. com
jbrules - 2814 : fix fail test case
refactor file reading to use a ` SeekableByteChannel ` instead of ` FileChannel ` to improve code readability and maintainability by using a more
refactor getFlattenFieldTransferPair method to improve clarity and maintainability to enhance code readability and facilitate easier future modifications
rename ` MockHandler ` and ` MockCreationSettings ` to ` MockHandlerImpl ` and ` MockCreationSettingsImpl ` respectively to improve clarity
removed redundant check for LAMBDA _ CAPTURING _ SERIALIZATION _ TYPES in SerializationConfigurationParser. java to simplify the
added heap watch heap limit configuration in QuickstepProcessInitializer to optimize resource usage for debug devices
refactor the sumWithCompensation function to store the result of applyAsDouble as a double variable to improve code readability and maintainability by
http : / / issues. apache. org / jira / browse / amq - 3496 - fix broken test
precompactedrow should not throw ioexception if the top - level deletion be live
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes, and added a new InvalidRenderIntentTest class to improve rendering intent
ensure metrics auto - configuration do not close registry on shutdown
change log level from warn to info when config center can't be find
added error handling for certificate generation in CertificateFactoryTest to ensure that CertificateException is correctly thrown when invalid certificates are encountered
camel - 19836 : fixed issue with ambiguous binary operator in simple predicate.
removed unnecessary null checks in onTabUnselected method and added focus handling in IDEEditor to improve code clarity and ensure windows are dismissed when
add user name to access log when access fail.
modified scaling and mesh name handling in SkeletonModelGpuSkinningTest and added null check for getSubmeshnames in OgreXmlLoader
removed InterruptedException from the createOrThrow method signature to simplify error handling by eliminating unnecessary exception
added deprecation annotations to UpgradeResponse. java to indicate that the class is outdated and should not be used
added functionality to generate TypeScript files in the TypeScript transpiler to enhance the transpilation process by allowing users to specify the appropriate TypeScript files are generated
[ flink - 21741 ] [ kinesis ] add default fetch timeout to streamconfig
update streamingdataflowworker to download html file instead of raw timestamp
hive - 25815 : increase metastore server max thread ( siddharth seth, review by siddharth seth
changed the return type of onTaskSnapshotChanged from void to boolean to ensure the method returns true for successful snapshot processing
updated shadow radius assignment from mMaxShadowRadius to shadowRadius to ensure correct shadow radius is used for animation transitions
added unit test for chain nesting and aggregation.
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest. java ` to ensure the loop does
use isinteractive instead of isinternal to check if the source be an active source.
updated conditional logic in CreateKeytabFilesServerAction. java to handle null or empty cached file paths correctly
added DisplayController import to LauncherPreviewRenderer. java to enhance functionality by integrating DisplayController for better display management
updated tooltip text for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure correct identification of root directories in the file chooser
replaced ` getToolkit ( ). getScreenSize ( ) ` with ` Toolkit. getDefaultToolkit ( ). getScreenSize ( ) ` to ensure
changed return type of recognise method from List <? extends RecognisedObject > to List < CaptionObject > in TensorflowRESTCaption
added unit tests for fetching results with a factory expression in JPASQLBase. java to ensure correct fetching of results based on defined expressions
removed unnecessary drag index checks in FreeformFinSetConfig. java to streamline code by eliminating unnecessary drag operations
updated moeVersion from " 1.3. 2 " to " 1.3. 0 " to ensure compatibility with the latest version of the Moe library
updated error message for constant canot setting call value and added spendAllGas call to improve clarity of error reporting and ensure all gas is
improve error message formatting in ElementsShouldSatisfy and ZippedElementsShouldSatisfy classes to enhance readability of error messages for better debugging
added a deprecation annotation to the Weights class to indicate that the class is outdated and should not be used in new development
graph builder plugins should be register for platform - specific unsafe apis.
added @ Hint ( isDep = false ) annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs classes, along with a
changed the value of mCenterPagesVertically from true to false to update the behavior of page centering
[ hotfix ] fix race condition in migrationrequestoperation
[ konnected ] use baseurl instead of moduleipaddress ( # 2451 )
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy
updated test table creation and query processing in TestJdbcWithMiniLlap. java and LlapBaseInputFormat. java to ensure proper database usage
added a new test case to validate parsing and deparsing of SQL queries with nested CASE expressions to ensure correct parsing and deparsing of
added support for MotionEventCompat and refactored copy mode handling in ConsoleActivity to ensure compatibility with newer Android versions and improve code readability
updated import statements and refactored the ` writeXmlOutput ` method to use ` Writer ` for XML output to improve XML output handling and
camel - 5497 : fixed npe in listaggregationstrategy when exchange be null.
( chore ) camel - core : use camel exchangenotfoundexception instead of exchangenotfoundexception
move basicconfigurationfactory from logback - classic to classic
added a check for the PHI _ NODE flag in the targetVN validation to ensure that the targetVN does not contain the P
added import statement for SharedStringSource in TestXSSFRichTextString. java to utilize functionality provided by Apache POI's SharedString
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation within the ` ObjectInvokeHelper
refactor various dataset classes in the project to improve code organization and maintainability
[ hotfix ] migrate ReadableWritableConfigurationTest to junit 5
fix a couple of findbugs warning find by findbugs
changed the visibility of the IndexFileNameFilter constructor from public to private to restrict access to the constructor and improve encapsulation
refactor if statement test to use plugin definition to improve readability and maintainability of the test code
corrected a typo in the method name from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` to ensure consistency and accuracy in
removed unnecessary Gson registration and null handling from TypeAdapter methods to simplify the code and improve maintainability by eliminating redundancy
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
add a new file EXIFReader. java that reads EXIF metadata from a directory to enhance the functionality of EXIF metadata processing in the
fix : cloudwatchmeterregistry. batch ( ). tostandardunit ( ) should return none
[ jbpm ] applypmmPmmlmodelcommand should use parameterinfo instead of pmml4datafactory
improve fluentprotocol info message when re - sends countercurrencetransferstartmessage
added a conditional check to return early if bubble bar is not visible to improve performance by avoiding unnecessary processing when bubble bar is not visible
clear conservative label range if a branchtargetargumentexception be throw.
added a try - finally block around the ` initializeJDKLogManager ` call in ` JDKXRLogger. java ` to ensure that
added a find ( Class < Ticket > ticketClass ) method to the DefaultTicketCatalog and DefaultTicketCatalog classes, and modified HazelcastTicketRegistry
updated SSL and JDBC connection setup in TestSSL. java to ensure compatibility with different operating systems and improve test reliability
[ flink - 25941 ] [ sort - shuffle ] fix sort - result - partition memory leak
( chore ) camel - jms : add support for long. max _ value
added a'type'parameter to plugin handle methods and updated related data structures to enhance functionality by allowing plugin types to be sorted
updated method calls from ` start ( ) ` to ` start ( ) ` in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig
added support for custom drawable formats in IOSApplicationConfiguration and IOSGraphics classes to enhance flexibility and maintainability of drawable configurations
refactor login test to use a new method for retrying login attempts to improve code readability and maintainability by encapsulating login logic
[ pytorch ] throw unsupportedoperationexception when call pytorch viewasreal and pytorchviewascomplex
refactor thread lock name retrieval to use a do - while loop for better control flow to improve responsiveness and prevent interruptions during synchronization
updated Implements and ShadowPicker classes to improve code clarity and maintainability
refactor HttpClientOptions initialization to use a dedicated method to improve code readability and maintainability by encapsulating logic in a dedicated method
added support for both StructType and DynamicArray classes in DynamicStruct and SolidityFunctionWrapper classes to enhance type handling and improve error handling
updated property retrieval to include a boolean parameter in InlineLayout and FontUtil classes to enhance flexibility in property retrieval for better layout management
added constructors to ` CopyStep ` that accept a ` Path ` parameter and a corresponding test in ` CopyStepTest ` to enhance flexibility in
fixed - rSemaphore. acquire ( ) and rSemaphore. addpermits ( ) method don't work correctly.
( chore ) camel - test - infra - java - dsl : fix test failure
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` to use it to improve code maintainability by centralizing flavor parsing logic
updated data types from List < String > to List < ByteString > in WitnessScheduleStore. java to improve data handling for witnesses
added a check for non - empty resultsMeta before printing them to avoid printing empty results when there are no results
refactor ConcurrentLinkedQueue to improve null - checking logic and add a new RemoveLeak class to enhance code robustness and prevent potential NullPointerException
added a boolean parameter to the encode methods in HuggingFaceTokenizer to control token encoding behavior
[ hotfix ] [ runtime ] use collections. nCopies for computeSlotResourceProfile
fix a bug in loadsingletsfilenode that could cause the chunk data to be write to the wrong position.
added a new constant for session storage context and updated view state handling in DuoSecurityMultifactorWebflowConfigurer to improve code clarity
added unit test to verify that schema validation be work
added a default constructor to TypeAdapter and updated comments in Java17RecordTest and ReflectionAccessTest to address compatibility issues with Java 17 features and
debugger : make suspensionevent. iskill ( ) return true for suspendedevent.
refactor AntPathRequestMatcher class to improve code readability and maintainability
added null parameters to createResourcePolicy methods in multiple classes to enhance resource policy handling and improve code clarity
added null check before releasing the deflaterEntry in GzipHttpOutputInterceptor. java and improved test assertion in BlockingTest. java to ensure
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper execution of tests after each
updated MD5 checksum computation to normalize Unicode characters to ensure consistent checksum formatting across different text platforms
refactor command handling and improve null safety in the Example. java file to enhance code clarity and prevent potential null pointer exceptions
changed the ` keyListener ` variable to be ` final ` in ` BasicProfilerState ` and added multiple @ Override annotations in ` BaseApp
updated MongoTemplate to use DBObject instead of T to improve type safety and ensure correct saving of JSON strings
added a method to check for multiple remote addresses in the RequestUtils class to ensure that only valid remote addresses are processed in the application
changed job argument types from String to ObjectBuilder in JsLibrary. java to improve JSON handling capabilities for better data representation
added proxy address retrieval and improved URL handling in CookieManagerTest. java and UnmodifiableMaps. java to ensure reliable retrieval of the local host and
refactor GlyphLayout. java to improve glyph counting and resource management to enhance code clarity and ensure proper resource management during runs
added methods to pause or resume split readers in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to ensure pulsar components
added configuration for HIVESCRIPTIDENVVAR in HiveConf and utilized it in ScriptOperator to ensure correct operator ID is utilized
refactor ` getListedTermCounts ` method to use streams for term counting to improve code readability and maintainability by consolidating term counting logic
added a new action class ` UseSeparateStepSizeAction ` for enabling separation of step sizes in the application
refactor FileMenuFilter to use AccountManager and improve file unlocking logic to enhance code clarity and ensure proper handling of unlock actions
hbase - 25836 fix minor bug in roundrobintablInputFormat and testtablesplit
updated header values from " false " to " 0 " and " true " to " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest
pdfbox - 4071 : use ioutils. close ( ) instead of a null check
added fullscreen mode handling in GwtGraphics and GwtApplication classes to improve user experience by enabling fullscreen mode functionality
updated WebfingerIssuerService to use URI instead of String to enhance URI handling for resource normalization
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of the Dubbo client
updated file path handling in SkinLoader to use ` resolve ( fileName ). pathWithoutExtension ( ) ` instead of ` Gdx. files
updated logging levels from warn to info for critical issues in OidcDefaultJsonWebKeystoreCacheLoader. java to improve logging clarity and
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in ` PlayerApiServlet `, ` BrowseHandler `, and
changed package declaration from ` java. lang ` to ` java. lang ` to improve organization and clarity of the codebase
fix for false positive in jsr redundant comparison
refactor DashRendererBuilder to use DefaultHttpDataSource instead of ContentId to improve code clarity and maintainability by using a single HTTP request
added a configuration property for maximum prepared statements per database connection in the execution scheduler to control the number of prepared statements per database connection for better resource
changed return type of set method from WritableConfig to Configuration in multiple configuration classes to improve type specificity and clarity in configuration handling
added error handling in AutoScalingHandler to ensure proper processing of command operations with error data
refactor CombinedDataset class to improve code readability and maintainability
replaced the byte array variable ` buf ` with ` b ` in the ` InflateIn _ DeflateOut ` class to improve efficiency by
added methods to remove cryptography restrictions in Utilities. java to streamline the removal of cryptography restrictions for improved security management
fix entity teleportation when an ev have be cancel.
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to verify the functionality of page margins
added a null check for the vContext object before retrieving it from the vectorizationContexts map to avoid potential NullPointerExceptions when accessing vectorization
fix ( wialon ) : fix wavon speed
hbase - 19836 disable metric user enable by default in hbase - client ( siddharth seth )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
modified the handling of mUserPresent, mVisible, and mAttached flags in Launcher. java to ensure proper unregistering of the receiver based
update javadocs for httpclient, asyncfile, httpclientrequest, httpserver
added params parameter to the zadd method call to enhance data integrity by incorporating additional parameters
[ scb - 2852 ] fix test failure ( # 2853 )
rename ` TestAsyncMessages ` class to ` TestAsyncMessagesPerformance ` to improve clarity of the test's purpose
refactored ` VersionedTargetGraphBuilder ` and ` VersionPropagatorBuilder ` to use ` Optional < TargetNode <?,? >
updated time zone constants for better accuracy to ensure accurate representation of time zones in the application
updated the calculation of ` field _ pictureData. length + 4 ` in ` EscherBlipRecord. java ` and added a
updated initialization of row and column variables in JSONParser. java to improve code clarity and maintainability
replaced ` JavaType. FullyQualified ` with ` Pattern ` for pattern matching in ` FindTypes ` and ` JavaType ` classes to
updated DETAIL _ THUMB _ HEIGHT and added support for retrieving local trailers and special features to enhance trailer display and improve user experience during
added a method to remove glyph information from the cache in CStrike. java and CStrikeDisposer. java to improve memory management
act - 1197 : terminateall behaviour - > terminateall behaviour, not terminateall
camel - 5957 : added @ xmlrootelement annotation to type name strategy. thanks to martin for reporting.
updated the URL in the HTTP endpoint from " http : / / www. apereo. org / scottb. html " to
added prdef option to reset default value to default value
hbase - 25836 make some method protect to allow subclass access to these method.
[ danfossairunit ] remove deprecate channel ( # 10495 )
use hamcrest assertion instead of junit in testendpoint
removed duplicate ` expansionHelper. stop ( ) ` calls in ` TweetActivity. java ` to streamline the code by eliminating redund
implemented equals and hashCode methods in PartitionFactory to ensure proper comparison and hashing for instances of PartImpl
bugfix : root _ disk _ size be store in custom parameter in uservmmanagerimpl.
updated visibility logic based on user preferences to enhance user experience by showing suggestested apps based on user preferences
[ geos - 8470 ] don't throw an exception if the bbox be invalid
added validation for value parameters in LibrustzcashParam. java and updated the ivk value in Librustzcash
deprecate ithrowableentity in favor of cpw. mods. fml. common. registry
added randomness adjustments to the x and y variables in NodeDataImpl. java to enhance randomness during data generation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to improve
refactor variable initialization in JavacStep. java to use try - with - resources for better resource management to improve code readability and ensure proper closure of
update version number from 0.9. 1 to 0.9. 2 to release a new version with minor improvements or fixes
added a condition to check if itemType is DEEP _ SHORTCUT in LoaderCursor. java to ensure proper handling of deep shortcuts in the
added hashCode method to TimeGranularitySpec class to ensure proper hash code generation for instances of TimeGranularitySpec
added access modifier to classes extending QueryWeight from private to protected to allow subclasses to access these classes while maintaining encapsulation
added a boolean flag ` useProxyResponseCode ` to manage NTLM proxy behavior to ensure proper handling of NTLM proxy when response code is
aarch64 : fix a bug in aarch64move. ldr.
bugfix : don't return the reserve memory if the host don't exist
added a null check for maxScore in JSONResponseWriter. java and utilized a new query in TestDistributedSearch. java to ensure that
updated audio record encoding from 22050 to 44100 to improve audio quality during testing
update calculation for newOriginX in RocketFigure. java to ensure correct origin positioning based on subject bounds
updated the null and empty check for the Druid data source in DruidQueryBasedInputFormat. java to ensure that the Druid data source
added additional properties for Original ID, ORIGINAL _ NAME, and ORIGINAL _ TYPE in CustomProperty. java and updated regex pattern to enhance
added a static method ` create ` to create an instance of ` Index ` with a parent and data to facilitate the creation of `
simplified the return statement for period validation to improve code readability and maintainability
updated schema compatibility checks to include location information to ensure compatibility between different schema types
added handling for entity path and collection attributes in QueryUtils. java to improve data integrity by ensuring only associated attributes are processed
updated the ` spans ` list and synchronized methods in ` TestSpanHandler ` to ensure thread safety and avoid potential concurrent modification issues
ww - 4441 replace < object > with <? > in the get method signature.
updated exception handling in ViewContextImpl to use InvocationTargetException and changed log level from error to debug to improve error handling clarity and provide more detailed logging
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
updated error messages in SCBEngine, TestInvocationFactory, TestInvokerUtils, and HighwayServerInvoke to provide clearer feedback to the service
added iOS data and resource files to the project to enhance project setup for iOS development
updated imports in TestSearcherManager. java to use ConcurrentMergeScheduler to improve performance by utilizing a concurrent merge scheduler
added null and empty list handling in QTestUtil, GenericUDTFInline, and LazyBinaryArray classes to improve robustness by ensuring
refactor MapIterable, FJIterate, and ParallelIterate classes to improve code organization and maintainability
fix for ticket range input not work in chrome
[ hibernate ] fix osgi test failure
fix typo in elapsed time calculation
remove the createcomponentfile method and add a non - packaged resource dir
updated file name handling in Compat. java and FileOpener. java to improve file existence checks and ensure correct file processing
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
[ cli ] prevent duplicate port be specify in cli command
added null mask handling in WebSocketClient and updated connection creation to use a fixed mask generator to enhance flexibility in masking generation during WebSocket connections
refactor the return type of ` genUDTFPlan ` from ` RelNode ` to ` Pair < RelNode, RowResolver > `
added count tracking for bucketed and non - preferred node selection in NodeScheduler and NodeSelectionStats classes
added a new Person class with a name property along with its getter and setter methods to facilitate the renaming of a Person instance in Maven
added a boolean variable ` hasOwnerPtr ` to track the presence of a owner pointer to ensure proper handling of the owner pointer in the code
added clock display functionality and animation handling in PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback
remove some unnecessary call to world. updatecomparatoroutputlevel ( ) in some place.
changed the IMPL variable from static final to static and added a SecurityException for SegmentReader class loading to improve flexibility in loading SegmentReader classes
replace direct casting of cell to Cell with SwingUtilities. invokeLater to ensure thread safety when firing cell update events
replaced instances of ` DefaultInetAddressAdapter ` with ` CollectionTypeAdapter ` and removed the ` DefaultInetAddressAdapter ` class to simplify code
added null and value validation methods to the Series class to ensure proper handling of null values and improve data integrity
removed the " -- no - audio - time - stretch " option from the options list to simplify the options for audio processing
updated GeoRelationUtils and GeoUtils to use Math. max for boundary calculations to improve accuracy in geometric calculations for geospatial queries
cloudstack - 5193 : fix npe when deployvm fail to deployvm
ensure hazelcast instance be clean up after each test.
added tests for various cipher modes in BlockCipherTest. java to ensure correct handling of missing padding and provider exceptions
added addFilter for " going to print operations logs " in QFileClient. java to enhance logging functionality for better debugging
fix aop proxy generation for @ child and @ inject ( ` ` inject'' )
fix nullpointerexception when try to connect to a proxy address.
replaced manual addition of demand with MathUtils. cappedAdd in WebSocketConnection. java to simplify code and improve readability by utilizing built - in
refactor image output stream handling to use try - with - resources for better resource management to improve error handling and ensure proper cleanup of temporary files
refactor search handling in multiple classes to use Intent instead of TvApp to improve code clarity and maintainability by centralizing search functionality
updated formatting in SchemaCrawlerCommandLine and GrepOptions classes to enhance code readability and maintain consistent formatting
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 61616
added an Autowired annotation to the PersonRepository in RepositoryIndexCreationIntegrationTests. java to facilitate repository dependency injection for integration tests
updated method signature from Exception to InterruptedException in UIServer. java and modified log message formatting in TestVertxUIManual. java to improve
fix blockcactus # isalive ( ) return value
refactor mouse event handling in ThemeSelector. java to use a new method for better encapsulation to improve code readability and maintainability by encapsulating mouse
[ flowcontrol ] add abstractminmulticastflowcontrolrhspadding to abstractminmulticastflowcontrol
added support for blockCopyPaste property in IOSImplementation and IOSNative to enhance functionality by allowing block - copy - paste functionality in text editing
don't throw exception if tokenization model be not specify
added a check for distinct queries in ClusterIntegrationTestUtils and modified group column generation logic in QueryGenerator to ensure proper handling of distinct queries in query
jni : add stringsimilarity option to native nativelinkage.
bug 60719 - jsyntaxtextarea and filelistpanel no longer throw an npe
added null check for children before iterating through children to avoid potential NullPointerExceptions during execution
added token and current position variables to MessagePackParser and updated test cases accordingly to enhance parsing accuracy and ensure correct context handling
added locale management after tests in AbstractSolrMorphlineTestBase to ensure consistent locale across test cases
removed unnecessary conditional check for ` isLauncher ( ) ` in ` LauncherFragment. java ` to streamline code for better readability and maintainability
added unit tests for the MetricsReporter class to ensure proper registration and handling of metrics
camel - mock - bundle : remove unused import
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing of rectangle instances
( chore ) camel - kafka : fix flaky test
refactor DSAParameterGenerator to use BigInteger. ONE instead of BigInteger. valueOf ( 1 ) for strength checks to improve code readability and maintainability
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration to control the use of the AM machine when submitting work to
fix flaky clientoutofmemoryhandlertest. testclientoutofmemoryhandlertimeoutofmemory
added a method to retrieve the object ID from the shape object and updated calls to this method to improve code clarity and maintainability by centralizing
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest. java ` to ensure that distinct queries return the expected result
updated imports and class names in Driver, SearchTravRetLoadFieldSelectorTask, and SearchTravTask to improve code clarity and maintain
added bind and unbind methods for ExtensionAdapter in ManagedKubernetesClient to enable dynamic binding and unbinding of ExtensionAdapters in the client
updated subtitle display logic in DetailsDescriptionPresenter and added utility methods in Utils to enhance subtitle display for episodes and media streams
test migrate from junit 4 to junit 5
fall back to xml if we fail to generate the summary.
replaced multiple calls to ` intPool. reset ( false, false ) ` and ` bytePool. reset ( false, false ) ` with
added multiple @ Override annotations in FilterInputStream. java to ensure proper overriding methods
added a new class ` WindowSessionDelegateU ` and modified the ` addToDisplayAsUser ` method in ` ShadowWindowManagerGlobal ` to
fix for http : / / www. w3c. org / bugzilla / show _ bug. cgi? id = 4362
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL database in foreign key constraints
hbase - 2697 fix checkstyle violation in hbase - store
fix the emzuli pipe so it would well reflect our new behaviour.
simonstewart : allow htmlunit to be run in debug mode
[ flink - 1865 ] [ table - planner - blink ] fix the bug in hivelookupjoinitcase
deprecate player. listenerset. set ( ) and add thread check.
updated the SCHEMANAME string construction in SequenceSnapshotGenerator. java to ensure correct schema name is used for snapshot generation
added color scaling and alpha support in SpriteBatch, SpriteCache, and LwjglDebugStarter classes to enhance rendering quality and improve alpha testing
fixed - redissonconnection. join ( ). join ( ). join ( ) throw batch promise.
added base core URL replacement in SolrLoggerServiceImpl to ensure that only relevant cores are included in the statistic system
updated methods in TaskActionController and TaskAdapter to improve null safety and streamline task launching process
updated import statements and modified constructor parameters in MorfologikFilter to improve code clarity and ensure default dictionary is used
removed " lbl _ stars " and " lbl _ critic _ rating " from sort options in GridFragment. java to streamline sorting options
added imports and visibility logic for ListRow in CustomListRowPresenter to ensure proper visibility of list rows based on their header state
refactor switch - case structure in StressAction. java for cleaner code to improve readability and maintainability of the code
refactor HttpClient class to improve code readability and maintainability
updated case - sensitive checks from ` isCaseSensitive ( ) ` to ` instanceof DB2Database ` to ensure proper handling of DB2 database
add jackson library support for java. time module ( # 3647 )
use slf4j instead of log4j in test
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver. java ` to ensure type consistency and avoid potential runtime errors
updated import statements and formatting in CoinbaseTransaction. java to improve code readability and maintain consistency in import statements
added a method to get the build target list in ` BuckConfig ` and refactored ` ProjectCommand ` to use this method to
replaced the existing IdleStrategy initialization with a new one using BusySpinIdleStrategy to optimize idle strategy management during garbage collection
replaced ` ContentProvider cp ` with ` ContentResolver cp ` in ` OCFile ` and ` FileDisplayActivity ` classes to enhance functionality by
remove unnecessary conditional checks for state changes in ReportPanel. java to streamline code for better readability and maintainability
[ hotfix ] [ test ] make testinglogicalslot null safe
add a new recipe class to remove calls to ` System. gc ( ) ` and ` Runtime. gc ( ) ` to improve garbage collection
removed super ( ) calls from multiple exception classes to streamline exception handling by eliminating unnecessary super ( ) calls
added a setUIID method to the ScaleImageLabel class to ensure proper UIID handling for image labels
refactor FeedUpdateService to use a single variable for ` foundEntry ` and ` update ` to improve code readability and maintainability by reducing redund
added support for both " - classpath " and " - cp " arguments in the Main. java file to enhance command - line argument handling for
sulong : fix ` ` default'' compilation option for ` avutil `
added a semicolon to the initialization flag in StorageService. java to ensure proper initialization of the storage service
updated test cases in Test7196045. java to improve test coverage and ensure accuracy of test cases
updated the default values of density and decay in ShaderParametersLightShaft. java to enhance the shaft's parameters and improve
added configuration properties withState and stateData in OidcConfiguration. java and updated OidcRedirectActionBuilder. java to enhance OID
fix for unique constraint with non - null column.
added federated share support in the UsersAndGroupsSearchProvider and EditShareFragment classes to enhance file sharing functionality based on user's fed
added a method to return true for needsDocValues in TestBBoxStrategy to ensure proper handling of document values in the BBox strategy
refactor various classes to improve code readability and maintainability to enhance maintainability and facilitate easier debugging
added ` intForEach ` method to ` Int2ObjectHashMap ` and updated import statements in ` Int2ObjectHashMapTest ` to enhance
fix worldserver save data associate early with the global map storage
changed return type of count methods from Long to long in QueryDslMongoRepository, QueryDslPredicateExecutor, and SimpleMongoRepository classes
don't log mtree snapshot creation time difference when create mtree snapshot
refactor dot product calculation in VectorUtil and TestVectorUtil to improve accuracy in dot product calculations
added a new parameter for the confirmation threshold and implemented methods to update the lastConfirmed block number to enhance the configuration by allowing the confirmation of
refactor locale handling in GpsMainActivity and related classes to use Systems for improved locale management to enhance code clarity and maintainability by centralizing
added a check for new database creation status in LauncherClings and LauncherProvider classes to ensure migration is only missed when a new database is created
updated assertions and iterator handling in BasicAclEntryAfterInvocationCollectionFilteringProvider. java to improve code clarity and maintainability by reducing redundancy
removed unnecessary whitespace in a conditional statement to improve code readability and maintain consistency
added a check for the current thread in TestIndexWriterDelete. java to prevent further processing when the current thread is not the expected one
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports and modified method calls in FullDetailsActivity and BaseRowAdapter to use ModelCompat. asSdk to ensure compatibility with the latest SDK
added attribute handling for SVG elements in BatikSVGDrawer. java to ensure proper handling of SVG attributes in the document
added a try - catch block for IllegalArgumentException in ConsoleKeys. java to improve error handling when parsing user configuration
added a check for the " WaitForResult " bundle in CodenameOneActivity to ensure the correct behavior of the waitForResult condition
refactor ` HitQueue `, ` SpanPositionQueue `, and ` PriorityQueue ` to use a ` Supplier < T > ` for sentinel objects
refactor WidgetCell to use TextView for widget information instead of WidgetImageView to improve clarity and maintainability of widget display logic
added a maximum attribute count check in Attribute. java to prevent registration of an alias that exceeds the maximum allowed attribute count
move predicatestest to package com. hazelcast. query. impl. predicates
camel - 7999 : camel - core - optimize headerfilterstrategy to be case insensitive.
refactor InlineLayout and Breaker classes to improve handling of unbreakable strings to enhance code clarity and maintainability by using more descriptive variable
added null safety annotations and improved layout inflation in ShareUserListAdapter. java to enhance code robustness and prevent potential NullPointerExceptions
refactored the ` Setup ` class to simplify the ` shouldInstrument ` method and added parentIsInstrumented checks to improve code readability and
added a conditional check for insert destination before source association in BrowserContentPane. java to ensure the correct number of columns associated with the insert destination
test : add / sys / fs / cgroup / memory / memory. limit _ in _ bytes
replaced ` @ Value. Immutable ( builder = false, singleton = true ) ` with ` @ Value. Immutable ( builder = false, singleton
added a null check for the rule in JavaTestRule. java to throw a HumanReadableException when the specification source under test is not among
use mc _ version instead of mc _ version for proxy enablement.
added a conditional check to initialize atIndex to zero to ensure atIndex is non - negative to prevent potential errors
increased timeout duration in BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 5000 milliseconds to
added an AssistContentRequester to TaskOverlayFactoryGo constructors to enhance content request handling in the overlay functionality
updated the witness address encoding method in VoteWitnessProcessor. java to ensure proper handling of witness addresses in the application
rename DefaultMethodRegressionTests. java files to improve clarity and organization of test cases
updated import statements in WorkloadManagerMxBean. java to improve code clarity and maintainability
updated Kafka exception handling imports in KafkaOutboundAdapterParserTests to ensure proper exception handling for Kafka - related issues
added a call to close the loader in DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a clear ( ) method to ExceptionThrowingTaskletStub and introduced a clear ( ) method in FaultTolerantExceptionClassesTests
[ beam - 8470 ] improve config error message for samza deployment
updated the applyTunerConfigs method signatures to include an extraProperties parameter to enhance configuration handling by incorporating additional properties
added logic to check for in - progress partitions in PinotRealtimeSegmentsManager to ensure only active segments are added to the collection
added a condition to return null if the table is not touchable and is disabled to prevent potential null pointer exceptions when the table is not touch
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` in ` PrecompiledHeaderIntegrationTest. java ` to ensure
throw a retryable hzexception if a cache config have not be create yet
refactor JSweetTranspiler to use ProcessUtil for checking node package installation status to improve code clarity and maintainability by centralizing package installation
added ManagedObject annotations to MBeanContainer and Destroyable classes to enhance monitoring and management of component lifecycle
added a condition to the if statement in LongClickableSpan. java to ensure the method executes regardless of settings. inAppBrowser
corrected single quotes in string comparisons across multiple files to improve code readability and maintain consistency in string comparisons
updated the warning condition in ` Types. java ` and added new classes ` T6558559a ` and ` T6558559b
improve / / / worldeditlistener. java to include position and block information.
( chore ) camel - kafkaconsumer : shutdown executor properly
added default implementation of the ` examples ( ) ` method in the ` Schema ` class to provide a default behavior for the Schema interface
modified thread handling logic in AgentRunner. java to include a break statement and interrupt the thread to improve control flow and ensure proper thread interruption
remove time column from the result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure data consistency by removing unnecessary time columns from the result
fix bug in facetcomponent
replaced ` LinkerProvider ` references with ` CxxPlatforms ` in ` RustBinaryDescription ` and ` RustLibraryDescription ` to
added a name property with getter and setter methods in JaasAuthenticationProperties, JdbcAuthenticationProperties, AbstractLdapProperties, and Ntlm
dump to igv if we can not connect to the igv server
updated scan threshold logic in BaseQueryPlan. java and introduced a constant for small scan threshold in QueryServices. java to enhance query optimization and
updated the ` toStringCreator ` method in ` RetryGatewayFilterFactory ` to include ` routeId ` and ` series ` to enhance traceability of retry
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl. java ` to ensure
replaced calls to ` DiscoveryBounce. showForHomeIfNeeded ` with direct calls to ` DiscoveryBounce. showForOverviewIfNeeded ` to
modified null checks for ` getMinPackedValue ` and ` getMaxPackedValue ` in ` CheckIndex. java ` and added a test for deletion
updated the publish method to use ` updateLastState ` instead of ` true ` to ensure that the last updated state is properly updated during the
updated SQL query format in MetastoreDirectSqlUtils. java to ensure proper syntax for string list insertion
added a null element to the exp array in SpliteratorCollisions. java to ensure proper handling of null values in the spliterator calculations
malichalichalichalichalichalichalichalichalichalichalichalichalichal
replaced'do'with'while'in ManyToManyConcurrentArrayQueue. java to simplify the loop structure for better readability
# 584 - enh : add ` ` forward _ fetch _ size ( )'' to ormqueryengine
camel - 20297 : camel - http - multichat operation should not fail if channel already close.
pdfbox - 4892 : optimize, a suggest by valerybokov
updated window radius initialization to use rounded corners support to enhance compatibility with devices that support rounded corners
refactor DesktopTaskView to use View instead of ShapeDrawable to improve code clarity and maintainability by encapsulating background logic
added a new instance of ` UpstreamCheckService ` in ` UpstreamCheckServiceTest. java ` to ensure proper initialization of the `
pr in
updated ZooKeeperHiveLockManager to return locks instead of throwing an exception to improve error handling by returning the locks instead of throwing a specific exception
[ hotfix ] [ javadocs ] fix checkstyle violation
added a check for custom data in the mipmap generation logic to ensure mipmaps are generated only when custom data is present
camel - 17684 : fix checkstyle violation in camel - core
added selectable state management and selection methods in List. java to ensure touch events are not eatable when not selectable
added a check to return false if the last value count of field vectors is zero to ensure that the LlapArrowBatchRecordReader does not return
added file separator expansion functionality to PolicyContext to ensure proper handling of file paths across different operating systems
replaced HashSet with ArrayList in FieldQuery. java to improve performance and maintainability of the code
refactor TLSRestrictions class to improve code readability to enhance maintainability and facilitate future development
kafkamanager : make sure we submit kafka task before close the producer
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance the robustness of the node state assertions by
added a lock file deletion mechanism in RocksdbMavenPomCache. java to ensure proper cleanup of temporary files associated with the workspace
[ hotfix ] fix npe in minizookeepercluster
added a new method ` getResponse ` in the ` RestClient ` class to handle the retrieval of a web service URL to improve error handling and
[ hotfix ] fix arrayindexoutofboundsexception in ingestutils. getpushjobspec ( )
updated accounts in test cases to use the correct password to ensure the test uses the correct credentials for student authentication
updated null check for mCurrentItem in EnhancedBrowseFragment. java and StdBrowseFragment. java to ensure proper handling of null items in the
reduce the size of the string array from 500 to 100 to optimize memory usage and improve test reliability
fix ( wkb ) : remove bytearrayinstream from wkbattributeio
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers. java ` to improve clarity by accur
added a method to check if a transition is a direct substate in AbstractStateMachine to ensure proper handling of direct substates in the state machine
added type checks for ListMultimap and SetMultimap in MultimapSubject. java and corresponding test cases in MultimapTest. java to ensure correct order of
added JoinOperation interface to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a test for running PostgreSQL tests in AdditionalPostgreSQLTest. java to ensure that the test accurately verifies the functionality of the PostgreSQL
fix intermittent failure in amq5035test
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
updated connection pool durations from int to String in MongoDbConnectionPoolProperties and MongoDbConnectionFactory to enhance flexibility in connection durations
fix siputils. creatAudioMediaFormat ( ) cast to null.
refactor filter handling in FacetProcessor to improve clarity and efficiency in processing filters and domain changes
added support for enabled timeout handling in ShuffleHandler to improve timeout management based on application state
update mQuickStepStartingRotation initialization to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability and
camel - xpath : deprecate old method in favor of new one
use dataresourcelocoldesource instead of class. / data
pmd : added test case for edge case tokenizer
added validation for the " atlas " property in AtlasTmxMapLoader. java to ensure the map is missing the'atlas'property
remove property placeholder resolver from component base on user forum
added database closure in BlockchainTest. java and removed unnecessary receive listener listeners in KafkaTest. java to improve resource management and streamline message
refactor handling of literal lines in CoreMarkdownNodeRenderer to use a dedicated method to improve code readability and maintainability by centralizing the logic
int - 1921, int - 269, int - 269, int - 269, int - 269
replaced ` ImmutableList. builder ( ) ` with ` List < Object > ` in SQLBindings and AbstractSQLClause classes to improve code clarity and
added support for OpenJDK vms in VirtualMachine. java to ensure compatibility with OpenJDK in the system
added a keep - alive setting to the baseUrl configuration in ReactorClient. java to improve connection management by ensuring requests are properly terminated
updated MD5Renderer and ObjLoader to use ShaderProgram constants instead of string literals to improve code readability and maintainability by using defined constants
camel - 5957 : allow to use propertycomponent a they already exist in the registry.
updated null check for accountCapsule in UnfreezeBalanceActuator. java to improve robustness by handling potential null values
update version number to 3. x for the 3.7. 1 release.
updated return statements to use ` t. unannotatedType ( ) ` instead of ` t ` to ensure proper handling of unannotated
updated assertions and modified sequence file handling in StorageGroupProcessorTest. java to improve test reliability and ensure correct sequence file size configuration
added environment management functionality and updated class references to ensure compatibility with the Jetty ee10 environment
added a parameter ` params. waitbeforestart ` of 2500 in ` FFMpegVideo. java ` to ensure the video's
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor to streamline the constructor by eliminating the
add test for accessors. listindex ( )
add method in graalcompiler. compilemethod so that it can be reuse by other compilation method.
updated test imports and annotations in DynamoDbTicketRegistryTests, BaseAuthenticationRequestRiskCalculatorTests, and BaseAuthenticationRequestRiskCalculator
modified the way a block Y - coordinate is added in ItemBoat. java to ensure proper placement of water blocks based on their target type
updated the ` toString ( ) ` and ` getLockID ( ) ` methods in ` Directory ` and ` RAMDirectory ` classes to improve clarity
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the conditional check for experimental options
added new return types for ` AbstractPathAssert ` and ` T ` methods in ` BDDAssertions ` to improve clarity and usability of
refactor variable names from ` hp ` to ` hostField ` for consistency to improve code readability and maintainability by using a more descriptive variable
updated logging level from debug to warn for multiple Kubernetes config files to clarify that developer should recommend using ` export KUBECONFIG = / path
added file upload handling and retry logic in FileUploadService and UploadListActivity to improve file upload management and enhance user experience during uploads
added a new ProviderLoader class and updated TerminalManager to implement ProviderLoaderListener to improve asynchronous provider installation handling
replaced ` Span ` import with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` to align with the new package structure for tracing
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig instead of a hardcoded value to improve flexibility and maintainability of the change log statement
hhh - 147482 - fix compile error in hibernate - jdbc
ignore partition per member when data member size be non - zero
updated ` startScheduler ` method to check if the execution scheduler is already started to improve error handling and provide clearer feedback when a scheduler is already
updated InlineBox instantiation and formatting in BoxBuilder. java to improve code readability and maintain consistency in formatting
fix checkstyle issue in statisticmap
updated the return value from 383 to 500 in TabletSplitToConfirmTimings. java to align with new application requirements
updated button labels and command modes in WaveInfoDialog and PlacementFragment to improve code clarity and maintainability by using a centralized bundle
modified conditional logic to include plot area check in BukkitMain. java to ensure ROAD items are only evaluated when the plot area is owned
added a test for TouchExplorationStateChangeListener in ShadowAccessibilityManagerTest and modified the setTouchExplorationEnabled method in ShadowAccessibility
pdfbox - 5328 : fix indexoutofboundsexception in cmapsubtablet
use testelement. getname ( ) instead of testelement. getpropertyasstring ( )
pdfbox - 4892 : use poifs. create ( ) instead of new nPOifsfilesystem ( )
updated plot area retrieval logic in Move. java to improve robustness by handling null plot cases
updated regex pattern in TestWebHCatE2e. java to ensure compatibility with new version format
updated the range check for ` count ` in ` pickleEvents ` from ` 0 ` to ` 1 ` to ensure that the count does not
add clientid property to kafka consumer processor
replaced ` util. IsolatedClassLoader ` import with ` util. IsolatedClassLoader ` and added a check for ` ok ` to
don't repaint the view if the select item don't change
camel - spring : fix checkstyle violation in springbatchproducer
added a method to check if the animation has finished in the Animation class to improve animation handling by providing a way to check if the animation has
updated import statements in LoginInfoEndpoint. java and added a test for custom favicon with line breaks in LoginMockMvcTests. java to ensure
added null check for ` otherUrl ` in ` TimeLineCursorAdapter. java ` and modified the refreshing text in ` HomeFragment. java
ggb - 2118 fix for ` ` space'' and ` ` * space'' in web
refactor ObjectHashSet class to improve code readability and maintainability
refactor null - checking logic in DataUtilities. java to use Arrays. equals for better readability and performance to improve code clarity and maintainability by
fix mc - 12770 : don't allow deletion of enchanted book
test : add more test for async resource
rename ` flat ` header map to ` user ` header map to improve clarity and consistency in header management
added error handling for sending email addresses and improved logging for sent addresses to enhance robustness of email sending and provide clearer debugging information
replaced calls to ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` Task
added unit tests for partition retrieval in HiveMetaStoreClientApiArgumentsChecker to ensure correct behavior of partition retrieval across different sizes
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed data type of ` ArrayList ` and ` ArrayList ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFile
adjusted the second argument of removeViewInLayout from getChildCount ( ) to getChildCount ( ) - 2 to correct the layout removal logic for better child
removed the use of " org. eclipse. jetty. websocket. javax. server. internal " and " org. eclipse. jetty. websocket
removed the'true'parameter from the S3Request constructor to simplify the constructor signature and avoid unnecessary parameters
jfxradiobuttonskin : fix npe when timeline be null
updated DeweyNumber. java to handle zero splits as a Dewey number to improve error handling for invalid Dewey numbers
replace " Category : " with a new " categorySetString " in MwVolleyApi. java to ensure consistent formatting of category strings
updated the assertion message in WebSocketClientTest from " Invalid close control status code 1111 " to " Invalid close code 1111 " to ensure consistency in
added a null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure
removed duplicate code for handling persistent fields in PersistentAttributeTransformer to streamline the code by eliminating redundancy
pdfbox - 4892 : avoid classcastexception, a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the functionality of the PorterStemFilter class
updated the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` with an additional ` success ` parameter to
rename ` org. springframework. batch. core. exlore. support ` to ` org. springframework. batch. core. explore
fix concurrentmodificationexception when close a chat window.
removed ` Sys. touch ( ) ` calls from multiple Java files to eliminate unnecessary calls to ` Sys. touch ( ) `
updated HgCmdLineInterface to use " - mardu " instead of " - unknown " and implemented untrackedFiles methods in VersionControl
camel - 16836 : camel - netty - use a timer for read timeout handler
added ` final ` keyword to several fields in ` DirectionalLight `, ` PointLight `, and ` SpotLight ` classes to
added width and height calculations using Math. max in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions are respected for rendering
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable `, ` DelegatingSecurityContextRunnable `, and corresponding test cases
added annoFilterTreeSet class to filter inner classes based on annotations to improve performance by limiting the number of processed classes based on the annotation
hbase - 2697 fix integer overflow bug in bytescolumnvector. copyfrombuffers ( )
fix flaky testwritebehindmapstorewithevictionstest
updated the ` uninstallListeners ` method signature from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` XTextArea
[ web ] add isEqual ( ) method to check equality of polynomial function
added null check for table before retrieving column class to avoid potential NullPointerException when table is not initialized
added a try - catch block to handle ClassCastException during customChange instantiation to improve robustness by preventing application crashes due to ClassCastException
added methods to retrieve BuckConfig and replaced ConfigPathGetter with DistBuildConfig in multiple classes to enhance configurability and maintainability by
fix : export of x ( qif ) and qif ( qif ) don't show
added JUnit @ Ignore annotation to BasicDistributedZkTest. java to temporarily skip the test since it broke
modified the ` doJoin ` and ` doCopyLeft ` methods to return a boolean indicating success to improve the return value of the join operation
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription. java ` to streamline the code by eliminating unused
updated intent flags in LauncherTimelineCursorAdapter. java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure that the activity does not retain
added a boolean method checkPagingOrderBy ( ) in SpiQuery. java to enhance query functionality by ensuring that paging order is validated
updated the URL in the repository assertions from " https : / / repo. maven. apache. org / maven2 / " to " https
added affiliate task to the cluster. jm - 1052
use uri. normalize ( ) instead of requestutil. requestutil. normalize ( )
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow external access to the method for
added array handling for CacheKey and refined equality checks in CacheKeyTest to improve efficiency and correctness of object update operations
replaced GnomeFileTypeDetector with a custom FileTypeDetector implementation across various files to enhance file type detection across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
refactor ` getParams ` and ` getVirtualSensorCallback ` methods in ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to improve
sec - 1648 : don't remove security context from session if it's the default
renamed variable ` lch ` to ` loopback ` for clarity to improve code readability and maintainability by using a more descriptive variable name
; ; ; ; ; ;
added secure validation checks in KeyInfoReferenceResolver and improved error handling in XMLSignatureInput, TransformXPath, and ResolverLocalFilesystem to enhance security
added functionality to conditionally add or remove the icon action listener based on the initialization state of the icon
added support for Russian language in the Language class to enhance localization support for the application
hhh - 147486 fix duration unit conversion in sqm to sql ast converter
disable frame state verification in substrategraphkit.
added system property management for enabled SDKs and always include in tests to ensure consistent behavior during test execution
added " org. slf4j. " system class to the web application context to ensure proper class loading for SLF4J in the
added a check for " jar " in the ` ChangePackaging ` class and implemented a ` toString ` method in ` Xml ` class to
( chore ) camel - test - infra - ftp : download file with forbidden character
fix ( demo ) : fix nk _ buffer _ clear ( )
rename ` defaultUnits ` to ` setPreferredUnits ` and update related methods to improve clarity and consistency in unit management
updated the expected date format in the DatePatternConverterTest to ensure accurate date formatting based on the event's timezone
modified return statements in Terminator. java to improve code clarity and maintainability
updated error messages for invalid URIs and improved authority handling in FileSystem, LocalFileSystem, and DistributedFileSystem classes to enhance clarity of error messages and
refactored timer to use java 8's timer instead of java 8's one
( chore ) camel - ftp : fix flaky test in ftpreconnectattemptserverstoppedit
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 6
added an ` ignore ` method to various log - related classes to provide users with information about the log being ignored
added a null check for runningTaskView in LauncherActivityControllerHelper. java to avoid potential NullPointerExceptions during task processing
remove unnecessary cast to byte in bukkitworld # getdamage
removed a call to GraphicsUtil. cleanImage to streamline image processing and improve performance
added MMapDirectoryFactory and SimpleFSDirectory classes for unmapping functionality to enhance the system's ability to unmap data
fix npe in pdfcleanupprocessor when icentry be null
updated the variable name from " field1 " to " field1 _ s " in QueryEqualityTest. java to ensure consistency with naming conventions
refactor methods in ExtendedOperatingSystemMXBeanImpl. java to improve code readability and maintainability
added functionality to install left - command buttons in the SideMenuBar to enhance user interface by allowing navigation to left - commands
added a boolean flag ` advanceWindowed ` in ` AppSettings ` and conditional calls in ` TweetActivity ` and ` UserProfileActivity `
added support for SybaseDatabase in the DropPrimaryKeyGenerator to enhance compatibility with additional database types
refactor Client class for improved readability to enhance maintainability and facilitate future development
[ java ] notify leader readiness when the sequencer be shut down.
replaced invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) and implemented shouldDelayChildPressedState ( ) method in CellLayout and Cell
added return statement to prevent premature exit in nearcachedclientmapproxy.
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
added a shutdownHttpServer method and wrapped server startup in a try - catch block to improve error handling by gracefully shutting down the HTTP server
camel - aws2s3 : fix import order
[ hotfix ] [ webmonitor ] remove unused parameter ` ` tmid''
db upgrade - remove key that don't exist in 2. 7 version of the db
hive - 22215 : hive cli should not log password in opensessionrequest ( adam szita, review by szehon
added a maxEnergyLimit variable and updated energyLimit assignment logic to ensure energy limits are correctly set based on dynamic properties
added a maxInMemorySize property to HttpClientProperties and updated webClientPlugin method to accept HttpClientProperties as a parameter to allow configuration of maximum memory
refactor Cache class implementation to improve performance and maintainability of the caching mechanism
added multiple Cucumber test classes for Cucumber functionality to enhance testing capabilities for the Cucumber framework
fix array. sqrt ( - 1 ) and array. pow ( - infinity ( ), 2 )
removed duplicate byte array declarations in Utf8StringBuilderTest. java to streamline code by eliminating redundancy
added checks for parameter sets before appending them to ensure only valid parameters are appended to the parameter data
camel - 16726 : added option to not configure output on circuit breaker
updated document frequency assertion in TestIndexWriterExceptions. java to ensure consistency in document frequency configuration
replaced String methods with Sha1HashCode methods across multiple classes to improve consistency and performance in hash calculations
added methods for retrieving enum values and their respective integer and long values in AsmRuntime. java to enhance functionality by integrating EnumMapper for
added new biome tag for mANGROVE _ SWAMP, IS _ WET _ OVERWORLD, IS _ UNDERGROUND
use an executorservice instead of a separate thread for async image loading
changed access modifiers of fields and methods from private to protected in BaseTableUpsertMetadataManager. java to allow subclasses to access these fields
updated references from " \ u0648 \ u0631 " to " \ u0623 \ u0631 " in multiple language files
replace `. getImage ( ). equals ( varName ) ` with `. hasImage ( varName ) ` in ` AbstractSunSecureRule.
camel - 19836 : camel - jbang - add -- repos option to run command
added handling for NaN scores in CrawlDbReader. java to improve robustness by preventing NullPointerExceptions during scoring processing
added cleanup method in OnStartupTriggeringPolicyTest to ensure temporary files are deleted after test execution
updated focus handling in FilterConditionEditor and FindAction classes to improve focus management and ensure proper focus behavior
[ hotfix ] [ checkpoint ] make checkpointcleaner implement AutoCloseableAsync
added a new file XPathWhiteSpaceTest. java to validate XML schema to ensure proper validation of XML schema validation in the application
fix npe in bonsai persistedworldstate when block have empty transaction
updated the FilledNewArrayInstruction class to improve code clarity and maintainability
simonstewart : add timeouts to the test
modify the return condition in OCFile. java to check if the parentPath ends with " / " to ensure correct handling of parent paths in the
added a print statement to indicate when a skin file is loading failure to improve debugging by providing feedback on file loading failures
fix ( griffin ) : add dirty flag to lgogroupedlevel2update
replaced ` new Result ( status, null, null ) ` with ` Result. UNDEFINED ` in ` TestStep. java ` to standardize
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure that the application handles null callbacks gracefully
refactor uploadjobmultipartoperation to use operation interface instead of asyncoperation
[ flink - 2594 ] [ runtime ] don't recover data at position if the journal file be miss.
disable view level for node that don't have child ( bug : http : / / github. com / freeplane / freeplane
refactor ` DataOutput2 ` to use ` sizeMask ` instead of ` buf ` and modify ` ensureAvail ` method to improve efficiency by
added @ Ignore annotation to ChaosMonkeySafeLeaderTest. java and RecoveryZkTest. java files to temporarily skip tests that
simplified assignment of targets and messages in StorageProxy. java to improve code clarity and maintain consistency in accessing the endpoints list
rename parameters in FileManager. java for consistency to improve code readability and maintainability
added support for various transform function types in TransformFunctionType. java to enhance the flexibility and functionality of the transformation process
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement and package - info classes to enhance clarity and maintainability of the code
replace rfc3280 with rfc5280 in various Java files
update version to 2.17. 4 and change cval type from int to Character in Recaf and SearchAnnotationVisitor classes to reflect the new release
replaced HashMap and HashSet with SparseBooleanArray and SparseBooleanArray in ListActivity and NoteAdapter classes to improve performance and simplify code by eliminating
refactor conditional statements in DirectUpdateHandler2. java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to improve accuracy in determining the default resource location
updated PreviewPositionHelper to accept a Context parameter and modified insets calculations based on split - screen support to enhance flexibility in handling split - screen insets
[ java ] remove redundant check for leadershiptermid in newleadershipterm method.
pmdcoverertest : fix broken unit test
refactor ByteArrayInputStream's skip logic and introduce a new Skip class to improve code clarity and facilitate testing of stream skipping functionality
refactor conditional logic for promptUpdate in UpdaterTask. java to improve code readability and maintainability
make sure we don't block if there be too many header.
added rt. jar to the STANDARD _ LIBRARIES list to support rt. jar for improved mod resolution
refactor connection handling logic in AbstractHandshakeHandler. java to improve clarity and maintainability of the code
added IOException handling and updated heterogeneous granules retrieval to improve error handling and ensure default values are utilized
added a check for response commitment before sending an error 500 to ensure that errors are only sent if the response is already committed
updated conditional checks for pendingElements and connectionQueue in HttpSession. java to enhance code clarity and correctness in polling logic
updated fade - out fake task view behavior and added feature flag checks in gesture navigation tutorial controllers to improve visual feedback during gesture navigation transitions and enhance
change log level from error to warn for unknown prefab
replaced the manual creation of ScimGroup entries with a set of external group names in LdapMockMvcTests. java to streamline the configuration
updated thirtyDays calculation in FreezeBalanceActuator and added a validation check in TransferActuator to ensure thirtyDays ad
updated path separator from'/'to File. separator in FileResolverTestBase. java to ensure compatibility with different operating systems
ggb - 2118 keep focus : show command error instead of soft enter
updated GpsMainActivity to use session description instead of an empty string to improve clarity by using session description instead of an empty string
simonstewart : don't fail test if the number of page be 3
* deprecate bufferallocatorjme from org. jme3. util. androidbufferallocator and add bufferallocatorjme
added handling for flag names starting with "! " in flag processing logic to ensure proper processing of flags that start with "! "
added a NOPMD comment to the executeQuery method in JDBCHistoryCache. java to indicate that the method is no longer needed for
updated condition to compare itemUseOp against ITEM _ USE _ GRANT _ SELECT _ REWARD to ensure correct comparison for reward item usage
add tostring to priorityelement to improve logging.
server : fix flakiness in unit test
added null check for the main command and expanded argument validation to include HELP to ensure that help is printed when the command is not provided, impro
updated LightOutputStream size from 7 to 5 in PropertyTypes, ByteIterableBase, and LongBinding classes to optimize memory usage and improve performance
changed the access modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
modified ClassWriter to include a new option for blank lines and added a new test class T8032819 to enhance functionality by allowing blank lines
removed an assertion check for length in the Person class to streamline the code by eliminating unnecessary assertions
added a null check for the file extension in the extension validation to avoid potential NullPointerExceptions when checking file extensions
replace return statement with continue in ContactRightButtonMenu. java to improve control flow by skipping the continue statement
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver. java to improve code readability and maintainability
refactor socket binding and closing logic in PlainSocketImpl. java to improve code clarity and ensure proper resource management
added functionality to manage and clear removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring removed items are
updated log message to include the element's in - view center point to improve clarity of log output for better debugging
added a new file ` bug4865918. java ` implementing a scrollbar test with a specified value to address bug 4865918
replaced the instantiation of ` VelocityEngine ` with direct instantiation in ` ADKerberosOperationHandler. java ` to simplify the initialization process and
replaced specific imports with a wildcard import and added a new case for " grouptriggers " in QuestCommand. java to streamline import
refactored account picker to use xml file chooser
added Lombok's ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enhance code readability by using Lombok's ToString annotation
updated the service configuration URI in CloudService. java to use a configurable constant instead of a hard - coded value to improve maintainability and reduce
setViewportComponent and setJScrollPane in BrowserPanel. java to improve viewport handling and enhance scrolling functionality
added support for handling forward and back key events in LwjglInput, ParticleEditor, and TWL to improve user experience by allowing
added a configuration option to conditionally retrieve MIME type parts in MoreIndexingFilter to improve flexibility in handling file types based on user - defined settings
added author pattern matching in JSDoc. java to ensure proper author formatting for method declarations
updated metric constants to use " create _ total _ count _ dbs " and " delete _ total _ tables " and " delete _ total
updated HiveDatabaseSchema to use DrillHiveMetaStoreClient and SchemaConfig instead of a list to enhance security by ensuring proper access to Hive databases
updated ` oauth2LoginLinks ` method to accept ` MultiValueMap < String, String > ` as a parameter to enhance the OAuth2 login
updated Hijrah calendar name and locale settings in DateTimeFormatter to improve clarity and consistency in calendar representation
added a condition to check if the browser is Firefox in WebAudioWrapper. java to ensure compatibility with non - Firefox environments
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the private constructor in ` InterceptorConstants ` to enable server inter
updated table creation statements in TestCompatibility. java to include default charset to ensure compatibility with the InnoDb database schema
removed unnecessary calls to ` kill ( false ) ` in ` WriterRecordBatch. java ` and ` StreamingAggTemplate. java ` to improve
[ hotfix ] fix checkstyle violation in executiongraph
added a boolean field ` hasFrom ` and associated getter and setter methods in ` Delete ` and ` DeleteDeParser ` classes to enhance the
replaced ` isSuccess ( status ) ` method with ` isMultiStatus ( status ) ` and updated related exception handling in ` SynchronizeFolderOperation
refactor tests to use a new utility method ` applicableListTests ` to improve code readability and maintainability by centralizing test logic
updated regex pattern in LogAnalyser. java to allow for additional characters in the log line to enhance flexibility in parsing log lines
( chore ) camel - google - cloud : skip integrationtest when credential be not provide
fixed - rsearch. value ( ) method accept ` ` exclusive'' instead of ` ` inclusive''
enhanced license selection logic in CCLicenseStep. java to improve code clarity and maintainability by using a more descriptive key
added a null check for globalId before accessing its global ID to avoid potential NullPointerExceptions when globalId is null
updated comparison strategy check in OptionalAssert. java to improve comparison accuracy based on comparison strategy
don't set last margin for font size if it don't exist
added a new file TestArrayCopyToFromObject. java with a test method for copying an object array to verify that the copied object is
refactor sys. path. insert ( 0, \ " " ) to escapeAsPythonString ( MorePaths. pathWithUnixSeparators (
update async state check to use! = socketstate. closed instead of = socketstate. closed to ensure that the state of the async request
feat ( forge ) : add support for ` ` visit all file''
added JUnit @ Ignore annotation to TestLlapSignerImpl. java to temporarily skip the test case due to unstable test cases
added null check for ` client. doRequest ( ) ` in ` TestInternalInputBuffer. java ` to avoid potential ` NullPointerException `
refactor autoloadCall method to accept a lower name parameter and improve lock management to enhance flexibility and maintainability of the autoloading logic
updated server version comparison logic in ` CustomPlaybackOverlayFragment ` and ` PlaybackController ` to ensure compatibility with the latest server and improve user
updated OneKDC to use " server / localhost " instead of " server / localhost " and added canonical host resolution to ensure localhost is still
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a role to
updated import statements in MP4Parser. java to include necessary classes to streamline import statements and improve code readability
added a new constant for HS2 proxy user and modified session parameter handling to ensure proper session parameters are returned based on the presence of the
( chore ) camel - hdfs : added snappy codec for compression.
added a 1 - second sleep in HttpClientTest. java to introduce a delay for better synchronization during test execution
xssfworkbook # setcelltype ( cell. cELL _ TYPE _ blank ) should set celltype ( cell. cELL
updated glyph width and height calculations in GlyphLayout. java and modified text in BitmapFontTest. java to ensure proper rendering of glyphs
refactor Fabric8IstioIT. java to streamline image loading and dependency management to improve code readability and maintainability by reducing dependency on
replaced ` ApiClient. ReportPlaybackStartAsync ` with ` TvApp. getPlaybackManager ( ). reportPlaybackStart ` in
simplify simpleauthority. readaccessfile ( ) by use a bufferedinputstream
putfromloadalloperation : check if existinmemory ( ) before call existinmemory ( )
change LENGTH _ BIT from bitwise NOT _ BIT to bitwise NOT _ BIT in ResponseFlag. java to ensure both LENGTH _ BIT and ERROR _
fix default policy for community that have read policy.
replaced direct instantiation of CompositeFont with a ConcurrentHashMap using SoftReference to improve thread safety and prevent potential memory leaks
modified prefHeight calculations by removing unnecessary getHeight ( ) calls to streamline height adjustment logic for better readability
drools - 5957 dmn dmn - improve error message for unknown variable
removed unused import statements from multiple Java files to improve code clarity and maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public to allow external access to ` finishRunningRecentsAnimation `
added null checks for node IDs and edge types in ImportContainerImpl. java and improved edge type handling in ImporterGDF. java to
[ beam - 8470 ] avoid npe in fnapachemetricsclient. getstate ( ) when error be not present
nifi - 5873 : fix bin content creation when flowfile larger than bin limit
fix ( team ) : return the core instead of null
added a check to skip copying content - length in RestTemplateCopyHeaderFilter to optimize request processing by bypassing content - length processing
updated string handling in Java2TypeScriptTranslator and refactored eval method in SyntaxTests to improve string conversion accuracy and enhance test coverage for
updated sample size calculations and added a new constant for POLPHASE _ TAPS _ PER _ CHANNEL in various classes to improve performance and
hbase canary task should only be run if - allregions option be specify in regionserver mode.
[ airlift ] remove nodemodule from cassandrasconnectorfactory
added resetCursorPosition ( ) method call in KahaDBStore. java to ensure proper cursor positioning during order processing
added minimum size constraints in CallDialog and OneToOneCallPanel classes to ensure frames do not exceed minimum dimensions
fix loss of state information during world gen
refactor tests in TestHTTPSamplersAgainstHttpmirrorServer to use JUnit 4 annotations to improve code readability and maintainability by using JUnit 4
refactor KerberosPrincipalDAO to use a dedicated DAO for removing Kerberos principal entities to improve code clarity and maintainability by centralizing entity removal logic
modified the third parameter of getTableSnapshot from'true'to'false'in StatsOptimizer. java to ensure that the third parameter is correctly
fix race condition in apr endpoint.
updated the error message to include the Base64 - encoded RSA public key in AndroidGradleBuilder. java to provide more context in the build
updated the method to retrieve the display name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` FileTranscodeVirtualFolder `
[ drools - 561 ] support spring boot root package name in kiebuilder
added an assumption to skip tests based on the version of Java to ensure tests are only executed on version 19 or higher
removed the Context parameter from the assignTargetsForSplitScreen method in AbsSwipeUpHandler and RemoteTargetGluer classes to simplify target assignment
refactor LeaderLatch class implementation to improve code readability and maintainability
added methods to retrieve and initialize zk - SNARK parameters in SolidityNodeHttpApiService to enable initialization of zk - SNARK parameters
resolve intermittent failure in some test.
added a new method ` createMediaRecorder ` in ` CodenameOneImplementation `, renamed ` longtitude ` to ` longitude `
set default value for platformName to " ios " to ensure proper identification of iOS platform in the application
refactor PageEditClient to improve code readability to enhance maintainability and facilitate future updates
added braces to conditional statements in Graphics2D. java to improve code readability and maintainability
refactor CreateVisibleSignature class to improve code organization to enhance maintainability and readability of the codebase
added error handling for outgoing frame processing to ensure graceful failure during frame processing
replaced exception handling with AccessController's privileged action for class loader retrieval to enhance security by ensuring the caller is authenticated
added functionality to update parent of categories in CategoryREST. java to ensure that only child categories are updated to maintain data integrity
updated dialog title handling in ContributionManagerDialog to use a configurable title based on the contribution type to enhance user experience by providing more des
added a ` vwap ` field and associated getter methods to the ` Ticker ` class to track the average volume of ticker data for
added functionality to display a " no widgets " view and updated bottom inset handling in the Search and Recommendations feature to improve user experience by
add api to worldrendererimpl to provide access to the render graph api
added a color setting to the NCFirebaseMessagingService to enhance the visual appearance of the notification component
updated ShadowUsbManagerTest. java file to improve test coverage and maintainability
add log for evaluation so that it don't go into infinite loop
added a call to update the selectedConfiguration in Rocket. java to ensure the selected configuration is properly updated during configuration updates
added a maximum constraint to the width and height calculations in AndroidGraphics. java to ensure that only valid dimensions are considered for rendering quality
use linkedhashmap instead of hashmap to preserve order
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory. java ` to utilize a ` ClosurePool ` for closure management
( chore ) camel - main : migrate routertest to junit 5
added WebsocketIngressIntegratedBootstrap and WebsocketPluginTest classes to establishment for WebSocket connections in the application
[ ds - 3852 ] remove unused test.
refactor authentication equality check in AbstractCasWebflowEventResolver to use EqualsBuilder to improve clarity and maintainability of authentication comparison logic
added a condition to return false if the " jnr. ffi. compile. x86asm " system property is set to " true "
refactor call node handling to use a local variable ` callNodeType ` to improve code readability and maintainability by reducing repeated method calls
added a new Insecure annotation interface and modified MessageBuffer to use it to enhance security and encapsulation of the MessageBuffer class
added new Hive configuration variables to HiveConf. java to enhance configuration flexibility for Hive settings
initialized scopes and policies as new HashSet instances in ResourceSet. java and added a null check in DefaultResourceSetService. java to ensure proper
modified the ` MultiReader ` constructor to accept a ` readerFinishedListeners ` as a parameter to enhance flexibility by allowing multiple reader listeners to be
refactor multiple classes including SecureDirectoryStream, UnixAsynchronousSocketChannelImpl, WindowsAsynchronousSocketChannelImpl, and TestFrameSize to improve
simonstewart : fix htmlunitdriver. clear ( ) in html5 _ input. html
updated ` getFirstTypeArgument ` method and class declarations to use ` final ` for better clarity to enhance code readability and enforce immutability of
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values in Int2IntHashMap to
added duration property and updated FlipTransition constructor to accept a bgColor and a duration parameter to enhance flexibility in transition effects by allowing customizable
removed a trace log statement when setting subsAreValidForStreaming to streamline the logic for setting subsAreValidForStreaming
bump version for new forge release
replaced ` System. err. println ` with ` LowLevelLogUtil. log ` for warnings regarding non - multi - release JARs and non
updated Java version from JAVA _ 14 to JAVA _ 15 and introduced Java16Validator and Java15PostProcessor classes to ensure compatibility with the latest Java
adjusted padding for background views based on replies size to improve layout responsiveness by ensuring proper padding based on the correct index
[ java ] don't call on partition backup replica if version map be empty.
added metadata handling to SeedUrl and SeedResource classes to store and retrieve seed information in a structured format
avoid npe in patternbuilder. clone ( ) when the declaration be null.
hbase - 2697 addendum : fix typo in testcoprocessorwhitelistmasterobserver. java
ww - 4441 add package name to action name if require
updated ` IterableTest ` to use ` Arrays. < Object > ` and added a test for handling null arrays to improve test coverage and ensure
added stream methods to ` MapIterable `, ` PrimitiveObjectMap `, and ` MapIterableTest ` classes to enhance stream processing capabilities for
replace return statement with a clone of notifInfo to ensure that the original notifInfo is not modified after returning it
make sure commandconstants. getstring ( ) return null if key = = null.
refactor AEADBlockCipher class to improve code readability and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap `, ` VariablesMap `, and ` WebVariablesMap `
updated the default resources mode from best to legacy in PackageResourceTable and RobolectricTestRunner to improve resource identification and ensure compatibility with legacy
added a check for ` ulSize ` and ` ulPos ` before retrieving the table buffer in ` TrueTypeFont. java ` to ensure
updated the constructor of SignPlugin to accept a list of HttpMessageReader <? > instead of a static list of HttpMessageConverter <? >
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added validation for remote repository in StandardMavenAuthenticationProvider. java to ensure proper handling of repository deployment rules
refactor AudioNode class implementation to improve code readability and maintainability
added SSL context initialization in LinkyHandlerFactory. java and refactored cookie removal in EnedisHttpApi. java to improve SSL handling
updated HiveFunctionRegistry to implement PluggableFunctionRegistry and added a function replacement map to enhance functionality and maintainability of the function registry
resolve intermittent failure in jmxsupport
modified the ` getBuildTargetForAlias ` method to accept a possibly - flavored alias string to enhance the handling of build target aliases by
camel - olingo2 - should only return 0 when there be no olingo feed
added support for EQUIVALENT _ VERSIONS in MetaStoreSchemaInfo to ensure compatibility with the latest Hive version
server : don't call advanceexpunge when expunge a vm
a a a a
replaced ` parseTitleAndContent ( ) [ 0 ] ` with ` getNoteTitle ( ) ` in ` ONDashClockExtension.
updated GoogleAuthUserConfigTableTest to use " nvarchar / varchar " instead of " int " to ensure compatibility with nvarchar data type
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes to ensure changes are applied to shared preferences effectively
replaced the ` TestController ` with a new ` TestIdleListener ` implementation in the ` StandardSession ` initialization to implement an idle listener for
[ beam - 8470 ] use string. format for bigqueryioit. testbigquerytable ( )
set the background resource for the icon in HotseatPredictionController and nullify the background in BubbleTextView to enhance visual appearance by
mondrian : fix typo in property name
add test for system runtime query in nativeworker
[ hotfix ] [ examples ] fix npe in liomesplanation
added support for passing a list of command - line arguments to AppleSimulatorController and InstallCommand to enhance the flexibility of command execution by allowing
updated the method for getAbsolutePosition to use a generic area to improve code clarity and maintainability by using a generic area
ensure that lifecyclemanager. ismanagerstate ( ) and lifecyclemanager. ismanagerstate ( ) return true
added clipping to outline in QsbWidgetHostView to improve visual appearance by applying clipping to outline
added progress tracking for flag conversion in SQLManager and enhanced string processing in BlockTypeListFlag and PlotArea to improve performance and accuracy of flag processing
updated FloatingTextRenderer to conditionally enable GL depth and function based on floating text state to improve rendering behavior based on whether floating text is excluded
svm : fix warning in nfi _ backend _ libffi _ linux.
http : / code. google. com / p / mybatis / issues / detail? id = 6
LayerValidation. java to improve the handling of regularizations in the layer configuration to enhance the robustness of the layer validation logic
added exception handling to the readWrite method in AbstractChecker. java to improve robustness by logging exceptions when reading / writing fails
changed the access modifier of colorStack from static to instance - level to allow multiple instances of GlyphLayout to be accessed without an instance of
updated the parameter of ` getMappedStatement ` and ` hasStatement ` from ` false ` to ` true ` to ensure that mapped statements are
convert tradableIdentifier and currency to lowercase in BTCEPollingMarketDataService. java to ensure case - insensitive matching for getDepth method
updated pub channel state values in ChannelStateTests. java to ensure correct values are returned for pub / sub commands
engine v2 : remove deprecate versionedhash from enginepayloadparameter
reset the trigger price field and call the onTriggerPriceTextFieldChanged method to ensure the user receives a valid pricing input
modify studentfeedbacksubmissioneditsaveaction to return a redirect if the student edit a student
remove debug output from i18npagecontroller
hbase - 2697 addendum : check if result be debug
# 183 - enh : fix for # 184 - bean state be not persist when set many bean
added a boolean field ` _ alwaysSaveUri ` and corresponding getter and setter methods in ` FormAuthenticator. java ` to allow control over whether
added implementation methods ` nSetLayerType ` and ` nSetLayerPaint ` in ` ShadowRenderNode. java ` to ensure proper functionality
updated import statements in LWChoicePeer. java and added a method to hide the popup menu to ensure that the popup menu is shown correctly when
removed duplicate initialization of the insert map in StressProfile. java to streamline code by eliminating redundancy
replaced usage of scala. collection. asScalaIterable with a static import in ExamplesJavaTestWrapper, CoreTestWrapper, and JavaTest
added null check for requests in MockServerEventLog. java and enhanced logging in HttpForwardObjectCallbackActionHandler. java to improve robustness
( chore ) camel - jbang - log warn if property file can not be load
modified the session data set initialization and logging mechanism in ClientMain. java to ensure proper resource management and improve logging clarity
added a check for multicast support and NIC status in the SetOutgoingIf condition to ensure outgoing connections only include multicast and NIC availability
updated String constructor to include an additional parameter for len to ensure proper string initialization with correct length
updated ` UnDelegateResourceActuator `, ` BandwidthProcessor `, ` EnergyProcessor `, and ` UnDelegateResourceActuator
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to enhance session management by allowing customizable invalid session strategies
include the original label in the error message when the token can not be find.
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in the Map API
refactored JdbcProxyGenerator to use a DelegatorGenerator and added a new interface JDBC4TemporaryPreparedStatementMethods to improve code organization and
added a new method ` ensure ` to ` ServerWebSocketContainer ` and updated the ` start ` method in ` DirectUpgradeTest ` to ensure
use immutabl multimap instead of immutablelistMultimap.
pdfbox - 4892 : don't create point2d. float object if the initial point be null
replaced instances of ` new Field. StableBoolean ( false ) ` with a static final array ` EMPTY ` in the ` Method ` class
added grantAccess parameter to MockAuthenticationManager and modified authentication return logic to enforcement of access control in mock authentication processes
modified ` afterJob ` method signatures to accept ` JobExecution ` across multiple classes to enhance functionality by allowing specification of job execution
added a check for file execution permissions in SharedLibraryLoader. java to ensure that only writable files are processed in the application
chore ( regen ) : update protoc to v3.15. 3 ( # 269 )
bugfix : save sample event instead of result
added new bundle constants for BATTERY _ LEVEL, ANNOTATION, TIME _ WITH _ OFFSET, DISTANCE, and PROFILE _ NAME in
change searchexpression. applyrule to accept a map instead of a hashtable
mow - 348 fix for move absolute locatable object ( on mouse move )
updated texture handling and texture processing in JoglGraphics and ProjectiveTextureTest classes to improve texture quality and enhance texture processing reliability
modified the ` setResourceToDelegate ` method to return a ` File ` instance instead of void to ensure that the output resource is writable before proceed
( chore ) camel - properties : fix property endpoint can not be intercept from route.
updated comparison from " > " to " > = " in ActionScheduler. java and adjusted expected value in TestActionScheduler. java to ensure
updated debug zip path in DbgPacker. java to ensure it is set to " / tmp / ums _ dbg. zip "
update notification overlay to show hud _ hidden property
add a pipe. resetgate ( ) method that can be use to reset the gate.
refactor TestSupplementary to ensure locale is reset after execution to ensure consistent locale handling during test execution
updated the random value for the team in the Team class from 0.8 f to 0.4 f to improve the variability of team generation for better visual
changed the type of ` activeMatchedStates ` from ` Set < MatchedStates > ` to ` Collection < MatchedStates > ` and
updated the condition to check for null or empty list of expected exceptions in SoftAsserts. java to simplify the logic for handling expected exceptions
improve error handling and logging for invalid JSON exceptions in StorageResources and StoragePluginRegistryImpl to enhance robustness and provide better error reporting during plugin
refactor call tree csv export to a csv file instead of a single report
added null checks for note and content fields in DetailFragment. java to enhance robustness by preventing potential NullPointerExceptions
added a peakTasks variable and modified the task loading calculation in AssetManager. java to track the peak number of tasks and ensure accurate loading ratio
simonstewart : set the default native event to true on window
added constants for nutch score and fetch interval in Injector. java to enhance functionality by allowing custom scoring and fetch interval in URLs
updated import statements from org. apache. commons. collections to org. apache. commons. collections4 in ScimExternalGroupsTypeResolving
added a method to check if the zkController is null and implemented shareSchema functionality in CoreContainer to ensure proper handling of null zkController and
updated size calculations to include a boolean parameter to ensure accurate representation of segment size in data processing
updated assertions in VersioningTest to check for null values instead of unmatched assertions to improve test reliability by ensuring that the JSON is
updated SQL queries to include additional filtering criteria for domain columns to enhance compatibility with PostgreSQL versions 7.3 and improve query accuracy
[ java ] appendleadershipterequest return false if appendleadershipterevent fails.
added a method to build the media type based on the exchange's content type to ensure proper media type handling in the WebClientPlugin
replaced usage of ` fill ` with ` fillSlice ` in multiple classes to improve data handling by utilizing slices instead of length prefixes
refactored conditional checks in AcidUtils and added a new test for major table compaction in TestCleaner to improve code clarity and ensure
handle null storagescheme and qualifierEncodingScheme in PTableImpl. java to ensure proper handling of null storageScheme and qualifierEncodingScheme
added new ` PojoProducersCustomized `, ` RestProducersCutomized ` classes to establishment for custom and RESTProducers
updated cache key references from " cache " to " cache _ section " in ArtifactCacheBuckConfig. java to improve clarity and consistency in cache
register for gcm cmivprotoserialization in agscmsivkeymanager.
fix wooden slab replacement in oredictionary
@ see, @ see, @ see, @ see, @ see, @ see, @ see, @
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` parameter from ` UndefinedSymbolsLinkerScript `
prepare next release 3.3. 2 : update doc tree and overview
hhh - 147486 - fix test failure on sybase
update spriteBatch draw position calculations in HelloWorld. java to ensure correct positioning of texture elements in the sprite batch
updated plot permission handling and string concatenation in PlayerFunctions, PlotId, and WorldGuardListener classes to improve clarity of plot permission checks and enhance
added a deprecated static final version constant for Lucene 8.5. 0 to signal that this version should no longer be used in favor of a new
updated print statement formatting in SSLSocketImpl. java to improve readability of the code
added a new test method ` testCastToSignedInteger ` to ` SelectTest. java ` to ensure that SQL queries with signed integers can
use semanticgraphcoreannotations. dependenciestype enum to improve code readability and maintainability
replaced usage of ` ParseContext. Type. BUILD _ RULES _ FILE _ NAME ` with ` ParseContext. Type. BUILD _
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory. java ` to stream
updated the array size of configBlocks and modified the loop index to 256 - 1 to optimize memory usage and improve code clarity
updated logging statements and output messages in BukkitMain. java to improve clarity and ensure users are aware of unsupported features
modify SQL statement handling for PostgreSQL questionmark operators in AbstractSQLChange. java and AbstractSQLChangeTest. java to ensure proper escaping of PostgreSQL
add ofall ( ) and withall ( ) method to mutablebagfactory
pdfbox - 4892 : don't use. adoc $ in adoc file ; use `. html'' instead
updated MqttBrokerConnection instantiation in NhcMqttConnection2. java to set a fixed value to false to ensure that the broker connection is
replaced direct call to getChangeLog ( ) with a null check for changeLog to improve robustness by ensuring a default change log is used
removed unnecessary instantiation of MethodResult in StaticMethodInterceptor and RocketMQGlobalPluginHandler to simplify code and improve readability by eliminating unnecessary parameters
added database drop functionality in HiveMetaStoreClient and improved logging in TestObjectStore to ensure proper database management and enhance debugging capabilities
added a currency parameter to the Bithumb API request in BithumbAuthenticated. java and BithumbAccountServiceRaw. java to
deleted ` SSEFluxWebConfig. java ` file to remove unused configuration from the project
updated method return type checks from " void " to " boolean " in JsonBuildHelper, IDocBuildTemplate, and SpringBootDocBuildTemplate
[ te ] add support for listyamls ( # 3687 )
removed the public access modifier from the equals and hashCode methods in the Marker class to restrict access to these methods for better encapsulation
refactor thread factory usage and introduce awaitTermination method for AsynchronousChannelGroup to improve code readability and maintainability by reducing redundancy
added unit tests for the ` testAddingToList ` method in ` MongoTemplateTests ` and created a new class ` PersonWithAList `
g2p : use correct coordinate space width and height for applet panel size sync.
replaced direct toolbar visibility setting with a delayed execution to improve UI responsiveness by delaying visibility changes
fix intermittent failure in servlereader. unpackfirstpagereader ( )
bugfix : don't save vm password if vr be already start
added default values for output stream and character encoding in Response. java to ensure proper handling of output stream and character encoding
added a warning mechanism to return early if assignment side effects are not present to improve user experience by avoiding unnecessary processing of assignment side effects
refactor JSON - related classes to improve code organization and maintainability
updated conditional check for icon width and height in FileUploadApiController. java to ensure proper layout of icons based on their dimensions
refactor ` RegisteredServiceProperty ` and ` JwtTokenCipherSigningPublicKeyEndpoint ` classes for improved functionality and clarity to enhance code readability and
tika - 3852 -- add basic mime type check on window
added JZlibDecoder and JZlibEncoder to the channel pipeline in NettyConnection. java to implement compression functionality for the Netty connection
added a method ` doesClassLoaderDescendFrom ` in ` Util ` and refactored existing code in ` MethodHandles ` to improve clarity
removed NoClassDefFoundError handling from the connect method in ChannelProvider. java to simplify the connection process by eliminating unnecessary error logging
added a field assignment in TextReader and implemented a test for handling an empty final column in TestCsvHeader to ensure proper handling of empty final
added compassGravity and compassMargins in NearbyMapFragment. java to enhance the responsiveness of the Nearby
added a new test method ` testInterpolation ` to ` GeoPathTest. java ` to verify the interpolation of interpolated points in the Geo
added HiveException handling in getLeafFilterBuilderByType method and improved error logging in ParquetFilterPredicateConverter to enhance error handling and provide clearer
added logic to set language for audio tracks based on stream type to ensure correct audio track language is used when the stream type is Video
added a warning log for schema compatibility issues in MicroserviceRegisterTask. java to address compatibility issues caused by schemas in newer versions
replaced System. arraycopy calls with addAll method for copying array items across multiple array classes to improve code readability and maintainability by leveraging a
ignore exception when close a datasource.
refactor InMemoryClientRegistrationRepository to use a dedicated method for creating the registrations map to improve code clarity and maintainability by centralizing client registration
added a method to reset the UI state in SchemaUpgradeHelper to ensure consistent UI state across the application
added a failedStep flag and modified conditional logic in JUnitReporter to handle pending exceptions and non - pending exceptions more effectively
add a new playerselector class to allow playerevents in entity.
added the ` implements Closeable ` interface to the ` Selector ` class to enable proper resource management for the Selector class
updated MaxConcurrentStreamsTest. java to use MultiplexConnectionPool and pre - create connections to enhance connection pooling and improve test reliability
added multiple calls to stringType ( ) in CoreOptions. java to ensure consistent string representation across the application
updated HqlQueryRenderer to handle null character and parameter cases in HqlQueryRenderer. java and updated test configurations in EclipseLinkUserRepository
updated status codes in HttpGenerator, HttpChannel, Response, and StatisticsHandler classes to ensure correct handling of HTTP status codes
pdfbox - 4892 : simplify code, a suggest by valerybokov
fix intermittent failure in unit test
updated ParquetFormatPlugin and ParquetGroupScan classes to improve file handling and metadata caching to enhance code clarity and maintainability by centralizing
updated success variable and added error handling in Jsr199Javac. java to improve compilation flow and enhance error reporting during ABI compilation
added a new ` BaseTableModelListener ` class and modified the visibility of the ` baseRenderer ` and ` baseModelListener ` fields to enable
updated the range check for the number in ServerConfig from 49152 to 65535 to ensure that the number does not exceed the maximum allowed values
added support for notifying changes for document provider authority in AuthenticatorActivity, AccountRemovalJob, and DocumentsStorageProvider to ensure proper handling of
removed a call to Log _ OC. startLogging in MainApp. java to streamline logging process by eliminating unnecessary method calls
sec - 1648 : filterchainproxy now properly handle wrapped request rejection exception.
updated references to ` length ` and ` chars ` in ` StringBuilder ` to improve code clarity and maintainability by using the current instance instead of
pdfbox - 4892 : throw meaningful exception if empty filterlist be pass to filter. decode
added a new class TbStopWatch to facilitate the management of stop events in the application
fix the initialization state of pliststore.
added deprecation annotations to multiple classes to signal that these classes are deprecated and may be removed in future versions
[ hotfix ] fix classloading issue in remote interpreter server
fix potential npe in forgehooks. getsource ( )
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest Android
corrected the spelling of " timerIdForSlot " in the DeadlineTimerWheel class to improve code readability and maintain consistency
no effective change - add simple name to beandescriptors.
updated response URL patterns from " wro / all. js " and " wro / all. css " to " static / all.
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to ensure that the latest timeseries
rename " appContextLocation " to " contextConfigLocation " in multiple files to improve clarity and consistency in the configuration
modified exception handling in OCSPChecker to use instanceof for CertPathValidatorException to improve error handling by differentiating between CertPathValidatorException and
benchmark : add option to enable or disable the output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 605 )
added a new test class ` Issue _ 815 ` for verifying slice size functionality to address issue # 815 by verifying the correct
added a shapeless recipe for waterproof and slime ball in the game registry to enhance the game's capability for waterproof recipes
mahout - 4896 : fix concurrentaccessSparsevector iterator to avoid out of bound exception
added handling for ` Shulker ` and ` Shulker ` entities in the game's lifecycle to ensure proper management of player entities
added the ` getDebugLogger ` method to ` SolrWriter ` and overridden it in ` DIHWriter ` and ` SolrWriter ` to provide
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 64 and max _ file _ length
replaced the direct instantiation of ` UpToTagChangeSetFilter ` with a call to ` UpToTagChangeSetFilter ` and added a
[ beam - 8470 ] fix checkstyle issue in beam - common / src / main / java / org / apache / beam / pipeline
refactored the BrokerRoutingManager class to improve code readability and maintainability
change volumePaint and upPaint colors from gray and green to GRAY and GREEN in CandlestickRenderer. java to improve visual consistency
modified layout parameters in InsettableFrameLayout to handle inset cases to improve layout flexibility based on inset requirements
added duration parameter to BuildTargetDurationListener and updated corresponding test cases to enhance the functionality of duration handling in rule information processing
replaced the use of ` @ Profile ` with ` assumeTrue ` in multiple test classes to ensure tests are only executed when the database profile is
added a null check for the user object before processing claims to avoid potential null pointer exceptions when processing claims
added unit test base on user forum issue
use nonblockinghashset instead of concurrentskiplistset in cassandraconnection
api : add source network id to list public ip address
added functionality to manage battery optimization settings in ShadowPowerManager to enable testing of battery optimization behavior across different Android versions
updated the version retrieval method to use a new property from __ buildProperties to improve code maintainability by centralizing version information
added unit tests for verification in NumberOfInvocationsInOrderVerifierTest. java to ensure correct handling of invocations in the VerifcationInOrder
refactor conditional evaluation logic in TRegexExecNode. java to improve readability and maintainability of the code
added " - foreground " parameter to the startProfile method in NewProfileExtensionConnection. java to specify a foreground profile for process execution
replaced instances of ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster. java ` to improve
changed the type of ` parseFieldnames ` from ` Map < String, String > ` to ` String [ ] ` to improve handling of
updated logging to use the file name instead of the file name to improve logging accuracy and ensure proper cleanup of actions list when the editor is not
improve error reporting for skipped entries in ClassFileReader and JdepsTask to enhance clarity of error messages and improve code readability
added LinkStorage and updated related storage setup in Fetcher and FetcherTask classes to improve handling of URLs and manage links more effectively
updated BubbleBarBubble population logic to include an existing bubble parameter to enhance functionality by preventing null pointer exceptions
camel - 17748 : fixed log issue in scheduledjob and scheduledroutepolicy
removed array conversion from methods in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to simplify method signatures and improve code readability
[ java ] optimalmulticastdelaygenerator should be use when the destination be not multicast.
updated Gson initialization in ClientInformationResponseView. java to include client ID, client secret, issued at, and registration access token to enhance JSON
added a conditional check before setting the average price for orders to ensure orders are only processed when the average price is non - zero
simplified the rawExecutionReports ( ) method by directly subscribing to executionReports to improve code readability and maintainability by reducing redundancy
added a fail method to handle exceptions in LdapTimeoutTest to improve error reporting during test failures
don't try to read lexicon if it don't exist
updated password handling logic in AmbariServerConfigurationHandler. java and adjusted test expectations in RootServiceComponentConfigurationResourceProviderTest. java to ensure
added a check for already parsed segments in ParseSegment. java and implemented the SegmentChecker. isParsed method in SegmentChecker. java to ensure
[ flink - 25836 ] [ yarn ] add configuration for application attempt failure validity interval
added handling for ClassNotFoundException in the GeoserverInitStartupListener to log warnings when the H2 driver is not included to improve error handling and
hbase - 25836 update hbase. hbase. mapreduce. tablesnapshotinputformat. scanner. readtype from hbase. client. readtype
added fixed height and width options to the LoginInstanceRequest class to enhance security by allowing dynamic adjustment of login dimensions
added a corner radius parameter to multiple update methods in ActivityControlHelper, WindowTransformSwipeHandler, ClipAnimationHelper, LauncherLayoutListener, and
updated COMMANDS _ TO _ REMOVE string array and added filter sets for additional filters in QFile. java to enhance filtering capabilities and improve
txnhandler : retry on connection pool to work around bcp bug.
queue backup prepare operation : txncheckReserve ( )
added a public final char array array in the FirstOfStringsMatcher class to allow modification of the strings array during pattern matching
updated DELETE statements in multiple files to replace " DELETE ROWS " with " DELETE ROWS CLIENT SELECT " to improve clarity and accuracy in SQL
don't retry on sockettimeoutexception in baseservicenotfoundexception.
added support for rapid install types in AdbHelper, AndroidDevicesHelperFactory, BuckConfig, and RealAndroidDevice classes to enhance functionality
updated the SeedPattern regex in SortTest. java to allow optional specification of the seed pattern
refactor MultimapSubject to improve handling of key values and string representations to enhance code clarity and maintainability by using a factory for better type safety
modify the return value of the method to return - 1 instead of using waitForLauncherObject for the hotseat to simplify the logic for determining
don't transcode video if the mediaitems don't exist
added localization support for date strings in the Picker class to improve localization of date values for better user experience
camel - cxfrs : cxfrs consumer should not throw exception if the consumer can not find the customer
hhh - 147483 fix postgresql dialect exception conversion for pessimisticlock
added null check for stmtHandle in TestJdbcDriver2. java and improved exception handling in HiveStatement. java to enhance test reliability and
exclude usestimersinpcollections from validatesrunner test
updated HTML formatting in GpsSimpleViewFragment. java to include the formatted file name to enhance clarity of the file displayed in the user interface
[ java ] remove unused ` leadershiptermid ` parameter.
refactor HttpSender to use'this'keyword for instance variables to improve code clarity and maintainability by centralizing access to the HttpExchange instance
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated method names in AppOpticsPropertiesConfigAdapter to improve clarity and consistency to enhance code readability and maintainability by using a more descriptive
added null check for the tree before retrieving markers and improved equality handling in Markers and SearchResult classes to enhance robustness and prevent potential NullPointerException
fixed nullpointerexception in xwpf characterRun font size calculation
[DoCoMoResultParser ] fix email parsing in AddressBookDoCoMoResultParser. java to ensure proper handling of email
added logic to handle null exclusions in RawMavenResolver to ensure proper artifact resolution when exclusions are absent
added support for quoted and base currency in DSXAdapters and DSXPairInfo classes to ensure proper initialization and support for the quoted currency
[ hotfix ] [ test ] fix checkstyle violation
[ drools - 90 ] fix incremental compilation failure when kmodule POM be invalid
updated the initialization of ` copy ` in ` NativeArray ` to use ` finale - k ` and added a conditional check before defining the
( chore ) camel - jackson : fix typo in jacksondataformat
[ gr - 34836 ] use @ unreflectgetter / @ unreflectsetter in hostfielddesc.
added a new method parameter annotation for " completedStage " in the DefaultNullnessAnnotations class to support handling of CompletableFuture types in the database
updated the calculation of mFreezeCheckPoint in PlaybackController. java to allow more time for playback to complete
added ` Whitebox. setInternalState ` to ` AbstractCommonPowerMockRunner ` and removed ` RunNotifier ` from ` PowerMockRunner `
updated the parameter from ` typeCode ` to ` realType ( ) ` in ` TCUtility. unmarshalIn ` to ensure correct data type
updated TabsAndIndentsVisitor to handle method invocation blocks more accurately to improve indentation for method elements in the code
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to ensure compatibility with JUnit framework
replace ` write ( newColumn ) ` with ` wrappedText ` in the ` write ( " < td > < td class ='wrapped
added null check for execution context retrieval in SimpleJobRepository to ensure execution context is updated only when the latest execution context is available
added a conditional check for new media folder visibility before adding it to the root folder to ensure only new media folders are included in the folder hierarchy
added null checks for actor and secondWidget in SplitPane to ensure proper handling of actor associations and prevent unsupported operations
add support for handling Parameterized types in RemoveUnusedImports. java to ensure proper handling of parameterized types in the code
added null and empty checks for modFileInfo and modInfos in UniqueModListBuilder. java to enhance robustness by handling potential null or empty
changed the logger from a non - static final logger to a static final logger in TicketGrantingTicketImpl. java to optimize logging performance by
updated SQL string value from " SNAPPY. RLE " to " SNAPPY. RLE. 81 + 12 " in Physical
added a method ` isValue ( String value ) ` to ` AttrData ` and updated ` Converter ` to check for value presence to improve
added support for character modifier keys in US International PC in CPlatformResponder. java and LWCToolkit. java to improve handling of
[ java ] use a mediumdrivertestwatcher to track publication connection timeout.
added a check in GTVGFilter to return false for requests that start with " / favicon " or " / css " or " /
added assertions to verify the installation of a wellbeing test APK to ensure that the APK installation is successful and that the device is rooted
no effective change - remove oracle ansi sqlrowlelimiter
added a mock implementation for MultiMap in TestSimpleBodyHandler and updated assertions in TestVertxTLSBuilder to ensure proper handling of secure transport
updated JavaLib1. java file references in DiffRuleKeysScriptIntegrationTest. java to ensure compatibility with the latest library version
added a ` mIsDismissHapticRunning ` flag and modified the conditional check in ` TaskViewTouchController. java ` to ensure that
bump common for explosion explosion explosion cause
updated the ` getItemId ` method in ` SymbolInputAdapter ` to use ` symbols. get ( position ). hashCode ( ) ` to ensure
updated parameters for limit _ bids and limit _ asks from 10 to 50 in Bitfinex. java and BitfinexPollingMarketDataService
replace single quotes with double quotes in the result to ensure proper formatting of string values in the output
[ hotfix ] [ runtime ] fix zookeeperleaderelectiondriver. tostring ( ) to contain configmap name and latch path
refactor SqlSessionFactoryBean to improve code readability to enhance maintainability and facilitate future modifications
[ 3.0 ] fix npe in tripleinvoker when generic method be null ( # 9685 )
replace error handling in PolygonRegionLoader with throwing an exception to improve error reporting by providing a more descriptive exception
added a method to check if a threadlocal Deadline is present and registered it first to improve error handling and ensure proper timer registration
nettyrequestexecutor should return an ioexception when a closedchannelexception be throw.
added null check for genres before setting text to avoid potential NullPointerException when genres is null
[ flink - 2594 ] [ checkpointing ] fix checkpointcoordinator. reset call in region recovery.
fix ( prefab ) : add mappedcontainercomponent to the prefab api
walversion : avoid npe in walnode. getoldpinnedmemtableinfo
removed unnecessary whitespace in ` Endpoint. java ` and added a new test case in ` HttpTest. java ` to improve code readability and ensure
fix a typo in the package - info. java file for the tutorial background class
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL Server escape characters to ensure proper handling of special characters in SQL queries within
added null safety annotations to constructors in CamelModule to enhance code robustness and prevent potential NullPointerExceptions
replaced the conditional check for null error handling with a utility method to improve code readability and maintainability by using a standard utility method
changed package and import paths from ` com. kenai. jaffl ` to ` com. kenai. jaffl
improve error handle for unsupported image type in cropperutils.
removed the appName parameter from the configure methods in InputRC to simplify configuration by relying on the reader's app name instead
[ gr - 20836 ] ignore deps during catalog install.
simonstewart : use ` -- headless = chrome ` instead of ` setheadless ( true ) `.
updated the value assignment to use ` value. intern ( ) ` instead of a direct reference to ` value ` to improve memory efficiency by avoiding
added support for " MOVE " status in recv _ status checks to enhance functionality by allowing additional status checks for database operations
updated date formatting patterns in FixedDateFormat. java to ensure accurate date representation in the application
replaced ` org. apache. curator. shaded. com. google. common. collect. Lists ` from ` org. apache.
[ hotfix ] [ network ] fix check for release buffer repeatedly.
modified permission checks for visiting other and administrators in Visit. java to ensure only authorized users can visit untrusted plots
don't register jabber provider if it be already register.
updated the conditional check in BasicURLNormalizer to include curly brackets to ensure proper URL normalization by validating base64 encoding
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a check to compare the lock rate against the enc1 and enc2 parameters to ensure accurate comparison of encryption rates
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified ` generateProjects ( ) ` to return an ` ImmutableSet < Path
replace isNativeDigit with isZeroDigit and add bounds checking for calendar ID to improve code clarity and prevent potential ArrayIndexOutOfBoundsException
added a new file MSwingUtilities. java that includes utility methods for image scaling to enhance image rendering quality and improve error handling
( chore ) camel - mail : use defaultasyncproducer instead of defaultproducer
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure that authentication scopes are refreshed
added unit test base onexceptionhandleandthrown exception handle on exception
added Main and ScriptRenderer classes to implement script rendering functionality in the scripting framework
added a condition to check if ` _ inputState ` is not ` __ NONE ` in ` Request. java ` and created a new test
updated descent calculation and added isDescendant method in Group and FlickScrollPane classes to ensure proper focus handling and prevent potential issues with child
replaced reportFailure calls with context. runCloseHooks in DeploymentManager. java and added a new test in DeploymentTest. java to ensure
add a stacktostring method to lexiconrecipemappings to make the recipe match the actual recipe.
increase timeout after interrupt in constanttimertimebackofftest
simplified StringUtils import statements in LoincHandler. java to improve code readability and reduce redundancy
remove dependency on edu. stanford. nlp. net. classpathurlstreamhandler from jollyDayHolidays
added a new utility class FieldUtils for enhanced field access methods to improve code organization and facilitate easier retrieval and manipulation of fields
modified the assertion logic in DeferredAttr. java and added a new DoubleStaticImport. java file to improve code clarity and facilitate static
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding adjustments for custom content to improve
added error handling for update settings with save last account in XabberAccountManager to ensure users are notified of invalid tokens during account synchronization
added a new method ` setvar ` to handle command line arguments to improve user experience by providing clear help information when modifying variable values
fix animaltameevent. onAnimalTame not fire.
improve handling of unsigned range in windowframe.
pdfbox - 4892, pdfbox - 4893, pdfbox - 4892, pdfbox - 4893 :
added functionality to set the application mode to enhance user experience by ensuring the application operates in the correct mode
added support for configuring Docker file path and build arguments in ImageFromDockerfile. java and created a corresponding test in DockerfileBuildTest.
added a null check before creating a new ThreadInfo instance to avoid potential NullPointerExceptions when accessing threadInfos
updated the condition for sweepAngleOuter in PieChartRenderer. java to use a utility function to improve code readability and maintainability by using a
[ hotfix ] [ checkpointing ] add log for checkpointing and exception handling
added new tables and views in mmm Schema. java to support additional data types in the system
added a minimumSimilarity parameter to the FuzzyQuery constructor and updated related instantiations to enhance query handling by incorporating a minimum similarity
replaced ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView. java ` to standardize method
add a warning to the encoder that the immediateflush property should be set within the enclosingappender.
added additional auto - configuration packages to ZipkinAutoConfiguration to enhance auto - configuration flexibility for RabbitMQ and Kafka
modify JLayer to handle null components correctly and add a new test class for bug6875716 to ensure proper handling of null components and validate
updated import statements to use the non - shaded version of Google common libraries to ensure compatibility with the latest version of Avro
improve handling of unwind / return block in case of synchronize method.
added getter and setter methods for legacyRenderer in Label. java to enhance functionality by allowing customizable legacy renderer
replace intToFourBytes method with Ints. toByteArray method in AbstractJweDecrypter and AbstractJweEncrypter classes to improve
added null check for mObserver in NavigationModeFeatureFlag. java to prevent potential NullPointerException when mObserver is null
modified the ` thenComparing ` method signature in ` Comparator ` and added a new ` Department ` class with a manager and HR code
refactor methods in DocIdSet class to improve code readability and maintainability
updated the end time setting for anomaly results to use the currentKey from the bucketMillis to ensure anomaly results accurately reflects the current time
added exception handling for parsing values in VisualScoreTagTest. java to ensure that NumberFormatException is never thrown during parsing failures
added a class loader setting in MockFactory to ensure the correct class loader is used for mock classes
add a new format class and override the format method in the ConverterWithEnumFormat class to facilitate the conversion of enum values to string
added a new constant PATTERN _ YYYY _ MM and updated the DateFormat instantiation to use this constant to improve code readability and maintainability by
refactor JAWTRenderer class implementation to improve rendering performance and maintainability
camel - 14850 - camel - aws2 - * : enable autowire on the lambda client, regen doc
bugfix : prevent mac address from be generate for this nic in the network
added a condition to check for authorization header in ProxyServlet. java to ensure proper handling of authorization headers in the proxy servlet
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to improve asynchronous execution based on context in creation
added a ` getDetails ( ) ` method to ` Authentication `, ` AbstractAuthenticationToken `, and ` UsernamePasswordAuthenticationToken ` classes to
updated the random number generation logic in SolrTestCaseJ4. java to enhance variability in testing scenarios
replace ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to ensure proper termination of output sequences
updated formatForConsole method to accept a Locale parameter to ensure consistent formatting across different locales
updated imports and added logic to handle named arguments in GroovyParserVisitor. java and GroovyPrinter. java to improve handling of named arguments and ensure
added calculations for inset limits in Border. java to ensure proper inset calculations when rendering elements
refactor GestureState initialization to use DEFAULT _ STATE instead of a new instance to improve code clarity and maintainability by centralizing state management
updated date formatting from Joda Time to ISO DateTime in LlapServiceDriver. java to ensure compatibility with modern date - time API
rename openblas. java and openblas _ nolapack. java files to improve clarity and consistency in naming conventions
torrent storage should be close to avoid resource leak
added synchronized keyword to initTxnMgr method to ensure thread safety during initialization
updated timeout values in AbstractFullDistribZkTestBase. java and increased socket timeout in AbstractDistribZkTestBase. java
log4j2 - 1343 added searchresults. java file.
refactor thread CPU refresh handling in CPUSamplerSupport. java to improve code clarity and maintainability by centralizing refresh logic
initialize body before object creation in bytecodenode.
added new versions " 8.10. 0 - cfs " and " 8.10. 0 - nocfs " and marked these constants as deprecated to
updated feature flag from DISABLED to TEAMFOOD in FeatureFlags. java and modified app icon check in AppIcon. java to improve app
added a new API endpoint to retrieve instance pools to enhance the API to return tenant pools for the current instance
lucene - 9441 : fix npe in topfieldcollector. canEarlyTerminate ( )
added support for ` isToString ( ) ` in InlineBytecodeGenerator and updated import statements in InlineByteBuddyMockMakerTest to enhance
added logging statements to ` CxxCompileStep ` and ` CxxPreprocessStep ` classes to improve error handling and debugging for compilation and preprocessing processes
add stringutil. removecharacter ( string str, charToRemove ) to remove non - existent character from string.
fix metadataserviceprovicetest fail ( # 9884 )
[ drools - 557 ] add datatransformer interface ( # 557 )
changed the type of the values array from Collection <? > to Number [ ] [ ] in DistributionGraph. java to improve type safety and
removed the ` interesting ` boolean value from the ` visit ` method in ` FormatStringChecker. java ` to simplify the code by eliminating
added to the assignment statement in ElectionContext. java to ensure core is properly initialized before use
refactor ITestDbTxnManager class to improve code readability and maintainability
refactor connection handling in DatabasePlatformFactory to use try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added testMapModel method implementation to CodeFirstPojoClient and CodeFirstPojo classes to enhance functionality and ensure consistency in model handling
pdfbox - 4892 : simplify code, a suggest by valerybokov
updated selection handling in ScaleDialog. java to ensure proper selection state and prevent null pointer exceptions
replaced ` updatePlayerStepStatus ` with ` tickBelt ` in ` ItemTravelBelt ` and ` FabricMixinPlayer ` classes to
replaced IOException with a warning log message and added logging for appearance stream creation to improve error handling and provide better visibility into appearance stream creation issues
replaced ` SortedSet ` with ` LinkedHashSet ` in ` ExecuteSqlCommandStep. java ` to maintain insertion order for keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer. java to allow for
updated the preload library version in dc1394. java from " libdc1394 - 22 " to " libdc1394 - 25
added a conditional check for ` agentSupport ` before setting all constructors to public in ` MainMockTransformer. java ` and created new test files
pdfbox - 4892 : don't decrypt cosstring / cosarray if it's an instance of cosstring / cos
add ability to set the title of java. awt. xtoolkit
modify depth calculation based on pixel size in XRSurfaceData. java to ensure correct depth based on the pixel size of 32
added error handling for response body reading in OkHttpDataSource to improve error reporting for unsuccessful responses
modified the exit method in TopLogging to accept an Throwable parameter to enhance error handling by providing more context on the exit process
updated the calculation of the start index in NativeRegExp. java to ensure correct starting index based on the regexp's global state
planner - 468 ignore test until planner - 468 be fix
[ hotfix ] fix typo in defaultallocator
added ` cleanEntriesWithoutFeeds ` method to ` DatabaseCleaner ` and ` FeedEntryDAO ` to facilitate cleanup of entries
changed the return type of appendToLabel from void to AtomicCounter to enable method chaining for better usability
[ java ] use a more efficient idle strategy for medium driver.
added handling for not modified headers in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure headers are only enabled when the response status
refactor ` InstrumentationPartialEvaluationTest ` to use ` ToolEvalNodeFactory ` instead of ` SpliceInstrumentListener ` to improve clarity and
removed the ` paintTabArea ` method from ` SynthTabbedPaneUI ` to streamline the painting process by eliminating unnecessary dimensions
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an optional ` args ` parameter to enhance flexibility
( chore ) camel - ftp component : added getfileseparator ( ) and isabsolute ( ) method to file component
added a new method ` build ` to ` JavaProvenance ` for building JavaProvenance with specified classpath and project ID to enhance
added logging for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry. java to improve traceability and debugging for Hive UDFs
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest. java to accommodate longer state updates and improve test coverage
skip delivery of hint for deleted columnfamily. patch by jbellis
modify error handling in NativeErrors. java to check if the output file can be writable to improve robustness by providing clearer error messages when the
added package info retrieval in LauncherModel. java to ensure that application info is validated before proceeding
twk upgrade : don't fail if the db upgrade fails
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for non - skippable exceptions to
updated regionMatches method in LineReaderImpl to use regionMatches for case - insensitivity checks to enhance robustness by ensuring case - ins
added new import statements and refactored data table handling in Recipe. java to improve code clarity and maintainability by consolidating data table descriptors
added import and modified task dismissal logic in TaplTestsTaskbar. java to ensure that all tasks are dismissed when the app
add dbupgradencetemplate interface to upgrade system vm templates.
modified connection handling logic in LdapClient. java to simplify null checks and improve code clarity
refactor index comparison logic in SequenceAction. java to improve readability and maintainability of the code
add keyspace support to cassandraserver. patch by jbellis
added a check to skip synthetic fields in ReflectUtils to avoid processing non - synthetic fields
added a LoggerProvider class to configure logging to facilitate logging configuration for better debugging and monitoring
changed the data type of ` builder ` and ` values ` from ` ImmutableMap. Builder ` to ` ImmutableMap < String, Object > ` to
added a warning log for deprecated spring context configuration in SpringFactory. java and updated related tests in SpringFactoryTest. java to warn users when
[ hotfix ] [ table - common ] add deepstart method to startables
remove deprecate Shape. reservePrimitiveExtensionArray ( ) and its implementation in ShapeImpl. java and ShapeImpl. java to streamline code
implement ilasertargetblock interface in blockbuildcraft. close # 3583
refactor object name validation logic in AbstractJdbcDatabase. java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2. java to improve code cleanliness and reduce unnecessary dependencies
http : / / issues. apache. org / jira / browse / amq - 3682 - fix unit test failure
removed null checks for ` p ` and ` handlerName ` in ` RequestHandlers. java ` to simplify the code and improve readability by avoiding
replace'-'with '.'in log file name to ensure consistent formatting of log file names
filter the PYTHONPATH environment variable before adding it to the pythonEnvironmentBuilder to ensure only the relevant Python module search path is included in the environment
updated audio format validation and error handling in DirectAudioDevice and Toolkit classes to ensure that audio data is valid and provide clearer error messages
handle null enums in ElasticSearchStringLookupService to ensure robustness by returning an empty Optional when enums are null
improve error message when unexpected end of segment
added initialization of WebSocketPolicy in WebSocketSession. java to ensure the correct policy is used for WebSocket connections
simplified static field initialization logic in Java2TypeScriptTranslator to improve code clarity and maintainability by consolidating logic
updated server context creation to use a dynamic web root to enhance flexibility by allowing dynamic configuration of the web root
( chore ) test : migrate tests from junit 4 to junit 5
don't expose monitored vmutil. isattachable a we don't need to
replaced the ` printHeaderObject ` method with ` createHeader ` method in multiple formatter classes to improve code clarity and maintainability by centralizing
consolidated import statements for trade - related classes and added a placeholder method for placing stop orders to streamline import statements and prepare for future implementation
added multiple calls to buffer. reset ( ) in ReduceRecordProcessor. java to ensure consistent buffer state during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or setBackground is not set
updated comparison condition in FloatingDecimal. java to use'> = 8'instead of'> = 3'to ensure correct handling of decimal
updated property type validation in ` PropertyDescriptor. java ` and added a new test class ` Test7189112. java ` to ensure
removed maxVersion parameter from getVersions method to simplify version retrieval by eliminating unnecessary parameters
don't set original http header if uri be not secure
refactor task visibility and animation logic in RecentsView and TaskView classes to improve visual feedback during modal state transitions
added a field parameter to multiple checkState checks for multi - value and map - key fields to ensure that unsupported single - value fields are properly validated
added new video formats in DemoUtil. java to enhance compatibility with new media formats
removed unnecessary import statements from PersistenceProvider. java to simplify the code and improve maintainability
hbase - 19836 [ execrpc ] addendum ] use hadoop's log prefix
added diagnostic logging and tests for union and fixed fields in TestSpecificCompiler. java to improve clarity of warning messages when compiling code with - X
added a return statement to the session creation logging in WebSocketEndpoint. java and implemented a test for session closure in WebSocketIT. java to ensure
improve performance of statemonitoring service
updated references from " OpenSymphony Group / / XWork 2.2. 3 / EN " to " Apache Struts " to ensure compatibility with
modified the stream stop handling in WebCamInputPanel. java to ensure proper cleanup of video tracks when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
updated import statements in GMLExamples. java to reflect new package structure to improve code clarity and maintainability by using the appropriate geot
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in ` TargetType58. java ` to improve functionality by allowing
hhh - 10956 : fix nullpointerexception in composite identifier conversion
rename ` ` findfulltext'' to ` ` download full text''
refactor URIRegisterExecutorSubscriber to use a custom list of URI registrations to improve code clarity and maintainability by centralizing URI registration logic
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code clarity and maintainability
updated OpenSubtitle. java to conditionally use the OSDb hash based on its presence to improve robustness by handling cases where the OSDb
added token transfer functionality based on contract parameters to enhance security by ensuring only valid token IDs are transmitted
camel - 5957 : camel - ftp should change current directory when delete ftp file.
updated method reference from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration. java ` to ensure correct configuration
updated MapJoinOperator and HybridHashTableContainer classes to enhance join result validation and improve hybrid hash join logic
modified the constructor of HTTPSPDYAsyncEndPoint to include an AsyncEndPoint parameter to enhance endpoint functionality by providing access to the endpoint details
added " id " extra to intent extras across multiple adapters and fragments to ensure that the correct identifier is passed to the intent for better tracking and
removed " Proxy - Authorization " from disconnection methods in HttpURLConnection to streamline connection disconnection logic for proxy authentication
updated the ` _ numChildren ` variable to use ` AtomicInteger ` instead of ` int ` to ensure thread safety when incrementing the number of children
updated import statements and modified variable declarations across multiple files to improve code clarity and maintain consistency in import statements
disable a test in ValueTypeTests by setting the enabled attribute to false to ensure that NullPointerExceptions are not thrown in the test execution
resolve split - packages : move everything from kie - api under kie - api
changed predicate types from IN / OUT to NOT _ IN in multiple predicate classes to enhance clarity and consistency in predicate validation logic
updated exception handling to use Exception instead of AccountNotFoundException to improve error handling and maintain consistency in exception management
added null check for witnessService before validating witness permission to avoid potential NullPointerException when witnessService is not initialized
updated the way ` taggedCol ` is constructed in ` JoinDesc. java ` to improve clarity by using ` getExprString ( ) `
added a check for Javadoc presence before setting the JavaDoc to ensure that the JavaDoc is only set when the Javadoc is present
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder. java ` and add new classes ` RedefineInterfaceCall
fix issue with animation not be apply when swipe away from tabs
[ hotfix ] [ table - common ] return an unregisteredmetricsgroup instead of unsupportedoperationexception
modified the calculation of the y - coordinate in Polygon. java to ensure the correct transformation based on the original coordinate
fix compile error in cacheconfigtest
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 2974855
refactor ShadowCookieManager to improve code readability to enhance maintainability and facilitate future modifications
added authorization checks for dropping external tables in Hive to ensure proper handling of authorization for managed tables during database operations
added a brace to the conditional statement in Stage. java and modified the background drawing method in ProgressBar. java to improve code readability and ensure proper
truffle : cache byte order for language capability to improve performance.
updated the property name for PING _ TIMEOUT from " namedpipesocketprovider. timeout " to " windowsprovider. timeout " to ensure
updated initWebViewLogin method to accept a base URL parameter and added logic to load the login URL based on the version of WebLogin to enhance
updated the error message for JDBC type specification in CallableStatementHandler. java to improve clarity and accuracy of the exception message
removed the @ RequestParam annotation from AuditEventsMvcEndpoint and updated date format in AuditEventsMvcEndpointTests to simplify API request parameters and ensure date
rename ` ExponentialTimer ` class to ` PreciseThroughputTimer ` to improve clarity and consistency in naming conventions
added soft body removal functionality in SoftBodyTest. java to ensure proper resource management and prevent memory leaks
[ hotfix ] [ table - common ] make interface public
[ hotfix ] fix typo in log message
add test to ensure that there be no redundundant namespace.
added null check for redplasma in bcstatcollector to avoid crash.
added HTTP / 2 header prefix handling in BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
replace ` plot. removeauthorized ( ) ` with ` plot. removetrusted ( ) ` and ` plot. removeauthorized ( ) `
updated line width calculations in SimpleReport. java to ensure correct formatting of report outputs
removed the option to ignore symbol files in JavapTask and added a new file T6863746. java to streamline the
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class from the streaming package to simplify the
refactor error handling for contract types in Runtime. java to improve clarity and maintainability of contract validation logic
make sure input3d. createinput3d ( ) be call only in applet
ignore flaky test in kinesisintegrationtests.
scripttagpayloadreader should return false instead of throw parserexception
added an @ Override annotation to the getRepositoryFactoryBeanClassName method to ensure the method overrides the implementation of the repository factory
changed return types of ` getExecutableCommand ` and ` getExecutableCommand ` methods from ` String ` to ` List < String > ` to
fix issue with ios gLES20 constructor
deleted the UploadPathActivity. java file to streamline the codebase by eliminating unused activity references
updated return statements to check index options when calculating term frequency to ensure accurate frequency calculations based on document indexing options
fix : implicit constructor be not set correctly in constructor. ( # 2858 )
added a ` Database ` parameter to multiple ` populateValidateNullableIfNeeded ` and ` populateValidatePrimaryKeyIfNeeded ` methods to ensure compatibility with OracleDatabase
refactor Database class to improve code readability and maintainability
updated the SpringApplicationBuilder class to improve application functionality and maintainability
removed unnecessary whitespace in DefaultIndexingChain and PointInSetQuery classes to improve code readability and maintain consistency in formatting
removed substring operation for rawName in SchematicHandler. java to streamline data processing by eliminating unnecessary substring operations
fix : collectionassert. unmodifiable ( ) return list instead of list
changed the visibility of the Option enum from static to public to allow access to the Option enum from other classes
updated dialog handling in Compose. java and ComposeActivity. java to improve user experience by ensuring proper dialog behavior based on character length
replaced the toggleKeepInSync ( ) method with a direct call to getFileOperationsHelper ( ) to streamline file synchronization logic by eliminating
replaced DatatypeConverter with Base64's getMimeDecoder method in ImageUtil. java and added unit tests in ImageUtilTest. java to
added new files ControllerCounter. java and DBCallback. java to implement a counter for document analytics
added'final'modifier to the parameter in the deleteTicket method to enforce immutability and improve code clarity
added a new file FlywayMigrationRunner. java that defines anXmlApplicationContext for flyway configuration to facilitate the migration of database
` ` 0'' in hashmap. contains ( key, value )
update version number from 0.6. 0 to 0.7. 0 to reflect the new release
updated ` modify ` method in ` CompressionCodec ` and ` ZlibCodec ` classes to use ` @ Nullable ` annotation to enhance null safety
modified LauncherHelper to handle null main value and added new test cases for jar creation to improve robustness of the jar creation process and ensure proper
rename test classes for consistency to improve code readability and maintainability

cellcopypolicy : remove clone from cellcopypolicy and add clonefromstring ( )
added a method to reset the icon load result in FloatingIconView. java to ensure consistent behavior when resetting the icon load result
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager. java ` to
added landscape orientation checks and updated layout dimensions in IconRecentsView. java to ensure proper item decoration when the screen orientation changes
deleted the AddAdapter. java file to remove unused or redundant code
bugfix : nonstaticlifter should not do a nopout if there be no constructor
modified the formatting of the conditional statements in OpTraitsRulesProcFactory. java for consistency to improve code readability and maintainability by standardizing
hbase - 25836 testlogwatcher. testlogwatcher. testlogwatcher. testlogwatcher. testregisteredmessage
added a print statement in Java2TypeScriptTranslator. java to enhance output formatting for TypeScript translation
updated SDK version from " 4799589 " to " 4913185 " to reflect the latest version release
added a check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor. java to ensure that the proxy is only added
removed the singleton lock configuration from TypeCachingBytecodeGenerator to simplify the code by eliminating unnecessary configuration
updated callback method names to differentiate between response and forward classes to improve clarity and accuracy in callback handling
added an ` appendToFile ` method to the ` writeFile ` method and modified the ` writeFile ` method to include an ` append ` parameter to
updated MavenExecutionContextView and MavenRepositoryMirror to check for settings and return the mirrors instead of an empty list to ensure that mirror settings are
added a name parameter to the constructors of BuildRuleSourcePath and PathSourcePath classes and updated the PathSourcePath constructor to provide a meaningful name
updated OAuth20CallbackAuthorizeEndpointController to use the redirect URI directly to simplify the logic for determining the service client based on the redirect URI
replaced the use of ` values ( ). toArray ( EMPTY _ ANNOTATION _ ARRAY ) ` with ` AnnotationParser. toArray ( ) `
updated methods to use ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` instead of ` getBadgedDrawableForUser `
updated the default value for line separator in GlobalConfiguration to specify that LF or CRLF are default lines for output
CMUTests to validate that the class be a derivation of doubledata instead of implement.
thymeleaf / thymeleaf / thymeleaf / templates / base / s / { id } / { name } / { id } / {
chore : update java and python dependency ( # 269 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw ` IOException ` and added a new workspace structure to improve error handling
updated javadocs in CountersReader. java to improve code clarity and maintainability
updated the ` getContainerType ` method to directly return ` targetParent. containerType ` instead of returning ` targetParent. containerType ` to
hbase - 18801. hbase. ipc. server. reservoir. initial. buffer. size should be deprecate in hbase
[ native ] add support for window function in native query
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types based on their presence and real parameter data to improve method
updated test cases in TestFSTs. java to improve accuracy of test cases
use getLabeltop ( ) and getLabeltexttop ( ) instead of getylabel ( ) + getylabelsize ( )
hbase - 25836 improve the handling of the initial region split size.
updated model loading behavior in LauncherClings. java to ensure proper state management during model loading
replaced instances of ` keys ` and ` updatesAt ` with ` keys ` and ` updates ` in the ManagedSelector class to improve clarity and
added a set of excludedDatasources to the SpringDataSourceBeanPostProcessor class to allow configuration of datasource exclusion criteria
added undo info store in TableValuesView. java and removed null check for ` cb ` in TableValuesPanel. java to improve undo functionality
allow kinesis client to connect if it's a sdkclientexception
refactor channel handling in VelbusSensorHandler to use a loop for channel identification to improve code clarity and maintainability by encapsulating channel
disabled unfavorable benchmarks in LocalCacheSelectorCode and enabled tests in BoundedLocalCacheTest to improve performance by preventing unfavor
added a test for illegal database names in IoTDBSessionSimpleIT. java and improved error handling in PartialPath. java to ensure that
add a call to resetnewfiles ( ) in the GarbageCollector class to ensure that new files are properly cleared during the garbage collector process
rename ` desiredWorkspaceLeftRightOriginalPx ` and ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and update
refactor whitespace and formatting in CharTokenizer. java for consistency to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1. 0 ( # 49 )
cloudstack 3.0 api : fix typo in xenservernetworklabel
updated libGDX version from " 2.5. 5 " and " 2.5. 6 - SNAPSHOT " to " 2.5. 7 - SNAPSHOT " to
removed the metricNames variable and its getter method from SolrCore to streamline the code by eliminating unused metrics collection
updated URI handling in MavenManifestFactory. java to use Fs. fromUrl instead of URI. create to improve path resolution and ensure compatibility with
replaced a conditional check for macOS with a static final boolean variable to improve code readability and maintainability by centralizing OS detection logic
refactor JdbcAggregationRepository class to improve code readability and maintainability
added functionality to clear and addAll the slotList in the Frame class to ensure that only one slot is included in the slot list
initialize m _ predCount to - 1 in PredicatedNodeTest. java to reset the pred count for testing purposes
added properties merging functionality in ConfigurationSpringInitializer to ensure proper handling of configuration properties
refactor ` setupLogging ` method to use ` org. slf4j. Logger ` instead of ` ch. qos. logback. classic.
replace HashMap with LinkedHashMap in multiple classes to ensure predictable iteration order for alias - to - work
added logic to check for superclass of type ` jdbcHandlerMap ` to ensure proper handling of class hierarchy in type handling
added debug logging for item writing in Hibernate, JpaItemWriter, FlatFileItemWriter, JmsItemWriter, and JdbcBatchItemWriter to
updated language range parsing logic in LocaleUtils. java to correctly handle the last semicolon in the wellformed language range string
updated handler context handling in Http2ServerResponseImpl and Http2Test to ensure proper context management during server closure
improve performance of xssfevaluationworkbook. gettable ( )
updated schema text detail type checks and simplified conditional logic in BaseSchemaTextFormatter. java to ensure accurate representation of schema text details and improve code
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests. java ` to ensure compatibility with MongoDB client - side
replaced HashSet with LinkedHashSet in SparkWork. java to maintain insertion order for the roots and leaves
updated SkewJoinOptimizer to clone operators before proceeding with join operations to ensure that the operator tree is properly cloned before proceeding
added a null check for the client ID before processing the response headers to ensure the client ID is valid before processing the response
clear achievement from achievementlist on destruction
initialized ` userName `, ` driverName `, ` driverVersion `, and ` connectionUrl ` to an empty string to ensure default values
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in the QuickSharingPermissions
added support for reading long longs from ByteBuffersDataInput to enhance data handling robustness and prevent runtime exceptions
rename ` st _ atime ` and ` st _ mtime ` to ` st _ atime _ sec ` and ` st _ ctime
added a new file TestNoEagerReclaimOfHumongousRegions. java to facilitate garbage collection without eager reclaim
added search visibility handling based on user preferences to improve user experience by hiding the search bar when enabled
[ scb - 2852 ] fix env router. get ( ` /'',... )
added null checks in LineChartRenderer. java to prevent potential NullPointerExceptions during rendering
added a new action ` ReloadPageAction ` to handle the reloading of the current page to enhance user experience by providing a way to reload the
changed log level from info to warn for missing entries in SQLManager to provide more granular logging for missing entries
update minimum Spring version from 3.2. 7. RELEASE to 3.2. 8. RELEASE to ensure compatibility with the latest security features and improvements
added a null check for currentClusterConfigForService in UpgradeHelper. java to ensure that the configuration type does not have a selected version to
replaced Iterator with ServiceLoader for loading SPI extensions to improve code readability and leverage a more flexible service loading approach
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and ` HiveViewImpl `, along with logging in ` JdbcConnector
updated feature settings and hints initialization to use generics in DocumentFactory, XMLSAXHandler, ComplexElementHandler, and ElementHandlerFactory classes to improve
updated exit command handling in JdbStopThreadidTest. java to improve clarity and ensure proper output verification during application exit
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure that the ` getType `
updated lambda handling in ExpressionThreadPoolManager to ensure proper type casting to improve code clarity and prevent potential ClassCastExceptions
updated the default HTTP port property from " port " to " vertx. httpPort " to align the configuration with the new Vert. x
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to streamline listener registration for improved functionality
updated DEFAULT _ BATCH _ SIZE from 10 to 3 based on available processors to optimize batch size for better resource management
[ hotfix ] [ taskexecutor ] don't fail taskexecutor connection establishment in taskexecutor.
[ hotfix ] [ core ] fix checkstyle violation in lambdarewriteriter
updated argument validation in the ProgressBar class to include min and max parameters to improve error handling by providing more informative input validation
added an'owner'parameter to the onMessage method across multiple classes to enhance the method's functionality by associating the message with the owner
added new ` Cursor `, ` Database `, and ` Row ` interfaces to establish a foundation for database operations
refactor multiple assertion classes in the codebase to improve code readability and maintainability
# 183 - enh : add setbeanid ( object bean, object id ) to ebeanserver
updated transform method to use getAddToSiteDescriptorXsl ( ) instead of tools / xslt / add - menu - to - site -
replaced the direct instantiation of ` requestMatchers ` with a new list of ` matchers ` to enhance flexibility by allowing multiple ` RequestMatcher ` instances
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for instances of ContactResource
move getrequest ( ) to abstractjpprocessor and remove it from abstracthttp11processor
updated log messages in FileManager. java for better clarity to improve error handling and provide more informative logging for saved Persistable failures
reset mockControl in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource management and improve test reliability
updated import statements and formatting in SyntaxTests. java to improve code readability and maintain consistency across the codebase
refactor ConnectionModel and ModeledConnection classes to improve code clarity and maintainability
tika - 2852 -- remove temporaryresources from parserdecorator, use the fallbackparser instead
make fmlsecuritymanager. getcallerclass ( ) more lenient for non - fml client
refactor variables in AccountUtils and IndexedForest for consistency to improve code readability and maintainability
updated the parameter name from " swap " to " rename " in TestCoreAdminApis. java and CoreApiMapping. java to improve
added a test for handling jsx comments in JsLexerJsxTest. java and enhanced the parser logic in DumpingVisitor. java to
added ScreenRecordRule import and annotation to AddWidgetTest. java to enable screen recording for testing purposes
added error handling for missing Buck configuration in ` BuildEndToEndTest ` and ` CxxEndToEndTest ` to ensure proper exit
added imports and logic to check the total physical memory in TestStringBufferAndBuilderGrowth. java to ensure the test runs with sufficient physical
deprecate maptolocaldateconverter in favor of conversionservice
added a success flag set to true in HiveMetaStoreClient. java to indicate successful execution of Hive operations
fix ( stu2bundlefactorytest ) : use equal ( ) instead of = = = ( )
added support for " amp. twimg. com / v / " in video loading conditions to enhance compatibility with " vine. co /
mark AreaReference as deprecated to indicate that the class is outdated and should not be used in new development
refactor ElementType and Target classes to improve code clarity and maintainability
updated assertions and refKind handling in MemberName. java to improve clarity and correctness of method reference operations
changed the default value of __ submitKeyUpdates from " false " to " true " and added synchronization to the runChange method to ensure key
modified the conditional check for MouseEvent in EditNodeTextField. java to improve event handling logic for better user interaction
camel - 5957 : fix for http : / / code. google. com / p / mybatis / issues / detail?
[ hotfix ] fix checkstyle violation in the build file
refactor exception handling in AgentRunnerTest. java to improve code readability and maintainability
added overridden methods to provide descriptions for adding, plugin, change property, upgrade, findproperties, and minor releases to enhance clarity and understanding of
replaced multiple calls to ` activeGroup. faces. add ( ) ` with a single call to ` activeGroup. faces. add ( )
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future development
rename variable'reentrantlock'to'lock'in multiple files to improve code readability and maintain consistency in naming conventions
updated method signatures to include ` mavenPackaging ` parameter in ` PrintMavenAsCycloneDxBom. java ` to enhance functionality
update back ( ) method to use evt. getComponent ( ) instead of directly calling back ( ) to ensure that the back button receives the correct
refactored certificate verification logic in SASLAuthentication. java to improve code readability and maintainability
updated method signatures in ` ObjectArraySubject ` and ` StandardSubjectBuilder ` to accept ` T extends @ Nullable Object ` to enhance flexibility in
updated references to ` NutchConf ` to use ` getConf ( ) ` instead of ` NutchConf ` to ensure consistency and
bugfix : delete board when sheet be select, not late
added a method to retrieve the session ID in the RemoteWebDriver class to provide access to the session identifier for external use
added null checks before setting time intervals in node and edge classes to avoid potential NullPointerExceptions during time interval creation
removed logging level from the command line in MockServerContainer. java to simplify command execution by eliminating unnecessary logging
updated error logging to include the exception message to improve error reporting for better debugging
refactor DispositionProcessor to use CrawlMetadata instead of RobotsHonoringPolicy to improve clarity and maintainability of the code
added JUnit @ Ignore annotation to ITSystemTest. java to temporarily disable tests that are not ready for execution
camel - 1648 : fix unit test on window.
added an alternative method to retrieve an input stream in ExpectNewDemo. java to enhance functionality by providing an alternative path for input streams
logentryparsetester should call getfirstfilter ( ) instead of call init ( ).
added protection domain parameter to the BufferAlignmentAgent constructor to enhance security by incorporating protection domain in the constructor
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent memory leaks
added configuration for disabling unsafe external table operations in Hive to improve performance by preventing optimization on non - external tables
update description for authorization header in TokenKeyEndpointDocs. java to clarify that authorization requirement is required for public keys
removed FLAG _ SHOW _ WALLPAPER from getWindow ( ) in Launcher. java and changed scroll offset from - 30 to 0 in
modified return values and SQL queries in SybaseASADatabase and SequenceSnapshotGenerator classes to ensure compatibility with SybaseASADatabase and improve
nifi - 7883 : fixed npe in putsql when autocommit = false
added file creation checks in SnapPuller. java and created files in TestReplicationHandler. java to ensure proper error handling when attempting to
updated AppTarget initialization to use " launcher : launcher " instead of " id : launcher " to improve clarity and consistency in target identification
fix framer. frame ( ) to return the output rather than the framer.
removed unnecessary ` clientRegistrationRepository ` parameter from several constructors to simplify constructor signatures and improve code clarity
updated the description of the delimiter parameter in GenericUDFStringToMap. java to provide clearer guidance on splitting text data into key - value
updated PlainFormatter to truncate instant strings and modified the formatInstance method to improve date formatting accuracy and maintain consistency across formatter implementations
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and refactored the close method to use a retry mechanism to improve resource
refactor ClassLoadingStrategyHelper to use MethodHandles for private lookup and improve exception handling to enhance code clarity and maintainability by simplifying method invocation
updated Mockito library version to ensure compatibility with recent features and bug fixes
updated debug log message to reflect the new event file being enabled to improve clarity and accuracy of log messages regarding event file handling
added JUnit @ Ignore annotation to SamplingNamingTest. java to temporarily disable the test due to timing issues
updated error message to specify that rows and columns must be greater than zero to improve clarity and accuracy of the error message
fix for self - referential problem in wagonecART
added sorting functionality for BoundSheetRecords in XLS2CSVmra. java and BoundSheetRecord. java to enhance the CSV output by
refactor calculations for average impulse and start thrust in ThrustCurveMotor. java to improve clarity and accuracy of thrust calculations
updated the constructor of InputSystemJme to accept an inputManager parameter to enhance flexibility by allowing custom input management
table to avoid error
remove deprecated block. getmesh ( )
[ flink - 3685 ] [ yarn ] fix typo in yarnapplicationmasterrunner and yarntaskmanagerrunner
added an option to EMPTY _ WORD _ OPTIONS in the Example and LineReader classes, and modified matcher logic in LineReaderImpl to ensure matchers
patch by brandonwilliams, review by jbellis for cassandra - 154
added functionality to handle button press based on security settings in CaptureActivity and PreferencesActivity to improve user experience by ensuring appropriate button IDs are used
added a new test method ` testBatching ` to ` JoinedTableTest ` for batching functionality to ensure that batching of data
added handling for entityExistsException in JpaPersistenceService to improve error logging for duplicate entries during persistence
deprecated the ` format ` method in ` CucumberOptions ` and updated the plugin name in ` RuntimeOptions ` to encourage the use of
removed the save ( ) method call from PMS. java to streamline the code by eliminating unnecessary functionality
simplified the condition for handling the back key event in ExtendedEditText. java to improve code readability and maintainability by reducing complexity
modified the calculation of ` newCapacity ` in ` AbstractStringBuilder. java ` and added a new test class ` Capacity. java ` to ensure
replaced goHome ( ) method with onNoteSaved ( noteTmp ) method to improve handling of saved notes in the application
add support for extraction of xwpf footnote from word document
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context in authentication transactions
added a new test method in BridjOGRDataStoreTest to verify the version of the GDAL library
added lifecycle listener to handle network error.
fix deviantartipper so it don't fail if the url don't exist
removed unnecessary import statements in BodyTubeShapes and RocketFigure classes to improve code clarity and reduce unnecessary dependencies
use retf * instead of fbo _ back and fbo _ front for window scaling.
hide the create option dialog when there's no pub available
replaced PackedInts. FormatAndBits with BlockPackedWriter in DiskDocValuesConsumer. java to optimize memory usage and improve performance
( chore ) camel - http : use originatingtype ( ) instead of status ( )
removed unnecessary ArrayList and atomic operations in GoAwayTest. java to streamline code and improve performance by eliminating unnecessary data processing
added property setting functionality in ReflectionUtils and created FluentSetterBean and EasyRandomTest classes to ensure proper handling of setter beans and validate functionality through
replaced ` ByteStreams ` with ` Charsets ` and ` CharStreams ` in ` BlockingHttpEndpoint ` and ` HttpEndpoint ` classes to improve
( chore ) camel - core : fix unit test failure
updated print statement to use ` getLastAppearedTaskTargetId ` instead of ` getLastAppearedTaskTarget ` to improve clarity of
added configuration options for image PDF and PDF conformance in RtfDocumentSettings. java to enhance the flexibility of image processing in the document settings
modified the handling of path processing in TSServiceImpl. java to include a null check for the aggregate function name to ensure that the aggregate function is
updated test classes to extend WithNestedTests instead of LuceneTestCase to improve test structure and ensure proper cleanup during tests
added functionality to select the x - cap server URI if X - CAP is enabled to enhance user experience by providing access to the X - CAP
ww - 3483 add option to not throw exception in dev mode
added a method to stop text editing in CodenameOneImplementation, TextArea, and AndroidImplementation classes to improve text editing functionality and ensure proper
nifi - 5946 : fix npe in controlrate when a flowfile with non - existing group attribute be present in the flowfile
updated method signatures and logic in ` ComponentConfigDialog `, ` RocketComponentConfig `, and ` RocketComponentPresetChooserDialog
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5343
added a check to ensure the test is only run on Microsoft Windows to avoid test failures on non - Windows environments
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the SERIALIZABLE in TransactionIsolationLevel. java to support snapshot support in the
replace direct insertion of a newRecid with a loop that waits for closeInProgress or threadFailedException to ensure that the newRecids queue is
use java. util. zip. zipfile instead of jrecompat
added null check for command class in RegisteredServiceSimpleFormController to avoid potential NullPointerExceptions when the command class is not set
use disk _ failure _ policy. ignore instead of best _ effort. patch by jbellis
remove unnecessary public method in rip interface
don't filter ip address that be neither 127.0. 0.1 nor 127.0. 0.1 in peerdiscoveryagent
added a setter method for job identifier factory in SimpleCommandLineJobRunner to enhance functionality by allowing configuration of job identifiers
updated import statements and modified computePartitionAssignment method to include ClusterDataCache parameter to ensure proper handling of cluster data cache during partition rebalancer operations
[ java ] remove the deprecated dockerprotocol. deletecontainer ( id ) method
simonstewart : make defaultselenesecommand accept comma - separated string
add retry rule to create lossary test
update schema references in ModelResolver to use Components. COMPONENTS _ SCHEMAS _ REF instead of allOfRef and oneOfRef
updated the handling of EntityDeletedEvent to use JsonUtils for JSON serialization to improve code clarity and ensure proper serialization of deleted events
added support for GOP parsing in FormatConfiguration. java and updated imports in DLNAMediaInfo. java and LibMediaInfoParser. java
added a new file TestProfileReturnTypePrinting. java with performance testing methods to evaluate the behavior of return type printing in a concurrent environment
prevent concurrent access to current _ version _ info in parseconfigutils # refreshitems
[ multistage ] [ multistage ] fix the issue that minmaxvaluebasedselectionorderCombineoperator. firstblock ( )
simonstewart : unignoring a couple of test that fail on travis
added return statements to HasAndroidDeviceDetails. java to provide detailed information about the device's density and bounds information
don't add dead bug to projectstats
added disabled shadow and foreground color for various UI components in ImportPanel. java to enhance visual consistency by using disabled text for better user experience
removed multiple duplicate @ Override annotations in CacheControlImpl. java to improve code clarity and maintainability
added a check for empty schedule date in ` ScheduledAction ` and created a test for it in ` ScheduledActionTest ` to ensure that the
refactored upload functionality by replacing a button with a menu item for single uploads to improve user experience by allowing single upload instead of a button
refactor multiple classes in the project to improve code organization and maintainability
added an import statement for InputStream and implemented loadMetaData method in MeXBTExchange and RippleExchange classes to ensure proper handling of input
added a custom serializer for Hadoop Writable types in CrawlDbReader. java to enable proper serialization of Writable objects for JSON output
[ ci skip ] remove unused class
mdns discovery service should be a discovery service, not a discovery service
chatmessagereaderfragment : fix crash when open chat.
updated ` ForkJoinPool ` initialization in ` TestBPIndexReorderer. java ` to use ` ForkJoinWorkerThread ` for improved thread
removed unnecessary assertions related to DATANODE and NAMENODE in RoleCommandOrderTest. java to improve test reliability by validating the presence of
added methods to restore local information and ensure it is not null to prevent potential NullPointerExceptions during serialization
[ hotfix ] fix checkstyle violation in ` ` if'' statement
added transformation settings and updated logo sprite rendering in BitmapFontTest. java to improve rendering accuracy and ensure proper logo rendering
[ flink - 21174 ] [ table - planner - blink ] don't add pythonutil. isbuiltinaggregate
remove pending echo check from endpoint state. patch by jbellis
fix race condition in gossiper. getreachabletokenowns
[ ca ] fix integral [ f ^ ( x ^ 2 ), y ^ ( x ^ 2 ), y ^ ( x ^ 2
added content type handling in FormAuthenticator and SavedRequest classes to ensure proper content type is set based on the saved request object
refactor variable declarations and null checks in XToolkit. java to enhance code clarity and prevent potential null pointer exceptions
fix javadoc warning in recommenderjob and abstractjob.
environment : use read lock instead of synchronize block
added a test for reading an identity provider in a different identity zone to ensure that the identity provider is correctly configured for different identity zones
updated job scheduling in ObjectTypeNode and added null check for timestamp in PointInTimeTrigger to enhance job management and prevent potential NullPointerExceptions
removed unused import of Service in SendTicketGrantingTicketActionTests. java to clean up the code and improve readability
[ rocketmq - 258 ] rebalancer should send heartbeat to all broker with lock.
make ` ` cairo. detached. mkdir. mode'configurable
[ java ] add a test to ensure that the cluster can pause when processing large message.
updated default label pattern for Auth components in JabRefPreferences to align with the new design specifications for authentication components
updated dependencies in DBinaryDescription and DLibraryDescription to use ImplicitDepsInferringDescription to improve dependency resolution for DLibraryDescriptionArg
camel - google - cloud - api : dispose the oauth service when it be release.
( chore ) camel - file - on - completion : don't consume dynamic done file
added a boolean parameter ` reopenReaders ` to ` SolrConfig ` and modified the conditional check in ` SolrCore ` to enable reopening
add dialect attribute to mapwriter and freeplaneversion
added methods to retrieve the current date and timestamp in the Update class to enhance functionality by allowing retrieval of the current date and timestamp for updates
added a new method ` dup ` in ` Attr. java ` and created a new class ` PrimitiveTypeInBoundForMethodRefTest.
refactor Condition implementation to use an interface instead of an abstract class to enhance flexibility and maintainability of the code
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector. java to improve query performance and accuracy
removed multiple unused import statements from ConcurrentClassLoadingTest. java to streamline the code and reduce unnecessary dependencies
updated the UploadController providesDirectNearbyUploadController method to use application's shared preferences to enhance flexibility by allowing direct nearby upload preferences
add compatibility mode ( db2, compatibility ) for sysdummy1
refactor logging statements for improved readability and maintainability to enhance code readability and facilitate future modifications
added logic to retrieve the last process ID in POIXMLProperties. java and implemented a test for adding properties in TestPOIXMLProperties.
[ geotiff ] fix double. nan and double. finite for negative infinity nodata
updated import statements and refactored method calls in CliDriver. java and SessionState. java to improve code clarity and maintainability by using
( chore ) camel - mock - adapter : use schedulers instead of executor
added a default implementation for the ` selectByRuleIdSet ` method in ` RuleConditionMapper. java ` to improve the flexibility of selecting
added a new method ` addExitDescription ` for adding exit descriptions for exceptions in ` AbstractJob ` and ` AbstractStep ` to improve clarity
added check for entity player in multiblock event handling to ensure proper identification of player interactions in multiblock rendering
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` class to improve clarity by using a more descriptive identifier
removed an unused import statement in PlotConfiguration. java to streamline the code and improve readability
ios : use presentviewcontroller instead of show ( ).
updated the method call from ` params. getBuildTarget ( ) ` to ` nativeLinkable. getBuildTarget ( ) ` to ensure the correct
rename value. ofarray ( list < value <? > > arrayValue ) to value. ofarray ( list < value <? >
added assertion to verify that the service message is not null to ensure that the service's message is not null to avoid potential null pointer exceptions
replaced ` potentiallyConvertMapKey ` with ` potentiallyEscapeMapKey ` in ` MappingMongoConverter. java ` to ensure proper escaping of map
updated the string concatenation syntax in NearbyMapFragment. java to improve code readability and maintain consistency in string concatenation
( chore ) camel - core : use ` deprecated ` instead of ` javatype `
added null checks for terms in FuzzyLikeThisQuery and introduced a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a ` boolean tabularList ` parameter to enhance the functionality of the ` writeApplicationsLinks
[ ds - 3892 ] use identifierservicefactory in createnissingidentifiers.
updated the method call to use ` bw. getLength ( ) ` instead of ` bytes. length ` to ensure the correct byte array is assigned
changed the return type of getDisplayScript from abstract to String to ensure that the method returns a String instead of returning an Abstract String to avoid potential
simonstewart : use a sequence for key press and key release in remotewebdriver.
pdfbox - 4892 : optimize, a suggest by valerybokov
added synchronization and null checks in NetworkManagerListenerImpl. java to ensure thread safety and prevent potential NullPointerExceptions
add unit test for hssfworkbook. getallembeddedobjects ( )
added import statement for Shdr class in ShaderNodeLoaderDelegate. java to utilize Shdr functionality in the shader node loading process
replace hostParams with roleParams in AmbariManagementControllerImpl. java to ensure consistency in handling role parameters
added a condition to return true for specific font types in PDSimpleFont. java to ensure correct handling of font names starting with " Symbol
replaced GlStateManager. popAttrib ( ) with GL11. glPopAttrib ( ) in ModelHourglass. java to ensure compatibility with
updated date handling in LiveTvGuideActivity to use mCurrentGuideStart instead of Calendar to ensure accurate date calculations by using the current time zone
replaced ` getDeclaredMethod ` with ` Whitebox. getMethod ` in ` MockGateway. java ` and added new classes ` CommonParentTest `
load libfreetype. so and libfontmanager. so instead of libfreetype. so and libfontmanager. so
implement trig power operation for multiply function ; fix typo
loop optimization : addUnsigned range guard to count loop information
don't check if a constant class object be an instance of the type stack.
added a new ` LocalizedString ` class and refactored ` Attr ` and ` Resolve ` classes to utilize it to improve internationalization
add serverconfig. isdisableclasspathsearch ( ) to control the behavior of entity class search
changed the ` formats ` and ` returnedArray ` arrays from arrays to ` Arrays. copyOf ` for better memory management to enhance code safety and
change default value of retries from 0 to 2 in Reference. java and corresponding tests in AnnotationPropertyValuesAdapterTest. java to accommodate
added JSON parsing and settings handling in TexturePacker. java to enhance functionality by allowing dynamic assignment of texture packer settings
added upload images and wiki text views in AchievementsFragment to improve user experience by displaying uploaded images and their corresponding text based on the
added mock logging and input / output operations in TranslatingJavacPhaseTracerTest. java to enhance tracing capabilities for annotation processing and
added a new ` CategoryInfo ` class and modified the ` MwQueryPage ` class to include a new ` CategoryInfo ` class to
updated error messages for empty username and password in AuthzAuthenticationRequest. java to clarify that username and password cannot be empty for better error reporting
added accessibility flags and updated alarm settings in TaskbarStashController. java to enhance accessibility features and improve timeout handling
added handling for the'^'symbol in the signature parser to ensure that the correct signature format does not contain an already thrown exception
updated access flags in ClassVisitorDriverFromElement and added multiple tests for stubbing in StubJarTest to ensure correct access flags are maintained and
updated input handling in IntervalFilter and added null check in LowpassIntervalsSource to ensure input validation and prevent potential NullPointerExceptions
added test for entry iterator last hash and last next in map interface
added a serialVersionUID to the TreeMap class to ensure compatibility during serialization and deserialization processes
updated createdAt from epoch milliseconds to epoch second in ImageData. java to ensure the image's timestamp accurately reflects the creation time
grobcov : use f2m instead of grobcvx
delete private and public keys for accounts in AccountRemovalJob to ensure account data consistency during account removal operations
make keep - alive header value configurable in jdkasynchttpprovider
fix postjoinmapoperation when map have no interceptor and lite member
hhh - 146183 - remove duplicate processor in the standarddialect
remove unsupported encoding exception from binaryhashtable
refactor environment variable handling to use Optional for better null safety to improve reliability and maintainability of environment variable retrieval
ww - 3817
added SerializableMode import and removed redundant closing brace in PluginSwitch. java to ensure proper serialization handling and improve code clarity
added a check for declared field injection point before throwing a DependencyInjectionException to ensure proper handling of nullable fields in the dependency injection process
modified SQL isolation clause handling in the parser and added support for isolation level in select statements to enhance compatibility with different database modes and improve query execution
updated HiveConnection to use constants for transport, HTTP path, and transport modes to improve code readability and maintainability by using named constants instead of
added the ` isCacheable ` method to ` GlobalOrdinalsWithScoreQuery ` class to ensure that the query does not cacheable by default
added a new file TestStrangeControl. java with a main method that executes a StrangeControl. test ( 42 ) to facilitate
update generated paths in JsFile and JsLibrary to use ". jsfile " and ". jslib " instead of ". json "
added selection start and end variables with corresponding getter and setter methods in ShadowEditText. java to enhance functionality by allowing selection based on start and end
( chore ) camel - grpc : fix resource leak in grpcenrichment
updated the ` use ` method in ` Jooby `, ` Router `, and ` JoobyTest ` classes to enhance the
added a null check for the fst parameter in FreeTextSuggester. java to ensure that a lookup is available before proceeding with further operations
updated newline handling and improved URL validation in T4975569 and T6729471 classes to ensure consistent line endings and enhance error
added abi writer class loading and logging in JavacInMemoryStep. java to ensure proper handling of ABIWriter processing based on class type
suppress warning for BooleanMethodIsAlwaysInverted in PubRoot. java to improve code clarity and maintainability
add a check to see if the pull message service be shut down if the service be not stop
updated the EnergyEndpointer class to improve code clarity and maintainability
refactor the handling of displayed columns in ComponentPresetChooserDialog to use a list of presets instead of a single presets array to
remove unnecessary import of bufferedinputstream from bazaarrepository
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default value for exported header style in CxxLibraryDescription and updated related references in CxxLibraryMetadataFactory and CxxLibraryIntegrationTest to provide
deleted the Constants. java and DistanceUtils. java files to remove unused or redundant code
modified the key splitting process in RandomPartitioner to use substring indices instead of splitting directly from the key to improve accuracy in key decoding by using the
fallback linker $ builder $ builder $ builder $ builder $ after $ builder $ builder $ after $ builder $ after $ builder $ after $ builder
[ openshift ] add test case for inline role binding
added logging for session cookie configuration in UaaSessionCookieConfig. java to improve traceability and debugging of session cookie configurations
updated the calculation of the file name to use the current date in the HotseatFileLog class to ensure the file name reflects the
fix typo ` ` o'' to ` ` v''
added error handling for invalid options in JavapTask and created a new file T8033711. java with a javap implementation to
replaced ` Collectors. toList ( ) ` calls with direct usage of ` toList ( ) ` across multiple files to simplify code and improve readability by
[ hotfix ] change log level from error to warn in taskdriver
[ flink - 25941 ] [ network ] add enable tier storage option to inputgatespecutils
remove SUCCESS _ CODE constant and replace it with a new method isNotSuccessStatus to improve code readability and maintainability by centralizing status check logic
added useGL20 configuration to CubocDesktop and modified LwjglApplication initialization to enable OpenGL 2.0 support in the application
remove unnecessary check for voidtype in jimplebody.
refactor OutputMacroExpander to use SourcePathResolver and HumanReadableException instead of DefaultSourcePathResolver to improve code clarity and maintainability by util
rename ` assertNoJobsLeftEventually ` to ` assertNoLightJobsLeftEventually ` in ` SimpleTestInClusterSupport ` and ` Log
added a new condition to check for both " / build / " and " \ build \ " in the duplicateWords list check to ensure that
update instructorfeedbackresponsecomment to use data from datatransfer
removed unnecessary whitespace in the code block to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke. java with a class and methods for testing object equality to demonstrate the effect of object equality in the
replaced direct stream skipping with IOUtils. read for improved readability to enhance code clarity and maintainability by using standard library utilities
improve error reporting when connection pool be shut down.
changed exception handling from Exception to Throwable in CoreContainer. java to improve error handling by catching a broader range of exceptions
added methods to check if cache removal exists in LruBlockCache. java and a corresponding test in TestLruBlockCache. java to
removed unnecessary null check for taskCount in RecentsView. java to simplify code by eliminating unnecessary checks
added an instance configuration change listener in HelixBrokerStarter and increased sleep duration in HelixServerStarter to ensure proper handling of routing table instances
added new classes and imports for CoinmateMetadataServiceRaw and CoinmateExchange to enhance functionality by integrating coinmate metadata
guacamole - 714 : warn user if $ { basedir } or project. basedir be unresolvable by dependent project
pdfbox - 4892 : avoid npe, a suggest by valerybokov
[ beam - 8470 ] add ability to set display data in ptransform.
updated assertions in DefaultSubject to use assertThat for null checks to improve code readability and ensure proper handling of null values
added a security property to disable RSA algorithms in the ClientJSSEServerJSSE class to enhance security by restricting access to unsupported
updated error messages in OptionData. java to ensure consistency in error reporting to improve clarity and accuracy of error reporting for option types
updated module - info. java files for mmm and ppp modules to improve module documentation and enhance clarity
added error handling in the ensureConnection method to throw IOException to improve error reporting for unknown server errors
corrected formatting in LauncherInstrumentation and LogEventChecker classes to improve code readability and maintainability
refactor exception handling and improve resource management in FileSinkOperator. java to enhance error logging and ensure proper resource closure
added diagnostic output to the task call in SchemaGenerator. java to enhance debugging by providing detailed diagnostic information
replaced RuntimeException with OptiqSemanticException in SemanticAnalyzer. java to improve error handling for invalid column references
updated test cases in DataSourceMonitorTests. java to improve test coverage and ensure accuracy of datasource monitoring functionality
added a HashSet to track loaded resource paths before scanning to ensure only unique resource paths are scanned for improved resource management
updated test instance initialization to use Optional and improved error logging to enhance null safety and provide clearer feedback on test initialization failures
fix nullpointerexception in routinginboundhandler.
added nullable natIp field and updated logging format in EkeyConfiguration, EkeyUdpPacketReceiver, and EkeyHandler classes to enhance
updated imports and replaced BaseAllocator with ArrowByteBufAllocator in multiple classes to enhance memory management and improve code clarity
fix checkstyle issue in commitlogarchiver and commitlogreplayer
modified the state management of the HttpParser in HttpConnection. java and added a new test case in RFC2616BaseTest. java to
( chore ) camel - test - infra - http : / / issues. apache. org / jira / browse / amq -
make leveledmanifest more robust against starved sstables
added a test annotation to the TestOrcTimezone1 class to enable unit testing for the OrcTimezone1 class
fix debug. parsemetricandtimersystemproperties ( string, set < string >, set < string > )
updated error handling for segment mapping in PinotSegmentRestletResource. java and simplified return statements in TraceContext. java to improve robustness
modified JTable default renderer retrieval to handle Object class and added a new Test6888156 class for JTable functionality to ensure proper renderer retrieval for
added a check for the existence of the shell and BUSYBOX environment before adding them to the args to ensure that shells are only
fix deletebackets ( ) to delete 1 subscription instead of 10 subscription
replaced ` List ` with ` Set ` for test instances in MockitoExtension. java and added dependency injection tests in JunitJupiterTest.
refactor FieldMonitor class implementation to improve code readability and maintainability
updated method calls in BTreeMapTest. java to replace deleteFilesAfterClose ( ) with fileMmapEnableIfSupported ( ) to improve
modified the iterator initialization logic in SortedIntList. java and added a new test class SortedIntListTest. java to improve iterator handling and
added unregistering of the object name in DefaultRemoteProxy and modified exception handling in JMXHelper to ensure proper resource management and improve error handling
[ hotfix ] [ rocksdb ] set rocksdb default writebuffer size to 64mb
simplified the constructor call by removing unnecessary parameters to improve code readability and maintainability by eliminating unnecessary parameters
replaced ` addArgument ( " message " ) ` with ` addArgumentNoEncoding ( " message " ) ` in ` FacebookShare. java
added JSON graph configuration for portable pipeline in SamzaRunner. java to enhance the application's capability to run a JSON graph for better data
* fixed an issue with helloaudio not be able to set the position of the gun.
update LoopRotateBadNodeBudget. java file to improve performance and maintainability of the code
added a parameter ` TypeInformation <? > ` to the ` convertToMongoType ` method across multiple classes to enhance type safety and prevent potential
remove complex check from inputboxrenderer. iscomplex ( )
simonstewart : fixed broken link in sendkeytoreactiveelement.
added a method to getScaledInstance for creating a scaled BufferedImage with specified dimensions to ensure that invalid image sizes are handled correctly and improve rendering
modified the extendArgumentCheck ( ) and extendWrapStore ( Engine ) methods in DBMaker. java to ensure proper retrieval and handling of the
bugfix : shift state should be update when keyboard be clear
removed the deprecated ` DETECTED _ ACTIVITY ` from the ` SerializableLocation ` and ` CSVFileLogger ` classes to maintain backward compatibility
from within within within within within
removed the import of Buildable from AaptPackageResources. java to streamline the code by eliminating unused dependencies
added ` Unused ` Unused variables to multiple Java files to unify code structure and improve maintainability
updated exception message to include the response status of the upgrade protocol to provide more context in error handling for invalid upgrade protocols
refactor blockMode assignment syntax in P11Cipher. java to improve code readability and maintainability
updated Mockito library version to ensure compatibility with recent features and bug fixes
removed redundant permission check for plot owner ID assignment to streamline permission handling for players
remove deprecate ` getConversationID ( ) ` method from ` HttpContentResponse `, ` HttpResponse `, and ` Request ` classes to
updated import statements in DummyFreeTTSVoice. java to use de. dfki. lt. mary. unitselection. featureprocessors
refactor stripQuotes method to use PlanUtils for consistency across classes to improve code maintainability and ensure consistent handling of quote values
refactor rendering handling in DLNAResource and Request classes to improve clarity and maintainability of rendering logic
replaced calls to ` getResolutionRepositories ( ) ` with ` repositories ` in ` DefaultPluginManager. java ` to ensure that the repositories are
camel - 7999 : fix the unit test error of cxfrsproducerfactoryfactorycachesetest
update javadoc for physicsclient. java ( # 5883 )
added JUnit Ignore annotation to SessionTest. java to temporarily disable tests that are frequent failures
added a new File object instantiation in the ZipFile class to facilitate the creation of a ZIP file based on its name
added a deprecated method ` handleAll ` to the ` TryType ` class to indicate that the method should no longer be used in favor of
add a test case to make sure that channel constructor have be initialize by the default constructor
added ` StackTraceUtils ` class and utility methods in ` GenericDAOImpl `, ` ForumServiceImpl `, and ` ReflectionUtils ` to
removed the @ Test annotation from FormLoginIntegrationTests. java to streamline test execution by eliminating unnecessary test annotations
mondrian : fix for mondrian - 1113, mondrian and mondrian - 1114
updated SQL query and variable names in CheckDatabaseHelper. java for clarity to improve readability and maintainability of the code
add ` ` jdk. internal. misc. innocuousthread'' to suppresswarnings
updated JsonTreeReader to handle additional JSON token cases to improve error handling for JsonElement parsing
added support for extra arguments in TestCommand and ExternalTestRunnerIntegrationTest to ensure proper handling of unexpected arguments during the external runner
added dedup and indexSolr methods in SolrDeleteDuplicates and SolrIndexer classes to enhance functionality by allowing deduplication of Solr documents based on
[ flink - 21165 ] [ table - planner ] fix streamsqlexample to use flink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest. java to ensure the database is reset before tests are executed
fixed progressbar not show on RSS feed if it's set to false.
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added methods for writing documents with both OutputStream and File parameters in IOUtils. java to ensure proper resource management and prevent potential memory leaks
modified print statements to include carriage return for runOptions and exportClassPath to ensure consistent output formatting in the Java build process
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for ` _ root `
modified the ` apply ` method in ` CustomQueryFilterFactory ` to modify the ` apply ` method to replace specific queries with a custom query to
camel - 19836 : fixed port issue in camel - netty
updated SnmpTargetHandler to check if the handler is initialized before updating the status to ensure the status reflects the initialization state of the ThingHandler
add check to ensure only instructors with submit privileges be included in the list.
mark the AvailableSettings class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor path parsing logic in FileResolverImpl. java and add a new test class WarFileResolverTest. java to improve path handling and
updated log message for newFlushedSize to include docstores to enhance clarity of log output for better debugging
fix dirt. dirt. getlocalizedname instead of dirt. dirt. getlocalizedname.
updated whitespace striping settings from'stripWhitespaceX'to'stripWhitespaceY'to ensure consistent whitespace handling across the image processing logic
updated the lock calculation in FeedRefreshUpdater to multiply the threads by 1000 to improve concurrency by allowing more time for thread execution
updated method parameters from ` false ` to ` exactSearch ` in ` TsFileSequenceReader. java ` and added assertions in ` Measure
updated method signature and initialization of SimpleDateFormat in CSVSaveService. java to improve code clarity and maintain consistency in date formatting
added preferred size adjustment for the FList pane in NavigationShareTab. java to improve UI responsiveness by adjusting the preferred size of the
replaced ` OffsetAttribute ` with ` State ` in ` BeiderMorseFilter ` and added tests for custom attributes in ` KeywordMarkerFilter
updated multiple classes related to Upnp audio handling to improve code consistency and maintainability
fix ( vanilla ) : fix lenswarp not be able to collide with blockpos.
added unit tests for JSON serialization in JsonTest. java to improve test coverage and ensure proper functionality of JSON serialization
refactor MutableContextDataSupplier class to improve code readability and maintainability
changed the exception handling from ` Exception ` to ` Throwable ` and added a warning log for a potential ` Throwable ` to improve error handling by
updated KubernetesMockServer to use HTTPS instead of a static true parameter to enhance security by using a secure connection
use the stamp of the unary math intrinsification in the lower provider.
updated HTTP response status codes and headers in DefaultServlet and DefaultServletTest classes to ensure proper handling of HTTP methods and improve test accuracy
tika - 2852 -- fix locale issue in decimalformat
replace throw statements with rsp. setException calls in ShowFileRequestHandler. java to improve error handling by returning early if the response is not found
added support for handling InvocationTargetException in ReflectorClassWriter to improve error handling by ensuring proper exception handling
added clamp method to Vector and Vector2 classes to enhance vector manipulation by allowing clamping parameters
added imports and modified token creation logic in ChainedTokenGranter. java to enhance token handling by incorporating client - specific authentication
updated method implementations in BC _ instanceof. java to improve code clarity and maintainability
replaced the setSaveFlags method with a static logger instance to improve logging consistency and maintainability
update UaaUrlUtilsTest to use JUnit 5 annotations and extend PollutionPreventionExtension to improve test reliability and maintainability by using
hhh - 147483 : use basic domain type in native query implementation
added caching mechanism for font anti - aliasing information in SunLayoutEngine. java to improve performance by avoiding unnecessary lookup for font anti - alias
fix : use intarraylist instead of intbigarray
simonstewart : remove the ` ` / session : sessioid / session / session / session / session / session / session
updated import statements in BrokerRequestUtils. java to improve code clarity and maintainability
refactor InjectorBuilderImpl to use a map for instances and order to improve clarity and maintainability of the code
refactor RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to directly use buildTarget's base path to improve code clarity and maintainability
added a null check for the'val'parameter before parsing to avoid potential NullPointerExceptions when'val'is null
add connection listener to jabber connection if jabber connection be lose.
updated DEFAULT _ LOAD _ FACTOR from float to double in IntHashSet. java to improve performance by using a more optimal load factor
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` and updated references in ` Vectorizer ` and ` VectorPTF
changed package declarations from ` com. google. zxinging ` to ` com. google. zxing. client. j2
refactor conditional logic for overview actions in OverviewState. java to improve readability and maintainability of the code
added @ Entity annotation to BaseActivityEventEntity. java to ensure that the entity is properly annotated with @ Entity
added tracing sections to NavBarSwipeInteractionHandler, TouchInteractionService, and modified the SYSTEM _ TRACE constant in TraceHelper to enhance debugging capabilities
added a new file InvalidOptions. java to handle invalid options and provide clearer error messages to ensure compliance with Java's usage requirements and
added logging for inconsistent display state in DisplayController to improve debugging and track display state issues
refactor ` getClientIdAndClientSecret ` into a new method ` OAuth20Utils. getClientIdAndClientSecret ` to improve code organization and
updated the ` _ unwrapServletException ` variable from false to true in multiple classes to ensure proper handling of servlet exceptions in the error handler
set default status to ShortcutInfo. DEFAULT in PackageUpdatedTask to ensure proper handling of package updates by setting default status
camel - 7999 : fixed an issue with unbounded size parameter. thanks to daniel for reporting.
added batchupdatestart ( ) and batchupdateend ( ) method to app.
added HttpClient configuration handling in ThirdEyeApplication to enhance the application's ability to use custom HTTP client configurations
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enhance functionality by allowing dynamic sorting based on the job instance
updated CryptoFacilitiesTradeService to handle currency pair cancellation to ensure proper cancellation of cryptos based on the order ID
make sure keyboard be hide when user click on algebra view
make memmove ( ) non - static so that it can be use with cpy
refactor method signatures and formatting in BindLdapAuthenticationHandler. java and ResolverTestConfig. java to improve code readability and maintain consistent formatting
mow - 1078 tooltip tool : set block tooltip to true
updated DefaultDateTypeAdapter to accept a custom DateFormat parameter to enhance flexibility in date formatting based on the specified time style
updated playerSet formatting in ListCommand. java to improve readability and maintain consistency in output
added a check for empty collections in the List class to ensure safe handling of empty collections
added exception handling for CommandException in ParametricCallable. java to improve robustness by ensuring wrappedCommandException is properly thrown
modified the ` getLikeExpression ` method to include an ` isLike ` parameter for handling regex patterns to enhance expression evaluation based on regular expression
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementations in NativeStreamSupplierComponentImpl to enhance lifecycle management for better
added locale handling in the ` runChild ` method of ` LuceneTestCase ` to ensure proper locale management during test execution
fix license header in pgjdbc module
refactor context handler initialization into a separate method to improve code readability and maintainability
camel - 9381 : added test to verify that camel - test - blueprint now reference the test bundle
nifi - 5883 : fix unit test that fail on window
modified the ` returnTypeSubstitutable ` and ` resultSubtype ` methods in ` mmm Types. java ` and ` ppp Types. java
added throttling support for char - based processing in the TestExecutor class to enable flexible throttling for character - based processing
simplified pixel assignment in ColorBleedEffect. java and added a conditional check in SpriteBatch. java to improve code clarity and prevent unnecessary
refactor annotations in Annotation. java and AnnotatedElement. java to improve code clarity and maintainability
introduced a new ` Model ` interface in the ` org. apache. poi. hssf. model ` package to encapsulate data related to
camel - 3143 : camel - core - optimize filter pattern for header / response.
added a ` clearEntityManager ` parameter to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to allow configuration of the entity manager
added null checks for shortcut information in multiple classes to prevent null pointer exceptions and improve error handling
add a boolean parameter to the TwoDimensionalCollectionValuedMap instantiation in CoreMapNodePatternTrigger. java to ensure that the map is always
updated exchange specifications from " BTC - e " to " Wex " and changed the exchange name from " BTC - e " to
added null checks in OrcEncodedDataConsumer and improved null safety in EncodedTreeReaderFactory to enhance robustness and prevent potential NullPointerExceptions
added null check in SegmentInfos. java and a new test case in TestIndexReader. java to ensure robust error handling for missing segments *
updated date pattern in HSearchSortHelperImpl. java and refactored FhirResourceDaoR4SearchWithElasticSearchIT
refactor BigDecimal calculation to use a separate variable for clarity to improve code readability and maintainability by reducing duplication
fix rangeinputstream. read ( ) to return - 1
camel - 16400 : camel - core - optimize routebuilder. collect RoutesFromRegistry and collectRoutesFromDirectory.
update javadoc for hlplayer. getnextchunk to match playback position.
updated test classes to use LuceneTestCase instead of TestCase to improve test organization and maintainability of the codebase
added a new StatefulMapper2 class and updated the StatefulOperatorTest to verify the correct behavior of stateful mappers with partitioned streams
remove null check for'fill'in area. setBitmapShaderShift method to avoid potential null pointer exception
removed dbExists ( ) method from Blockchain class and added dbExists ( ) test in BlockchainTest class to improve code clarity and ensure
trim whitespace from the matcher group in SQLPlusSupport. java to ensure proper handling of SQL injection vulnerabilities
set the socket as - as - async to false in Http11AprProtocol. java to ensure that the socket is marked as as asynchronous
ticket # 3486 : fix for # 3486, the divider location be wrong.
added new metric for controller health checks to enhance monitoring capabilities for service statuses
hide shared avatars in local file list view to improve user experience by hiding unavailable avatars
mebis / web / resources / scss / mebis / mow - toolbar. scss and mebis / dialog
[ java ] use less than or equal to instead of greater than or equal to.
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5882 - make the command
replaced CountDownLatch with an assertWaitUntil assertion in EventBusTracingTestBase. java to improve test reliability by ensuring finished spans are asserted
replaced the static parse method with a setter method for locale in QueryParser to simplify the code and improve maintainability by centralizing locale handling
fix duplicate entry in entrycustomizationdialog
allow betanodes constraint to be add to ruleset.
added a new class ` OcspUnauthorized ` and modified ` OCSPResponse ` to handle unauthorized cases to improve code clarity and
added serverState variable and modified thread sleep logic in SSL. java to ensure proper server state management and prevent duplicate server failures
added a new constant for open connection count and implemented methods to retrieve and set open connection count in SourceCounter and AvroSource classes to improve connection
add the fields ( list < field > ) builder method to the executionstrategy interface
refactor the ` createDefaultJavaPackageFinder ` method to return a combined set of source roots to improve code clarity and maintainability by centralizing the
updated output writer initialization in ScriptExecutable. java to use PrintWriter for improved readability and performance
[ hotfix ] [ test ] fix uuid mismatch in filesourcetextlinesitcase
added import for DataTable and implemented logic to convert DataTable objects to Ruby objects to ensure compatibility with Cucumber's table structure
updated visibility settings for author visibility in SearchImagesRenderer. java and refactored request handling in ApacheHttpClientMediaWikiApi. java to improve
refactor ReadSentimentDataset class for improved readability to enhance maintainability and readability of the code
improve error message for parse error in formulaparser.
added getter and setter methods for the bind address in WebSocketClient. java to enhance socket configuration and improve connection handling
[ java ] delete aeron directory when delete archive and clustered medium driver.
refactor WidgetGroup to streamline size setting logic to improve code readability and maintainability by consolidating responsibilities
changed sessionFixationAttribute check from equals to Boolean. valueOf to ensure proper handling of sessionFixationAttribute as a boolean
bugfix : use digitalchannel. mode instead of channel. mode for lalogic line
simonstewart : make chromebinary more resilient
added HttpMethod and HTTPRoute attributes to ClientResponseWrapper and TraceExchangeFilterFunction classes to enhance tracing by associating requests with their HTTP method and route
patch by brandonwilliams, review by jbellis for cassandra - 158
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes, and added a new InvalidRenderIntentTest class to improve rendering intent
[ # 7701 ] instructor edit feedback question : don't allow'checked =''
added multiple calls to ` PublicMethed. waitProduceNextBlock ( blockingStubFull ) ` in ContractInternalTransaction003. java
fix spotbugs issue in kafkarecord
added PGConnection import and modified connection instantiation in PooledConnectionImpl. java ; added a test for PGConnection in BaseDataSourceTest. java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code clarity and maintainability
updated logging messages in TokenAuthenticationHandler to provide clearer information about the token encryption secret being defined
removed the @ Deprecated annotation from Hazelcast. java to indicate that the class is outdated and should no longer be used
removed the requirement for UNLIMITED _ KEY _ JCE _ REQUIRED in hostParams and added a method to create completed command reports to enhance
replaced ` writeStr ` with ` writeExternString ` and added handling for ` END _ OBJ ` in ` NamedListCodec ` to
` assigncompletelylostpartitions ` shouldn't throw exception if partition state be null
added schema inclusion rule to ApiExample to enhance schema traversal functionality
updated the expected value in the ` mean ` and ` var ` methods from 3. 0 to 7. 0 to ensure the test accurately
fix and test for geometry with closed ring and single point
added methods to retrieve base name and dimension count from ConstantPool to enhance functionality by allowing retrieval of base name and dimension count
add more debug information to xssf formula evaluation
test ( refactor ) : disable test for jdk < 8
updated ExoPlayerProfile instantiation in LegacyMediaManager. java and modified live TV preference check in PlaybackController. java to ensure proper handling
added a return statement in the DynamicStyleBar class to prevent further processing in the code
added SLF4J Logger import and logging statements in Utils. java to enhance logging capabilities for database property management
refactor ReactiveAuthorizationManager class to improve code readability and maintainability
updated condition to check for both object and boolean types in MethodEmitter. java to ensure proper handling of boolean types in type promotion
rename sulongstackframenuller to stackframenuller.
chore ( regen ) : update copyright year ( # 4382 )
add a new test class for CaffeineCacheConfiguration to verify the functionality of caching configurations in the application
added a method to calculate the bounding box of vertices in Mesh. java to ensure vertices are defined and avoid runtime errors
add -- target - hash - function to specify the hash function to use for compute target hash.
refactor DefaultConfigurationProperties class to improve code readability and maintainability
added high light color and alpha settings in ListViewMultiChartActivity and enhanced arrow drawing in BarChart to improve visual consistency and visibility of the chart
added tmpPg to the sgPathPlanMap in ClusterPlanRouter. java to ensure the correct path plan is stored during routing
( chore ) camel - infinispan : fix intermittent failure
added file lock handling and refactored artifact fetching logic in MavenDependencyResolver and MavenRoboSettingsTest to improve artifact management and ensure proper
added conditional shader definition for GL _ ES in SpriteBatch. java to ensure compatibility with newer OpenGL ES features
hbase - 25836 fixed getservers ( ) to return a set instead of a sorted set
added a try - catch block in TagLibConfiguration. java to handle potential exceptions during JSP processing
updated version handling in CustomAnalyzer and added a new test for version aware token filters to ensure compatibility with LUCENE _ 8 _ 0
added a test to verify that ` getPackageArchiveInfo ` reads values from ` ShadowPackageManager ` to ensure that the package archive info is correctly
replaced direct method invocation with MethodUtil utility methods across multiple classes to improve code maintainability and enhance access control
added progress listener functionality to GradleBuildService and Main classes to enhance task and project configuration handling
douniaberrada : remove unnecessary synchronization on androidwebdriver.
fix infinite loop in case of ` ` initializationfailtimeout''
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` class to simplify
changed the ` isNative ` field from a primitive boolean to a transient boolean and modified the ` addEntry ` method to ensure the field is
updated error message formatting in CEntryPointCallStubMethod. java to enhance clarity and maintain consistency in error reporting
rename ruleenablehandler to ruleenablementactionhandler to avoid conflict with exist action
updated access modifiers and formatting in multiple Java files to enhance code readability and maintainability
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager classes to improve clarity of debug information during authentication processes
[ flink - 2595 ] [ connectors / kafka ] fix typo in kafka dynamictablefactorytest
refactor repository owner check logic in UsersPanel. java to improve error handling for invalid registrant repositories
added support for font file extensions ". otf " and ". OTF " in the SunFontManager class to enhance compatibility for font
refactor variable naming and improve type comparison logic in AnnotationMatcher. java to enhance code readability and maintainability by using descriptive variable names
replace occurrences of " OFF " with " SEVERE " in Grep. java to improve error reporting for better debugging
in faulttolerantchunkprocessor : avoid string concatenation
mondrian : fix possible npe in test plugin
added a check for ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` in the ` openFolder ` method to ensure default screen behavior
increase maximum bitrate from 110 to 30 to improve user experience by allowing more bitrates
replaced the method ` getOptions ( ) ` with ` getOptions ( ) ` in ` CommandLineParser. java ` to streamline the retrieval of options
trim whitespace from the description return value in MutableDatabaseProperty. java to ensure consistent formatting of the description string
updated the output filename format in XOMParserTest. java to simplify the output file path for better readability
removed the process's pid from the error log to simplify the error logging by eliminating unnecessary details
added ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` methods to ` MusicLoader ` and ` SoundLoader ` classes
removed unused imports from OnBeanCondition. java to streamline the code and improve readability
added ScreenRecordRule import to RequestPinItemTest. java to enable screen recording during test cases
disable lrPauseButton selection in CPUFeature and MemoryFeature classes to ensure lrPauseButton is only selected when appropriate
refactor preference handling by replacing instances of ` accountsPrefCategory ` with a single ` mAccountsPrefCategory ` variable to improve code clarity and maintain
fixed an issue where an unavailable presence would be send to the packet writer in the presence listener.
updated StringBuilder initialization in ObjectInputStream to ensure proper capacity based on utflen
disable statsd export for web endpoint integration test
updated exception handling logic in InterruptedException. java to improve responsiveness and reliability of interruption handling
refactor ServiceTicket class to improve code readability and maintainability
updated connection handling in ConnectionCheckOperation. java to improve SSL connection validation logic
updated the conversion logic in ArgumentArrayMessageMapper to check for both String and Map types to enhance type safety and correctness in conversion validation
[ ds - 3940 ] fix ds - 3940 issue with item owning collection.
updated PasscodeManager to include a FLAG _ ACTIVITY _ REORDER _ TO _ FRONT flag to ensure that the activity is re
doc : deprecate patternparameterconfiguration method in spoon. template. PatternParameterConfigurator
modify the ` beginDraggingWidget ` method to return a boolean indicating success to ensure that the widget is only attempted when a valid drawable is
added JUnit @ Ignore annotation to TestPackedInts. java to temporarily disable tests due to known issue LUCENE - 4488
added null check for root and collection of components in the tabbed pane to avoid potential NullPointerExceptions when root is null
add a confusion matrix to maxenttagger and testSentence
bug 607191 - bugfix : last _ sample _ ok variable should be set to true
added unit tests for retrieving connected and disconnected device states in BluetoothHeadset to ensure that the Bluetooth headset correctly handles non - connected device states
rename testAutowire to testAutowired in PropertyBindingSupportTest. java to clarify the purpose of the test method
added " clone " and " finalize " methods to the Set of objectMethods and modified the conditional logic for loading properties to enhance functionality by allowing
[ java ] fix npe in integtestbiglinkedlist
return not _ implementation for objectreference. getinstanceinfo.
updated the service filter condition to use ` serviceId ` instead of ` service ` to ensure that the registered service matches the provided service ID
added a null check for getActivity ( ) before executing code to avoid potential NullPointerExceptions when accessing getActivity ( )
rename logger to be consistent with other logger variable
added stringType property and its getter / setter methods to DatabaseAdaptor and JDBCSessionDataStore classes to allow flexible representation of string types in database operations
solr - 2387, solr - 2387, solr - 2387, solr - 2387, solr - 2387
refactor thread name handling in multiple classes to improve clarity and maintainability of thread name management
refactor TaskletAdapter class to improve code readability and maintainability
drools - 22200 : fix dmn evaluation of'will be null if negative '
add miss call to glflush ( ) to make sure texture map creation finish before move on
added tooltip to the checkbox in ShowCGCP to enhance user experience by providing context - sensitive help
replaced ` getTypes ( ). add ( e ) ` with ` addType ( i ) ` in ` EnumFactory ` and ` InterfaceFactory
add text mnemonic to the retarget action ( # 5951 )
spreadsheet command : use ` ` label'' instead of ` ` label simple''
changed the calculation method for BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) to ensure accurate representation of the BRIGHTNESS
bugfix : use ` ` context'' and ` ` date'' instead of ` ` author'' and ` ` branch''
added an ` isAdmin ` parameter to the ` createUser ` method and implemented the ` listUsers ` method to provide functionality for verifying if
added null checks for indexedWriteMethod and property descriptor classes, and created a new test class for validation to ensure proper handling of method return types
updated logging format in DynatraceExporterV2. java and assertions in DynatraceExporterV2Test. java to improve logging performance
updated method names and formatting in Context, Request, and Response classes to improve code clarity and maintain consistency in naming conventions
fix deserialization of biome in mixinitembuilder # setcapabilitiesfromsponge
[ hotfix ] fix a typo in lifecycleutilstest
added support for creating smart contracts with specific contract types in Wallet. java and GetContractServlet. java to ensure proper contract creation and improve contract
added multiple package - info. java files for the com. ibm. dtfj. image and com. ibm. dtfj.
refactor the add method in DocumentsWriterDeleteQueue to use a while loop for atomic operations to improve performance by avoiding unnecessary synchronization when adding nodes
added duplicate handling for JavaFileObject files in JavadocTool. java and modified test parameters in T7091528. java to improve robustness by
changed the default value of STRIP _ IPV6 from " true " to " false " to ensure compatibility with the Jetty server's
added support for adding user parameters in the LoginServerTokenEndpointFilter to enhance flexibility in user authentication by allowing multiple user parameters
added a check for CPP _ KEY and C _ KEY in LanguageFactory and updated its value in CPPParserTokenManager to ensure proper language handling
replaced usage of ` LinkedBlockingQueue ` and ` ThreadPoolExecutor ` with a new ` MoreExecutors ` class to improve code organization and maintainability by
added cache control headers and expiration logic in FormAuthenticator and ConstraintTest to enhance security and ensure proper response handling
include exception message in error log for voice manager
updated HSSFTests to use TestAreaReference, TestCellReference, and TestSheetReferences instead of AllHSSFUtilTests and modified test
refactor FetchHTTP2Test, FetchHTTPTest, and FetchHTTPTestBase classes to improve code organization and maintainability
updated the classDirectory assignment to handle null output cases to ensure robustness by avoiding null pointer exceptions
added launch priority settings for resource access control in Java2DRenderer to improve resource control responsiveness during resource resolution
added exception handling for drawing graphics in TestTriggerCoverage. java to ensure the build does not fail on unsupported JDK versions
changed the visibility of the HotspotThreadMBean variable to final and modified the main method to throw an exception to ensure immutability of the
added a check for empty comments in the TabsAndIndentsVisitor class to ensure that comments are not present in the space processing logic
updated assertions in TestTriggerIntegration to validate collection rate and total shard rate to ensure accuracy of rate assertions and improve test reliability
replace'equals'method with'equalsIgnoreCase'in multiple classes to ensure case - insensitive comparison for change sets
added a method ` getString ` to ` ShadowBundle ` that returns a default string if the provided value is null to enhance functionality by providing a
added locale support for date and time formatting in TweetActivity to ensure consistent date formatting based on user - defined locale settings
added a check for empty connections in the StandardProcessSession class to ensure that an empty list is returned when no connections are available
refactor focus handling in DetailFragment by introducing requestFocus method to improve code readability and maintainability by encapsulating focus logic
fix for file : / / path that contain space.
synchronize solve ( double [ ] [ ] matrix,... ) to avoid npe
added import statement for org. springframework. integration. Message in GenericMessage. java to enable proper handling of message - related classes in the
refactor SQL query construction in PostgresConnector and TaskAttempt classes to use a join method to improve code readability and maintainability by centralizing join logic
updated filter selection logic in AquaFileChooserUI. java to ensure the filter is only selected if it does not already exist
refactored the loop structure and synchronized blocks in P2PTransportManager. java to improve thread safety and readability of the code
fix arrayptg. toFormulastring to return true or false ( # 45380 )
[ hotfix ] [ test ] migrate pgtokenizertest to junit 5
updated Java2TypeScriptTranslator to correctly handle variable wrapping based on the class body to ensure correct processing of final variables when the enclosing element is
modified SQL statement generation in AddAutoIncrementChange. java to ensure proper handling of auto - increment columns in PostgreSQL
updated byte reading logic to handle negative byte values correctly to ensure proper byte handling and prevent potential errors with negative byte values
added assertions to check for vertical and horizontal physical pixel spacing in ImageParserTest to ensure the metadata matches the expected dimensions of the image parser
updated method call from ` getParent ( ) ` to ` getParent ( ) ` to ensure proper retrieval of the parent component
refactor import statements and formatting in multiple Java files to improve code readability and maintain consistency in import statements
replace engine _ finish ( ) with engine _ free ( ) and call engine _ init ( ).
added ` iteration ` method to ` GenericController `, ` CounterConfig `, ` ConstantTimer `, and ` IterationEvent ` classes to
fixed memory leak in fileupload and FormDataHttpContentProcessor
added a call to deleteLogs ( ) in TestRecovery. java to ensure that logs are properly deleted during recovery
modified URL handling in BrowserActivity to launch a new activity if the URL contains " twitter : / / " to improve user experience by ensuring
added a HeliosClient instance and awaitHostStatus method in DeploymentGroupTest. java to enhance the reliability of host status verification in the
changed the logResult parameter from false to true in VisibilityController. java to enable the list of allowed labels in the visibility controller
increased the maximum number of auto - retries from 0 to 25 in RestTemplateRetryTests. java to improve reliability by allowing more retries for RestTemplate
removed unnecessary print statement from TranslatorSupportTest. java and added multiple @ Override annotations in StandardTypeMapperComponent. java to improve code clarity
added support for fraction resources in PackageResourceLoader and Converter, along with corresponding tests in ResourcesTest to enhance functionality by allowing users to specify fraction
added a check to confirm the write operation in BasicFrame. java to ensure the file exists before proceeding with further operations
added optional assertions for tagGroupId and tagArtifactId in findNewerDependencyVersion method to ensure that groupId and artifact are correctly retrieved from the resolution
from from
within within within within
updated test cases in TestFuzzPreLoop. java to improve test reliability and maintainability
added a condition to set f0 to a value of 0.0 to ensure f0 is non - negative to prevent potential errors
added null checks for database connection and foreign key properties in SchemaRetriever and TableRetriever classes to avoid potential NullPointerExceptions and ensure foreign
use a stack instead of a concurrent map for the encoders to improve thread safety.
added functionality to allow empty screen configurations in LawnchairPreferences to improve user experience by preventing unnecessary screen refreshes
added a warning log indicating the deprecation of cucumber - needle to recommend using cucumber - cdi2 or cucumber - jakarta - cd
refactor theme handling in ShadowThemeTest, ShadowArscAssetManager, and ShadowVMRuntime classes to improve theme application reliability and enhance code
updated import statements and improved failure messages in VerifyFast. java to enhance clarity and consistency in error reporting
no effective change - remove dbmigration from history2
updated property handling in ScriptObject to support both GETPROTO and SETPROTOCHECK functions to enhance functionality by allowing prototype modification based on property
replace ` Collections. shuffle ( readers ) ` with ` random ( ) ` in ` TestFilterDirectoryReader. java ` to improve randomness
added conditional logic to retrieve displayName based on userName to enhance user experience by providing context for remote clarification based on the provided userName
updated the path format in CookieRetrievingCookieGenerator to use a default if blank to improve flexibility in cookie retrieval by allowing a default path
updated closing brackets in multiple Java files to improve code readability and maintain consistency
fix partitionlostindexoutofboundsexception in abstractcacheservice
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4681 to avoid npe
added a null and equality check for the focused widget in UIDropdown. java to ensure that the focused widget is validated before proceeding
fix checkstyle issue in generator / soundutil. java
replaced the ` appleCxxPlatformFlavorDomain ` parameter with a ` getAppleCxxPlatformFlavorDomain ( ) ` method in ` Apple
fix flaky test : ` ` show ololo from format tabSeparatedwithnamesandtypes''
rename ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to clarify that
fix typo in englishptreetreebankcorrector
added a new file ` TestGetLoggerNPE. java ` to test logging behavior to ensure that logger retrieval respects security policies
added a new method ` getData ( ) ` to ` PathSharingContext ` and replaced ` Map < Object, Object > sharedMap `
fix unsafe access to field intrinsified field.
added support for " NEXT VALUE FOR " pattern in NextValExpression to enhance the flexibility of the next value expression
improve error message when access of resource bundle be not pre - cached
modified the handling of write buffers in BoundedLocalCache and added a new test for clearing pending writes in BoundedLocalCacheTest to improve cache management
added order direction property and set it to " netout " in QuoineExchange and QuoineNewMarginOrderRequest classes to enhance
added a new method ` boundInitialization ` in ` PropertyDescriptor. java ` and created a new test class ` Test7192955.
added a display mode callback interface and modified display mode handling to improve flexibility in managing display modes and enhance error handling
fixed issue where release tab wouldn't appear in the tab form
fix : line cell can't center when there be no wrap
corrected a typo in the error message from " argomento del parser non deve essere nullo " to improve clarity and accuracy of
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
simonstewart : replace single quote with string. format ( ` ` % s'' % s, escape )
replaced the use of ` xmlStreamReader. getNamespaceContext ( ) ` with a direct call to ` getNamespace ( prefix ) ` to simplify namespace retrieval
added support for nested joins in various test classes to ensure proper configuration behavior for nested joins in tests
don't allow normal account to be configure by root admin only
added caching for JavacFileManager in SourceFileManager and modified CompletionTaskProcesor constructor to include a cursor parameter to ensure compliance with
added Hive configuration variables to the TestMsgBusConnection class to enhance security by using the appropriate authorization manager
replaced ` Assert. assertThat ` with ` assertThat ` in ` KuduIOIT. java ` and ` XmlIOTest. java `
add nullability annotations to constructors in MetadataRenderer, TextRenderer, and Util classes to enhance null safety and improve code clarity
fix ( il ) : fix calculation of offsetmemsize in symbolmapreader
removed debug print statements from TermFilterTest. java to clean up the test output and reduce unnecessary console output
removed the Reflection class and updated import statements in Jooby. java to streamline the codebase by eliminating unnecessary classes
refactored threadlessexecutor to make use of sharedexecutor
refactor exception handling in DateTimeFormatter and add tests for HOUR _ OF _ DAY and MINUTE _ OF _ HOUR to improve error handling and ensure proper
compressionparameters : use kb instead of string. max _ value
added a new case WILDCARD in mmm Types. java and created a new class T7034495. java with generic
replaced a do - while loop with a while loop for handling a key to improve code readability and maintainability
fix a bug in the transclusiondeciderule.
remove ` ` micronaut version'' output from cli
added assertions for the Print _ Area functionality in the TestBugs class to ensure correct functionality and correctness of the Print _ Area functionality in the
modify MindIcon return logic to include an optional description if the name does not already end with a slash to ensure that the icon is displayed
updated onHomeIntent method to accept a boolean parameter to enable handling of the home intent based on its state
refactor CxxBuckConfig to use a local variable for preferDependencyTree to improve code readability and maintainability by reducing unnecessary calls
implemented ` showDetails ` method in multiple activity classes and updated ` FileDetailFragment ` to accept an ` activeTab ` parameter to enhance functionality
updated function names from " $ apply " to " apply " across multiple files to improve consistency and clarity in function naming conventions
added capacity check in MinimalEncoder and implemented a method to randomize the state of a byte to ensure that the byte sequence size does not exceed
updated header and parameter string formatting in SourceBuilder. java to enhance clarity and consistency in output formatting
added a call to notifyDataSetChanged in FolderSyncActivity to ensure the adapter updates correctly after data changes
removed the ` setDefaultWALSyncMode ` method from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
updated type checks in RemoveJavaDependenciesAdapter. java and added new test cases in Collections. java to enhance type safety and ensure proper functionality of
remove unused method in defaults3crtasyncclient
updated error codes in ` doDudPasswordTest ` for corrupted stream entries to ensure compliance with updated password validation requirements
fix a typo in the assertion message of the ` ` size of the collection'' assertion
bugfix : don't throw an exception if the graph be not unique
ggb - 2118 fix for antialiasing issue on mac o x
refactor SQLXML class to improve code readability to enhance maintainability and reduce technical debt
added a limit parameter to the getOrderBook method in YoBit classes to allow pagination in the order book retrieval process
replace ` GotWrongOOMEException ` with ` HeapOOMEException ` in ` StressHierarchyBaseClass ` to align exception handling with
added StreamReadConstraints configuration to StandardDataFlow. java to enforce maximum string length for JSON serialization
updated the retrieval and locking mechanism for the enabled engines in PmsConfiguration. java to ensure consistent retrieval of the engines from the configuration and improve
rename ` FullIterator ` class to ` WheelIterator ` and update related code formatting to improve clarity and maintain consistency in naming conventions
improve error message when bug pattern can not be find
increase wait time in localchunkprovidertest to 10 second
hide the uncomplete checklists menu item from true to false to improve user experience by preventing unintended interactions
updated DefaultResultSetHandler to resolve discriminated result maps and introduced a new Contract class to improve handling of discriminated result maps and ensure
added null checks for defaultHome and mOtherHomeAppUpdateReceiver in OverviewComponentObserver. java to improve robustness by handling potential null
removed the VertxGen annotation from PumpImpl. java to streamline the code by eliminating unused annotation
removed unnecessary casting of ` FileDisplayActivity ` to ` FileOperationsHelper ` in ` FileDetailFragment ` and ` OCFileListFragment ` to
trim whitespace from tokens in ConfigAttributeEditor and add a test for stripping trailing and leading spaces in ConfigAttributeEditorTests to ensure consistent attribute
updated class references in multiple auxiliary files
fix substitution of java. lang. module on jdk9 or later
modify the case handling for'relKind'in DatabaseMetaData to set " SYSTEM TABLE " based on the string representation of " pg _ "
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated type specification from'- 1'to'short'in ThriftHiveMetastore. java and HiveMetaStore. java to ensure consistency in
added a new module - info. java file for the core package to define module exports and requirements for better modularization
modified the handling of the ` _ flushState ` and ` _ fillState ` in ` SslConnection. java ` to improve state management for
updated Log4j2LogDelegateFactory to implement LogDelegateFactory and modified LoggerFactory to use LogManager for delegate creation to enhance logging functionality and
added conditional checks for server VM and client VM in ExecutionEnvironment. java and Test7029048. java to ensure compatibility with Solaris and
refactor multiple MongoDB operation classes to improve code organization and maintainability
replaced null with " org. postgresql. ssl. LibPQFactory " in PGProperty. java to ensure compatibility with the latest SSL library implementation
disable currently failing test in TestInterProcessSemaphoreEdges. java to temporarily disable the failing test due to known issues
added sorting functionality for resource names in EditableResources. java to ensure consistent ordering and improve code readability
added a new file ` OSvTerminal. java ` and integrated OSV flavor registration in ` TerminalFactory. java ` to facilitate
added support for multiple file types in the ClassType class to enhance compatibility with additional file formats
replaced HashMap and HashMap with TreeMap in DrillTestWrapper. java to ensure predictable iteration order for vector operations
modified the loop condition to check if'i'is less than the size of'names'and'values'in XPathEntityProcessor.
refactor WebSocketPolicy class to improve code readability and maintainability
changed access and permission flags from static to instance variables in ShadowTelephonyManager and ShadowWifiManager classes to enhance flexibility and maintainability of permission
standardmessageresolver : add ability to perform template - based resolution on message parameter.
refactor code to use ` Class <? extends ClassVisitor > ` instead of casting to ` ClassVisitor ` to improve type safety and reduce casting
added a new ` LoggingAuditService ` class to log user authentication and authentication events to enhance auditing capabilities for better debugging and monitoring
[ tado ] fix null pointer exception in airconditioningzone setting
don't apply visibility check for abstract method in bean definition processor
camel - 13312 : allow http proxy to be configure via system property http. proxyhost or http. proxyport.
updated the maximum encoding version from " 1.1 " to " 1.2 " to support new features and improvements in the template
added jdkSerialFilter ( ) method to System class to enhance functionality by providing access to the serial filter property
( chore ) camel - base - engine : improve log when camel pool be enable.
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in ` StaggeredWorkspaceAnim. java `, `
updated ` ensureRealtimeClusterIsSetUp ` method to accept ` TableConfig ` as a parameter to enhance config handling by incorporating environment
added error reporting to the validation process to enhance error reporting for better debugging
refactor inline QSB handling in InvariantDeviceProfile. java to improve clarity and maintainability of the code
updated URL encoding and exception handling in SortedArrayStringMapTest. java to improve URL decoding reliability and error handling
updated @ Given annotations in TransformSteps. java to include'(. * )'in parameter names to enhance clarity and accuracy of the annotation
added null check for the ` prop ` variable in ` Toolkit. java ` and modified fillRect handling in ` PGraphicsJava2D. java
updated timeout values in FaultToleranceTest to use a predefined timeout value to improve maintainability and readability of the timeout logic
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments. java to ensure the image URL is correctly set for Docker environments
[ knowledgeagent ] make sure system. gc ( ) be call in knowledgeagenttest.
updated javadocs in AdditionalAnswers, AnswerFunctionalInterfaces, and InvocationOnMock classes to improve code clarity and maintainability
replaced createHardLink with copyFile in SnapshotTaker. java to improve file copying functionality by ensuring the target directory exists before copying
refactor method names from ` appendToDescription ` to ` getDescription ` across multiple classes to improve code readability and maintainability by standardizing method names
[ pytorch ] add more device check to pytorch ( # 2451 )
added a check for ` Xml. Document ` before visiting XML in ` Autodetect. java ` to ensure that only XML files are
replaced ` InstrumentationTestCase ` with ` @ RunWith ( AndroidJUnit4. class ) ` and ` @ Ignore ` in test classes to
added new GasLimitRule and ParentGasLimitRule alongside existing ProofOfWorkRule and DifficultyRule to enhance rule management
changed the access modifier of the setupData method from public to private in BaseAssumptionsRunnerTest. java to restrict access to setupData
rename ` autocommit ` to ` runInTransaction ` in ` ChangeSet ` to clarify that the change is intended for transaction execution
don't close deframer in triple server stream if it be already close
[ hotfix ] [ doc ] update sample url to site. baseurl
added a new test method ` testIssue154 ` to ` SelectTest. java ` to verify that SQL parsing and deparsing can work
refactor methods in Common class to improve code readability and maintainability
refactor app launch process to use a context layer for better resource management to improve reliability and readability of app launch operations
[ hotfix ] [ stream ] fix typo in streamexecdeduplicate
( chore ) camel - kafka : log error when send kafka message to topic
dataes - elasticsearch : add immutable ( ) method to simpleelasticsearchpersistentproperty
modified the return type of ` setCoord ` methods in ` GeoCoordSys1D ` and ` GeoSegment3D ` classes to return
added gesture event handling and logging in AskGestureEventsListener. java to improve touch responsiveness and facilitate debugging
modified comparison logic in NGramEstimator to compare strings based on their indices to ensure accurate comparison by considering both keys and their sizes
updated import paths from ` cucumber. runtime ` to ` io. cucumber. core. runtime ` to align imports with the new package structure
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve accuracy of folder icon representation
updated null check for getServerSlogan ( ) to getServerName ( ) in ThemeUtils. java to ensure proper handling of null or empty
added a new file TestSkeletonPredicates. java to implement skeleton predicate testing in the compiler
refactor SelectionHighlighter to improve code readability and maintainability to enhance maintainability and readability of the code
added a new StringResultConverter class to handle string conversions based on the default charset
updated import statements to use the @ Disabled annotation instead of the @ DisabledIfSystemProperty annotation to improve clarity and accuracy of test disabling
modified the condition in WaitForSingleObject call from "! = 0 " to " = = 0 " in JansiWinSysTerminal.
modified the ` setInBuffer ` method to accept a ` FloatBuffer ` and added null checks for the ` buffer ` object to ensure proper buffer
updated the assertion to compare " data " with " File. separator " in TestSolrDiscoveryProperties. java to ensure consistency in file path handling
updated OS detection from " linux " to " mac " and added support for macOS to ensure compatibility with macOS and enhance user experience
changed lockFile to lockName in FSDirectory and Lock classes to improve clarity by using a more descriptive lock name
updated variable name from " android. widget. TextView " to " apps _ view " in Overview. java to improve clarity and consistency in
updated references from ` Invocable. InvocationType ` to ` ClientDatagramEndPoint. getInvocationType ( ) ` to ensure consistency
updated the SQL order clause in the GET _ STEP _ EXECUTIONS string to ensure the execution retrieval is in an order by clause
updated button handling logic in LwjglInput. java to ignore unknown buttons to improve input responsiveness by ignoring unknown buttons
added authorization checks for the approval and rejection of claimed tasks in the workflow to ensure proper handling of approved tasks in the workflow
replaced transient Logger import with a static final logger in AbstractWebApplicationServiceResponseBuilder and OpenIdServiceResponseBuilder to enhance logging consistency and improve code readability
removed minimumUTES from the expiration time in ` SsoAccessTokenProvider ` and added additional test cases in ` SsoAccessTokenProviderTest ` to
[ geos - 8470 ] disable test that do not pass on macos
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update greetresourcemockedtest to 2.16
rearranged conditional statements in JFrame. java to improve code readability and maintainability
added a null check for the database connection before executing the ANALYZE SAMPLE _ SIZE query to avoid potential NullPointerException when the database is not
replaced the use of ` metricsContext ` with ` solrMetricsContext ` in the ` SuggestComponent ` class to ensure consistent metrics context initialization and
refactor output formatting for file and folder counts in OCFileListFragment. java to improve readability and maintainability of the code
return an iterable < keypair > instead of an array for good flexibility.
update SourceVersion. java for improved version tracking to enhance code reliability and maintainability
added a new test class ` ThreadFactoryTest ` to verify the behavior of a custom thread factory in a concurrent environment
updated getLockPeriod method to accept dynamicStore as a parameter to ensure proper lock period retrieval based on dynamic properties support
added a new TicketModel instance to the EditTicketPage to enhance the functionality of the ticket editing process
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow option to dimiss apps from predicted list
updated constructors in various assertion classes to include the self - type parameter to enhance type safety and compatibility with various assertion types
added a menu item for quote actions in TweetActivity to enhance user experience by allowing quote actions to open the ComposeActivity
remove duplicate call to interruptlock. lock ( ) to make sure current interrupt be complete
clarify that videoframerenderer should not use passthrough format for decryption.
added a conditional check for ` result ` before offering failure in ` ServerHTTP2StreamEndPoint. java ` to ensure failure messages are only sent
updated German XSLT error messages from " Stiller Modus " to " Silent - Modus " and " Le nombre d'arguments
added @ ThreadSafe annotation to CheckpointsCleaner. java to ensure thread safety for point cleanup operations
no longer subscribe to the subscription object. fix rx 2.11. 1
removed unnecessary try - catch block in ComponentPresetManager. java to streamline the code for better readability and maintainability
added support for unique column names in Hive result set configuration to ensure unique column names are handled correctly in the result set
mary gui : remove the ` ` bfirsttime'' field from the voice list
added validation for session validity in Session. java and improved exception handling in SessionHandlerTest. java to ensure that a session is not valid and
deleted the ExceptionHelper. java file to remove unused code to streamline the codebase
updated key pair generator's random size from 256 to 255 to enhance security by using a stronger key pair generation
added a codec setting in TestBlockPostingsFormat3. java to ensure compatibility with Lucene41 postings format
[ hotfix ] [ checkpoint ] log empty checkpointrange header
added RSA / ECB / OAEPPadding algorithm name and modified algorithm parameter creation logic to ensure proper handling of algorithm parameters and improve error
updated references to the DARWIN _ AARCH64 platform from DARWIN _ AARCH64 to MACOS _ A
added security exception handling in DebugSourcesResolver. java to improve error logging for debugging issues
removed unnecessary conditional check for OS type in AbstractTest. java to streamline code for better readability and maintainability
updated file upload error handling to include exception details to improve error reporting for file upload failures
free memory when use bufferutils. newbytebuffer ( )
changed the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable pipeline downloaders in the FastSyncChainDownloader
replaced ` Calendar. DST _ OFFSET ` with ` Calendar. DST _ OFFSET ` in ` SimpleDateFormat. java ` and added a new test
refactor variables to use local variables instead of accessing mRollo. mState directly to improve code readability and maintainability by reducing unnecessary references
cloudstack - 7092 : fix npe in virtualnetworkappliancemanagerimpl.
updated StringBuffer implementation to improve performance and efficiency of string manipulation
bugfix : rule. uid should be set to ruleuid, not the ruleuid itself
added a null check for the listener before unsubscribing to prevent potential NullPointerException when the listener is not available
added a pretty print property to the JoltTransformJSON class to apply formatting to the output of the Jolt transform
initialize table field in instrumentationbranchesphase.
improve error message when datasource do not exist
minor refactor to make it easy to subclass the transport class.
doc ( regen ) : fix doclint warning in javadoc.
added handling for ` isUpgradeSuspended ` in ` AmbariManagementControllerImpl. java ` to ensure proper management of cluster suspension
simonstewart : after a code grant, the code be copyright the sfc and the selenium committers.
removed the retrieval of fields from the writer object to streamline the code by eliminating unused variable
added initialization of OAuthProperties with encryption and signing key sizes to enhance encryption and signing functionality in the application
hbase - 28082 use columnfamilycount instead of length of column family in hmaster
replaced the use of ` AllowedResourceAliasChecker ` with a lambda expression in ` SampleWebJspApplicationTests. java ` to simplify alias
refactor ObjectInputStream, ObjectOutputStream, ObjectStreamClass, and package - info files to improve code organization and maintainability
added a reset method to the Cluster interface and invoked it in ClusteredServiceAgent to enable resetting of the idle strategy for better resource management
increment of currentChunkID before creating a new SequenceFile Writer to ensure the writer is created with the correct chunk ID
added abstractjobexecutor to allow subclassing of abstractjobexecutor
updated replay logic in RecoveryStrategy. java to assign a new replayFuture variable to improve clarity and maintainability of the replay operation
refactor variable names from " hugeStaticBase " to " staticBase " in HugeResourceTest. java to improve code clarity and consistency in
implement service ID retrieval logic based on discovery settings to ensure proper handling of service IDs based on consul configuration
replaced ` Float. floatToIntBits ( ( float ) Math. random ( ) ) ` with ` SecureRandom ( ). nextInt ( ) `
print permanent btree trace when runtimecompilations fail during parse
updated calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler to improve accuracy in time comparison calculations
added support for abstract methods in CallsRealMethods and createdMocksWithConstructorTest to ensure correct behavior when dealing with abstract methods in Mockito
refactor checkPackageAccess method to include security manager for class names to enhance security by ensuring only valid package access are validated
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added setup and teardown methods to improve test structure and ensure proper
updated variable names and improved font handling in ContributionListPanel. java to enhance code readability and maintainability by standardizing naming conventions
added a new request method ` REQUEST _ HAS _ TIS ` and updated related logic in ` LauncherInstrumentation ` and ` QuickstepTestInformation
added a call to ` Mutex. EVENT. writeAccess ` in the ` connectAction ` class to ensure proper access handling and prevent potential
replaced ` ImmutableMap < String, ShowOptions > ` with ` ImmutableMap < BuildTarget, ShowOptions > ` in ` TargetsCommand. java `
added new files for ArrayHelper, Asserts, Constructor, Enums, NativeRegExp, Objects, and ValueType to enhance code organization and maintain
added handling for'home'and'end'operations in the Less class to ensure proper navigation and display of the home and end commands
removed synchronization block when retrieving connected plots to simplify code and improve performance by eliminating unnecessary synchronization
refactor intent creation to use Intent. createChooser for sharing activities to improve code clarity and maintainability by encapsulating intent creation logic
roster : remove no - longer - accessible - from - roster constructor
added basic constraints to the certificate generation to enhance security by enforcing basic constraints
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address issues with incorrect transform offsets in the text
replaced calls to ` field. multiValued ( )? Integer. MAX _ VALUE ` with ` precisionStep ` in ` TrieDateField
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher. java to streamline the codebase by eliminating unused components
added a new file ` ArrayLength. java ` implementing reflection tests for array types to ensure that the methods for retrieving the length of an array
wait for the hazelcast process # destroyforcibly ( ) to avoid hang up.
updated ApplicationSettingsService to use @ PostConstruct annotation and refactored settings retrieval logic to improve code clarity and ensure proper initialization of application settings
safepoint : fix assertion error
updated thread name field type from charArray to Ljava / lang / String in OopUtilities. java to ensure compatibility with Java's String
update DEFAULT _ RAND _ SEED value from System. currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and H
fix for stroke ( ) not work in pgraphicsjava2d
refactor ` expandDynamicStar ` method to accept ` SqlIdentifier ` as a parameter to enhance code clarity and maintainability by encapsulating the logic
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to find nested child elements in a container record
added import for PMS message and set a status code for PMS to improve user experience by providing a more informative status message
refactor event modifier retrieval to use getModifiersEx ( ) for improved clarity to enhance code readability and maintainability by using more descriptive method names
AMD64CountLeadingZerosNode and AMD64CountTrailingZerosNode do not register a cycle for cycles 6 and 3
camel - 14850 : fix npe in as2 client when disposition notification be not set
refactor Locale class to improve locale handling to enhance code maintainability and readability
added a button to clear log and a method to clear log messages to improve user experience by allowing users to clear log messages
set mRecentsAnimationController to null in RecentsView. java to ensure proper handling of animation state
updated method signatures and improved locale handling in multiple classes to enhance code clarity and ensure consistent locale management
updated test classes to implement connection pooling and increased execution count to improve resource management and enhance test reliability
simonstewart : adding opera driver to the default driver session
improve error message when file can not be download
added new Lifx product entries for " LIFX Mini White to Warm ", " LIFX Beam ", and " LI
added asynchronous handling for replica creation in collection operations to enhance asynchronous processing and improve data management during collection creation
updated primary key name generation logic in PostgresDatabase and PostgresDatabaseTest to ensure consistency and correctness of primary name generation
updated LogPage and SummaryPage to use ` objectId ` instead of ` objectId ` and added a check for empty refid to ensure that the log
skeletonInterBoneWire now include the bone length in the model space rotation.
added a ` browserDestroy ` method to the ` AndroidImplementation ` class to ensure proper cleanup of the web when the browser is destroyed
added a waitForActiveCollection call in AutoScalingHandlerTest to ensure the test environment is active before proceeding with tests
updated the loop structure and import statements in ScreenTerminal. java and Tuxmuxmuxmuxmuxer. java to improve
updated the soft reset state check in SoftResetAction. java to include additional controller states to ensure the soft reset action accurately reflects the
disable on - disc stream cache by default for texture pack reloading.
added logic to retrieve DLNA resources based on the object ID in Request. java and RequestV2. java to ensure proper handling of media
fixed npe in networkofferingvo. ispersistent method.
modified FileOutputStream to include a close method for resource cleanup to ensure the FileOutputStream is properly closed after use
added error handling for 403 responses in StandardGitHubRepository. java to improve robustness by catching Forbidden exceptions gracefully
log4j2 - 1349 added getoriginal ( ) method to messefactory2adapter.
add @ suppresswarnings ( ` ` banserializableread'' ) to test
updated regex pattern from " [ 0 - 9 ] { 1, 2 } " to " [ 0 - 9 ] { 1, 3 }
added delay settings for tooltip tooltips in ExtractionModelFrame. java to improve user experience by providing feedback during tooltip interactions
updated ProjectCommand. java to include ` passedInTargetsSet ` in various method signatures to enhance functionality by ensuring the correct handling of build
added timezone setting and assertion in TimeTest. java to ensure that the format2445 method correctly handles time zones
refactor MediaSessionConnector class to improve code readability and maintainability
use endpoint handler instead of jssefactory to get ssl support.
updated the displayed altitude display string in GpsLoggingService. java to ensure accurate distance information is displayed for better user experience
added support for enabling futures in BinanceExchange and BinanceAccountService to ensure futures functionality is only enabled when futures are enabled
[ fix # 722 ] adminaccountmanagementservlet now store course and instructor data in a hashmap
added a queue acceptance for worker threads in the connector to enhance resource management by allowing maximum worker threads
refactor watchServiceEnabled initialization to use a constant for the DISABLE _ WATCHER property to improve code readability and maintainability by centralizing
camel - 14748 : camel - jms should return true for ssl component
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker. java ` and updated error handling in ` TestWindowFunctions.
don't assert that the duration be non - negative for a really fast collection
fix npe in javadoc node with line comment
replaced the deprecated ` Unsafe. reserveMemory ` method with a new ` readReservedMemory ` method for macOS to improve compatibility across different operating systems
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner. java ` to ensure proper handling
changed the visibility of ` procId ` and ` procId ` from private to protected in ` HBaseAdmin. java ` to enhance encapsulation and
[ cxf ] set the service class for cxfendpoint. setserviceface ( )
refactor YamlChangeLogSerializer to use a map for storing database change logs to improve the organization and clarity of change set serialization
updated print method from ` println ( ) ` to ` print ( ) ` in SchemaPrinter. java to improve readability and consistency of output messages
remove spongecommon for regenerate all roads / roads / regenerateallroads
replaced calls to ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragment. java ` to ensure correct context is used for
replaced ` @ GeneratedValue ( strategy = GenerationType. AUTO ) ` with ` @ GenericGenerator ( name = " native ", generator = "
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country parameter
updated the ` write ` method in ` BZip2Codec ` to include position and remaining parameters to ensure correct writing of uncompressed data and improve
move logger initialization to appw, so that it can be use in web application
added a constant VALUE _ TYPE _ EMPTY and modified the create method in Value. java to improve code readability and maintainability by centralizing type
replace'= ='with '. equals ( )'for string comparison in GroupManager. java to ensure proper equality comparison for group comparisons
refactor Liquibase - related classes to improve code organization and maintainability
refactored the SimplexNoise class to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating an instance of ` TargetGraph ` to facilitate the
return by the system to see if we see it
add type adapter for artifactversion in metadatacollection. close # 3883
modified the handling of the ` set ` and ` delete ` methods in the ` NativeArray ` class to improve the efficiency of data manipulation by
updated file retrieval logic to use remoteParentPath instead of local storage path to ensure the correct parent file is associated with the current upload
added a new test class UTF8ReaderBug to verify UTF - 8 character handling to ensure that the parser correctly reject supplementary characters in
added unit test base on user forum issue
updated expected subscription streams in BinanceIntegration. java and BinanceUsIntegration. java to ensure proper handling of depth values in ticker integration tests
added a resetAllocation method to the Wrapper class and called it in SimpleParallelizer to reset allocation state for better resource management
removed unused import of AssertTree from AmbariManagementControllerTest. java to clean up the code and improve readability
added synchronization to system property access in mmm Agent. java and created a new AgentCMETest. java file to ensure thread safety when
[ hotfix ] [ core ] fix checkstyle violation in modelutils
refactor AbstractDoubleArrayAssert class to improve code readability and maintainability
updated width and height calculations in Legend. java to account for mLabels array bounds to ensure proper rendering of labels without exceeding minimum space
added test methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf `, ` Test
updated data retrieval from ` d. get ` to ` d. getValues ` in ` MoreLikeThis. java ` to ensure correct retrieval of
replaced the use of ` ruleResolver. requireRule ` with a new method ` BuildTargetSourcePath ` to improve code clarity and maintainability by
add ` ` botania. versioning. disabled'' chat message
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` variable to improve code clarity
added a new command - line argument " - b " in AidlStep. java and updated formatting in GenAidlTest. java to
fix : do not delete null check on edge instruction
added a TODO comment to the FakeHttpLayer class to improve code clarity and maintainability
[ hotfix ] fix error handle in embeddedleaderservice
compositediscoveryclient. getinstances ( ) should return a single instead of a flowable stream
replaced the use of ` systemResources. getConfiguration ( ) ` with ` new Configuration ( ) ` in ` ParallelUniverse. java
[ hotfix ] [ doc ] add description about job computation recovers from task failure
updated methods and variables in WidgetsFullSheet. java for better visibility handling to improve user experience by displaying appropriate messages based on adapter type and
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 2373 ( #
refactor test setup in AuditAliasCommandIntegrationTest to use a setup method to improve code clarity and maintainability by encapsulating workspace setup logic
removed logging statements related to header view height in WidgetsFullSheet. java and widget recommendationsTableLayout. java to streamline logging and improve
( chore ) camel - cxf : disable test that be not applicable in this scenario
added error handling for periodic refresh in CachedStore to improve robustness by logging exceptions during periodical refresh
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` classes to use ` @ RequiredArgsConstructor ` and ref
added a check for default background fills and refactored foreground and background handling in HSSFCellStyle and HSSFFont classes to
refactor ZonedDateTimeFormatterBenchmark class to improve code readability and maintainability
refactor the update processing logic in ` DistributedUpdateProcessor. java ` and add a new test class ` DistributedUpdateProcessorTest. java ` to
added a null check for the stage when the motor is null in the SimulationListHandler to ensure robustness by preventing potential null pointer exceptions
update / editscript to use / editscript instead of / editsession
refactorings in ExtendedMasterSecretExtension. java to improve code readability and maintainability
changed the declaration of the processor variable from non - final to final to ensure that the processor cannot be modified after initialization
added listener for onWriteFailed in WritableKeyProcessor to ensure proper handling of stream closure during write operations
added a new MySQL database identifier " CUBE " to enhance database functionality and improve clarity
added a try - catch block around the rm call in TestReplicationHandler. java to handle potential IOException during directory rm operations
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related method names to improve clarity and maintain
refactor DefaultOkHttpClientFactoryTest to use reflection for property retrieval to improve code readability and maintainability by reducing repetitive reflection calls
refactor exception handling in BatchUpdateException, PreparedStatement, and Statement classes to improve code clarity and maintainability
added a null check for the'os'parameter in RawMessageContentRedirectInterceptor. java to avoid potential NullPointerExceptions when'os '
ggb - 2118 fix : algebravieww. setwidgetsize ( null, 0, 0, 0, 0, 0,
modified the ` jailerMain ` method to include an ` fromCli ` parameter and added validation for the ` fromCli ` parameter to
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future development
added a preference for unread pull notifications in TalonPullNotificationService to enhance notification handling by allowing users to track pull notifications effectively
don't replace the first input for a null node if the kind do not match.
updated memory calculations and improved camera usage in the Box2D and Pongographic classes to enhance performance and accuracy of graphics rendering
refactor RecyclerView initialization to improve readability and maintainability to enhance code clarity and ensure proper initialization of the RecyclerView based on device orientation
changed log level from trace to warn in CLIService. java to improve logging detail for background operations
added debug output for method instance names and abstract flags in JimpleBodyBuilder. java to improve debugging and ensure abstract methods are processed correctly
ggb - 5171 don't run pointer up on ie10 +
added deviceid parameter to notification user retrieval to allow filtering of notifications based on device type
updated the base URL in the CGIARProvider class to use the new SRT - ZIP and SRTM data GeoTiff files to
replaced ` getFileChooser ( ). removeAll ( ) ` with ` c. removePropertyChangeListener ( filterComboBoxModel ) `, ` approveButton
change return type of handle ( ) from void to boolean. no logical change.
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to return ` Optional < T > ` instead of returning ` Optional < T
hide transport spinner when makingShortcut is true to improve user experience by providing immediate feedback on the transport spinner state
updated lint handling in ` ppp Attr. java ` and added new classes ` T7043371. java ` and ` T70734
refactor backPressed methods to return a boolean indicating success to improve handling of back press events based on user input
added support for enabling long view index in the query services to enhance flexibility in index management based on user configuration
corrected the casing of " v " to " v " in SDRTrunk. java to ensure consistency with Java naming conventions
updated PrivateKeyParserTests to use StringUtils for path cleaning to improve code readability and maintainability by utilizing a clean path utility
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature and improve code clarity
updated IndexWriterConfig initialization to use TEST _ VERSION _ CURRENT instead of Version. LUCENE _ 40 to ensure compatibility with the current version
hbase - 25836 importtsv should use - d ` no. strict. column. family'to disable column family check
[ java ] don't pass subscriptionid to archive. stoprecording.
replaced calls to startActivity with startActivitySafely and added visibility adjustments for the voice button proxy to improve user experience by ensuring that the
added a conditional check in PoloniexStreamingService to return early if the first element of jsonNode matches " i " to avoid processing
refactor Procedure class to improve code readability to enhance maintainability and facilitate future development
updated resource bundle retrieval to include Locale and ClassLoader to ensure consistent resource loading across different locales
[ wasm ] add normalization pas for kotlin array creations.
modified conditional logic for term counting in PerSegmentSingleValuedFaceting. java to ensure proper handling of counts and prevent errors during term processing
fix nullpointerexception in modmetadata. getdecomoderequestedfielddata ( # 3481 )
added support for the ` sun. misc ` import package in the ` com. google. gson. annotations ` package and created a new test
fix npe in propertydescriptor. iscontrollerservicenable
hbase - 25836 setautoflush ( false ) should not call setautoflushto ( false )
fix : ctstatement. getThenStatement ( ) and ctstatement. getThenStatement ( ) should be cast to ctstatement. get
implement ` hasUserData ( ) ` method in ` SimpleFeatureImpl ` and add corresponding test in ` SimpleFeatureImplTest ` to ensure that
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify error handling by eliminating
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the ` enableLogging ` method from the ` JavaCompiler ` class to streamline logging configuration by eliminating unnecessary method
add a new class ` InJavaSourceSet ` to filter Java source sets to enhance the functionality of the ` JavaSourceSet ` class
added a new resource file for " gdalinfo " in TestGDALParser. java to ensure proper handling of resource files during testing
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter for objects based on
removed " useExternalStorage " check from conditional statement to simplify code for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated references in ` ObjectCache ` and
bug 7143 : add parameter to createtemplate api to enforce that either disk offering id or snapshot id must be pass to create
updated content assignment in ToHtml. java and improved assertion message in BaseTestCellComment. java to enhance code clarity and ensure proper handling of
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate `, ` LocalDateTime `, and ` ZonedDateTime `
added a new file ` Issue382. java ` to handle specific error types in the application
replaced the static import of RuntimeException with a static import of Integer. signum and simplified the return statement in the PositionUtils class to improve code
added a condition to hide the holder's text when the condition is met to improve user experience by ensuring the holder's text is
fix : use getimportkindfor ( ctreference ) instead of getimportkindfor ( ctreference )
updated method reference in XpiDriverService to use getProfile ( ) instead of : : getProfile ( ) to improve code clarity and maintainability by
add liquidblock subclass that implement bucketpickup. fix vanilla bug.
fix intermittent failure in amq2902test
update time zone from PST to America / Los _ Angeles in LocaleProviders. java to ensure correct time zone is used for
[ java ] remove unneeded array creation in distincterrorlog
updated system property annotations for nightly, weekly, and other test groups to ensure tests are only enabled for nightly tests, enhancing
fixed npe in sqlexecutionloggerimpl if logger be null.
add deny access for reflective access to graalcontext. getinstance ( )
implement updatePixels ( x, y, c, d ) in PGraphics2. java to ensure that updatePixels ( x, y )
update HiveAbstractReader to include partition information in the verifyAndAddTransactionalProperties calls to ensure transactional properties are correctly added for partitions in the job
refactor overlay handling logic in Workspace. java to improve readability and maintainability of the code
hhh - 147483 : add immutablebatchbuilderimpl and batchbuilderinitiator interface.
improve error message for shouldnotreachhere ( )
added a test for spying on a class retains state and created a new class MockWithStaticStateDemo to ensure proper functionality of state
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest. java ` to ensure SQL parser can handle union
added null check for ugi before executing the action to avoid potential NullPointerExceptions when ugi is null
refactor error handling in OpenALMusic. java to use a variable for error code to improve code readability and maintainability by reducing repeated method calls
camel - 15836 : endpointhelper. reslove ( string, class < t > ) deprecate.
modified the handling of DECIMAL types in RexNodeConverter to include precision and scale to ensure accurate representation of DECIMAL data in the query
replaced calls to ` getVendorProperties ( ) ` and ` getDeviceProperties ( ) ` with ` Optional. ofNullable ( acct. attest
updated the assertion to use ` Long. toString ( now ). getBytes ( ) ` instead of ` String ( now ). getBytes ( )
replaced the use of ` AxialStage ` with a direct ` RocketComponent ` in ` BasicFrame ` and ` DesignPanel ` to
added longRunningTime parameter with getter and setter methods in Args. java to enable dynamic adjustment of the long running time based on configuration
updated comparison logic in ` FindRefComparison. java ` and added a new class ` Ideas _ 2012 _ 05 _ 21. java `
updated import statements and error handling in HttpServerProvider, ScriptEngineManager, and FtpClientProvider classes to improve code clarity and ensure proper service
gml - 3 encoding : use decimal. toPlainString ( ) instead of decimal. tostring ( )
removed unnecessary Expectations declaration from TestRestClientRequestImpl. java to simplify the code and improve readability
updated condition in MissingUniqueConstraintChangeGenerator to include reference database checks to ensure unique constraint integrity during the comparison process
modified the implementation of Android constants and asset path handling in IjProjectTemplateDataPreparer. java to ensure proper handling of Android properties
replaced assertEquals calls with await ( ). atMost ( 5, TimeUnit. SECONDS ). until ( ). atMost ( 5, TimeUnit
added user arguments to the ImmutableMap builder in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance functionality by including additional user - specific arguments
substitute resource bundle with module support for jdk 11 +
change log message from " match limit " to " match order " in HepPlanner. java to improve clarity of log output for better debugging
added a new file TheRockMetaDataDemo. java to demonstrate the functionality of retrieving exchange metadata
renamed FloatingDecimal and FormattedFloatingDecimal classes to strictfp and added a new test for strictness to ensure proper handling of floating - point
removed unnecessary unparseIdentifier parameter from columnNamesBuilder to simplify the code by eliminating unnecessary parameters
added a new test method ` replaceField ` in ` JavaTemplateContextFreeTest ` and updated method signatures in ` BlockStatementTemplateGenerator `
added a check for non - synthetic methods in the InstantiateStaticClass and created a new Property3 class to ensure that non - sy
replaced ` projectFilesystem. getPathForRelativePath ( basePath ) ` with ` basePath ` to simplify path retrieval logic
added rescue handling and registration logic in IkStepDefinition. java to manage pending rescue information and improve error handling during cucumber execution
changed the ` equals ` and ` hashCode ` methods from ` final ` to non - final in multiple type classes to enhance immutability and
added a method to retrieve the default SyncLevel based on the provided level to improve flexibility in syncing based on user input
fix flakiness in controlcommandstest. testclientPause ( )
added a check for both CONSTRUCTION and RECOVERY states in the RecoveryStrategy class to ensure that recovery slices are excluded from being
fix ` opencv _ core. create ( image, depth, numchannels ) ` to ` opencv _ core. create ( image, depth,
added SDKPath as a final variable in AppleBundle and SwiftStdlibStep classes to ensure the correct SDK path is used for process execution
[ flink - 2594 ] [ runtime ] remove unused private field in transientblobcleanuptask
cloudstack - 5595 : fix typo in error message
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code maintainability and readability
added conversion of row type to relBuilder in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type
fix typo in BetterBlockPos. java file
updated proxy retrieval to use the class loader instead of the full servlet context to ensure compatibility with different servlet implementations
updated version handling to use " nightly - build " instead of " nightly - nightly " to improve clarity and consistency in versioning
added checks for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper handling of leading and trailing characters in SQL statements
add findbugs property findbugs. nullderef. assumensp
( chore ) camel - test - infra - main : use a dynamic port number
updated BLOB _ SIZE, PLAY _ MARGIN, SLIDER _ MARGIN, and circleOuter variables in DrawAudio. java to improve
added DuoSecurityMultifactorAuthenticationProviderBypass configuration to enhance multifactor authentication capabilities
[ fix ] maxrectpacker. findpositionfornewnodebestareafit and maxrectpacker. findpositionfornewnodecontact
doc ( extraction from xml file )
added helpPage functionality and refactored updateContents method in PMS and HelpTab classes to enhance user experience by providing a dynamic help page
added GeocodeProviderFactory and Constants interfaces for improved geocoding provider and storage management to enhance geocoding functionality and maintain consistency across the
updated import statements for CharArraySet from org. apache. lucene. analysis. util to org. apache. lucene. analysis. CharArray
( chore ) camel - test : replace expect exception with fail ( )
updated GATEWAY _ SERVER _ ID to use Protocol. GATEWAY _ SERVER _ ID instead of a hardcoded value to improve maintainability
updated conditional logic in SegmentsInfoRequestHandler. java and refactored collection creation in CollectionsAPISolrJTest. java to improve code
modify the calculation of numPredictiveAppCols based on phone type to ensure accurate number of predicted app columns based on device type
added a method ` hasScalarSubqueryInput ` in ` JoinUtils ` to check for scalar subqueries to improve code clarity and maintainability
added blockbuildcraft to make it easy to remove crafted block.
updated gravity settings and layout parameters in DeviceProfile. java to improve layout consistency and ensure proper layout parameters
no longer call run ( ), just call start ( ).
initialized ` ms ` to null in ` HiveMetaStoreClient. java ` and initialized ` metaStoreClient ` in ` HiveMetaStoreClient. java `
updated ` getDisplayScript ` method to use ` Category. DISPLAY ` instead of ` getDefault ( ) ` to ensure that display script uses the appropriate
removed static import of BASE _ URL _ PROP and CORE _ NAME _ PROP from the method call to streamline code by eliminating unnecessary
replaced ThreadLocalRandom with Random for random number generation to improve performance and maintainability of random number generation
added a check for ` launcherIsReady ( ) ` before backuping favorites and screens to ensure backup functionality only occurs when the launcher is
updated exception messages for clarity in Cell. java to improve readability and maintainability of the error handling logic
camel - 5193 : added test for resilience in pooledexchangefactory

refactor ShadowProcess class to improve code readability and maintainability
use hamcrest assertion instead of junit in filemessagetest
added logging statements for various components in Grasscutter. java to enable more detailed logging for better debugging and monitoring
changed the visibility of the ` highlightCnstScrRngQuery ` and ` isHighlightCnstScrRngQuery ` methods
modified condition to check for workspace state in overview mode to ensure proper handling of workspace state in normal and normal states
` ` ` ` `'''''''''or''''
SnippetTemplate. java : added cacheable check before notifying a new template to ensure that templates are only processed when cacheable is enabled
refactor scope variables to use coreScopeSession instead of variables to improve code clarity and maintainability by consolidating scope handling
added a primary key constraint to the measurement table in DatabaseMetaDataTest. java to ensure that the primary key constraint is correctly enforced for the
[ cli ] rename permission - config - path to permissions - config - file.
removed unnecessary null check for ` httpSession ` in ` HttpSessionContextIntegrationFilter. java ` to simplify session creation logic and improve logging clarity
added a new file TestIfWithDeadRegion. java that includes a supplier for string retrieval to facilitate testing of string handling in a
rename ` english _ UD ` to ` english _ USD ` in ` DependencyParserITest. java ` to ensure consistency with the new
disable high resolution timer in snowflakeidgeneratortest. testconcurrentaccess
added a static UI setting and conditional logic for hiding the toast bar based on user settings to enhance user experience by providing a smoother interface
modified the return statement to use a lambda expression and added a try - finally block for resource cleanup to improve code readability and ensure proper cleanup of
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added a check for ` clientId ` in ` Wh
updated error dialog messages to use localized strings to improve localization and maintainability of the code
tika - 607 -- add detection for openxmlformats - officedocument. spreadsheetml. sheet mime type
added logging functionality and improved error messages in multiple classes to enhance debugging and provide clearer feedback on missing features
camel - 15836 : camel - eip - enricher - maven - plugin - fix xml output.
add - dcassandra. skip _ schema _ check = true to avoid race condition
added debug logging for audio notification and playback devices in DeviceConfiguration. java to improve debugging and ensure correct handling of audio capture devices
added a WebsocketConfig class and updated WebSocketClient initialization to utilize it to enhance flexibility in WebSocket client configuration
implement iSuiteListener interface in CacheValidationListener to enable cleanup of test results in a suite
updated content length handling in MoreIndexingFilter. java to ensure that the content length is not empty before adding it to the document
addproblemfactchange ( ) to solveproblem ( )
ignore pathalreadyexistexception when concurrent inserting timeseries
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to retrieve the result of the
changed access modifiers from public to protected for several methods in Shadow classes to restrict access to these methods for better encapsulation
bugfix : don't finalize the owner if the user don't own the account
modified the handling of the ` _ valueString ` in ` HttpParser ` and updated the corresponding test cases in ` HttpParserTest ` to
refactor thread initialization logic in J9VMInternals. java and Thread. java to improve code organization and ensure proper handling of system properties
added ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created a corresponding test class ` EnvironmentTest ` to enhance functionality for external
[ jbrules - 3514 ] add type coercion test for mvel 2. 0.
updated import statements and formatting in LoggingConfig. java and DbgpackerPacker. java to improve code readability and maintainability
added the exception message to the log for better debugging to improve error reporting by including the exception's message
remove tel : from to number if it start with a tel :
refactor visibility logic for shared file icons in FileListListAdapter to improve readability and maintainability of the code
deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf. java and TestTxnCommands3. java to encourage the use of
hive - 25875 : remove confoverlay from operation ( jesus camacho rodriguez, review by zolt
replaced usage of ` Lists. newArrayList ` with ` new ArrayList < String > ` in ` BTCMarketsStreamingAdapters ` and `
fix OGRDataStoreTest to use getTypeName ( ) instead of getName ( ) to ensure type comparison accuracy
removed the ` onErrorInStep ` method from ` StepListenerSupport. java ` to simplify error handling by eliminating unnecessary method
refactor Wallet class implementation to improve code readability and maintainability
camel - 7999 : camel - netty - http should use the hostname if available. thanks to daniel dai for patch.
use log instead of system. out. println in testnonblockingapi
added a check to return false if the number of rows exceeds the size of the database connection list to prevent potential errors when accessing the database connection
pmd : methodwithsamenameasenclosingclass add to ensure that method with same name don't throw an error
added support for extended platform - managed object in ManagementFactory. java and created ExtendedPlatformComponent. java to enhance functionality for managing beans
added SQL string replacement for single quotes in BasicQueryTest. java to ensure proper SQL syntax when processing queries
updated response paths in BleutradeDtoTest, BleutradeExtendedDtoTest, and BleutradeCancel
refactor TextEscapeUtils class to improve code readability and maintainability
added a filter parameter and modified the FilteredQuery construction in AbstractSpatialFieldType. java, and added a test for distance filtering in TestSolr4
modified GpsLoggingService to show progress messages when the main form is visible to enhance user experience by providing feedback during auto - email sending
replaced ArrayList with HashSet for inlinks storage to improve performance and maintainability of the code
[ TradfriDiscoveryService ] do not remove old result when a scan be stop.
modified the ` testFilterForPartition ` method to accept a boolean parameter to enable filtering behavior based on server side conditions
added'closed'status to ticket workflows in TicketModel. java and added'Abandoned'case in TicketsPage.
removed unnecessary ` columnAliasPrefix ` initialization from multiple platform classes to streamline code and improve maintainability by eliminating redundancy
updated LlapRowRecordReader to use BytesWritable instead of Text to improve data handling and compatibility with Hadoop's BinarySerDe
add a mechanism to determine if the jvm be a native jvm run on a 32 - bit system
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5362 to pdf
added a new daemon option to the RESET _ ALARM command and implemented daemon mode functionality in TerminalClient to enhance functionality by allowing users to
added a new file FlushIndexTask. java to implement performance flushing of the index writer to enhance performance tracking during index flush operations
fix memtable. getflushpath ( ) to account for the actual size of data file
added a SEASONS parameter to the conditional check in MediaLibraryFolder. java to ensure proper handling of specific output scenarios
added a new file LocalSocketAddress. java to test IPv6 availability of a DatagramSocket to ensure that the local address matches the IPv6 interface
updated grid size points in GridSizeMigrationTask. java to correct grid size migration logic
replaced calls to ` getName ( ) ` with direct calls to ` getName ( ) ` in ` SerializerPojo. java ` to streamline code
added READ _ ONLY option handling in the Context class to ensure operations are only allowed in read - only contexts
refactor LookAndFeelCommand class to improve code readability and maintainability
updated logic for determining the lastRunEnd in BlockBoxing. java to ensure accurate boundary checks for the boxing process
added imports for EOFException, and EofException in GracefulStopTest. java to enhance exception handling to support additional exception types
replaced usage of ` lock ` with a synchronized ` remove ` method in ` NetJavaImpl. java ` to improve thread safety and ensure consistent
updated method signatures in NetworkParameters. java to improve code clarity and maintainability
added a conditional check for account asset optimization in DynamicPropertiesStore to ensure account asset optimization is controlled through the CommonParameter instance
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to 0 in VM. java to facilitate
added error handling for invalid contract protobuf in TransactionCapsule. java to improve robustness by throwing a P2pException for invalid protobuf buffers
remove ` ` exceptiontypechecking'' class from the strictexception rule
updated resource path and added logging for missing localization in HelpContent. java to improve localization handling and provide clearer error messages
added a new file ProcessorInfo. java to determine the number of supported processors based on the system's ASCII charset
add - html option to generate html output ( default stylesheet )
migrate ` logbackloggingsystem ` from ` Optional < String > ` to ` String ` to improve configurability and ensure logbackXmlLocation is
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to improve code organization and enhance event handling
allow ` @ ConditionalOnProperty ( ` spring. sleuth. propagation. tag. whitelisted - keys ` ) ` to be conditional on
refactor RustCompileUtils to use a switch statement for conditional linking based on depType to improve code readability and maintainability by consolidating conditional
updated ` oauth2LoginLinks ` method to accept ` MultiValueMap < String, String > ` as a parameter to enhance the OAuth2 login
hbase - 25836 fix halfstorefilereader # seekbefore to return first kv in seekbefore
hhh - 147482 - deprecate generationtimestamps in favor of generationtime
nd4j : add test for layer norm nan ( # 2595 )
replaced direct calls to ` showShareFile ` with a call to ` getFileOperationsHelper ( ). showShareFile ` across multiple activities to
added a new test class LiquibaseUpdateMojoExecutionTest for validating the execution of Liquibase update plugins
convert " proxyType " to uppercase to ensure consistency in proxy type handling
add a new mod _ minecraftforge. java that include the version of the Minecraft forge to facilitate the initialization of Minecraft forge
refactor JdbcDatabaseSnapshot to include tables of columns fetched and filter based on case - sensitive data to enhance cache efficiency and improve accuracy of column retrieval
added a new container with border images and labels in CSSBorderTest. java to enhance the visual appearance of the border in the UI
make ` retryloadbalancerinterceptor ` conditional on miss bean
change superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout to ensure proper layout behavior by using more appropriate parent types
updated the construction of ` parentTaskName ` to use ` System. currentTimeMillis ( ) ` instead of ` System. nanoTime ( ) `
added error handling for valid AddServiceRequest in ServiceResourceProvider. java to improve robustness by catching potential IOException during service request processing
inverted the logic for checking for unversioned files in IndexDatabase. java to ensure proper handling of unversioned files
make sure round ( x [ 1, 2 ) < 2 for x [ 0, 1 ] in ca
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
addendum to deprecate method
refactor methods in JLayer class to improve code readability and maintainability
increase wait time of eviction test to reduce flakiness
changed variable name from ` encodeInternal ` to ` encodePassword ` and ` saltedPass ` in ` Md5PasswordEncoder. java
updated method calls to use mTaskRecyclerView's getViewTreeObserver ( ) for global layout listener removal to improve code clarity and maintainability by
refactor response handling in Response. java to improve code clarity and maintainability
fix bogus ` long. min _ value ` in ` sstablemetadata `. patch by jbellis
add multichat operation set definition and gibberish protocol implementation. related issue : issue # 241, issue # 244,
added null checks for replies in TweetActivity, TimeLineCursorAdapter, TweetView, and TweetActivity to ensure that replies are
replaced ` ToStringBuilder ` with ` Objects. equals ` and ` hashCode ` methods in ` HitbtcBalance ` to improve object comparison and
refactor SqlCodeGenerator to improve handling of column names and add a new test for where clauses in SQL statements to enhance code clarity and ensure proper
updated return statement to use addrs. toString ( ) instead of s to improve clarity by directly returning the string representation of addrs
added OpenCookie import and improved file handling in EditGcodeFile. java to enhance functionality and maintain compatibility with OpenIDE libraries
from - to - from
updated energy management logic in PipePowerWood. java to ensure energy adjustment only occurs when the energy needs to be stored
added a check to delete the temporary file if it does not exist to ensure that temporary files are properly deleted when necessary
updated JSON property names in BitstampWebSocketTransaction and added new test cases in BitstampStreamingMarketDataServiceTest to improve code clarity and ensure proper
ReplayProcessor and ReplaySubject to return null if time exceeds maxAge to ensure safe handling of expired values in ReplayProcessor and ReplaySubject
updated expected citation format in CitationStyleGeneratorTest. java to ensure consistency and accuracy in citation generation
added new columns and refactored SQL query preparation in MediaTableFiles. java to improve code clarity and maintainability by centralizing insert
apps : show only definition for non - equation in exam
fix nullpointerexception in sipcommtextfieldui.
hbase - 25836 avoid npe in metareader. getmeta ( ) when startrow be null
updated the initialization script from " q _ test _ init. sql " to " q _ test _ init _ for _ minimr. sql
refactor Math. java and StrictMath. java files to improve code clarity and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags. java to facilitate enabling of transient taskbar functionality
refactor AccessExecution, AccessExecutionVertex, and ArchivedExecution classes to improve code organization and maintainability
added a condition to set the density of 3 if scaling is equal to 3 to ensure consistent rendering behavior when scaling is not equal to 3
rename ` optional ` to ` vararg ` in the Parameter class to improve clarity and consistency in naming conventions
hbase - 25836 regionstatestore. getstate ( ) should log exception rather than return null
[ hotfix ] [ test ] increase wait time in testclusterupgradetask
added a new class ` SelectChannelAsyncContextTest ` and modified logging in ` AsyncHttpConnection ` to address potential issues with asynchronous requests and
updated the method signature of ` SearchUiManager ` to include a ` showArrow ` parameter to enhance functionality by allowing the option to show an
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 496 : row
test : skip linux / amd64 only test
updated Scalars. java to handle different input types for StringValue and IntValue to improve robustness by ensuring proper value retrieval for different input
updated primary key validation logic in CreateTableStatement. java to ensure that only one primary key is specified to improve error handling for ambiguous primary key
added conditional logic to set drawable resources based on LMP state to enhance UI consistency across different devices
fix an npe in vmservicemanager. getvirtualmachine ( ) ( # 2496 )
added headers configuration methods for various header writers in HeadersConfigurer. java to enhance flexibility and maintainability of header writer configurations
refactor ObjectEnumerableAssert class to improve code readability and maintainability
simonstewart : move devtoolsprovider out of devtoolsprovider. java
added type attribute to @ aggregateroot annotation to allow for more flexible test grouping
added support for prebuilt libraries in the Python binary to enhance compatibility with prebuilt Python rules
added support for client authentication in NetServerOptionsConverter and updated related methods in HttpServerOptions to enhance security by ensuring proper client authentication handling
hive. repl. rootdir and hive. repl. cmrootdir should use $ { system : user. name } placeholder to ensure compatibility with
refactor task view removal logic in RecentsView. java to improve clarity and maintainability of the code
add timeout to @ test ( timeout = 60 * 1000 )
removed the clearAll ( ) method from DataTableTopComponent. java to streamline the code by eliminating unnecessary functionality
renames controller to flowcontroller to improve code readability
updated the exchange number handling in the OperatorTreeGenerator and added a new test for child operators with exchange in PipelineBuilderTest to ensure correct exchange
added uses io. github. classgraph. ClassLoaderHandler to module - info. java for improved class loading handling
planner : fix npe in event thread
added JsonIgnore annotation to ApplicationSettings. java to prevent serialization of sensitive data
added a null check for throwable in PlotListener. java to ensure that the throwable is not null before proceeding with further operations
refactor query info retrieval logic in QueryTimeManager. java to improve clarity and maintainability of the code
fix the auto workbench not work if there be no recipe in the crafting slot
fix hdop handle in gl200text ( fix # 2481 )
renamed ` timeColumnName ` to ` incomingTimeColumnName ` in ` AvroRecordToPinotRowGenerator. java ` to improve clarity by accur
replaced multiple calls to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` with a single call to ` Http
added support for inject container with an initializable factory.
refactor timer observation handler to use a reusable tag to improve code maintainability and reduce duplication
changed the data type of SYNC _ DELTA _ RATE from float to double and updated the fetch interval logic to improve precision of fetch
thymeleaf / thymeleaf / thymeleaf / thymeleaf / abstractstandardfragmentinsertiontagprocessor. java deprecate unwrapped syntax ( #
changed the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap ` to ensure thread safety when deserializing attributes
fix for http : / / issues. apache. org / jira / browse / amq - 4621
added new color constants and modified extractInto method in ColorExtractionAlgorithm. java to enhance color extraction functionality and support for dark text hints
added accessibility check for the data folder in SketchBuilder. java to ensure that only accessible data folders are included in the source folder path
updated OmniNotes. java to return false for debug build type and modified the ` appendContent ` method to include a title parameter to
removed instantiation of SessionRegistryImpl to simplify code by eliminating unnecessary object creation
camel - 18836 : camel - netty - streaming should log exception when reconnection fails.
use javassist proxy instead of cglib proxy ( # 224 )
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool. java ` to utilize a more efficient data structure for thread
updated socket exception handling to include both host and port to improve error reporting for missing address information
added a method to check if the view path is under the repository to improve error handling by providing clearer feedback when the view is under the specified
remove the ` ` tab - header - area'' s ` ` tab - header - area'' element from the tabbedPane
added " - XX : + UseCompressedClassPointers " and " - XX : + UseCompressedOops " flags in multiple test files
added validation for update log state in PeerSync. java to ensure update log is only in active or rePLAY state
deleted the ConnectionHook. java file to remove unused code to streamline the codebase
removed the ` waitForReplicasInSync ` variable and related assertions from multiple test files to streamline the code by eliminating unused variables
camel - 19836 : camel - swagger - java - should use'isEqualTo ( type )'instead of'isGivenin ( )
[ apex ] add support for external apex version ` ` 45''
update copyright year for file in src / main ( # 1921 )
refactored the initialization of ` AggregateEngine ` to use a holder class for thread pool management to improve thread management and reduce reliance on
replaced StandardByteBufferPool with ByteBufferPool in WebSocketAsyncConnection and WebSocketServerFactory to improve performance and resource management by utilizing a more efficient buffer
added scrolling functionality to scroll to specific indices in UploadActivity to improve user experience by providing quick access to thumbnail data
chore ( sql ) : fix sql code generator when timestamp be override by other column alias
refactor ` LauncherAnimUtils ` and ` LauncherStateTransitionAnimation ` classes for improved animation handling to enhance code clarity and maintainability while ensuring
added a conditional check to disable the default user agent in HttpClient to ensure that the default user agent is not overridden when the default user agent is
added pubsubhubbub property and logic to handle pubsub feeds to ensure feeds are only processed when pubsubhubbub is enabled
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method
updated method to check for non - synthetic classes in StubJarClassEntry. java and added a new test case in CalculateAbiFrom
dspace - webapp should not be part of the rest api
added null check for table aliases in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to ensure proper handling of missing columns and
[ hotfix ] fix typo in jobgenerator identity
updated logging level from info to warn for broadcast transactions to improve clarity of logs and enhance error handling
update basicmap. testmap ( ) to use new version of hazelcast. core
updated configuration properties for rcfile optimization writer and validation in HiveClientConfig. java to ensure consistency in configuration for rcfile optimization
added a new enum ` TlsClientCertPolicy ` and updated related logic in ` GitBlitServer ` to enhance client certificate handling and
removed a retry mechanism for subscription failures in KrakenFuturesStreamingService. java to streamline the subscription process by eliminating unnecessary waiting
updated ProxyWebSocketHandler to accept headers and subprotocols as parameters to enhance flexibility in handling WebSocket protocols based on request headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet. java to facilitate debugging by providing insights into fetch requests
updated format string formatting in HolidayEventFormatter. java to improve readability and maintain consistency in formatting
fix : finalizeprivatefields don't handle innerclass static nested class.
updated exception handling in UnexpectedJobExecutionException. java to improve error clarity and maintainability of the code
deleted the module - info. java file and modified the buttonShouldBeOpaque assignment in AquaLookAndFeel. java and AquaUtils.
updated references from ` maxFreq ` to ` maxCost ` in ` DrillSidewaysQuery ` and ` DrillSidewaysScorer
added GeoDegeneratePath class with a value of 36 to the classRegsitry to ensure proper handling of degenerate paths in object
removed the preFill parameter from multiple pool constructors to simplify constructor signatures and improve code clarity
added a condition to update taskbar stash state based on launcher state to ensure taskbar state is updated correctly when the application is not in the
added null check before comparing default styles in CascadeDeleteVisitor. java to avoid potential NullPointerException when retrieving default styles
fix marqueelabel and fixedpanel in status tab
refactor icon retrieval logic in FileTreeViewHolder. java to improve readability and maintainability of the code
updated assertions from " isEqualTo " to " contains " for " v18 ", " land - v17 ", and " large - land
synchronize access to suiteresults to prevent concurrentmodificationexception
add test nativeworker test for native - probability function
added ShutdownThread. deregister ( this ) method call in ClientContainer. java to ensure proper cleanup of resources on shutdown
hhh - 147486 - sybaseASE15dialect # droptTemporarytableafteruse should return false
simonstewart : simonstewart : simonstewart : fix htmlunit webelement. ascolor ( )
refactor multiple Java files for improved consistency to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter class to improve code readability and maintainability
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit. java to improve readability of memory allocation logs for better
update ad playback state when there be no ad group.
added a suppressing warning for UndefinedEquals in MultimapSubject. java to ensure that equality checks follow Multimap. equals for better error handling
updated the FREQUENCY value from ` deg _ text ` to ` unit _ hz ` in the ` fetchPropertyValue ` method to
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
replaced ` all. putAll ( includedLabelSets ) ` with a new ` new TreeMap < > ( includedLabelSets ) ` to streamline
avoid npe in vertexlighterflat. emitvertexformat ( vertexformatelement )
added tracing context to message sending and receiving interceptor classes to enhance tracing capabilities for better debugging and monitoring
updated the date formatting method in ScheduledTrigger to use TimeZone. toZoneId ( ) instead of ZoneId. of ( timeZoneStr ) to ensure
added new files ` AsyncBucket `, ` Bucket `, ` Bucket4j `, ` ConfigurationBuilder `, and ` InMemoryExtension `
updated the class path handling in resexhausted003. java to improve robustness by ensuring the correct classes directory is used
updated variable initialization and formatting in AbstractConnector. java to improve code readability and maintain consistent formatting
refactor OngoingStubbing class to improve code readability and maintainability
added a conditional check for web server reuse in the Main class to ensure that the web server is reused based on configuration
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil. java ` and added import for SolrHttpClient in ` SolrTestCaseJ4
ww - 3833 ensure thread allowlist be not empty before use.
replaced setOutputSource with setItemWriter in TransformerWriterItemProcessorTests to ensure the processor uses the correct item writer implementation
[ drools - 5652 ] dmn : skip overlap hit policy if it's colllap policy
[ beam - 8470 ] fix combine. globally to work with window.
added a conditional check for ` allAppsDirty ` before binding all apps and improved logging messages for app icon binding to ensure apps are only bound
[ hotfix ] [ test ] remove unnecessary assertion from managedfilelockereadstrategytest
replaced System. out. println ( ) with System. out. println ( ) in the BeautifulTriplets. java file to improve code
updated AquaMenuBarUI. java to use AccessController and LWCToolkit for deprecated use of screen menu bar to ensure compatibility with embedded
add fall distance parameter to setrawlocation ( ) to allow set raw location to fall.
refactor SimpleJpaRepository to use a CriteriaQuery for selecting the literal value to improve query accuracy by ensuring the correct predicate is evaluated based on
added timestamp, parent hash, nonce, and number to blockutil. newtxinput to ensure proper handling of genesis parameters
replace safepointpolloffset with safepointinsertionphase in graalcompiler
hbase - 19801 fix npe in rsgroupinfomanagerimpl and rpcs # createregionrpcs ( #
change visibility of several methods in ArtifactResolver from package - private to public to enhance accessibility and restrict access to these methods
disposal of thread in client connection handler to prevent jvm crash
added validation to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException when maxBufferedDocs is less than 1
added functionality to manage the login state in LoginActivity to ensure proper handling of the login process during instance state changes
added null checks in Pump. java and implemented a test for uuid sorting in PumpTest. java to ensure robustness against null source
changed access modifiers of ` loadbalancer ` and ` parameter ` methods in ` HttpShardHandlerFactory ` and ` LBHttpSolrServer `
changed the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy. java
added server handler functionality to the TestJNDI class to enable more flexible server configuration
added assertions and improved null handling in SortedDynPartitionOptimizer. java to enhance code reliability and prevent potential NullPointerExceptions
modified the return value from NioEventLoop to true in FileStreamChannel. java to ensure the method returns true for NioEventLoop
updated the calculation of newNumNulls and setNulls based on the new number of nulls to ensure correct handling of null values based on the updated
camel - jbang export : add support for camel - kamelet to export
replaced OkHttpOAuthConsumer initialization with an AtomicBoolean to handle task completion based on authorization state to improve task management and ensure proper handling of authorization errors
remove system. out. printlns from test code
added client authentication configuration to IoTDBRestServiceConfig to enable client authentication based on configuration settings
updated the logic for injecting mockCandidates in PropertyAndSetterInjection. java and added unit tests in ChildWithSameParentFieldInjectionTest. java
updated BloomUriUniqFilter to use BloomFilter64bit and refactored BloomUriUniqFilter to use BloomFilter64
updated the cursor adapter parameter from false to true in HomeFragment. java and added a preference for refresh _ me in TweetPager. java
updated the intermediate header height ratio in ProfilePager. java from 1f to 75f to improve the responsiveness of the page's layout
updated import statements and added a new class for handling Recompilation events to enhance event tracking and improve code organization
ambari - 18801. ambari server. ambari. server. executioncommand. packages. pre. installed = true should be
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog ` and created a corresponding test
added a loop to delete the last slash character from the location string to ensure that the last slash character is preserved in the location
added support for entities and scores in the StaticPipeline class to enable processing of different number of entities and scores in the pipeline
refactor filename handling and improve path construction in Frame and Whoops classes to enhance code readability and maintainability based on configuration settings
[ geot - 6892 ] catalog should not be look up in the workspace, but in the resource pool
refactor assertion methods in Assert. java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test classes ` MultiLineJaggedTextTests `
http : / / issues. apache. org / jira / browse / amq - 4621 - fix unit test
replace instances of ` IMeasurementSchema ` with ` List < MeasurementSchema > ` in ` TsFileWriteAlignedWithTSRecord `
updated memory measurement in TestPromotionFromSurvivorToTenuredAfterMinorGC. java to improve accuracy of memory usage calculations
updated the logging library path from ` slf4j - log4j12 -. jar ` to ` slf4j - reload4j
updated assertion in HueBridgeHandlerOSGiTest to use waitForAssert for better synchronization to improve reliability of the test by ensuring the
updated package structure and import statements for various activities to improve organization and clarity of the codebase
jbrules - 1276 : ignore kiecontainersolverfactorytest until jbrules - 1276 be fix.
added a constructor to PullRequestMergedEventsStream that retrieves the Pinot schema from a file to enhance the functionality of the PullRequestMergedEvents
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in taskslot
replaced occurrences of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in WebSocket listeners to ensure proper handling of close events in
added error handling for lock release in MoveTask. java to improve robustness by logging warnings when attempting to release locks fails
refactor JRubyBackend to use ResourceBundle for retrieving GEM _ PATH and RUBY _ VERSION from properties to improve code maintainability and reduce
transaction : use byteutil. empty _ byte _ array instead of zero _ address
refactor conditional check for class info retrieval in ClassGraphClassLoader. java to improve code readability and maintainability
[ hotfix ] fix blob storage directory in jobmanagertest
chore : [ gapic - generator - java ] update datastream extension to v1alpha1 for python datastream api ( # 5
added a new Bundle to the FileDisplayActivity to store and utilize it in the builder to improve flexibility by allowing custom bundle extras
replaced break statement with continue in ParticleEmitter. java to improve flow control during particle processing
updated expected values in ` AmbariManagementControllerImplTest. java ` to correct the expected values for cluster operations
removed the nullable attribute from the service field in TransientSessionTicketImpl. java and added a debug log in JpaTicketRegistry. java to
refactor Bug4823811. java to improve code organization and maintainability
updated the path reversal function in RmStep. java to ensure the correct path relativization is applied to the project filesystem
modified the ` requestFullState ` method to accept a boolean parameter to control the request behavior based on an initial request state
refactor ShibbolethCompatiblePersistentIdGenerator to improve attribute handling to enhance code clarity and maintainability by consolidating attribute logic
added @ Inject annotation to RequestValidationService. java to ensure proper injection of the RequestValidationService class
added functionality to hide the keyboard log based on the STATS _ LOGGER _ KEY data to improve user experience by preventing exposure of system statistics
corrected formatting of a conditional statement in FileNodeProcessor. java and cleared MManager instances in MManagerBasicTest. java and MTreeTest
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
add unit test for slurpfile ( ) to check that the file exist.
added @ FunctionalInterface annotation to multiple classes to improve code clarity and promote functional interface usage
refactor span retrieval logic into a separate method ` spanWithName ` to improve code readability and maintainability by reducing redundancy
added support for DateWritable in ETypeConverter and related classes to enable date - related data handling in Hive schema conversion
updated split method in StyleConverter to use Patterns. COMMA _ SEPARATOR instead of a hardcoded comma to improve flexibility in parsing style sequences based on
make sure step value don't have an error
refactor column count validation logic in SemanticAnalyzer. java to improve error handling for mismatched table columns
updated assertions and optimized score update logic in WANDScorer. java to improve code reliability and maintainability by ensuring consistent behavior
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future modifications
updated import statements in PaintSetEnabledDeadlock. java to streamline imports for better readability and maintainability
modify the ` curPixVal ` initialization in ` XRSolidSrcPict. java ` and add a new test class ` WhiteTextColor
biome metadata : fix a bug in the biome dictionary
rename the variable ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability by using a more des
added Stability rules to TaplTestsLauncher3. java to enable test stability for local and PLATFORM _ POSTSUBMIT flavors
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
[ hotfix ] don't add empty logfile suffix to snippetutils
refactor PythonBuckConfig class to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest and ShadowApplicationPackageManager to ensure that system shared library names
fix meiligao protocol decoder ( fix # 588 )
added a null check for the tile object before retrieving the energy value to avoid potential NullPointerException when accessing the power data
updated cache handling by introducing a new ` TrimCache ` class to improve cache management and provide user feedback when cache files are deleted
feat ( build ) : fix checkstyle violation
replaced return false with throwing NotAuthorizedException in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to provide clearer error handling for unauthorized
add scheduleperiodically ( ) method to schedulereporter ( ).
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( getStorageManager ( ). getFileByPath ( ) ) ` in `
added a check for multiple files in the stream handling logic to ensure files match the expected number of files before closing streams
refactor table creation methods in SessionHiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to simplify table creation logic and improve code maintainability
modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to ensure thread safety when trackTask is aborted
updated block parsing logic to include an additional check for'< 4'in multiple parser classes to ensure that blocks are only processed when the indent
add multichat operation set definition and gibber protocol implementation.
remove unnecessary check in framegenerator.
added visibility setting for collapse handle in WidgetsBottomSheet to improve user interface by showing handle collapse functionality
added new files for handling HTML and JavaScript text in Issue475. java and XSS. java to enhance security by escaping HTML and JavaScript in
added a check to return early if unitsToScroll is zero to improve performance by avoiding unnecessary processing when there are no units to scroll
changed the condition from " size > 1 " to " size! = 1 " in the contract list check to ensure contract list is not empty
added ` add ` and ` put ` methods to ` JsonArray `, ` JsonObject `, and corresponding test cases to enhance functionality by allowing adding
added hashCode ( ) method to IPPPrintService and created TestRaceCond class to ensure consistent hashing behavior for print services
replaced instances of ` getIVersion ( ) ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2zDialect
fix : payment can't be connect if payment can't be connect
refactor exception handling in BatchUpdateException, PreparedStatement, and Statement classes to improve code clarity and maintainability
adaptive reconfiguration to accommodate adaptive reconfiguration.
removed the public access modifier from multipleAntn and BulkheadAntn classes to enforce encapsulation by restricting access to these methods
added Retrofit import in mmm Part. java and ppp PartMap. java to enable Retrofit integration in the code
refactor JsonBuildHelper and ParamsBuildHelper for improved logic for handling array types and API parameters to enhance code readability and maintainability while ensuring
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the AbstractFloatingView class to support overlay functionality in the taskbar
fix : update gapic - generator - java with mock service generation fix ( # 348 )
updated alpha calculation in ClipAnimationHelper and added hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task characteristics
removed an additional parameter from the createRenderScript method to simplify the script creation process by eliminating unnecessary parameters
fixed typo in javadoc
don't display system - bundle header if it's ` ` yes''
removed unused import statements from IntegrationTestSparkBulkLoad. java to streamline the code and improve readability
reduce false positive rate in keychaintest.
refactor configuration handling in Overview. java to improve clarity and ensure proper selection based on the selected configuration
cloudstack - 7092 : fix npe in agentmanagerimpl. findhosts ( )
fix npe in defaultrecordstore when a null value be provide
cloudstack - agent : improve error message when cloudstack agent setup fail.
ww - 3833 fixed typo in error message
updated the constructor of BaseStubbing and ConsecutiveStubbing to accept an Object mock instead of an InvocationContainerImpl instance to enhance flexibility by
added a method to strip parameters from the method line in the LocationOpener class to improve method line extraction by removing unnecessary parameters
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the new release version
pdfbox - 2576, pdfbox - 2576 : use set instead of list
[ geot - 5884 ] symbolmayer no longer use label and repeat option for mb layer
fix for overlap feature. close popups don't work.
fix typo in validationsuitest. java
added a private final StartingWindowListener instance and refactored its usage in QuickstepTransitionManager to improve modularity and maintainability of the
added a doc comment inherited from MBeanServerConnection to improve code clarity and maintainability
updated exception messages in CheckPackageAccess. java to clarify security exceptions related to package access validation
increased await termination timeout from 30 seconds to 90 seconds and added an assertion to verify that the executor service is terminated correctly
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check for ` loggingEnabled ` to improve
added @ JsonIgnore ( true ) annotations to Schema. java to prevent serialization of sensitive data
increased timeout from 5000ms to 10000ms in the TestNonTxIndexBuilder test to allow more time for tests to complete successfully
modified the ` train ` method in ` SimpleNaiveBayesClassifier ` to accept an additional ` Query ` parameter to enhance functionality by allowing
updated CheckDatabaseHelper to extend AuditLoggerModule instead of ControllerModule to enhance audit capabilities for database operations
refactor Prototype class to improve code readability and maintainability
added a null check for tableIsTransactional in SemanticAnalyzer. java to ensure proper handling of non - null table properties
[ java ] remove unused method in recordingwriter. writefragment.
fix cedecoder to return empty cue if time be negative
kairos : fix getalias ( ) to return null
updated currency pairs in VaultOfSatoshiBaseService. java to replace BTC and PPC with USD and QRK to ensure
hhh - 147483 : fix test failure on window
updated the import statements for KafkaSender from ` kafka11 ` to ` kafka ` to ensure compatibility with the new package structure
added two new test files, GwtBinaryIntegrationTest. java and A. java, which implement a client interface for GWT binary generation
updated event handling and visibility logic in BrowserContentPane. java and enhanced exception handling in SQLConsole. java to improve user experience by ensuring
updated randomizer retrieval methods in EnhancedRandomImpl. java and EnhancedRandomImplTest. java to enhance randomness generation functionality and ensure
added XMLSecurityPropertyManager as a static constant in DTDConfiguration, NonValidatingConfiguration, and SAXParser classes to ensure XMLSecurityPropertyManager
added a new file ` InterfaceWithDefaultMethod0 ` and ` InterfaceWithDefaultMethod1 ` implementing interfaces to demonstrate the use of default methods in interfaces
updated SQL query formats to use " GLOB " instead of " LIKE " and " LIKE " to enhance support for handling GLOB data types
drools - 5752 : make dmnassemblerservice # getdmnprofiles ( ) protect instead of private
fixed - rscript. readall ( ) and rscript. writeallasync ( ) method don't return any value. #
simplify staticobject. setwordfieldvolatile ( field, int value ).
updated debug log messages to use the size of targets instead of a fixed number to improve logging accuracy for better debugging
retain the payload packet before sending it in the FMLOutboundHandler to ensure proper resource management and prevent potential memory leaks
drill - 7931 : make http _ jetty _ server _ handlers configurable.
replaced the ` idsToShortcuts ` map with ` removedShortcutInfos ` and added a check for non - empty shortcuts to improve shortcut management
don't convert non - string parameter to string in defaulthttpclientbinderregistry.
removed the case handling for the home button in DetailFragment. java to streamline navigation logic for better user experience
added a condition to check if Android market is present before processing play services to ensure that play services are only included when the Android market is present
refactor TableBlockParser to improve handling of spaces after the'|'character in the row to enhance robustness by ensuring proper parsing of
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enhance project generation flexibility by allowing optional bridging
don't generate ` ` unused - code'' csv if there be no method
added diamond finder functionality and warning logs in various classes to enhance type handling and provide warnings for redundant types
replaced invocation. startSend ( ) with invocation. onStartSendRequest ( ) in HighwayClientFilter, RestClientSenderFilter, and Rest
removed unnecessary import of Utils and debug log statement in SolrCacheHolder. java to streamline code by eliminating unnecessary dependencies
don't swallow authenticationexception in ldapctxfactory
update comparison logic in Test6796786. java for zero values to ensure correct handling of zero values in floating - point comparisons
added a local configuration file for " logback. dev. xml " in JoobyMojo. java and Main. java to ensure the correct

refactor animation logic in QuickstepTransitionManager to use a stream of views instead of individual views to improve code readability and maintainability by consolidating
updated string distance comparison logic in ConjunctionSolrSpellChecker. java and added a new test class ConjunctionSolrSpellCheckerTest. java to
replaced ` HashMap ` with ` Map ` in ` ShadowSystemServiceRegistry ` to utilize a more efficient data structure
[ hotfix ] [ core ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
cloudstack agent : make ready command wait for storage pool to be able to modify the storage pool.
http : / / code. google. com / p / mybatis / issues / detail? id = 557
corrected the variable name from " sqlUpdateAUP " to " sqlUpdate " in multiple files to ensure consistency and accuracy in SQL update syntax
refactor schemaTypeCache initialization to use a synchronized map to improve thread safety and performance of schema type caching
refactor header addition logic in StaticServerHttpHeadersWriter and add a test for case - sensitive headers in StaticServerHttpHeadersWriterTests to ensure
added JUnit @ Ignore annotation to LatticeDemo. java to ignore tests that are not available from CMU
added a call to create a storage directory in the TestCollector class to ensure that the storage directory is created for testing purposes
added chunked streaming mode to StarTreeJobUtils to enhance data streaming capabilities for improved performance
added unit test for syntax checker in kitchen - jsonschema - syntax module
hbase - 25836 : update protobuf to use org. apache. hbase
added a new ` Node ` class and a corresponding test in ` BeanPopulatorTest ` to ensure that recursive structures are not cause stack overflow
added IOException declaration to the getRemoteName method to ensure proper error handling during remote name retrieval
added handling for IllegalArgumentException in UserAccountManagerImpl and refactored client creation in ClientFactory and ConnectivityServiceImpl to improve error handling and streamline
refactor WebSocketConnection and ExplicitDemandTest classes to improve code clarity and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure compliance with Spring Security's aspectJ configuration
updated import statements and added hostname verification logic to enhance security by using system properties for hostname verification
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to
updated method name from ` invoke ` to ` invokeUrgent ` in ` ClientSchemaService. java ` and modified assertions in ` Comp
updated the removal of a JointEdge from the body's list to the world's destroyJoint method to ensure proper cleanup of joint
fix a null pointer exception in the search filter.
[ hotfix ] [ test ] make sourcereadertestbase public
don't throw filenotfoundexception if the document don't exist
added interfaces ` HookDefinition ` and ` JavaHookDefinition ` for defining hooks to facilitate the execution of Java hooks in the Cucumber
refactor flushIfDeadlockRisk method in QueryExecutorImpl. java to improve code readability and maintainability by reducing duplication
updated the ` setExoOptions ` method to accept a ` allowTs ` parameter to enhance flexibility in specifying file types during playback
removed a user identifier from the identifier collection in DMRDecoderState. java to streamline the identifier management by eliminating unnecessary user identifiers
replaced the deprecated ` Color ` constructor with a static ` INVISIBLE ` instance in ` Color. java ` and updated import statements in ` Rail
updated the logic for enabling null handling in CountAggregationFunction and added tests for query options in NullHandlingIntegrationTest to ensure correct handling of null
set the deep variable to - 1 in InternalTransaction. java to ensure proper initialization of the deep variable
updated the method to escape XML names in StreamInitiation. java to ensure proper handling of XML names in stream initialization processes
updated file handling to use a configurable work directory to enhance flexibility by allowing users to specify a custom work directory
added deprecated attribute handling in RuleSetFactory to ensure proper management of deprecated rules in the rule set
replace dummy label with opcode in amd64directcallop.
updated the ` TimeRange ` class to use static final constants for minimum and maximum timestamps to improve code clarity and maintainability by ensuring constants
refactor methods in BitDocIdSet. java to improve code readability and maintainability
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated emitMetricsJson method to improve code clarity and maintainability by centralizing connection logic
refactor attachment checks in DetailFragment and GalleryActivity for improved readability and maintainability to enhance code clarity and ensure proper handling of video attachments
fix tank drain not work for remote player
updated CsharpLibrary. java to handle RuleAnalysisLegacyBuildRuleView for DotnetLibrary and PrebuiltDotnetLibrary to improve robust
of - 2716 : ensure that a valid pep service be process when a certain iq type be provide.
added a null check for the runtime object in the IntrinsificationPhase class to ensure that the runtime is not null before proceeding
[ hotfix ] [ runtime ] fix checkstyle violation in metrictrackingwindmillserverstub
pdfbox - 4892 : don't store objectid and genid if last eof marker be outside of the stream
added constructors and listeners to the LwjglApplet class to initialize and manage application lifecycle effectively
refactor string representation in EnvironmentAndSystemPropertyClientProviderStrategy. java to improve readability and maintainability of the code
refactor post authentication logic to use a unified approach for applying password policies to improve code clarity and maintainability by centralizing password policy handling
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize this field to
refactor Readable class to improve code readability to enhance maintainability and facilitate future modifications
danielwagnerhall for flaky test ( # 551 )
updated the icon resource for the share menu item in CaptureActivity. java to improve clarity and maintainability of the share menu functionality
refactor versioning logic in Constants. java to use JVM _ SPEC _ VERSION to ensure compatibility with different Java versions
updated network timeout handling in ` PoolUtilities ` to include ` NoSuchMethodError ` to improve error handling for non - JDBC 41 compliant drivers
refactor GenericContainer class to improve code readability and maintainability
replaced ` Set ` with ` List ` in ` Enclosed. java ` to improve performance by using a more efficient data structure
added multiple @ Override annotations in authentication classes to ensure proper overriding and improve code clarity
removed unnecessary whitespace in ChartProvider. java to improve code readability and maintain consistency
fix : use current working directory instead of file. path
simplified the return statement in JavacParser. java and added a new file ExtraSemiTest. java to improve code clarity and facilitate
added support for querying users by createdat along with the keyword " AFTER " and " BEFORE " keywords in User and JpaQueryCreator classes
rename Test15FloatJNIArgs. java files to improve clarity and organization of test cases
updated version links in the plugin. java file to ensure compatibility with the latest PlotSquared version
fixed an off - by - one error in the decryption logic in MockProcessContext. java and added a test for it in TestMockProcess
check that aeronarchive. getarchive ( ) and archive. getarchive ( ) and archive. getarchive ( ) return null
added a null check for inp _ dep before merging dependencies to avoid potential NullPointerExceptions when inp _ dep is null
added timeout of 10 seconds to the test annotations in SslBytesServerTest. java to allow more time for tests to complete successfully
refactor Peer class implementation to improve code readability and maintainability
updated method names and added new parameters in StreamProvider and RealtimeSegment classes to improve clarity and functionality of the StreamProvider interface
added a null check before writing output data to the capture data supplier to avoid potential NullPointerExceptions when the data is not available
refactor scrolling logic in RecyclerViewFastScroller to use a private method to improve code readability and maintainability by centralizing the scrolling logic
updated command in BuckWSServerPortUtils and added a method to check if the tool window is instantiated in BuckToolWindowFactory to
added a conditional check for Windows in GeneralTab. java to ensure that the program does not execute on non - Windows platforms
updated servlet imports from ` javax. servlet ` to ` jakarta. servlet ` to ensure compatibility with the latest Jakarta
added support for cropping based on vertical bar layout in QuickstepAppTransitionManagerImpl to enhance user experience by allowing dynamic window scaling based on device
added full - screen exclusive mode management in XWindow and XWindowPeer classes to enhance user experience by ensuring correct fullscreen behavior
added substring logic for played duration strings in StringUtil. java and created UMSUtilsTest. java for testing to ensure proper handling of played duration
added methods to handle DAG credentials in DagUtils. java to improve credential management for DAGs within the application
( chore ) camel - base - engine : use entryset iterator instead of keyset iterator
trim whitespace from the names array when setting the thread name to ensure the thread name is consistent and avoids issues with leading or trailing spaces
updated the message for adding a description in GpsMainActivity to clarify that the description is only added when a point has been logged to a file
[ hotfix ] fix checkstyle violation in job. java
added an ` Unused ` class with associated abstract fields in the ` Main ` class to provide a mechanism for determining if the Main is unused
updated the HBASE _ MASTER component to use " hbase _ master _ hosts " instead of " hbase _ master _ host " to improve clarity
deleted XML event reader and writer deserializer and serializer interfaces to streamline the codebase by eliminating unused components
updated performJoin method to return a list of output records instead of a single record to enhance data handling by allowing multiple output records
updated MAX _ DELEGATE _ LOCK _ PERIOD logic in ProposalUtil. java and related classes to ensure maximum delegation lock period is
fixed npe in nicsto if networkrate = = 0
updated CmcExchange constructor to initialize services and apply exchange specification to ensure services are properly initialized and utilized in the application
modified IP address retrieval logic in GossipLocalNode. java and updated configuration keys in Constant. java to ensure proper handling of IP addresses
use system property ` ` hazelcast. client. tpc. enabled'' in clienttpcconfig.
update swagger - ui version from 2.1. 10 - 1 to 2.1. 18 in multiple application classes to ensure compatibility with the latest version of the
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve accuracy of biginteger operations and
modified the handling of the key in NamedObjectList. java to ensure a default key is set when the name is blank to improve clarity and
updated cleanupEmptyDir calls to use " tmpTableName " instead of " tmpTableName " to ensure proper cleanup of temporary directories across query compactor
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it in kryo to ensure proper serialization of RCFileInputFormat data types
added default methods for retrieving Java type and category in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host headers in Request. java and corresponding tests in RequestTest. java to ensure proper handling of invalid host headers and
updated imports and refactored test methods in ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to improve compatibility with newer Android SDK versions and enhance test
modified the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in the ` StandardOp ` class to ensure proper handling of outgoing values
refactor ` SegmentCoreReaders ` and ` SegmentReader ` to use ` si. name ` instead of ` segment ` to improve code clarity
added a new method ` hasMainThreadProfile ` to ` AggregateDao ` and enhanced transaction handling in ` AggregateDao ` to improve handling of main
added validation for annotation definitions in non - required rules to ensure compliance with rule requirements for source ABI to avoid errors during annotation processing
updated lowercase names in GreekLowerCaseFilterFactory, IrishLowerCaseFilterFactory, UAX29URLEmailTokenizerFactory, and Turk
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
[ ds - 4402 ] deprecate legacy legacy search servlets ( ds - 4404 )
added a list of strings for America / Dawson, America / WhiteHorse, and America / Yukon while removing specific time
added a " TaskBarController " to the SurfaceSyncGroup instantiation to provide a more descriptive identifier for the synchronization group
updated method calls and added UUID handling in GridFSTemplate and GridFSTemplateIntegrationTests to improve code clarity and ensure proper functionality of GridFS
added assertions and methods to retrieve total size and bytes in ShadowDownloadManager to ensure accurate retrieval of download size and bytes from the database
updated character handling logic in TextField. java to improve code clarity and maintainability by introducing a boolean for enter state
fix ` ` null pointer exception'' in group node view
added a new method ` afterSetStatements ` in ` BlockLexicalContext. java ` and refactored logic in ` BlockLexical
added hashCode and equals methods to ` IntervalXYDelegate ` and ` XYSeriesCollection ` classes, along with corresponding unit tests to ensure consistent behavior
fix clientqueuedisruptiontest. testclientqueues ( )
updated AWS log group description and log name parameters in CloudWatchAppender. java and added a new test class for scripted attribute filtering to enhance
updated method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` to clarify the purpose of the
added calls to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` and ` WalletTestZenToken007
added checks for language tags and modified language canonicalization logic in Locale. java and LanguageTag. java to ensure language tags are only canonicalized
kvm : ssh - to - agent configuration to allow management server to ssh into agent.
removed public access modifier from several methods in SchedulerWhen. java to restrict access to internal methods and improve encapsulation
updated import path for PagerSlidingTabStrip from'viewpager. extensions'to'astuetz. viewpager. extensions
added a check to ensure the filter string does not contain the " - " character to prevent potential issues with special characters in the filter string
updated sortColumnsLabel text to use " Natural column order " instead of " natural order " in BrowserContentPane. java to standardize
remove unnecessary array copy method in Utils. java to streamline code by eliminating redundancy
updated the write method to include HTML encoding in HtmlSessionInformationsReport. java to ensure proper HTML formatting for remote addresses
[ multistage ] fix the itemstatetriggerhandler. checkstate ( ) method to match the event's topic.
remove unnecessary synchronized block in fasthttpdateformat # format
added thread management for file movement in Hive to improve reliability and manageability of file operations
added ` trigger ` and ` period ` methods to ` WrapTimer ` class to enable flexible task scheduling based on a specified period
added support for additional SQL data types in TypeStringUtils and created corresponding tests in TypeStringUtilsTest to enhance type handling and ensure correctness of
added a verbose option to the error setting in AbstractStatusReporter to provide more control over error logging based on context options
added functionality to toggle the menu conditionally based on app state to improve user experience by ensuring the menu is only visible when appropriate
s2s vpn : don't allow vpn connection to be esitablish between same account and domain
updated error handling logic in CursorReadingTask and added unit tests for IllegalStateException to improve error handling consistency and ensure proper test coverage
pdfbox thumbnail and text extraction fail if the pdf be encrypt
curatorwatcher should be close when the client be close. fix # 6683 ( # 6684 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code clarity and maintainability
updated URI construction and refactored the deleteItem method in HostsList. java to improve code clarity and ensure proper deletion of items
updated Java6Assertions and Conditions classes to improve code consistency and maintainability
updated the ` replaceOrderBulk ` method to accept a ` List < BitmexPrivateOrder > ` instead of a ` Collection < Replace
refactor method names in FindScopeDepths to improve clarity to enhance code readability and maintainability by using more descriptive method names
added a new ` J9ConstantHelper ` class and updated ` ObjectHash ` to use it for constant value retrieval to improve code clarity and
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for concurrent modification verification to ensure that concurrent modifications do not result in
added method to transportsessionmanager. notify roster offline.
hive - 25875 : fix the bug that hive be not able to determine the overlayed property ( sergey shelukh
updated method call formatting in FunctionObjectCreator. java to improve code readability and maintain consistency across the codebase
added null check for ` extTypeCustomDesers ` in ` MessagePackFactory ` and created a corresponding test in ` MessagePackFactoryTest
remove the system property " mockserver. logLevel " and set it to " WARN " to streamline logging configuration by removing unnecessary system properties
removed the @ Test annotation from AbstractRegistryFactoryTest. java to streamline test cases for better clarity and maintainability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase. java to streamline code
updated the ` scoreMap ` and ` termScoreMap ` from ` scoreMap ` to ` scoreMap ` and ` termScoreMap `
updated bitwise operator from ` & 0x8000000000000000L ` to ` & 0x8000000000000000L ` and added an ` eq
remove line break in mainviewmodel. setheadlinestyle ( ` ` font - size : 16'' )
added a check for ` didSupportDarkText ` in the ` notifyChange ` method to ensure proper handling of dark themes based on support status
[ hotfix ] [ checkpoint ] fix non - forced enqueuing of checkpointrequestdecider
updated MAX _ POOL _ SIZE from 2 to 8 and added KEEP _ ALIVE _ TIME _ MINUTES to improve resource management
updated filtering method from ` filter ` to ` anyMatch ` in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver. java ` to improve
[ testbug ] [ testbug ] disable test that fail on window server core container
http : / / issues. apache. org / jira / browse / amq - 2576 - apply patch with thanks.
modify the getReturnValue method to throw an Throwable instead of null to improve error handling by properly converting the return message to a Throwable object
added a Repeatable annotation for the Issues annotation in Issue. java to enhance the annotation capabilities for better issue management
updated user mapping from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor. java to align user
fix : connect to socks proxy if system property ` ` socksproxyhost'' be ` ` null''
[ hotfix ] [ doc ] fix typo in slotreport and slotstatus
removed the import of ClassUtils from the ReflectionUtils class to streamline dependencies by eliminating unnecessary dependencies
replaced instances of HashSet with LinkedHashSet in SslContextFactory. java to ensure predictable iteration order for protocols and ciphers
added systemResource handling in Resources. java to ensure system resources are properly retrieved from the system resource location
[ java ] increase plaintext segment size to 16 in streamingaeaddecryptingchannel.
added a test for invalid fallback scenarios in ServerMvcIntegrationTests to ensure proper exception handling for invalid fallback scenarios
use hostnameverifier instead of hostnameVerifier for httpclient.
removed the resetBytesReadCounter ( ) method call from PerformanceTest. java to streamline the code by eliminating unnecessary method calls
move isPreferAES ( ) and setPreferAES ( ) to ProtectionPolicy. java to streamline code by eliminating redundancy
( chore ) camel - opentelemetry : remove system. out. println
added a new test method ` testLoadBalancerInstanceOperations ` in ` ElbIntegrationTest. java ` to verify the functionality of loading balancer instances
updated method names from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver. java ` to improve clarity by using a more
added error handling for file creation in DiacriticTest. java to prevent crashes due to invalid file paths and system configuration
hhh - 147486 - fix ` ` timeout'' on oracle 11
updated file handling and error messages in TextureUnpacker. java to improve error handling and provide clearer feedback for missing atlas files
refactor cluster creation and configuration handling in AmbariManagementControllerImpl. java to improve concurrency and ensure consistent state updates
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code clarity and maintainability
added tests for closing statements in TestJdbcDriver2 and improved resource management in HiveQueryResultSet and HiveStatement to ensure proper resource management and prevent
don't allow inputstream. mark ( 0 ) to be call on stream that don't support it
refactored the retrieval of ` DatabaseSchemaResp ` in ` ClusterSchemaManager. java ` to ensure the response contains the pre - deleted
added a check for " chunkedWriter " before writing to the pipeline in Http1xUpgradeToH2CHandler. java to ensure proper
added a delete confirmation dialog for deleted items in EnhancedBrowseFragment and FullDetailsFragment to enhance user experience by confirming deletion before data refreshing
refactor RuleFinder and CSSParser to use a new RuleBank interface to improve code organization and maintainability by encapsulating rule handling logic
added exception handling to the doFinal method in JcaTlsCrypto. java to improve error handling by throwing a TlsFatalAlert with
add to javac to compile.
replaced the ` removeMetaDataSource ( session ) ` method calls with a call to ` toFront ( ) ` in ` DataBrowser. java
hbase - 14621 fix nullpointerexception in defaultmemstore. seek
[ flink - 21174 ] [ taskmanager ] remove unused annotation in taskmanagerservices
alter timeseries statement type : logICAL _ view or logICAL _ view
fix ` `. *'' regex in condition. matchtext ( )
added a try - catch block around the routingTableBuilder retrieval process to handle potential exceptions by returning null when the routingTableBuilder is not available
add null check to the body of the http client to avoid a nullpointerexception
( chore ) camel - jms : use char [ ] instead of string
bug in listdomainchildren api should return value when search for child from list of domain
modified the ` Counters ` class to use ` Pair < E, Double > ` instead of ` Pair < E, Double > ` to improve
modified the ` initialize ` method in ` BasicTumbleStepper ` to accept a ` SimulationStatus ` as a parameter to enhance
truffle : add miss compilerdirectives. transfertointerpreterandInvalidate ( ) to type.
added a variable name " var " to the readObject method in PrettyPrinter. java to improve code clarity by using a more descriptive variable name
added null checks for indexToNode in LRUDictionary. java to ensure safe iteration and prevent potential NullPointerExceptions
modified filtering logic in DatagramSocket. java and updated read method in DatagramChannelImpl. java to improve filtering logic and ensure proper receive behavior
test migrate from junit 4 to junit 5
added a new class NutchServerInfo with start date, configuration, jobs, and runningJobs to provide access and modification of server information
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter ` to streamline attribute
add timestamp option to cqlinserter, thriftinserter, and settingcolumn to be able to write timestamps with the given setting.
refactor DSAParameterGenerator to use BigInteger. ONE instead of BigInteger. valueOf ( 1 ) for strength checks to improve code readability and maintainability
refactor Numbers class methods to use Numbers. doubleToLongBits and Numbers. longBitsToDouble for better accuracy to improve code readability and maintainability by
updated mask condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and enhance test coverage for new IP address
added SQL state check for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to constraint violations
remove setsetzeroifnotfound ( ) from remotingcommand rewriterequestforstatictopic
added methods for tab creation and editing in Tabs. java to enhance tab management and improve code maintainability
replaced ` new Object [ ] ` with ` new Object [ 0 ] ` in array conversion methods across multiple classes to ensure consistent array creation and
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder
refactor conditional checks in MavenVisitor. java for improved readability to enhance code clarity and maintainability by consolidating null checks
updated mock names in ZookeeperDataChangedListenerTest for clarity and consistency to enhance readability and maintainability of the test code
added a new test class FormatCheckingTest for verifying class format errors to ensure that the application correctly handles and reports illegal class names
updated line number assignment logic in CodeGenerator. java to improve code clarity by directly using the line number from the method
added a try - catch block around the retrieval of the service property to handle potential exceptions when accessing configuration properties
added methods to create RadioButton instances with optional command and image parameters to enhance flexibility in creating RadioButton instances based on command and image parameters
updated the cache initialization in LRUCache and MetadataQuerierByFileImpl to optimize performance by using a dynamic cache size
changed access modifier of DEFAULT _ CAPACITY from private to public and updated argument handling in ChannelParser and MessageBusParser to allow external access to
fix npe in camel - management when bundle name be null
add support for load mode from system property -- external
[ flink - 2595 ] fix race condition in yarnsessionfifoitcase. waituntilappstarted
refactor ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to improve clarity by using a more descriptive name
don't propagate header in abstractreplyproducingmessagehandler when not propagate
refactor CompareMode class to improve code readability and maintainability
added ` HasTests ` interface to ` Arg ` class in ` RustBinaryDescription ` and ` RustLibraryDescription ` to implement the
updated placeholder drawable references in FileMessageVH. java to improve clarity and consistency in drawable resource usage
updated OnExitTest. java file to improve test reliability and maintainability
added onUserPreferenceChanged method to recreate the taskbar to ensure the taskbar is refreshed when user preference changes
added support for loading the " com. ibm. jvm. Dump " JVM VM in HeapDump. java to enhance compatibility with IBM's
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 3636
simonstewart : implement ability to iterate over all open window.
polish ` ` for - loop'' to work with java 5
set the application's state to unavailable to improve application stability during state transitions
refactor position and limit calculations in ByteBuffer and StringCharBuffer classes to improve code clarity and correctness in buffer manipulation
removed the ` toUri ( ) ` method call from ` split ` method in ` ConditionalResolverMergeFiles. java ` to simplify the split method
added setEmpty methods for various array data classes to ensure proper handling of setializations across different array types
changed enum visibility from package - private to public in VirtualAuthenticatorOptions. java to allow access to these classes from other packages
fix testmultPhrasequery so that it don't fail on this platform
don't send offline payment status for pending ticket
added a new thread variable and modified the ` onTimeout ` handling logic in ` HttpChannelState. java ` to ensure proper handling of timeout
replaced ` printStackTrace ( ) ` with ` logger. warn ( ) ` and ` logger. debug ( ) ` in multiple test files to improve
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
patch by jbellis ; review by jbellis for cassandra - 154
added support for recognizing " Home " models in the HeosDiscoveryParticipant class to enhance functionality to include home - specific identification in the
added a new ` Wait ` class with getter and setter methods in ` PlainSelect `, along with a corresponding test in ` SelectDeParser
added attribute handling for Neo4j nodes and edges in the Neo4j4j implementation to enhance functionality by allowing dynamic attribute updates
added null check for serverName in SessionManager. java to prevent potential NullPointerException when serverName is null
nifi - 10492 : move rocksdb metronome and testrocksdbmetronome to controller package
updated the method for retrieving the " IS _ GRANTABLE " value to use a string representation to improve code clarity and maintainability by using
added logging for asynchronous execution in JavascriptContext. java to improve debugging capabilities for asynchronous execution in the application
( chore ) camel - cxf : fix test failure on macos
added a check for the existence of a column descriptor in LoadTestTool. java to ensure proper column modification based on the existing cf
added the implementation of the Disposable interface to the Texture class to implement the Disposable interface for texture management
added null checks for ` tldBundleLocation ` and replaced instances of ` WebappRegistrationHelper ` with ` WebBundleDeployerHelper `
besu command : check goquorum genesis config only if goquorum privacy be enable
replace IOException with Throwable in HttpInput. java to improve error handling by using a more general Throwable type
added a country check for JP in LocaleTest. java to address issues caused by country changes in the JVM
replaced ` Wrapper. Wrapper ` with ` HostResponseWrapperWrapper ` and ` ViewPrivilegeResponseWrapper ` in multiple service classes to ensure compatibility with
updated equals and hashCode methods in FilteredQuery class to include boost to ensure accurate equality checks based on the boost of the query
removed unnecessary whitespace in the constructor of FileMenuFilter to improve code readability and maintain consistency
[ web ] fix problem with label in symbol table.
added a new file TestCMSClassUnloadingDisabledHWM. java to test CMS class unloading behavior to ensure that the CMS class
check for empty entity before create the item tossevent
rename KeyMappingPreparedStatementSetter to ItemPreparedStatementSetter and update method signatures accordingly to improve consistency and align with Spring's naming conventions
use identityqueryfilter instead of keyrange in compactionstest. patch by jbellis ; review by brandonwilliams for cassandra
updated MiniAapt. java to handle null values file attributes and added a new test for invalid item resources to improve error handling and ensure proper
added support for the SPEL operator in the OperatorEnum and created a new SpelJudge class to enhance the functionality of condition judge
updated the condition to check for BIGINT type in LocalExecutionPlanner. java to ensure that the correct type is used for BIGINT in the ordinality
bugfix # 20625, use lookup from o. a. p. profiler instead of service. providers
updated import statements in ConscryptTest. java to improve code clarity and maintainability
replaced deprecated ` Ref < > ( 0l ) ` with ` Ref < > ( 0L ) ` in ` AttributeResolution9. java
updated source and target options in SetupHid. java to ensure compatibility with new configurations
pushprojectintotablesourcescanrule : optimize pushprojectIntotablesourcescanrule
updated the way localized names are retrieved in AboutActivity. java to improve clarity and maintainability of the code by using a more descriptive identifier
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a conditional check for live streaming before posting a delayed refresh action to ensure refresh only occurs when live streaming is enabled
added the exception object to the MappingException for better debugging to improve error reporting by providing more context in the exception
( chore ) camel - ftp : use awaitility in test
updated generic type parameters in CompositeType and DynamicCompositeType classes to enhance type safety and eliminate unchecked warnings
added transport support methods in GitClientApplication and modified repository URL handling in RepositoryUrlPanel to enhance transport support functionality and improve code clarity
added delegation name to various input consumer classes to enhance clarity and maintainability of input consumer implementations
added null check for mavenMetadata before filtering available versions to avoid potential NullPointerExceptions when mavenMetadata is null
8049573 : [ testbug ] gc + heap + coops = debug should be disable for large page use
cloud _ usage db : skip event migration when usage db don't exist
( chore ) camel - broker : fix test failure on window
added a new test class for ObjectStreamClass functionality to ensure proper serialization and deserialization of ObjectStreamClass objects
removed unnecessary null check for myself. getDataCenterInfo ( ) in ZoneAwareDiscoveryFilter. java to simplify the conditional logic for better readability and
changed error log level from error to warn in OpenTracingTracer. java to provide more granular logging for tracing failures
added a ` toString ( ) ` method to the ` Generator ` class to provide a readable string representation of the generator instances
refactor URI handling to improve clarity and correctness to enhance code readability and maintainability while ensuring accurate URI processing
added a check for non - existent resources in ClusterControllerImpl. java and created corresponding unit tests in ClusterControllerImplTest. java to ensure
refactor response handling in AccepttoApiUtils. java to improve error logging and streamline response processing
modified vertex buffer allocation logic in VertexBufferObject. java to ensure compatibility with Android applications using ByteBuffer
refactor SybaseASADatabase class to improve code readability and maintainability
add a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` constructor to control the behavior of the ` HashJoinInfo ` class
added a getter method for the StringDistance in SpellChecker. java to provide access to the location of the string distance
added FLAG _ IMMUTABLE and FLAG _ CANCEL _ CURRENT flags to PendingIntent methods in AndroidImplementation. java to enhance permission handling for PendingIntent operations
added methods to append read column IDs in HiveFileFormatUtils to improve code clarity and maintainability by centralizing read column ID configuration
updated upNP address retrieval from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` to ensure compatibility with
added functionality to display a temporary toast in SavedExperiments. java to enhance user experience by providing feedback on temporary toasts
resolve service info don't set version if it be null.
added a new test class RawSerializationTest for Gson serialization to ensure proper serialization of parameterized objects in JSON format
simonstewart : add support for ssl certificate generation.
modified the loop to iterate through replies and set padding based on the size of replies to improve performance by avoiding unnecessary iteration over the replies list
increase timeout in ExpiringUrlCacheTests from 3 seconds to 60 seconds to accommodate longer test cases by allowing longer timeouts
added a test method to verify the payload of a token in the NGramFilters class to ensure that the payload of a token is correctly
refactor AclImpl class to improve code readability and maintainability
added tests to ensure different array sizes are randomized with different sizes in EasyRandomTest. java to ensure that different array sizes are correctly generated
cloudstack - 7092 : fix findbugs warning in citrixresourcebase. java
added a thread - safe mechanism to manage SSL write against to improve resource management and prevent potential resource leaks
refactor actor validation in Actor. java to use the actor's parent directly to improve code clarity and maintainability by encapsulating logic
added logging for deployment group name failure in RollingUpdateOpFactory to improve error tracking and debugging for deployment issues
[ hotfix ] [ table - planner - blink ] fix javadoc error in blink planner
added authentication failure handling for username not found scenarios to improve user authentication reliability and provide feedback on authentication failures
modified AtMostXVerificationTest. java file to enhance verification testing accuracy
updated default QType to use LuceneQParserPlugin's name instead of " lucene " to ensure compatibility with the new LuceneQParserPlugin
updated SimpleDateFormat instantiation to include Locale. US to ensure consistent date formatting across different locales
added a new ` isInitialized ( ) ` method in ` ILanguageServer. java ` and implemented it in ` JavaLanguageServer. java `
updated test parameters and variable names in ClientAPITokenIntegrationTest. java to improve clarity and consistency in token validation logic
added beginTransaction ( ) and endTransaction ( ) methods to DatabaseAdapter and modified transaction handling in GncXmlHandler to improve transaction management and
replaced byte array reading with ByteArrayOutputStream for improved data handling to enhance performance and reduce memory overhead during file transfer operations
don't send exception if client don't receive
implement isacceptable to check if a source file is a compilation unit to ensure proper handling of source files in the AutoFormatVisitor
set maximum buffered documents size to 100MB in TestIndexWriterMergePolicy. java to optimize memory usage during document merging operations
clear the wits list in Manager and add unit tests for witness updates in ManagerTest to ensure proper witness management and validate functionality through
added a check to ensure the size does not exceed the expected number of entries to prevent potential NoSuchElementException in the CopyOnWriteMap implementation
flume shell and master should use log4j instead of log4j.
updated authentication metrics and improved thread management in BasicAuthIntegrationTest and DaemonStream classes to enhance the robustness of the reindexing process and ensure
replaced HashMap with LinkedHashMap in DependencyUtil. java to maintain insertion order of nodes
add an internalerrormapper to jerseysupport. fix gh - 1081 ( # 1082 )
refactor header validation logic in Http2TestBase. java to improve code readability and maintainability by encapsulating validation logic
added conditional logic to store system properties based on the system property key to enhance system property management for different Java versions
updated method signatures from ` String ` to ` CharSequence ` in ` StringSubject ` and ` StringTest ` classes to accommodate a w
add jvm. countertime ( ) and jvm. getClassId ( Ljava / lang / Class ) J to the list of known object types in
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory to use a different datasource instance to improve flexibility in handling different connections in the application
[ hotfix ] fix checkstyle violation in deploymentoptions
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` instead of a ` ConstantState ` to simplify drawable handling and
updated InputStream handling in XmlParser and YamlParser classes to use StringReader instead of ByteArrayInputStream to improve resource management and simplify code readability
added support for coalesce operations in RexNodeConverter to enhance the functionality of the coalesce operator in Hive
camel - 17684 : fixed unit test error in camel - hl7
pr ) ) fix ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
updated DefaultDateTypeAdapter constructor to remove DateFormat dependency to improve code clarity and ensure thread safety during serialization and deserialization processes
refactor formatting in DocumentUtil. java for consistency to improve code readability and maintainability
replaced direct assignment of ` uri ` with a method call to ` setURI ` and updated query parsing logic to streamline query handling and ensure
removed the filterOldEntries ( ) method from FeedRefreshUpdater. java to streamline the code by eliminating unused functionality
change log level from fatal to warn in FSHLog. java to improve log clarity by indicating when to request close of a wal
refactored NodeMap class to implement Iterable < T > and refactored iterator and iterator methods to improve code clarity and maintainability by
updated import statements in DiscoveryClientRouteDefinitionLocator. java to use FilterDefinition instead of FilterDefinition to improve clarity and consistency in predicate handling
added a check for non - empty fields before processing in MongoRecordReader. java and updated SQL type validation in RexToMongoTranslator. java to
of - 2716 : add admins to the list of allowed admins.
replaced usage of MultiFields with SolrIndexSearcher in multiple files to improve compatibility with the SolrIndexSearcher for term retrieval
camel - 13312 : optimize constantbeanholder. tostring ( ) to avoid string conversion.
updated the handling of primitiveType in GroovyParserVisitor. java to ensure proper identification of primitive types and improve code clarity
remove hashcode ( ) and equal ( ) from frameinfoqueryresult
increase offer timeout for seda blockwhenfull test
added a new package - info. java file in the org. apache. lucene. core. testresources package to provide package - level documentation
update read length calculation in MessageUnpacker. java to ensure buffer does not exceed available space to prevent potential IndexOutOfBoundsException
updated the import statement for Nullable from'common. lang'to'core. lang'to ensure compatibility with the latest library structure
updated SQL query in IconCache. java to include user filter to ensure that the icon database retrieves the correct data based on the user's
[ hotfix ] fix typo in defaultmqproducerimpl
don't scan for module - info. class in whitelisted resource
baremetal foreign key constraint issue in upgrade410to420. java
removed the IJava2DRenderer interface from the Java2DRenderer class and deleted the IJava2DRenderer interface to streamline the code by
added @ NonNull annotation and implemented onTearDown method in DefaultAudioSink to ensure proper handling of offload buffer emptying when the listener is
refactor UpstreamCacheManager to use a ScheduledThreadPoolExecutor for scheduling tasks to improve efficiency and maintainability of the upstream management process
refactor StreamType class implementation to improve code readability and maintainability
corrected assertion message in Recording. java to improve clarity of assertion failure messages
updated authentication logic in FilestorePage. java and RootPage. java to enhance security by restricting access based on user permissions
camel - elasticsearch : ignore camelelasticsearchresttest until it's fix
added a check for the declaring class of the method in ExpressionControlBusFactoryBean to ensure that only non - lifecycle methods are processed
updated button labels for offer books in OfferBookChartView. java to improve clarity and consistency in button functionality
camel - 4687 : restlet endpoint should not allow method base on consumer context path.
add coinbase value to block. createnegatechain ( ).
removed Serializable interface from BTreeMapJava and modified test cases to expect NotSerializableException to ensure proper serialization behavior and improve test reliability
added null check for the cause of the error in RuleEngineImpl. java to avoid potential NullPointerException when the error message is null
reformatted conditional statement for better readability to enhance code clarity and maintainability
updated indexOf method to use mFiles directly to improve code clarity and maintainability
deleted the PlainVerifier. java file to remove unused or redundant code related to JWT verification
added a condition to close system windows when triggered from an AltTab to ensure proper handling of system window closure when triggered from an AltTab
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog behavior and ensure proper state management
updated MimeUtil's parseCharset method to include " UTF - 8 " encoding to ensure proper handling of character encoding in email parsing
added a call to the superclass's deinitialize method to ensure proper initialization during text fields
replaced custom serialization implementation in LogFormatTest with TestUtilities utility to simplify serialization process and improve code maintainability
updated preRange parsing from " previousClause " to " previousUntilLastClause " in LogicalGenerator and added new test cases in GroupByFill
added validation for negative array size and improved argument list handling in JAXWSExceptionBase. java to ensure proper exception throwing for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 588 )
updated thread join duration from 10 seconds to 60 seconds to allow more time for thread execution before proceeding
[ hotfix ] [ test ] fix typo in scheduler components factory
added title handling methods to ShadowActivity and updated references in ShadowAlertDialog and ShadowTextView to improve title management and ensure consistent behavior across different shadow
replaced commons - logging imports with org. apache. poi. util. POILogFactory and POILogger to improve logging consistency across the project
modify alarm handling in InstarHandler. java to replace'active'and'object'with their corresponding channel state to improve alarm processing accuracy
increment of remove latency when map be delete
updated enum declaration in Option. java and modified status handling in Response. java to improve code readability and maintainability by using a switch statement
refactor code to use a unified location method for finding Java compiler to improve code maintainability by centralizing Java file lookup logic
allow project name to be pass to flutter sdk ( # 588 )
added a new test class ` DeprecatedStubbingTest ` for deprecated stubbing functionality to ensure proper behavior and behavior of stubbing methods in Mockito
replaced the import of ` DispatcherType ` from ` org. eclipse. jetty. server. DispatcherType ` to ` javax. servlet. Dispatcher
add support for p - vsn and p - vsn when parse phrase
add system property to allow rsa key exchange in fips
replaced the use of ` output _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent potential memory leaks
[ pubsub ] delete the access token when a subscription be delete
changed interpolators from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView. java to improve animation
added handling for ` UpdateRegionLocation ` in ` ConfigPhysicalPlan ` and improved logging in ` ProcedureManager `, ` DataNodeInternalRPCServiceImpl
added a new file ` FileDialogLeakTest. java ` to test the finalization of a dialog to ensure proper resource management and prevent
hbase - 2697 [ testopentabletest ] move testopentabletest coprocessor to
svm : do not return false for uninterruptible implementation method.
[ flink - 21174 ] [ python ] remove unused splitmethod parameter from pbcodegenrowdeserializer and pbcodegenrow
updated condition to check for null disi in DrillSidewaysScorer. java to ensure that disi is not null before proceeding
synchronized methods in ` FakeMediaSource ` and ` ExoPlayer ` classes to ensure thread safety when updating source information
use jvm _ spec _ version constant instead of constant
( chore ) camel - test - infra - filereporter : explicitly cast null to file
updated the method call from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity. java ` to ensure end - to
added support for action bar navigation in DirectMessageConversation to enhance user experience by providing easy navigation options
added GET _ USER functionality and updated PROTOCOL _ VERSION to 6 to enhance user access handling and improve protocol compatibility
added a system property check for the architecture in TestJdbcPluginWithMSSQL. java to ensure compatibility with 64 - bit systems in the
updated the handling of the start class in the strategy to use the original start class to ensure that the strategy correctly references the original start class
improve error message and add local for parameter register number.
no longer depend on getasynccontext ( ). getresponse ( ).
planner demo : fix nurserostering panel for nimbus look and feel
updated regex in AppPage. java to correctly format version strings to ensure accurate representation of version information in the application
refactor animation listener handling in LauncherAppTransitionManagerImpl to improve code clarity and maintainability by encapsulating animation logic
dumpedprivatekey : improve error message
fix typo in edit offer data model
replace ` PageParameters. put ( " r ", repositoryName ) ` with ` PageParameters. newOpenTicketsParameter ( repositoryName
updated the RFBattery instance from 640 to 80 in PipeItemsWood. java to accommodate additional energy requirements
updated getClusterKey method to include blueprintName and blueprintRev parameters to enhance functionality by providing additional parameters for cluster retrieval
initialize downgradeAllowed to true in UpgradePack. java and add a test for it in UpgradePackTest. java to ensure that downgrade is allowed
updated scan method calls to use ` NameType. ATTRIBUTENAME ` instead of ` NameType. ATTRIBUTE ` to ensure consistency in handling XML namespaces
added support for emulation of system library loading to enhance flexibility in loading native libraries from different Java environments
updated sorting and comparison logic to use collator instead of a static final comparator to improve consistency and maintainability of the code
added file creation and closing functionality in DefaultPlatformManager and FatJarStarter to ensure the output stream is closed only if it does not already
updated assertion messages in TestSecretKeyCredentialHandler. java to enhance clarity of credential validation assertions
tidy up the RouteBuilderfinder and remove the ApplicationContextAware implementation to simplify the code and improve maintainability by leveraging Spring's
[ prometheus - influxdb ] fix description of metric option
hbase - 18801 fix intermittent failure in testfulllogrestruction
added ` reuseAddress ` and ` setBufferSize `, ` setReuseAddress `, and ` setTrafficClass ` methods in ` DatagramSocket
add server shutdown message to serverconfig for server shutdown message
simonstewart : remove deprecate Locatable interface from the internal package
updated error messages in VersionInfo. java to clarify field requirements to improve clarity and accuracy of error messages related to non - indexed fields
replaced equalityPredicateColumns and equalityPredicateColumns with predicateColumns and predicateEvaluator in StarTreeIndexOperator. java to streamline predicate handling and improve
modified formatting in HelloMessage. java and HandshakeHandler. java to improve code readability and maintain consistent formatting
fixed a syntax error in the Navigator class to ensure proper formatting of the code
updated access modifiers from private static to package - private in RecordReaderFactory. java and added a new test class in RecordReaderFactoryTest.
added support for " GREATER _ THAN _ EQUAL " and " LESS _ EQUAL " queries in MongoQueryCreator to enhance query functionality
refactor group by clause validation in ` CalciteSqlParser. java ` to improve clarity and correctness of group by clause validation
refactored MappedByteBuffer and FileChannelLinesSpliterator to use AtomicInteger for buffer management to improve resource management and prevent potential memory leaks
replaced calls to ` l. getValidator ( ) ` with a local variable ` validator ` in ` LdapUtils. java ` to improve code
added schedule ( ) method to CircuitBreakerImpl and updated testCircuit to include ExecutionException and TimeoutException to improve circuitbalancing reliability and
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS flag from the intent to simplify the intent configuration by eliminating unnecessary
web ui : use ` ` progressbar'' instead of ` ` ajax''
updated the @ DisplayName annotation in TableExtRetrieverTest to include a Disabled annotation to clarify that the retrieval strategy allows for column privileges
added synchronized keyword to the addExportedCount method to ensure thread safety during the export process
updated import path for IntRangeUtil1 from ` com. speedment. common. invariant ` to ` com. speedment. common
added validation for illegal characters in HttpParser and implemented unit tests for encoded headers in HttpParserTest to ensure proper handling of encoded headers and validate
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` to align the application with the new configuration layout
fix for sf bug # 198191 ( sf bug # 19832 )
updated the ForceLeaderTest class to include a new ForceLeaderWithTlogReplicasTest class to enhance test reliability by differentiating between leader
updated thread management logic to improve performance and reliability of thread operations
added support for RECOGNIZED TEMPLATE _ FILE _ SUFFIXES and introduced RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES
camel - 7999 : fixed the c error of camel - cxf. thanks to martin for the patch.
removed unnecessary whitespace in YamlRepresenter constructor to improve code readability and maintain consistency
updated date formatting in ToChar. java and added a new test for date truncation in TestFunctions. java to improve date formatting and ensure
added transaction and write ID validation in GenericUDTFGetSplits. java to ensure valid transactions are handled correctly in the Hive driver
replaced ` ArrayList < String > ` with ` Collections. emptyList ( ) ` in ` JsonSerDe. java ` to improve code readability and
add a method to check if a book path exists and update logging accordingly to avoid null pointer exceptions and improve debugging information
corrected formatting in SSTDeserializer and TestSTDeserializer classes to improve code readability and maintain consistency in formatting
updated GRID column handling in AppPreferencesImpl and ExtendedListFragment to use a constant for default grid column to improve code clarity and maintainability
updated error messages in Platform. java and ComparisonFailureWithFieldsTest. java to provide clearer context for differences in line breaks
ensure that clppingmedias _ end _ of _ source don't wait for keys.
updated API path annotations for accounts in OkexV3. java to ensure compatibility with the new API structure
fix broken test in lineutilstest
added checks for varargs and old array syntax classes in JavacParser. java to improve error handling for varargs and old array syntax
add warn if ` defaultdrmsessionmanager ` be accessed on wrong thread.
added methods and string index support in VariableContext to enhance functionality to support method calls in variable contexts
add test for invalid compilation unit and profile string json
refactor buffer position and limit handling in Piece. java and SharingPeer. java to improve code clarity and maintainability by reducing redundancy
added responseTimeout property and modified related methods in GatewayAutoConfiguration, NettyRoutingFilter, and NettyRoutingFilter classes to enhance HTTP client handling and
refactor ` getNativeLinkTarget ` method calls to use ` getTargetForPlatform ` instead of ` cxxPlatform ` to improve code clarity and maintainability
camel - main : add unit test for mainrestconfiguration
added support for handling field access in ASTConverter and updated conversion logic in RexNodeConverter to enhance support for handling field access expressions in the query plan
replaced direct calls to ` QueryLogEntry. values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
fix relative uri construction when no proxy
refactor PKCS12KeyStore and StoreSecretKeyTest to use a Certificate array instead of a chain length to improve code clarity and ensure proper handling of
added reflection access checks in Bootstrap and ReflectionCheckLinker classes to enhance security by verifying access permissions for reflection classes
changed the access modifier of constructors in CollisionMap from public to package - private to restrict access to the enclosing class for better encapsulation
deprecated getRawInputFromTransactionInput method and added null check to ensure input is not null to avoid potential null pointer exceptions
refactor log level handling to use a switch statement to improve readability and maintainability of log level parsing logic
don't use region _ id, it's already set in the database
added support for handling EncryptedDocumentException in OldExcelExtractor to ensure compatibility with old Excel files by throwing an appropriate exception
add -- add - exports = org. graalvm. nativeimage. builder / com. oracle. svm. core. jdk = ALL
removed an unnecessary'else'statement in the TimeLineCursorAdapter to streamline the code for better readability and maintainability
increased sleep duration in BatchingStateChangeUploadSchedulerTest from 10 to 50 milliseconds to ensure more reliable test by allowing more time for attempts to complete
modified file handling and directory deletion logic in ShadowContext. java and ContextTest. java to improve directory management and ensure proper deletion of external files
updated exception handling in ExceptionFactory to use Class. forName ( " org. opentest4j. AssertionFailedError " ) instead of
increased WAIT _ TIME _ MS from 10000 ms to 60000 ms to accommodate longer wait times for user input
added support for AUD extension in ConnectOAuth2RequestFactory and updated JWT claim handling in ConnectTokenEnhancer to enhance security by allowing
camel - 17748 : camel - kafka - remove default value for ` breakonfirsterror `.
added a new static final integer selectableItemBackground to facilitate the selection of items in the application
replaced individual import statements for trade - related classes with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and
updated event type assignment logic in TxnSetOperation. java to ensure correct event type handling when the record is null
throttle for resumable random access file
changed the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to ensure the correct class is loaded
added support for handling multiple HSSF formats in HSSFDataFormat. java and improved test assertions in TestWorkbook. java to ensure proper formatting and
from flinkkkkkkkkkkkkkkk
updated the condition for determining the compressed chunk length in CompressedInputStream. java to ensure compliance with the maximum compressed length requirements
add an idempotent repository for camel - spring - redis
fix for entity that use metadata instead of damage.
[ mng - 4771 ] don't return local artifact in legacy local repository
if taskmanager be not start, don't start localinstancemanager
added Maven deploy command to AbstractArtifactResolutionException. java to provide detailed information about the repository being deployed
updated the ` getInternalTemporalPath ` method to include ` Context ` in ` UploadFileOperation. java ` to ensure proper context for file operations
updated import statements and added a method to find FeedEntryStatus by entries to enhance functionality by allowing retrieval of FeedEntryStatus based on subscription information
added blocking execution handling in ContextImpl and updated DeploymentOptions usage in BlockedThreadCheckerTest to enhance thread safety and improve test coverage for blocking
updated the ` instantiate ` and ` convert ` methods to accept a ` String ` parameter and improved null handling in the ` FormatterConverter ` class
update LoadContactsTask to conditionally include Ezvcard parsing based on Android O and above to ensure compatibility with newer Android versions by utilizing
refactor setRemoteAddress and setRemoteHostname methods to directly set remote address and hostname to improve code clarity and reduce method duplication
added a null check for the realClass in Robolectric. java to ensure that the class is not annotated with @ Implements to prevent
add support for optional tlsMutualAuthenticationCertificateChain in NettySslContextFactory and ExampleNettySslContextFactory to enhance security by ensuring tlsMutual
updated character set from ` ISO _ 8859 _ 1 ` to ` ISO _ 8859 _ 1 ` and added a test for handling SSL exceptions to
added getter method for consumer and producer in AbstractKafkaResumeStrategy to provide access to the consumer and producer for enhanced functionality
refactored event handling in ` FrameRenderer. java ` and ` PageChangeListener. java ` to improve code readability and maintainability by organ
updated warning log from " Could not send email " to " Could not send SMS " to clarify that both email and SMS settings are not configured
# 496 - optimize draft query ( # 497 )
added error handling for IOException during file transfer to improve robustness by gracefully identifying potential resource issues during file transfer
fix : arrayindexoutofboundsexception in executablefactory
add apache license header to javadoc
fix : attach file to work directory if user preference be present
updated LoadOptions construction in AccessTest. java to use a new LoadOptionsBuilder to improve clarity and maintainability of schema crawler options
updated package structure and added a new test method for loading legacy libraries to improve organization and ensure proper functionality of the library loading process
modify TestReader to return null instead of throwing an exception to simplify error handling by returning a null value instead of throwing an exception
added methods to set the name, enabled, and expanded properties of the prototype to enhance functionality by providing access to the properties related to the prototype
refactor connection handling to use a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
[ hotfix ] fix typo in datastreamjob javadoc
refactor error handling in TestContentProvider to use try - with - resources for better resource management to improve robustness by avoiding potential FileOutputStream leaks
camel - 4687 fixed the unit test error of cxfendpoint
guacamole - 14 : don't check for h2 - 14 cipher when use http / 2
refactor parameter symbol handling in LambdaToMethod. java and introduce a boolean for lambda detection in ClassFileVisitor. java to improve code clarity and
minor change to coordinationtransformer so that it would well reflect our new design that also include conferencing and conferencemembers.
increased the timeout duration of the copyURLToFile method from 5000 to 60000 milliseconds to allow more time for file operations to complete
added a setSlop method to mpq to set the slo value for improved parsing accuracy
increased sleep duration in LongPressMouseListenerTest from 10 milliseconds to 100 milliseconds to improve test reliability by allowing more time for mouse interactions
updated the default port from 8188 to 6188 in FlumeTimelineMetricsSink. java and HadoopTimelineMetricsSink. java to ensure consistent
add parallel task to screengrabber, screengrabber, and gamescheduler. parallel ( )
updated visibility logic for compound view based on edit options availability to ensure correct visibility based on available edit options
added a calculation for progress in DepthController. java to ensure progress does not exceed a minimum value of 1 f
remove unused ` packetreceived ` method from session.
added debug logging for authentication failures in DefaultCasDelegatingWebflowEventResolver. java and refactored the DelegatedAuthenticationGenerateClientsAction
added null check for the service parameter in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction to enhance
[ cli ] add ` ` hidden = true'' to ` ` enable account level permission via smart contract''
added doNotInstrumentClass method for " androidx. room. CoroutinesRoom $ Companion " to prevent instrumentation of specific room
removed unnecessary ClassLoader check in ` isSupported ` method of ` NegotiateAuthentication ` to simplify the code and improve readability by eliminating unnecessary
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unnecessary parameters
camel - 15836 : camel - jms - add maxconcurrentconsumers to reply manager.
refactored AuthenticationProvider and TargetObject classes to improve code clarity and maintainability
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 477
log4j2 - 1343 log4j2 - 1349 added patternselector test
simonstewart : don't fail the test in hta mode with selenium rc
added ` MwThankPostResponse ` class and modified ` thank ` method to return a ` MwThankPostResponse ` to
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` to extend ` AbstractEndPoint ` instead of ` ChannelEndPoint ` to implement
refactored revoking store management in Manager. java to improve code clarity and ensure proper management of revoking store properties
added new test cases for implicit joins in HQLTest. java to ensure correct functionality of implicit joins in JPQL queries
replace carriage return characters with line breaks in the NonVisualRegressionTest to ensure consistent line separation across different operating systems
replaced references to pendingCommit with filesToCommit in IndexWriter. java and added assertNoUnreferencedFilesIn MockDirectoryWrapper. java to improve
added @ Final annotation to method parameters in BaseError. java to enforce immutability and improve code clarity
added validation for user resource percentage input in ConsumeUserResourcePercentActuator to ensure that percentage values are within valid range to prevent runtime errors
updated conditional check in AuthenticatorActivity to include a new resource for show _ old _ login to enhance login behavior based on user configuration
rename test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity by using a more descriptive test class
updated setResponsePage logic in EditTeamPage. java to streamline response handling for user profiles
updated debug log message to include exception details to improve error reporting for better debugging
added exception handling for closing the serverSocket channel in ConnectionManager. java to ensure proper resource management and prevent potential resource leaks
refactor methods in Rocket class to improve code readability and maintainability
added a method to create aynPartSpec for creating dynamic partitions in the BaseSemanticAnalyzer to enhance semantic analysis by allowing dynamic partition specification creation
make sure round _ half _ up _ factor be set to 1 when use scientific format
added ` visitDirectory ` method in ` JarDirectoryStep ` to handle directory entries and updated ` visitDirectory ` method in ` DirectoryTraversal `
added a new JWKSetEditor class to handle JWKSet values to enable custom editing of JWKSet values based on
refactor term processing in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to use firstPendingTerm and lastPendingTerm parameters to improve code
truffle : add miss truffle boundary for partial evaluation constant
change default value of fetcher. threads. per. host. by. ip from true to false to disable parallel fetcher requests for improved performance
refactor conditional check for queryTimeout to improve readability to enhance code clarity and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest. java to ensure genPath
updated method implementations in ReplicaPosition. java to improve accuracy and maintainability of the code
cloudstack - 5221 : fix network usage statistic update task after a certain delay.
updated animation interpolators to use FINAL _ FRAME instead of t - > t to improve clarity and consistency in animation behavior
updated swipeLength calculation in Background. java to adjust the height based on display density to improve responsiveness and accuracy of the navigation bar's
added a new module - info. java file for the org. eclipse. jetty. http3. server module to define module dependencies and improve
fix nullpointerexception in jsontype # gettextvalue
simplified context initialization in ResourceResolverBean. java to improve code readability and maintainability
[ hotfix ] [ checkpointing ] remove optional. orelse ( 0 )
fix inner class reference table for interface and package.
updated command line formatting in TimestampCheck. java to improve readability and maintain consistency in command construction
replaced FluentIterable with Java Streams for file listing to improve code readability and leverage modern Java features
dubbo service export : enable dubbo registry by default ( # 9685 )
fix otr session close when security otr mode be disabled.
added properties for node label outline size and transparency in the PreviewProperty and NodeLabelRenderer classes to enhance rendering flexibility by allowing configurable outline sizes and
fix javadoc warning in java. net and java. net
modified the return value of a method call to true in Win32FontManager. java to ensure proper handling of font changes in the application
added null check for the variable'v'before visiting it in TreeVisitor. java to avoid potential NullPointerException when'v'is null
added error handling policy implementation in JDTBatchCompiler. java to ensure proper handling of compiler errors based on environment configuration
added properties and methods to set and retrieve the'anchor'in the LabelBlock class to enhance the functionality of LabelBlock by allowing customizable
updated method signatures in mmm and ppp classes to improve code clarity and maintainability
refactor IndexReader class to improve code readability and maintainability
updated NetworkInterface to check for a non - null networkInterface before accessing its loopback property to enhance robustness by preventing potential NullPointerExceptions
added Locale parameter to the fromRfc1123DateString method across multiple classes to ensure consistent date formatting across different locales
( chore ) camel - test - filedownloadviaproxytest : use download with extension.
nifi - 5952 : add option to output flowfile even if there be no hit
bugfix : remove aggregation ratio parameter from quota management method
[ java ] fix error message in election.
remove unwrapping of file watcher in streamfilesp # close
refactor widget event handling in PageChangeListener. java to improve code clarity and maintainability by consolidating conditional checks
fix for bug # 4536, add iswriteprotected ( ) to workbook
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration
updated CategorizationFragment. java to improve code readability and maintainability
updated the status message for bridge reports from " reachable = false " to " not reachable " to clarify that the bridge reports are not reachable
add fmlclienthandler. isloading ( ) method to check if fml client be loading.
updated return statements to use getOrNull for " unit. millions " and " unit. thousands " in UI and BlockInventoryFragment classes to improve
replaced Preconditions. checkArgument with a switch - case for handling BYTES and STRING types in MessagePackParser. java to improve type validation and provide clearer
added parameterized tests for query processing with reserved words as identifiers in HqlQueryTransformerTests and JqlQueryTransformer to enhance test coverage for query
added tests for serialization and deserialization of nested Maps in MapTest. java to ensure correct handling of nested Maps during JSON serialization and deserialization processes
geometryutils : don't adjust x2 and y2 when they be offset.
replaced instances of ` SORT _ ORDER _ DIALOG _ TAG ` with ` SORTING _ ORDER _ FRAGRMENT ` in multiple classes
added error handling for empty TestPlan in StandardJMeterEngine. java to ensure proper execution when no test plan is available
replaced instances of ` Method. of ( " dbmsName ", String. class ) ` with ` Method. of ( " getDbms
updated the argIdent assignment logic in the parser to handle both strict and non - strict idents to improve robustness by ensuring argIdent
updated the default protocol from " SSL - HTTP / 1 " to " scf. getProtocol ( ) " to ensure the correct protocol is used
volume display : set displayvolume to true by default
refactor version method to accept a boolean parameter and update related method calls to improve clarity and maintainability of versioning functionality
updated logic in ChangeLogParameters. java to handle global change logs more robustly to improve robustness by ensuring correct retrieval of ChangeLog
change log level from warn to debug when unable to find transaction
skip setoperationtest due to bug in basicformatterimpl cause exception
updated socket timeout handling in the connection setup to ensure proper socket timeout settings during SSL connections
updated the action bar size calculation to exclude the MainActivity's popup status to ensure the action bar is appropriately sized based on whether the popup is
make cha a final option and make class final to enforce immutability
http : / / issues. apache. org / jira / browse / amq - 4218 - fix for http : / issues. apache
updated import statements and refactored test methods in JodaTimeRangeRandomizersTest. java to improve code readability and enhance test coverage for random
updated URL redirection logic for Jakarta EE 9 and Jakarta EE 5 versions to ensure compatibility with Jakarta EE
fix : readiness. isready ( ) return false for non - node readiness
use handler. endpoints instead of liveendpoints in storage proxy. patch by jbellis
added a null and empty check for creationStatements in IdTableHelper. java to avoid unnecessary processing when no creation statements are available
update RPC _ VERSION from 1 to 2 in DataRpcConfig. java and UserRpcConfig. java to ensure compatibility with the latest RPC standards
added a null check for security manager before calling checkPackageAccess in ObjectStreamClass and ObjectStreamField to enhance security by ensuring package access
removed unused imports and updated return statements in Utils. java and XLCDCommunicator. java to streamline code and improve readability by elim
refactor DefaultMetricsTagProvider to use a Map for tagging instead of returning an immutable map to improve code clarity and maintainability by encapsulating
added MockBrowserTest to the suite to enhance test coverage for the MockBrowser functionality
changed default value of opt2 from Level. OFF to Level. ERROR to improve clarity of error level configuration
changed instance variables to be final in IconNormalizer. java to ensure immutability and prevent unintended modifications
added a boolean flag to control the first call of preparation do in PrepareInterceptor. java and corresponding test cases in PrepareInterceptorTest. java
modified the ` showWorkspaceAndExitOverviewMode ` and ` hideAppsCustomizeHelper ` methods to improve workspace management based on focus state
added Singleton annotation to AuthWithStoreFeature and refactored binding methods in Auth. java to improve dependency management and simplify code readability
fix infinite loop in graphicaldatamodelview when joincondition be not present
bugfix : remove private ip private ip private ip from capacity db
updated usage documentation for asynchronous profiling in ProfileServlet. java to clarify usage details related to asynchronous profiling
fix : add a required field to the model
corrected the spelling of " Watch " to " Auto " in multiple configuration classes to ensure consistency and accuracy in naming conventions
updated feature flags implementation to improve performance and maintainability of feature management
updated UUID generation and ID formatting in ConfigStore. java and added a new test for handling large IDs in CommonSetup. java to ensure consistent
added a check for a picture before setting the image drawable in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the image is only set
updated the description of compaction settings in HiveConf. java to clarify that compacting on insert - only tables will always run via queries regardless of
added a null check for the storage path in the download check to ensure that the download path is valid before proceeding with the download process
replaced resizeThreshold comparisons with a new resize check method in multiple classes to improve code clarity and maintainability by centralizing resize logic
refactor LDAP connection handling methods to improve code clarity and maintainability
camel : deprecate @ xmlattribute ( required = true )
removed debug tracing logs related to the NO _ BACKGROUND _ TO _ OVERVIEW _ TAG to streamline traceability for better debugging
added a condition to check if the class name starts with " com. intellij. rt. junit. " to ensure compatibility with IntelliJ IDEA build
updated assertions in TestMultiSearcher to check for the length of hits2 and hits3 to ensure the test accurately verifies the functionality of
added a new file LucenePackage. java to facilitate the construction of LucenePackage instances
inverted the calculation of sizeInBytes in RAMDirectory. java to correct the logic for adding bytes to the sizeInBytes array
updated calculations and added an estimate method in GenericUDAFBloomFilter, GenericUDAFEvaluator, and BYTE _ ARRAY _ 8 to improve
added a null check for getDrawerToggle ( ) before processing animation to avoid potential NullPointerExceptions during animation processing
added a @ SuppressWarnings annotation to the convertToAuthentication method in DefaultAuthenticationAdapter. java to suppress warnings and improve code clarity
added conditional logic to enable system class loader scanning based on ` overrideClassLoaders ` and ` scanSpec. enableSystemJarsAndModules `
export support for corporate corporate latex field ( # 2383 )
added a method to cancel core recovery before shutting down the container instance to ensure that core recovery is properly managed by ZooKeeper awareness
updated time calculations in bug5070081. java to improve accuracy of time measurement
don't show auth control option if there be only one tab
fix javadoc warning in pgproperty
added security constraints and tests for the root object in SecurityEvaluationContextExtension to ensure default values are verified for additional fields in the security context
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize does not exceed primeSize - 1
replaced the use of ` FileStorageUtils. getSavePath ( mAccount. name ) ` with ` FileStorageUtils. getUsable
updated the combine function in DistinctSqlAggregation and added unit tests for it to enhance aggregation functionality and ensure proper interaction verification in distinct aggregation
added a test for executing post - login activities on successful authentication to ensure that login activities are executed on successful authentication
extractorframereare : add spanishstrippedverb constructor
refactor CharArraySet to improve code readability and maintainability to enhance code clarity and facilitate future modifications
updated error messages and conditions in MuxerWrapper. java to improve clarity and ensure proper handling of unsupported track formats
refactor JsBundleGenrule to use AndroidPackageable for asset management to improve code clarity and maintainability by using more descriptive class names
added UTF - 8 character encoding handling in PinotClientRequestServlet and enhanced string processing in StringDictionary to ensure proper character encoding and prevent potential
updated case name from " Logical Analyzer " to " Logic Analyzer " and changed resource references to improve clarity and maintainability of the analyzer functionality
refactor the initialization of the vector instance to use a static instance variable to improve flexibility by allowing the vector instance to be dynamically instantiated
added syncMetaLeader ( ) method call in CMManager. java to ensure proper synchronization of metadata leader data
return ` ` perceivedContribution'' instead of ` ` claimedToInstructor'in feedback question
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging functionality during testing
camelcase - map - underscore - to - camelcase fix for http : / / code. google. com / p / mybatis
added support for VIOMI _ WATERHEATER _ E1 device in MiIoDevices. java to enhance the device's
replaced calls to ` getSslSessionData ( ). getCerts ( ) ` and ` getKeySize ( ) ` with ` sslSessionData
added a new file CreateNewSpreadsheet. java for creating a new spreadsheet from an Excel file to facilitate the creation of a spreadsheet
polish ` ` redis. cache. redis. time - to - live'property
updated content URIs to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT _ URI to ensure proper notification handling for favorites
updated the version from 2.14. 0 to 2.14. 2 in SwaggerResolveTest. java to ensure compatibility with the latest version of the
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager. java ` to improve
added a condition to check if the variable'c'is equal to'<'to ensure proper handling of special characters in DocClassUtil
simplified string formatting in the return statement to improve code readability and maintainability
added import for Liquibase. Scope and invoked it with a message to inform users of no validation errors are found
allow integration test to depend on web application context
updated conditional checks and replaced ` getResponderAt ` and ` getResponderAt ` with ` getComponentAt ` in multiple classes to improve responsiveness
removed unnecessary whitespace in RamlType. java to improve code readability and maintain consistency
added a new ClientStat class and changed method return types from Long to String to improve data accuracy by accommodating more data types
replace all occurrences of " $ 1 " and " $ 2 " with " $ \ n1 " and " $ 2 " in CellContent
simonstewart : fix flaky test
mondrian : fix typo in mondrianproperties. java
added stack trace printing for process start failures in ProcessTools. java and updated launcher checks in CustomLauncherTest. java to enhance debugging capabilities and
added a test method for embedded images in TumblrRipperTest. java to ensure the TumblrRipper
added a condition to check if the store type has a slot before conversion to ensure proper handling of store types without unnecessary conversion
initialize the extractorwrapper when the next load position be zero.
refactor BaseLockFactoryTestCase to use a custom ` toString ` method for output stream handling to improve readability and maintainability of the code
tikaconfig : add support for the ` ` service - loader'' attribute on the < service - loader / > element to enable dynamic
added package - info compatibility checks in DocLint. java and updated import statements in DocLintTester. java to ensure compliance with package -
added support for the " import " command in DataImportHandler and DataImporter classes to enhance command handling for data import operations
added a test to verify that inner classes are not modified if the ` ignoreDefinition ` parameter is true to ensure that the ChangeType recipe does
removed unused import of android. util. Log from JettyService. java to clean up the code and improve readability
added a ` workspaceScreens ` parameter to the ` checkItemPlacement ` method to exclude specific workspace screen entries from processing
simonstewart : add a " / quitquitquit " servlet to kill the JVM when a command line response occurs
fix potential npe in llrealtimesegmentdatamanager ( # 2451 )
added a check for Windows OS in the Tests. java file to skip processing for Teredo nic instances on Windows
add contact error dialog when a contact be not connect to the server.
updated the registration method for USER _ DETAILS _ SERVICE _ FACTORY in AuthenticationConfigBuilder to ensure that the USER _ DETAILS
changed the parameter order of the drawBitmap method from'left'and'r. top'to'null'in FastBitmapDrawable.
fix ( fix ) meitrack and totem protocol decoder
changed method access modifiers from public to protected for getFontPath and getPlatformFontPath in SunFontManager and X11FontManager classes to enhance encapsulation
in
fix fail test due toachedmaxsizeexception
add an option to keep empty sentence in the document processor. close the input stream when the tokenizer be empty.
mavenartifactfetcher. createartifactsubdirectory ( ) now return a boolean indicating success.
refactored ` ReusableCompiler ` and ` JavaLanguageServer ` to return ` JavaCompilerService. NO _ MODULE _ COMPILER
added null check for the answer parameter in DirectAgentAttache. java to ensure proper handling of null resource responses
don't swallow exception when send email
fix a crash when try to pipe an item that don't exist.
updated date parsing methods to use Locale. ROOT instead of Locale. getDefault ( ) to ensure consistent date formatting across different locales
added a boolean field ` includeDecals ` with getter and setter methods in ` StorageOptions ` and created a checkbox in ` StorageOptionChooser
updated the generateDocumentation method to include an additional parameter to ensure documentation is generated with a specified output directory
updated HiveProtoLoggingHook to set the queue and retrieve the duration from the hook context to ensure accurate logging duration tracking in the Hive logging framework
updated assertWarnOrFail message in SolrIndexConfig. java and adjusted log level in DocExpirationUpdateProcessorFactory. java to ensure compatibility with
updated class file version checks in ignoreRecordAttribute. java to ensure accurate validation of class file versioning
added unit tests for LDAP password authentication in a new file ` LdapPasswordAuthenticationTest. java ` to ensure correct behavior of password authentication in LDAP
updated import and condition in TaskCompiler. java to utilize BasicStatsNoJobTask instead of OrcInputFormat to improve performance by utilizing more accurate
fix a null pointer exception when save all from the project. ( # 587 )
refactor methods in VisibleAdvance class to improve code readability and maintainability
fix : reflector don't throw terminalexception when reconnecting
added support for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of Sparklines for dynamic numeric columns
refactor ` ResolvedGroupArtifactVersion ` to use ` Objects. requireNonNull ` for null safety to improve code reliability by ensuring non - null
updated API assignment logic to ensure fallback to the existing API when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code clarity and maintainability
added lighting and texture destruction logging in PhotoPanel and FlameRenderer classes to enhance shader management and improve debugging information
updated method editor scene size and added context menu functionality in multiple files to improve performance and enhance user interface functionality
added bounds checking for character array access in CSSParser. java to ensure proper handling of character inputs and prevent potential ArrayIndexOutOfBoundsException
added logic to set the JFrame and JDialog as decorated based on the system's look and feel property to ensure that the application does not
removed the'this'keyword from the'this'and'remove'method calls in HostRoleCommandDAO to simplify the SQL query and
updated message types from F5 _ UNKNOWN and F6 _ UNKNOWN to F5 _ TRANSPONDER _ TEST and F6 _ TRANSPON
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and maintainability of swipe handling logic
replaced ` HostDatabase ` with ` ColorStorage ` in ` ColorsActivity. java ` to utilize ` ColorStorage ` for improved color management
refactor methods in String class to improve code readability and maintainability
removed unused imports and logger initialization from multiple classes to improve code cleanliness and maintainability by eliminating unnecessary dependencies
added a method to retrieve global entries from the map to enhance functionality by allowing retrieval of global entries from the map
added multiple assertions to verify the PublicMethed status of the sendcoin method in MultiSign34. java to ensure the PublicMeth
[ CUFilterTest ] migrate CUFilterTest to JUnit 5 to ensure compatibility with the latest JUnit framework
updated path separator handling in JavadocReport. java to ensure consistent path formatting across different operating systems
change method return type of augmentSuccessViewModelObjects from static to instance to allow multiple instances of AbstractServiceValidateController to use the same method for
hhh - 14748 fix testutil. getfield ( fieldname ) in inheritancetest.
removed the ` getConf ( ) ` parameter from Outlink constructor across multiple parser classes to simplify the Outlink construction by eliminating unnecessary configuration parameters
removed the ` LexicalContext ` parameter from multiple methods in ` ensureUniqueNamesIn ` to simplify method signatures and improve code clarity
added imports and modified return statement in UseLambdaForFunctionalInterface. java and TypesInUse. java to improve code clarity and ensure unused imports
replaced ` appendClassSelector ` with ` createFileSet ( ref ) ` in ` TestNGAntTask. java ` to streamline file handling by
added a check to return the root input as a Aggregate in HiveCardinalityPreservingJoinOptimization. java to ensure that root input is
fixed npe in forgeregistry. getregistry ( )
fix bug in intersector
add default method for sbe and sbelimit to messagedecoderflyweight
refactored ElasticsearchContainer initialization to use a dynamic version to improve flexibility and maintainability of the test code
peermessagereader. parse now use a bytebuffer instead of a direct copy of the message byte array.
refactor ClusterDefinition to use versionId instead of clusterName to improve clarity and maintainability of cluster definition handling
camel - 5497 : remove unused setconfiguration method from ftpendpoint
[ zeppelin - 5892 ] set'status'to read when dependency can not be fetch
added a new test class to ensure that locals must be reserved for defined constants to maintain code integrity and prevent runtime errors
added conditional check for basic constraints in ForwardBuilder. java and created a new class BuildEEBasicConstraints. java to ensure proper handling of
added database initialization logic in JdbcPostgresqlDAO to ensure values with the same time will be upserted for compatibility with version 9.5
set maximum message size in SimpleEchoClient and override setInputBufferSize in AbstractWebSocketConnection to ensure WebSocket message size does not exceed minimum buffer size and
lucene - 3892 : don't crash reader. delete ( ) if undeleteall = true
added null checks for scopes in ClientRegistration and improved test cases to enhance robustness by ensuring non - null values are handled correctly
added null checks for orderBy before adding it to the expression to avoid potential NullPointerExceptions when orderBy is null
replaced ` Assert. assertThat ` with ` Hamcrest. MatcherAssert. assertThat ` in ` ClusterEntrypointTest. java `
cloudstack - 5595 : don't allow vm to be expunge when vm be expunge
refactor initialization of HiveLog4j in HiveServer2. java to improve readability and maintainability of the code
added a check for non - empty tasks in AssetManager. java to avoid potential NullPointerExceptions during asset loading operations
openpgrubsubutil. deletenode now return a boolean instead of void.
datajpa - cleanup : remove unnecessary object creation
don't throw an exception if code 128 or code 39 don't find a barcode
replaced TreeSet with LinkedHashSet in SSLContextImpl. java to maintain insertion order for cipher suites
added a check for control characters in the Escaper class and updated the internationalization test to ensure that only valid control characters are processed
updated provider method invocation logic to handle CharSequence types in ProviderSqlSource. java and SqlProviderTest. java to ensure proper handling of non -
updated import statements and added null checks for aliasChildren in InternalMNode. java to enhance code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView. java and updated scrollDelta calculation in Workspace. java to
renamed variable ` synthetic ` to ` pruned ` for clarity to improve code readability and maintainability by using a more descriptive variable
set accessibility for a method in WidgetInterceptor to ensure that the method is accessible for testing purposes
added a check for " database. server. id " before setting the literal initializer in ConnectorConfigGenerator. java to ensure that the default value
make the ripper more picky about what the browser do
added a web interface menu item to browse the PMS server URL to enhance user experience by providing quick access to the server's hostname
fix for ` ` inner - then'' and ` ` inner - then''
added error handling when building records at a specific offset in EncryptedSlideShow. java to improve robustness by preventing potential ArrayIndexOutOfBoundsException during record
improve logging and error handling in checkpointio. java and filecheckpointio. java
removed redundant call to loadBattlePassManager ( ) in Player. java to avoid potential null pointer exceptions during avatar postLoad
updated Docker image version in PortForwardingContainer. java to ensure compatibility with the latest SSHD image configuration
added a large array and forced garbage collection in ThresholdTest. java to ensure proper garbage collection during testing
updated conditional checks for log types in StdErrLog. java and improved test assertions in StdErrLogTest. java to enhance logging functionality and
feature - redissonremoteservice. getremoteservicerequest ( ) method don't take a service name argument. regression since
added methods ` isSelected ( ) ` and ` setSelected ( boolean b ) ` to the ` MultiButton ` class to enhance functionality by allowing selection
replaced UpNextActivity with NextUpActivity in CustomPlaybackOverlayFragment to transition to NextUpActivity for enhanced functionality
ensure replicasmanager be create even if not enablecontrollermode = true
close redis connection if redis connection fail
refactor background color retrieval from TypedArray to a utility method to improve code readability and maintainability by centralizing theme color logic
renames occurrence of callparticipant to callpeerpeer.
added multiple instances of the creator registration for type adapters in ToolingApiLauncher. java to enhance type adapter functionality and maintain consistency across the builder
fix checkstyle issue in test / util / payload / testpayloadcheckquery. java
refactor ConsoleReader to simplify printing logic and improve buffer handling to enhance readability and maintainability of the code
added handling for cancellation in BaseCommand to improve user experience by providing context when an error occurs
move test from compiler. test to compiler. api
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
[ one. util. streamex. emulatejava8 ] don't try to access stream. dropwhile.
replaced " wheel. png " with " sys. png " in DecalTest. java and MusicTest. java to reflect the new system
modified the IntentFilter and unregistering of the mCloseSystemDialogsReceiver to ensure proper unregistration of the mCloseSystemDialogsReceiver
removed an unused import statement from HostsRemovedEvent. java to clean up the code and improve readability
updated ` ClientDetailsEntity ` to enable introspection functionality and added ` allowIntrospection ` property to enhance client experience by allowing introspection based on client
added HTML encoding functionality in HtmlSessionInformationsReport. java to ensure proper handling of special characters in session information
added PhraseQuery, PhrasePrefixQuery, and org. apache. lucene. search. spans. to the query documentation to enhance the
updated size checks from ` size ( ) = = 0 ` to ` isEmpty ( ) ` in ` CommentsInserter ` and ` CommentsParser
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods for improved clarity to enhance code readability and maintainability
updated method signatures in AbstractAssert, Assert, and related classes to use Object type instead of a generic type A
updated the package structure and generic type in the JwtPlugin and ThrowingFunction interfaces to enhance type safety and improve code clarity
added getter and setter for ` uploaderBehaviour ` in ` AppPreferences ` and its implementation in ` PreferenceManager ` and ` UploadFilesActivity
fix ( ctfieldwrite ) : fix nullpointerexception in javaprettyprinter
updated BitmapDrawable instantiation to use Robolectric's Bitmap class to improve compatibility with Robolectric's Bitmap class
corrected the spelling of " Valid " in the method name from " isValidSEnding " to " isValidEnEnding " to improve code
updated PageMarkerResources to use a new drawable resource for the current page indicator to improve visual clarity by indicating the current page indicator instead of adding
add a reinvocations variable to track the reinvocations to improve debugging by tracking the reinvocations value
updated the calculation of topPadding in DefaultLookAndFeel. java to correctly account for the inner height of the text component
added a break statement in Recognize. java to terminate a loop under specific conditions
added Haptic feedback functionality for home screen lock and folder name input handling to enhance user experience by providing haptic feedback when home screen
refactor formula handling in ExcelBatchReader. java and add comprehensive unit tests in TestExcelFormat. java to improve code clarity and ensure proper
fixed bug 139632 - immutablefield no longer flags assignment in anonymous inner class method
added a private String field to CommaFeedConfiguration and modified user agent assignment logic in HttpGetter to ensure user agent is retrieved from application settings
camel - 17748 : make dataformat optional.
changed log level from info to debug for file not found messages to reduce log verbosity for better debugging
rename the test class from ` QueueTest ` to ` QueuedPipeTest ` to clarify that the test class is intended for batch processing
updated version check from BukkitVersion. v7 _ 6 to BukkitVersion. v7 _ 6 to ensure compatibility with OfflinePlayer by
camel - 19836 : camel - core - optimize rout collection to reduce object allocation.
pshape3d now support fill, tint, etc.
updated methods and variable names for consistency and clarity to improve code readability and maintainability by using more descriptive names
replaced ` Shadow. extract ( matrix ) ` with ` matrix. getValues ( m ) ` in ` ShadowMotionEvent. java ` to stream
updated package imports from ` com. facebook. buck. parser. api ` to ` com. facebook. buck. parser ` to align the
refactor class handling logic in GroovyEngine. java to simplify conditional checks and improve code readability
add a plugincontextlistener so it can be use in the rest.
removed redundant print statement from NativeCodeGenerator. java to streamline output for cleaner output
replaced calls to updateMotors ( ) and activeInstances ( ) with fireChangeEvent ( ) in FlightConfiguration. java to improve event
added tests for ExpectedException in ThrowableAssert _ hasCause _ Test. java to ensure proper exception handling for expected exceptions
removed flattenName and pack variables from AutomaticDependencies. java to streamline the code by eliminating unnecessary variable declarations
rename ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint. java ` to improve clarity by accurately reflecting the
marionette : add marionette test for firefox profile and capability.
camel - 13312 : added route. description property to make it easy to edit route description.
updated method signatures in JavacTreeMaker. java to improve code clarity and maintainability
added a line to set the weight of an edge in ImporterCSV. java to ensure the edge's weight is correctly set for CSV
bugfix : upload tariff cost per month to get tariff cost per hour
updated SQL query to include adsrc from pg _ attribute and modified tuple assignment to ensure correct retrieval of attributes from PostgreSQL
added a null check for binarized sentences in SentimentAnnotator. java to ensure that Binarized sentences are not built by the
updated the ` toString ` method in the ` User ` class to return a string representation of the user object to enhance usability by providing detailed
updated MessageHelper to check for null message body before extracting it as a string to improve error handling and provide clearer feedback on null message data
[ hotfix ] fix typo in task deployment descriptor factory
update rosteraccess. cansubscribe ( ) to check if a node be a member of a node group.
added a reference to " maven. test. classpath " in AbstractJRubyMojo and removed unchecked suppression in CucumberMojo to ensure
updated type comparison logic in MethodHandleImpl. java and added a new test method in MethodHandlesTest. java to ensure consistency in method handling and
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory and LegacyHTMLStripCharFilterFactory to enhance functionality and improve code
change condition checks from " > " to "! = " for width and height in URLImage. java to ensure that images
added a check to ensure the name does not start with " META - INF / " before processing to prevent processing of non - meta - inf
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5582 to avoid
updated assertions and logging messages in StackWalkerTest. java to ensure compatibility with version 22 and improve logging clarity
changed the access modifier of the addViewportJob method from protected to public to allow external access to the method for better modularity
[ hotfix ] [ test ] remove unused partition parameter
updated server restart settings and system exit checks in TestDatabase. java to improve server reliability during application shutdown scenarios
added null and empty checks in NodePathsConvertOperator and SchemaQueryMergeOperator to improve error handling and prevent potential NullPointerExceptions
added methods to retrieve total harvesting time from IceUdpTransportManager, TransportManagerGTalkImpl, TransportManagerGTalkImpl,
updated font settings for frame rate and frame rate in ParticleEditor. java to improve visual clarity and performance of particle rendering
added configuration properties for " hadoop - env " in UpgradeCatalog240. java and corresponding test cases in UpgradeCatalog240Test. java to ensure
fix regression in svgviewerfactory due to transparent background
removed minSdk parameter from @ Implementation annotations in ShadowKeyguardManagerTest and ShadowKeyguardManager classes to streamline code by eliminating unnecessary
updated the ` containsExactly ` method in ` IterableSubject ` to accept an array as a list instead of a nullable object to enhance functionality by allowing
added refillGreedy support and improved key validation in Bucket4jFilterFunctions. java to enhance functionality by ensuring a forbidden status is
add a wordlistloader and a wordlistloader so that the wordlistloader can load a text file.
updated transformations and added hooks handling in the optimizer and optimizer classes to ensure proper lineage evaluation based on query properties
added error handling for NoClassDefFoundError in REngine. java to ensure fallback to Boolean. FALSE when a NoClassDefFoundError occurs
refactor span handling in TraceFilter and TraceWebFluxTests to improve span management and scope handling
added a null check for the getCause ( ) method in AbstractUpdateCommandStep to avoid potential NullPointerException when getCause ( ) is null
updated exception handling in CommonsHttpSolrServer to include base URL to improve error reporting by associating specific exceptions with the base URL
inverted the return value of ` setLandscape ` and ` return ` methods for ` printSetupRecord. getLandscape ( ) ` to
modify return statement to handle null object case to ensure safe retrieval of NullWritable from the object
added a validation check for argument names in ArgDesc. java to ensure that invalid argument names do not result in errors
added background location listener functionality in AndroidLocationPlayServiceManager to enhance location service management for better user experience
updated conditional check for primitiveType in MeshBuilder. java to ensure proper handling of geometry types
trufflestring. execute ( object [ ] a, object b, int [ ] a, int [ ] b, int [ ]
added a command list setting in the ComboBox class to ensure the ComboBox correctly identifies command lists
nifi - 607 : fix tls client manager to escape the certificate file name.
updated commands in ZkCLI to use ` zkcli. sh - zkhost ` instead of ` zkcli. sh - cmd ` to
updated equality checks in FirmwareUpdateProgressInfo and BridgeHandler to use `. equals ( ) ` instead of `. equals ( ) `
added a conditional check for remoteGrpcStatus before posting a severe event to ensure that the build operation is only triggered when the remote grpc
refactor method signatures and formatting in various classes to improve code readability and maintainability
added entity ID to entity tick in the ForgeChunkManager class to ensure that entity - related data is properly added to tick tickets
add error string to glsurfaceapi18. geterrorstring ( )
added support for retrieving supported locales in FeatureRegistry to ensure users are aware of unsupported locales in the application
updated server URI formatting in RFC2616BaseTest. java to ensure correct host information is used for location validation
added a call to addToHelperList ( ce ) in the Construction class to enhance functionality by ensuring helper lists are properly added
added a condition to skip the first of the escape sequence in GlyphLayout. java to improve robustness by skipping the first of the escape
added security permissions and refactored context class loader handling in mmm Transport. java and mmm TCPTransport. java to enhance security by
updated the method of populating directory list and added null checks for fileByPath and folder to improve robustness by ensuring that null parent cases are
fix npe in testng when run in a service loader.
removed debug logging in BarrowmanCalculator and modified the deltap calculation in TubeCalc to streamline code by eliminating unnecessary logging and
added type checking for Node objects in TimelineControllerImpl. java to ensure proper handling of column additions based on the presence of COLUMN _ KEY
added a method to register extra components for the broker admin application to enable dynamic configuration of the broker admin application
added a test for bug4658 in MultiCfQueryExecIT. java to ensure correct handling of order by clause in query execution
prefer version and witness support check in peergroup.
add to the abstractbuilder. builder. builder. builder builder. builder. builder. builder. builder. builder. builder. builder. builder
added retry attempts in RatisClient and related classes to enhance reliability by managing retry attempts for Ratis consensus snapshots
updated multiple Java files without any functional changes to improve code clarity and maintainability
don't register jmxhelper if jmxservice annotation be present
tika - 4681 -- fix for tika - 4681 -- exclude non - Unicode entry name from the archive.
added a new file ` TestSplitThruPhiDivMod. java ` with multiple test methods for division to demonstrate the behavior of division
added methods to lookup generic interfaces and superclasses in TemplateRegistry to enhance type resolution for generic interfaces and superclasses
increased the buffer size from 512 to 1028 in ByteArrayOutputStream to optimize memory usage and improve performance
added comments to the ` languagesExcluded ` array in ` PlayerSettingsScreen. java ` to indicate that symbols are not yet available, including translated
modify byte array allocation to limit the size of bytes to 8192 to ensure that the transfer does not exceed the expected buffer size
remove the focus listener from the popup menu to simplify focus handling and improve code clarity
modify exception handling in SemanticAnalyzer to include null check for the source node to improve error handling for invalid table aliases
skeletonrenderer : create the skeleton's center extent when render a skeleton.
added ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to provide access to the Solr
added @ ComponentScan annotation to SpringWebConfig. java to enable component scanning for enhanced functionality
added a method to convert user to platform account to ensure compatibility with platform accounts in the user list
added unit tests for package installation in ShadowPackageManagerTest and modified processName assignment in ShadowPackageManager to ensure that package information is correctly set
refactor AvailableSettings class to improve code readability to enhance maintainability and reduce technical debt
added constructors to TransactionTrace for better initialization and finalization to enhance flexibility in transaction processing
add a shuffle _ member _ list property to allow client to choose if member list should be shuffle.
replaced ` Text ` with ` CrawlDatum ` in ` SegmentReader. java ` to replace ` Text ` with ` CrawlDatum `
refactor JsonDeserializer class to improve code readability and maintainability
updated CONFIG _ NAME and CONFIG _ DEFAULT _ PATH in TsfileDBConfig. java and changed fetchSize in QueryProcessExecutor. java
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc. java to clarify the purpose of the
removed unused import of ExecutionContext in TaskletStep. java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure a default value is used for window title
fix npe in asynchttpclientcall when body be null
deprecate embeddedserverinstance interface ( # 2383 )
replaced the instantiation of ` MacAdapter ` with reflection in ` JabRefFrame. java ` to improve flexibility by allowing the MacAdapter to
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` to clarify the purpose of the test class
change return type check from Enum. class to Enum. class to ensure proper handling of enum types in the processing logic
changed the visibility of hideUnprivilegedObjects from private to private final to enforce immutability of the hideUnprivilegedObjects variable
fix a bug in audio data source that cause the test to fail
added a conditional check for Android Q to return a giphy Android 11 video URL to ensure compatibility with Android Q by utilizing the save
act - 1197 : fix nullpointerexception when use variable instance in service task
refactor multiple service classes for improved consistency to enhance maintainability and readability of the codebase
replaced manual logger retrieval with a computeIfAbsent method to simplify the code and improve readability
hbase - 2697 remove dataoutputstreamoutputstream because it be no longer extend outputstream
updated transaction IDs in TestAcidOnTez. java from " rowid " to " rowid " and " rowid " to
changed log level from info to debug in MavenEnhancePlugin. java to reduce log verbosity for enhanced classes
added a method to retrieve the default provider name and updated provider name logic to support both " Conscrypt " and " Conscrypt "
added imports and processing of instance fields in MockitoBeforeTestNGMethod. java to enhance the functionality of field capturing in the MockitoBeforeTestNGMethod
added error handling for missing class and method names in TestSuiteBuilder to ensure robustness by providing meaningful feedback when no test cases are available
updated imports and modified method references in GroovyAutoComplete. java, GroovyLanguage. java, and GroovyAutoComplete. java to improve code clarity
use osm instead of deprecated graphhopper. init ( )
[ java ] fixing checkstyle issue in ` ` handlesession. java''
changed the visibility of mHideSysUiScrim from private final to non - final and added a preference for showing the top shadow to allow
updated method signatures and added cancellation logic in OkHttpCall. java to improve code clarity and ensure proper cancellation handling
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and maintainability of swipe handling logic
updated the RequestMatcher interface to extend from org. springframework. security. web. util. matcher. RequestMatcher to improve dependency management and
added an'IF'clause to the DeferredAttr class and created a new ImplicitLambdaConsideredForApplicabilityTest class to
replace deprecate boxed primitive equality test with j2kt test
add unit tests for display metrics in DeviceConfigTest and DeviceConfig to ensure correct retrieval of display metrics based on device dimensions
replaced IOException with RuntimeException in ExternalViewReaderTest. java and refactored method invocation in PluginClassLoader. java to improve error handling and
updated icon resource from ` logo ` to ` mipmap. ic _ launcher ` to improve the visual appearance of the launcher icon
added content text setting in errorBuilder to enhance user experience by providing clearer error messages
refactor ConcurrentHashMap class to improve concurrency handling to enhance performance and reliability of concurrent operations
added methods to adapt user trades and raw fills in the Abucoins API to facilitate data adaptation for trading operations
updated plot claim logic and added new case statements in multiple classes to improve plot management functionality and enhance error handling
simonstewart : allow htmlunitdriver to connect to the remote server
added support for VARBINARY data type in the originalDefinition to ensure correct handling of VARBINARY data types in database operations
no longer use stringbuffer due to dateformat.
synchronize access to language. simpletypemap and arraytypemap in libfficontext.
replaced ` Context ` with ` ContextInternal ` and ` VertxThread ` in ` InboundBuffer ` to ensure compatibility with Vert. x
updated timeout settings in connection and LdapTimeoutTest classes to enhance test reliability by adjusting timeout values
updated usage message from " UniocdeData. txt uniName. dat " to " UnicodeData. txt uniName. dat "
camel - 7999 : fixed the unit test error of cxfmessageheadersrelaytest
refactor multiple UI classes for consistency to improve code maintainability and readability across the UI components
added support for ` BoosterSet ` in ` ComponentAssemblySaver ` and modified return value in ` BoosterSet ` to enhance functionality
implement password authentication for proxy requests in JabRef. java to enhance security by ensuring proper authentication for proxy requests
replaced instances of ` MetricsUtil. getInterval ( ) ` with ` MetricsInfo. setInterval ( System. currentTimeMillis ( ) - > time
change return value from InternalError to returning false to indicate compatibility with JEP 359 support
updated imports in TestIPCUtil. java to use LogFactory and Log4JLogger instead of org. mortbay. log to
removed the chunkedTransfer parameter from the HTTP client request to simplify the request handling by eliminating unnecessary chunked transfer logic
added a call to clearAttributes ( ) in PatternTokenizer. java to ensure the tokenizer clears the attributes after processing
added a polling period parameter to the VerificationAfterDelayImpl constructor and improved error handling to enhance the robustness of the delay verification process by allowing
added compaction handling to SessionState and updated related classes to ensure proper authorization management during query processing
[ zeppelin - 5892 ] fix docker image creation when zeppelin. interpreter. name be ` zeppelin. interpreter''
hbase - 2697 fix typo in hbaseadmin # gettableregions
added an @ Ignore annotation in PartialEscapeAnalysisTest. java to temporarily disable the test due to known issues
removed the ` calcXBounds ` method from ` CombinedChartRenderer ` and ` Renderer ` classes to streamline the X - coordinate calculations
added error handling to XML reader processing to ensure proper resource management and prevent potential memory leaks
added a call to release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent potential memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated ` Java17TypeSignatureBuilderTest ` to ensure correct
added null and closed check for the result set before closing it to avoid potential NullPointerExceptions when closing a ResultSet
update driverVersionMajor and driverVersionMinor from - 1 to 6 to ensure compatibility with the latest Derby database features
fixed bug in usestringbufferlength which occur when there be no literal.
removed error logging from RemoteSparkJobMonitor to streamline error handling by eliminating unnecessary logging
refactor createDb method to return the connection instead of void to improve resource management by ensuring the database connection is closed after use
refactor multiple classes related to custom metrics to improve code organization and maintainability
hbase - 25836 provide an option to choose whether to use off - peak
updated BitstampDepositAddress. java to handle null values and added a new test class DepositAddressJSONTest. java to ensure
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to improve error handling by using the response's abort method
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure the correct absolute path is used for directory
refactor ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` to improve clarity and consistency in event handling
modified the loop to check for multicast support before returning the first NetworkInterface to ensure that only valid network interfaces are returned
modified the validation check for validCheckSums to iterate through all validCheckSums to ensure that only valid checksums are accepted in the
implemented clone ( ) method in BufferedChecksumIndexInput class to throw UnsupportedOperationException to ensure proper handling of unsupported operations
updated return statements in Circle. java to use radius instead of Math. sqrt to improve accuracy in geometric calculations
added conditional logic for setting mFrequencyBand based on theownlink band identifier to ensure mFrequencyBand is only set when the channel is the
replaced tapSquareSize and tapSquareCenterX and tapSquareCenterY with tapRectangleWidth and tapRectangleHeight in the GestureDetector class
make replicate _ on _ write default to false. patch by jbellis
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and implemented a utility method for formatting dates to enhance functionality by allowing users to
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes to provide access to the delegate of the tracing service
refactor error handling and synchronization logic in FileActivity and FileDisplayActivity to improve code clarity and enhance user experience during file synchronization
added error handling for stream writable operations in the ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to ensure proper
added a boolean parameter to the method call in JavascriptContext. java to enhance functionality by allowing conditional execution based on input conditions
removed the left alignment from the TableCell constructor in BaseTextFormattingHelper. java to simplify the constructor signature and improve code readability
add auto - config for brave auto - tracing
ds - 3685 : submission detail page should be add to the second page
updated the ` getPrunedQueryableSegments ` method to accept a list of queryable segments to ensure that the number of segments is not
refactor VertxBufferTest class to improve code readability and maintainability
bugfix : messagesubmissionchunk. extractdate ( string ) don't need to extract ( string )
changed the access modifier of mContext from private to protected to allow subclasses to access and override the mContext variable
removed unused imports of SortedSet and TreeSet from ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
added a new exception class MongoDataIntegrityViolationException for MongoDB integrity violations to improve error handling by associating exceptions with data integrity violations
changed return type of jobCompletionFuture ( ) from a method to a boolean to ensure the method returns the correct job completion future
refactor ` bitsToHumanReadable ` and ` bytesToHumanReadable ` methods in ` DisplayUtils. java ` to improve clarity and maintainability of
replaced the instantiation of ` MergePolicy ` with a direct instantiation of ` TieredMergePolicy ` in ` TestUpgradeIndexMergePolicy `
added a check to return early if mOverviewStateEnabled is false to avoid unnecessary processing when the overview state is not enabled
updated error log link in CpuNDArrayFactory. java to reference the konduit. ai project to improve clarity of error messages
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter to enhance flexibility by allowing an additional input stream for loading settings models
added null checks for input parameters in FilterLeafReader to ensure robust handling of input to prevent NullPointerExceptions
bcjsse : use secret key size provider to avoid invalid key size.
updated exception handling to provide more descriptive error messages to improve code readability and maintainability by using more descriptive error messages
remove the javax. inject. inject. inject annotation from multiple classes to streamline the code and reduce unnecessary dependencies
updated the expected size in BundledDistributionTest and added assertions in PostgreSQLTest to ensure the correct number of database users and enhance test coverage
[ flink - 17584 ] [ stream ] add user - defined job name for printing and logging
refactor scaling calculation to differentiate between two - panel layouts to improve layout responsiveness based on device profile characteristics
updated IcePlainsBiome to extend SnowyBiome and replaced GrassyBiome with a new PopulatorTree to
removed timezone parameter from ` getMinTime ` and ` getMaxTime ` methods to simplify code and improve readability by eliminating unnecessary timezone parameters
[ j2kt ] fix ambiguity in unparameterized unparameterized type.
updated regex pattern in XhamsterRipper. java to allow URLs with w characters instead of wmde characters to enhance security by
fix entity list in world. getall ( )
hhh - 147486 - fix oracle dialect to work with non - null schema
fix a syntax error in the FlutterConsoleFilter class to ensure proper handling of parentheses in the filter logic
modified FileMenuFilter to accept a variable for the number of files instead of a collection to enhance flexibility in selecting and deselecting files based on
[ java ] : fix off - by - one error in network publication.
fix typo in guildupdateownerevent # getroles
increase in portal tick limit for creative and entity.
added compression functionality to the ClusterMonitorTileSkin class to enhance the display of chart data based on the compressed state of the tile
updated multiple codec template classes for consistency to improve maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64. java to ensure proper handling of large data sets and prevent potential overflow issues
removed null check for the header in RendererConfiguration to simplify the condition for better readability and maintainability
server : skip disk offering change on volume with custom service offering
updated import statements and modified order builder instantiation in HitbtcAdapters. java to improve code clarity and ensure proper order creation
) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
updated the description URI from " automation : jruby " to " automation : jrubyscripting " to correct the service label for
updated the variable name from'name'to'displayName'and modified the write method to use'displayName'instead of'name'to
modify the conditional check in ParticipateAssetIssueActuator to include an additional check for preciseExchangeAmount to ensure that exchanges do not
remove unnecessary loop iterations in FeedUtils. java to streamline code by eliminating unnecessary control flow
added a new test method ` testHDF4 ` in ` HDFParserTest. java ` to verify the functionality of the HDF4 parser
[ calcite - 6092 ] fix test case for [ calcite - 6092 ]
removed unnecessary whitespace in IDEEditor. java to improve code readability and maintain consistency
added methods to quietly close a list of AutoCloseable instances to improve resource management and prevent potential memory leaks
replaced hardcoded button name with a constant string to improve code readability and maintainability by using a defined constant
added checks to ensure srcWidth and dstWidth are non - zero before drawing the image to prevent drawing invalid image dimensions
replaced ReflectionHelpers method calls with Unsafe's method invocation for defining classes to improve compatibility and maintainability of the code
fix fqdn regex pattern in guiutil. validate ( ).
bugfix : cachedrowsetwriter should not check for conflict
fix an npe in sdkconfigurationnotificationprovider. getversion ( ) ( # 5858 )
added a conditional check for the reference case in ReferenceMemory. java to ensure proper assignment of references based on the current reference
added file injection logic for seed URLs in Injector. java to ensure proper handling of missing seed files and improve error logging
added a condition to hide the original view when hiding it to ensure that the original view remains hidden when hidden
defaultloopPolicies : fix edge case when maxnodes be zero.
added a check for texture coordinate type support in the CombinedTexture class to ensure only supported texture coordinates are processed
add some sanity check to decodebitstreamparser to avoid crash.
added seek and close methods to TracingConsumer and TracingProducer classes to enhance consumer functionality and improve resource management
updated the SQL statement to use ` oldPrefix ` instead of ` locate ` and added a new integer setting to ensure correct handling of prefix length
removed an unnecessary addition of a collection to the convertedValsList list to streamline the list creation process by directly adding it to the converted list
add a protected constructor to abstracttimer for backwards compatibility
added a nightly warning dialog for nightly builds in the MainWindow class to inform users about issues with the Universal Gcode Sender and encourage
[ # 7536 ] instructor : list response by team ( # 7537 )
update return statement to include " Remove unnecessary ` throws ` declarations to improve clarity of exception handling in the code
deleted CacheApplication. java and replaced CacheController with CommonsApplication in ShareActivity. java to eliminate unnecessary dependency on CacheController
replaced instances of ` realObject. getApplicationContext ( ) ` with ` RuntimeEnvironment. application ` in ` ShadowContextImpl. java ` to improve
refactor StatisticsServlet class to improve code readability to enhance maintainability and reduce technical debt
added SDK version checks before updating configuration in RuntimeEnvironment to ensure configuration updates are only applied on devices running KITKAT or higher
added a constant for the repository update link exists in VersionDefinitionResourceProvider. java and implemented tests for it in StackManagerTest. java to
refactored multiple classes including ApplicationImpl, NodeImpl, and Witness to improve code organization and maintainability
patch by brandonwilliams, patch by brandonwilliams, review by brandonwilliams for cassandra - 179
added import statements for XML resolver helpers and readers to CheckPackageAccess. java to enhance package access checks for XML resolver functionality
rename method ` persist ` to ` add ` in jobrepository interface
loop exit : replace the loopbegin input with null if the successor be a LoopExitNode
replaced RecyclerView with a WidgetsRecyclerView in SearchAndRecommendationsScrollController. java to enhance flexibility and maintainability of the code
added a conditional check for terminal support in ConsoleReader. java to ensure proper handling of terminal types based on user preferences
changed data types from long to int for timeAllowed and added time allowed checks in LBHttpSolrClient to improve data handling and prevent potential
added validation for session validity in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure session validity and improve test reliability
added null check for columnNames before setting fields in ChangedIndexChangeGenerator. java to avoid potential NullPointerExceptions during index change generation
replaced Vector with ArrayList for buttons and updated related methods to improve performance and maintainability of the ButtonGroup class
updated UserManagerCompat classes to use UserManagerCompatVM instead of UserManagerCompatVL to improve compatibility across different Android versions
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods in various database classes to provide a way to retrieve database
updated ActionGraphCache to use a new variable for comparison results and added a new constant for mismatched rules to improve code clarity and maintainability
added LockDatabaseDesc and UnlockDatabaseDesc classes to provide detailed information about the locking process in Hive
refactor RankingTopComponent, RankingUIModel, RankingToolbar, and RankingTopComponent classes to improve code readability and maintainability
added handling for DisconnectMessage in HandshakeHandler to improve disconnect logging and ensure compatibility with incompatible protocols
added a test for setting storage groups in IoTDBAuthorizationIT. java to ensure proper handling of user permissions for storage groups
chore ( regen ) : update google - cloud to v1beta2
improve error message when variable type be miss or malformed
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to facilitate the lifecycle of
[ java ] minor code cleanup in countersmanager to avoid unnecessary array creation.
updated logging statements in MultiSteps. java and SendEmail. java to use parameterized logging to improve logging clarity and reduce redundancy in the code
added initialization and cloning of joinKeys in JoinDesc. java to ensure joinKeys are properly managed and avoid potential null pointer exceptions
added PrincipalResolver dependency to WebAuthnConfiguration to enhance authentication handling by allowing customizable principal resolvers
added a searchPaths parameter to the addSettingsFromFile method and updated related tests to support additional search paths in configuration parsing
added'final'modifier to certain fields in Oracle. java to enforce immutability and improve code clarity
[ hotfix ] [ doc ] do not advertise this option until rescaling of unaligned checkpoint
fix ( sql ) : don't throw unsupportedoperationexception when use order _ by
add a log option to compiletheworld for easy debugging.
added a check to ensure that LocalVariable is not an instance of CannotDelambaException to prevent runtime errors caused by invalid local variable types
added support for MySQLDatabase in CreateTableGenerator to ensure proper handling of NULL values based on database type
updated class loader management in EnvConfiguration. java to ensure proper class loading when the current class loader changes
added a condition to set ejection delay if stageNr is zero in SimulationListHandler. java to ensure proper handling of PLU
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated method names accordingly to improve clarity and consistency in naming conventions
refactored TransactionUtil2 for improved transaction handling to enhance performance and maintainability of transaction processing
updated ` BaseTokenSigningAndEncryptionService ` to accept an ` Optional < OAuthRegisteredService > ` parameter to enhance the issuer resolution by
updated string formatting and added null check for collection objects to improve code readability and handle potential null values gracefully
replaced ` getStyle ( ). setAlignment ( align ) ` with ` getAllStyles ( ). setAlignment ( align ) ` in ` TextArea
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance functionality by allowing specification of foreign database and schema names
[ java ] catch timeoutexception on ready follower.
replaced the static import of ` shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice `
added validation for the root path in FileSelection. java and introduced a new test for bug fixes in TestBugFixes. java to improve
restore iforgeitem. oninventorytick, deprecate since 1.12. 1
use file. write ( fileoutputstream ) instead of fileoutputstream. write ( stream )
added a null check for getSherlockActivity ( ) before calling invalidateOptionsMenu ( ) to avoid potential NullPointerException when getSherlockActivity (
refactor widget binding logic to handle options more robustly to improve error handling and maintainability of widget binding process
[ ecobee ] add capability to the cobee sensor thing
remove unnecessary'if'statement in operationsetserverstoredcontactinfofbimpl. java
added " AAPT " and " AAPT2 " environment variables to the Genrule class to support AAPT and AAP
truffle : don't dump access table when instrumentation be enable.
added a null check before disposing of the message to prevent potential NullPointerExceptions when the message is not initialized
fix ( checkpoint v1 recover success )
updated log warning messages in CoreContainer. java to clarify that logging functionality is not yet implemented for log4j
replaced printstacktrace ( ) with fail ( ) in CategoryPlotTests. java to improve error handling during cloning failures
replaced ByteArrayOutputStream with SmallByteArrayOutputStream and added null check for n to improve performance and prevent potential NullPointerExceptions when n is not initialized
shader should use an integer map instead of a hashmap to improve performance
change jdbc connection from " jdbc : derby : ; close = true " to " jdbc : derby : ; shutdown = true " to
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4362 to avoid npe
updated the ` TestHtmlTag ` and ` TestUseOption ` classes to improve locale handling and output verification to enhance code clarity and ensure consistent
updated condition in CompletionProvider to check if the result is in complete and has fewer items to improve completion accuracy by ensuring only valid items are
updated command - line argument syntax and refactored time column name handling in HybridClusterIntegrationTestCommandLineRunner. java to improve clarity and
updated output format handling to dynamically select the output format based on the provided extension to enhance flexibility in output formats based on the provided extension
inverted the condition for QSB enabling in DeviceProfile. java to ensure correct behavior when QSB is enabled and not in the hotseat
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` and ` GltfModel
added a timestamp buffer field to AbstractGenerator and updated HttpGenerator to use this field to improve handling of timestamp in HTTP requests
replaced Adler32 with CRC32 in Store. java to improve performance by using a more efficient CRC32 implementation
bugfix : set ` ` xen. heartbeat. interval'' to ` ` any # of seconds'' when implement ` ` selff
added a new warning constant ZERO _ AREA _ FIN and updated warning handling in FinSetCalc to enhance warning management and improve code clarity
[ beam - 8470 ] write document metadata in json format for elasticsearchio
hhh - 147486 : add support for h2's trunc function on postgres
added a memory pool check before logging errors in MetricUtils. java and updated error handling in MetricUtilsTest. java to ensure warnings are only
make sure we don't fail if we don't have permission
validation task : remove @ runtimetype. declaredby and use type fqname with enclosing name
change the BACKFILL path from " / generateAnomaliesInRange " to " / replay " to align the endpoint with the
updated return statements in PrecompiledContracts. java to include the latest proposal number to ensure accurate data retrieval for dynamic properties management
updated item handling in AllAppsContainerView. java to improve badge application logic based on child views
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
updated context start calls in ResourceHandlerTest. java to ensure correct behavior after ContextHandlerCollection is started
added a condition to return false if mDrawIdentifier equals WORKSPACE _ CUSTOM to ensure proper handling of custom drawing identifiers
truffle : remove assertion that be not need in jdkservices.
added JUnit @ Ignore annotation to the shadowInvocationWhenChildIsInstrmentedButUnshadowed method to temporarily disable the test due to
updated import statements for ItBit exchange components to streamline dependencies and improve code clarity
ww - 4441 use parameter. isDefined ( ) instead of check if the parameter be undefined
added private constructors to Utils, ApplicationUtils, AsyncSocketFactory, and Whois classes to enforce singleton pattern and prevent instantiation
fix potential resource leak in regionsapiutil # readaccount
fix for the new util. getexternalizables ( ) method to be compatible with java 6
added tableNameWithType parameter to the warning log message in RetentionManager. java to enhance clarity by providing more context about the table type being
added a trim ( ) method call to fragmentList validation in QueryExecutorImpl. java to ensure that fragmentList has a valid trim ( )
updated the file path handling in ResourcePackFileNotFoundException to use the modFile's file path instead of the mod's file path to
updated selection handling for node and edge builders in PartitionToolbar. java to improve user experience by ensuring only relevant components are displayed
added a check for task view visibility in RecentsView. java to ensure proper handling of task views when the grid view is visible
replaced ` Map < String, String > ` with ` BMIViewObject ` in the ` Calculator ` and ` CalculatorRestEndpoint ` classes
replaced Comparator. comparing with Entry. thenComparing in QueryCommand. java to simplify the code and improve readability
fixed issue with entity not be able to place block below block above block above block above block above block below block below block above block below block
updated environment variable handling to support both " IBM _ JAVA _ COMMAND _ LINE " and " IBM _ JAVA _ COMMAND _ LINE " to enhance
[ java ] : add support for custom plugin property.
update condition to check if hashTable is not empty instead of null to ensure proper handling of empty hashTable cases
updated timestamp handling logic and improved test cases in Timestamp and TimestampTest classes to ensure correct conversion of timestamps to SQL timestamps and enhance test coverage
[ java ] don't reuse the archive context in cluster service agent.
added a condition to check if the method is compiled alongside the existing COMPILE _ THRESHOLD check to ensure that the invoker is
added test cases for " image2 " and " image2 _ joined " in various online test classes to ensure comprehensive testing coverage for various
refactor TogglableFlag to use constants and improve default value handling to enhance code readability and maintainability by centralizing default value logic
updated logging statements in DockerClientFactory to use placeholder syntax to improve logging clarity and reduce log verbosity
added a platform check to return early if the current platform is ANDROID to avoid unnecessary processing on non - Android platforms
updated test assertions in RoutesTest to use assertThat instead of assertEquals to improve readability and maintainability of the test code
added new functional interfaces for various numeric types including Predicate, Float, Short Predicate, and ShortToLongFunction to enhance functional interfaces for better type conversion
changed the return type of ` getSubsColor ` from ` int ` to ` String ` and updated subtitle color handling to improve flexibility in subtitle
don't deregister invocation future if it be already complete
replaced the instantiation of ControlFrameBytes with a direct output method in AbstractWebSocketConnection. java to simplify the code by eliminating unnecessary object creation
modified intent handling in LoginActivity and added a redirect flag in SignupActivity to ensure the welcome activity is only started when the " redirected "
added a new ShadowCheckedTextView class in Robolectric to enable testing of CheckedTextView interactions in the Robolectric framework
added Serializable interface to ParserState and made fields transient in AccessorProperty and Property classes to ensure proper serialization of ParserState and Property classes
added " identrustdstx3 [ jdk ] " to VerifyCACerts. java to support identrustdstx3
removed redundant setting of TEMPDIR _ CONFIGURED in WebInfConfiguration. java to streamline the context setup
added import for StringUtils and updated nick retrieval in Occupant. java, along with corresponding test in MultiUserChatTest. java to ensure
removed the'context'parameter from the ` QuicSession ` constructor and related methods to simplify the constructor signature and improve code clarity
replaced direct calls to ` writer. setMergeScheduler ` with ` writer. getConfig ( ) ` in CreateIndexTask. java to ensure consistent
updated variable names from ` pageWidth ` to ` pageHeight ` in ` TextPosition. java ` and ` ICU4JImpl.
added ComputedDateValue, ComputedNumericValue, and ComputedDateValue imports in AddDefaultValueChange. java and AbstractDatabase. java
fix checkstyle issue in net / npbt / scoreboardiot / nbtscoreboardiotservice. java
saml2 : don't throw exception if the metadata be not writable
changed access modifier of the ` printer ` variable from private to protected and refactored printer creation logic to enhance encapsulation and improve code modularity
added BigDecimal import and updated order's average price calculation in HuobiAdapters. java to ensure accurate market data representation for orders
updated field handling in the ProjectionOperation and TypeBasedAggregationOperationContext classes to improve accuracy and consistency in field processing and aggregation operations
modify the player addition logic to check for the existence of a player before sending the packet to ensure that only players meeting the list of viewers
added constant state management in FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve icon rendering by ensuring proper handling of null layout
updated SPDYClient to handle SSL and TLS connections more effectively to improve reliability and maintainability of the connection logic
[ dubbo - 8470 ] fix npe in protostuffobjectoutput. serialize ( null ) ( # 8470 )
pdfbox - 4892 : fix typo, a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability and maintainability
ggb - 1958 don't draw ax if axis number or number be invisible
replaced setFilter ( ) and setWrap ( ) with unsafeSetFilter ( ) and unsafeSetWrap ( ) to improve efficiency by using a more
updated returnToWorkspace method call formatting to improve code readability and maintain consistency in formatting
updated SSL connection handling in CustomUrlJob and added a new class CustomUrlTrustEverything to enhance security by using a custom SSL context
updated methods to return real used clock rate string instead of the current value to ensure accurate representation of clock rate in the media stream
refactor TextureAtlas class to improve code readability and maintainability
replaced ` getProductNameForBuildTargetNode ` with ` getModuleName ` in ` ProjectGenerator ` and added a method to ` AppleLibraryBuilder
[ hotfix ] fix intermittent failure in testslot.
fix : sqltreebuilder. findids ( ) throw classcastexception
updated WebSocketServletRFCTest to use a ByteBuffer instead of a ByteBuffer for reading from the stream to improve readability and maintainability of the code
[ wasm ] remove reference stack from uncref function.
fix ( sql ) : add ` ` ttl'' to sql collection log
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomPreconditionWrapper and XMLChangeLogSerializer
updated import statements and refactored server initialization in DeploymentExceptionTest. java to improve code clarity and ensure proper server setup and resource management
added error handling and improved resource management in NearbyController. java to enhance robustness and prevent crashes due to missing resources
added a null and empty check for the objectName variable in PostgresDatabase. java to ensure that the object name is valid and avoid potential NullPointerException
updated exception message in Command. java and TestPrint. java to improve clarity of error handling for file access issues
[ flink - 17653 ] [ table - planner - blink ] use old planner and executor factory
refactor X500Signer initialization and add null handling for subject name to improve code robustness and prevent potential NullPointerExceptions
added a deprecation annotation to the RuntimeOptions class to indicate that the feature will be removed in version 23.0
replaced manual byte encoding with a method that directly uses UTF - 8 encoding to simplify code and improve readability by leveraging UTF - 8 encoding
added a new interface PermissionEvaluator in the org. springframework. security. expression package to provide a mechanism for permission evaluation in Spring Security
added ERASE _ LINE _ ON _ FINISH option and cleanup logic in LineReader and LineReaderImpl classes to enhance line reading functionality
hbase - 26330 addendum check if server exist in the list online servers
updated exception types from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ MERKLE _ ERROR and modified references accordingly to
expandwar don't need to create a new file if it already exist
don't fail the client if an exception be throw in the full netty client
changed the container's center method from'center'to'centerAbsolute'to ensure proper positioning of the spinner component relative to its parent
networkbufferpool. requestmemorysegments don't recycle buffer if interruptable
refactor MBeanServer initialization and release condition in TestJmxIntegration. java to improve code clarity and prevent potential null pointer exceptions
updated imports and annotations in AbstractIT. java to use RetryTestRule instead of RunWith to improve test reliability by integrating retry functionality
remove the auto - commit flag from querystatemachine and make it public in calltask.
updated import statements in CsvFieldType, CsvTable, and CsvTableScan classes and added a new package - info. java file to improve code
added support for " javax. microedition. khronos. opengles. GL " in InstrumentationConfiguration to enhance SSL
[ hotfix ] [ stream ] remove unnecessary implementation of processingtimeservice # onprocessingtime
refactor request handling in Request. java to improve null checks and enhance URL construction logic
updated methods to use ` WhatsNewActivity. KEY _ LAST _ SEEN _ VERSION _ CODE ` instead of a static constant in ` Main
added methods for session availability and unavailable, and updated session retrieval logic to enhance session management functionality and improve code clarity
added a call to addPackageToScan ( " liquibase. pro " ) in ServiceLocator. java to enable package scanning for the L
renamed the method from ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider. java ` to improve
updated the ` loadWithNewGlobal ` method to accept an additional parameter for arguments to enhance functionality by allowing additional parameters during the loading process
updated regionMatches method to include start index parameter in FastPathResolver. java to ensure correct parsing of relative URIs in the path resolution logic
updated the weigher method calls to use ` getRetainedSize ( ) ` instead of ` length ( ) ` to ensure accurate retrieval
updated method names from ` isExceedRandomizationDepth ( ) ` to ` hasAlreadyRandomizedType ( ) ` to improve clarity by indicating
added support for handling " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor. java and a corresponding test in TestWindowFrame
added a line to clear the headers in the proxy request to ensure that the original headers are cleared before processing new requests
added a check to skip tests in CompressedClassSpaceSizeInJmapHeap to ensure SA attach is expected to work
added null check for bgColor and introduced TranslucentWindow class to enhance robustness by preventing potential NullPointerExceptions
added null checks for user details and improved error handling in UserInfoActivity. java to enhance user information validation and provide clearer error messages when user information
added serialization support for Precompiled header fields in PrecompiledHeaderData. java to ensure headers can be deserialized on different machine
[ flink - 18536 ] [ connectors / kafka ] validate the update - mode property
added integration tests for named output groups in a new file ` MultipleOutputsIntegrationTest. java ` to ensure that named outputs are correctly used in
updated regex pattern in FileSettings. java and added logic to append the setting value if it differs from the original content to ensure that the settings
[ flink - 21174 ] [ flow ] fix checkstyle violation in stateleservices
replaced usage of ` new Object [ ] { } ` with ` ArrayUtils. EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests.
added a @ TaskbarModeSwitch annotation to TaplTestsQuickstep. java to enable persistent taskbar behavior in the testing framework
added two new DeviceStatus entries in DeviceStatus. java to enhance device status management for the application
add blockstate location exception to the error log
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest. java to temporarily disable tests that are not ready for execution
added a conditional check for graphics before retrieving the current surface scale to ensure proper scaling behavior for non - 2D graphics
refactor RussianLowerCaseFilter class to improve code readability and maintainability
replaced the use of ` Map < String, String > ` with ` PropertiesUtil ` for server and client properties in ` CsvBulkLoadTool
replace'_'with'pathSeparatorChar'in displayName to ensure consistent file path formatting
- make wavloader. loaddata ( ) more efficient.
added a ` repeatFirstLineIndent ` flag and updated indentation logic in ` ColumnText ` to handle cases where the first line indentation is repeated
cast the ` oid ` object to ` Object ` in the ` equals ` method to ensure proper type handling for ` Oid ` comparison
remove unneeded call to getmetricstrackerfactory ( ) and getmetricsregistry ( )
loopex : use controlflowanchored instead of controlflowanchornode
remove focus painted from the button in WindowsPlacesBar to improve user interface responsiveness by preventing focus painting
updated condition to include UniqueConstraint alongside PrimaryKey in DatabaseSnapshot. java to handle cases where there is no backing index on oracle
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and ` AccountAPI ` classes to
[ cst - 5657 ] add check for dc. title in group endpoint.
don't try to extract utterance if it's empty
added unit test base on user forum issue
updated thread limits in FeedRefreshUpdater and added getter and setter methods for database update threads in ApplicationSettings to ensure consistent thread management for database updates
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 to improve the performance of the RecyclerView fast scroller
replace ` metautil. tointernalname ( system. class. getName ( ) ) ` with ` Ljava / lang / System ; ` to
hhh - 13644 fix npe in procedurecallimpl. getresultstream ( )
added a null check for getApiProperties in RestSwaggerSupport. java to avoid potential NullPointerException when accessing API properties
added new WebSocket frame generator classes for Binary, Text, and Binary WebSocket frames to enhance WebSocket functionality by supporting both binary and text frame formats
simonstewart : replace ` $. findelement ( by. id ( " peas " ) ) ` with ` new wait
refactor randomGeo3dShapeGenerator to use random ( ). nextBoolean ( ) for lat, lon, and radius to improve randomness
added a keepAlive method to manage ClassLoader references to improve resource management by ensuring a stronger reference for the ClassLoader
change return value from false to true to ensure successful operation execution
bug fix for java. util. concurrent. util. concurrent signature
added MkdirStep imports and commands to AndroidAar, AppleBundle, ApplePackage, and FatBinary classes to ensure proper directory
modified coordinate validation and error handling in MeshLeveler. java to improve error reporting and ensure proper validation of coordinates
[ drools - 561 ] don't try to remove jpmml from classpath if pmml be available
updated the condition for locationMode from ` locationMode ` to ` thermalStatus ` to ensure accurate representation of the thermal status
use ` ` / tmp'' for temporary directory on macos
prj file reader : skip file with memory map bug on window
added a null check for organization in the pom. xml file to ensure that a plugin is required for organization requirements
added contributor license agreements to SepPostingsWriterImpl. java to ensure compliance with licensing requirements for distributed files
deleted the ` TerminateWebSessionListener. java ` file to remove unused code to streamline the project
updated the method call to use the system property ` java. class. path ` instead of an empty string to ensure the method uses the correct
replaced ` ArrayUtils. EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device. java ` to
added JUnit Pioneer imports and a new test method in AddLicenseHeaderTest. java to ensure that Javadoc changes are validated against expected failures
changed the LAUNCHER3 _ PHYSICS feature from false to true to enable documentation generation in the launcher
added a div class ` noPrint ` to the ` HtmlThreadInformationsReport ` class to indicate that the report should not be printed
updated LUCENE _ MAIN _ VERSION from 3.1 to 4.4 and changed TEST _ VERSION _ CURRENT from LUCENE _ 31
added private long variables for symbolicator and task handling in BsdDebuggerLocal. java and expanded OS detection in PlatformInfo. java to improve
make nethandlerplayclient weakreference to prevent memory leaks.
only log ` ` connection reset by peer'' exception
[ java ] : fix npe in aeron client conductor initialization.
added a break statement in the TouchImageView class to prevent fall - through behavior during image loading operations
chore ( regen ) : update sample code to use new proto format ( # 241 )
remove ssl filter chain check from feedablebodygenerator. flush ( )
added type checking for JavaType variables in TypeUtils. java to ensure correct handling of primitive types in type inference
use concurrentskiptlistset instead of nonblockinghashset in memtablespendingflush
added null check for ` tree. errs ` in ` MemberEnter ` and modified error handling logic in ` JavaCompiler ` and ` Err
changed browser background from NO _ BACKGROUND to NONE in BugInfoView. java to enhance user experience by providing a more interactive background option
updated the negative button's call from ` finish ( ) ` to ` dialog. cancel ( ) ` to ensure the correct button is displayed
fix overflow bug in integerstamp. create ( min, max )
added a method to read an InputStream and updated image loading to use this new method to improve code readability and maintainability by centralizing input stream
added variables and undefinitions to the SwitchCompiler and related classes to enhance the handling of variable expressions in switch statements
refactor RSAClientKeyExchange to improve error handling during cipher initialization to enhance reliability of the RSA key exchange algorithm during handshake
updated library dependencies in WinGammaPlatformVC10. java to ensure proper inclusion of necessary libraries in the project
updated SQL comment strings to use line separators to ensure consistent line endings across different operating systems
added compatibility and encoding configurations in TemplateEngineFreemarker. java and updated malicious script handling in ApplicationControllerTest. java to ensure compatibility
replaced ByteArrayInputStream with a direct unmarshal call in CRDGeneratorTest. java to improve data handling and logging for better debugging
remove unnecessary static field in sampleresenderfactory
added testng emailablereporter only if system property ` ` testngemailablereporter'be available
added a check for quote characters in CommandLineBuilder and improved formatting in tests to ensure proper handling of out - of - memory errors in command line
removed public access modifier from interfaces and classes in various classes to restrict access to the implementation and improve encapsulation
added a line to set the number of reduce tasks in FreeGenerator. java to ensure correct number of reduce tasks based on the number of fetch
updated field retrieval logic in SchemaGeneratorHelper to use field definitions instead of default values to improve accuracy in handling object fields based on their definitions
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the new file version
added support for GL _ ARB _ texture _ float and GL _ EXT _ OES _ texture _ float in FloatTextureData. java
add filewriter. close ( ) to allow file to be close in a finally block.
added a null check for outputDirectory and jarStream before setting the output directory to avoid potential NullPointerExceptions when jarStream is null
updated the return statement in ShadowSQLiteConnection to use PerfStatsCollector for measuring performance to improve performance tracking for sqlite file execution
updated tools from ` getCurrentJDKTool ` to ` getTestJDKTool ` in JMapHProfLargeHeapTest and JDKToolLauncher classes to
[ geoserver ] add enum for resourceerrorhandling, and skip misconfigUREdlayers
lucene - 5693 : fix eofexception in raminputstream. read ( )
improve error message when a jsp resource be not find
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext class for permission testing to enhance thread safety and provide
updated memory check logic in Caches. java to include logging for cache freemem and clear mem checks to improve memory management and enhance debugging
hbase - 25836 testsplittransaction don't fail
added null check for currentSelectionArea in CompatibilityEngine. java to prevent potential NullPointerExceptions during selection
( chore ) camel - demos : add -- add - modules = http and -- add - modules = http
added checks for spanX and spanY in CellLayout. java to ensure proper spacing calculations during folder creation
refactor CacheOffHeap class implementation to improve performance and maintainability of the caching mechanism
fix : ` ` depend on another referenced table'' throw an exception
added validation for layer height before setting tiles in TiledLoader. java to ensure tiles are only accessed when the current layer height does not match
added synchronized keyword to setWorkingSet method to ensure thread safety when modifying the working set
added a new Java class named Solution to calculate the balance between two starting stone attempts to implement functionality to calculate the balance between two starting st
add address checker to handle bad torrent ip
remove translucent movement check from multilayermodel. render ( )
added tagless tag removal functionality in GuiConfigEntries. java to enhance functionality by allowing users to remove default tags from the tooltip
change thingTypeVersion from int to String in ModuleType. java and Capability. java to ensure consistency in type representation across modules
added null check for recieptents before sending messages to avoid potential NullPointerExceptions when recieptents are null
simplify issing ( ) method in routinginboundhandler
don't fail fast - running docker client if it fail fast
added resourcesMode parameter to AndroidMetadata and updated perfStatsCollector to include it to enhance metadata tracking by associating metadata with resource mode
replace DateUtils. addDays with Calendar. getInstance ( ) for date manipulation to improve code readability and maintainability by using a standardized calendar
replaced ` gradleImporter. importProject ( projectFile ) ` with ` gradleImporter. importProjectCore ( projectFile ) ` to ensure the
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting and provide user feedback during command execution
refactor TreeMap class to improve code readability and maintainability
added methods to control async stack traces in the Display class to enhance debugging capabilities for better error handling
added a method to set the glow color in BubbleTextView and utilized it in Folder to allow customization of the glow color of
set the styles of link and description to " file - row - text " to ensure consistent styling for file row elements
updated AbstractJdbc2ResultSetMetaData to return " java. lang. Short " instead of " java. lang. Short " and added a new
removed exception handling for file writing in Lucene40LiveDocsFormat. java and SimpleTextLiveDocsFormat. java to simplify file deletion logic and
added a null check for _ info before determining if the upgrade status is SWITCHING _ PROTOCOLS _ 101 to avoid potential NullPointerException when
added a constructor to the ShadowLocation class that accepts a provider string to facilitate the initialization of the provider object
limit for 32 - bit devices in LauncherPreferenceJavaFragment to ensure maximum RAM is within a valid range of 2048 bits
do not show statistic for non - data - included map in localmapstatsprovider
added logging capability for file activation in FileProfileActivator to enhance debugging by providing visibility into file existence and activation status
updated the parameter in the addToBody method from " noname1234 " to " invalid _ name " to improve clarity by using a more des
change guild # getroles ( ) to return a set of role.
updated array size check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter. java to improve array size
added unit tests for the delete method in DashboardUserMapperTest to ensure that the delete method behaves as expected in unit tests
update instructorfeedbackresultspagedata to use primaryparticipant instead of recipientidentifier
llvm : : deref handle can be defer to native address.
added a method to get the buffer size in BufferedIndexOutput to provide a way to access the buffer size
add usage help auto - width for standalone launcher
refactor action bar title setting logic in DrawerActivity. java to improve user experience by ensuring notifications are enabled when new interactions are received
updated test cases in CommandLineParserTest. java to improve test coverage for command line parsing functionality
added new animation constraints and interpolators for the ALL _ APPS animation to enhance animation responsiveness and improve user experience
updated method to use javaNameFromExternal instead of Character : : toUpperCase to improve code clarity and maintainability by using a more descriptive method
added native methods for setting and releasing a native Rectangle2D frame in CWrapper. java to enhance frame management capabilities in the application
added constant value validation in mmm Checker. java and created a new ValueTest. java file to ensure compliance with Java's
815151515 : [ testbug ] compiler / intrinsics / squaretolen / testontgomerymultiplytest
removed null check for constructors in PojoUtils. java to simplify the code and improve readability
refactor JiraConfiguration class to improve code readability and maintainability
updated error and coverageFailed message formatting in UploadBuild. java to improve clarity of error messages for better debugging
updated bounds settings in DeviceProfile. java to include search bar offset to improve layout accuracy by accounting for search bar offset
fix : set idletimeout to 0 for pululseaudio stream
refactor activity launch logic to use a unified launcher method to improve code readability and maintainability by reducing redundancy
added a new method ` getSourceGroupOptional ( ) ` to the ` AppleSource ` class to provide a way to access the source group optional
increased await timeout duration from 22 seconds to 32 seconds in TestSimTriggerIntegration. java to improve test reliability by allowing more time for trigger
[ hotfix ] [ core ] fix checkstyle violation in floatstreamreader
don't compute a path if the distance be small than the minimum distance
added a condition to skip processing for component types " com. codename1. ui. Form " and " com. codename1. ui.
replaced ` UiThreadHelper. getBackgroundLooper ( ) ` with ` LauncherModel. getWorkerLooper ( ) ` in ` DragView. java
added a null check for commitPoint and initialized it to the latest commit if it's null to ensure that the latest commit is available for
added unit tests for IMEI and MEID handling in ShadowTelephonyManager to ensure correct functionality and functionality of IMEI and ME
refactor debug method in SimpleHostRoutingFilter to streamline request handling to improve code readability and maintainability by reducing redundancy
added ` destory ( ) ` method to ` IndexSegment `, ` BitmapInvertedIndex `, and ` IndexSegmentImpl `
[ hotfix ] [ test ] fix npe in normalmessagesendandrecvit
replace ` Charset. forName ( " UTF - 8 " ) ` with ` StandardCharsets. UTF _ 8 ` in ` StatVisualizer.
hbase - 2782 : bulkload should not throw ioexception when bulk load fails
added a commission parameter to DefaultWithdrawFundsParams and RippleWithdrawFundsParams classes to support customizable commission
removed import of StreamTerminator from AutoClosingReferenceStream. java to clean up unused code and improve maintainability
solr - 9141 : fix orphan exception throw by morphlinecompilationexception
added validation for abstract overloaded methods in Java2TypeScriptTranslator to ensure correct handling of overloaded methods in interface scopes
added StacklessLogging import and wrapped the sweepDisk ( ) method call in a try - with - resources statement to enhance logging capabilities and ensure
updated ` SqlDataType ` to implement Serializable and refactored entity maps in ` Entities ` class to ensure data integrity during serialization and improve
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve accuracy of exact and non - constant evaluations
added null check for claimRequestString before parsing to avoid potential NullPointerExceptions when claimRequestString is null
updated imports and modified the constructor of HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve dependency management and ensure
updated the ` processTypeHintForNestedDocuments ` method to handle null source cases and added unit tests for null values in ` UpdateMapperUnit
refactor CoreAdminRequest to use CoreStatus instead of CoreAdminResponse to improve clarity and maintainability of the code
make moddirtransformerdiscoverer, transformers, and locators an instance of moddirtransformerdiscoverer static
fix typo in abstractquerydslprocessor's illegal inits message
PEGraphDecoder now include call stack information in the bailout exception
( chore ) camel - resttemplate : replace deprecate setof (... ) method with copiedsetof (... )
( chore ) camel - mail : use identityhashcode instead of null check
http : / / issues. apache. org / jira / browse / amq - 4213 - fix nullpointerexception in prefetchsubscription
hhh - 147486 : explicitly set ispropertyname when parse identifier
add a new activity for the wave generator ( fixes # 407 )
added logging for sheet application issues in KeyedProperties. java and SheetOverlaysManager. java to improve error handling and provide clearer logging for sheet
added unit test for exec and log to ensure shell be open / close properly
updated TestReplicationHandler to force an FS factory and added a test for noWriter to ensure proper error handling when no index is found and fac
[ gral ] add miss call to super. dispatchmethodkernelokra ( range, args )
guava : sort the result of a mxrecord so that it would well reflect our new priority system.
refactor thread creation in XToolkit to use a privilegedAction for improved security to enhance thread management and maintainability of the code
added validation in SelectBox. java and set " Linux6 " selection in UITest. java to ensure the dropdown reflects the correct Linux
replace IllegalStateException with Collector. printStackTrace in JobGlobalListener. java to improve error handling by providing stack trace information
added a parentSplit parameter to the createState method and modified state handling in FlowBuilder and SplitState classes to enhance state management by associating
changed connectionState variable to be volatile to ensure thread safety when accessing connection state
pollable - polling : increase default polling period to 1 second
replace ByteBuffer with MemoryUtil for encoding methods in MemoryStack and MemoryUtil classes to improve memory efficiency and maintain consistency in encoding method implementations
added error handling for ` IOException ` and ` DocletAbortException ` in ` HtmlDoclet `, ` AbstractDoclet `, and
fixed false positive with false positive in unusedmodifier
refactor code for improved readability by replacing lambda expressions with method references to enhance code clarity and maintainability
add ssl = { 0 } to @ parameterized test for abstracthttpclientservertest
improve error message when exception be throw during value transformation.
updated method to retrieve active connection permissions from userPermissions to activeConnectionPermissions to ensure correct permissions are retrieved for active connection connections
replaced equality checks in the Point class with an EqualsBuilder implementation to improve the accuracy of point equality comparison
updated file processing logic to handle null outputRoot to improve robustness by preventing potential null pointer exceptions
pdfbox - 2576 : add annotationfilter interface to allow annotation to be filter out by pdfbox
refactor StackTraceCleaner class to improve code readability and maintainability
modified content type handling for CSS, JavaScript files in PluginServlet. java to ensure correct content type is returned based on file extension
hhh - 14748731 skip testliteralinselectexpressiontest due to sybase dialect
changed the parameter name from ` slot ` to ` slotSize ` in the ` upgrade ` method to improve clarity and consistency in parameter naming
added getStats ( ) methods to AbstractDataImportHandlerTest, Context, and ContextImpl classes, and replaced AtomicInteger with AtomicLong in DocBuilder to
[ scb - 2657 ] add long polling capability to kiecomb client ( # 2697 )
added accessibility support for scroll events in PagedView and BaseOverview classes to enhance user experience by ensuring proper scrolling behavior based on device
added functionality to display unlocks in the unlock dialog to enhance user experience by providing access to unlocks functionality
clear the drain map from the event's getDrops ( ) method to ensure that therops collection is cleared before processing new data
added a new constant DEFAULT _ PARAM with a value of " inputName " in StreamResult. java to provide a standardized parameter for input
updated IOException declaration in testNormalizeOrder method to improve error handling by using IOException instead of MalformedURLException
updated print statement in TsFileSketchTool. java and modified buffer handling in LocalTsFileInput. java to improve output clarity and
added a list of headersToExclude in UmbrellaHeader. java and updated assertions in ProjectGeneratorTest. java to exclude Swift headers
reformatted the ` onHttpError ` method declaration for consistency to improve code readability and maintainability
added encode ( ) method call to RequestPlugin. java to ensure proper handling of special characters in request data
mondrian : mondrian : fix mondrian - 1251, mondrian - 1265, mondrian - 12
hive - 25875 : throw an exception when an ldap password be provide in the hive authentication provider ( adam szita, review by
pdfbox - 4892 : simplify code, a suggest by valerybokov
added a condition to clear complex writers in ProjectRecordBatch to ensure proper resource management when processing complex writers
added @ SuppressWarnings ( " serial " ) annotations across multiple cache classes to suppress serialization warnings and improve code clarity
added null check for classInfo in ClassGraphClassLoader to enhance robustness by preventing potential NullPointerExceptions
added a condition to handle " _ errors " in the ErrorResponseException class to improve error handling by ensuring proper parsing and displaying of schema
added a constructor to the EventSourcingRepository class to initialize the repository with a specified lockFactory, eventStore, and repositoryProvider to
refactor symbol definition and scope handling in mmm Attr. java to improve code clarity and maintainability by reducing redundancy
updated ` SearchedPeopleCursorAdapter ` and ` QustomDialogBuilder ` to handle spaces in search text to ensure correct text is displayed for
updated command handling in NuvoConnector and NuvoHandler classes to improve command processing based on standby mode
tmi - tiff : use ` ` chunky'' instead of ` ` extension''
added close ( ) method to itemlisttag to ensure proper resource management and prevent memory leaks
add a utility class to make it easy to use.
added two new files, SigInt. java and SigIntBarrier. java to implement a concurrent signal handling mechanism within the Agrona framework
refactor graph model handling and edge creation in ExporterGEXF. java to improve accuracy of graph edges based on hierarchical graph model
hive - 17515 : tctlseparatedprotocol should use text. decode ( bytebuffer ) instead of byte [ ].
added check to prevent invalid index in response
updated catalog comparison logic to use CatalogAndSchema. CatalogAndSchemaCase to ensure correct comparison based on the schema case
simonstewart : fix a couple of test failure in the browsermobproxytest
bugfix : display line number and column name in critical error message
replaced mTextWatcher. reset ( ) calls in InPlaceEditView. java to ensure textWatcher is reset before further processing
improve javadoc for internalstring and internalbytearray.
[ flink - 3402 ] fix edge type inference for tuple2 < k, v >
updated assertion classes in various files to ensure compatibility with updated Java libraries
deleted the ` Class Á ` file and created a new ` DiacriticTest ` class to streamline the project by eliminating
[ java ] don't wait for latch to complete in cluster membership test.
[ mng - 5751 ] if a component lookup fails, set the workspacereader to null.
updated SSL scheme comparison in ServiceRegistryConfig and enhanced test assertions in TestServiceRegistryConfig to improve security and ensure proper handling of secure connections
updated Mockito library version to ensure compatibility with recent features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency in formatting
added a ensureInstance method to the ServletHolder class to ensure proper initialization and instantiation of the Servlet instance
added logging functionality and improved handling of server time in BinanceExchange and BinanceBaseService to enhance observability and debugging by ensuring
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8. 5 " in Tomcat70ContainerAdapter
modified the component form deregistration process to ensure the current form is not null to prevent potential null pointer exceptions
modified ` decodeResource ` and ` drawBitmap ` methods to accept an optional ` BitmapFactory. Options ` parameter to enhance flexibility in bitmap decoding by
[ java ] don't execute executor. execute in examplesubscriber and ratesubscriber.
added functionality to prevent the next click and improve text display in the TimelineArrayAdapter to enhance user interaction by preventing the next click and ensuring
added " text " to the unmodifiableDataTypes in PostgresDatabase and improved handling of numeric data types in NumberType to ensure proper data type representation
fix entryprocessorbouncingnodetest ( # 3683 )
updated state checks from " INSTALLED " to " STARTED " in AmbariManagementControllerImpl. java and AmbariManagementControllerTest. java to
added a null check for ` bridgeUid ` before adding it to the inbox in ` CreateBridgeServletServlet ` to avoid potential null pointer exceptions
refactor robots - related methods in PreconditionEnforcer and CrawlServer classes to improve code clarity and ensure thread safety for updating rob
updated display name retrieval to include null checks for " Teredo " in multiple classes to enhance robustness by preventing potential NullPointerExceptions
added a default shader parameter to the SpriteBatch constructor and updated shader creation logic accordingly to enhance flexibility by allowing a default shader when available
added options for synchronous commit in TestUtil to ensure synchronous operations are executed during testing
added TypeCoercer to handle duplicate elements in SortedSetTypeCoercer to ensure that duplicate elements are handled correctly in the type coercion
updated Confirmation messages for folders and files in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve user experience by providing appropriate confirmation messages based on
added a check to ensure the value of'c'in the safe array is within a valid range to prevent potential ArrayIndexOutOfBoundsException when '
updated the registration of fragment storage to use a dynamic port to improve flexibility and maintainability of fragment storage registration
updated mock call to expect an empty map in HostResourceProviderTest to ensure that the mock returns an empty map instead of null
[ hotfix ] remove unused log parameter in yarnentrypointutils
fix for ` ` change border size'' issue
deleted the ShadowHtml class from RobolectricBase. java and updated tests in HtmlTest. java to streamline testing by eliminating unnecessary
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl. java ` implementing ` StarTreeRecordStoreFactory ` to provide a
updated logger names for HTTP 3 and HTTP 4 in HttpClientLoadTest. java to improve clarity and organization of Jetty logging components
modified the visibility of the addListeners method from private to public to allow access to the addListeners method from outside the class
[ hotfix ] fix typo in statehandlestore
replaced the import of ` Constraint ` from ` org. eclipse. jetty. util. security ` to ` org. eclipse. jetty. http
continue issue when a student try to enroll a student in a different section.
use try - with - resources instead of try - with - resources
( chore ) camel - 1145 : fix test failure on non - available port
added ` BuildTarget ` as a parameter and refactored jar parameter retrieval methods to improve code clarity and maintainability by centralizing jar parameter retrieval
remove ` ` # validating - cerficates'from certificate verification url
api : remove obsolete getpagesizeval ( ) from listcapacity
added a case for CLOSED state in IteratingCallback to handle cases where the state is closed
added isAuthorized variable and modified access control context handling in AccessControlContext and ProtectionDomain classes to enhance authorization management and improve access control logic
added binding processing for AbstractOSGiApp instances to ensure proper registration and event handling for OSGi applications
added support for handling " tiff " media type in DLNAMediaInfo. java to support additional media formats in the application
updated variable names and logic for handling argument types in OptimizedCallTarget. java to improve code clarity and ensure correct argument handling
added a new file ` CubocDesktop. java ` and modified loops in ` Map. java ` and ` MapRenderer. java `
update test to use test - classes instead of test resource
added a call to remove all files from the trashbin list in TrashbinActivity. java to ensure that the trashbin list does not
replace ` org. eclipse. jdi. Bootstrap. virtualMachineManager ( ) ` with ` com. sun. jdi. Bootstrap.
truffle : add additional check for global variable storage.
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted related logic to enhance event handling by associating intents
add a constant for max burn target lover and update the burning man presentation service to improve code readability and maintainability
replaced specific imports with a wildcard import in UniqueConstraintSnapshotGeneratorSnowflake. java and updated schema handling to streamline import statements and
modified SQL query construction in DMLTransformer. java to improve handling of empty insert statements to ensure correct SQL generation based on the presence of named
updated import statements and test method names in ServiceValidateControllerTests. java to simplify import statements and improve clarity of test cases
added a ` isStatement ` parameter to the ` getDefaultValidFunctionName ` method and introduced a ` hideDefaultName ( ) ` method to
refactor methods in JarLauncher class to improve code readability and maintainability
updated type parameters in multiple classes to use generics to enhance type safety and improve code clarity
make sure we don't send a hole - punch packet if we don't have a call peer.
added a test for updating a PGobject in ResultSetTest. java to ensure correct handling of date updates in PostgreSQL
modify password reset response handling to check for non - UAA origin before creating a password reset response to enhance security by preventing unprocessable user
replace getChildNodes ( ). item ( 1 ) with getDocumentElement ( ) for retrieving the document element to improve code clarity and maintainability by using
refactor Cache class implementation to improve performance and maintainability of the caching mechanism
rename timeinsec to timemillis in isochrone and sptresource
don't allow bind to anything if the bind be invalid
added a new ` Chainer ` class and updated the ` contains ` method in ` CollectionSubject ` to enhance the functionality of the ` contains
refactor Model class to improve code readability to enhance maintainability and reduce technical debt
updated recordedTime calculation to use a constant value of 619315200000L to improve accuracy of recorded time tracking
added a condition to resize the status buffer for Windows terminal types to ensure proper handling of windowed terminals in the application
added a state check for the host version state in UpdateDesiredStackAction. java to ensure that host versions are only set when the state is
move javatests and jsinteropRestrictionscheckerstest to src / j2cl / j2cl / transpiler / javat
use linkedhashmap instead of hashset to preserve order
remove unnecessary try - catch block in operationserviceimpl. toobject ( )
rearranged the order of configuration resolution in KnativeEnvironment. java to improve code readability and maintain consistency in property resolution
fix typo in commitlog archiver thread pool name
added connection handling in CloudSolrClient and implemented a test for cloud client uploads in TestCloudSolrClientConnections to ensure proper client initialization and validate
synchronize access to add / remove binding to avoid concurrentmodificationexception
added methods to clear temporary files and cache in ShadowContext to enhance file management and improve test reliability
sec - 825 : make the style of xstream consistent with the others
[ drools - 561 ] use kiemodule instead of kiemodule in kierepository.
modified block event handling in BlockEventListener to check if a new farmland is present before proceeding to ensure that the Soil - dry
added a default implementation of the getLocalIp method in FinishedSpan. java to ensure that the method returns null instead of throwing an exception
updated serialization method for " OBJECT _ VAL " in JdbcStepExecutionDao and added a new test for storing Integer in AbstractStepExecutionDaoTests
add some comment to the dictionary to make it clear that there be no chinese character for the first and last symbol.
added " lib " and " python37 " to the resource list in python. java and tensorflow. java to ensure compatibility with the latest Python
replaced the old plugin list retrieval method with a new refresh method in PluginTab. java to improve code readability and maintainability by centralizing plugin
change log level from info to warn for history file reloading, saving, and trimming to warn to reduce log verbosity and improve user experience
vmwarestemplate : fix npe in vmwarestorageprocessor.
camel - sftp : fix flaky test failure on window
updated import statements in ExperimentalMockitoJUnitRunner. java to improve code clarity and maintainability
updated GpsSettingsActivity and Session to use a new utility method for retrieving build serial to improve code clarity and maintainability by centralizing serial
refactor SwapGBuffers class to improve code readability and maintainability
remove skeleton control from spatial if it's null to avoid potential null pointer exceptions during spatial operations
added functionality to set and retrieve smart replies in ShadowRanking to enhance functionality for managing smart replies in the ranking system
[ java ] only add segment file if they don't already exist in the archive.
updated resource directory retrieval in CarrotClusteringEngine. java to ensure correct configuration for resource directories
added null check for ` testRect ` in ` WindowsTreeUI. java ` and created a new test class ` bug8004298.
updated ASM _ API _ VERSION from ASM7 to ASM9 in CompilationConfig. java to ensure compatibility with the latest ASM
improve error message when vector file could not be load
added client information to the SurrogateAuthenticationEventListenerTests to enhance test data by including client information during event processing
added isUserView variable to false in CardPresenter. java to ensure isUserView is set to false before further operations
updated import statements and refactored diagram output format handling to improve code clarity and maintainability by consolidating utility methods
refactor the creation of metrics in LogDispatcherThreadMetrics to use a local variable for clarity to enhance readability and maintainability of the code
added a new module - info. java file for the sqlite connector module to define module dependencies and ensure proper access levels
added a 1 - second delay of 500 milliseconds in StreamResetTest. java to improve test stability by ensuring smoother execution before
removed conditional check for web type " new " in permissionsManager initialization to simplify permission management by directly using the data manager
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method to return a depth value of 0.5 f in SpringLoadedState. java to provide a default depth for better resource management
replace System. arraycopy with Arrays. copyOfRange for data copying to improve code readability and maintainability by using predefined constants
[ hotfix ] fix checkstyle violation in executiongraph
removed the SwipeLayout dependency and simplified view binding in NotificationRenderer to streamline the code and improve maintainability by eliminating unnecessary swipe -
updated DefaultExceptionConverter to handle null invocation and improved exception message formatting to ensure proper exception handling and provide clearer error messages for unexpected exceptions
add a nullable lock field to glowcontainer. setlock ( ) to avoid nullpointerexception.
replaced MethodHandle method lookup with direct reflection method retrieval in ProxyMaker. java to improve flexibility and maintainability of setter retrieval
changed data type conversions from int to Integer in MathTest. java to ensure proper handling of integer values in MathEntity operations
( chore ) camel - email - templates : remove unnecessary join
added functionality to manage the visibility of theProvidedPanel based on the layout node's content to improve user experience by ensuring the provided panel
added a null check for location in ServerCallable. java to ensure robustness by preventing potential NullPointerExceptions
refactor BuilderFactory, Pipeline, and PipeliningTest classes to improve code organization and maintainability
BasicChecker to throw a CertPathValidatorException if the key parameters are missing to ensure proper handling of key parameters and prevent runtime errors
refactor media type ignoring logic in MediaTypeRequestMatcher to improve clarity and maintainability of media type matching logic
updated task number logging to use taskAttemptId directly to improve clarity and maintainability of log output
add allow - bean - definition - overriding property to the SpringBootTest annotation to ensure bean definition overriding is enforced in the test configuration
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor package structure for BTCMarketsStreaming services to improve code organization and maintainability
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest. java ` to ensure that the ` issue151
added a new file ` CompatibilityTest. java ` that tests internal DTD and XML properties to ensure proper validation and validation of internal DTD
added new utility classes for managing push notifications and security preferences to enhance the system's capability for managing push notifications and security preferences
fix the bug of numReplicas in tablerebalancer. nextavailableinstances ( )
bump version to 2.17. 0 and tidy release note
log4j2 - 1349 : fix line separator in tostring ( ) method.
improve handling of timeout in ajpaprocessor.
set default values for friction, restitution, and density variables in FixtureDef. java to ensure default values are set to zero
updated method signatures to include anomalyFunctionSpecMap and changed fetchSaclingFactors to fetchScalingFactors to enhance anomaly detection functionality by
added a shell command to wait for broadcast idle in LauncherInstrumentation. java to ensure reliable broadcast idle handling in the launcher
added unit tests for font and link tags in ResourcesTest. java and adjusted the offset calculation in ResStringPool. java to ensure accurate string
move guistatscomponent. java from'work / src _ work / minecraft / net / src / minecraft / src / common / net /
added permission handling for CALL _ PHONE in Launcher. java and Utilities. java to ensure that the app does not have a phone permission before
updated return values in SimulationPanel and PlotDialog, modified warning setting in BasicEventSimulationEngine, and added locale handling in Startup to improve
updated GeoPointDistanceQuery, GeoPointInBBoxQuery, GeoPointInPolygonQuery, GeoEncodingUtils, and TestGeoEncodingUtils classes to enhance
added a synchronized method to check if the Docker client is available to ensure the Docker client is available before proceeding with operations
added a new constant VPX in CodecTypes. java to standardize the codec type used in the application
added a coordinator address parameter to the DistBuildFactory and updated the getCoordinatorAddress method in AbstractDistBuildRunCommand to enhance functionality by allowing
added a new method ` match ` to ` FsUtils ` and a synchronized ` Timer ` class in ` WrapTimer ` to enhance file matching
added a conditional check before adding label and totValue to ensure ent. getValue ( ) is only added when it is greater than zero to avoid
make sure ` ` true'' and ` ` false'' be define
added a test annotation to the TestPerfBenchMarkDriver class to facilitate testing of performance benchmarks
added materialization time setting in ObjectStore and a test for materialization in TestObjectStore to ensure that creation metadata updates correctly reflect the
added error handling for missing native dependencies in VoskSTTService to improve stability by notifying users when a required dependency is missing
remove jmssampler. is _ one _ way property from gui and add response code to jmssampler.
modify break weight determination logic in GlyphView. java to improve accuracy of break weight determination
refactor data reading logic in RCFile. java to improve readability and maintainability of the code
added an @ AwaitsFix annotation in AutoAddReplicasPlanActionTest. java to indicate a pending fix for SOLR - 13028
replaced direct calls to ` steps ` and ` processors ` with a single ` unwound ` entries to improve clarity and consistency in data storage
removed the ` flavorsForFormats ` parameter from the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable ` and ` Data
hbase - 25836 thrift - addendum add - infoport to thrift test
added a check for the end of the file in the RegExpScanner class to prevent processing when the file is at the end of the file
refactor metrics and timers handling in Debug. java to improve clarity and maintainability of the code related to metrics and timers
fix nullpointer exception in chatroomjabberimpl.
improve error message when filename be miss or inaccessible
refactor refresh token creation into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
simplified error message formatting in BuckConfig. java to improve code readability and maintainability
[ flink - 2594 ] [ yarn ] remove unnecessary lock in yarnflinkapplicationmasterrunner
added a new implementation method ` nativeGetHardwareBuffer ` in ` ShadowNativeImageReaderSurfaceImage ` to provide a way to retrieve hardware buffer
updated the SSL URI for the BTCChinaMarketDataService instantiation to ensure reliable access to the BTCChina market data service
pmd : fix ant build on window
[ shenyu - examples ] add test for oauth plugin
updated the SemgrexPattern class to improve pattern matching functionality to enhance readability and maintainability of the code
updated the ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx `, ` EntryStream `, and ` TestStreamEx
updated error message in RestCodec and enhanced exception handling in ExceptionToProducerResponseConverters to improve clarity of error messages and enhance error reporting for better
updated ` shouldComeFromThisClassLoader ` to include ` org. specs2 ` and ` scala. ` to ensure compatibility with Maven Sure
changed the conditional check from " contains ( sdp ) " to " contains (! transmittableAudioEncodings. contains ( sdp )
updated logic for generating database function values in CreateTableGenerator. java and added comprehensive tests in CreateTableGeneratorTest. java to ensure correct
added test for station3gml31 and station3gml32 in normalizedmultilvaluesstest.
replaced the static validity field with a volatile boolean flag in NetworkTestUtils. java and updated server setup in UaaHttpRequestUtilsTest. java to
added a check to ensure the processor is configured before expanding regex mapping to prevent potential errors when the processor is not configured
updated the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and refactored the ` split
added XLCDCommunicator and XLCDController classes to enhance firmware handling in the application
[ kie - api ] add kmodule. xsd a a a part of kie - api's schema loading
event trigger retry logic : check for emptiness
added a timeout for thread joining in WorkerProcessPoolTest to improve test reliability by waiting for tests to complete before proceeding
replaced ` hashCode ( ) ` and ` equals ( ) ` methods with ` equals ( ) ` and ` hashCode ( ) ` methods in `
fix : increase energy value to 10000
modified the ` command ` method to throw ` ConfigurationException ` and removed unnecessary save / reload calls to improve error handling and ensure proper configuration saving
deleted ` SpringTransactionHooks. java ` and replaced ` SpringTransactionHooksTest. java ` with ` AbstractSpringTransactionHooksTest
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
add a new file GetUninitializedStringValueTarg. java to implement functionality to retrieve an uninitialized String value from a string reference
added support for " first _ order _ deps ( ) " in AndroidLibraryDescription and related tests to enhance dependency resolution and improve test coverage for
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to control synchronization between home and all apps
added a flag to prevent saving the bugreport if it is already saved to improve efficiency by avoiding unnecessary logging of anomaly messages
added a constant for " cinepack " format in FormatConfiguration. java and utilized it in LibMediaInfoParser. java to support
added camera bobbing feature and modified hand movement animation logic in the Player class to enhance player experience by allowing the bobbing feature to be implemented
updated the method to use ` digest. toString ( ) ` instead of ` data. describe ( ) ` in ` GrpcCasBlob
deleted the HSQLDBServerFilesFilter. java file and updated file listing logic in TestUtility. java to streamline the codebase by elim
walletappkit : fix nullpointerexception in restorefromseed / restorefromkey
updated variable assignment to use getApiDataSeriesVersion instead of getApiDataVideoVersion to ensure correct retrieval of the latest version from the API
added a new method ` visitMethodInvocation ` to ` HasTypes ` that checks if a method invocation exists to ensure that only qualified class names are
replaced magic numbers in AmbientCubemap. java with a constant for the number of values to improve code readability and maintainability by using
bugfix : show reset warning for method and class selection mode
added return values for zero - length arrays in GenericUDFMask and GenericUDFMaskFirstN classes to ensure proper handling of zero input
bitcoinj - test : use temporaryfolder instead of deleteRecursively.
add method to itemstack. isitemstackedamage ( ) to check if itemstack can be damage.
fix mc - 167447 by use line _ width instead of alpha
simonstewart : set the browser startup page to 1 in firefoxdrivertest.
modified the condition in Http1xClientConnection to include additional HTTP method checks to ensure proper handling of CONNECT and GET requests based on their request
updated task accept from " compile " to " process - classes " to clarify the task's purpose in processing classes
replaced ` ConnectionManager. shutdown ( ) ` with ` closeIdleConnections ( 1L, TimeUnit. MICROSECONDS ) ` to improve
added a check for ` PropertyHelper. hasAggregateFunctionSuffix ` before creating a new metric to ensure that metrics are only added when the suffix
added a method to set fullscreen parameters in TaskOverlayFactory to enable customizable fullscreen behavior for task overlays
added a new Java class named Counting to count occurrences of a given input to provide a solution that prints the frequency of the input
fixed nullpointerexception in clusteredagentmanagerimpl. java
modified MutisignOperationerGodicTest. java files to improve test coverage and maintainability
added error handling when reading from StaxEventItemReader to ensure robustness by handling NoSuchElementException during fragment processing
replaced specific imports with a wildcard import and modified return statements in ShadowTextView. java ; added null check in TestAttributeSet. java to simplify import
updated JSON import statements from ` com. nimbusds. jose. shaded ` to ` net. minidev. json `
updated OS family detection from " Linux " to " AIX " and added support for " Linux - s390x - 64 " library to
cloudstack issue due to router control ip change
added a new method ` invokeWithoutBlockingWithResultSync ` to ` Display ` to facilitate asynchronous execution of ` RunnableWithResultSync
inteface, inteface, inteface, inteface, inteface, inteface2
updated rounding methods in PortraitPagedViewHandler. java to use Math. round for width and height calculations to improve accuracy of task
corrected the capitalization of " clusters - 0 " in KMeansDriver. run calls to ensure consistency and correctness in file naming conventions
hbase - 25836 addendum hbase - 25813 ( addendum ) correct the alignment of keyvalue.
camel - 5957 : add type converter to service when create a camelcontext.
added import for ConditionalTask and enhanced task dispatching logic in SparkCrossProductCheck. java to improve task handling and ensure proper dispatching for
updated action constants to use ACTION _ MANAGED _ PROFILE _ REMOVED instead of ACTION _ MANAGED _ PROFILE _ ADDED to
updated conditional logic in ` LoginInfoEndpoint ` to include ` jsonResponse ` in ` LoginInfoEndpoint. java ` to ensure proper handling of
hbase - 25875 add todescriptivestring to assignmentmanager. getregioninfo ( ) method
[ huobi ] fix ` ` fail'' error message
added " PERIOD " column to MariaDB and corresponding tests to ensure proper SQL generation for the " PERIOD " column in the Mar
[ beam - 8470 ] add documentation for portableworker. external _ service _ address and process _ variable to portableworker.
added support for Android 7 dictionary loading mechanism in VersionChangeLogs. java to inform users about changes to the dictionary loading mechanism
changed the visibility of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil. java to restrict access to NUM _ MILLIS
removed debug print statement from ImageResourceLoader. java to clean up the code and reduce unnecessary console output
[ java ] only invoke aeron client if it own aeron client.
added validation for implicit lambda parameters in mmm Attr. java and created a new NoWarnOnImplicitParams. java file to improve type validation
refactor menu handling methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by encapsulating menu logic
added reserved fields to BTCETransHistoryResult to ensure accurate representation of transaction types
replaced List with Set for series and exceptions in RetryFilterFunctions. java to improve data integrity by preventing duplicate entries
mark the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
modified the condition in LastQueryExecutor and added a new test for last query with unseqTime largerThanSeqTime to ensure correct
added a newline after " \ r \ n " in the requestStr to ensure consistent formatting of the request string
camel - test - infra - maven - plugin : set http error log to slf4j
added titleBar safe area setting to enhance user experience by allowing title bar accessibility
modify the loop iteration over TimeSeriesChunkMetaDataList to ensure the correct retrieval of the series metadata from the list
added SQL ALTER TABLE command to rename column to " test _ column " to ensure proper SQL syntax for renaming column operations
change the visibility of the copyState method from package - private to public to allow access to the copyState method from other classes
fixed - rexecutorservice. executeasync ( ) method throw classcastexception
filesystems should use the split file suffix instead of a hardcoded one.
[ hotfix ] [ orc ] fix checkstyle violation
refactored null check for nameArg in CompareFunctionsProcessor. java to improve code readability and prevent potential null pointer exceptions
improve error message when insufficient disk space be require during compaction
added ` toString ( IndexReader ir ) ` method implementations in ` SegmentTermVector `, ` TermFreqVector `, and ` QueryTerm
added a state check in AbsSwipeUpHandler and unregistering TaskStackListener in TaskAnimationManager to prevent processing when the handler is invalidated
refactor lock timestamp retrieval and setting methods in AppPreferences and PreferenceManager classes to improve code clarity and maintainability by centralizing lock timestamp management
replaced direct retrieval of audio track artist with a helper method to retrieve the artist to improve code readability and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is null
npe in splittertext when there be no header marker match
added support for setting the keystore type in HttpsConnectorFactory to ensure compatibility with Windows key store types in the application
increased DEFAULT _ CHECK _ TIMEOUT from 400 ms to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to improve test reliability by
added a condition to check if the remote folder's result is not FILE _ NOT _ FOUND in FileSyncAdapter. java to ensure that
added animation capabilities to the Slider class to enhance control over the slider's animation behavior
updated assertions in LineSeparatorProcessorTest to use ` lineSeparator ` instead of ` detectedLineSeparator ` to ensure consistency and correctness of line separation
changed the maximum width and height from 512 to 1024 in TexturePacker. java to optimize memory usage for texture packing
added a test for negated ternary operators in UnnecessaryParenthesesTest. java and modified condition in UnwrapParentheses. java
camel - hazelcast : fixed npe when exchange body be null.
added TextFeedbackTest class and modified AllTests to include it to enhance testing coverage for text feedback functionality
replaced Math. round with Float. compare for score comparison to improve accuracy in score comparison logic
updated DENSITY _ 560 and DENSITY _ 4K cases and modified resource saving to use try - with - resources syntax to
added a new method ` arrayClassElementOffset ` in ` HotSpotReplacementsUtil ` and modified the way klass pointer is loaded in ` Array
don't compare stage _ total to stage _ total if it's equal to 0
add - r on / off support for remote msc
[ mieleca ] fix mieleca appliction handler for state _ running and state _ finished
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging to improve consistency and clarity in logging events
updated log variable name from " log " to " LOG " in LocalZookeeper. java to improve clarity and consistency in log naming
added test cases for handling project generation events in EventSerializationTest. java to ensure proper serialization and deserialization of project generation events
[ desktop ] fix for selection of preview point in algebra view
refactor methods in JavaCompiler class to improve code readability and maintainability
hbase - 25801 add sanity check for non - positive remainingtime in integrationtesttimeboundedrequestswithregionreplicas
updated test files for consistency to improve code quality and maintainability
added " -- gc - sections " and " -- nocopyreloc " flags to the ldflags in NdkCxxPlatform. java to
updated the fallback URI construction in ` SpringCloudCircuitBreakerFilterFactory ` and added tests for variable handling in ` SpringCloudCircuitBreakerFilterFactoryTests `
simonstewart failure in the build system
bugfix for shared string table that don't exist in xssf
added a method to retrieve the account network from a given HTTP node and its address to enhance the functionality of the ` getAccountNet ` service by
added a check for available text width before returning the clipped string to ensure that clipped strings are only returned when available text width is non
refactor FlatteningIterator and FlatteningIterator classes to improve code clarity and maintainability by encapsulating iterator logic in a dedicated class
replace special characters with spaces in title and body in NotificationUtils. java to ensure proper HTML formatting by removing unwanted tags
doc ( regen ) : regenerate client with updated copyright year ( # 4382 )
added reloadanddeleteanyexistingquestion ( ) method to instructorfeedbackquestionuitest
updated return values and logic checks in HSSFSheet. java and BaseTestSheet. java to ensure correct row numbers are returned for sheet comparisons
added permission checks for launcher activities in the PackageManagerHelper class to enhance security by preventing malicious intents
[ java ] don't send session open event if they be already connect.
implemented custom hashCode and equals methods in AbstractParquetMapInspector class to ensure proper hash calculation and prevent null pointer exceptions
added a check for remotelyClosed state in HTTP3StreamConnection to ensure proper flushing and releasing of the buffer when remotely closed
added AutoCloseable interface to SplitReader to ensure proper resource management and prevent potential memory leaks
removed the deepCopy ( ) method from GsonBuilder to streamline the code by eliminating unused functionality
LLSourceMap is not present in LLSourceBuilder. java to ensure proper handling of not found sources
refactor file opening and closing logic in RestClientRequestImpl. java to improve code clarity and streamline file handling process
removed unnecessary whitespace in GrblController. java to improve code readability and maintain consistency
replaced ` MockFactory. class. getClassLoader ( ) ` with ` SearchingClassLoader. combineLoadersOf ( toMock ) ` to improve class
add test case for issue with refresh flag
added a condition to the condition check for LEFT _ SEMI _ JOIN in the ConstantPropagateProcFactory class to support additional join types in
modified HTTP response completion checks in HttpReceiver and HttpSender classes to ensure proper termination of the response based on the status of the exchange
use arrayoopdesclengthoffset ( ) instead of arraylengthoffset ( ).
fix for http : / / issues. apache. org / jira / browse / amq - 4218
refactor multiple Java classes for consistency to improve maintainability and readability of the codebase
added a check to ensure the application context is not running before attempting to stop it to prevent potential errors when the application context is not running
changed the return type of the drawItem method from void to GlyphLayout to ensure the method returns a glyph layout instead of void
refactor metrics handling in SpringmvcClient to use a metrics publisher to improve code clarity and maintainability by centralizing metric retrieval logic
updated the formatting of the accountAgeWitnessMap code for consistency to improve code readability and maintainability
updated structure and reader classes for consistency and clarity to enhance code readability and maintainability
added ` ResourceUrlProviderExposingInterceptor ` to ` CasWebflowContextConfiguration ` and updated interceptor handling in ` CasWebflow
add a return inliner transformer for return statement that have no side effect.
[ smarthome ] enhance EnrichedRuleDTO to include configuration details to enhance functionality by associating EnrichedRuleDTO with
removed the ` LinkOption. NOFOLLOW _ LINKS ` parameter from the ` isDirectory ` method in ` PathResource. java ` and
[ flink - 17584 ] [ table - planner - blink ] remove dialect from executionentry
changed ` rDotJavaPackages ` to ` rDotJavaPackagesSupplier ` and added a ` hasRDotJavaPackages ` parameter to improve
add a test for the package _ info _ annotated bug in the pmd framework
added configuration for minimum cross - compaction unseq file level in IoTDBDescriptor to improve flexibility in handling unseq file configurations
[ hotfix ] fix checkstyle violation in flink - runtime - resourcemanager
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify that
updated URI construction in ZipResource. java and added unit tests in ZipResourceTest. java to ensure proper handling of feature files with spaces in
updated formatting and improved thumbnail handling in ExpandableUploadListAdapter. java to enhance code readability and ensure proper thumbnail generation based on upload status
refactor RobolectricTestRunner to merge parent classes and method configurations correctly to ensure proper configuration merging based on class presence and default annotations
filter block and item registry in ModelLoader. java to ensure only valid block and item registry are processed
changed method signatures from abstract to concrete in AbstractDataChangedListener and WebsocketCollector classes to enhance method chaining and improve code readability
updated JSONPojoConvertor to handle Enum types and improved test assertions for color functionality to enhance functionality and ensure correctness of color handling in JSON conversion
added a deprecation warning for the ` -- view ` option in the project view to encourage the use of the deprecated ` -- view ` option
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` in ` GWTRequestWrapper. java ` to
updated GyroControl class to implement OrientationEventListener and added orientation correction functionality to enhance the control's responsiveness based on device orientation
fix ( biome ) : optimize biome array size
replaced instances of ` println ` with ` print ` for function calls in ` GetInterfaceTest. java ` to improve code readability by using a
remove unnecessary line of code in FileCompilerConfig. java to improve code clarity and maintainability
added a new interface ByteToLongCollector in the new file ByteToLongCollector. java to provide a functional interface for collecting long values
added a preload flag to MMapDirectoryFactory to control the loading behavior of the map directory
added custom metrics for enabled components in BukkitPlatform. java to provide insights into the enabled components for better analytics
refactor QuickConnectREST to improve code structure to enhance maintainability and readability of the code
added aspect ratio and drawable resource for default card image to enhance visual representation of the card display
[ ds - 3892 ] fix login redirect for impersonation
updated VectorHashKeyWrapper to handle empty array cases for longValues, decimalValues, and byteStarts to improve robustness by preventing potential
added test cases for System. nanoTime ( ) in TimeChangeTest. java to ensure correct timing behavior during CRIU restores
added null check for the line variable in MultiPartFilter. java and printed the parameter in MultipartFilterTest. java to improve robustness by
add event for livingexperiencedrops to cancel the experience drop
updated status messages in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and accuracy of error messages related to API limits
[ beam - 8470 ] remove unsupportedoperatorsvisitor from beam - dsls
added RdepsFunction support and improved input handling in GraphEnhancementQueryEnvironment to enhance functionality and ensure proper dependency resolution in query environments
refactor methods in Character class to improve code readability and maintainability
added logic to set selection index for an entire rocket in ScaleDialog. java to ensure proper scaling behavior for specific rockets in the scaling
replaced instances of ` Arrays. toString ( bytes ) ` with ` bytes ` in ` UpdateableResultTest. java ` to ensure consistency in
added time boundary attachment for hybrid tables in BaseBrokerRequestHandler. java to ensure proper handling of time boundary for non - existent hybrid tables
fix for connector. getpoller ( ). add ( socketref ) in apr connector.
fix for # 8muses ripping of full ripping image
replaced instances of ` mDevice. wait ( mDevice ) ` with ` TestHelpers. wait ( Until. hasObject ( By. pkg
added a phone profile check in QuickstepLauncher. java to ensure proper layout behavior for phone profiles in landscape mode
updated assertions in PartTreeJpaQueryIntegrationTests to unwrap QueryImpl instead of using getValue to improve compatibility with Hibernate's query implementation
refactor file reading process to use privileged actions for better security to enhance security by ensuring privileged actions are executed safely
removed dynamic check for jpaQuery's getResultStream method to streamline the query execution process by eliminating unnecessary dynamic behavior
fixed nullpointerexception in physicprocess if entity be null.
clear _ map _ when _ value _ attributes _ are _ indexed
add support for join jitsi - conference - room operation ( sip invite ).
updated color handling in mmm Utils. java and ppp UtilsTest. java to include bold and background colors in the HTML message to improve
fix : normalize name input don't hide menu item
updated scratch path format in Aapt2Link. java to use a formatted path to improve readability and maintainability of the scratch path format
replaced instances of ` new Capture < > ( ) ` with ` Capture. newInstance ( ) ` in ` ExternalJavacTest. java `
ggb - 2118 don't select geos when click on algebra view
improve error reporting when parse cql expression
implement ` isCanceled ( ) ` method in ` BehaviorCall `, ` Call `, and ` OkHttpCall ` classes to ensure consistent
added a default implementation for the ` isAnnotationPresent ` method across multiple classes to provide a default implementation for annotation presence checks
replaced the existing ` removeAllWidgets ( ) ` method with a default implementation that throws an ` UnsupportedOperationException ` to provide a default implementation for
[ hotfix ] [ yarn ] fix yarn test failure
opensslcipher. engineupdate ( ) : don't account for output size for update.
added support for forced transcoding of high - res transcoding with Fire TV Stick to enhance media handling and improve compatibility with Fire TV St
[ beam - 8470 ] make datasetsourcemockbatch implement microbatchreader.
updated import statements and modified listener handling in GpsLoggingService. java to improve code clarity and ensure consistent listener management
changed the parameter type of ` putString ` from ` boolean [ ] fullwidths ` to ` byte [ ] fullwidths ` and initialized
added import and handling for BaseItemDragListener in FolderIcon. java to support drag - and - drop functionality in the launcher
added methods ` createEmptyArtifact ` and ` createArtifact ` in ` RepositoryConnector `, ` AbstractRepositoryConnector `, and ` FileSystemConnector `
updated configuration keys in RabbitMQPublisherImpl. java for consistency to improve code readability and maintainability
removed unnecessary calendar checks in VideoViewerActivity. java to simplify the code for better readability and maintainability
camel - 5497 fixed the issue that sftp don't work on window. thanks to joao for the patch.
( chore ) camel - weather : fix flaky test
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent. java ` to improve clarity by indicating that the
fix doubleplants not work for lARGE _ fan
replaced setFocusable with setRequestFocusEnabled in TranscodingTab. java to improve focus management for better user experience
don't swallow interrupted exception
modified license acceptance logic in DB2TestSystem and updated import statements in DockerDatabaseWrapper and TableIsEmptyGenerator to improve license handling and
[ fix ] optimization goal can now be select from the select unit.
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality for the BTC currency
added a check to set the number of samples in the file if it is greater than zero to ensure that the number of samples does not exceed
updated tasklet names in StepWithSimpleTaskJobParserTests to improve clarity and consistency in task naming conventions
changed variables from non - final to final in CentralAuthenticationServiceImplTests. java to enforce immutability and improve code clarity
ggbabs ( ` ` ( a ( a ( b ) ) )'should be a ( b ), not a ( b )
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer. java ` to ensure proper handling of service output
jbrules - 2852 : add support for biginteger type in executable model
added " org. eclipse. jdt. " to WebAppContext. java to hide the jdt used by jetty in the project
modified the return value of the ` useAuthCache ` method from ` super. useAuthCache ( ) ` to ` false ` to ensure
page title : capitalize namespace segment
( chore ) camel - direct : move directconsumernotavailableexception to camel - core
added a null check for zooKeeper before initializing it to avoid potential NullPointerExceptions when zooKeeper is not initialized
fix a typo in the progress bar log message
replaced direct calls to ` mVibrator. vibrate ( ) ` and ` mVibrator. cancel ( ) ` with `
added a call to updateLastRemoteStreamId to ensure the last remote stream ID is updated correctly
set text antialiasing to on in preference file
[ java ] remove unused field in preparation for a new publication.
refactor : remove static import of enums in ctannotationimpl. java ( # 2852 )
refactored ExoPlayer class to improve code readability to enhance maintainability and facilitate future development
modify getRGBPixelImpl to return a rectangle array instead of a native method to improve compatibility with different screen dimensions
added a new method ` newPrintStream ` to create a custom ` PrintStream ` with specified encoding to enhance flexibility in output stream encoding based on
updated vibration duration from 1 to 25 milliseconds to improve responsiveness during movement
[ flybush ] fix checkstyle issue in flybush module
removed unnecessary parameters from the WebSocketClient constructor to simplify constructor parameters and improve code clarity
simonstewart : move the i18n test to a different directory
replace bootstrapmethoderror with loadconstantexception.
added restoreAuthSystemState ( ) method call in XmlWorkflowServiceIT. java to ensure authentication system state is restored after use
added a lowercase comparator using a comparator in CoNLLUFeatures. java to ensure consistent ordering of features regardless of case
improve error message when source file don't exist
simonstewart : ignore a test that should throw an exception if the option be not toggle.
added a validation check for the length of keys in HighestKvno. java to ensure that the count of keys is exactly 9 to
modified attribute retrieval in HDF5BatchReader to handle Huge objects with 1 record support to improve robustness by ensuring only Huge objects
[ beam - 8470 ] replace pDone with writeresult. in ( beam - 8470 )
fix a typo in the createtemplaterequestentity annotation.
added a new file TestMultiANewArray. java to facilitate testing of multi - dimensional arrays in the object web application
allow management of secondary storage if true, otherwise secondary storage be mount on management server
refactor block ID retrieval logic in SyncBlockChainMsgHandler. java to improve clarity and correctness of block ID handling
added a call to set the theme of the preview tab content to ensure the correct theme is applied to the preview viewer
added a null check and closing of the reader in VectorizedParquetRecordReader. java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` in ` ConnectorTimeoutTest. java ` to verify the idle timeout behavior of the HTTP
add dictionary and dictionarypmi property to facilitate the reading of dictionary and signatures
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to
updated parameter values in JpaPagingItemReader and modified error message assertions in JobLaunchingGatewayParserTests to improve clarity and accuracy of error
changed log level from warn to debug for found child node with improper name to reduce log verbosity and focus on debugging purposes
updated ColorExtractionService to use getHotseatPallete ( ) instead of Palette. setRegion ( 0, 0, 1
added methods for setting default table entry and cell transformer in TypeRegistry to enhance functionality by allowing custom table entry and cell transformations
removed assertion from AtomicRemainder. java to streamline code by eliminating unnecessary assertion
chore ( regen ) : regenerate with update license year ( # 4382 )
removed the ` projectGenerated ` field and initialized it to true in ` ProjectGenerator ` to streamline the project generation process by eliminating unnecessary
[ hotfix ] fix checkstyle violation in driverutils. java
added contact form functionality to the application to enhance user experience by providing contact information
guacamole - 975 : use objectpermissionset instead of permission set.
updated RELEASE _ VERSION from 20 to 21 in IconCache. java to reflect the release of version 21
fix checkstyle issue in traitfactory. java
updated method names and constants to use " OR _ ALIAS _ LIKE " for filtering based on name to improve accuracy in filtering based on alias
replaced manual closing of PerDocConsumer with IOUtils. closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener, HttpLongPollingDataChangedListener, and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in the menu to enable immediate menu display when the overflow button is clicked
updated error messages related to null and non - null references in various classes to improve clarity and accuracy in error reporting for null subject references
ggb - 2118 fix : line height of the algebra view w. r. t.
test : move protobufferutilstest to core module
fix : divider position don't change when close the applet
fix ( gui ) : fix classcastexception when use crossref
[ geos - 8470 ] fix classcastexception in getprojectionpolicy ( )
changed the variable name from ` extractTypes ` to ` dataTables ` to improve code clarity by using a more descriptive variable name
fix a problem with the update of the meta contact avatar when a contact be add or remove.
updated the import statements for Command from org. apache. sshd. server. command to org. apache. sshd. server. command
added a test for cleaning up the audit log table post parameters by position in AuditLogTest. java to ensure that the audit log table behaves
add @ suppresswarnings ( ` ` unchecked'' ) to avoid unchecked warning
added regex patterns and modified comment parsing logic in ACLFileParser. java to ensure proper parsing of comment lines and prevent dependency issues
updated ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` in the ` isReadable ` method signature to enhance functionality by providing a
added ancestorDimensionValues to StarTreeImpl and StarTreeNodeImpl classes to enhance the handling of dimension values in the tree structure
added user unlock check before closing open views in various classes to ensure views are only closed when the user is unlocked
changed variable name from widthStr to positionStr in Photo. java to improve code clarity by using a more descriptive variable name
refactor PKIXValidator logic for improved clarity to enhance readability and maintainability of the validation process
[ flink - 20836 ] [ hadoop - common ] [ test ] add archunit test for the test code
updated package names from ` org. apache. shenyu. integratedtest. alibaba. dubbo ` to ` org.
cloudstack api : use domainid instead of skipprojectnetworks when createnetworks be call
updated assertion in RuntimeTypeAdapterFactoryFunctionalTest to use get instead of remove to ensure proper handling of shape types in JSON parsing
undo info should be store for property instead of undo info
replaced direct retrieval of the " sun. java2d. xrgradcache " system property with a privileged action to enhance security by ens
[ hotfix ] [ test ] use awaitility in streamclosetest
added ` doAfterFlush ( ) ` method to ` DocFieldProcessor ` and modified ` DocFieldProcessorPerField ` to initialize ` per
filter non - deprecated properties in ConfigurationMetadataGenerator. java and add nested configuration property in AbstractJpaProperties. java to ensure proper handling of deprecated
refactor variables in BiInt2ObjectMap and Int2ObjectHashMap to use'values'instead of'capacity'to improve code clarity and
updated the number of mv files thread from 25 to 15 in HiveConf. java and refactored file renaming logic in Hive. java to
don't log stacktraces when a message fail to be send.
added a null check for the context in SchemeAndroidIDE. java to prevent potential NullPointerException when the context is null
[ gr - 3773 ] use application classloader instead of custom system classloader.
sec - 1648 : modify grantedauthorities method should return a list instead of void.
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added new test classes for ` RawJaxrs
add querytimeout support to the hikariconfiglapparamconnection ( ) method.
added DataProviders for general and supplementary character tests in XslSubstringTest. java to enhance test coverage for substring extraction functionality in
replaced ` eventWriter. close ( ) ` with ` delegateEventWriter. close ( ) ` in ` StaxEventItemWriter ` and
added support for MariaDB sequences in the CreateSequenceGenerator class to ensure compatibility with different database versions and improve sequence generation logic
updated string concatenation syntax in multiple files to improve code readability and maintain consistency
added ` TableDataManagerProvider. setServerMetrics ( new ServerMetrics ( new MetricsRegistry ( ) ) ) ` in multiple test files to ensure
added support for MFL extension configuration in SSLExtension to enhance compatibility with additional SSL extensions
updated generic type from'T'to'ObjectHashSetIterator'for improved type safety to enhance code clarity and maintainability by using a more
updated character count from 22 to 23 in Compose. java and TweetFragment. java to ensure the character count accurately reflects the
[ kairosdb ] add datapoint ttl to cassandra datastore
modified ` checkForAndKillXcodeIfRunning ` method to accept an optional parameter for prompting to enhance flexibility in prompting when Xcode is not
add a method to get terraing at a cell coordinate in terraingrid.
added default value printing in expression handling in ` Pretty. java ` and created a new class ` T6665791. java ` to
added error handling for missing quest encryption keys in ResourceLoader to improve robustness by logging an error when the key is not found
updated the return statement to check if push is not supported to ensure proper handling of push support scenarios in the HTTP transport
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
added a method call to sign block capsule based on local witnesses to ensure that the block capsule includes the correct local witness
modify return statement in FileSystemView to handle empty root lists and improve security checks in Win32ShellFolder2 to enhance robustness by ensuring
updated row height retrieval and refactored the ` copyContent ` method to ` copyLastRow ` in ` ColumnText. java ` to
updated ListFragment to use SparseArray for storing notes and improved handling of notes to enhance performance and maintainability of the code
[ fix # 8470 ] fix uploadbackupdata ( # 8470 )
added a null check for data in bug8024061. java to ensure that the method returns a non - null data to avoid potential
no effective change - remove file
replaced the Padding class with a Rect class in AppWidgetResizeFrame. java and Launcher. java to simplify padding handling and improve compatibility with
refactor static MethodHandle initialization in NashornBeansLinker. java to use a static block and add consStringFilter method to improve code readability and
refactor ClassGraph and ScanResult classes to improve code clarity and maintainability
updated the variable name from ` latch ` to ` goAwayLatch ` in ` IdleTimeoutTest. java ` to clarify the purpose of
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest. java ` to improve clarity and
replaced calls to ` Workbook. currentBook. set ( ) ` with ` Workbook. currentBook = book ` across multiple files to
modified the ` vote ` method in ` ContactSecurityVoter ` to accept a ` Class ` parameter and added validation to ensure that the object
removed unused imports from DataLoader. java to improve code cleanliness and reduce unnecessary dependencies
added rowsAffected parameter to the postUpdateLog method in multiple classes to allow more flexible logging of updates based on the number of affected rows
ggb - 2118 fix margin for dock panel with scaling.
set default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration to improve application stability by allowing more flexible fPS
added assertions to track and release objects in HdfsTransactionLog and TransactionLog to ensure proper resource management and prevent memory leaks
replaced DefaultWebSocketFrame with ChannelFutureListener in DefaultHttpServer to ensure proper handling of WebSocket frame closures
added OnStateMachineError handling in the state machine event tests to ensure proper error handling for state machine events
replaced finish ( ) with setListBackground ( ) and added a method to set the background color for the list to improve code clarity and ensure the
replaced the Apache Commons StringUtils import with OpenHAB StringUtils and added a null check for the'line'variable to ensure compatibility with OpenH
added an accumulate method to the JavaUserDefinedAggFunctions class to facilitate the accumulation of weights based on user - defined metrics
updated formatting in Put. java and ReplicationSink. java to improve code readability and maintainability
replaced the VALID _ CACHE _ SET set with REGEXP _ CACHE to improve performance by caching compiled regular expressions
added a static method ` reset ` to the ` GameThread ` class to reset the game thread state
added a login method to DigestAuthenticator that checks the realm against the login service to ensure that the login service is validated against the correct realm
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance code readability and maintainability while ensuring proper handling of null values
updated logging messages to use ` lc ` instead of ` hiddenSingleton ` to ensure consistency in logging output
fix race condition in commitlog and ha service
added a condition to exclude Android O devices in PhotoViewerActivity. java to ensure compatibility with devices running Android O and above
update schemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerTest to ensure compatibility with the latest SchemaInfoLevel requirements
replaced XMLStreamWriter with a buffered output stream in SaveTask. java and removed writeEndElement call in VizModel. java to improve performance by
replaced direct byte array conversion with UTF - 8 encoding in TestPayloads. java to ensure proper handling of Unicode strings with UTF - 8 encoding
fix mc - 103516 by return false for entity that don't exist.
added Tomcat 10ContainerAdapter and Tomcat101ContainerAdapter to the list in ProbeConfig. java to support new container adapters in the application
[ drools - 5 ] fix marshalling of multiaccumulate in protobuf
refactor switch case handling in NowSearchTerm and SearchTermBuilder classes to improve code readability and maintainability
pdfbox - 4071 : remove public modifier from class pdfcloneutility
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for URL resolution to improve code clarity and maintainability by using Spring's
added a new method ` newResponseBuilder ` to facilitate the creation of ` ResponseBuilder ` based on SolrQueryResponse parameters
added notification for command start status in AsyncBackgroundTaskManagerTest to ensure that command start notifications are properly sent to the manager
added a ` recomputePreviewDrawingParams ` method to ` PreviewItemManager ` and modified the ` computePreviewDrawingParams ` method to include
refactor tokenizer and filter handling in LukeRequestHandler. java to improve code clarity and maintainability by consolidating tokenizer and filter functionalities
replaced null checks for'plot ','generator ', and'hotspot'with ParamChecks. nullNotPermitted to improve code
modified the ` createSubContext ` method to accept an optional verbosity parameter to enhance flexibility in output based on the verbosity setting
added schema case - insensitive check for Oracle database type to ensure compatibility with Oracle database types
log4j2 - 1349 fix intermittent test failure
added a new file TestShrinkToOneRegion. java that includes a main method that calls System. gc ( ) to ensure proper resource management
replace string. split ( string, ", " ) with Splitter. on ( ',') in SandboxTestRunner. java to
updated encoding of CONTEXTS _ FIELD _ NAME in AnalyzingInfixSuggester and added a new test for binary context in AnalyzingIn
updated the encoding mechanism for local attachments in PushsaferMessageBuilder. java to ensure correct content type is used for local attachments
remove the ` ` usage'' command from the ` showLabelStats ` command and replace ` provenanceHash ` with ` jsonResult `
pdfbox - 4071 : remove unneeded null check, a suggest by valerybokov
refactor FORMATTER string concatenation in multiple test classes to improve readability and maintainability of the code
replace Math. round ( i ) with BigDecimal. valueOf ( n ) in UDFRound. java to improve precision in rounding calculations
updated GraalJSScriptEngineFactory to use ConfigParser for configuration to improve flexibility and maintainability of configuration handling
changed classes Test1 and Test2 from package - private to public to allow access to these classes from other packages
updated permission messages and variable names in PlayerEventListener. java to enhance clarity and consistency in permission handling
fix ( sql ) : improve performance of conditionandor and conditionandor
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` BaseNorms
added random shapes to Box2DCharacterControllerTest and reset frictions for contacts in Box2DCharacterControllerTest to enhance the
added tests for memory option " globalbuffersize " and " threadbuffersize " in TestBadOptionValues. java to ensure correct handling of
removed unnecessary checks for " must be a multiple of 8 " in ObjectAlignment. java and Options. java to streamline code by eliminating
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs `, ` AndroidInstrumentationTest `, and ` Default
refactor methods in DocHelper class to improve code readability and maintainability
updated the instantiation of acceptableThrowawayItems to use a new ArrayList of items to ensure that the acceptableThrowawayItems setting can be reorgan
replaced the use of ` mh1. < boolean > ` and ` mh2. < char > ` and ` mh1. invokeExact
don't starve when a lot of fetcher thread be use
updated the Inflection class implementation to improve performance and accuracy of the algorithm
added methods to retrieve and set the locale in EvaluationContext to enhance flexibility in locale management within the application
removed an unused import of Plugin in SummaryPrinter. java to streamline the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity. java to terminate a loop or switch case execution flow
replaced ` where ` import with a wildcard import and updated debug logging to use ` query. getQueryObject ( ) ` instead of ` where `
ww - 4068 add a system property ` ` xwork. loggerfactory'' to allow configuration of the logger factory.
test : fix typo in adminaddpeerwithp2pdisabledacceptancetest
polish ` ` livenessstatehealthindicator'' and ` ` readinessstatehealthindicator''
added concurrent map implementation for NoWriteLocalPStore in LocalPStoreProvider to ensure proper handling of PStore configurations during write operations
changed the access modifier of the deleteFiles method from package - private to private to restrict access to the method and improve encapsulation
[ api ] rename provider to serviceprovider to avoid confusion.
[ gr - 34494 ] do not throw an exception if a field do not exist.
added methods to check if a toolchain is created based on its name to ensure that the daemon correctly references the Android SDK when toolchain is present
do not add context to engine if it be already add to the engine.
abstractcheckdescriptor : use contains ( ) instead of indexOf ( )
PrebuiltCxxLibraryDescription and PrebuiltCxxLibraryBuilder to use exported linker flags to ensure correct linking for shared libraries
updated the ` updateRecentsRotation ` method implementation in the ` AbsSwipeUpHandler ` and ` RecentsView ` classes to improve clarity
updated listener type parameters to use wildcard generics in multiple classes to improve type safety and eliminate unchecked warnings
include the hash of the new block in the split point to ensure the correct block hash is used for processing split points
[ hotfix ] use getstorepathphysic instead of getstorepathcommitlog
remove unnecessary try - with - resources when creating JvmGcMetrics instance
hbase - 15801 addendum for get message count in compactionlog ( chaohui )
hhh - 1782 annotation to deprecate class.
added a method to check for the system UI package and shell command for keyguard status view to ensure proper handling of system UI objects in the
changed logger from static to instance level in SessionRegistryImpl. java to allow multiple instances of SessionRegistryImpl to be accessed without an instance of
added a check in InMemoryCookieStore to return false if the cookieJar is empty to ensure proper handling of empty cookies in the application
fix ( bonsai ) : don't clear storage to clear bonsai state
changed the parameter type of getText from String to CharSequence in ITextRepository, LimitedSizeCacheTextRepository, and NoCacheTextRepository classes
[ java ] ignoring a test that be not yet implement in firefox.
added error handling in the connection establishment block to ensure proper resource management and prevent potential memory leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to improve clarity and
added synchronization to the DbTxnManager class to ensure thread safety when shutting down the transaction manager
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced ` wrapWithTracingAndCancellation ` method
added a method ` updateFirstLineShowing ( ) ` in ` TextArea. java ` to update the first line displayed for drag - and -
added file system and staging directories to configurationOverlay in TestInformationSchemaWithPrivilege. java to ensure proper configuration for MapReduce and staging environments
refactor graphics configuration retrieval logic in Component. java to improve clarity and efficiency in obtaining the graphics configuration
tika - 2184 -- allow oom to be use in legacy mode, and remove it from tika - cli
camel - 16400 : fix the issue that camel - spring - boot do not work when use camel - main
updated PrintTagList. java to load the model and tag from the parser instead of splitting it to enhance functionality by allowing users to specify a model
updated ` getFullyQualifiedName ( ) ` method to ` toString ( ) ` in ` InsertDeParser. java ` and added a new test
http : / / issues. apache. org / jira / browse / amq - 3682 - check for eofexception in journalcor
[ java ] remove dead code in startfromtruncatedrecordinglogtest.
changed the calculation of arc and outer rectangle in LineBorder. java to improve accuracy in rounded rectangle calculations
added a check for null or empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter. java to avoid potential NullPointerExceptions when galleryImages is
updated deployment ID handling in the StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator classes to ensure consistent deployment ID generation and improve data
pdfbox - 2576 : fix typo in usage message
removed the ` false ` parameter from the ` getIndex ` and ` canUseIndex ` methods to simplify method signatures and improve code clarity
added provisional engines management in QuickfixjComponent and corresponding tests in QuickfixjComponentTest to ensure that provisional engines are properly managed
added ` displayZoomControls ` and modified ` setMixedContentMode ` and ` setDisplayZoomControls ` methods in ` RoboWebSettings `
added corporea, corporea - slab, corporea - spark and corporea - slab
refactor ConnectionFactory methods for improved connection handling to enhance performance and maintainability of the connection logic
added ` EnableDisableMenuItems ( ) ` method to ` GpsMainActivity ` to enable menu items based on user settings to improve user interface
updated the message for empty lists from " server _ search " to " favorite _ list " to improve clarity and consistency in the user interface
hhh - 14613 fix broken unit test due to service registry change
added auto - resizing mode for the table in MotorMountConfigurationPanel and changed the instance of MotorMountConfigurationPanel to use a new
updated LINE _ SEPARATOR to use system properties instead of a static method to enhance flexibility by allowing different line separators
added getter and setter methods for creator and subject in POIXMLProperties. java and updated imports in TestPOIXMLProperties. java to enhance
updated the doStop method call in HandlerWrapper. java to ensure proper handling of the doStop process
[ java ] don't attempt to read a file that don't exist.
changed the implementation of the ` NonMarkedFoo ` and ` Marker ` interfaces from ` Foo ` to ` FooCommand ` to improve clarity and
added support for processing ". jmod " files in the ClassFileSourceImpl class to ensure correct processing of jmod files in the specified
updated TreeBackedElement and related classes to use nullable types and added Preconditions checks to improve code robustness by ensuring non - null values
replaced ` Saml2TokenGranterTest ` with ` PublicTokenRequest ` in ` Saml2TokenGranterTest `
updated the method to use ` valueRangeObject ` instead of ` arrayLength ` to ensure the correct range is added to the list
added sync calls in ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization during data access operations
add a check for EGL14. eglGetCurrentContext ( ) to ensure that the current context is not null
[ drools - 49 ] ruleflowgroup activation should be remove if the ruleflowgroup be active
added a return statement in HystrixDashboardConfiguration. java to ensure proper flow control in HystrixDashboardConfiguration
removed unnecessary try - catch block in DropPipeProcedure. java and added an assertion in IoTDBPipeIT. java to improve error handling
fix clientqueuedisruptiontest. testclientqueues ( )
refactor : use defaultjavaprettyprinter in ctreferenceimpl. getsignature ( )
changed the access modifier of the validateInstance method from public to protected to restrict access to the validateInstance method for better encapsulation
lucene - 6930 : refactored GeoPointField and its related classes to improve code clarity and maintainability by standardizing naming conventions
added a new class ` FakeBuildable ` that extends ` AbstractBuildable ` to provide a mock implementation for testing purposes
fix a nullpointerexception in guiingameforge and universalbucket
corrected the spelling of " rule path " to " rule timeseries " in TSParser. java and SQLParserTest. java to ensure consistency
added a check to return 0 if the velocity is less than an EPSILON to ensure that the calculated value does not exceed the defined tolerance
replaced calls to getBucket ( gcsUri ) with BlobInfo in GcsPinotFS. java to improve code clarity and maintainability by
removed redundant call to blockCloseVertxByName in TestHighwayTransport. java to streamline code by eliminating redundancy
# 2496 - enh : support postgres history view ( # 2497 )
updated the parameter in the checkEngine method from 2 to 3 to correct the expected output for the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest. java to temporarily disable tests that needs to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand. java ` and added a new class ` ParserState
updated objectQuotingStrategy initialization in ChangeSet. java and DatabaseChangeLog. java to ensure proper quoting strategy is set based on change log
replaced ` MetainfoParser. parse ` with ` MetainfoParser. fromXmlStream ` in ` SliderAppsViewControllerImpl.
deleted the CsrfControllerAdvice. java file to remove unused or redundant code
fix for ant - djava. endorsed. dirs and ant - djava. endorsed. dirs
added scrim animation functionality to the background components in the launcher to enhance user experience by providing smoother transitions when the screen is off and
updated long comparison logic in TypeInferenceUtils and added new parameters in TypeInferenceUtilsTest to improve precision of long parsing and enhance test coverage
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added validation for path types in WindowsPathParser and updated test cases in PathOps to ensure correct handling of path formats and improve error handling for
port in promisusansansansansansansansansans
replaced multiple instances of ` writer. close ( ) ` with ` writer. close ( ) ` in ` TestWildcard. java ` to ensure
return nBits. clone ( ) instead of nBits. clone ( ) in IndexColorModel. java to ensure that the original nBits
changed the access modifier of ` deriveCollectorName ` from private to protected in ` ProfilerCollector ` and added assertions in ` TestProfilerCollector
datamongo - 2043 - fix type hint for simple type conversion
added performance measurement to ProxyMaker to measure performance for proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine. java to suppress unchecked warnings and improve code clarity
updated exception handling in TCPConnection. java to include the exception as a parameter to improve error reporting and provide more context for connection issues
refactor reinflateWidgetsIfNecessary ( ) method to improve widget management to enhance code clarity and maintainability by encapsulating widget logic
added a new test class ` DeleteInsideFileDialogTest ` to verify the functionality of file deletion in a dialog to ensure that the right - click
don't auto - flush when renderable be set to false
update instructorstudentlistpageuitest to make it work on student list page
fix test ignorance test _ ignorance _ ignore _ environment _ variables
removed the'pointer'parameter from the fling method in ScrollPane. java to simplify the fling method signature for better usability
updated QueryDslJpaRepository to handle null pageable case to ensure that null pageable values are handled correctly in the repository
[ hotfix ] [ runtime ] add memorymanager. computememorysize ( double fraction )
jms - publisher : increase test timeout to 20 second
refactor SnowballAnalyzer class to improve code readability and maintainability
updated previous index handling in StreamingAggTemplate. java to ensure proper indexing and avoid null pointer exceptions
improve error message when plugin receiver be null
added a new method ` stream ` to the ` StreamSupplierComponent ` class that uses ` computeIntensityDefault ( ) ` to provide a
updated log messages to indicate whether the file has been watched or has been fully played to improve clarity and accuracy of log messages regarding file movement failures
replaced the ` setAccessable ` method with a new ` newInstance ` method in ` InjectorProxy ` and ` ReflectionUtil ` classes to enhance
[ hotfix ] [ stream ] fix resource leak in flinkstreamingcreatefunction
added unit tests for various SQL statement formats in various test classes to ensure correct parsing and deparsing of SQL statements in the parser
replace return null with return ImmutableList. of ( ) in AppleTest. java to improve code clarity by returning an immutable list instead of null
updated the formatting of the test data in NamedSetTest. java to improve clarity and accuracy of test results
added handling for websocketReconnect in DeconzBridgeHandler and improved connection logic in WebSocketConnection to ensure proper websocket connection handling and improve logging clarity
replaced calls to ` setAttribute ` with ` removeAttribute ` for authentication and target URL keys to streamline session management by removing unnecessary authentication and target URLs
addendum to fix flaky testregionreplicreplicationendpoint
disabled PMS configuration in FormatRecognitionTest to ensure compatibility with recent media formats
fix ov disk template upload issue
updated import statements and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests. java to improve test configuration and ensure compatibility with JUnit4 testing framework
added @ Override annotations in CentralAuthenticationServiceImpl, RemoteCentralAuthenticationService, and NoOpLockingStrategy classes to ensure proper method overriding and improve code
updated SQL table and view creation statements in AppendOnlySchemaIT. java to ensure correct data handling and improve upsert functionality
added a check to ensure deleted documents count does not match the expected count in SegmentReader. java to prevent runtime errors caused by mismatched document
add more information to the sip communicator jain sip logger.
updated version number from 1.09 to 0.9 for staves w / no starting barline in FilamentFactory. java to ensure compliance with
set handleFileUploads to true in VertxPlatformHttpServerConfiguration to enable file upload handling in the HTTP server
added a test for verifying case - sensitive access controls in CsrfFilter to ensure proper handling of sensitive methods in CSRF protection matchers
replace fields. callsitetargetfield with field in hotspotobjectconstantimpl
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming
[ hotfix ] fix watermark issue in fileio
fix npe in bsqctesstatement. copy ( context )
added import statement for ResultSetMetaData in QueryCompilerTest. java to utilize ResultSetMetaData functionality in query compilation
updated the library command from ` -- out % s % s ` to ` -- root % s ` to ensure the correct root path is used
updated the angle slider in the RailButtonConfig to use - Math. PI instead of 180 to improve the responsiveness of the slider by
fix an issue with the player not be able to save data on close.
added expressionLanguageSupported ( true ) to KerberosProperties. java to enable flexible language support for Kerberos properties
removed null check for remoteMountPointComponent before applying transformations to simplify the code and improve readability by eliminating unnecessary checks
updated the ` setupViews ` method to accept a ` ScrimView ` parameter to enhance animation by incorporating a scrim progress
[ log4j2 - 2852 ] add configuration option to enable periodic materialization.
added value attribute to protocolparameter to allow for modification of the value.
add unit test for httpservletChunking with head
fix : add ` ` bumped : yes'' to checkrouteranswer
added a Content - Type header to the RequestDispatcher in SwitchToPostInterceptor. java and updated the request handling in SearchRequestUnitTest. java
refactor EmbeddedClientConnector class to improve code readability and maintainability
replaced SQLFeatureNotSupportedException with a warning log message in PhoenixResultSet. java to improve logging clarity and provide clearer feedback on ignoring setFetchSize
added multiple instances of AndroidNet in AndroidDaydream. java to initialize the network object with null values
[ sparc ] fix checkstyle issue in io / iotdb / iotdb / segment / LLRealtimeSegmentDataManager
removed unnecessary'false'parameter from getDepositAddresses method calls to simplify method calls and improve code readability
hbase - 19836 : fix javadoc warning in tablemapreduceutil
added a boolean flag ` inflationFailed ` in ` DesignerActivity ` and made the ` root ` variable final in ` XMLLayoutInflater ` to
refactor PushbackInputStream class to improve code readability and maintainability
loweringtool should be an abstract class, not a concrete class.
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to improve clarity of error
fix makefile ( makefiles )
updated the getDeletedDocs method to use MultiFields and improved null check for delDocs to enhance code robustness and prevent potential NullPointerExceptions
updated the ` setTransformRefresh ( ) ` method to include ` refreshFlags ` and ` boundRefresh ( ) ` to ensure proper refresh behavior
do not insert safepoints if cfunction annotation be present.
added framebuffer size change listener to lwjglwindow. setwindowsizechanged
updated animation properties for parallax effects in LauncherAppTransitionManagerImpl. java to improve animation responsiveness for better user experience
updated the ` LiteralNode ` class to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to improve type safety and clarity in
added methods to set the file and output stream lengths in CompoundFileWriter, FSDirectory, and IndexOutput classes to enhance file handling and ensure consistent
updated AndroidNdkScriptGenerator and AntScriptGenerator to append " memcpy _ wrap. c " and modified imports in Lwjgl
camel - aws2 - s3 : use sourcebucket ( ) instead of copysource ( )
added handling for " * " permission in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to enhance authorization checks and ensure
updated ZookeeperClientServerRegisterRepository to handle null or empty data cases and improved type handling for URI registration to enhance robustness by ensuring
replaced instances of ` makeDeepMock ` with ` deepStub ` in ` ReturnsDeepStubs. java ` to improve clarity and consistency in
updated getCallValue ( ) method to return a empty string if the size of the call is zero to ensure that a zero - length string is
bibentry. parsedate now use placeholder instead of string. get ( )
added exception handling to the ` mapPBEAlgorithmToOID ` method and changed the algorithm name from " PBEWithHmacSHA1
rename variable ` length ` to ` inputLength ` for clarity to improve code readability and maintainability by using a more descriptive variable name
added validation for job parameters in CommandLineJobRunner to ensure parameters are valid and provide clearer error messages
remove the carriage return character from the assertion in SmtpTests and MailTests to ensure the assertion verifies the expected output
updated case statements in ExtendedConnectionDataSourceProxy to use diamond operator to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID retrieval to improve concurrency and maintainability of sequence ID generation
added a new file ` Test. java ` that includes a static method ` sum ( ) ` to provide a utility for computing the sum of
updated minimum and maximum SDK versions in ShadowWifiManagerTest and modified access modifiers in WifiUsabilityStatsEntryBuilder to ensure compatibility with newer Android
added a new Java file containing a solution for searching and sorting queries to implement a solution that outputs " YES NO " or " NO " based
fix broken test. patch by jbellis
refactor taskbar recreate logic to use a boolean for orientation changes to improve clarity and maintainability of the taskbar management logic
refactor SyncFutureCache implementation to improve performance and maintainability of the code
updated the default DUBBO protocol version from " 2.0. 1 " to " 2.0. 2 " and updated the response ATTATCHMENT
pmd : fix false positive with uselessstringvalueof
added a test for Ellipse NoseCone dragging functionality in SymmetricComponentCalcTest. java to ensure that the NoseCone
add a targetmaxtypeshardsize parameter to hollowproducer. builder.
added support for version " 5.5. 2 - cfs " and " 5.5. 2 - nocfs " in TestBackwardsCompatibility.
[ hotfix ] [ doc ] fix typo in compilationtask javadoc
added a comment to indicate that location is not shown in test mode and improved parameter handling in DDLTask to enhance test reliability by ens
added a call to execute ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to ensure proper clearing of database change log tables
added version handling in the RestClient and CallPath classes to ensure compatibility with CallSpec versioning and improve service URL generation
updated error handling and closed state management in PhoenixDriver. java to improve clarity of error messages and ensure proper resource management
* don't throw unsupportedoperationexception in touchapp. show ( )
added a new ` after ` method to delete all files in ` ConflictsResolveActivityIT ` and extended ` FolderPickerActivityIT ` to
[ gr - 34494 ] do not remove phase in compilequeue if devmode be enable.
added a check for non - negative length in the StringHelper class and implemented unit tests for the removeLeadingAndEndingQuotes method to ensure
refactor JpaQueryCreator to use a more descriptive variable name for keyword types to improve code readability and maintainability by using a more descriptive
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5582
added a call to dispatch a new P25Message instance to enhance message processing by incorporating additional parameters
added null checks for handler and handler in WebSocketImpl. java to ensure proper handling of WebSocket connections when the socket is closed
[ ds - 3852 ] fix test failure in discoveryit
refactor widget padding calculations in AppWidgetResizeFrame and Launcher classes to improve widget padding accuracy and maintain consistency across widget implementations
added methods to hide all apps and close overlays in TaskbarUIController and TaskbarAllAppsController to improve user interface responsiveness by
replaced ` Thread. sleep ( ) ` with ` launcher. join ( ) ` and removed synchronization from the launch method to improve thread safety and
updated the calculation of the zoom - level point in JavaSEPort. java to ensure proper positioning based on the canvas's position
fixed crash on upload progress notification
fixed bug incessivepubliccount ; additional rule for static final field
hbase - 19836 [ thrift ] fix flaky testThrifthbasetablehandler. testhbasetable
change log level of half offset commit from info to debug
added exception handling for FileNotFoundException in ResourceUtils. java and changed logging level from debug to trace in AbstractCipherExecutor. java to improve error
added a new ` BittrexTickersResponse ` class and integrated it into ` BittrexMarketDataServiceRaw ` and ` Bitt
fix findbugs warning in entityentry. java
remove the endpoint's class from the session map to simplify the session registration process
updated the ` clist ` array to include additional characters to enhance character representation for better character recognition
added stylesheet handling in ResourceService and updated related methods in ResourceHandler and ResourceHandlerTest to improve resource management and ensure the correct stylesheet is set
added a call to clearIndex ( ) in TestFiltering. java to ensure that the index is cleared before further operations
changed method signature from " getAddress " to " PointerParameterStrategy. class " in X86MethodGenerator. java to ensure proper handling of pointer
updated condition to check for CockroachDatabase in CreateSequenceGenerator. java to ensure compatibility with Cockroach database in sequence generation
simplified conditional check for string name in ObjectStreamClass. java to improve code readability and maintainability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library. java ` and added a new ` SymbolNotFoundError ` class to
updated BinaryResponseWriter to conditionally use SolrDocument based on returnFields to improve flexibility in document handling based on field naming criteria
added WebSocket ping handling and a test for pausing WebSocket connections to enhance WebSocket functionality and ensure proper handling of ping and pong events
added a new regex pattern " - " to the NON _ IDENT _ ESCAPES string to ensure proper handling of special characters in regular expression
apply cache ttl to the authoritative dns server.
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to ensure that MessagingTracing is only activated when MessagingTracing is present
mondrian : fix test failure on db2
updated import statements in multiple Java files to streamline dependencies and improve code clarity
added a condition to handle the'/'character in XMLLightweightParser to ensure proper handling of file names when processing XML lightweight files
removed the visibility setting of GONE in TouchCharInput. java to streamline input handling by removing unnecessary visibility logic
added a null check for the current user before comparing the user ID to prevent potential NullPointerException when accessing the user ID
refactor slot setting logic in JSObjectLinker. java to handle missing keys to improve robustness by ensuring proper member assignment based on the provided
refactor DefaultUniqueTicketIdGenerator to remove suffix parameter and initialize randomStringGenerator with default values to simplify code and ensure unique ticket ID generation with
added a deprecation annotation to the SecurityConfig class to indicate that the class is outdated and should not be used in new code
added @ Deprecated ( forRemoval = true, since = " TODO " ) annotations to multiple Java files to indicate that these classes are outdated and
deleted the JoglDebugAdaptor. java file and replaced it with GuiceJoglDebug. java to simplify the codebase and focus on
camel - jbang - trace - aws : expose trace - id via environment variable.
added a PendingIntent to PendingIntent in FileDownloader and FileUploader classes to enhance notification functionality by using the PendingIntent for pending operations
refactor the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to introduce a ` set ( ) ` method to improve code readability and
refactor DateTimeFormatter class to improve code readability and maintainability
reformatted code for setting desktop properties to improve code readability and maintainability
added null and empty check for administrator credential in kerberosoperationhandler. setadministratorcredentials ( )
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and adjusted width based on device profile for tablet and two panel
added rendering calls in PSurfaceJOGL to ensure the correct window color is used during rendering
refactor Hashing class implementation to improve performance and maintainability of the hashing algorithm
modified the accept method to include a folder path parameter in the FileSenderFactory class to enhance file validation by ensuring the correct file name is
updated UserInfoActivity to include user info strings instead of drawable resources to improve internationalization support and provide more informative user information
added a null check for the type variable in J. java to ensure proper handling of null type cases
increased ACTIVITY _ START _ DELAY from 500 to 800 to improve the responsiveness of activity transitions
added a constant WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to improve code clarity and maintain
reset the selectedMotorSet variable and clear selection logic in ThrustCurveMotorSelectionPanel. java to improve code clarity and ensure proper selection
added BufferUtil import and called clearToFill method in ByteBufferPool. java to enhance buffer handling and improve code clarity
don't create notificationrule if the originator don't exist
change authorization to authentication in LDAP configuration files to align the application with the new authentication framework
fix for intermittent failure in durableontransient
[ hotfix ] [ test ] fix flaky testbulkslotallocationfulfilledwithnewslot
fixed pingservice to not close socket if connect fail.
refactor CompositeHandlerAdapter class to improve code readability and maintainability
refactor Quartz2Adapter class to improve code readability to enhance maintainability and reduce technical debt
sulong : fix illegalstateexception when look up sulong library.
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the Spring Security 6.3 schema
updated NameResolver methods to accept Args parameter and modified DiscoveryClientNameResolver to use an argument for synchronization to enhance flexibility in handling different service instances
added conditional handling for non - empty annotations in JavacParser and created a new test class for annotated classes to ensure correct positioning of annotations based on
added " com. sun. naming. internal. " to CheckPackageAccess. java to enhance package access checks for internal classes
changed the default value of strict from false to true to enable strict mode for data processing
OfflineSorter to handle exhaustive reads by introducing a boolean parameter to improve the robustness of the readPartition method by ensuring only
refactor ActionResetingPool class to improve code readability and maintainability
updated the return logic in LightStateConverter to check if the light state is in XY mode to improve clarity and correctness of the state conversion logic
refactor CellLayout to improve folder creation radius calculations to enhance visual clarity and maintainability of folder creation logic
replaced calls to ` showLoadingDialog ( ) ` from ` FileDetailFragment ` and ` OCFileListFragment ` to streamline loading dialog handling
bugfix : don't throw npe if uigesturefile be miss
updated field naming test to use the system's default locale for matching to ensure consistent behavior across different locales in the test
added listener setting to the result in XmlSuite. java to ensure the correct listener is maintained during test execution
added a new method ` loadWithNewGlobal ` and modified existing method handles to enhance functionality by allowing dynamic loading of a new global function
added JSON string conversion methods to ` StarTreeIndexSpec ` and refactored tests in ` TableConfigTest ` to improve JSON handling and
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer and OAuth2 - related classes to ensure proper configuration handling and enhance security features
replace double quotes with single quotes in string replacement methods across multiple classes to ensure consistency in string replacement across different operating systems
[ drools - 561 ] fix npe in in operator ( # 561 )
added import for FieldCache and modified commit method to purge field cache to avoid FC insanity when there's more than one segment in
act - 1187 : add test for message boundary event on subprocess and subprocess
updated method signatures to include a target parameter in ` resolveInterfaceOrVirtualCall ` and ` resolveStaticCall ` to enhance method resolution for static
http : / / issues. apache. org / jira / browse / amq - 2576 - add messagegrouphashbucketcount property to
added slot ID constants and updated method signatures in Secmod. java to improve code readability and maintainability by using named constants
added alignment support to the add method in Layout. java and modified the startRenderering method in GdxRenderer. java to improve layout handling and
[ hotfix ] ignore unalignedcheckpointitcase in unalignedcheckpointitcase
added checks for class types in JDK13Services. java to ensure that only relevant classes are processed
added a check to ensure the key ` htmlFilename ` is not already in the ` keywordToReference ` map to prevent duplicate entries in the
camel - core : fixed arrayindexoutofboundsexception in multicastprocessor.
removed unused methods from SegToken and SegGraph classes to streamline code and improve maintainability
fix telegraf character escape in flavorstatsdlinebuilder ( # 644 )
add udp port and port setter to member package, and update exception message for incompatible package usage.
rename operatormulticast to operationmulticast to avoid confusion.
increased the send timeout from 1 second to 100 milliseconds in EventBusTracerTestBase. java to improve test reliability by allowing more time for
added a try - finally block around the node start operation to ensure proper resource management and prevent potential resource leaks
hhh - 14748 remove listener registration from sessionfactoryserviceregistryimpl. destroy ( )
simonstewart : fix flaky test
[ pytorch ] [ test ] add test for tuple and map of tensor
added TaskStackChangeListener to clear the visible flag when the pinned stack animation starts
pdfbox - 2852 : don't optimize checkdatepattern if date pattern be present
camel - 14263 : camel - cxf should use source code generate configurer to avoid reflection configuration.
refactor animation handling by introducing endPendingAnimation method to improve code readability and encapsulate animation removal logic
added logging for duration calculations in LauncherAnimationRunner to improve debugging and traceability of play time duration
add a conditional check for Bailouts on exception in C1XCompilation. java and introduce a new boolean flag BailoutOnException
initialized signup and passwd variables to null in Links. java and updated corresponding assertions in IdentityZoneConfigurationBootstrapTests. java to ensure default values are
[ hotfix ] rename slotprofile. getpreviousexecutiongraphallocations to getreservedallocations
ww - 3833 fixed timeconverter. onlyformat not be able to parse date.
[ geotiff ] fix npe in tiff reader when no data
sulong : fix null pointer exception in sulong.
replaced ` out. toString ( ) ` with ` new String ( out. toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
replace blocking calls to blockUntilConnected ( ) with a CountDownLatch to ensure that the client correctly waits for connected connections
added null check for the array parameter in the ArrayTypeHandler class to prevent potential NullPointerExceptions when the array is null
replaced the use of ` RegexpTunnel. getPrefix ` with reflection in ` JakartaRegexpCapabilities. java ` to improve flexibility in
updated the application pick method to use the Application class instead of null to ensure compatibility with the new application configuration
[ drools - 5 ] avoid npe on mutablelistener of global
replaced ` Preconditions. checkNotNull ` with ` TransactionUtil. validAssetName ` and ` TransactionUtil. validAssetName ` and ` TransactionUtil
don't copy all node in copypaste if there be only one in the conel
updated label and property properties in LGWebOSUpnpDiscoveryParticipant and LGWebOSHandler classes to improve clarity of status messages and
updated node configuration methods to include seeds, active, and trust nodes to ensure that only relevant nodes are included in the configuration
added additional assertions and modified thread handling in BaseTokenStreamTestCase. java to improve error handling and ensure proper thread execution
[ log4j2 - 2852 ] fix log4j2 - 2853 : log4j2 - 2853
refactor ` performItemClick ` and ` performItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to improve code
pdfbox - 4892 : remove unneeded code, a suggest by valerybokov
graphdecoder # aftermethodscope should print a debug message if dump be enable.
refactor HttpSessionDestroyedEvent to use getSession ( ) for attribute retrieval and add unit tests for it to improve code clarity and ensure proper handling of security
updated import statements in HttpZipkinSpanReporterTest. java and added a test for setting a service name to ensure that the service name is
added logging and refactored SpoolMode handling in JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging and ensure correct behavior
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` to improve clarity and consistency in naming
increase timeout in clientmultimaplocktest. testmultimaplock ( )
added a new constant for a cache capacity in the ConfluentSchemaRegistryDeserializerProvider class to improve cache management and provide clearer configuration options
replaced JCheckBox for " Remind me later " with a new " CheckAtStartup " checkbox to improve user interface by providing a more descriptive
added methods for various strength configurations in NodeGenerator. java to enhance type specification for better clarity and usability
hhh - 147483 : fix a bug in cascadingactions. get ( ) when the parent entity be a hibernate proxy.
added constants for PROTO property name and updated method handles for GETPROTO and SETPROTOCHECK to improve code clarity and maintainability by
changed the default read mode from " heap " to " mmap " in CommonConstants. java and added logging in ImmutableSegmentLoader. java to
added import for ByteArrayTemplate and implemented logic to return the instance if the class type is byte to enhance functionality by ensuring byte class instances are
added a Hipchat property to the SamlServiceProviderProperties class and created a new CasSamlSPHipchatConfiguration class to
replaced ` List < URL > commandRegistryUrls ` with a ` Set < URL > commandRegistryUrls ` to improve uniqueness of command registry
updated warning log messages to include the current context and added detailed Throwable information to improve clarity of warning messages and enhance debugging capabilities
camel - 7999 : fixed username / password check issue with sftp connector
http : / / issues. apache. org / jira / browse / amq - 3195 - remove transaction manager from endpoint configuration
cloudstack : fix import in vmwareresource. java
refactor Timers class to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter. java ` to
removed deprecated generic types from UAX29URLEmailTokenizer and its constructors to streamline the code and encourage the use of updated alternatives
removed the Map interface from ScriptObject and replaced it with ScriptObject to simplify the class structure and improve type safety
refactor EventBusMetrics class to improve code readability and maintainability
[ ds - 3892 ] fix eperson locale support in i18nutil
replaced javax @ PostConstruct with InitializingBean in JaversTransactionalDecorator class to implement InitializingBean and ensure proper schema initialization
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify the code by eliminating unnecessary null check
added multiple server handlers in ScopedHandlerTest. java to ensure proper handling of server requests
add calltimeoutexception constructor to calltimeoutexception ( # 16518 )
sec - 1648 : fix npe in restloginprocessingfilter when username or password be empty
updated permission check from ` Objects. equals ` to ` * ` in ` CommandMap. java ` to ensure proper handling of permission nodes in
rename ` setEncoding ` to ` setSourceCharset ` and update related methods to improve clarity and consistency in character encoding handling
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and ` TerminalBridge `
refactor simulation handling in GeneralOptimizationDialog to use final variables to improve code clarity and ensure immutability of simulation data
camel - 15836 : camel - jbang - allow to configure whether to reload route by default.
updated log level settings in CommonTestUtils. java for improved logging consistency to enhance clarity and maintainability of log4j configurations
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment. java to improve code readability and maintainability
added a check for non - mark - supported input stream methods in RequestBody. java and created a corresponding test in RequestBodyTest. java to ensure
allow neo4j server to start without any connection
add ` ` prefab : player'' to movement debug command
updated the random method to accept a half length total weight instead of a fixed index to improve the randomness logic for weights based on the total
updated GsonParser to simplify cache string usage and improved date validation logic to enhance code clarity and ensure valid timestamps are handled correctly
updated sorting parameters for ` gcmsort ` and ` gcmdir ` in ` ApacheHttpClientMediaWikiApi. java ` to improve sorting
in consconsconsconscons
[ iotdb - 5652 ] pipe : use lock instead of lock ( # 5654 )
modify DependencyJar creation to conditionally use preinstrumented JARs based on system property to enhance flexibility in dependency resolution based on user - defined settings
modified the conditional check from " if (! isSilent ) " to " if ( isSilent ) " to ensure proper handling of
added validation for dynamic fields in IndexSchema. java and introduced a corresponding test in BadIndexSchemaTest. java to ensure that unsupported attributes are
don't randomly generate read repair message on digest mismatch. patch by jbellis
replaced ImmutableSortedSet with Iterables for including system include roots to improve handling of relative paths in the PrebuiltCxxLibrary implementation
refactor ` AdaptableX509CertSelector ` to initialize ` startDate `, ` endDate `, and introduce flags for sensitivity to enhance code
use abstractappender instead of try - catch block
gusscreenevent # getdisplayname ( ) deprecate in 1.16. 0
added methods to addToCategories, removeFromCategories, and addToNewCategories to improve category management functionality
# 2906 - enh : add type parameter to cachefactory. createcache ( )
refactor RocketComponent to use enhanced for - each loop for mass, CG, and CDO overrides to improve code readability and maintainability by
refactor JavaCompilerService to use post instead of doCompile and update compiler initialization to improve resource management and ensure proper closure of compiler instances
refactor ` MultiThreadedBuildRuleResolver ` to use ` Supplier < V > ` instead of abstract class ` Task < V > ` to improve
added synchronization to the executor execution in WanReplicationServiceImpl to ensure thread safety when shutting down the executor
added null checks for ` tPartition ` and ` table ` in ` Partition. java ` and ` DDLSemanticAnalyzer. java `
refactor code to use lambda expressions for improved readability to enhance code clarity and maintainability
added unit tests for file deletion functionality in FilesTest. java to ensure proper functionality of file deletion methods
removed unnecessary try - catch blocks around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify error handling and improve code clarity
updated class name validation from " java. lang. System " to " Logger. class. getName ( ) " to ensure accurate class identification
replaced ` this. currentWorkingDirectoryList. clear ( ) ` with ` addWorkingDir ( f. toString ( ) ) ` in ` Project
added a null check for the variable'cn'in ItemInfo. java and set insets in Workspace. java to ensure proper handling of null
changed the visibility of the String variable from public to private to restrict access to the string variable for better encapsulation
updated Java URL format in SimplePostTool. java to ensure compatibility with JSON - jar post configurations
apps - 2486 fix and add unit test for min / max command
refactor client container startup handling in JavaxWebSocketClientContainerProvider to improve error handling and ensure proper resource management during shutdown
updated conditional check from'&&'to'| |'in Linux. java to improve code readability and maintain logical flow
ensure that the web application context be clean up after each test.
added search functionality using a new method and improved variable handling in RemoteBrowseHandler. java to enhance user experience by providing dynamic search results based on
added a line to hide the neutral button in SetupEncryptionDialogFragment to enhance user interface by hiding the neutral button
add count ( distinct ) for collection in archive and withdrawn
updated SQL syntax in createTab _ stmt and columnDesc assignments to use single quotes to improve compatibility with SQL standards and prevent potential SQL injection issues
added handling for OAuth2 exceptions in CheckTokenEndpoint. java to improve error handling and logging for better debugging
updated method documentation in various classes to improve code clarity and maintainability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized type references to improve test reliability and ensure proper handling of identity
updated tooltip delays from 20 seconds to 10000 in ExtractionModelFrame. java and DataBrowser. java, and enhanced SQLConsole. java to
add support for run single test method with junit 5 ( ju5 )
changed exception handling from HumanReadableException to RuntimeException in WorkerShellStep. java to improve error handling by using a more general IOException type
[ hotfix ] [ core ] add experimental annotation for datastreamutils and socketstreamiterator
[ hotfix ] fix typo in streamcepstrumsource
updated index calculation to ensure it does not exceed the size of items to prevent index out - of - bounds errors
updated assertions to expect ` Parenthesis ` instead of ` OrExpression ` in ` CloneHelperTest. java ` to ensure that the expression is
added confirmation type to the DebugPaste command to enhance permission management for debugging commands
replace ` get ( ) ` with ` orElseThrow ( ) ` in endpoint management context configuration to improve error handling by providing clearer exception messages when
ggb - 2118 fix : prevent double click in algebra view ( e. g. mouse click )
updated GoBinaryDescription to use new imports and refactored class definitions to enhance code clarity and maintainability by utilizing immutables and
updated environment variable retrieval logic in Jooby. java to ensure proper handling of application environment configuration
updated SimpleRetryExceptionHandler to implement RetryListener instead of RetryListenerSupport to simplify exception handling by using a more appropriate listener implementation
add support for decimal in eicrometerregistry. write counter ( # 498 )
refactor Contribution class to use final fields for email and author to improve code clarity and maintainability by ensuring email and author are set
refactor loop to use a do - while loop for appending periods to improve code readability and maintainability by using a do - while loop
modify how elements are retrieved and instantiated from the fields map to ensure elements are only instantiated when the class is not LinkedList
enhanced error messages in ` StaxEventItemReader ` to include the URL to improve clarity and debugging by providing more context about the input resource
* testmultRendertarget now use pointlight array instead of geometry
added null check for currentProfile before retrieving a client to avoid potential NullPointerExceptions when the current profile is null
replaced target. addNamespaceDeclaration with newElement. addNamespaceDeclaration in SaajStaxWriter. java to ensure the namespace declaration is added
added BigInteger instances for cryptographic parameters in KeyStoreManager. java to enhance security by integrating additional cryptographic parameters
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape. java `
act - 5 : ensure process definition have correct engine version
updated property keys from " runtime. references. strict " to " resource. loaders. class " and " runtime. strict _ mode. enable
updated thread verification methods in CEntryPointSnippets. java and VMThreads. java to improve clarity and functionality of thread verification logic
added null check for maps in GenericUDFMapValues. java and created a corresponding test class TestGenericUDFMapValues. java to
rename " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests to improve clarity and consistency in naming conventions
added properties for oil well generation and enable oil spouts in the energy generator to improve configurability and control over oil well
added a check for the existence of ". clean - me " in the ImportContext and JobQueue classes to ensure that the clean - me
provide a good error message when a memory realm can't be read
removed unused import statements in CRLDistributionPointRevocationCheckerTests. java to clean up the code and improve readability
added import of ZipConstants64 in ZipEntry. java to streamline code by eliminating unnecessary static variables
refactor ` newFileSystem ` methods to improve file validation using ` Files. readAttributes ` to enhance robustness by ensuring only regular files are
replace JLabel preferred size with Box. createHorizontalGlue in IfControllerPanel. java to improve layout consistency and readability
refactor connection creation in FailoverUpdateURIsTest. java to improve code clarity and maintainability
added Gson annotations for baseUrl, mirrorsList, repoId, and repoName in ServiceOsSpecific. java to enable proper serialization and deserialization of
fix : delete a default book if a file deletion be successful
update copyright year for test / tools / javac / tools / javac
correct the calculation of the response buffer length in AbstractAjpProcessor. java to ensure the response does not exceed the expected buffer length
of - 2716 : admin console plugin now start / stop correctly.
refactor handler unregistration logic in WebSocketImplBase. java to improve code clarity and maintainability by using instance variables
added configuration properties for device ID transformation method, enable ID table, and table log file in IoTDBDescriptor. java to enhance configuration flexibility
increased the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and introduced a new DelayingSearchComponent class to improve test coverage
updated the condition for mockTsp in TestSignatureInfo. java to check for the validity of the timestamp URL to ensure that the timestamp URL
updated script creation to use ` witnessScript ` instead of ` data ` to ensure correct encoding of generated scripts for transactions
updated the expression in IndexSchema to include fieldType to enhance functionality by supporting additional field type expressions
added a null check for valueCompleter in Completers. java and created a new OptionCompleterTest. java file to ensure completers
[ hotfix ] fix checkstyle violation in s3utils
changed the data type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger data sets
refactor file upload logic by introducing a separate UploadFile method to improve code readability and maintainability by encapsulating file upload logic
removed unused imports and set the reply button alpha to 0.5 to improve code clarity and ensure the reply button is fully visible
updated the expected remote IP in AccessLogSupportTest. java to include the request date to ensure that the remote IP adheres to the
updated file path for maryCacheFile from " testfiles - deleteme " to " tmp / testfiles - deleteme " to ensure
remove null check for subscribers and simplify property change logic to improve code clarity and ensure proper handling of null subscribers
added a null check for the marshaller in AbstractSamlObjectBuilder. java and removed unused imports in AbstractSaml10ResponseView. java
replaced ` printStackTrace ( ) ` method calls with ` LogUtil. warn ( t ) ` in ` DataBrowser. java ` to improve logging
added a condition to check if the asset directory exists in development mode and created tests for handling non - existent assets to ensure proper handling of static
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend. put
updated the default format string in CoreLabel. java from " value - tag - index " to " value - index " to standardize format
updated GraphHopper initialization and hint settings in MainActivity. java to improve user experience by ensuring correct hint settings are applied for the d
change default value of ` useNative ` from false to true in multiple classes to ensure compatibility with modern Java practices and improve code clarity
rename duclssandboxtest to sandboxtest to avoid confusion.
( chore ) camel - cxf : use setexchange instead of log
make sentimentcostandgradient. forwardpropagatetree public
updated SQL query in JDBCExample. java to ensure consistency in SQL syntax to improve code readability and maintainability
defaultmodelvalidator : warn about miss file location for profile activation
refactor Style class to improve code readability to enhance maintainability and reduce technical debt
added zoom functionality to the ShareActivity by implementing back navigation key handling to enhance user experience by allowing navigation through the zoom feature
added a conditional check to skip processing for deprecated fields to improve performance by avoiding unnecessary processing when deprecated annotations are present
added animation handling and visibility control for the send layout to enhance user experience by providing smoother transitions during message display
[ hotfix ] fix checkstyle violation in hadoop - client module
added Progressable parameter to multiple methods in Utilities. java and PTFRowContainer. java to enhance functionality by allowing progress during writing operations
[ hotfix ] fix typo in sourcecoordinatorprovider log
remove a contribution from the panelByContribution list and update panel ordering and color updates to ensure that the contributions are properly removed and updated
refactored HyervisorTemplateAdapter to use HypervisorTemplateAdapter instead of HyervisorTemplateAdapter to improve clarity and consistency in template
added a check to set dPath based on the user's directory to ensure dPath is set only when it is not empty
defaultaudiosink : fix unsupported _ e _ ac3 _ joc channel count for passthrough v29
log4j2 - 1349 mapfilter no longer depend on mapmessage. getdatavalue
modified VerificationInOrderWithCallsTest. java file to improve test reliability and maintainability
modified the parameter order in setFromAxis method to correct the argument order to ensure proper functionality of the setFromAxis function
updated the constant name from " colelction. delim " to " collection. delim " to improve clarity and consistency in naming conventions
curatorframework : added test to check that listener be connect at start of server.
updated documentation for INTERSECTION type in DocRenderer. java and added new test cases in PHPCCDocumentationTest. java to enhance documentation clarity and
refactor logic in RecentsAnimationDeviceState to use a boolean variable for one - handed mode support to improve code readability and maintainability by
added an override for onDetachedFromWindow method in AppsCustomizePagedView. java to ensure proper cleanup of tasks when the window is
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors to allow users to specify a dictionary
replaced multiple instances of ` count ` with ` thrown = false ` in ` ResultSetTest. java ` to ensure that exceptions are correctly propagated
changed the default value of the message from " debug " to " " in the InitializeProjectMessage initialization to streamline the message for better clarity
phenomena test : use atomicboolean instead of atomicboolean
refactor tooltip text handling in ComponentTree and ComponentTreeRenderer classes to improve code clarity and maintainability by centralizing tooltip logic
increased timeout duration from 5 seconds to 10 seconds in zipkinServerIsUp ( ) method to allow more time for the zipkin server to
deviantart ripper now require deviantart username and password
replaced an array of Google - related fingerprint strings with a single string constant in PackageUtils. java to simplify the code and improve maintainability by
replaced ` commonApp. solutionBusiness ` with ` commonApp. createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtle
added a method to notify window state changes in WWindowPeer. java to improve event handling for window state changes
added emailDescription field to EntityGroupKeyContentFormatter and TestEntityGroupKeyEmailContentFormatter to store and retrieve the description of the email configuration
replace ` remove ( sel ) ` with ` data. remove ( sel ) ` in ` UserData. java ` to improve clarity by using
updated the ` getISO3Language ( ) ` method to handle empty language strings and improved error handling for locale retrieval to ensure that the method
refactor Liquibase to use ChangeLogParserFactory for parsing and validation to improve code clarity and maintainability by encapsulating validation logic
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when screen pinning is active
added functionality to display " No chart data available " and its description to improve user experience by providing clear indication of unavailable chart data
added synchronization around cookie management in Http1xServerResponse and Http2ServerResponseImpl to ensure thread safety during response handling
nettyresponse # sendchunkedinput don't flush the chunkedinput
updated header handling methods and test cases in Http2TestBase, TestHttp2Limits, and TestHttp2Section _ 8 _ 1 to
fixed - rlocalcachedmap. keySet ( ) and rlocalcachedmap. values ( ) and rlocalcachedmap. entrySet ( )
camel - jpa : ensure entitymanager be available when start the component
bullet physiccharacter : fix jump speed to match fall speed
added a null check for reparsedFunction in the syntax extensions condition to ensure proper handling of cases where reparsedFunction is null
refactor logging and order book handling in BitstampPusherService. java to improve readability and maintainability of the code
added deprecated methods to retrieve old upload segment HTTP and HTTPS URIs to improve code clarity and maintainability by removing outdated code
replaced ` dbCol. findOne ( ) ` with ` dbCol. findOne ( filter ) ` in MongoDbTailTrackingManager. java to
( chore ) camel - core : added fail test for predicate in language
added a boundToRange call to the alpha variable in RecentsView. java to ensure that the alpha value remains within valid range for rendering
update version string formatting in ManifestReversion. java to ensure consistency in versioning format
[ hotfix ] fix checkstyle violation in datasyncconfiguration
added import for JavaSnippetRepository and initialized the JavaSnippetRepository instance to ensure the Java snippet functionality is properly initialized
added a loop to update sums based on the number of time buckets in StarTreeRecordStoreCircularBufferImpl. java to ensure sums are
danielwagnerhall for release
camel - 18836 : camel - pgevent should use pgjdbc for execute list / notify sql
updated import statements from ` com. sun. syndication. syndication. synd ` to ` com. rometools.
added handling for Content - Length header in TransferCompletionHandler and updated NettyTransferAdapter initialization in NettyAsyncHttpProvider to ensure correct content length is
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
removed the constructor from EnhancedRuntimeException that accepts a String and Throwable as a cause to streamline the constructor by eliminating unnecessary parameters
make socketappendertest more robust against intermittent failure.
( chore ) camel - aws2 - dsl : remove unused component
updated method signatures and exception handling in ByteArray. java to enhance compatibility with JDK 8 and improve error logging
added a method to disable input proxy in RecentsAnimationWrapper to prevent processing of non - down motion events during animations
camel - 6770 : remove @ ignore from restletdomainservicetest
remove unused parameter ` currentindex ` from ` resizeAndRehashIfNeeded ` method
move module - info. java to com. hazelcast. test. modulepath
updated error messages in JavaLanguageServer. java and JavaServerConfiguration. java to improve clarity and accuracy of compiler creation process
replaced the menu item'open _ web'with'mute _ hashtags'in the TweetPager. java file to simplify the menu
updated method names and assertions in AncestorDescendantTests, Node, and HasParentNode classes to improve clarity and correctness of node assertions
fix for worldeditplayer. getblocky ( ) to always return 0
added PathNotExistException to the selfCheckDataTypes method to improve error handling for non - existent measurements in the InsertNode class
updated formatting in JavaCompiler. java to improve code readability and maintainability
[ hotfix ] [ table - common ] remove mailboxexecutor from abstractstreamoperatortefactory
hbase - 27877 addendum fix unauthorized settablestateinmeta / settablestate ( addendum )
updated mapping method in GatewayMetricFilterTests to use method references to improve code readability and maintainability
update theories class to use getjavaclass ( ). getclass ( ) instead of gettestclass ( ). getclass ( )
[ drools - 561 ] use lasttimedata instead of remoteitems in kieswatcher. delete ( )
adjusted the calculation for cell widths in DeviceProfile. java to improve layout responsiveness by accounting for cell padding
[ hotfix ] [ core ] add parent logger prefix to core option
fix bug in booleanscorer2
added a call to ` writer. forceMerge ( 1 ) ` in ` TestMultiPhraseEnum. java ` to optimize the merging process for
hhh - 147483 make session implement java. io. closeable.
refactor GetLocations class to improve code readability and maintainability
removed unnecessary stack trace calls in SchemaValidatorTask. java to streamline error handling and improve code clarity
replaced throw new UncheckedIOException ( e ) with an IOException ignore to improve error handling by ignoring unnecessary IOExceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with older Android versions
ruby flavor : use stringbuilder instead of switch
changed log level from warning to debug in DerbyDatabase. java and added null checks for username and password in BaseLiquibaseTask.
remove the usecaches = true parameter from the nio2endpoint.
updated the ` CasGeoLocationConfiguration ` class to use ` Resource ` instead of ` MaxmindProperties ` to improve compatibility with Spring '
updated test cases in InstructorFeedbackResultsPageUiTest to use a more descriptive view name to improve clarity and maintainability of test cases
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to ensure proper handling of query optimization based on the
remove public method from approvestore interface
added a download state management mechanism to prevent unintended downloads to improve user experience by preventing unintended download notifications
refactor view handling methods in TaskbarDragLayerController and AbstractFloatingView to improve code clarity and maintainability by using a more descriptive method
updated project version from " 1.0. 11 " to " 1.0. 13 " and modified copyright year in JFreeChartResources. java to reflect
replaced ` yield ( ) ` calls with ` Thread. yield ( ) ` in ` SyncThread. java ` to ensure consistent yield behavior across
refactor GsonBuilder class to improve code readability and maintainability
added null check for centerGeo before adding it to circleCenters to avoid potential NullPointerExceptions when centerGeo is null
use -- java. espressohome instead of -- espressooptions. espressohome
doc ( doc ) : fix javadoc error ( # 2858 )
changed the DeleteSessionAction class to be final and modified session timeout logic to enhance immutability and simplify session timeout management
renamed ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to improve clarity and consistency in exception naming conventions
modified ` JoinQParserPlugin `, ` SolrIndexSearcher `, ` SolrIndexSearcher `, and ` TestJoin ` classes to initialize
updated triggerMediaScan method to include the file parameter to enhance media scan functionality by associating it with the current file
removed conditional printing of test results in TestRunning. java to simplify test result processing based on verbosity settings
added custom G - code settings with text changes in MainWindow. java to enhance G - code functionality by ensuring custom G - code settings are
updated import statements and changed the writer initialization in AdditionalJaxbMappingProducerImpl. java to improve compatibility with XMLWriter and ensure proper character encoding
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future modifications
added imports for SolrTestCaseJ4 and resetExceptionIgnores in TestBadConfig. java to ensure proper exception handling during test execution
added a method to remove multiple fragments and hide the action bar to improve user experience by ensuring the action bar is properly removed from the fragment
added " ; " to the list of spanishTokens in TokenizerAnnotatorITest. java to ensure proper parsing of token sets in the
` ` content - range'header should always be ` ` byte''
updated gcode file and added new bounds assertions in VisualizerCanvas. java and GcodeView. java to improve test coverage and ensure correct
added support for new versions " 8.4. 0 - cfs " and " 8.4. 0 - nocfs " in TestBackwardsCompatibility
fix typo in assertions _ sync _ with _ InstanceOfAssertFactories _ Test. java to improve code readability and maintain consistency in formatting
added a condition to check if the query execution is done and the output stage is not null to ensure proper handling of query execution when the execution
integritycheck : fix ` ` link should refer to the correct file'' directory
added import for SolrClient and a private Map < String, List < SolrClient > > to the ChaosMonkey class to fac
fix npe in ` ` jdbcconfigstore'' configurationActivator. java
fixed a syntax error in the add method of the ListView to ensure proper functionality and maintain code consistency
add argument validation to the ExtensionTypeHeader constructor to ensure the type parameter is within - 128 to 127
pdfbox - 2576 : don't swallow ioexception, a suggest by val
updated PrometheusProperties to replace pushOnShutdown with pushOnShutdown and added getter and setter methods for pushOnShutdown to streamline the configuration
added error handling for trigger queue events in ReactiveStateMachineExecutor to improve robustness by ensuring exceptions are logged and handled correctly
added a test for multiple Python executable when the first path is used to ensure that the correct Python interpreter is set based on the specified path
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user interface by providing a default button for account registration
added a new configuration option for dynamic semi - join reduction in HiveConf. java and updated TezCompiler. java to include it to improve
include the exception cause when send forgot password, registration info email.
remove package - info. java from the util package
added a listableCollector method to ` OidcIdTokenClaimCollector ` and created unit tests for its functionality to enhance claim collection functionality
removed the private Vector2 and Vector2 declarations from Circle, Ellipse, Polygon, and Rectangle classes to streamline the code by eliminating
fix a nullpointerexception in registerandprocessbundleoperation.
refactor SslContextFactory to improve SSL configuration handling to enhance security and maintainability of the application
default _ max _ expectations of 5000 for unit test
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer error message for access confirmation errors
[ 3.0 ] fix classnotfoundexception when use non - default class loader ( # 9685 )
added a new parameter ` copyRowHeight ` and modified the ` shiftRows ` method to include an optional parameter ` copyRowHeight ` to
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods with ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods
updated translation handling in TaskViewUtils, TaskViewSimulator, and TaskView classes to improve animation responsiveness and streamline task view interactions
refactored assertions in Assertions. java to improve code readability and maintainability
added a return statement for the currentDateTimeFunction in multiple database classes to ensure that the currentDateTimeFunction is consistently used across different database implementations
added a method ` anonymousPath ` in ` IOUtils ` and updated logging in ` Log4jUtils ` to use this new method to improve
updated DigitalWellBeingToast to include remaining time as a parameter and added a method to retrieve the content description of tasks to enhance functionality by providing
hbase - 25836 addendum. wait for timeout when get meta location from catalog
refactor LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
fix : return null from stateconverterutil. defaultconversion ( state, typeclass )
updated BidirectionalOneToOneNPlusOneTest to use ClassImportIntegrator and added new test cases for fetching Post and PostDetails from Post
added a call to removeExtraEmptyScreen ( ) in Launcher and modified startSearchPageIndex initialization in LauncherModel to ensure proper handling of empty
fix for null pointer in indexedvaluemap.
updated string literals in GoogleLineChart and GooglePieChart from single quotes to double quotes to ensure consistency in value formatting across chart implementations
modified the logic for acquiring waitForBatches in SendingAccountor. java to ensure the correct number of batches processed before proceeding with
hbase - 25836 add g option to walprettyprinter to seek to in the file
updated the port number in the NettyTransceiver constructor from 1 to 0 to ensure the transceiver starts with a valid port
refactor event generation in SimpleReport to sort events before generating a report to ensure events are processed in a consistent order before generating a report
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` in ` CSVFileLoggerTest
add coref. doscore and coref. data for chinese benchmark test
don't check if the jids of the remote server be remote. jm - 1052
removed the @ JniImpl annotation from VM. java to improve code clarity and maintainability
updated method calls to use Protocol. CHECK _ BLOCKING instead of " http. plugin. check. blocking " and " http. plugin.
added a null check for video HDR format in FFMpegVideo. java and removed multiple debug print statements in MediaInfoParser. java
corrected a typo in the string array from " other _ package " to " other _ package2 " to ensure the test references the correct package
fix worldborder. setiameter ( ) and worldborder. setdiameter ( ).
hbase - 25836 hmaster # getwalgroupsreplicationstatus should check if the user can host region
make sure we remove the caller when the login event be successful
added instance configurations to the routing table tests for improved testing accuracy
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add test to prove that projectbuilder. build (...,...,...,... ) throw an exception
simplified the conditional check for oldProto and protoGetSwitches in PropertyMap. java to improve code readability and maintainability by reducing complexity
refactor DoorbirdInfo and ControllerConfiguration classes to use a single configId parameter instead of separate controllerId and configId to improve code clarity
replaced sessionFactory. close ( ) with session. close ( ) to ensure proper resource management during session closure
removed the check for ` service. isGenerateRefreshToken ( ) ` in the ` OidcConsentApprovalViewResolver ` to simplify the
removed debug print statement from Http2SolrClient. java to clean up the code and improve readability
updated BaggagePropagation to use NoopGetter for handling null values to improve code clarity and maintainability by using a custom interface
refactor ConditionalOnEnabledResourceChain class to improve code readability and maintainability
added a check for child count of the treeRoot in BarrowmanCalculator. java to ensure that the treeRoot has child elements before proceed
updated the method from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter. java `
updated log messages from " P1 " to " CN1 " and modified method signatures for better clarity to enhance readability and maintainability of the
change return values from " h : mm a " to " skeleton " in ShadowICU. java and its corresponding test in ShadowICU
removed the dependency on KeyguardManager in TouchInteractionService. java to simplify the conditional check for device lock status
server : fix npe if cloud. com - custom be not present in db
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel to improve handling of asynchronous file operations
[ java ] fix checkstyle issue in ` sigint `
use prepareboundinghandler instead of updatebylabelsize ( )
change return value from - 1 to 0 in Asset. java to correct the return value for better functionality
update computermBenchmark to use a lambda instead of an anonymous lambda
added a refresh listener to UploadListFragment to ensure the UI reflects the refresh state of the list
fix : use optional. empty ( ) instead of optional. empty ( )
replaced usage of ` ParticleEmitter. items [ i ] ` with ` ParticleEmitter. get ( i ) ` in ` ParticleEffect. java
[ ci skip ]
updated error message formatting in multiple files to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING to prevent further processing when the playback state changes
replaced ` findByPK ` method with ` findById ` method in ` DeleteServiceTest. java ` to simplify the retrieval of the service component desired
added a new class ` InnerClassFieldClash ` and updated ` Java2TypeScriptTranslator ` to handle the handling of inner class fields
added logging filter and follow redirect filter functionality to DockerClientFactory and DockerClientProfile to enhance Docker logging capabilities for better monitoring and debugging
replaced direct call to displayChanged with awtUnlock and awtLock in XToolkit. java to ensure thread safety during display changes
updated NationalizedScalarQueryTest to use SQLServer2008Dialect instead of DB2Dialect to ensure compatibility with SQL Server 2008 and improve
close input stream in OPCPackage and ZipHelper classes to ensure proper resource management and prevent potential memory leaks
changed the access modifier of the storeClassFile method from private to public to allow external access to the method for better encapsulation
added a new test class ` TestSortedSetDocValues ` and updated assertions in ` SingletonSortedSetDocValues ` to ensure proper handling of missing values
updated error messages in CGIHandler and added a new JavaVMCallbackHandler class to improve clarity of client error messages and enhance JavaVM's
added support for additional line endings in LineReaderImpl. java to enhance compatibility with different line endings in the code
replaced List with Set for hashCodes in multiple classes to improve performance and maintainability by using a more appropriate data structure
added a check to return early if the vertex count is zero to optimize performance by avoiding unnecessary processing when no vertex is available
updated the IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationErrorsTest classes to improve test clarity and ensure error messages
replace ` FileUtil. createData ` with ` FileUtil. createFolder ` in ` MacroService. java ` to improve clarity by using a
remove unused import from TypeSystem. java to improve code cleanliness
refactor JsonObject class to improve code readability and maintainability
updated conditional logic in SelectChannelEndPoint and HttpConnection to improve clarity and correctness of idle time checks
fix farmlandblock. cansustainplant return false for vanilla plantable state
added primary key verification for SALTEDTABLE123 in QueryDatabaseMetaDataIT. java to ensure database integrity by verifying primary keys
updated date formatting in HttpCookie. java and added a new B6791927. java file to ensure consistent date formatting across different locales
removed multiple redundant calls to db. close ( ) in DbHelper. java to improve resource management and avoid potential memory leaks
increased timeout duration from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow more time for messages to be processed during tests
add tracera capability to economyallocationstage.
fix : store source when save database
added a line separator to the ObjectMapper initialization in a static block to ensure consistent line endings across different operating systems
[ native _ environment ] fix native _ environment to work on window.
replaced the Application class references with a single instance variable in multiple test files to streamline the code by eliminating redundancy
[ java ] remove validate exist log from recordinglog.
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
testfuzzoptimizations : remove unused code
don't use sharedpreferences. getdefaultsharedpreferences ( ) in cameramanager. rotateimage
fix checkstyle issue in util / meta - inf / repackager
[ multistage ] replace field by predicate in terserutil # replacefields ( # 2451 )
updated JUnit 4 annotations to JUnit 5 in AuthenticationSuccessListenerTests. java to ensure compatibility with JUnit 5 features and improve test reliability
settypes performance improvement
updated method signatures in TypeUtil. java to improve code clarity and maintainability
updated triggerTime method to use LocalDateTime for better date conversion to ensure compatibility with local time representation in the application
added a method to handle abstract method throwing for method declarations to improve error handling for method declarations that require non - static method modifiers
camel - 16400 : simple language should support parameter placeholder ( # 4897 )
don't return empty target graph if we have no graph
camel - 8913 : camel - kubernetes - jclouds should use iohelper. copy ( is, cos ) to copy input stream to
camel - consul : remove the @ ignore annotation from camelconsultest
added a check for ` Flags. DEFAULT ` in the ` CheckACC _ STRICTFlagOnDefaultMethodTest ` class and created
[ java ] increase timeout for channelvalidationtest.
added a new file ` FileExtensions. java ` with constants for file extensions to enhance code readability and maintainability by centralizing file extensions
replaced custom ` ThreadLocalDateFormat ` implementation with a direct instantiation of ` DateFormat ` to improve flexibility and maintainability of date formatting
[ gr - 37684 ] remove ` ` fasttlABrefill'' and ` ` fasttpointspinbeforeYield''
added displayName property to client properties and updated related classes to handle customizable client display names in CI environments
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling for early termination scenarios
updated the formatting of the apply method call in TraceFunctionAroundWrapper. java to improve code readability and maintain consistency
added connection consumption support in the HttpBindServlet and HttpConnection classes to enhance connection management and improve handling of connection states
fix npe in forgeeventfactory. getcapabilities ( ) when parent be null.
wallettool : don't catch keycrypterException a we don't have.
[ hotfix ] [ javadoc ] deprecate submitorderedcompletionservice
updated the length calculation in HyphenationTree. java to use a variable for improved clarity to enhance code readability and maintainability by using a
added a delay of 200ms in IQRegisterHandler. java to ensure proper synchronization during IQ registration processes
add multichat operation set definition and gibberish protocol implementation. related issue : issue # 241, issue # 244,
updated PARAMETER _ NEEDS _ TO _ BE _ NAMED string to specify " Java 8 + use the javac flag - parameters " to ensure
set providersChanged to false in ConfigurationManager. java to ensure that providers are only updated when the configuration changes
added a method to quote identifier tokens in SemanticAnalyzer to ensure proper handling of identifier tokens in query processing
pdfbox - 4892 : skip'name'entry for postscript font that don't contain'| '
updated import statements and type casting in SolrResourceLoader. java to improve type safety and eliminate unchecked cast warnings
updated boundary checks in the Window class to improve responsiveness by ensuring the correct parent of the hit is processed
added null check for appManifest before retrieving target version to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator to simplify configuration and improve JSON processing to enhance code readability and maintainability while ensuring proper serialization of configuration metadata
added userName property and related getter / setter methods to Driver and HiveSemanticAnalyzerHookContext classes to allow dynamic configuration of the user name for better
added setter methods for transformer properties in XsltBuilder. java and updated XsltComponent. java to use these methods to enhance flexibility in configuring
added HadoopShim support to ContainerRunnerImpl, TaskRunnerCallable, and TestFirstInFirstOutComparator to enhance Hadoop functionality by integrating
updated expectedFileSize to use legacy version in ShadowAssetManagerTest and ShadowContentObserverTest, and simplified variable declarations in ShadowDownloadManagerTest to
add null check to coyoteadapter to avoid npe.
camel - 13313 : throughputlogger now log message with total message, not complete.
updated VM version checks to use ` Platform. isDebugBuild ( ) ` instead of ` System. getProperty ( " java. vm. version "
[ scb - 1992 ] add meterstatsmetadatamaprovider. clear ( ) method in defaultlogpublisher.
updated logback configuration file resolution in FrameworkLauncherExtended. java to ensure logback configuration is correctly resolved based on system properties
added @ NotNull annotation to several methods in CipherExecutor and CookieValueManager classes to enforcement of null values and improve code robustness
replaced references to ` Escaper. BASH _ ESCAPER ` with ` Escaper. SHELL _ ESCAP
refactor ` startContainerWithCommand ` and ` waitUntilReadyAndSucceed ` calls to use try - with - resources ` for better resource management to
rename test class from " TestLucene50FieldInfoFormat " to " TestLucene60FieldInfoFormat " to clarify the purpose of
updated formatting in RelativeDateFormatTests. java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to enable retrieval of the shield address from the wallet
changed return type of readConsoleInput from byte array to String in JansiWinSysTerminal and JnaWinSysTerminal classes to improve
updated regex patterns for presubmit and postsubmit platforms in TestStabilityRule. java to enhance compatibility with additional input formats
updated DefaultSolrHighlighter to limit fragments based on multi - valued fields to ensure correct highlighting behavior for multi - valued fields
added a new parameter ` uri ` to the ` tryToLogin ` method and changed the return code variable from ` r ` to ` return
added null checks and broadcasting for entities in ` HandlerSceneEntityDrownReq ` and ` PacketSceneEntityDrownRsp ` to improve
( chore ) camel - jms : fix checkstyle issue
removed unnecessary collection wrapping in the update method to streamline the update process by eliminating unnecessary collection wrapping
added logging for illegalcurrencies in BTCEAdapters. java to improve error handling and debugging
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4334
pdfbox - 4071 : update default value for averagechartolerance and spacingtolerance from 0.3 f to 0.5 f
updated startController method to accept a boolean parameter for tenant isolation to enhance flexibility in tenant creation configurations
replace ImmutableMap. builder ( ) with explicit casting from response. getValue ( ) to ensure type safety by directly returning the value from the response
added a check to ensure the size of attrs is greater than or equal to 4096 to prevent potential ArrayIndexOutOfBoundsException when the size of attrs is
added abstract methods to AbstractIjProjectConfig and replaced BuckConfig with IjProjectBuckConfig to enhance project configuration management and improve code
updated the description of " Experimenal " to " Experimental " in HiveSessionProperties. java to enhance clarity and understanding of optimization
added unit tests for the GrantedAuthorityEffectiveAclsResolver class to ensure correct handling of user - specific roles as principal
javaparsparsertypedeclarationadapter # solvemethodintype should use getsolvedjavjavangobject ( ) instead of new reflectionclassdeclaration
added a button count constant and modified pointer mapping retrieval logic to ensure the button count does not exceed the maximum allowed BUTTONS
replace ` jdk. testlibrary. asserts. assertEquals ` with ` com. oracle. java. testlibrary. asserts. assertEquals `
added a new ` MessagePackFactory ` class and modified the ` newUnpacker ` methods in ` MessagePack ` to enhance flexibility and
add new is _ desert and is _ cave biome tag to the tag provider. close # 159
rename ` present ( deltaTime ) ` method to ` draw ( deltaTime ) ` across multiple screens to improve clarity and consistency in method naming
added conditional checks for horizontal orientation in ComponentGroup. java to ensure UIIDs are updated correctly based on the horizontal state of the component
chore ( regen ) : remove redundant call to matcher. matches ( )
replace ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLocklessInput
[ java ] remove unused commit position check from cluster service agent.
[ te ] add a new ` UserSite ` entity with id ` userId ` and ` siteId ` to facilitate the representation of a
improve error reporting when a port be not in a standard url.
bugfix : listcapacity api don't return the host or pool id when the host be not in the list of host / pool
replace ` openInput ` with ` fileLength ` method in ` NRTCachingDirectory ` to improve file length handling for better resource management
refactor the JavascriptCompiler class to improve code clarity and maintainability by using a more descriptive class name
refactor UISettings class to improve synchronization and readability to enhance thread safety and maintainability of the code
added a condition to return early if text is editing and modified the access level of fireDataChanged method from private to public to improve input handling
spannerio : add more error message to spannerio exception
use diamond operator ( < > )
updated type check from double [ ] to short [ ] in ObjectInputStream. java and added a new CloneArray class with serialization tests to ensure
updated nonce retrieval method from ` getClaim ` to ` getStringClaim ` to improve clarity and consistency in nonce handling
[ DCInputSet ] ] check for relationship field in DCInputSet. java to ensure proper handling of relationship fields in the input set
added server logan functionality to the capabilities table to allow users to view their logan information in the database
refactor conditional logic for menuItem comparison in DrawerActivity. java to improve readability and maintainability of the code
replace fail test with assumeNoException in SolrRequestParserTest. java to improve test reliability by preventing failures when there is a network connection
added a check to return early if there are no missing symbols to improve performance by avoiding unnecessary processing when no symbols are available
added new data entries for data 5 - 4 in StringHelperTest. java to ensure proper representation of data in the test cases
added a warning log for the dataProviderHolder in the Parameters class to notify users when the data provider is returned an empty array or iterator, and
use collections. emptyList ( ) instead of collections. empty _ list ( )
freeplane 1.9. 8 : update to new version
physicsrigidbody : use ` ` restitution'' instead of ` ` mass''
added a new file ` AutoFtpActivity. java ` for testing FTP functionality to facilitate automated testing of FTP interactions
refactor token type checking in BaseSemanticAnalyzer to improve clarity to enhance code readability and maintainability by using a local variable for token type
added getter methods for ` imageX ` and ` imageY ` in ` ImageViewer `, ` OnOffSwitch `, ` GenericSpinner `
added a new class ` RemoteExecutionEnabled ` for serialization and deserialization of remote execution properties to enforcement of remote execution behavior in the build system
pdfbox - 4892 : fix typo, a suggest by valerybokov
updated file reading methods to use StandardCharsets. UTF _ 8 and added suppression warnings in ImportCsv. java and PublicBAOS. java
add assertion to abstractscoredirector. assertworkingscorefromscratch ( workingscore, error message )
updated SEMIJOIN _ CONVERSION configuration from " hive. enable. semijoin. conversion " to " hive. optimize. semijoin
added logging statements to handle non - ByteBuf types in various datagram classes to enhance logging capabilities for better debugging and monitoring
updated file removal logic in SynchronizeFolderOperation and FileDisplayActivity to ensure proper deletion of files and provide user feedback when the current folder is
added assertions to check the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly
chore ( ichemaregion ) : deprecate ischemaregion. deletetimeseries ( # 2451 )
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided to avoid runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource ` classes to
updated the @ AllArgsConstructor annotation in J. java to include JsonCreator support to ensure proper serialization and deserialization of JSON objects in the constructor
added a check for view type in MetaDataClient to inform users that creating an index on a view is not supported currently
added a new ` Website ` class with getter and setter methods in the ` PopulatorImplTest ` class to facilitate testing of the
added a setup method to set the default locale in BSFormatterTest to ensure consistent localization across test cases
log a warning if someone try to download a bunch of. jar file that have bad. jar.
replaced ` containsString ` method with ` Matchers. equalToIgnoringCase ` in ` MultiPartParsingTest. java ` to ensure case - insensitive
added conditional logic for processing parameters in SimpleExprGenerator to ensure proper handling of single and non - single parameters in the expression generation process
added a volatile boolean flag ` createdVertx ` and modified the null check for ` vertx ` to ensure that vertx is only created
updated writeAttributes calls to include the node object as a parameter to ensure that the writeAttributes method uses the correct node model for consistency
updated logging statements in SynchronizeFolderOperation. java and null check in FileDisplayActivity. java to improve logging clarity and prevent potential null pointer
added a new property ` ignoredReadStatus ` in ` Entries ` and updated related methods in ` CategoryREST ` and ` FeedREST `
replaced the use of ` MavenTestingUtils. getTargetDir ( ). toURI ( ) ` with ` MavenPaths. targetDir ( ) `
[ shenyu - register ] fix npe in registerserverconsumerexecutor
updated the isPlaying condition in GwtMusic. java to check if the audio is not paused to ensure that the audio is only played when the
added permission for the admin area as a SUDO _ AREA permission in the plot admin command to enhance security by restricting access to certain
updated query options handling in ServerRequestPlanVisitor and added a new test for multi - stage leaf limit in QueryRunnerTest to improve query performance
updated path validation logic in ReloadableJava11ParserInputFileObject, ReloadableJava17ParserInputFileObject, Java8ParserInputFileObject, and
updated assertions to check for pure emoji and mix emoji in ResourcesTest. java to improve test reliability by ensuring correct attribute values are assert
changed native method name from ` NMTWaitForDataMerge ` to ` NMTOverflowHashBucket ` and added native methods for memory allocation
[ flink - 21143 ] [ core ] migrate eitherserializersnapshot to javaesitherserializersnapshot
updated DEFAULT _ NDOTS and DEFAULT _ ROTATE _ SERVERS to use a configurable resolver option to improve flexibility and maintainability of
added a superAssociate method call in RequestRockerTemplate and created a test for null pointer exceptions in RequestRockerTemplateTest to ensure
pdfbox - 4071 : avoid npe if the non - terminal field don't exist
updated XML namespace references from " liquibase / parser / core / xml / " to " www. liquibase. org / xml / ns
move commonmimetypelocator to test / source directory.
changed the repository version state from ` INIT ` to ` NOT _ REQUIRED ` to indicate that the repository is not required and may be absent
updated the comparison logic in GenerateChangeLogTask to include SchemaComparison alongside CatalogAndSchema to enhance the comparison process to include additional metadata
updated JUnit import from ` junit ` to ` testng ` to ensure compatibility with TestNG framework
added a new file ` ProgressiveJPEGTest. java ` for testing the ` ProgressiveJPEGTest ` class to implement a demonstration
fixed crash when load a material that don't have any effect.
raise error for unsupported native - image build on window.
added a null and empty string check before setting the preferred size to avoid potential NullPointerExceptions when text is null or empty
fix arrayindexoutofboundsexception in data. readvarint
changed classes PushUtils, PushUtils, ThumbnailsCacheManager, and PushUtils to final and added private constructor to enforce immutability and prevent
updated the method of obtaining the length from curConfig to use curConfig's length directly to improve accuracy in determining the length of the component
removed unnecessary cast of MockDirectoryWrapper to MockDirectoryWrapper to simplify the code and improve readability
updated the load method in the componentPresetDao to use a conditional expression to improve code readability and maintainability by simplifying the file path
added a condition to check if the app is in the app before announceing accessibility to ensure accessibility announcements only when in the app
replaced ` Args. getInstance ( ). getMyKey ( ). getNodeId ( ) ` with ` RefreshTask. getNodeId ( ) ` in the
pmd : add ant task to target jdk 1.5
updated import statements and refactored test setup in QuotaResponseBuilderImplTest. java to streamline dependencies and improve test reliability
added print stream settings to TestSchemaToolCatalogOps. java to enable custom output stream for debugging purposes
added a DFSClient parameter to the authentication process in FanOutOneBlockAsyncDFSOutputSaslHelper. java to enhance security by ens
updated MongoQueryMethod and related classes to use RepositoryMetadata instead of EntityInformationCreator to enhance functionality by integrating RepositoryMetadata for query resolution
add support for entityresolver2 in xml dsl Digester. java
updated import statements and removed unused constants in MetaDataEndpointImpl. java to streamline import statements and improve code clarity
hive - 15429 : txnhandler. getallowedreespace ( ) should retry on a new transaction ( miklos gergely
refactor BarChartActivity and LineChartActivity1 to use a local XAxis variable instead of a local XAxis instance to improve code clarity and
added methods to check if a character is printable and valid in the FsUtils class to enhance character validation and ensure proper handling of undefined characters
use selenium. in instead of selenium. in.
allow plugins to be process if they don't exist
updated return statements in ProxyConnectionManager and ServerTrafficCounter to use'd'instead of'm'to ensure consistency in data representation
[ vision ] fix google - cloud - vision integration test
updated return values in ModeledConnectionRecord, ActiveConnectionRecord, and AuthenticatedUser classes to return null instead of " STUB ",
add admin permission to the community list page.
refactor compaction thread management in CompactSplit. java to use AtomicInteger for thread tracking to ensure unique thread names for compaction processes
updated the method to retrieve the resource package for wallpapers to ensure the correct resource is used for wallpaper selection
replaced direct call to ` getPlayersInPlot ( ) ` with a helper method ` getPlayersInPlotVisible ( ) ` to improve code
refactor multiple classes including AndroidManifest, ResName, ShadowMediaPlayer, and ShadowActivity to improve code organization and maintainability
updated imports in MlibOpsTest. java to improve code clarity and maintainability
[ gr - 3773 ] don't register builtin library if native library be not available.
updated attribute key from " referencedContainer " to " ReferencedContainer " in SchemeGenerator. java and added a new test for buildable references
simplified encryption key and IV initialization in UploadFileOperation. java to improve code clarity and reduce redundancy in encryption logic
[ flink - 243688989 ] [ test ] add stability annotation for workprofiletest
added a condition to skip processing if bucketing version is not present to optimize performance by avoiding unnecessary processing when bucketing version is not present
replaced ` setCursorPosition ( x, y ) ` with ` input. setCursorPosition ( x, y ) ` in GwtTestWrapper. java
refactor LockFreeBucket to use an abstract class for Contended time meter and create a new LockFreeBucketLayout class to improve extensibility and
add tpstats to the nodetool probe. patch by jbellis
update bitrate retrieval to use user preferences instead of direct calls to getMaxBitrate to ensure bitrate is accurately utilized based on user preferences
updated ZipkinHttpSpanExtractor to improve handling of trace and span IDs to enhance clarity in span debugging conditions
show user payment account only if bisqswap or dao be activated
remove reflection call from dartservercompletioncontributor. createreadelement ( ) ( # 2496 )
added a method call to set the project in the filesystem to ensure the project is properly initialized before use
updated the ` JsBundle `, ` JsBundleBuilder `, ` JsLibrary `, and ` JsTestScenario ` classes to include `
fix javadoc warning in java. desktop module
refactor MetricsDSLContext class to improve code readability and maintainability
refactored VersionBuckConfig to use ImmutableSet instead of implementing VersionConfig directly to simplify code and improve performance by using ImmutableSet for universes
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by avoiding potential exceptions during
make static assertion # validatetypes public and improve error message
fix : update gapic - generator - java with mock service generation fix ( # 9 )
added SLF4J logger import to SimulationStatus. java to enhance logging capabilities for better debugging and monitoring
updated VERSION _ POSITION _ Y and VERSION _ FONT values in Splash. java to reflect new font specifications and improve layout consistency
added a runLater call to the notification addition in UserInterfaceComponentImpl. java to ensure that notifications are executed on the UI thread for better
updated the mock creation method in ReturnsElementsOf. java to enhance clarity and maintainability of the code
[ hotfix ] [ table - common ] fix typo in error message
added a test for LineFileDocs in BaseStoredFieldsFormatTestCase. java to ensure that LineFileDocs functionality is validated for stored fields
added a method to retrieve the version code from the MainApp class and updated FeatureList to use this method to improve code maintainability and ensure
camel - 17442 : camel - bean - resolve ambiguity issue with body parameter be null.
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamParser. MultiPart
added buffer ownership handling in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leaks
added a transition for forgotPassword in PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login form flow
fix checkstyle issue in ` ` jerseyclientconfiguration''
int - 1921, int - 1922, int - 1923, int - 1923, int - 1924, int -
replaced instances of ` s ` with ` o ` in multiple test files to improve clarity and consistency in output formatting
updated StringDict and Table classes to handle empty array entries to improve data integrity by ensuring only valid array entries are processed
deprecated methods in GenericContainer and GenericContainerRuleTest classes to signal that these methods are outdated and may be removed in future versions
changed logging level from info to error in MediaInfo. java and modified PMS configuration handling in RendererConfigurationTest. java to improve error handling
added schemapattern option to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance configuration options for database connectors
update ProvSSLSessionImpl to return an empty byte array if the tlsSession is null to improve handling of null tlsSession data
refactor bitmap creation logic to use variables for width and height to improve code readability and maintainability by reducing redundant calculations
refactor Base64 class implementation to improve code maintainability and readability
[ sulong ] add miss assumption to sulong global container.
simonstewart : ignore a test that fail on iphone
updated FlowBuilder and FlowJobBuilderTests files to improve code clarity and maintainability
changed the data type of ` resName ` and ` value ` from ` ResName ` to ` resId ` in multiple classes to improve data
allow ` docker - cert - path ` to be specify for ` docker - cert ` and ` docker - tls - verify ` config ( #
datastream - > datastream - > datastream - > datastream integration test
modified type checking logic in ` mmm Attr. java ` and added a new class ` p6450290. java ` to improve type
add -- log - level option for java. util. logging. level
added logging for package removal events in multiple classes to improve traceability and debugging of app icon removal processes
added the ` allFilesOption ( ) ` method to ` FileActivity `, ` FileDisplayActivity `, and ` PreviewImageActivity `
added deprecated ` forEachOperation ` and ` hasMatching ` methods to the ` MutationOperationGroup ` class to signal that these methods are outdated and
modify the calculation of numPredictiveAppCols based on phone type to ensure accurate number of predicted app columns based on device type
added UTF - 8 character encoding to string conversion to ensure proper handling of character encoding in the content
added RequestMatchers class and corresponding test classes to enhance request matching capabilities in the security web application
ggb - 2118 : don't select temporary button if applet be open
update position calculations in the ProgressBar to correctly account for the height and width of the knob after component to ensure correct positioning of the knob
[ native ] fix path for external function definition
BruteArgumentMoverHandle. java : added a static method ` permuteArgs ` to facilitate manipulation of arguments using native code
added a condition to check if the state handler is invalidated in the gesture handling logic to ensure that gesture handling only proceeds when the state
updated layout calculations to use constrained dimensions instead of largest size to improve layout consistency across different screen orientations
added a condition to check if the redir URL matches the " / robots. txt " file in HttpRobotRulesParser. java to
don't show the warning icon on the top of the dialog when it's open.
updated button names in AdvancedGameSetupScreen from " continue " to " createWorld " to improve clarity and consistency in button functionality
added a check for zero in the UDFOPDivide class and created a new test class for it to ensure that division functions correctly
refactor error handling and formatting in FlowJob and Job classes to improve code readability and maintain consistency in exception management
sec - 1648 : add constructor arg to logoutfilter.
added onDestroy ( ) method to ShareActivity and ContributionsActivity to ensure proper resource cleanup during activity destruction
rename variable'thumbNail'to'thumbnail'in WallpaperPickerActivity. java to improve code clarity by using a more descriptive
updated command - line header in various command - handler classes to improve clarity and consistency in command handling
updated request timeout configuration in RaftServerConfigKeys. java to ensure proper request timeout based on the RPC configuration
updated logging level from error to debug and modified return behavior in TsFileResourceManager. java and ResourceManagerTest. java to improve logging
added system properties to model source and system properties in MavenModuleLoader to enhance the model loading process by providing system - specific properties
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALL metrics to enhance monitoring capabilities for read
added model registration for animatedtorch ( botania - botania - client )
added null check before closing the writer to prevent potential NullPointerException when closing the writer
added a method to retrieve the Hive configuration from a specified directory to facilitate easier access to configuration for testing purposes
added a new link to the FeaturesActivity for " Muting Users " to enhance user experience by providing a relevant link
added initialization for direct method handle in the System class to ensure compatibility with Java's direct method handle implementation
hbase splitonLeadingvarcharcolumnspolicy change from constantsizeregionsplitpolicy to steppingregionsplitpolicy
[ flink - 2594 ] [ yarn ] fix the npe in yarnclusterdescriptor when the yarn _ lib _ dir be not
updated method calls to use ` getWord ( word ). getPronunciations ( ) ` and ` getWord ( ). getSpelling
updated JSON structure in JsonUtilsTest. java to ensure consistency in JSON formatting
added ` compose. putExtra ( " id ", holder. tweetId ) ` to ` TimeLineCursorAdapter ` and ` TimelineArrayAdapter
[ hotfix ] [ runtime ] add warn log when terminating messagereader
don't throw an ioexception when there be no class find to analyze
replaced the import of Key with PublicKey in KeyFetcher. java to ensure compatibility with updated security standards
updated the ` isIncompatible ` variable initialization in ` DLNAResource. java ` to ensure proper handling of resource compatibility
added import for AccountCreateContract in RpcApiService. java to enable account creation functionality in the service
pdfbox - 4892 : avoid npe, a suggest by valerybokov
http : / / issues. apache. org / jira / browse / amq - 2852 - fix dlq not remembered exception
change default value of star tree format version from " v1 " to " OFF _ HEAP " to ensure accurate representation of star tree format
modify title handling in FeedUpdateService to truncate title to a maximum of 2048 characters to ensure title longer than 2048 characters for better data integrity
refactor previewPanel initialization and layout logic in JColorChooser and BasicColorChooserUI classes to improve code clarity and ensure proper layout handling for JPanel
changed log level from info to debug in DefaultBuildExtensionScanner. java to reduce log verbosity for better debugging
added a null check for the reusableBitmap before setting bitmap options in AndroidTileBitmap. java to avoid potential NullPointerException during bitmap decoding
added ` getLayoutParams ` method to ` FakeView ` class to provide access to the ` ViewGroup. LayoutParams ` parameter
added a check to ensure a Cursor is already closed to prevent IllegalStateException when attempting to use an already closed cursor
pdfbox - 4892 : don't create a new pdpage if the parent don't exist
added JUnit Ignore annotation to JMSClientTest. java to temporarily disable the test due to known issues
added a private field'ts'with getter and setter methods to store and retrieve the timestamp associated with the message
add a common exceptionmapper utility class to provide easy exception handling.
changed the class declaration of AbstractExecutor from package - private to public to allow access to the AbstractExecutor class from other packages
[ isochrone ] remove unused hint parameter from routeresource
updated import statements and class visibility from public to package - private to enhance encapsulation and restrict access to test classes
refactor CSRF setting into a separate method to improve code readability and maintainability by encapsulating CSRF logic
added conditional checks for ` bootstrap ` and ` shadowClassLoader ` in ` EclipseLoaderPatcherTransplants. java ` to ensure proper handling
[ jbrules - 2800 ] add a numericdisabled flag to the ruleflow parser
changed log level from info to debug for default value logging to reduce log verbosity and improve performance by reducing log verbosity
added null checks for axes and buttons in Lwjgl3Controller. java and improved controller management in Lwjgl3ControllerManager. java
updated ObjectFactory import from ` cucumber. api. java. ObjectFactory ` to ` io. cucumber. core. backend. ObjectFactory ` to ensure compatibility
refactor port forward saving logic to use a HostDatabase instance to improve code readability and maintainability by encapsulating savePortForward logic
added a configuration option to control Liquibase snapshot data behavior to enhance flexibility in snapshoting behavior based on user - defined settings
refactor SyncedFolderObserver to improve event logging and streamline path handling to enhance code clarity and maintainability by reducing redundancy and enhan
refactor LocationMarshaller class implementation to improve code readability and maintainability
refactor touch event checks in StatusBarTouchController. java for improved clarity to enhance code readability and maintainability by using a more descriptive variable
updated package structure and refactored VectorReader and its implementations to improve code organization and maintain consistency across the codebase
updated import statements from ArgumentMatchers to Matchers across multiple test files to improve consistency and clarity in Mockito library usage
updated method calls to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` and ` getRelativePathSupplier ( ) `
return by segmentmapper ( recordreaderfileconfig ) instead of recordreader ( recordreader )
added @ WithArgumentExtractor annotation to Param and Param classes to ensure proper handling of argument extraction in the code
cloudstack api : don't set accountid / domain in resource limit command
add event for shift - and - drop to the gui screen.
add a deprecated option for cold _ reads _ to _ omit in SizeTieredCompactionStrategyOptions to indicate that this option should no longer
added a call to leech. stop ( ) in ClientTest. java to ensure proper resource management and prevent potential memory leaks
add label _ is _ retry to popmessageprocessor to show retry label
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
replaced the @ Test annotation with an @ Ignore annotation in ShadowDateUtilsTest. java to mark the test as ignored for a moment
rename the MongoReactiveAutoConfiguration class from EventLoopGroupMongoClientSettingsBuilderCustomizer to NettyDriverMongoClientSettingsBuilderCustomizer to improve clarity
added upgrade request handling in ` JettyTrackingSocket ` and corresponding unit tests in ` ClientConnectTest ` and ` JettyTrackingSocket ` to enhance
added timeout support to AndroidImplementation to enhance connection management by allowing customizable timeout values
refactor getUserAccessPermissions and getTeamAccessPermissions methods to use a list of RegistrantAccessPermission for user and team access permissions to enhance
added a new test method to validate parsing and deparsing of a SQL query with quoted cast expressions to ensure that the SQL parser correctly handles
don't attempt to write a file on non - root operating system
[ scb - 2687 ] fix default thread pool for fixedthreadexecutor
added null check for the " catalogname " field in AbstractChangeGenerator. java to avoid potential NullPointerExceptions when the field is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to improve consistency and align with the new library structure
encapsulate animation end handling in a separate method to improve code readability and maintainability
added a close method to the DeflaterOutputStream in RegionFile. java to ensure proper resource management and prevent potential memory leaks
added a new Java file gsp001. java for retrieving system properties to facilitate testing of system property retrieval during early phase
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 5 when use @
* fixed bug in cameranode and lightnode that cause importer to throw illegalargumentexception
updated popup window handling in PopupNotificationPanel. java to improve code clarity and ensure proper disposal of the popup window
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` and updated method signatures accordingly to simplify exception
added a method to return the feature value in the FeatureField class to provide access to the feature value for external use
changed the parameter type from ` int ` to ` long ` in the ` after ` method from ` int ` to ` long ` to ac
added ` onBuild ` and ` executionDriver ` fields with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes to
added conditional logic for setting icon based on the target type in FlowLayout. java to ensure proper icon placement based on the target type
added support for enabling position increments in StopFilterFactory to enhance flexibility in handling stop filters based on user preferences
added support for TEAMMATES admin email in EmailsTest and SystemErrorEmailReportTest to enhance email functionality for TEAMM
added a boolean variable ` mTryShareAgain ` and set it to false in ` FileActivity. java ` to ensure shared resources are properly
added support for tty name in JansiNativePty. java and updated related logic in JansiNativePty. java to
refactored variable names and logic in BandwidthProcessor. java to improve code readability and maintainability by using a consistent variable name
replaced direct assertions with Awaitility's await method in Issue410Tests. java to improve test reliability by leveraging a
refactor constant declarations in EaseeBindingConstants. java to improve code readability and maintainability by reducing redundancy
increased read timeout duration from 2 seconds to 3 seconds in KafkaIOIT. java to improve test reliability by allowing more time for read operations
updated assertions in SearchResultMatcher to use is ( itemName ) instead of allOf ( ) to improve clarity and accuracy of JSON path validation
added trust management for SSL certificates in OkHttp. java to enhance security by ensuring only valid SSL certificates are used
refactor long - click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by using a more
added a new file ` HyperlinkFormula. java ` and updated ` StringPtg. java ` and ` StringPtg. java `
added nullable fields for stdout and stderr in ShellStep. java to ensure that the workingDirectory is non - null before passing it to escapeAs
increased TIMEOUT _ MILLIS from 1000 ms to 2000 ms in AsyncAppenderTest. java to allow more time for tests to complete
refactor ` escapeDatabaseObject ` methods to include ` objectName ` as a parameter to enhance functionality by allowing object name escaping in database queries
modified the input validation logic in MaterialRenameDialog. java to ensure the dialog reflects the correct material title validation
added a test for state changes in postKitKatFields and implemented setState method in ShadowDisplay to ensure correct behavior of display state changes in
add a servicelocationservice interface for direct invocation
[ web ] fix ^ x / y for gwt backend
updated SQL queries in PgDatabaseMetaData to include server version check for PostgreSQL compatibility to ensure compatibility with PostgreSQL 9 and above
add nullable annotation to clarify that message be never null.
updated method signatures and URI handling in FileUtils. java to improve code clarity and ensure correct path representation
added support for Jenkins nodes in the CollectorServer class to enhance monitoring capabilities for the Jenkins node collector
sec - 10 : add support for ` ` disabled'' and ` ` defaults - disabled'' attribute in header configuration.
hbase - 26310 protobuflogsereader. seek ( ) should throw eofexception if first byte be negative
fix shutdown of nacos registry
camel - batis : fix switch / cases indentation see camel - 14540
refactor GoAway state handling to use a dedicated method for writing status codes to improve code consistency across different SPDY versions
updated the formatting of the event creation and JSON output in AuditEventTests. java to improve code readability and ensure proper JSON output
updated interpolation method to return 0 if the value is less than or equal to MathUtils. FLOAT _ ROUNDING _ ERROR to ensure proper rounding behavior
fix path issue in forge / forge / forgeworldedit. java
refactor code to store the result of getDxExecutable ( ) in a variable before adding it to the builder to improve code readability and maintainability
added multiple assertions to check the equality of PointRangeQuery instances to ensure the correctness of PointRangeQuery instances in the test cases
hbase - 25836 testhfilecleaner should use a mock archive directory instead of a hardcoded one
when download a file, don't show the file name in the file label
remove ` ` throw jce'' from jedisclustercommand
[ hotfix ] [ table - planner - blink ] fix stream api chainingstrategy
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
added multiple ` baseline ` and ` baseline ` methods to ` QMapReadRandomKeyBenchmark `, ` QMapReadSequentialKeyBenchmark `
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld. java to initialize G _ SCH _ B using
added a check for empty fields and improved identifier handling in GroovyEngine. java to enhance robustness by ensuring proper handling of empty fields and
ggb - 2118 fix for angle [ ( 0, 0, 0 ) ]
added TCP keepalive configuration and modified socket handling in Hive server to improve connection management by allowing configurable TCP keepalive settings
renameaction : renameemptyfiles should not return empty file
no effective change - remove unused import
refactor RealtimeSegmentRelocator to use a lambda expression and improve code readability to enhance readability and maintainability of the code
vpc : don't return a success status code when vpc service start
updated interpolation logic in WindowTransformSwipeHandler. java and modified condition in FloatingIconView. java to ensure windowAlpha is non - negative and
update schema version from 3.2 to 4.0 in SecurityNamespaceHandler. java to ensure compatibility with Spring Security 4.0 schema
updated multiple assertion classes and removed a specific assertion check in ProtoFluentAssertion to improve code clarity and ensure proper handling of proto values
make some field final in disruptorproviderManage, queueconsumer, and disruptorproviderprovider.
added a new file ` TestConfigureUDF. java ` and updated ` ExprNodeGenericFuncEvaluator. java ` to include a new UDF
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to enhance flexibility in matching log messages based on specified
removed unnecessary ` final ` logger ` declarations from method calls in ` LOG. java ` to streamline logger initialization and improve code readability
replaced deprecated methods from ` updatePurgedShards ` to ` deletePurgedShards ` across multiple classes to improve code clarity and maintainability by
added default Java language handlers for version " 16 " and " 17 " to ensure compatibility with the latest Java versions
attempt to wait for compression job to finish in time - based rolling policy
[ gr - 37696 ] volatilereadnode : remove assertion.
added a method ` getSteps ( ) ` to ` SimpleJob ` that returns an unmodifiable list of ` steps ` to enhance functionality by allowing
removed unused fields fromBase58 and toBase58 from TronJsonRpc and TronJsonRpc classes to improve code clarity and maintainability
refactor creation of CurrencyPair in BitstampAdapters. java to improve code readability and maintainability by reducing redundancy
fix : extend longtasktimer's duration to match base time unit
[ euphoria - flink ] [ euphoria - flink - euphoria - core ]
updated HostEditorActivity to use CharSequence instead of String for better type safety to enhance code clarity and prevent potential ClassCastExceptions
rename ` ` database - version. properties'' to ` databaseversion. properties''
added a maximum tweet count limit to prevent exceeding the number of replies in the query processing
increased the refresh interval from 1ms to 2000ms in AbstractCachedLDAPAuthorizationMapLegacyTest. java to improve test reliability by allowing
fix and add unit test for persistence of fully acked deleted tail page
fix checkstyle issue in net / glow / server / glowserver. java
updated the grow method implementation in DataIO. java to improve code readability and maintainability
added import statement for java. io. DataOutputStream in GdxSetup. java to enable data output functionality in the Gdx setup process
camel - 4433 : added method getsubmittedfilename ( ) to return the filename of the part.
added a call to markReadForLoad ( ) in LauncherFragment. java to ensure that the read state is properly marked for loading
updated the ` main ` method to throw ` ClassNotFoundException ` and modified the ` instrumentJar ` method to throw ` ClassNotFoundException ` to improve
added a method to check the spill possibility of a current partition in HashAggTemplate. java to ensure proper handling of potential memory issues
changed variable declaration from ` info. getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter. java ` to ensure consistency and
added a default nameid format constant in SamlProfileSamlNameIdBuilder. java to ensure a valid SAML name ID format is used
added error handling for password change aborted to improve user experience by preventing unauthorized password changes
corrected formatting in Deadlock2. java to improve code readability and maintainability
add getmaxidletime ( ) to the nio receiver mbean so it can be override by the mbean.
deleted the FontScalingTest. java file to remove unnecessary test code as it is no longer needed
added validation for filter dates in RRD4jPersistenceService to ensure that only valid filter dates are used to prevent runtime errors
added a check for non - negative numVectors in GenericUDAFComputeStats. java to prevent processing when numVectors is zero
test : migrate executablesreftest to junit 5 ( # 5383 )
added null checks for view and glassPane in JLayer. java and created a new file bug6994419. java to ensure
added wiretap ( ) method to wiretap eip to allow dynamic route to be use with an expression.
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option validation for the TOPN option in PlannerSettings to enablement of topn planner settings
[ java ] remove unnecessary ` aerondirectoryname ` call in test.
fixed - batchPing method ben't call if batchprocessingmode = batchprocessingmode. batchprocessingmode = batchprocessingmode.
replaced ByteArrayOutputStream with FileOutputStream and refactored the getConfVarURL method to improve file handling and enhance code clarity
updated the parameter from ` defaultDevice ( ) ` to ` criteria. getDevice ( ) ` in the createModel method to ensure the model is
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer. java to ensure proper menu item selection in the simulation viewer
refactor CertificateValidator class to improve code readability and maintainability
use system property ` ` hawtio. dirname'' instead of hardcoded ` `. hawtio''
added a check for empty comments and returned SINGLE _ SPACE to ensure proper handling of empty comments and improve code clarity
changed member variables to be volatile in Dictionary, UserDictionary, BinaryDictionary, ResourceBinaryDictionary, SQLiteUserDictionaryBase, and WordsSQLite
added printStackTrace ( ) method call in ContextHandler. java to improve error handling by providing more detailed stack trace information
move customitemdroptest to integration / regression package
added an'ifNotExists'parameter to the AddPartitionDesc class and updated DDLTask and DDLSemanticAnalyzer accordingly to enhance semantic
updated input reading logic in NfsSecondaryStorageResource. java to improve byte reading efficiency and resource management
remove unnecessary ` controlRequestStreamId ` method call in EchoServiceNode and BasicAuctionClusteredServiceNode classes
wfs : add spatial operator support to wfs wfs
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitFix to address issue SOLR - 2161 by
modified the condition for processing preface matches in Http11InputBuffer. java to ensure proper handling of preface requests based on the last valid
[ java ] set ` isIngressExclusive ` to false in aeron cluster.
updated configuration keys for offheap and bucket cache in HBaseStorageHandler to allow for additional configuration options such as " hbase. offheapcache.
updated the context message to include the current record number in the exception builder to improve context tracking by tracking the current record count
added filtering for out of year items in CategorizationFragment to ensure only valid year entries are retained in the merged items list
update color settings in CacheableTextView and CellLayout to use the CLEAR color instead of 0x00000000 to ensure consistent color representation across different
added OpenGL ES 2.0 error handling to prevent usage of deprecated render methods with OpenGL ES 2.0
added ActionContext import and set it to null in BackgroundProcess. java to ensure ActionContext is properly set based on invocation context
modified the ` getUnescapedName ` method in ` BaseSemanticAnalyzer ` to include ` dbName ` as a parameter to enhance the semantic analyzer to
updated connection timeout settings in TestConnections. java and made count static final in StubConnection. java to improve connection reliability and enforce immut
added multiple SQL queries for percentile calculations in Hive aggregation to enhance testing capabilities for percentile calculations in the aggregation framework
updated default idle and write timeout constants in WebSocketConstants and WebSocketChannel classes to ensure consistent timeout values and improve code clarity
updated the method call to use ` user. toPlatformAccount ( ) ` instead of ` account. toPlatformAccount ( ) ` to ensure
updated import statements and improved type safety in Inet6Address. java to enhance code clarity and prevent potential runtime exceptions
refactor button state management in PlaybackControlView. java to improve clarity and maintainability of the code
updated method signatures in Session. java and Token. java to improve clarity and consistency in session and session handling
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary ` to ensure correct class
replace true with ____ for exception probability usage
updated the newPlateColor calculation based on the icon type to improve visual consistency based on the app's themed state
guacamole - 975 : don't inject guacamole. mysql. service into mysqluser.
added " centre " alias to the aliases list to enhance the functionality by providing more relevant aliases
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for direct uploads
added space settings for left and right axes in BarChartActivity and BarLineChartBase to improve visualization by ensuring proper axis alignment
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance library management by including additional flavors checks
added operation event status type to request parameters in OnlineHubService. java and initialized the services list in CompositeLogService. java to improve event
add visibility annotation for method parameter in DexAnnotation. java to enhance annotation handling and debugging
( chore ) camel - jms : use @ setup instead of @ startbundle
refactor process classpath handling in SortedArrayStringMapTest. java to improve readability and maintainability of the process creation process
updated separator handling for resource loading in PackageResourceLoader to ensure correct file separator is used for Android applications
removed'this'keyword from methods in DataSet. min ( ) and max ( ) to improve code clarity and maintain consistency in method usage
added JUnit Ignore annotation to WorkProfileTest. java to temporarily disable the test due to known issue ( b / 243855320 )
escape percent characters in error message formatting to ensure proper formatting of error messages
fixed - jcache. geturi ( ) return null if cachemanager. geturi ( ) return null
fix : log only when a taskalreadyclaimedexception be encounter
refactor the instantiation of ALPNClientConnectionFactory in HTTP2Client. java to improve code readability and maintainability
fixed entitypropertieverpacket. getbasevalue ( ) to return base value of the packet.
[ sonos ] check if the thinghandler be initialize before play sound notification sound
increased timeout duration from 500 milliseconds to 5 seconds in multiple test files to improve test stability by allowing more time for latch operations
changed log level from info to debug for light type determination to provide clearer feedback on what the request is being added to GitHub
add db. properties for db. properties and db. cloud. maxactive for asyncjobmanager
updated method signatures and improved formatting in Reporter and ReturnsSmartNulls classes to enhance code readability and maintain consistency in method signatures
updated the parameter type of the generate method from ` Frame ` to ` DataFrame ` to improve type safety and eliminate unnecessary type casting
updated formatting in multiple Java files to improve code readability and maintain consistency
added a check for empty physical column names in OrcPageSourceFactory and created a new test for ORC use with an empty orc file
added a return statement in methCla. mixPlay to enable mixing of audio parameters in the engine implementation
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
fix a couple of small off - by - one error in finderpatternfinder.
simplified the check for presence of leadingIncludePaths in PreprocessorDelegate. java to improve code readability and maintainability by eliminating unnecessary checks
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and
use ` ` $ x'' instead of ` ` $'' in selenideelementproxy
defaultaudiosink : fix unsupported _ e _ ac3 _ joc channel count for passthrough v29
added getFormula ( ) and setFormula ( String formulaText ) methods to XSSFName class and made XSSFName class final to enhance
increase the target value in HighDimensionsTest from 60000 * scaleFactor to 90000 * scaleFactor to improve test accuracy by accommodating longer
[ geos - 8470 ] fix arrayindexoutofboundsexception in patternfacet.
added unit tests for the ClassPathXmlJobRegistry class to ensure correct retrieval of job names from the job registry
fix integer overflow in motionpPauseDetector
camel - 12320 : camel - restlet - deprecate the old ` ` consumer'' option in camel - restlet
( chore ) camel - test - infra - log : remove deprecate method
refactored trace event submission into a separate method named ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by centralizing
added a check to ensure only non - canceled, non - filled, and non - rejected limit orders are added to the limitOrders list to
added pixel offset calculations and validation in LCMSImageLayout. java to ensure proper image layout and prevent errors due to invalid image layout
refactor timestamp handling in Event. java and JrubyEventExtLibrary. java to improve code clarity and maintainability by using a unified timestamp
added a check to return a resource if the path ends with " / " in ContextHandler. java and created a test for non - existent
updated ScriptFunctionImpl instantiation to use TYPE _ ERROR _ THROWER _ SETTER and TYPE _ ERROR _ THROWER _ GETTER
update jedittextarea to use scrollAmount instead of skip
added null check for caller loop scope in graphdecoder.
test : migrate sniperprettyprinterjavaprettyprinter to junit 5
refactor URLOutputStream initialization to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added @ Entity annotations to Mail class to facilitate data persistence in the Mail entity
updated the default values of the " includeTablespace " option from " false " to " true " to ensure tablespace configuration aligns with
added getter methods for ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` in ` CountersReader. java ` to provide access to
added a check for non - empty files in ScanBatch and created a test for it in TestJsonReader to ensure robust handling of empty JSON
added null check for internal name in failure handling in StringSubject. java and updated assertions in StringTest. java to improve robustness of failure
[ pytorch ] fix libutils. iscuda ( ) return false for libtorch
updated exception handling from ClassNotFoundException and NoClassDefFoundError to a more general Exception in JrtJavaBasePackages. java and PackageHelper. java to
hbase - 19836 wait on safemode if filesystem be in safemode mode
updated error message formatting in TranslatingJavacPhaseTracer. java to improve clarity of error messages for better debugging
remove unused plugindescriptor clone method from defaultplugincache
fix a problem with update the status of a contact when it's online.
remove deprecate withresourceandparams method from servletrequestdetails
added integration test for fetching account information from BTCE exchange to ensure the fetching account information from the BTCE exchange
added mouseWheel method and logic for handling mouse wheel events in VDUInput and TerminalView classes to enhance input handling and improve mouse wheel functionality
updated library path handling in Natives. java to ensure correct library path is used based on user preference
no effective change - remove deprecate columnstore annotation
fix : set players skin flag in metadataindex.
add more logging to loadbalancerwithservicetest
added braces to method declarations in MapService. java to improve code readability and maintainability
replaced direct system property retrieval with AccessController's doPrivileged method to improve security by using a more secure system property
updated file suffix handling in TemplateEngineFreemarker to use a configurable file suffix to improve flexibility and maintainability of the configuration
updated hash code calculation in SelectMessageQueueByHash and added new order IDs in SelectMessageQueueByHashTest and SelectMessageQueueByHash
simonstewart : hide the hDragger button when there be no layout.
don't bind on caret if there be no caret
added declaredPlatforms to multiple classes in the PrebuiltAppleFrameworkDescription and CxxBinaryDescription classes to improve maintainability by ensuring only relevant
replaced usages of SimpleParameterAccessor with ParametersParameterAccessor in the JpaCountQueryCreator and JpaQueryExecution classes to standardize parameter handling across the
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
[ hotfix ] [ table - common ] fix default value for array type
updated SSL engine creation logic to handle null address and hostName to ensure proper host name verification and avoid potential null pointer exceptions
updated assertions in TestFSTableDescriptors to use greater than or equal to ensure that the count does not exceed the expected range
danielwagnerhall for delete cookie by domain rather than by path.
added a boolean field to track if the launcher transition has ended to ensure proper handling of launcher transition state during gesture handling
updated HTML head and title tags to use UTF - 8 encoding to ensure proper rendering of HTML content with UTF - 8 encoding
refactor IndexReader class to improve code readability and maintainability
increased the maximum allowed value of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 to accommodate larger
updated comboBox's add method call in BasicComboBoxUI. java and added a new bug6337518. java file to ensure proper
updated test cases in TestRandomAccessBuffer. java to improve performance and reliability of random access buffer tests
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future development
added notification for content changes in multiple services to ensure consistency and reliability of content changes
added functionality to manage the state of pressed and focused background in BubbleTextView and Launcher classes to improve user experience by ensuring appropriate state during
updated the ` getFallbackResponse ` method signatures to accept a ` Throwable ` parameter across multiple policy classes to enhance error handling by associating a
simplified conditional check for ` _ dest _ dir ` in ` DumpBytecode. java ` to improve code readability and maintainability
add null check for tags in ChannelUri. java to avoid potential NullPointerExceptions when tags are null
updated regex SPECIALS string and added assertions in TestSqlPatterns to enhance regex functionality and ensure correctness of SQL pattern handling
added functionality to update the action bar title in FileActivity to ensure the action bar title reflects the current state of the file
updated method call from ` getOnlyElement ` to ` getLast ( convertedElements ) ` in ` PythonDslProjectBuildFileParser. java `
clean service now default to ` ` 0'' instead of ` ` *''
updated TransactionalValidationListener to validate table structure based on partition presence to enhance validation for partitions in the Hive metastore
hbase - 15836 fix javadoc warning in replicationhandler ( addendum )
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified SQL execution to use ` RETURN _ GENERATED
simplified the retrieval of the proxy object in SimpleReferenceCache to improve code clarity and maintainability
updated test conditions to use " failed to inline : " instead of " disallowed by ciReplay " and " unloaded class : " to
camel - 13314 : camel - web should use stop thread pool when create the http client
deleted the HttpTestAccount001. java file to remove unused test code
changed exception handling from Exception to Throwable in Dispatcher. java and added a new test case in DispatcherTest. java to improve error handling and ensure
camel - 7999 : don't set cxf message data format if cxf message be not present.
added a case for the'~'character in ClientUtils. java to enable handling of the'~'character in the client logic
camel - slack : allow to specify a delay before the next poll
fireblockharvesting event in blockutil. getblockdropevent
updated layout spacing in TranscodingTab. java and reformatted the encodedAudioPassthrough JCheckBox in TrTab2. 21 to improve layout
added a new file ` bug8057791. java ` implementing a GUI with NimbusLookAndFeel to address bug 8057791
updated flag handling in LambdaToMethod and added a new interface LambdaInterfaceStaticField to improve code clarity and introduce a static field for lambda expressions
added EthSubscribe support in the RunnerBuilder and associated test cases to ensure that EthSubscribe is available for WebSocket operations
updated null check from ` to. length ( ) > 0 ` to ` to! = null ` to improve null safety and prevent potential Null
refactor ParquetFixedWidthDictionaryReaders to conditionally read records based on dictionary to improve performance by avoiding unnecessary try - catch blocks when using a
refactor PortraitPagedViewHandler to use dividerScale instead of appStackedVertically to improve layout consistency based on device orientation
shenyu examples / springcloud / aop : add log aspect for springcloud aop
updated the format of the dump string in QueuedThreadPool. java to improve readability and handle potential null or empty trace cases
added a ` Implementation ` parameter to multiple methods in ` CacheGenerator ` and ` CacheProvider ` to enhance functionality by allowing specification of implementations
added totalFrameSize ( ) to the createReferenceMap method to ensure the reference map is created with the correct total frame size
refactor TypesafeConfigurator class to improve code readability and maintainability
camel - graphql : added karaf feature test for camel - graphql
refactor ` main ` method to ` bug1 `, ` bug2 `, and ` bug3 ` methods in ` RFE28919
remove the use of ` ` utf - 8'' from the url encode in http client
replaced the unsupportedPlatformTool method implementation with a new ` UnsupportedPlatformTool ` class to simplify the class structure and improve code readability
changed the variable type of loopCount from double to int and updated recovery retry logic to improve code clarity and ensure proper handling of recovery delays
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
[ hotfix ] [ test ] add randomness to address manager test
removed unused imports and updated layout constraints in VLCVideo. java to streamline code and improve UI consistency
use bitsquare instead of bisq
updated AUTHORITY string from " com. klinker. android. talon. provider " to " com. klinker.
updated user configuration directory to include ". m2 " and modified file handling in MBoot. java to ensure compatibility with m2 and prevent
added buffer binding in VertexBufferObjectWithVAO. java to enable efficient buffer management for improved performance
updated ServerHttpSecurity configuration to enhance security protocols for improved access control
added a JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests. java to temporarily disable tests that are not ready for execution
added default headers support to HttpClientProperties and CasCoreHttpConfiguration classes to enhance HTTP client configuration flexibility by allowing custom header configurations
add thingboardcredentialsviolationresponse for security exception
deleted the NoOpConfigPathGetter. java file to remove unused code to streamline the codebase
replace Codec. base16Decode with Bytes. fromHexString in EngineAuthService. java to improve code clarity and reduce dependency on Base16 decoding
updated imports and added logic to handle CSS float values in FloatUtil. java to ensure proper styling based on the current CSS property
planner : add planningfactcollectionproperty and planningentityproperty to solve problemfactchange
replaced the implementation of getDefaultHeaders ( ) with a private static method defaultHeaders ( ) in RestUtils to improve encapsulation and ensure default headers are
( chore ) camel - http - client : replace string with charset
added ` getJobId ` method to ` StepContext ` and a corresponding test in ` StepContextTests ` to provide a way to retrieve the
replaced ` Long. valueOf ` with ` Long. compare ` in ` ExpandableUploadListAdapter. java ` and ` FileStorageUtils. java
reduce log level from error to debug for jdk client
updated import statements in LegacyAuthenticationHandlerAdapter. java to reflect the new authentication handler structure
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : don't check if the filter be owner of the primary key before remove it from the network
move static wrap ( inputstream in pgpkeyring ) from pgpkeyring to pgpkeyring
[ java ] ensure dataoutputstream be close in a finally block.
added a new test method ` testSelectAllFromView ` and modified column name handling in ` HiveBaseResultSet ` to improve test coverage and
modified FocusTransitionTest. java file to improve test coverage and maintainability
replace org. gwtproject. core. client. GWT with com. google. gwt. core. client in ShareControllerW. java
added null check for sourceTask before retrieving counters to avoid potential NullPointerExceptions when sourceTask is not a MapRedTask
added a null check for the readListener variable to ensure that the readListener variable is not null to prevent potential NullPointerExceptions
added color change listener and streamlined color selection logic in AppearancePanel. java to improve code clarity and maintainability by encapsulating color
updated the constructor call in TaskHelper to use'hidden'instead of'false'to ensure the correct parameter is passed to the constructor
fix intermittent failure in failovertimeouttest
pdfbox - 4071 : close randomaccessfile in createfromrandomaccess ( )
added import statement for DefaultParameterHandler in LanguageDriver. java to enhance functionality by integrating default parameter handling
lsra spill optimization : don't optimize spill position for defloop
test : add a test for micronaut ast transformation
fix : close on completion be call twice
changed the default value of serviceAdvisorType from null to PYTHON to ensure the service advisor is initialized with the correct Python type
refactor resolver handling in GenericDatumReader to use a ThreadLocal to improve thread safety and maintainability of the resolver retrieval process
changed the parameter type from Collection to List in Path and updated the return type in PdfContentStreamProcessor and PdfCleanUpContentOperator to improve
replaced byte array size with random byte array generation in SendCoinShieldTest. java to improve randomness and prevent potential issues with large data
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` class to enable personalization of users based on specified date formats
removed redundant code block for better readability to streamline the code for better maintainability
simplified the scroll method calls by removing unnecessary parameters to improve code readability and maintainability by eliminating unnecessary parameters
changed the visibility of the ` pointer ` variable from private to public in ` FlatRecordReader. java ` to allow external access to the ` pointer
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` to improve clarity by using a more appropriate class
fix : castexpression can't implicitly cast to boolean
abstractresource : remove ( ) don't remove an item from the accept list
added a new boolean parameter to TaskView. java to enhance functionality by providing a default value
added ` isAutoIncrement ` method to ` LiquibaseDataType ` and implemented multiple ` @ Override ` annotations in ` LiquibaseDataType `
added a default error text for Internal Server Error in ExceptionResponse to provide clearer feedback on command failures due to internal server errors
updated imports in DeadListenerTest. java and LocalManagementTest. java to use ProcessTools and Utils instead of ProcessTools and ProcessTools to
replaced ` add ` method with ` push ` method in ` BasicEventSimulationEngine ` to improve simulation mechanics
added support for ajp port configuration in GitBlitServer. java and updated related methods in GitBlitServer. java to ensure proper
added type coercion logic in TransTypes. java and created a new Intersection03. java file to ensure proper type handling for compound types
rename the test class from EmbeddingTest to EmbeddingITest to clarify that the test class is intended for integration testing
added a conditional check for the starting of the toolkit thread to ensure that the toolkit thread is only created when the current thread is present
add -- localizationcompressinparallel to bundle content substitution.
hide surface and surface when platform be WINDOWS
fix temp directory name in recordextractortest
added constants for ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` in the CommonParameter class to enhance configurability for
added a service property to GoogleCloudFirestoreTicketDocument and enhanced the countTicketsFor method in GoogleCloudFirestoreTicketRegistry to improve
refactored the Generate. java file to improve code readability and maintainability
json _ format ( ) : fix scalarfunction with nullable parameter
updated BadgeRenderer and IconPalette to use a constant for dots and modified badge handling logic to improve code readability and maintainability by using a
removed the'final'modifier from the'getConfiguration'method in FreemarkerManager. java to ensure that the'getConfiguration '
added a test for invalid excluded package patterns in OgnlUtilTest to ensure that the application correctly handles invalid exclusion patterns
updated device Udid retrieval logic based on the platform name to ensure correct identification of devices based on their respective SDK names
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to use Injectable ResponseMeta instead of InvocationType to enhance error handling and improve test coverage for
added null checks for mScript and mAllocIconIds, mAllocLabelIds, and mInvokeResetWAR before saving state to ensure
added a static final boolean for TEXT _ BURN and modified the conditional logic for rendering based on line count to introduce a shadow layer for text
added teardown methods for table and view operations in TestColumnAccess and TestReadEntityDirect to ensure proper cleanup of temporary tables after tests
added parser retrieval to SecurityNamespaceHandler to enhance security by ensuring proper parser context is used
added a fastpath check in BoundedLocalCache and implemented a new fastpath test in BoundedLocalCacheTest to enhance cache management capabilities and ensure
updated the ` RawConnection ` interface to extend ` WebSocketConnection ` and refactored the ` complete ` method in ` RawConnection ` to
added multiple test cases for assertions in SoftAssertionsPerfTest to ensure comprehensive testing of assertions in the soft assertion framework
added a new constant for test failure codes and updated the ` assertExitCode ` method in ` ProjectWorkspace ` to improve error handling by ensuring
added a check for markupEnabled before processing the xAdvances array in GlyphLayout. java to ensure that subsequent runs respect markup settings
refactor test assertions to use streams for comparing score documents to improve code readability and maintainability by using modern Java features
updated enumClass retrieval from getEnclosingClass ( ) to getSuperclass ( ) to ensure correct class hierarchy for anonymous classes
remove unnecessary cast in playerconnection. flush ( )
added a check for whether the drawing process has already started to prevent unnecessary execution of draw listeners
refactor multiple classes including CheckIndex, BlockTreeTermsReader, FuzzyTermsEnum, and Builder to improve code organization and maintainability
updated import statements in ReplicaAssigner. java to streamline import statements to improve code readability and maintainability by consolidating rule imports
changed the default return value of getBoolean for MEDIAPARSERV2 from false to true to ensure that the media info parser is valid for
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 567 : allow
added assertions for table existence and permission verification in FolderPermissionBase. java to ensure that tables are properly deleted and returned as expected
add multichat operation set definition and gibberish protocol implementation. related issue : issue # 241, issue # 244,
updated the random color calculation in PastelColor. java to use a fixed color base to enhance variability in color generation for better visual
updated imports in ScriptEngineFactory. java to improve code clarity and maintainability
updated image handling in HolographicViewHelper to use original and outline bitmaps to improve image rendering quality and maintain consistent visual representation
refactor request method handling to use ` HttpMethod. fromString ` instead of ` HttpMethod. GET ` to improve code readability and handle potential null values gracefully
improve the performance of multwordpreprocessor. inferpos ( )
[ hotfix ] fix checkstyle violation in iochannelutilstest
updated class loading logic in mmm Table. java to handle different output formats based on the HivePassThroughOutputFormat to improve compatibility with different output
updated references in ChunkListener, AfterChunk, and BeforeChunk classes to improve code clarity and maintainability
updated validation in DOMBuilder to include additional bounds to ensure that invalid input does not result in out - of - bounds errors
updated HierarchicalUndirectedGraph handling and messages in multiple UI classes to improve consistency and clarity in graph representation
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region, fixed
added a new file ` PublicStaticInterfaceMethodHandling. java ` implementing interfaces with static and default methods to demonstrate the usage of default methods in
camel - 1331 : added support for property placeholder in keyselector. thanks to martin for the patch.
fix a bug in logresolbabletrace.
application application application application
updated JGit version from " 1.0. 0 ( 201106090707 - r ) " to " 1.1. 0 ( 20110915
use client key instead of client id for @ path ( ` ` path'' )
int - 181 add namespace handler for ` ` transformer''
updated BACK _ FACTOR and REWIND _ TIME constants in ResumeObj. java to improve clarity and accuracy in duration calculations
added ` isScrollWheeling ` method to ` CodenameOneImplementation `, ` Button `, and ` JavaSEPort ` classes
updated usage formatting in UtilityCommands. java and DocumentationPrinter. java to improve code readability and maintainability
fix typo in collection. map request attribute
updated method signatures in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to use mergeFiles instead of seqFiles and unseqFiles to improve
removed duplicate @ Override annotations in Observation. java to improve code clarity and maintainability
updated synchronization logic in ProjectPropertiesModelImpl. java to ensure the project's ruleset is updated according to preferences
abstractsootfieldref : remove unnecessary synchronization
use snakecase naming convention in elastic meter registry ( # 2481 )
added methods for listener listeners and command creation in IController and TinyGController, and updated BackendAPI to use IController instead of AbstractController
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify rendering of a huge horizontal rule in the
replace all instances of ` System. out. println ` with ` TTY ` in TypeSystemTest. java and PartialEscapeAnalysisPhase.
updated multiple Java files for consistency to improve code maintainability and readability
change condition from " frameLength = = 0 " to " frameLength < = 0 " to ensure frameLength is valid and avoid potential errors
added return statements for zeroValue in IntFloatMap and IntIntMap classes to return values instead of returning zeroValue directly
updated ImageDownloadService to use a cached Image variable instead of direct icon updates to improve performance by avoiding unnecessary updates to the component form if the
added a null check for registered in the HandlerRegistration class to prevent potential NullPointerException when registered is null
remove the hasSibling ( ) method from AttributeNode, DocumentNode, ElementNode, and HtmlNode classes, and modify return logic in I
added null check for results in RedisDistributedMapCacheClientService. java to avoid potential NullPointerException when results is null
updated logging statements in MobFileCache. java to improve clarity and consistency in log output
refactor ColConvCCMTest class to improve code readability and maintainability
replaced instance variable declarations with local variables for ` target `, ` allowCovariantReturns `, and ` syntheticNameChar ` to
pdfbox - 2576 : avoid classcastexception in pdftextstripperbyarea
refactor JSON handling in Json. java to use asString ( ) method and introduce a new class X to improve code clarity and facilitate easier
camel - 15836 : fixed file consumer so it don't fail if the file don't exist.
added a Runnable to invokeLater in bug6638195. java to ensure tasks are executed on the Event Dispatch Thread
updated the maximum size calculation in CompressExtension. java to ensure the correct size is utilized for message processing
update steering value calculations in multiple car test files to improve accuracy of steering value calculations
replace ` Arrays. equals ` with ` MessageDigest. isEqual ` in ` PasswordEncryptionService. java ` to improve performance by using a more efficient
updated JdbcSerDe to use LocalDate and LocalDateTime instead of milliseconds to improve accuracy and consistency in date and timestamp handling
updated the VERSION constant from 2 to 3 and modified metadata reading logic to ensure compatibility with newer metadata formats and improve metadata handling
added FlywayInitializerJpaDependencyConfiguration to ensure proper dependency resolution for Flyway configuration
added a call to sorted ( ) on the ClassesImpl class to ensure that the classes are processed in a consistent order
added a method to retrieve the current stable state in LauncherStateManager to enhance state management by providing access to the current stable state
refactored methods in SharedInformer class to improve code readability and maintainability
refactor method invocation logic in TestCloseScope0. java for different memory scope versions to ensure compatibility with different runtime versions
increased the timeout duration of the test method from 50, 500, and 5000 to 5 seconds to allow more time for the test to complete successfully
updated CaptchaChannelProcessorTests. java to enhance test coverage for Captcha functionalities
fix a bug in the metadata import when the owner of a collection do not match the owner of the collection
don't retry save cache file if cache file can not be save
updated TrackingDirectoryWrapper instantiation to use a variable for the directory parameter to improve code clarity and maintainability by using a more descriptive variable name
fixed bug in unusedimports ; additional report for sourceforge pmd.
added validation for insert overwrite operations on partitioned Iceberg tables to ensure data integrity by preventing overwrite operations on partitioned Iceberg tables
updated assertions in BootstrapTests to verify correct SAML configuration keys to ensure SAML configuration keys are correctly validated for the default identity zone
ignore non - static local field in excluder.
don't synchronize on an unexpected e - mail address, just log a warning.
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT from CommentsParser. java to
added IOException handling to the release method in IndexWriter and Lock classes to improve error handling and ensure proper resource management
change package of DataSourceInitializer from org. springframework. jdbc. datasource to org. springframework. batch. test to improve organization and clarity
added a check for non - unary operators in SpelExpressionTransformer and refined operator handling in OperatorNode and LiteralNode to ensure proper transformation
updated ByteBuddy instantiation to use TypeValidation. DISABLED to ensure compatibility with the latest ByteBuddy API changes
replaced instances of DeclaredType with TypeElement in JavacRoundEnvironment. java to simplify type handling and improve code clarity
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and set timeout in MySQLTableLockTest
allow loggingapplicationlistener to reference system property's logfile
added redirect handling in ServiceApiRequest by introducing isRedirect method and modifying request method parameters to improve reliability of HTTP requests by ensuring
added constants for service mappings and refactored environment configuration handling to improve code clarity and ensure consistent handling of environment configuration
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread. java ` to ensure the
updated DB _ PATH _ REGEX and DB _ PREFIX constants in BaseAndroidTestCase. java and GeocodeHelper. java to improve clarity and consistency
updated return statement to use HomeDataSource to retrieve unread count based on the current account context
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for ` threadpool - virtual
modified the ` getAllOrder ` method to accept a ` limit ` parameter and introduced a maximum limit for market price retrieval to enhance flexibility in order
refactor user retrieval logic in HomePage. java to handle null user cases to improve robustness by avoiding potential null pointer exceptions
fix localfilesystem. match (.. ) for relative wildcard path
added MAX _ WIDTH and MAX _ HEIGHT constants and modified bounds handling in ComponentBuilders. java to ensure dimensions do not exceed predefined maximum dimensions
added logging functionality and deprecated the request method in CommonsHttpSolrServer. java to enhance debugging capabilities and maintain consistent method signatures
updated error handling in PrintController to capture exceptions to improve error reporting for document creation failures
replaced ` Optional. of ` with ` Optional. of ` for file formatting in ` CrateType. java ` to improve code readability and
added number validation logic in SpellChecker. java and created a corresponding test in SpellCheckerTest. java to ensure correct processing of number
updated the MESSAGE string in HelloWorld. java to ensure consistency in message formatting
refactor file action handling in FileDisplayActivity to improve code clarity and maintainability by encapsulating action logic
hbase - 25836 addendum disable daemon thread for replicationhandler. install ( )
updated the update method call in StoreCachedTest. java to ensure consistency in method usage
refactor StreamerLoader constructor to use a more descriptive constructor parameter name to improve code readability and maintainability by using a more descriptive constructor
added support for 3D Collision Detection and Rigid Body Dynamics in DependencyBank. java to enhance the software's capability to generate 3
added maximum recycled views for various grid types in AppsContainerRecyclerView to optimize memory usage and improve UI consistency
added a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest. java ` to ensure proper functionality
ExampleBaritoneControl. java to handle cases where tags are not valid and no block location are available to improve user experience by providing clearer
added import statements for ParsedNode, ParsedNodeException, and ResourceAccessor in CreateProcedureChange. java to enhance functionality by integrating ParsedNode
added null bitmap handling for null values in FilterOperatorUtils. java and created corresponding test cases in NullHandlingEnabledQueriesTest. java to ensure
added validation for bootstrap method signature demands and arguments in JDynamicInvokeExpr. java to ensure correct argument types are used for bootstrap methods
( chore ) camel - jms : fix test failure on slow box
clear formatterters from runtime options in CucumberInstrumentation. java to ensure proper formatting during test execution
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and improved type safety in ` AbstractRegistered
modify workspace label adjustment logic to conditionally hide workspace labels based on cell size to improve layout responsiveness by ensuring workspace labels are only visible when
refactor assertions in ReplicationFactorTest to use a unified assertRf method to improve code readability and maintainability by centralizing assertion logic
sulong : do not initialize llvm context if pre - initialization be enable.
added JUnit Ignore annotations to ChaosMonkeyNothingIsSafeTest. java and ChaosMonkeySafeLeaderTest. java to
replace RuntimeException with JsonIOException in error handling to improve error handling by using a more specific exception type
replace Integer. valueOf with Integer. parseInt in VisualScoreTagTest. java to ensure proper parsing of integer values
updated error messages for clarity and consistency in file handling to improve code readability and maintainability by using more descriptive names
added a check for high - level consumer segment names in HLCSegmentName and LLCSegmentName to ensure only valid segment names are processed
added multiple ` startActivity ` methods to ` ShadowFragment ` and created corresponding test cases in ` FragmentTest ` to enhance fragment functionality and ensure proper
updated the date calculation to use the current time from clockReader instead of the current time to ensure accurate date representation in the application
added " - target " with a value of " x86 _ 64 - none - linux - android " to the return statement in TargetCpu
added a method to delete account files in FileDataStorageManager and integrated it in ManageAccountsActivity and FileDataStorageManager to improve file management
updated command format from " -? n " to " - h " in SchemaCrawlerCommandLine. java to improve clarity and consistency in command
added a factory method to create a suite description and updated hashCode and equals methods to improve uniqueness and prevent null pointer exceptions
replaced deprecated MultiFormatReader with MultiFormatReader for barcode decoding to improve code clarity and maintainability by using a unified MultiFormatReader
removed unnecessary ImmutableList parameter from BuckTarget constructor to simplify constructor signature and improve code clarity
added unit tests for the ` getRange ` method in ` GWCZoomContextFinderTest ` to ensure that the method correctly returns the expected range
added support for dependency tracking in JRubyScriptEngineConfiguration to enhance flexibility in dependency tracking configuration
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` to ensure the correct servlet path is used for authorization
don't add keyspaces when go offline. patch by jbellis
fix for splash screen bg image in macos
updated TunerManager, TunerManager, RTL2832TunerController, and R820TunerConfiguration
added HasTests interface to AbstractShBinaryDescription and implemented a new test for shbinary functionality to enhance functionality and ensure proper integration of shbinary
added a condition to include " db : hsqldb " in TestFilter. java to enhance database connectivity verification in the application
removed unnecessary return statement in JavabinLoader. java to improve code efficiency by eliminating unnecessary processing
trufflestacktrace : only materialize host exception if the stack trace be empty.
refactor service loading and export provider retrieval in GraalServices. java to improve service loading logic for Java 8 and ensure proper provider export functionality
add unit test for duplicate command handler resolution. fix http : / / github. com / axon - dev / axon - dev /
[ flink - 20865 ] [ stream ] make fine - grained resource management configurable
fixFishHook not be able to place fish properly.
camel - 15836 - create an aws - ftp component base on sdk v2, regen doc
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
added a ` compressPackageNames ` parameter to the ` GangliaReporter ` constructor to enable compression of package names in the metric reporting system
added a check for empty items in AppsContainerRecyclerView to avoid unnecessary processing when no items are available
added a conditional annotation for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration to ensure that the bean is only created
[ log4j2 - 1752 ] xmllayout now support property.
added a new parameter ` OMIT _ HEADER ` in ` CommonParams ` and implemented the ` remove ` method in ` NamedList `,
update property retrieval method in EscherProperty. java and add unit tests in EscherComplexProperty. java and EscherSimple
refactor code to use the ` Description. getBuildRuleType ` method to improve code readability and maintainability
remove method numberer from the scene before modify the method numberer to ensure that the method numberer correctly reflects the current scene hierarchy
don't log illegalargumentexception at testifdisputeriesreplay
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject `, modified ` TableRetriever ` to
wallet : set not _ seed _ in _ chain confidence to false.
allow @ requestvalue annotation for @ body and @ header ( httpmethod. permitsrequest )
don't attempt to load config / factories / constants. json if they exist
hbase - 25880 catch throwable in hregion. open ( ).
replaced null length checks with length comparisons to improve code clarity and prevent potential NullPointerExceptions
[ java ] don't check for image correlation id when a subscription be already receive.
[ hotfix ] [ test ] make testjvmprocess. destroy ( ) more robust.
added support for Oracle database in the conditional statement to ensure compatibility with both MySQL and Oracle databases
camel - 5957 : avoid npe if no store connect to mailstore
added token validation in the parser to ensure there are more tokens in the query before proceeding with further processing
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` k'' complete
added a method to retrieve the data file name in Model. java and modified model creation logic in Voice. java to improve data handling and
added email domain property and related getter / setter methods in LdapIdentityProviderDefinition and IdentityProviderDefinition to allow for setting and retrieving the email domain
added default read and connect timeout constants in Configuration. java and updated timeout retrieval in ViewRegistry. java to enhance flexibility by allowing configurable timeout values
api : don't try to process flow when myDeferredConcepts or myConceptLinksToSaveLater be empty
added RedisCategory import and annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
updated the ` FindDeprecatedUses ` test to use parameterized tests with ` @ NullAndEmptySource ` annotations to improve test reliability by
updated the paintComponent method in WaterfallPanel to call super. paintComponent to ensure proper rendering of the component in the UI
removed unused imports from multiple configuration classes to improve code cleanliness and reduce unnecessary dependencies
updated ContractEventTriggerCapsule to set event signature full and modified LogEventWrapper to include event name and signature to enhance event handling and provide
( chore ) camel - test - infra - filetest : use endsWith ( ) instead of contains ( )
replaced the clearing of the rectangle with a color - based approach using the g. setColor ( getBackground ( ) ) method to improve visual consistency by
jbrules - 2852 : don't fail compilation if there be no invoker
removed unnecessary print statements from various classes to clean up the code and improve readability
added a conditional check for NaN scores before assertions in TestFieldCacheSort. java to ensure tests are only executed when the score is NaN
[ device _ profile ] use set. copyof ( ) to avoid concurrentmodificationexception
added logic to handle zero - values in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to
rename ` offerMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offerBtcPubKey ` and ` tak
updated type parameters in FunctionAllGroupHeadsCollector, FunctionAllGroupsCollector, and FunctionSecondPassGroupingCollector to enhance type safety and prevent
[ drools - 561 ] avoid concurrent modification exception when edit a session in kiecontainer
updated the instantiation of HiveMetaStoreClient to use'this. conf'to ensure proper context is used for the client configuration
added a conditional check to return early if modalness matches mModalness to improve performance by avoiding unnecessary processing when modalness differs from default behavior
added a test for ` CodecCapabilities. createFromProfileLevel ` in ` ShadowMediaCodecListTest ` to ensure correct handling of video formats based
fix # 5460 : when enter key use, focus be wrong
added validation for width and height, handled potential OutOfMemoryError in X11SurfaceDataProxy, XRPMBlitLoops, and introduced Vol
updated the thousands separator from ". " to " \ u00a0 " in FormatData _ uk. java to ensure correct formatting for
updated AsyncStressTest and StressTest to use AtomicInteger for thread safety to improve thread safety and performance in concurrent scenarios
added beta flavour support and improved menu visibility handling in multiple fragments to enhance user experience by providing clear feedback when beta flavour is
added access, name, and description to the SearchMethodVisitor class to enhance functionality by associating access, name, and description with the context
added multiple sleep calls in IoTDBInsertWithoutTimeIT. java to ensure proper synchronization during insert operations
refactor code for clarity in DLNAResource. java to improve readability and maintainability of the code
http : / / issues. apache. org / jira / browse / amq - 3682 - renames resequencer to stream
fix deadlock in tablereader. readunxn ( )
refactor key manager type and algorithm retrieval in ThriftSource and ThriftRpcClient classes to improve code clarity and maintainability by centralizing key manager algorithm
refactor ` getSingleSourceApplicableTest ` method to return ` TreeVisitor <?,? > ` instead of ` JavaIsoVisitor ` to
mania now exit if there be a tab key and the keyboard be not repeat
change access specifier from PACKAGE _ PRIVATE to NONE across multiple files to ensure consistent access specifications for enum declarations
corrected spelling of " unHandled " to " unhandled " in method signatures and introduced a new class T99153 to improve code clarity
refactor stripe statistics retrieval logic in OrcInputFormat. java to improve clarity and maintainability of the code
added a null check for the exception before proceeding with further operations to avoid potential null pointer exceptions
myhentaicomics ripper now use https : / / myhentaicomics. com instead of http :
added argument checking and output for jar version in App. java to ensure jar version is available for processing
replace split ( string,.. ) with splitTokens ( string,.. ) to split tokens from the appletList for processing tokens
added rotation functionality and input connection handling in ConsoleActivity and TerminalView classes to enhance user experience by allowing customizable rotation settings
updated the ` hq ` variable type from ` PriorityQueue <? > ` to ` PriorityQueue < ScoreDoc > ` and added a suppression
added a null check for ownerConnectionAddress in ClientSmartListenerService. java to prevent processing when the owner connection address is null
camel - 5957 : added support for the headersmapfactory attribute on camel - core
updated formatting in JavaCompiler. java and Diagnostic. java to improve code readability and maintainability
jms outbound gateway now implement InitializingBean and set connection factory and reply channel to allow flexible configuration for outbound gateway
updated the index parameter from'i + 1'to'i 2'in ArrayFunctions. java to correct the logic for expecting an array
updated class loader initialization and added error logging in AbstractScriptProcessor and InvokeScriptedProcessor classes to improve class loading robustness and enhance error handling
updated PooledConnectionImpl to use ` org. postgresql. PGStatement. class ` instead of ` Statement. class ` to ensure compatibility with
fix cassandraiotest. testmemtablesandrefreshsizeestimates
changed log level from error to warn in AtomicRemainder. java to improve clarity of error logging
fix ttl expiration when auto - compaction be enable. patch by jbellis
fixed - rblockingdeque. poll ( ) and rblockingqueue. poll ( ) method don't take a second. #
refactored printMap calls in JobInspectCommand. java to improve code readability and maintainability
refactor Engine class to improve code readability to enhance maintainability and facilitate future development
refactor code to use ` entrySet ( ). stream ( ) ` for stream operations to improve code readability and maintainability by using ` entrySet (
[ rietmq ] fix aclclient to use access key and password.
changed the condition from ` numIndexDims = 1 ` to ` numDataDims = 1 ` to correct the logic for handling data
[ hotfix ] fix npe in notebookserver. run ( )
updated the parameter for the ExpressionNode from'funN'to'lt'in the addListElement method to ensure correct evaluation of the
removed the ` public ` access modifier from the methods ` verifyIdsAreStable ` and ` getNodeId ` in ` NodeIdAccessor. java ` to
server : improve error message when fail to create snapshot policy
modified access modifiers of methods in ItemWriter. java from public to package - private to restrict access to these methods for better encapsulation
updated the mocked ThingImpl to use " test " instead of an empty string to ensure the mock accurately reflects the intended functionality of the
add a ` toString ( ) ` method to ` ImageNameSubstitutor ` class and implement a corresponding test in ` ImageNameSubstitutorTest ` to
replaced FSDirectory with RAMDirectory in TestNorms. java to improve performance by using a more efficient RAMDirectory implementation
added a check for the height of the text rectangle buffer before calculating the line height to ensure that the line height does not exceed the defined height
refactor WalletAppKit class to improve code readability and maintainability
oql : remove nashorn engine parameter from getinitstream ( )
remove JCheckBoxMenuItem from the menu and buttonGroup in ChatTransportSelectorBox. java to ensure that only relevant JCheckBoxMenuItem is removed from the menu
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest `, ` Context `, and ` ContextImpl `
fix : set bsqblockchainexplorer null if not present
added attributes management methods to the StandardSession class to enhance session management and improve attribute handling
added assertions to verify the type of the plain bean in TestDbJson _ List. java to ensure that the retrieved plain bean is validated as
updated averages array from pageSize to initialPageCount to ensure averages accurately reflects the initial page count
refactor BatchCommandLineLauncher class to improve code readability and maintainability
added support for embedded database and transaction manager in BatchMetricsApplication to enable integration with HSQLDB and improve database management capabilities
remove unauthenticatedhttpservice interface from glowrootloghttpservice
pdfbox - 2576, pdfbox - 2576 : set composite to non - stroke java composite
removed unnecessary synchronized keyword from ` close ` and synchronized block in ` DocumentsWriter ` and ` DocumentsWriterPerThread ` classes to improve performance by
added methods for retrieving and setting multiple choice options and validation constraints in UiBinding. java to enhance UI component functionality for better validation of UI properties
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for string representation to improve clarity and consistency in string representation
bugfix : only update the stored copy of the tree for a full save.
ignore testalldictionary. testalldictionary. testalldictionary. testalldictionary. testalldictionary. testalldictionary. testalldictionary
refactor KrakenMakerFees and krakenTakerFees lists to use diamond operator to improve code readability and maintainability
removed import of CharTermAttribute from tokenStream to streamline code by eliminating unnecessary attribute retrieval
refactor NBJavacTrees to improve code organization to enhance maintainability and readability of the codebase
added a check for unsupported data encoding in VectorizedPrimitiveColumnReader to ensure proper handling of unsupported data encodings
added SLF4J logger annotations and modified conditional logging logic in HttpSolrCall. java to ensure static Admin UI files are always accessible and
destroy metadata service proxy when service instance change listener be enable.
fix infinite recursion in defaultentityqueryrepository. getlvlfilter
updated message formatting in HubChangeExecListener. java to handle null changelog IDs to improve clarity of error messages when no changelog is registered with
add a try - harder hint to the abstract black box test.
replaced ` int ` with ` ProcessExecutor. Result ` in ` CxxPreprocessAndCompileStep. java ` and added tests in ` Build
updated the event limit logic in ObjectStore. java to ensure that the query does not exceed the defined maximum number of events
refactor validation logic in ValidatedLocalValidatorFactoryBean to improve clarity and maintainability of validation checks
don't clear temporary block entity list in worldprovider.
[ gr - 34494 ] remove redundant type check in intrinsificationarraycopyphase.
no longer use java. util. logging. logger in unit test
replaced the ` WantedAnywhereAfterFollowingInteraction ` class with a new ` WantedAnywhereAfterFollowingInteraction ` implementation to
added validation checks for owner address and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure that only valid accounts
replace sorting of commands with a sorted version of the commands to ensure commands are processed in a consistent order
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated property assignments in BaseSingleTreeBuilder to use setProperty instead of addProperty to improve code readability and maintainability by using setter methods
updated AsmLoader initialization to use the interfaceClass's class loader to ensure proper loading of classes based on the provided ClassLoader
pdfbox - 2852 : avoid npe, a suggest by valerybokov
update print statements in Java2TypeScriptTranslator to conditionally use " declare " or " namespace " based on whether the class is definition scope
replaced the EmptyServerHandler with an AbstractHandler in HttpClientTest. java to ensure proper handling of server requests during testing
removed an array of action listeners from the inputManager to simplify listener registration for better readability and maintainability
fix npe in abstractsqmpath # getlhs ( )
updated package declarations in multiple test files to improve organization and clarity of test code
modified AwtCanvas. java to improve image filtering logic and streamline filtering process to enhance performance and maintainability of the code
ensure libgraal be start before graal initialization.
remove dataflowportabilityapiunsupported from usestimersinpardo test
chore : update java microgenerator to 1.0. 1 ( # 49 )
added serialVersionUID to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these enum classes
update CallStack. java for improved functionality to enhance performance and maintainability of the code
log warn when per - node max - size configuration do not allow any data in map.
update return statements to use " LST " instead of " AST " across multiple files to ensure consistency and accuracy in documentation regarding LST elements
updated the calculation of scoreablesPerThread and modified the way nThreads is calculated in ThreadedAcousticScorer. java to
replace AssertionError with returning null in NetHooks. java to simplify error handling by returning null instead of throwing an AssertionError
updated method calls to use window ( ). title ( ) instead of getServerAddress ( ) in ApplicationControllerFluentLeniumTest. java
added default ` makeString ` methods for ` ParallelIterable `, ` RichIterable `, and ` AbstractSynchronizedRichIterable `,
updated the order setting in OidcServicesManagerRegisteredServiceLocator to use a constant to improve code readability and maintainability by using a named constant
added a ` ProposedWeakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related logic to ensure that weak associations
modified the Deflater class implementation to improve compression efficiency and performance
added error handling for throwable exceptions in Font. java to improve robustness by ensuring IOException is properly propagated
added a null and empty string check for content in VersionTypeBinding. java to ensure that a Version object is returned when content is null or
refactor the ` places ` variable to directly return from ` loadAttractionsFromLocation ` and update the ` onPostExecute ` method to improve code clarity
convert content type to lowercase in MailConverters. java to ensure consistent handling of content type regardless of case
add support for ssh - rsa key spec ( relate to github # 158 )
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for better control over folder name updates
updated InheritanceCacheTest. java to replace specific Hibernate annotations with a wildcard import and added a doInJPA method to improve code clarity and ensure
updated import statements in ConnectOAuth2RequestFactory. java and added getUserApprovalRequest method in TofuUserApprovalHandler. java to ensure
fix influx tag name convention ( # 645 )
fix : add miss ` ` marker'' option to quickfix plugin
updated key from " Cookie " to " Cookie2 " in HttpURLConnection. java to ensure correct validation of cookie data
added a static method ` classMetadataUnsupported ( ) ` in ` Platform. java ` and refactored the ` classMetadataUnsupported ( )
added functionality to toggle the " Clear All " button and " Clear All space " based on user preferences to enhance user experience by allowing users to
modified the ` desiredRepoVersion ` variable to be final and adjusted timeout duration in ` ClusterStackVersionResourceProvider ` and ` HostStackVersion
remove memoryleaktest since it be not use.
updated the return URL format in ServletTester. java to ensure the correct local address is used for HTTP requests
added support for mvdw placeholder api in plotsquared by setting.
fix partition assignment test by assert cluster size before start node
added a SingletonHolder class and implemented FFIProvider instantiation based on the " jafl. UseJNA " system property to enhance flexibility
tika - 2576 -- add test for hierarchical file list in batchprocess
added null checks for mongoPersistentEntity and improved null safety in MongoTemplate to enhance robustness and prevent potential NullPointerExceptions during save operations
updated position initialization logic in NodeClass. java to use NODE _ LIST instead of 0 to ensure the position accurately reflects the data being
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated related test cases to enhance trading functionality
updated logging statements in RealtimeSegmentDataManager and StoppedUtils to use placeholder syntax to improve logging consistency and readability
changed the maximum parallel tasks variable from 10 to 100 in OverseerTaskProcessor. java to improve code clarity and maintainability by using a
replace ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex classes to improve thread safety and
doc ( regen doc ) : fix javadoc for dictionary class.
added a null check for the destination buffer in FlipTransition. java to prevent potential NullPointerExceptions when the destination buffer is null
( chore ) camel - msv : remove @ ignore from camelmsvtest
updated the conditional check from " beginCycle = = currentCycle " to " beginCycle > currentCycle " in DelegationService. java to
updated ` RandomValueStringGenerator ` from 6 to 10 in ` JdbcExpiringCodeStore ` and modified test assertions in ` CodeStoreEndpoints
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure correct matching of unique constraints in the database
updated the description processing logic in MediaDetailFragment. java to improve accuracy in extracting language codes from the description string
log recoverable exception when a classcastexception be encounter.
listimage : : add reference filter to listimage api
( chore ) camel - jms : remove bridgeerrorhandler a it not support on the jms endpoint
added conditional checks in OpExclusionUtils. java to handle cases where no ops are found for exclusion to improve code robustness by ensuring
added return statements in DatabaseCommand. java to ensure that the method handles return values correctly
updated Politician instances in HonestPoliticianExample to use more descriptive names to improve code clarity and maintainability
[ zeppelin - 5952 ] fix nullpointerexception when use zeppelin - 5953 ( # 5954 )
updated the restlet URL construction to conditionally use the port based on the provided value to ensure the correct restlet URL is used based on the
removed unused import statements in SchematicFormat. java to streamline the code and improve maintainability
added a system property " hive. query. max. length " in QTestUtil. java and removed an overridden configurations in SessionState. java
changed access modifiers from package - private to private in WebServer. java and added a baseHttpConfig method in WebServer. java to enhance
updated method names from " writeHadoop " to " hdfsSink " across multiple files to improve clarity and consistency in naming conventions
updated HiveConf to compare " spark. app. name " with " spark. app. name " to ensure that the default application name is
rename variable ` whiteName ` to ` includedName ` in ` ManagedClassFactory. java ` to improve code clarity by using a more des
simonstewart : implement ability to maximize a window without wait for the rest of the window.
updated file system paths and added methods for retrieving main cell Buck OUT to improve clarity and functionality in managing embedded cell Buckouts
added an assertion to check for specific error messages in TestXMLEntityExpansion. java to ensure that the exception message does not contain " entity
modify table offset and length calculations to mask out non - positive values to ensure proper handling of non - positive values in table operations
added an assertion to verify that the customized form is not null to ensure that the customized form is validated before proceeding
updated the buffer size calculation to use a variable for coordinates to improve code readability and maintainability by reducing the risk of out - of - bounds
refactor flavor handling in AndroidBinaryDescription to check for unrecognized targets to improve robustness by ensuring only valid targets are processed
change buffer assignment from offset to i to ensure correct buffer generation for improved rendering performance
added three new classes, Property, PropertySuper, and TestClassResolutionFail, along with a test method to demonstrate the handling of NoClassDefFoundError in
terminate the lifecycle service only if the shutdown hook is enabled to ensure proper termination of the lifecycle service based on group properties
updated filter chain proxy class name from FilterChainProxy to FilterChjainProxy to improve clarity and consistency in class naming
[ hotfix ] [ table - common ] fix percentile aggregation
added schema loading checks in MetaDataBasedSQLCompletionProvider and modified table retrieval logic in QueryTypeAnalyser to ensure tables are loaded only when the
initialized ` baseType ` to ` null ` in ` DatabaseInfoRetriever. java ` and initialized ` literalPrefix ` and ` literalSuffix `
replace ` ` < code > < / code >'' with ` ` { @ link }''
replaced multiple instances of ` ObjectEqualEvaluator ` and ` ObjectNotEqualEvaluator ` with a single instance of ` BooleanEqualEvaluator ` to improve
updated configuration references from " / / config : osx _ x86 - 64 " to " / config : osx _ x86 _
added sound effect playback functionality in AllAppsView. java to enhance user experience by enabling sound effects during playback
changed the exception type thrown in the main method from Exception to IOException to improve error handling by allowing broader exception types
added granularity support to the left axis in BarChartActivitySinus to enhance data visualization by allowing granularity on the left axis
refactor version comparison logic in GdxSetup. java to improve code readability and maintainability by centralizing version comparison logic
updated test root and path handling in ContextHandlerGetResourceTest. java to improve test reliability by ensuring the test runs only on supported
added close methods to Connection, JsonAsyncHttpPinotClientTransport, and PreparedStatementGroup classes to ensure proper resource management and prevent potential memory
log4j2 - 1349 fix a race condition in mockappender. awaitappend
[ beam - 4142 ] add precondition check for non - directory resource
updated import statements in IsometricStaggeredTiledMapRenderer. java to streamline imports and improve code clarity
fix unbind of item when item be delete.
updated configuration settings in Config. java and Attribute. java to improve clarity and maintainability of the code
simplified conditional checks in OtherActivityTouchConsumer. java to improve code readability and maintainability
updated NavbarButtonsViewController to use configuration for dark mode to improve button visibility based on the current device's dark mode
fix : throw abort instead of abort
updated the handling of ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` to use ` byte ` instead of ` short ` to ensure correct
modified the ` findBox ` and ` findElementBox ` methods to include ` BlockFormattingContext ` to enhance flexibility in handling block formatting contexts
added a method to retrieve the standard error output from the launched process in WorkerProcess. java and WorkerShellStep. java to improve error handling
added null checks for the operator in Collections and CheckedListReplaceAll classes to ensure proper handling of null inputs and improve error handling
added a ` _ testFill ` boolean and a ` FutureCallback < Void > ` in ` SslConnectionTest ` to enable conditional testing of
refactored listener registration and management in DeviceFlag and FeatureFlags classes to improve code clarity and maintainability by centralizing listener handling
added JUnit Ignore annotation to GatewayRSocketIntegrationTests. java to temporarily disable tests due to issue gh - 1114
removed unused import of MalformedURIException from StandardRequestHandler. java to clean up the code and improve maintainability
added javascript execution script in instructorfeedbackeditpage. close ( )
refactor synchronization and streamline subscription logic in KrakenStreamingTradeService. java to improve performance and readability of the subscription process
changed print statement from err to out in ChangeableUrls. java to improve logging clarity for debugging
added a boolean parameter to the SparseRowMatrix constructor and modified constructors to accept a shallow copy option to enhance flexibility and control over the behavior of
bugfix : add volume delete event only when volume poolid be not null
refactor file handling in Utilities. java to conditionally create the plan path based on the user's configuration to improve flexibility and ensure the plan path
[ beam - 8470 ] use org. apache. beam. vendor. guava. v26 _ 0 _ jre. com. google
bugfix : don't register cctprovider twice in memorycallgraphbuilder.
fix nullpointerexception in conferencechatmanager. getchatroom ( )
bugfix : if save file don't have write, update the package.
added FolderSyncActivity to handle folder synchronization functionality to enhance user experience by providing a dedicated folder synchronization feature
[ hotfix ] [ test ] use closer for test in sequentialchannelstatereaderimpltest
update spanish tree normalizer to handle number token correctly.
replaced the use of ` reader. getReader ( 0, pointCount ) ` with ` heapPointWriter. getPackedValueSlice ( i ) `
added a new ` LocaleRandomizer ` class and its corresponding test in ` InternalRandomizerRegistry ` to facilitate random value generation for
tika - 2906 -- add detection of font - printer metric and font - type1 ( tika - 451 )
[ release ] update java and autodepupgrader to version 9.2. 0
added a ` PrivilegedAction ` to the ` run0 ( ) ` method in ` TCPTransport. java ` to enhance security by ensuring
updated the read method in Http2AsyncParser to set read timeout to zero to ensure read timeout is set correctly for non - blocking requests
updated default delay from 120 to 600 milliseconds in TimelineMetricConfiguration. java to improve the initial delay for monitoring metrics
updated error message formatting in SelectStatement. java to enhance clarity of error messages for better debugging
added support for custom date formatting in ThirdEyeJiraClient to enhance date handling capabilities in the application
replaced the parent stream ID validation with a priority frame generation method in HeadersGenerator and PriorityFrame classes to simplify priority generation logic and improve code clarity
added a maximum replacement code size limit and updated the condition for scalar replacement to ensure that the replacement option does not exceed the defined maximum code size
added DATE _ TAKEN to the projection and sorting order strings in MediaProvider. java to ensure proper sorting order for media data
updated image drawing parameters in TexturePacker2. java to ensure correct positioning of images based on their dimensions
replaced FilterHolder with a ServletContextHandler in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to streamline servlet context handling and improve code clarity
added shutdown of validateSignService and trxHandlePool in multiple classes to ensure proper resource management and prevent memory leaks
added ` RawJsonRequestBodyAnnotationProcessor ` class and integrated it into ` JaxrsSwaggerGeneratorContext ` to handle raw JSON requests in
added a new method ` newTarget ` to the ` LoggerUtils ` class that creates a new ` Target ` instance with a specified target type
replace ListBeanContainer with ArrayList in BeanContainer. java and add a new test class BeanContainerTests. java to enhance functionality and ensure proper
fix typo in testmetricsregionserver # testblockcachecounthitpercent
camel - 17443 : fixed potential resource leak in cachedoutputstream when exchange be complete.
add deviceid to teltonika position ( fix # 3882 )
changed the method of reading the first line from ` readFirstLine ` to ` Files. asCharSource ` to ensure compatibility with character source
added null check for the assignment operator in ` ppp Attr. java ` and created a new test class ` Test. java ` to ensure
added a flag to enable account handling in FirstRunActivity and BaseActivity to conditionally call onCreate based on account management settings
use heuristically find connected component instead of create a new one
modified DrillViewTable to accept a list of paths instead of a single view to enhance flexibility in view management within the Drill framework
added default allocator configurations in PooledByteBufAllocatorL to enhance memory allocation flexibility based on system configuration
updated type check from double [ ] to short [ ] in ObjectInputStream. java and added a new CloneArray class with serialization tests to ensure
hive - 18836 : limit the number of llap io thread pool to 10 ( sergey shelukhin, review
added Java version checks for class initialization in SecurityServicesFeature. java to ensure proper handling of security features based on Java version
added validation for latitude and longitude ranges in LatLonGrid. java and introduced a new test for growth in TestLatLonGrid. java
simonstewart : implement expectedconditions. invisibilityofelementwithtext ( ).
hive - 17515 : purge should delete old file when insert overwrite be enable ( jesus camacho rodriguez
added a test for ` SomeInnerClassReflector ` in ` ReflectorTest. java ` to ensure correct retrieval of the enclosing object
updated configuration keys to use INTELLIJ _ BUCK _ CONFIG _ SECTION instead of PROJECT _ BUCK _ CONFIG _ SECTION
refactor logging and message formatting in HubChangeExecListener. java to improve readability and maintainability of log messages
added properties property handling to Link class and tested it in QuickLinksConfigurationModuleTest to allow overriding of properties in quick link configurations
removed unnecessary ` @ EqualsAndHashCode ` annotations from ` InitialConfig ` and ` YamlConfigFileDTO ` classes to streamline code and enhance readability
added generic type ` ReqT ` to ` SimpleForwardingServerClientCall ` and ` SimpleForwardingClientCallListener ` to enhance type safety
updated ` forName ` methods in ` mmm Class. java ` and ` ppp Class. java ` to include caller information to enhance class
updated assertions from ` not ( isEmptyOrNullString ) ` to ` is ( emptyOrNullString ) ` in ` RequestItemRepositoryIT. java
replaced LinkedBlockingQueue with ThreadPoolExecutorEx in GroupExecutor. java to improve code clarity and maintainability by using a more specific class
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated imports and refactored XStream handling in TimeStepdefs. java to improve code clarity and maintainability by utilizing jchronic
fix ` ` spark _ isolated'' and ` ` spark _ recessive'' inventory not be add properly.
updated the RestProxyFactory method to use ` getUri ( ) ` instead of ` ExchangeSpecification ` to ensure that the correct URI is used for
[ hotfix ] remove unused code in recordgenerator
camel - 18836 : camel - kafka - auto - commit be now disable by default if auto commit be enable.
removed lock release from LoggingExecutor and added database change lock table presence in StandardLockService to improve resource management and ensure proper lock handling
updated @ SuppressWarnings annotations in AbstractAuthorizeTag and AuthorizeCustomGrantedAuthorityTests classes to improve code clarity and suppress warnings related to raw
mondrian : fix potential concurrency issue in database.
camel - test - infra - spring - boot - plugin : resolve nested property correctly.
updated currency pair from baseSymbol to counterSymbol in VirtExMarketDataService to ensure correct ticker data is returned for currency pairs
( chore ) camel - core : fix checkstyle violation
replace UUID generation with system property retrieval for testId to improve flexibility and maintainability of the test configuration
added synchronization to date and number formatting parsing logic to ensure thread safety when parsing date and number formats
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
fix a typo in the heightmap's height scale ( 256 )
updated equality check in SecurityConfig to use assertNotSame instead of assertEquals to improve clarity and correctness of security string comparisons
updated the default value of ` dumpPartitionId ` from ` true ` to ` false ` to ensure that partition ID defaults to ` false `
added TronTXOutput and TXOutputs classes to UTXOSetTest to enhance testing capabilities for transaction outputs
[ java 9 ] fix false positive for unused var name
pdfbox - 4892 : avoid npe, a suggest by valerybokov
added a new test for overriding previous restart parameters in JsrJobOperator to ensure correct behavior of job restart properties in the Jsr implementation
added a new method ` disallowBatchOnCascade ` to the ` DatabasePlatform ` class to provide a way to disallow batch - on -
refactor principal assignment logic in JaasAuthenticationHandler. java to improve clarity and maintainability of the code
updated SolrCores. java to use a custom MDCAwareFixedThreadPool for core shutdown to improve resource management and ensure proper thread termination during core shutdown
added a null check for mActionsView and set visibility based on fullscreenProgress to ensure mActionsView is visible only when it's not
refactor null check for parameters in RunIdIncrementer. java to improve code readability and prevent potential NullPointerExceptions
updated BasicEntity and TestUtil classes to improve code clarity and maintainability
added multiple assertions for getMatchedDevices in SchemaRegionBasicTest. java to ensure that the correct number of devices matches the expected input
[ 3.0 ] fix dubbo - common metric collection exception ( # 9685 )
added a new EigenvectorCentralityBuilder class and modified calculations in EigenvectorCentrality. java to enhance statistics
updated registry port handling and improved rmi URL generation to enhance reliability and maintainability of registry setup
geometry generator : set type of geometry data for ifc product
fix for beacon explosion
refactored TubeCalc class implementation to improve performance and maintainability of the code
disable health check by default
add sanity check to validate group.
added a new timeout attribute and updated bug 8057791 8160438 in bug8057791. java to addressed issues
fix # 322 prevent application from exit via main method completion
remove the hyphen from the version string when retrieving the GRADLE version to ensure consistent parsing of version strings in the lexicon
added a reflection access check in JavaAdapterFactory to enhance security by verifying access permissions for types
add lazysessioncreation = true to the unit test of camel - mina
updated the I / O operations in CombineHiveRecordReader and HiveContextAwareRecordReader to include the record reader to ensure proper initialization of the I /
deleted ClassLoaderHolder and LoaderManager classes to streamline codebase by eliminating unused classes
added configurationChanged method to manage new workspace roots and modified filtering logic in FileStore and JavaLanguageServer classes to ensure that only writable directories are
added error handling around session callback registration and unregistration to improve stability by preventing crashes due to unhandled exceptions
removed " src / test / org / apache / lucene / index / index. cfs " and " src / test / org / apache /
[ hotfix ] [ test ] add akkarpcserviceconcurrent to akkarpcserviceutils
hbase - 25836 testexportsnapshot. testexportsnapshot should retry if the retry flag be set
pdfbox - 4892 : don't create symbolic file if afmstandard14 be not present
added a new file SslConnectionTest. java to test SSL connection behavior to ensure proper handling of SSL connections and prevent memory leaks
added validation for address family in InetAddress. java and NetworkInterface. java to ensure that address types are validated against IPv4 and IPv6 formats
added a test for date serialization in collections using Gson to ensure correct serialization behavior for date objects in the collection
refactor Message class to improve code readability to enhance maintainability and reduce technical debt
PutDatabaseRecord. java to improve handling of SQL generation based on firstUpdateKey state to enhance code clarity and maintainability by ensuring correct
adjusted the loop condition in TableOutput. java to correctly account for the maximum width of the running width to ensure proper layout rendering by accounting for
pdfbox - 4892 : avoid npe, a suggest by valerybokov
don't write ` ` { 0'' in a formatted string if they be ` ` { 0''
[ java ] localvariabledesponse : add property to ignore non - final loop variable
added PDF versioning and full compression settings in PDFExporter. java, and updated sample structure in PDFExporterTest. java to enhance PDF export
added unit tests for the LdapUserDetailsMapper class to ensure correct handling of user role attribute mappings
make ldap read timeout configurable
updated test cases in TestDescription. java to improve test coverage and maintainability
rename Pixmap, ManifoldPoint, and TextureRegion classes to improve clarity and consistency in naming conventions
replaced ` shouldCacheIterator ` and ` shouldValueIterator ` with ` shouldAvoidAllocation ` in multiple classes to improve performance by avoiding unnecessary
added a condition to check if the state handler is invalidated in the gesture handling logic to ensure that gesture handling only proceeds when the state
updated WORKSPACE _ ROTATION and mOverScrollPageIndex calculations in Workspace. java to adjust workspace rotation and improve folder creation behavior
use configproviderresolver instead of configprovider for oci config source
refactor Testjsig class for improved readability to enhance maintainability and facilitate future development
fix mana ring / tablet and mana ring not return the correct value.
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added a serialVersionUID annotation to P11TlsPrfGenerator. java to ensure proper serialization compatibility for the class
updated validation logic in DataRegion. java to improve clarity and maintainability of the validation logic
added new classes Switch21, Switch19, and Switch21 for pattern matching to enhance pattern matching capabilities for switch types in the application
updated error messages in ComparableSubjectTest to refer to MyTest. ComparableType instead of MyTest. ComparableType by method invocation conversion to improve
[ bug - 6657 ] poi - ooxml - util : enable standalone mode for standalone word processor
updated maximum size checks and improved error messages in Int2ObjectCache. java to ensure accurate validation of array size and enhance error reporting for better
removed unnecessary sorting of security filter chains in WebSecurityConfiguration and WebSecurityConfigurationTests to streamline security filter chain loading and ensure proper ordering of
modified the order type from TimeInForce. GTC to OrderType. MARKET in BinanceTradeService. java to ensure compatibility with
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer < Float > and updated default values to improve randomness and ensure default values
change the KEY _ SEP character from'\ 0'to'\ t'in RocksDBBuildInfoStore. java to ensure
camel - jbang - show camel - jms documentation for camel - jms
added error handling in SourceUtils and created a new test class SourceUtilsTest to improve robustness of the getBound method and ensure correctness through testing
refactor LeafFilterFactory to use a method for retrieving filter predicates based on Parquet types to improve code readability and maintainability by encapsulating filtering logic
added a check to ensure artifactName does not start with the " SCOPED _ TARGET _ BEAN _ PREFIX " prefix to prevent potential errors
don't fail ssl cert if ssl cert don't exist
refactor default boolean handling in ` mmm Config. java ` and add a new class ` DnsFallback. java ` to improve code clarity and
ww - 3833 provide good error message when write tag fails
changed the data type of the ` success ` field from boolean to String in ` DepositAddress. java ` to improve clarity by using a
modified the return statement to use a lambda expression and added a try - finally block for resource cleanup to improve code readability and ensure proper cleanup of
removed " address " and " phone " from scope in CommonOAuth2Provider to simplify scope specification for better clarity and usability
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5573
added constants for HU and saturation in WLedBindingConstants and modified color retrieval logic in WLedHandler to enhance color representation
replaced the ` isValidCaller ` method with a ` Set < String > VALID _ CALLERS ` to improve code clarity and maintainability by using
added a method caseJSRInst to InstSwitch. java to enhance case handling for JSRInst functionality
added transaction management support to subscription activatingsubscriber
modified SQL statement construction in DBMSProcessor. java to improve clarity and ensure proper resource management during database operations
added elevation handling in ContactItemInflater to ensure compatibility with different Android SDK versions
rename ` typeInformation ` to ` identifier ` for clarity to enhance code readability by using a more descriptive identifier identifier
refactor file access handling to use ` AccessController ` for privileged actions to enhance security by ensuring actions are executed in privileged contexts
added support for binary access handling in Groovy parsing and printing to enhance support for access expressions in Groovy parsing and printing
updated warning log message to include the exception class name to improve logging clarity for better debugging
updated byte handling and renamed variable names for clarity in RecordInputStream and UnicodeString classes to improve code readability and maintain consistent naming conventions
added a test for downloading files with Norway characters in the name to ensure proper handling of special characters in file names
replaced RuntimeException with CancellationException in AsyncResource. java and FingerprintScannerSample. java to improve error handling and provide more informative
fix npe in timedmemberstatefactory when statistics be null
refactor MongoTemplateTests and add a new test for removing objects from an explicit collection to improve test coverage and ensure proper functionality of MongoDB operations
@ see, @ see, @ see, @ see, @ see, @ see, @ see, @
[ hotfix ] [ table - planner - blink ] fix string. format ( string, string... )
refactor scroll handling in RecentsView and PagedView classes to improve code clarity and maintainability by centralizing scroll logic
added a new constant for COMMON _ HMS _ PROPERTIES and refactored parameter handling to improve code readability and maintainability by central
added a method to check if the address is already in use to improve error handling by filtering out duplicate socket addresses
added a call to ` argList. add ( 0, " - cp " System. getProperty ( " test. class. path " )
update SchemaTextDetailType from verbose to verbose _ schema to enhance clarity by using a more descriptive schema name
from user
# 183 - enh : fix nest use savepoint issue
replaced a raw integer fetchSize with a ThreadLocal < Integer > fetchSize to improve thread safety and simplify fetch size management
[ java ] remove sharednetworkid strategy from embeddedpingpong.
add a supplier < object > to the handleblockingcall method to allow the client to return null.
added HDP _ VERSION system property configuration to SliderAppsViewControllerImpl. java to ensure HDP _ VERSION is dynamically set based on configuration
added methods for managing ClassLoader and closing procedures in JavacProcessingEnvironment. java to ensure proper resource management and prevent potential memory leaks
added deep cloning functionality to ParameterizedRobolectricTestRunner and introduced DeepCloner class to enhance testing capabilities by allowing deep cloning of parameters
add bind for jetTY _ SHOW _ STACKTRACE annotated with @ WebServer. JETTY _ SHOW _ STACKTRA
added a type check in NativeObject. java to return null if the object type is an instance of JSType. OBJECT to improve robustness by
refactor SystemDictionary to use well - known klasses instead of static OopField instances to improve clarity and maintainability of the code
updated JwkKeyListView to use generics and improved JSON serialization for RSAPublicKey and ECPublicKey to enhance type safety and ensure proper handling
useonlywritablebootimageheap for nativebootimage.
updated MBeanServerMXBeanUnsupportedTest. java to improve test coverage for MBeanServerMXBean functionality
removed an unused import of OrderClassLoaders from MavenPluginCollector. java to clean up the code and improve maintainability
replaced the ` Validator ( ) Validator ( ) ` method with ` validator ( ) ` in multiple actuator classes to standardize the implementation of
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 46
updated the sendCommand calls to use byte arrays for minimum and maximum values to ensure proper representation of minimum and maximum values in the command sent
protobufserializer : add empty index to edge
[ java ] remove redundant check for asynccommandidset. contains ( correlationid ) in drivereventsadapter.
added saveConflict calls for non - down files in FileDataStorageManager and FileDownloader to ensure that files are in conflict state before proceeding
http : / / code. google. com / p / mybatis / issues / detail? id = 567 : use parameterized type
removed the import of StrUtils from multiple filter factory classes to streamline code by eliminating unnecessary utility imports
added support for Oracle and MySQL databases in DatabaseFactory to ensure proper handling of remarks reporting and information schema in the database
updated the ` MockMethodInterceptor ` instantiation and added a serialVersionUID in ` SignedSupportingClassProxyFactory. java ` to ensure compatibility
( chore ) camel - core : use system. currenttimemillis ( ) instead of new olderThan
refactor execution context handling in LocalExecutor and ExecutionContext classes to improve code clarity and maintainability by using a unified class loader method
added buffer change handling in TerminalView and updated buffer height management in TerminalTextViewOverlay to improve UI responsiveness and ensure accurate buffer height updates
added a check to ensure the service pid does not contain a ". " before processing the configuration file to prevent processing of invalid service pid files
disable freeze operation if tvm freeze v2 be enable
added support for insecure TLS configurations in TlsConfig and TlsUtils to enhance security settings for TLS connections
refactor path retrieval logic in JavadocTool. java and add new classes T7091528. java and T7091528. java to improve
rename nodeColumns to edgeColumns in ExporterGDF. java to improve clarity and consistency in naming conventions
added a cascade option to the OneToOne relationship in DefaultUserInfo. java to ensure that Address and DefaultAddress entities are persisted in the cascade context
refactor equals and hashcode methods in Message class to use Arrays utility methods to improve code readability and maintainability by using standard array comparison methods
updated response body encoding from "????? " to " \ u017D " in AsyncProvidersBasicTest. java to ensure
[ hotfix ] [ test ] remove unused method in rocksdbserializedcompositefactory
added static permission retrieval in ProtectionDomain and updated subjectPd initialization in JavaSecurityProtectionDomainAccess to enhance security by restricting access to
added null check for the recipe object in RecipeHandlerBrewery, RecipeHandlerElvenTrade, and RecipeHandlerFloatingFlowers to avoid
refactor parsing logic in Parser. java to improve clarity and efficiency to enhance code readability and maintainability while ensuring correct parsing behavior
added error handling for connection issues in UploadMediaDetailFragment and UploadMediaPresenter to improve user experience by providing detailed error messages based on exception type
added a new file ` Issue596. java ` to implement a test for handling unhandled requests to ensure that the application correctly handles 404
updated bitwise operation to use'L'instead of'<'to ensure correct data manipulation by using long literals
refactor ImportLayoutStyle class to improve code readability and maintainability
refactor ConsoleUIService to use standard input based on TERM _ PROGRAM and MINTTY to improve flexibility in input handling based on the
refactor tests in ShadowAccountManagerTest for improved clarity and consistency to enhance readability and maintainability of the test code
make analysistype non - final so that it can be reuse.
polish ` ` fix typo ` ` in pairs''
nifi - 2693 : remove timeout from putallcallable so it don't wait for next call.
fix npe in mqclientinstance when consumer be empty or not
[ java ] add source identity generation to the driver conductor.
added a new file ` TopTabAction. java ` to implement the ` Presenter. Toolbar ` interface to enhance the user interface by providing
camel - 177483 : dynamic router should use rout engine if recipient mode _ all _ match
replaced ` TestCase ` inheritance with ` @ Before ` annotation in ` AggregateItemReaderTests ` to ensure proper setup for unit tests
updated the generic type in AbstractObjectValueTypeMap from Object $ { valueTypeCap } Procedure to Object $ { valueTypeCap } Procedure < T >
updated import statements and refactored wikidata edits handling to improve user experience by dynamically displaying user - specific edits
added a validation check for the buffer length in OfflineSorter. java to ensure that the buffer length does not exceed short. max _ value to
added an absolute value accumulator and modified bug reporting logic in DumbMethods. java to ensure proper handling of minimum values and improve error reporting
refactor various dataset classes in the dataset package to improve code organization and maintainability
updated exception messages in ProvisionClusterRequest and corresponding tests in ProvisionClusterRequestTest to enhance clarity of error messages for better debugging
updated random value generation in TestVectorUtil. java to ensure values are uniformly between 1 and 100 values
changed the return type of the compareBy method from int to long to accommodate larger date comparisons
test : add ssl system property to system. getproperty ( ` ` ssl'' )
danielwagnerhall : enable safebrowsing by default
added null check for oldConfig before cloning it in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions during configuration modifications
added a condition to check if transcoding is not disabled in DLNAResource. java to ensure proper handling of transcoding settings based on configuration
updated logic to handle empty lists in ` DataTable ` and ` TableDiffer ` classes to improve robustness by ensuring non - empty lists
added a new variable ` CustomIgnoreTag ` and modified its removal logic in ` RobustJavaMethodParser. java ` to ensure proper handling
optimisticlockingexception mapper will throw optimisticlockingexception if update record fails.
fix : do not require reflection when a private bean method be annotated with @ configurationproperties
updated PreferencesActivity to extend LimitlessIDEActivity and modified layout adjustments to enhance UI responsiveness and ensure proper layout adjustments
deleted the ClusterNodeInfo. java file to the functionality was no longer needed in the project
corrected return value in ShieldedTransferActuator. java to ensure consistent return value
added debug output for Standard and Legacy ciphersuite in ServerHandshaker. java to provide clearer output for ciphersuite options during the handshake
added logic to handle template selection based on availability in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve user experience by hiding
added functionality to handle node existence and label validation in the ImportContainerImpl class to improve error handling and ensure only valid nodes are processed
added a new file R2303044ListSelection. java to implement a list selection test to ensure that the list items are properly validated
[ java ] check for aeron client should throw an exception if a publication be already in use.
added a null check for mWorkspace in Launcher. java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` in ` StepScopePlaceholderIntegrationTests ` to ensure correct name retrieval for compound properties
hive - 17515 : fix the bug in statsruleprocfactory. getcatalogs ( ) which return incorrect result ( david m
updated path parameter handling and query parameters in SpringBootDocBuildTemplate. java to enhance parameter management and improve API documentation clarity
guicontainer should not use string. getname ( ) for null action. fix some ide warning.
updated DistBuildSlaveExecutor to use CachingBuildEngineDelegate and LocalCachingBuildEngineDelegate instead of DistBuildCachingEngineDelegate to improve caching mechanism
replace backslashes with spaces in RuntimeException messages to improve error handling by providing more descriptive error messages
added a conditional check for debug logging before logging the filtered widget tray to avoid unnecessary log output when DEBUG is enabled
refactor Console and Scanner classes to improve code readability and maintainability
simplified the calculation of numTerms in SimilarityBase and added a new test for discount overlaps in TestSimilarityBase to improve accuracy of
added conditional checks for the " send " method in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to enhance test reliability by
added exit and quit methods with corresponding properties to Global. java and removed the old quit method from ScriptingFunctions. java to streamline exit
[ loan ] fix compile error in loan broker demo
rename methods from " getFirstUnverified " to " findFirstUnverified " across multiple classes to improve clarity and consistency in method naming
bugfix : apply relevant cookie to vwware web service request context
updated authority assertions in ResinAcegiAuthenticatorTests. java to ensure consistency in authority retrieval
add 32 bit size to the bigintegertobytes method in eckey.
use ` ` fml. modstates'' instead of ` ` fml. disabledmods''
refactor account selection handling into a separate method for clarity to improve code readability and maintainability by encapsulating account selection logic
improve error message when unable to connect to a client during stream opening
fix ( contract ) : throw an error if an empty simulation result be expect from the validator smart contract call
updated JSON parsing in TexturePackerFileProcessor to handle null root values to improve robustness by preventing null pointer exceptions during JSON deserialization
added a null check for the datasource JNDI in the PooledConnection class to ensure robustness by avoiding potential null pointer exceptions
updated target memory allocation and count calculation in TestRefprocSanity. java to optimize memory usage and improve code clarity
added null checks for currentConsole and streamlined error handling in EditorConsole. java to improve robustness by handling potential null pointer exceptions
[ hotfix ] [ kinesis ] set credential refresh delay to 100 second
replaced multiple AlertDialog builder invocations with a single info alert method to improve code readability and maintainability by consolidating existing alert handling logic
added " - package " parameter to the test method in T4501661. java to allow for package - specific testing in the test
updated version numbers in ` ModulesTest. java ` and ` TestBadUseCases. java ` to ensure compatibility with the latest Jetty versions and
don't resolve dependency that don't exist in org. apache. maven. model. dependency
added functionality to manage a set of ZipFileInputStream instances to ensure proper resource management and prevent memory leaks
rename datamatrixformat. datamatrox to datamatrix.
fix race condition in sequencegeneratorsource when no key range be provide.
[ hotfix ] fix typo in blobserver. getcurrentactiveconnections
replaced ` findAny ( ) ` and ` findFirst ( ) ` methods with ` findFirst ( ) ` and ` getAnnotations ( Class < T
added support for " ppc64 " and " ppc64le " architecture checks in Bits. java and ByteArrayAccess. java to enhance
added documentation for the activity resolution failure in RoboMonitoringInstrumentation. java to provide users with an insight into the activity resolution process
updated waitWithDeadline calls to use Long. MAX _ VALUE instead of MINUTES to simplify timeout values and improve code clarity
use instant. now ( ) instead of new date ( ) in test
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future development
added a Toast message to indicate that YouTube Player doesn't work on Lollipop yet to inform users that the app is ready for
added checks for unterminated dollar and block quotes in SQL parsing to ensure proper parsing and error handling for SQL syntax errors
mVibrationDuration and mVibrator are not null and hasVibrator method to ensure proper vibration handling when the vibration
updated table border and background color settings in DotRenderer. java to improve visual clarity and ensure correct background based on foreign key properties
added support for encoding configuration in HiveConf and updated output handling in SetProcessor to improve handling of encoded Par parameters in the processing logic
pdfbox - 2852 : avoid stringindexoutofboundsexception, a suggest by valerybokov
updated the X509Certificate class implementation to improve certificate validation reliability
fix ( wavefrontconfig ) : default uri work with proxy uri ( # 3903 )
added new constants and methods for handling image loading in NetworkedCacheableImageView to enhance image loading capabilities and improve code maintainability
simplified the ` ofFloat ` method signatures across multiple classes to improve code clarity and maintain consistency in method signatures
added a new constant for the version of the gdxControllersVersion and updated related references to ensure compatibility with the latest version of the gdx
updated import statements in LaunchedURLClassLoader. java to improve code clarity and maintainability
added SQL query execution using DataAccessUtils in DataSourceHealthIndicator. java to enhance database health checks and ensure data integrity
add cache - control header to the response.
updated warning message formatting to use Locale. ENGLISH to ensure consistent warning message formatting across different locales
modified the ` SolrQueryParser ` constructor to accept an ` Analyzer ` parameter to enhance flexibility by allowing custom analyzer configurations
updated copyright year from " Will Winder " to " Will Winder " across multiple files to ensure compliance with licensing requirements and
updated test cases in MainTest. java to improve test coverage and maintainability
refactor TypeContributions class to improve code readability and maintainability
added a check to return a VoidColumnVector if the source is an instance of VectorizedRowBatch to ensure proper handling of VoidColumnVector
updated method call to use request. getName ( ) instead of templateName to ensure correct request context is used for processing
remove unnecessary istypematch ( ) method from abstractconfig.
[ java ] : add miss offer method to sessiondecorator.
updated method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` in ` XForwardedRemoteAddressResolver `
fix : add support for @ noclassdeffounderror in bootstrapinserter
hbase - 2697 tabledescriptorbuilder. getmaxfilesize and getmemstoreflushsize should use tabledescriptor. value to avoid n
updated the calculation of ` numCommits ` to use ` Math. max ` instead of ` maxCommits ` to ensure that the number
added InvocationTargetException to the main method signatures and replaced SwingUtilities. invokeLater with SwingUtilities. invokeAndWait to improve error handling and ensure proper asynchronous execution
added a static final BUILD _ ID constant and refactored metadata handling in CachingBuildEngine to improve code clarity and maintainability by centralizing
removed unused imports from TransactionCapsule. java to improve code clarity and reduce unnecessary dependencies
removed duplicate call to markAsDone in HttpProtocol. java to streamline the code by eliminating redundancy
added import and initialization of TezConfiguration in TezConfigurationFactory. java to ensure default configuration is used for DAG processing
added null check for keyPurposes in TimestampedSigner. java to avoid potential NullPointerException when keyPurposes is null
simplified conditional statement in CustomPlaybackOverlayFragment. java to improve code readability and maintainability
added a forget method to OpenALSound for managing recent sounds to ensure null safety and prevent potential NullPointerExceptions when stopping or stopping recent sounds
fix issue with discontinuity report only once in simplebaseplayer.
added DecimalFormat instances for various number tick units in NumberAxis. java to enhance precision for number formatting in the application
refactor TargetsCommand and AbstractTargetGraphAndBuildTargets to improve code readability and maintainability
removed the IndexFileNameFilter class and simplified file name filtering logic to improve code clarity and maintainability by eliminating unnecessary filter implementation
add ` ` fullBoundingBoxladders'' config option to allow for custom bounding box for ladder.
added a compression level parameter to the constructors of ApkBuilder, ApkBuilder, and SignedJarBuilder classes to allow customization of compression
added a test method to verify static fields in the MirrorTest class to ensure that static fields are correctly included in the stub JAR
updated ` UNDEFINED _ METRIC _ SIZE ` to use ` UNDEFINED _ METRIC _ SIZE ` instead of ` UNDEFINED _ FIELD _ SIZE `
improve error message formatting in multiple failure classes to enhance readability of error messages in tests
replaced custom hashCode method with Objects. hashCode in Trade. java and removed super ( ) call in KucoinDealOrder. java to
added caching and caching functionality to Spring Data JPA joins to enhance caching capabilities and improve cache management
modify maryproperties. needproperty to return locale. toString ( ) instead of null
refactor SimpleHttp to return a FormBody. Builder if the post body is empty to ensure proper handling of null post bodies in the HTTP plugin
added executor service cleanup in ClientSideSlb and ClientSideSlbTest to ensure proper resource management and prevent potential memory leaks
modified setV2 logic in TextureRegion. java to conditionally use v2 based on flip state to ensure setV2 is only applied when not in
throw invalidconfigurationexception instead of hazelcastexception
added a null check for the contextPath before retrieving it from javaInformationsList to ensure that the application context is set to " NA "
[ drools - 7 ] avoid npe when reiniting a class.
added a check for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap. java and defined B _ TREE _ MAP
added ` getPrecompiledHeader ( ) ` method to ` AbstractCxxSourceRuleFactory ` and introduced ` checkPrefixAndPrecompiledHeaderArgs
replaced ` WeakReference < ImageObserver > ` with ` AccWeakReference ` in ` ImageWatched. java ` to enhance security by using the
modified access modifiers of findNextIndex method and removed unused imports in ObjectMap, ObjectSet, and OrderedMap classes to enhance encapsulation and improve
changed the value of isDirect from true to false in VertexBufferObject. java to correct behavior when the object is directed
fix : audioeffecthelptextsmap. get ( effectname ) return null
changed the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to Vector2 to enable
pdfbox - 5764 : use input. limit ( ) instead of input. capacity ( )
added a null check before removing the close hook from the context to prevent potential NullPointerException when the context is not initialized
updated border spacing calculations in CellLayout and DeviceProfile classes to improve layout consistency based on container type and folder layout parameters
replaced NumberFormat. getInstance ( Locale. US ) with ValueNumeric. of ( ) for handling numeric values to improve code clarity and maintainability by
added a check for deferred authentication status in the FormAuthenticator class to ensure that the application does not return a non - deferred authentication status
updated command - line argument checks from " -- module - start - ini = " to " -- add - to - start " to ensure proper
added a private variable ` HIVE _ DEFAULT _ PARTITION _ VALUE ` and modified partition value handling in ` DynamicPartitionFileRecordWriterContainer.
[ hotfix ] [ stream ] add null check to streamnode and streamgraph
camel - core - artifact : fix defaultartifact. getconflictid ( ) and getconflictid ( ) to be consistent.
camel - kafka : fixed npe in offsetstaterepository. getstate
improve error message when a substitution can not be load
add support for enable email notification ( jabber account registration wizard )
doc : [ doc ] clarified return value of cryptokey. getsha ( ) method
( chore ) camel - lumberjack : fix flaky test
fix : don't send health message for player that be not dead
refactor methods in Exchange class to improve code readability and maintainability
api : add api _ key and api _ secret _ key to updatenowuser api call
refactor switch - case statements in MfaProvider, IdleTimer, JdbcMfaProviderProvisioning, SamlServiceProviderTestConfigurator, and M
fix typo in abstractmetadataexportmojo. java
added handling for SQLIntegrityConstraintViolationException in Hive. java to ensure proper error handling when attempting to drop a materialized view
corrected the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency with the project's property naming conventions
added a new file ` RoboExecutorService. java ` in the ` org. robolectric. util. concurrent ` package to deprecate
add subgroups to the group menu when a group be add or remove. ( # 5951 )
modified the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and added a check for the path to
updated TestDynamicNumberOfGCThreads. java to use base - args for dynamic thread configuration to improve flexibility in managing dynamic thread counts during testing
updated host flavor types from ImmutableFlavor to Flavor in CxxPlatforms. java and KnownBuildRuleTypes. java to improve accuracy of host
updated SQL creation syntax to include optional parameters in CreateTable and CreateTableDeParser classes to enhance flexibility in SQL creation commands by allowing optional parameters
set the background alpha of the chat view to 64 to ensure the background is fully opaque for better visual clarity
test ( refactor ) : migrate ctiteratortest to junit 5 ( # 587 )
added token clearing functionality in tokenizer classes and removed localToken. clear ( ) from DocumentsWriter to streamline token processing and ensure consistent behavior across
add a new test case for a bug report where initializer would not crash if a block statement be declare in an anonymous class.
added error handling for missing state machine configurers in StateMachineConfiguration and StateMachineFactoryConfiguration classes to ensure proper configuration and prevent runtime exceptions
simonstewart : don't require ` ` link ='' in the locator
ww - 3496 fix numberformatexception when use %. 0f or %. 0f
tidy up aggregatelelifecycle. getcurrentscope ( ) to return the current scope
replaced ` insetsIsTouchableRegion ` with ` touchableInsets ` in ` TaskbarDragLayerController. java ` to simplify touch handling
removed a condition from the FencedCodeBlockParser class to simplify the parser logic by eliminating unnecessary checks
added support for socket timeout configuration in the Driver, ConnectionFactoryImpl, and BaseDataSource classes to enhance socket management by allowing configurable timeout values
added a sleep of 500 milliseconds in ElementAttributeTest. java to ensure proper handling of interruptions during test execution
updated the InputStreamReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding in the input stream
updated List class implementation to improve performance and maintainability of the code
added URI handling in AsyncFileImpl and created corresponding test class to enhance functionality and ensure proper error handling in file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to ensure the CucumberEngineExecutionContext and CucumberTestEngine classes are
bugfix : don't throw npe if there be nuage vsp device configure on physical network
rename method ` retryUploads ` to ` retryFailedUploads ` for improved clarity to enhance code readability and maintainability by using a more
updated Java version checks in ConstantPoolTagTests. java to ensure compatibility with Java 9 and above
fix for d + error when compile with - xlint
add a method to clear the client header map in an asyncclient.
replaced Vector with List < String > and updated related method calls to improve performance and adhere to modern Java conventions
updated the default grid column value from 0.4 f to 3 f to improve the visual consistency of the user interface
added a condition to check if ` forViewCreation ` is false in ` CalcitePlanner. java ` to ensure that the table is not
updated regex patterns in TestHS2HttpServer. java for improved readability to enhance code clarity and maintainability by using consistent variable names
don't crash the graphprinter if a snippet can not be parse
simonstewart : danielwagnerhall : danielwagnerhall for an insecure ssl certificate
update byteOffset calculation in ByteBlockPool and add a test for too many allocations in TestByteBlockPool to ensure correct allocation handling and validate
changed the ` firstEncoder ` and ` secondEncoder ` from static to instance variables in ` InteractionValueEncoder. java ` to ensure that
if an unexpected error occur while close the transport, stop the latch.
added @ SuppressWarnings ( " serial " ) annotation to PApplet. java to suppress serialization warnings and improve code clarity
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` to simplify the class hierarchy and
add more informative message when database have change.
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator. java and updated error messages in OAuth20AccessTokenEndpointController
added a check for the index parameter in DrillBuf. java to ensure that the index value is correctly validated before processing
added input format classes to the initTableMapperJob method in TableMapReduceUtil. java to enhance functionality by allowing custom input formats in table
removed redundant call to append in AbstractJRubyMojo. java to streamline code by eliminating unnecessary duplication
sulong : fix npe in llvmpolygloteval when no language be available.
added deprecation warning and validation for reserved commit duration in ReplicationHandler to ensure compatibility with newer Solr versions and enforce stricter requirements
hhh - 147483 : fix typo in sql entity processor
changed the return type of ` generateECKeyPair ` from ` long [ ] ` to ` Object [ ] ` to accommodate larger key
added a ` suspend ` method to ` Restarting ` and modified ` StateWithExecutionGraph ` to accept a ` JobStatus ` parameter to enhance
replaced the singleton instance of ` MainThreadInitializedObject ` with a direct instantiation of ` RotationTouchHelper ` to simplify the instantiation process and
refactor code to use ` flatMap ` for stream processing in ` UniFiControllerCache ` to improve readability and maintainability of the code
updated thread ID parameters from ` lwp _ id ` to ` unique _ thread _ id ` in multiple classes to improve clarity and accuracy in
OfferBook. java : use findany ( ) instead of contains ( ) to ensure that old offer exist in the list with the same Offer
skip test for default tl protocol ( tlsv1.3 )
refactor mock handling in MockitoMethodInvocationControl and SystemClassUserTest for improved clarity and consistency to enhance code readability and maintainability by using a
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple files to ensure that the exception is
replaced the import of DisplayUtils with a direct intent extra for file data to streamline the code by eliminating an unnecessary import
added error handling and improved file management in StoreDirect and StoreWAL classes to ensure proper resource management and prevent potential memory leaks during compaction operations
replaced direct calls to ` SystemUiProxy. stopSwipePipToHome ` with a call to ` SystemUiProxy. java ` to stream
added hidden functionality to CommandArgumentDefinition and updated relevant classes to enhance command argument handling by allowing toggling of hidden state
updated the port number from 8090 to 9092 in LoggingKafkaPluginTest. java to ensure the test connects to the correct server port
[ geot - 5494 ] make sure catalog be available for styleinfo.
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
added an ` getId ( ) ` method and ` setId ( int id ) ` method to multiple map tile classes to ensure consistent identification of
refactor methods in Manager class to improve code readability and maintainability
updated JDBC connection and session initialization to use versioning to ensure compatibility with V _ 0 _ 13 database versioning
added new properties ` schemas ` and ` includeSchema ` to ` LiquibaseGenerateChangeLogMojo ` and updated the change log generation logic
replaced ` putIfAbsent ` method with ` put ` method in ` JmxRegistry. java ` to ensure that the registry is stored in the cache
change log level of singlebenchmarkrunner. warmup ( ) to warn
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore. java ` to enforce immutability
fix file path in file selector fragment. fix # 2483
added new test cases for handling large response content in FastCGIProxyServletTest. java to improve test coverage and ensure proper handling of large
added startService call in MarkReadService to ensure the ReadInteractionsService is started during data processing
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader. java ` to ensure warnings are only logged when the
added functionality to set a default mail server port if it is null to allow dynamic configuration of the mail server's port
added retry policies for SSLFactory recaling in TlsUtils. java to enhance reliability during SSLFactory recalculations
updated the date format in ObjectMapperProvider from " yyyy - MM - dd'T'HH : mm'Z'" to " yyyy -
updated error message in SpyingOnRealObjectsTest to clarify the reason for mocking a private class
added functionality to check if line ends on NL in InlineBoxing and LineBox classes to ensure line boundaries are correctly treated
updated filePathString assignment to handle null parent case to improve robustness by avoiding potential null pointer exceptions
removed unused import of DocCollection from TopicStream. java to clean up the code and improve maintainability
refactor NinjaServletContextTest to use HttpServletRequestInputStream for multipart data handling to improve code clarity and maintainability by encapsulating input stream logic in
added a properties configuration for web exposure in AbstractCasEndpointTests to enhance security by restricting access to the management endpoints
added validation to ensure the current graph is a dynamic graph to prevent runtime errors due to invalid graph configurations
ignore disabled bean when use @ scopedone with @ scopedone
jsonpath now accept an optional parameter to suppress exception.
updated the creation of the ControllerLeaderLocator in HelixServerStarter. java to ensure consistent usage of the HelixManager
updated usage messages in CLHSDB and HSDB to use " hsdb " instead of " [ pid ] " to provide clearer usage
refactored chunk provider configuration in FaultTolerantStepFactoryBean and removed unnecessary listener registration in SimpleStepFactoryBean to improve code clarity and maintain
[ flink ] [ table - planner - blink ] delete writestinkitcase
refactor ` ShadowAccessibilityManagerTest ` to initialize ` accessibilityManager ` and use ` AccessibilityManagerInstance ` for testing to improve code clarity and
add group _ display _ id to analytics for flutter usage stats
removed the ` SourcePathResolver ` parameter from the ` JavaSourceJar ` and ` Javadoc ` classes to simplify class dependencies and improve code clarity
refactor PostgreSQLDatabaseConnector to use a new PostgreSQLEnumDataTypeHelper class for enumerated column data types to improve code organization and maintainability by separating
updated file path comparison to use File. separatorChar to ensure compatibility across different operating systems
replace " MapLocalWork " with " MapRedLocalWork " across multiple files to ensure consistency in localization logic
added a check for index tables in HiveMetaStoreClient to ensure that unsupported operations are handled correctly when attempting to drop non - index tables
added a condition to update disabled scroll flags based on visibility state to improve user experience by disabling scrolling when the view is visible
added a platform - specific highlighter for Windows in Repl. java to ensure proper syntax highlighting for non - Windows environments
don't add ` ` local variable'' to optional local variable in cross - site scripting
updated path retrieval method from ` toUri ( ). getRawPath ( ) ` to ` toString ( ) ` in ` HadoopPinotFS.
removed an unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency in formatting
changed the value of _ metaDataComplete from true to false to modify the behavior of metadata completion handling
modified the ` removeTaskTarget ` method to return a void and added execution flow using ` THREAD _ POOL _ EXECUTOR ` to
add support for " PLATFORM " and " RELEASE " flavor in JsBundleGenrule to ensure proper handling of environment variables in the build process
update variable initialization logic in ` ppp Lower. java ` and add a new class ` T6500701. java ` with a
added tests for handling crlf new lines in comments and Javadoc to ensure proper formatting of new lines in import statements
added hubMode property in AbstractLiquibaseMojo and set it in AbstractLiquibaseChangeLogMojo to allow configuration of hub mode for
removed unnecessary null check for processedItem in JsrChunkProcessor. java to improve code clarity and prevent potential null pointer exceptions
updated IndexerMapReduce to check for the existence of the linkDb before adding input paths to improve robustness by handling cases where the link
replaced manual retrieval of the " setIndexerThreadPool " method with reflection to improve code readability and ensure proper access to the method for setting the index
updated the address string format in GameCanvasImplementation. java to simplify the address format for better readability
refactor MapJobExecutionDao to use a copy method for job executions to ensure that modifications do not affect the original job execution
added a new file ` DownloadTest. java ` for testing the download functionality of PNG files to implement and verify the functionality of downloading PNG files
update to late stable stable release
updated error handling in GenericUDFRound to use UDFArgumentTypeException for argument types to improve type safety and clarity in error reporting for input
added null check for selectedVersion before processing versions to avoid potential NullPointerExceptions during version processing
added multiple AntPathRequest matchers for various media types in SecurityConfig. java to enhance security by restricting access to media types based on their
added JUnit Ignore annotation to TestConcurrentDppInserts. java to temporarily disable tests that are not ready for execution
fix : do not generate ` ` java. lang. object'' type for non - object inner class
added an @ Ignore annotation to HttpClientRedirectTest. java to temporarily disable the test due to known issues
updated method names and constants in OpenWebNetEnergyHandler. java and OpenWebNetThermoregulationHandler. java to improve code
simplify code by eliminating unnecessary conditional check
deleted the SunToolkitSubclass. java file to the class is no longer needed in the project
replaced MathUtils with Matrix4 in DefaultRenderableSorter. java and added hasRotationOrScaling method in Matrix4. java to improve rotation handling
added unit tests for type handler registration in TypeHandlerRegistry to address issue reported in GitHub issue # 165
added a method to convert a raster image to a RGB image based on alternate color space to improve image processing accuracy for PDLab color space
updated URLs to use BuildConfig instead of CommonsApplication constants to improve maintainability by centralizing URL encoding logic
camel - 13312 : camel - main - add fake health check for camel - main
added null check for the blockpos before retrieving it from the worldObj to avoid potential null pointer exceptions
added a test for altering a table with indexes in AlterTableWithViewsIT. java to ensure that the alteration process correctly handles index
updated offset handling in FileFloatSource and modified test assertions in TestFunctionQuery to improve accuracy of document indexing and enhance test reliability
removed a specific ID from fields in MongoRecordReader to streamline data handling by eliminating unnecessary fields
added disconnection handling in YeelightHandlerBase and connected state handling in DeviceBase and WifiConnection classes to ensure proper disconnection handling and
compatibility for mysql with auto _ increment
fix : sharedindexinformers should always return the same informers
bugfix : fix npe in templatemanagerimpl # savedetail
refactor image handling in ShadowBitmapFactory to improve null safety and streamline image processing to enhance code robustness and maintainability by ensuring robust
removed deprecated constants from LauncherSettings. java to clean up the codebase and improve maintainability
move stocktickstream. dat to / org / drools / examples / broker
added legendTop variable and updated legend positioning calculations in PieChart. java to improve legend positioning for better visual representation
added a check to return early if the world transformation is not zero to improve performance by avoiding unnecessary processing when the world transformation is not valid
added a new file MaryScriptCreator. java that reads input from a text file to facilitate the creation of text files with no
rest - dsl. nifi now store the host attribute on the session for the rest listener.
updated the instantiation and deletion of the compaction logger in LevelCompactionTsFileManagement. java to improve code clarity and ensure proper cleanup of the compaction
component description should use ` ` href'' instead of ` ` xlink : href''
camel - aws2 - s3 : use different executor name for timeout checker
hbase - 25836 region server should log regionserver state when cluster be shut down
added null check for span before logging in Slf4jSpanLogger and DefaultTracer to enhance robustness by preventing potential NullPointerExceptions
trim whitespace from the active option in the configuration to ensure the active option is properly formatted without leading or trailing whitespace
added depth effect preference handling in DepthController to enhance wallpaper zoom behavior based on user preferences
updated assertion in OverseerTest to check the success count of overseer actions to ensure accurate statistical reporting for overseer actions
modified the return value of the ` getKernelVersion ( ) ` method in ` LinuxFileStore. java ` to ensure compatibility with the
updated imports in ExecConstants. java to improve code clarity and maintainability
added ScreenRecordRule import and annotation to ThemeIconsTest. java to enable screen recording functionality in the test cases
added a method to set scan attributes in TableSnapshotResultIterator and utilized it in ScanUtil to enhance functionality by allowing retrieval of scan attributes
don't set lowRange to 100000000000L in request. java and requestv2. java
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource and adjusted cache size estimation in AsyncWrite
updated the method to use getZoneUuid ( ) instead of getUuid ( ) to ensure correct retrieval of the host's uuid
[ zeppelin - 5952 ] fix livy content type to be utf - 8
replace filesystems. remove ( zfpath ) with filesystems. remove ( zfs ) instead of filesystems. get ( zfs )
replaced ` Object ` with ` String ` for JSON serialization in ` HttpRequestBuilder ` to improve code clarity and maintainability by using a more des
updated polling timeout values for hard529 in SoftAutoCommitTest. java to improve stability by allowing more time for commit operations
catch exception in selenidelogger. beforeevent and selenidelogger. afterevent ( )
from user
removed unnecessary placeholder in error logging statements to streamline error logging for better readability and maintainability
updated the version of the Ryuk container from 0.4. 0 to 0.4. 1 to ensure compatibility with the latest features and improvements in the
updated method to return additional bootstrap paths and added a new test hook class to ensure proper bootstrap path retrieval and validate functionality through testing
fix patchy library load on mac o x
[ hotfix ] [ yarn ] replace yarnclient instantiation with createyarnclusterdescriptor
add stats of no data included map to localmapstatsprovider
deleted the AllTests. java file to the test suite is no longer needed in the codebase
added UNICODECHAR _ NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE constants in AbstractWordConverter to
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that large stack trace invocations do not star
updated method call to use ` getResultMappingsForRowKey ( nestedResultMap ) ` instead of ` nestedResultMap. getResultMappings ( )
added eventHandled flag to UIText. java to ensure proper event handling during text processing
deleted the Controller. java file and renamed Weldby. java to WeldModule in Weldby. java to remove unused annotation and
add ` ` monitorcapturegroupsinemptycheck'' flag to ` tregexbacktrackingnfaexecutenode `
replaced the retrieval of the Liquibase PRO LIQUIBASE _ PRO _ LICENSE _ KEY system property with a protected variable to allow
; ; ; ; ;
[ tracknodesourceposition ] add - g option to generate debug information
mondrian : fix typo in mondrianproperties. java
added support for retrieving friend paths from Kotlin arguments to enhance functionality by allowing customizable friend paths
added support for BATK, BRAH, and MAND aliases in Character. java and updated CheckScript. java to enhance character
updated equality and serialization methods in ExecutionCommand and StageUtils classes to ensure proper comparison and deserialization of execution commands
updated Mockito library version to ensure compatibility with recent features and bug fixes
refactor OCFile class implementation to improve code readability and maintainability
added a toString ( ) method to the SystemScope class to provide a readable string representation of the object for easier debugging and logging
updated CSS parsing logic to handle percentageages and number parameters to improve parsing accuracy and enforce stricter requirements for percentage function parameters
against
updated import statements and method calls to use ApplicationProvider instead of InstrumentationRegistry to ensure compatibility with the new testing framework
updated message formatting to use string resources instead of hardcoded strings to improve maintainability and readability of the code
simplified conditional checks in ` RendererUtilities ` and added new test cases in ` RendererUtilitiesTests ` to improve code clarity and ensure proper functionality through
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid iterators and update related methods to improve code clarity and maintainability by
added a try - catch block to handle SQLiteException when adding a column to prevent adding the same column twice during database upgrade
removed debug print statement from AsyncServletIOTest. java to clean up test output and reduce unnecessary console output
added hash table load factor and refactored data size computation in ConvertJoinMapJoin. java to improve performance by reducing the number of data
updated the ` buildView ` method to accept a ` Context ` parameter and set background resources based on the selected item background to improve flexibility in
added an ` withAuthentication ` method with a ` Consumer < Authentication > ` to ` SecurityMockMvcResultMatchers ` to enhance security by allowing
vpc : set vpcid to null in gatewaynet
[ flink - 10955 ] [ test ] skip flinksavepointtest on jdk 11
updated the ` @ EdgeType ` and ` @ CaptionStyleCompat ` annotation to ` @ EdgeType ` and ` @ CaptionStyle
simplified loop condition in Actor. java to improve code readability and maintainability
updated the BitmexStreamingExchange class to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex API
[ task 7 ] add test for virtual metadata
added null check for spatial before processing to avoid potential NullPointerExceptions when spatial is null
modified ` ConditionalTokenFilter `, ` FixedShingleFilter `, ` TestRandomChains `, and ` FixedShingleFilter `
update unsafestorenode. setstateafter to stateafter.
replaced the call to ` super. putAddress ` with ` io. putAddress ` in ` BoundedMemoryIO. java ` to streamline
added an assertion to check if the casEventRepository is empty to ensure that the event repository is not empty before proceeding
removed the ` attributeTemplateName ` parameter from ` AuthenticationAttrProcessor. java ` to streamline the code by eliminating unused parameters
added null checks for the key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that null keys are not accepted to
remove typeface setter from CodenameOneTextPaint class to enforcement that typeface can not be set in the runtime
implement ` open ` methods in ` AzurePinotFS `, ` LocalPinotFS `, and ` HadoopPinotFS ` classes
simonstewart : remove deprecate fail ( ) method from webdriverrunner
simplified the conditional check for item size to improve code readability and maintainability
refactor DefaultResultSetHandler to use instance variables instead of final variables to improve code clarity and maintainability by ensuring consistent usage of constructor mappings
updated SQL syntax in CreateTableGeneratorTest. java to ensure proper SQL syntax for foreign key constraints
modified the VectorizationContext to conditionally handle filter operations based on the result type to improve the logic for determining if the operator is filter based on
fix raw type warning in haustiveresource.
replaced the existing ReorganizeTableStatement instantiation with a new modifyDataTypeStatement to simplify the code by eliminating unnecessary parameters
updated cluster name references to use constants from IoTDBStartCheck to improve code clarity and maintainability by centralizing cluster name logic
improve logging when a peer can not be connect to a peer.
added conditional checks for style strings in Nano. java to ensure proper style assignment based on the presence of specified styles
replaced direct usage of AdventureNBTConverter with AdventureNBTConverter for handling compound types to improve compatibility with jnbt's
updated return message from " Use ` String ` " to " No # toString ( ) on String " to provide clearer context for the method '
updated memory settings from " - Xmx64m " to " - Xmx32m " to optimize memory allocation for improved performance
fix : dataprovider. retry ( ) now return the result of retryfailed ( ) method
replace'tokens [ 0 ]'with'bandwidth'in BucketStateIEEE754. java to ensure correct data type is used for
simonstewart : add method to webdriverbackedSelenium that throw an unsupportedoperationexception.
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and added public key information to streamline the method signature and enhance
removed unnecessary whitespace in TaskAsyncCallTest. java to improve code readability and maintain consistency
added checks for opaque and non - undecorated dialog properties in Dialog and Frame classes to ensure that only valid dialog properties are used to prevent
changed the ` state ` field from non - final to final in ` DefaultProjectFilesystem ` to ensure immutability of the ` state `
added sentinel configuration and improved password handling in Redis object factory to enhance Redis configuration flexibility and ensure proper password configuration
add ` ` lastseendelayedmessage'' system property to chatroomjabberimpl.
replaced instances of ` new Callback. Adapter ( ) ` with ` Callback. NOOP ` in ` ResponseNotifier. java ` to simplify the
refactor share operation creation and handling in FileOperationsHelper and OperationsService to improve code organization and maintainability by centralizing share operation logic
use jakarta. inject. inject in fieldpropertyinject to mark a value a @ inject.
updated y - coordinate calculations in ClassicPlotManager. java to ensure correct height is used based on plot world type
added a check for NullPointerException in SmackIntegrationTestFramework. java to ensure proper handling of NullPointerExceptions
tmi - tiff : add readlinked option to tmi file.
added ENABLED _ LS mode to VersionTargetGraphMode and modified dependency executor initialization accordingly to support different versioned target graph modes in the application
added a check for video formats in the conditional statement to ensure proper handling of video formats in the media processing logic
chore ( regen ) : update license year for generated file
added a load method to LwjglNativesLoader for dynamic loading based on the javax. jnlp. ServiceManager dependency to improve loading
added support for the ESCAPE character in CSVRequestHandler and updated related logic to enhance CSV handling by allowing custom escaping behavior
updated grant type validation in ClientRegistrations and modified test cases in ClientRegistrationsTests to ensure compliance with OAuth2 grant types and improve
enhanced exception handling in Throwable and SuppressedExceptions classes to improve clarity of error messages and ensure proper cause management
updated ` OrderedResultIterator ` constructor to include ` null ` parameter in ` DerivedTableIT ` and ` ClientAggregatePlan ` to enhance query
added support for the " RSquare " property in the RegressionEvaluator and StreamExpressionTest classes to ensure the correct representation of the " RSquare
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 436 : add
refactor code to use a local variable instead of casting to ` MapWork ` to improve code readability and maintainability by reducing casting overhead
refactor image handling in PdfJndiReport and PdfSessionInformationsReport classes to improve code clarity and maintainability by encapsulating image logic
updated caching method in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer in JwtIssuerAuthenticationManagerResolverTests
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` and added a new test for database initialization with directory locations to
added a ` isMethod ` parameter to the ` Function ` constructor and updated related calls in ` LLVMInteropType. java ` to
removed duplicate sleep statement in AbstractBasicMockingIntegrationTest. java to streamline code by eliminating redundancy
added a new file ` KernCrash. java ` that includes a custom font for KernCrash to demonstrate the handling of font - related
added a fail ( ) method call in LinkedHashTreeMapTest. java to ensure the test does not proceed with expected failures
added a method to retrieve network interface IPs based on a specified prefix to enhance network configuration by ensuring that only valid network interfaces are processed
added housekeeper cleanup test to ensure housekeeper task be properly shut down
fixed an issue in the group transfer service logic to ensure the correct slave address is used for synchronization
refactor assertion methods in Assert. java to improve code readability and maintainability
added a new test class ` Issue247Test ` with a test method for creating and retrieving data from a map to ensure the correct functionality of
changed the ` results ` set type from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doInBackground `
add test for todayLeapYear and birthLeapYear in ValidatorTest. java to ensure that todayLeapYear and birthLeap
added new GrblLookups for alarm codes and error codes in GrblController. java to enhance error handling and improve command completion logic
updated string resource retrieval for home button labels when there are no screens to improve user experience by providing clearer text when there are no screens available
removed the'count'parameter from the ` getTrades ` method across multiple classes to simplify the method signature and improve code readability
updated string handling in ConsoleReader and MemoryHistory classes to improve null safety and correct indexing logic
updated the file path construction in JavaBuild. java to correct the path format for the application package
replaced calls to ` getDescription ( ) ` with ` getType ( ) ` in multiple classes to improve consistency and clarity in accessing build rule types
added a logger parameter to the JFCModel constructors and methods to enhance logging capabilities for better debugging
added a validation check for the tolerance parameter in MaximumInscribedCircle. java to ensure that the tolerance parameter is non - positive to prevent
added methods to create and drop a view database in TestUtil. java and DatabaseMetaDataTest. java to enhance database management by ensuring proper view
added support for verifying stability of float and double tests in NaNTest. java to ensure tests are only executed on supported platforms
added a new class ` DesktopTaskbarUIController ` and updated ` TaskbarManager ` to check for system features to enhance taskbar functionality
added progress tracking imports and refactored the ModItemAdapter class to implement TaskCountListener to improve UI responsiveness and ensure proper task management
refactor methods in mmm Files. java and ppp Files. java to improve code readability and maintainability
refactor GrpcServerAutoConfiguration to use GrpcServerFactory instead of GrpcServiceDiscoverer to improve code clarity and maintainability by
updated DomainAwareServicesManager and ChainingServicesManager to extend ServicesManager to enhance service management capabilities in the application
fix resourcepackloader not be able to load mod file
chore : update gapic - generator - java version to 2.1. 0 ( # 49 )
added grow ( ) and growX and growY methods to Cell class to provide reusable methods for resizing cells
refactor key binding management in DefaultInputHandler. java to improve code clarity and maintainability by using a more descriptive variable name
resolve intermittent failure in test case
replaced long array with byte array and added memory fail count check in MetricsMemoryTester. java to optimize memory handling and prevent excessive memory usage
deleted the JobParametersPrototype. java file to remove unused class to streamline the codebase
added a securityEnabled field to the MappingsTable class and updated related methods to enable or disable mapping rows based on security settings
rename ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE constant from true to false to disable dumping functionality for file processing
workaround for amazon fingersafs on android 10.
[ java ] : check if the network be connect before set the producer limit.
added a condition to check if the output options are not empty in BaseFormatter. java to ensure that the output options are validated for output options
allow connect to a non - ssl port in the presto driver uri.
updated the buildDOMSubtree method to include a DOMOutputOptions parameter to enhance flexibility in processing latex elements
refactor assertion methods in Assert. java to improve code readability and maintainability
add event. retained property to allow client to retain event.
added testCaseName to JSON serialization tests in EventSerializationTest. java to improve test coverage by including additional case names in serialization outputs
[ flink - 21174 ] [ table - planner - blink ] fix the bug of the new sqlkind. tUMBLE
remove unused import of core. Parsed from LatexToUnicodeAdapter. java to streamline imports and improve code clarity
improve performance of abstractsessioncontext. newssl ( )
updated conditional check from ` size ( ) = = 0 ` to ` isEmpty ( ) ` in ` AppModule. java ` and refact
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` to ensure compatibility with Ansi SQL dialect
changed logger level from debug to trace in FirmwareUpdateService. java to improve logging granularity for non - firmware update handlers
added tests for retrieving null dates and timestamps in the database to ensure that null values are handled correctly in the database operations
updated string concatenation and formatting in ` StringSubject `, ` CustomFailureMessageTest `, and ` RelabeledSubjectsTest ` to
added tests for repository permissions in UserModelTest. java to ensure correct permission handling for multiple teams in the repository
added a new file Test7088020. java with a test method using MethodHandles to verify that the method handles missing stack frames correctly
replaced audience restriction matching logic to use a set of URIs to ensure that only valid URIs match the assertion audience
refactor cache update methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener classes to improve code clarity and maintainability by centralizing cache refresh logic
updated stderr handling to check for null stream before printing to improve robustness by preventing potential NullPointerExceptions
added a SEPARATION _ ORDER constant to the Warning class and implemented stage activation checks in BasicEventSimulationEngine to improve warning categorization for
updated the parameter from ` offlineTableConfig ` to ` realtimeTableConfig ` in the optimize method call to ensure the query optimizer uses the correct
added configuration for HBase normalization settings in the PhoenixHBaseAccessor and UpgradeCatalog240 classes to ensure proper handling of metrics table creation based on user
refactor SavepointV2 and FileStateHandle classes to improve code clarity and maintainability
added BluetoothClass handling and testing in ShadowBluetoothDevice to ensure proper Bluetooth class management and functionality
updated method name from ` contains ` to ` containsProfile ` in multiple classes to improve clarity and consistency in method naming
fix sum ( [ ] ) for null and empty list
replaced graphModel. getGraph ( ). readUnlockAll ( ) with graph. readUnlockAll ( ) to improve efficiency by eliminating unnecessary
updated coreNodeName construction to use getCoreName ( ) from nodeProps to ensure the correct core name is used for processing
add backpressure update to chat activity to prevent crash.
rename TaggerParserPosTagCompatibilityITest. java files to improve clarity and maintain consistency in file naming
added @ LuceneTestCase. SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase. java to suppress SimpleText
updated type comparison logic in ` mmm Types. java ` and added a new class ` ppp T7005671. java ` with
replaced EarClippingTriangulatorTest with DelaunayTriangulatorTest and added a seed variable to improve testing reliability and
@ see annotation in javadocs for ` ` @ see'' and ` @ see''
refactor JWTClaimsSet initialization to use a builder pattern to improve code readability and maintainability by utilizing a builder pattern
fix for stack overflow
added shadow methods for SQLiteDatabase, ShadowAbstractCursor, and ShadowContentValues in Robolectric. java to enhance testing capabilities by integrating Shadow
added initiateGL ( ) method to LwjglAWTCanvas and LwjglGraphics classes to improve clarity and consistency in graphics initialization
replaced ` bytesPerDim ` with ` ArrayUtil. getUnsignedComparator ` in ` BKDWriter. java ` to utilize a custom comparator for
updated Locale class to include script and country parameters to enhance locale retrieval by incorporating script and country information
update text alpha return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure text alpha reflects the last set instead
corrected a typo in the warning log message from " Confimap PropertySources does not match " to " ConfigMap PropertySources does not match "
replaced LimitedModeLoginMockMvcTests with LoginMockMvcTests and utilized UaaJunitSuiteRunner class to streamline test suite
trim whitespace from token values in GzipFilter and related tests to ensure consistent handling of whitespace in method calls and test cases
corrected formatting of the code in Response. java to improve code readability and maintain consistency
updated regex implementation from JDK to JONI to ensure compatibility with the Nashorn regex engine
replaced ` LooperExecutor. submit ( ) ` with ` Executor. execute ( ) ` and refactored ` captureViewPropertiesBg `
[ ticket ] add support for query parameter'voice ='' '
added a check to ensure the parent folder exists before creating it to prevent errors when attempting to create non - existent directories
update node discovery bind IP from 0.0. 0.0 to 127.0. 0.1 to ensure proper IP address is used for node discovery binding
camel - jbpm - fix the unit test error of camel - jbpm
pdfbox - 4071 : remove static import of jpegutil and add private constructor
updated UI elements and class names from WorkModeToggleContainer and WorkModeContainer to WorkFooterContainer and WorkModeToggleContainer to improve UI consistency
fix javadoc warning in dalvik code
refactor DefaultJavaPrettyPrinter to streamline annotation printing for type parameters to improve clarity and maintainability of the code by ensuring proper handling of
[ hotfix ] fix memory leak in operatorcontext
removed backslashes from formatted strings in QueryByExamplePredicateBuilder. java and modified string replacement logic in StringQuery. java to simplify error handling and
updated ` ConcurrentLRUCache ` and ` FastLRUCache ` classes to use ` AtomicLong ` instead of ` long ` for eviction
add a new method ` runAndWaitInJavaFXThread ` to ` DefaultTaskExecutor ` that handles a Runnable on the JavaFX application thread to
don't check if the intended destination be Inet4Address in NetworkAddressManagerServiceImpl. java
set the database root and source root in the MainFrame class to ensure the application uses the correct source for database operations
added ` MarkedClientEnabled ` and ` AdminServerEnabled ` constructors to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration `
[ hotfix ] [ table - common ] fix typo in tableenvironment
updated statement timeout handling in MapperBuilderAssistant and adjusted fetch size in ExecutorTestHelper to ensure consistent timeout settings and improve test reliability
refactor method signatures by removing the hangingTscTimeout parameter to simplify method signatures and improve code clarity
added serialization registration for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration. java to ensure proper serialization of GeoLocation
updated precondition checks for destination and source artifacts in ArtifactFilesystem. java and ArtifactFilesystemTest. java to ensure that destination is a Build Artifact
tika - 3957 -- throw exception instead of throw a tikaexception when a hpsf document be not a hpsf
don't trigger concurrent modification on circular definition
don't try to write to pipe if there be no data available
include actual and expected string in guavaoptionalsubject. hasvalue ( string ).
updated the ` getVisibleElements ` method to include ` VERTICAL _ SWIPE _ INDICATOR ` in ` BackgroundAppState ` and
added a null check for the nav variable in MatDefEditorlElement. java to prevent potential NullPointerException when nav is null
DrawImage. java and GeoImage. java to simplify conditional checks and improve code readability
updated error handling logic in ErrorOccuredInOnExceptionRoute. java to improve error reporting for better debugging
astrodiscoveryservice : use schedulewithfixeddelay instead of scheduleatfixedrate
simplified unit assignment in SinglePassAndImageBasedLightingLogic. java to improve code readability and maintainability
camel - jms : disable test that hang.
guice : fix import in guice test
added system feature management functionality to RobolectricPackageManager to enhance functionality by allowing optional system feature checks
[ rca - framework ] allow path property to end with'path '
added logging for the start of cancellation watch dog to improve visibility of the cancellation process for better debugging
added a null and empty check for enumerationValues in RADProperty. java to ensure enumerationValues is set to null when no values are available
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 46
server : send what's my ip service replied with what's my ip service
updated database column type change logic in UpgradeCatalog260. java to ensure correct database type handling for mysql databases
improve error message when unable to create index / temp resource directory
updated import statements in DatasetUtilities. java to improve code clarity and maintainability
added a new line to append the selector ID to the key in the Matcher class to ensure the correct identification of the selected element in the
updated debug log message formatting and formatting in GouraudShadingContext. java to improve readability and maintain consistent logging format
updated taskbar visibility and alpha handling in the StashedHandleViewController and TaskbarDragLayerController classes to improve taskbar visibility and
removed unnecessary parameters from KeyExchange. java to streamline the code for better readability and maintainability
added a check for ` conn ` before executing a query in ` CockroachDatabase. java ` to ensure proper connection handling and prevent
updated log file name handling in ServerMainTest. java to ensure correct logging file is used when the index is - 1
added methods to retrieve media reordering mime type in CodenameOneImplementation, MediaManager, and ImageIO classes to enhance functionality by providing access
change the access modifier of the ` useShaders ` method from private to public in ` ShaderHelper ` to allow external access to shaders
druid adapter : fix druid adapter druid filter test
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintain consistency
pdfbox - 2576, pdfbox - 2576, pdfbox - 2577, pdfbox - 2576, pdfbox - 25
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org. springframework. security. oauth2. client ` package to provide
replace ` indexOf ( " < script > " ) > = 0 ` with ` indexOf ( " < script > " ) > 0 ` to
rename variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modify conditional logic for varargs access to improve
replaced null checks for BORDER _ TOP, BORDER _ BOTTOM, and BORDER _ LEFT with a new method ` borderIsNotSetOrBlank ` to
changed log level from info to debug in WatchConnectionManager. java and WatchHTTPManager. java to reduce log verbosity and improve performance during connection
updated InternalDropAllCommandStep and HubUpdater to return HubRegisterResponse instead of null to enhance functionality by providing a response for project
replaced ` & 0xff ` with ` Byte. toUnsignedInt ( b [ off + 1 ] ) ` in multiple classes to ensure proper
updated string conversion syntax in OpenTracingTransactionProducer. java to ensure proper encoding of the RocketMQ message
update depfiles default from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig. java to optimize caching behavior by using a more appropriate data structure
change the rangePannable property from true to false to disable range panning functionality in the plot
update work mode switch state to work if the current active page is WORK to ensure proper view management for work mode switching
changed access modifiers of glCaps, renderer, and animator variables in Visualizer2TopComponent. java to enhance encapsulation and improve code readability
added exception handling for CancellationException in FunctionTest. java to ensure graceful handling of cancellation scenarios
changed constructors of JarFileResource and JarResource to be protected to allow subclassing and enhance extensibility of the JarResource class
fix typo in javadoc of defaulttrackselector.
added a wait loop to wait for unseqMerging before proceeding with unseqMerging operations to ensure that unseqMerging processes
updated fee assertion from AUD to BTC in BTCMarketsAdaptersTest. java to ensure the test accurately reflects the
added a @ Table annotation to the Post entity and updated test methods for JPQL and JPADTO projection to improve clarity and accuracy of database
refactor methods in Unicode class to improve code readability and maintainability
refactor installAutoInstance method to include Service parameter and updateHiveLLAPSettingsIfRequired method to enhance functionality by ensuring proper handling of interactive
removed unnecessary whitespace in SendHeadersFirstPublisher. java to improve code readability and maintain consistency
camel - aws : use builder instead of custom deserializer.
added handling for BIG _ DECIMAL value in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
rename ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper. java ` to improve clarity by indicating the purpose of
removed unused import and print statements for annotations in ParameterInfo. java to clean up the code and improve readability
added support for AC3 and improved playback state handling in the PlaybackController and VideoManager classes to enhance video playback functionality and ensure proper playback
replace an empty response with a map containing null values in the HttpResponse to ensure that null values are properly handled in the HTTP response
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement and DiskFileItem classes to address the need of Commons DBCP and
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT. java ` to ensure that SQL queries are correctly
refactor methods in RTimerTree. java to improve code readability and maintainability
updated package declarations from com. facebook. buck. rules. graphbuilder to com. facebook. buck. core. rules. graphbuilder to
fix issue with text that don't fit on line width
updated the executor and scheduler settings in ClientConnector. java to include unique names for client threads and schedulers to improve clarity and debugging by providing
refactor ViewResultsFullVisualizer to improve code readability and maintainability to enhance code clarity and facilitate easier debugging practices
added description for user phone numbers in ScimUserEndpointDocs. java to enhance documentation clarity for user phone numbers
added private constructors to DeleteFiles, IndexFiles, IndexHTML, and SearchFiles classes to enhance encapsulation and prevent instantiation of singleton classes
added null checks for responseMap in JsonHttpPropertyRequest and enhanced error logging in URLStreamProvider to improve robustness of HTTP response handling and
refactor methods in SolrRequestHandler to improve code readability and maintainability
added a condition to check if the parallel parameter is not DEFAULT _ PARALLEL in XmlSuite. java to ensure that the parallel processing
testvmware * : fix checkstyle violation
added support for SCARD _ E _ NO _ SMARTCARD in error handling logic to enhance error handling for smartcard scenarios
added SuppressSysoutChecks annotation to Test2BTerms. java to suppress unnecessary console output for debugging purposes
camel - 18836 : camel - bindy support multiple key - value pair for same key - value pair.
change default value of'useOwner'and'useTimeStamp'from Boolean. TRUE to Boolean. FALSE to ensure default values are consistently set
updated the ` runAndCheckException ` method signature to accept a ` ThrowingRunnable ` instead of a ` Runnable ` to improve exception handling by
added null checks for ` via ` and ` viaContext ` in ` CrawlURI ` to avoid potential null pointer exceptions when accessing ` via
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from 4.1. 1 to 4.1. 2 and improved null handling in LiquibaseXMLTransformer. java to ensure compatibility with the
update default cert validity from 7 to 90 to ensure more secure certificate validation
updated the ` frame ` variable and calculation logic in ` ThreadHandler. java ` to improve accuracy of time calculations by using a smoothed delta
added null check for tableSpec ( ) and paginator in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of null table specifications and
added null check for CompactionInfo client in Worker. java and implemented a test for finding the next compact exception in TestWorker. java to
updated fragment state management in ShadowFragmentActivity to ensure proper restoration of fragment state after saving changes
updated formatting in BatchResourceFactoryBean. java for consistency to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the color resource loader correctly handles color references
added error handling for getSingleResult method in AbstractJPAQuery to improve robustness by catching NoResultException and providing more informative logging
fix a bug in collection. getallparents ( )
updated import in DepthController. java to use LawnchairApp for retrieving wallpaper depth effect preference to improve code clarity and maintainability
removed an unused import of ProcessTools from LocalManagementTest. java to streamline the code by eliminating unnecessary dependencies
updated the ` updateTotalEnergyAverageUsage ` method to use ` getHeadSlot ( ) ` instead of ` now ` to ensure accurate energy
refactor ExtensionStack to handle null extensions and improve string construction to enhance robustness and clarity of the stack implementation
2. x : 3. x : 3. x : 3. x : 3. x : 3. x : 3. x :
added connection timeout settings and logging for connection timeouts in the application to improve connection handling and enhance error logging for better debugging
updated formatting in AndroidPrebuiltAarDescription. java to improve code readability and maintain consistency
replaced NewModelTest with ModelTest in LwjglDebugStarter. java to align test with the new model implementation
updated EdgeSyncCursor and BaseImageService to use SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher instead of SystemResourcesEdgeEventFetcher
updated the caching logic in CachingBuildEngine and added a new test for output hash not being calculated when the cache is not writable to ensure that
camel - 7999 : camel - netty - allow to turn off bytebuf by default.
updated the method call to retrieve the table name from the table to ensure the correct table name is used for partition alteration
updated the exception message to specify that Vertx instances must be created with the preferNativeTransport option to ensure compatibility with the preferred native transport option
fix : move test to correct package
refactor methods in StreamEx class to improve code readability and maintainability
updated query hint settings in SessionImpl. java to improve query timeout handling for JavaEE operations
added a new file ` StaticLoggerBinder. java ` implementing ` LoggerFactoryBinder ` to facilitate the management of SLF4J logger
hbase rule, addendum remove duplicate key in familymap.
added rotation handling for window configurations in TaskbarManager to ensure proper layout adjustments based on window orientation changes
added xml unescapes for jabber chat room nickname. jm - 1052
updated the longStackPut method call in StoreDirect. java and added a new test class Issue265Test. java with various test cases to
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable collections and enhance code clarity
http : / / issues. google. com / p / mybatis / issues / detail? id = 6
updated type checks for audioTracks and subtitleTracks in DLNAMediaInfo. java and FFMpegVideo. java to improve code clarity and
modified NBWriteServlet constructor to accept an unlimited parameter to enhance flexibility by allowing the servlet to be unlimited
fix ( blockchain ) : fix totaldifficulty not update correctly
modified action handling in DefaultPlaybackController to return BASE _ ACTIONS when the player is not the current window seekable to improve code clarity and
use copyonwritearraylist instead of synchronize list.
addedUniformAlloc initialization and updated bend angle calculations in AllAppsView. java to ensure proper allocation of texture data based on available resources
added a check for the presence of a colon in the key before processing to ensure that the key meets the expected format before processing
added PrincipalResolver import and modified method signature in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration. java to enhance dependency management for principal
replaced ObjectMapper with ObjectBuilder and JSONParser in DelegationTokenResponse. java to improve JSON handling and ensure proper character encoding
added a method to remove trail slashes from a StringBuilder to ensure proper handling of trailing slashes in the builder
added methods to check if a pattern matches a given string in PatternsMatcher to enhance pattern matching functionality and ensure correctness through testing
hbase - 25836 improve error message when loadincrementalhfiles fails ( chaoyu tang, review by szehon
added handling for fading events in BlockFire. java to ensure proper block fading behavior based on the new potion ID
removed unnecessary whitespace in ` beginOrAdjustReorderPreviewAnimations ` method call to improve code readability and maintain consistency
refactor calculations in ContractStateCapsule and ReceiptCapsule for consistency to improve code readability and maintainability
updated isready ( ) logic in AsyncContentProducer and added isready ( ) method in BlockingContentProducer and AsyncIOServletTest to improve
added a null check for weightField in DocumentDictionaryFactory to ensure that weightField is mandatory to prevent runtime errors
refactor plist variable resolution in AppleBundle. java and add a new test for info plist substitution in AppleTest. java to improve code clarity and
fix the laser turret not be able to teleport properly.
updated method signatures in KucoinAdapters to use OrderCreateApiRequest. OrderCreateApiRequestBuilder instead of OrderCreateApiRequest. Order
added a new file ` PreParseGrammarTest. java ` to test XML grammar parsing functionality
suppress more warning on miss ` ` doclint : missing'' warning
added FontManager import and updated overrideFont method call in ExtendedEditText. java to ensure consistent font overriding across the application
added a null check in the AuthorizeTag class to return an empty list if no user is found to ensure that the tag correctly handles requests
( chore ) camel - cxfrs - cxfrs - cxfrs - cxfrs - cxfrs - cxfr
added an override method ` setUpData ` to the ` JDBCGeometryTestSetup ` class to ensure proper initialization of geometry data during test setup
removed an unused import of DumpHandler in MultipartFilterTest. java to streamline the code by eliminating unnecessary dependencies
[ flink - 21174 ] [ runtime ] don't throw exception if restore attempt for already cancelled task
use server. rmi. create = true when create the rmi registry.
use string. join instead of string concatenation
updated display metrics handling in multiple test classes to ensure accurate testing of display metrics across different SDK versions
[ java ] : add cluster member id to service heartbeat counter.
updated attribute handling in TestThreadMXBean based on the major version to ensure accurate tracking of thread allocation based on version checks
updated the calculation and hash calculation logic in CustomExpression. java to ensure proper handling of NaN values and improve hash calculation accuracy
[ ci ] minor logging improvement for ajaxlistener
added authentication and authorized routes to the AuthenticityController and created a AuthenticityFormTest class to enhance authentication capabilities and ensure only authorized users are
add assertion to ensure that the next node be alive before proceeding
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClientRequestImpl class
fix issue with track selection
refactor RuntimeSerialization class to improve code readability and maintainability
DrawImage. java to handle image cropping based on whether the image was croped to improve image rendering by ensuring correct coordinates based on
refactor UnitOfWorkFactory to improve code readability to enhance maintainability and facilitate future modifications
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and ` Widget
tika - 2852 -- fix npe in mailcontenthandler if content - disposition - file be miss
updated URI construction in ThumbnailsCacheManager. java to ensure correct file identification and improve logging clarity
added support for markSupported ( ) method calls in Source. java to ensure proper reset behavior when markSupported ( ) is enabled
chore ( core ) : deprecate async * processor class in favor of async * subject
ambari - 18748. add configuration property to hide error stack on the error page ( siddharth seth, review by
bug 7143 : don't fail domain cleanup process when delete / delete account
remove bailouts from foreign call handling in SPARCArithmeticLIRGenerator. java to simplify error handling and improve code clarity
drools - 5872 - fix drools - 587, drools - 587, drools - 587, drools - 587, drools
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to call ` callSerially ` to ensure proper handling
[ hotfix ] [ test ] increase the default timeout for unboundedsourcesystemtest
updated ResName qualification logic in ShadowAssetManager. java to ensure correct handling of resource names based on their parent context
deleted ` MrefStat. java ` and ` MrefStat1. java ` files to remove unused classes to streamline code
added a check for blank scopes in DependencyInsight. java to ensure a default value is used when the requested scope is blank
updated error handling in BTCETradeServiceRaw. java to improve clarity and maintainability of trade history validation logic
use hamcrest assertion instead of junit in integrations / common / core / common - backport main ( # 1749 ) ( #
bitcoinuri : add method to get payment request url.
planner - 383 remove this if statement in abstractfrompropertyvaluerangedescriptor.
removed duplicate setting of folder information in FolderPagedView. java to streamline the code by eliminating redundancy
updated lock ownership checks and modified event notification logic in JfrBufferNodeLinkedList, JfrChunkWriter, and JfrThreadLocal classes
refactor null value handling in BasicAbstractTuple for improved clarity to enhance code readability and maintainability by using enhanced null checks
refactor LinterConfigs file handling to use InputResourceUtility for improved configuration parsing to enhance reliability and maintainability of the Linter configuration parsing
replace direct calls to updateBackgrounds ( ) with a post ( ) method that runs updateBackgrounds ( ) and updatePaddings (
fix inventory. oninventorytick not be call when the player be not in the right order.
added support for the OCELOT _ BABY event in PlayerEvents. java to enhance player event handling for movements
add miss @ publicevolving annotation to statetlconfig
added null check for x before setting it in PreparedStatement and Array classes to ensure that null values are handled correctly in the set method
[ java ] print out descriptor for all recordings in archive tool.
changed the newline character from " \ n " to a single quote in StringBuilder to ensure consistent formatting of newline characters in output
updated variable declarations in SiteSnapshotVariationsTest. java and added a new jsonSnapshot method in DatabaseConnectionInfo. java to improve code clarity
updated test imports and refactored the ` removeTheTxAndBlock ` method to use ` Cache ` to improve code clarity and maintainability
added support for handling legacy modes in AmcrestHandler, DahuaHandler, and IpCameraHandler to enable or disable the legacy mode
removed ` NoSuchBuildTargetException ` from the ` resolveBuildTarget ` method signature in ` BuckConfig ` and ` BuildRuleFactoryParams ` to
refactor ChangeLogIterator constructors to accept changeSetList and changeLog as parameters to improve flexibility and maintainability of the ChangeLogIterator class
exit with exit ( 1 ) if guest exception be encounter.
replace environment variable OPT _ OUT _ TRACKING with a call to Utils. getEnvOrSystemProperty to improve flexibility by allowing system property
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
fix : space before ( ) for annotationarrayinitializer
# 2183 - enh : add copy ( boolean ) to servercacheoptions # isnearcache ( )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest. java ` to ensure that the hidden border behaves as expected in
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` to ensure compatibility with the new graph structure in the
updated Kucoin sandbox URI from LIVE _ URI to PROD _ URI and added error logging for Kucoin host exceptions to improve
updated string concatenation syntax in SpringResourceAccessor. java to improve code readability and maintain consistency in string concatenation
added unit tests for MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE
updated vertex mask retrieval from getMask ( ) to getMaskWithSizePacked ( ) to ensure correct handling of size packed attributes in the vertex
deleted the Tls12SocketFactory. java file to remove unused or redundant code
fix duplicate entry in texbibentriesresolver
added a check for Robolectric legacy mode in ResourcesTest. java to ensure proper handling of legacy resources based on Robolectric version
added a check for FirebirdDatabase to return a specific DatabaseDataType to ensure compatibility with Firebird database types
added null checks before setting the data source and transaction manager in DefaultBatchConfigurer. java to avoid potential NullPointerExceptions when accessing the data source
test : add @ api annotation to unittest stub
updated command from " www. google. com " to " ping - c 5 127.0. 1 " and added timeout of 60 seconds to
no effective change - refactor test to use try - with - resources
updated TermScorer instantiation to use NONE based on scoreMode to ensure that the scorer defaults to none when scoring is not needed
dataflowmetrics. setmetrics ( null ) should not throw an npe
bug fix : don't create vm if the vm be already create
refactor DynamicPartitionPruner to use a target object inspector instead of the primitive writable object inspector to improve code clarity and maintainability by central
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ArtifactFilesystemTest ` and ` ActionExecutionStep ` to
added row selection logic for the table in ThrustCurveMotorSelectionPanel. java to ensure proper handling of empty selected rows in the table
replace assertthrows arraystoreexception with assertarraystoreexception.
refactor PropertySource class to improve code readability and maintainability
add a user agent to the http client base on the client's name
refactor session creation and modification logic in MemorySessionStore to use a computeIfAbsent method to improve code readability and maintainability by encapsulating session creation
updated assertions and data provider return types in IssueTest. java and Reporter. java to improve test accuracy by using a more descriptive data provider
nifi - 5657 fixed npe in consumeesWS when content type be null
character should not send activationrequestdenied event if the request be deny.
modified calculations in GraphApplet. java and added @ SuppressWarnings annotation to improve code clarity and suppress serialization warning
updated the ` updateSnapshotRadius ` method in ` RecentsView ` and ` TaskView ` classes to ensure consistent snapshot updates across the application
added logging functionality and improved schema addition in StaticMicroserviceVersions. java to enhance traceability and debugging of microservice schema generation
changed the return type of the put methods from void to int in ArrayMap. java to enable retrieval of the index for further operations
updated Kafka version in KafkaContainerCluster and related tests to ensure compatibility with the latest Kafka features and bug fixes
[ hotfix ] don't send message back on exception in defaultmqPushconsumerimpl
refactor header addition logic in StaticServerHttpHeadersWriter and add unit tests for case - sensitive headers to ensure headers are not added with different case
added package access check in EventListenerList. java to ensure proper access control for the listener type
added functionality to display applications in a ListView using a custom adapter to enhance user experience by providing easy access to the application list
updated the applyIcon method to include task parameters in KeyboardQuickSwitchTaskView. java to enhance functionality by allowing additional tasks to apply based on
refactor DownloadStateCursor to use try - with - resources syntax to improve resource management and enhance code readability
( chore ) camel -Sqm - to - sql : fix arrayindexoutofboundsexception
added JUnit test annotations to HibernateCursorItemReader, HibernateCursorItemReaderStateful, and HibernateCursorProjectionItemReaderIntegrationTests to improve test
refactor DataInputStreamWithTimeout to use an ExecutorService for reading bytes and improve interruption handling to enhance code readability and maintainability by reducing reliance on
added ENABLED _ TS ( 0 ) to VersionTargetGraphMode and imported ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150. java to improve code organization to enhance maintainability and readability of the codebase
rename networkparameters. testnet3 to testnet, not testnet3
updated selection logic for selected geos in PropertiesViewD. java to ensure the application updates when there are more than one selected geos
updated onboarding preferences handling in AppsDividerView. java and added nullability annotation in ActivityContext. java to improve code robustness
replaced ` IndexOutput ` with ` BufferedIndexOutput ` in ` HdfsDirectory. java ` to improve performance by leveraging buffered index output
pdfbox - 4892, pdfbox - 4892, pdfbox - 4893, pdfbox - 4894 :
removed unnecessary synchronized block around localAddress assignment to simplify the code and improve readability
refactor TemplateTransformer to use a new addToRow method for adding values to improve code readability and maintainability by encapsulating logic in a dedicated method
wallet : add a method to check if a file can be rename on window.
replaced ` CHARACTER _ ENCODINGS [ 39 ] ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader. java ` and
added checks for non - null and non - generic return types in NodeGenFactory. java to ensure proper type handling when unexpected values are encountered
refactor stored field value handling in IndexingChain. java to improve code clarity and ensure proper validation of stored fields
fix ( sql ) : fix'where'clause in where clause
updated error handling in LwjglCanvas to simplify stack trace retrieval to improve code readability and maintainability by reducing redundancy
fix a typo in the description of the storage api url
replaced ` assertInitialized ` method with ` waitUntilInitialized ` method in ` ConnectionPoolTest. java ` to improve synchronization and ensure thread safety during
updated directory handling in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use a " single " directory instead of null to improve test coverage by
refactor UserData to use a filter count instead of a size - based approach to improve data handling by incorporating filter count tracking
updated method formatting and improved error handling in FileWithTabs. java and T4994049. java to enhance code readability and ensure proper
replaced multiple redundant conditional checks with ` assumeTrue ` method in ConsoleReaderTest. java to streamline code and improve readability by consolidating logic
remove unnecessary check for admin user in getfeedbacksessionsaction
updated the calculation for determining the newSelection and threshold values in AllAppsView. java to improve the responsiveness of the app's page
don't send client on result availability if nprofiledappthreads = = 0
added data model loading and refreshed functionality in DataModelManagerDialog and modified database connection handling in DbConnectionDialog to enhance user experience by ensuring
changed ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` and replaced string concatenation with ` String. valueOf ( ) ` to improve memory
lucene - 4892 : don't write segment info stream for empty index writer
blender importer : fix an issue with the dvert field in the modifier.
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future development
replace direct instantiation of UnsupportedOperationException with a predefined instance to improve error handling by avoiding unnecessary stack trace filling
updated the method to return the average line height instead of a fixed height to improve accuracy of label rendering by using the average of the line height
updated the constructor of RotationTouchHelper to accept a DisplayHolder parameter to enhance flexibility in handling display configurations
refactor string quoting logic in AVA. java to ensure proper handling of escaped strings to improve robustness and prevent potential errors in string processing
replace Long. valueOf ( s, 16 ) with IdConversion. convertToLong ( s ) and update state current trace handling to ensure parentId
added a new test method ` testSmall ` and ` testBig ` in ` ServerDatagramConnectorTest. java ` to verify the functionality
updated assertion for COUNTRY _ CODE _ s query in TestSqlEntityProcessorDelta. java to ensure correctness of the COUNTRY _ CODE _
refactor Cache class implementation to improve performance and maintainability of the caching mechanism
updated variable names and modified scope settings in ResourceSetRegistrationEndpoint. java to improve clarity and consistency in scope handling
updated IndexSearcher initialization and made seenDocIDs final in TestUnifiedHighlighterTermVec. java to improve code clarity and ensure consistent tracking of
added a new frame to display a persistent JTable with data to enhance the user interface by allowing users to add data to a GcodeTable
updated WEBAPP _ CONNECT _ TIMEOUT constant to use configuration's connection timeout to improve timeout handling for web application connectivity
updated import statements and logging statements across multiple Java files to improve code clarity and maintainability
updated imports in TestMediaService. java to improve code clarity and maintainability
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the HELP _ ABOUT _ DIALOG constant
show fiat / crypto and btc / fiat in non - english locale
( chore ) camel - http - client : validate that the provided component don't contain any character.
added security key registration methods in AccountProxy and HttpAccount classes to enhance security key management and improve authentication handling
refactor ServerSpanThreadBinder class to improve thread safety and maintainability of server span processing
updated user pointer retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics. java ` and refactored
bugfix : csv2shape - add miss type to the builder
replaced ` callGasWord ` with ` gasCost ` in ` VM. java ` and removed unused imports from ` Program. java `
refactor parameter handling in the Parameters class to improve code readability and maintainability
added a method to ignore null values in the piePlot to ensure that null values are ignored during plot processing
refactor bundle loading logic to improve performance and clarity to enhance efficiency and maintainability of the bundle loading process
replace'_'with'-'in TaggedPdfReaderTool. java to ensure proper termination of the command
allow executescript action to be allow during edit
added a userModified flag set to true in LoginSamlAuthenticationProvider. java to ensure that user modifications are recorded in the authentication process
added a new file ` TestSealedObjectNull. java ` that tests the behavior of ` SealedObject ` objects to ensure that the
updated method names from ` onOpen ` to ` setResponse ` in ` ConnectPromise ` and ` WebSocketClientConnection ` classes to improve clarity and
added support for SNOW event handling based on server version to ensure compatibility with server version prior to 1.16. 5
added a lastTradeId variable and updated Trade creation methods to use it to ensure trades are unique and maintain consistent naming conventions
added error handling when closing the HMS connection to ensure proper resource management and prevent potential memory leaks
use random. nextLong ( ) instead of system. currenttimemillis ( )
updated device profiles in DynamicGrid. java to include " Nexus 5 " to ensure proper icon size for devices with a specific device profile
2. x : 3. x : 3. x : 3. x : 3. refcount ( ) throw npe ( # 3
replaced direct instantiation of SynthContext with ReflectUtil's newInstance method to improve compatibility and maintainability of the code
added support forROUND _ TEXTUAL _ OP token type in FormatToken and related classes to enhance formatting capabilities for textual operations
added checks for file existence and file type in SaveTask. java and implemented tests for empty project files in SaveAndLoadTaskTest. java
added synchronized keyword to multiple methods in MLogWriter. java to ensure thread safety during data access operations
add ( log4j2 - 1349 ) to allow mutable logevent to be serialize.
replaced ` LengthLike ` with ` NonNegativeLengthLike ` in ` PrimitivePropertyBuilders ` to accommodate non - negative lengths in property
remove the ` getUser ( headers ) ` parameter from context creation in resource classes to simplify context creation logic for better maintainability
fix exception handle for jimple catch block.
updated test result formatting and improved error message formatting in JUnitRunner and AndroidPlatformTarget classes to enhance code readability and provide more informative error messages
increase cacheSize from 16 to 8 in OmniNotes. java to optimize memory usage for improved performance
added a condition to check if ` start ` is zero in ` InvocationStageTrace. java ` and updated JSON structure in ` TestInvocationPublish
add protection against npe in ProvKeyManagerFactorySpi. load method
modified the port handling in the UpstreamCheckUtilsTest to use a dynamic port instead of a hardcoded value to improve test reliability by dynamically
ticket ( ticket : 283 ) : fix bug in dockmanagerw. get ( ).
add capability check for gl _ arb _ compute _ shader, gl _ max _ geometry _ shader, and gl _ max _ tess
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future development
don't send save notification if project don't exist
added UTF - 8 encoding handling in ZQLJobManager to ensure proper serialization and decoding of ZQLJob data
added a check for non - empty arguments in the IkStepDefinition class to ensure robustness by preventing potential ArrayIndexOutOfBoundsException
added a prefix for OSSO header decoding in the FakeOSSOHeaderDecoder class to improve code readability and maintainability by centralizing
deprecate generate - java - sources and - suffix - strategy option, they should not be use.
removed debug log statements for accessing the Apache Derby driver class to streamline logging for better troubleshooting
[ drools - 561 ] increase test timeout in ceptest
use stream ( ) instead of parallelstream ( ) to improve performance
updated the handling of the ROLLBACK operation to check if the liquibase. hub. mode is already set to " LiquibaseHub
added new constants for IBM J9 and Eclipse OpenJ9 VM versions and corresponding test cases to enhance version validation for Java VM compatibility
refactor font logging in FontFamily. java and add DebugFonts. java for testing to improve clarity of font logging and facilitate debugging
added HTTP version checks in NegotiatingServerConnectionFactory to ensure compatibility with HTTP _ 1 _ 1 in negotiated connections
added RateControl configuration to MaxConcurrentStreamsTest. java to disable rate control for improved request handling
added a new file Test6741426. java that implements a Runnable for UI components to demonstrate the use of NimbusLookAndFeel in
updated error message in the CSRF token verification test from " Could not verify the provided CSRF token " to " Could not verify the provided CSRF token
added null checks for ` dbMgdPath ` and ` dbExtPath ` in HMSHandler. java to ensure that managed directories are
move s3 copy object request to correct package
removed accentColor parameter from setup methods in SettingsActivity to simplify method signatures and improve code maintainability
( chore ) camel - test - infra - temporaryfolderusagetest : fix flaky test
removed unnecessary ` from ( Map. class ) ` and ` from ( Collection. class ) ` from ` MappingMongoConverter. java ` to
added check for empty or null address in clientnetworkconfig. addaddress ( ).
added " keynectisrootca [ jdk ] " to VerifyCACerts. java to enhance certificate validation by including root certificate
change compute ( ) to return the size of the output batch.
added a conditional check for popup visibility before setting the menu's mode to prevent menu from being enabled when the popup is not displayed
pdfbox - 4892 : avoid arrayindexoutofboundsexception, a suggest by valerybokov
added a new file ` FinalizerInfoTest. java ` to test the finalization of objects to ensure the correctness of the finalizer information
camel - 19836 : use doonnext instead of map to avoid race condition.
refactor BurningManService to use a custom address for compensation requests to improve clarity and maintainability of address handling logic
refactor StringSubject class to improve code readability and maintainability
updated the byte array size from 1, 000, 000 to 1000, 000 in BatchValidateSignContractTest. java to temporarily disable the test
rename the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity by accurately reflecting the method '
updated query handling in Search. java to replace " from : " with " from : " to ensure accurate query results by removing unwanted characters
added a conditional check for rebalance in the SimulatorDiscoverer class to ensure proper handling of rebalance scenarios
added a post mapping for importing YubiKey accounts in YubiKeyAccountRegistryEndpoint to handle account submission and return a status for
added multiple shader program configurations in ShaderManagerLwjgl and updated material data retrieval in FontMaterialProducer and LglCanvas to enhance shader functionality
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted safe area handling in ` SideMenuBar ` to ensure safe area
refactor AbiWriterProtocol class implementation to improve code readability and maintainability
modified caption assignment logic to handle null subName to ensure proper caption assignment when the subName is null
change data flag from IMMOBILE to GRAVITY in EntityItem. java to ensure proper handling of gravity data
added null check for the simulation object and improved condition checks for custom expressions to enhance robustness and prevent potential NullPointerExceptions
bugfix : don't request blind voters when there be no data request
added a new test case in PostgresTest. java to verify the functionality of the HikariDataSource with a large dataset to ensure reliability of
updated string literals from double quotes to single quotes in SubtitleUtils. java and RemoteUtil. java to improve code readability and maintain consistency with
added a constant for line separators and updated split method calls in DefaultJavaPrettyPrinter. java to improve code readability and maintain consistency in line separator
truffle : use atomicreferencefieldupdater instead of atomicreference.
added null check for excludeSet before adding queries to the qlist to avoid potential NullPointerExceptions when excluding main query
fix ( bridge ) : add child to bridge
replace calls to ` printHelp ( ) ` with ` error ( ` args [ i ] ` ) ` in Ktab. java to improve
[ fix ] issue 825, outputstream. name don't exist on window.
added support for parsing date strings using the'+'and'minus'indices in DateConverter. java to ensure correct parsing of date strings
added JUnit assertions and query annotations to ` PostRepository ` and ` SpringDataJPALockTest ` to improve test reliability by ensuring
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for ` Offline
added a request factory for handling HTTP requests in ClientRegistrations. java to improve connection timeout and allow for more flexible request handling
updated test cases in SourceTest. java to verify the correctness of file path and name to ensure that the Source class correctly references the parent directory
remove usage of system. getproperty ( ` ` graalvm. version'' )
updated access token and refresh token validity settings in ClientAdminBootstrap. java to ensure proper handling of client validity settings
updated the return statement to include a conditional check for Android API version to ensure that the application uses the correct Android API version based on user options
remove unnecessary'this'keyword from indexOf calls in PropertyPlaceholderHelper. java to improve code readability and maintainability
updated formatting in the Owner string in Resources. java file to improve readability and maintain consistency in formatting
solr - 12028 : fix flaky test by wait for collection to be process in parallel
removed BigInteger import and added it to simpleTypes in MongoMappingContext. java to streamline code by eliminating unnecessary BigInteger type addition
added a condition to check if the button text matches the string representation of the toast message to ensure that the toast message is displayed only when the
added a condition to check if Mc0 and Noskip is disabled in MEncoderVideo. java to ensure proper handling of audio
reduce event loop size from 10 to 15 to accommodate larger event loop requirements
modified access modifiers of classes and methods in CountMin4 to protected to enhance encapsulation and improve code maintainability
added file float source retrieval methods in ExternalFileField. java and created a new test class ExternalFileFieldSortTest. java to enhance functionality
update fetcher error message to reflect connection error rather than invalid url
updated event data handling in OpenRocketSaver. java and added source ID handling in DocumentConfig. java and FlightDataBranchHandler.
changed the visibility of the ` check ` method from private to protected final in ` ShapeRenderer. java ` to allow subclasses to access the method
added synchronization handling for file synchronization in FileActivity to improve user experience by providing appropriate feedback when conflicts are detected during file synchronization
replaced direct URI construction with URLEncoder for generating resized images to ensure proper handling of remote images and improve URL encoding
added a null check for the " cn1 $ infinite " client property in InfiniteContainer. java to prevent potential null pointer exceptions when the
updated the calculation of the total value in IntHashSet to improve the accuracy of the hash set representation
added a lock check before updating an entry in FeedRefreshUpdater to ensure that updates are only applied when the feed is locked
refactor conditional checks for user principal creation in SolarisAclFileAttributeView. java to improve code clarity and ensure proper handling of user principals
replaced the list manipulation with an array sorting for edges in LatLonTree. java to improve code readability and maintainability by organizing edges into
added import for IOUtils and ensured proper resource cleanup to improve resource management and prevent potential memory leaks
replace \ \ n with [ \ x0d \ \ x0a ] in bibtex comment strip.
added strict parameter handling in Main. java and corresponding unit tests in MainTest. java to ensure proper parsing of properties based on strict mode configuration
enforcement of non - null constraint on custom bean
camel - 17442 fixed the unit test error of camel - http4
added a call to waitForThingsToLevelOut with a timeout value in TestCloudPivotFacet. java to address potential issues with waiting
simplified the conditional check for writing bytes in UBJsonWriter. java to improve code readability and reduce unnecessary write operations
refactored test cases in ApplicationTest. java to improve test coverage and maintainability
replace string concatenation with StringBuffer for connection details to improve performance and reduce memory overhead
replaced ` Type ` with ` RoboType ` across multiple files to standardize type handling and improve code clarity
[ java ] when aeronarchive. poll ( ) be call after a dispatch complete.
fix ( sql ) : add support for ` ` where'' and ` ` cachelookup'' attribute
added a new file PutfieldError. java that tests for IncompatibleClassChangeError to ensure that the expected error is thrown when encountering IncompatibleClass
don't add private address to public if they don't already exist
add more logging to memtable. getmemtableflushaftermins ( ) and memtable. getmemtableflushaftermins (
use space. single _ space instead of space. build ('', emptyList ( ) )
replaced the existing ` encodedLength ( ) ` method implementation in ` Flyweight. java ` to streamline the code by eliminating redund
updated test cases in TestMethodResultMapBuilder. java to improve test coverage and maintainability
added handling for ` java. lang. NumberFormatException ` and ` java. lang. RuntimeException ` in ` FindNullDeref. java
[ hotfix ] [ task ] remove unnecessary lock from tasklocalstatestoreimpl
updated string return values in Utils. java to return " m " instead of returning " m " to ensure accurate representation of time differences in the
added handling for DeepShortcutView in Utilities. java and FloatingIconView. java to improve functionality for handling different views in the launcher
changed the type of the ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > `
replaced ` buyQuickRate ` and ` sellQuickRate ` methods with ` getBuyQuickRate ` and ` getSellQuickRate ` methods
added a new configuration class ` CoverageConfig ` and modified ` CoverageController ` to use it to improve flexibility and maintainability of the CoverageController
added a check to ensure EventBus is registered before registering it to prevent potential errors when interacting with the event bus
added ASCII - only check for strings in normalization methods to ensure that non - ascii strings are normalized appropriately regardless of input length
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL updates in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL does not fail
camel - 18836 - camel - cometd test should use junit 4
updated HR, HR, and attrs to use AttrKind. OK instead of AttrKind. USE _ CSS to enforce compliance with
added a br tag to the HTML report in HtmlCoreReport. java to improve formatting for better readability
updated the calculation of ` ramBytesUsed ` in ` DocSlice. java ` to handle null scores safely to ensure accurate memory usage estimation
updated CustomTypeAdaptersTest. java to use Gson's InstanceCreator and added StringHolderTypeAdapter for serialization and deserialization to enhance serialization
add extradata from miningparameters to fix npe
added a static final ` numArgs ` map and updated the ` argsToProperties ` method to include a parameter to enhance flexibility in argument handling
updated the PathParamServerEndpointConfig class to improve endpoint configuration handling
chore ( core ) : fix migrationrulelistenertest. testwithinit and - localrulelistener. testwithinit and - local
updated method signatures to use'partOrList'instead of'part'to improve clarity and consistency in parameter naming
tidy up the bootstrap. css / bootstrap - responsive. css and twitterbootstrap. js source to avoid conflict with google's localization
removed the basicCategory method implementation from SpanishTreebankLanguagePack. java to streamline category extraction by eliminating unnecessary complexity
hhh - 147486 : add uniqueentityloader a default load method to abstractentityloader
hbase - 25836 regionserver flush / snapshot manager should use poll ( ) instead of remove ( ) ( addendum )
fix for aioobe when call setwidth or setheight on empty pgraphics.
remove unnecessary call to fillPool ( ) in hikaripool.
replaced calls to ` assureMatchVersion ( ) ` with a default value of ` Version. LATEST ` in various filter factory classes
fix aop proxy generation for abstract method
added a conditional check for the input LA ( 1 ) before matching a new COMMA rule to ensure the match occurs only when the input matches the
updated subject classes for Guava to improve code clarity and maintainability
throw an exception if the payload length be less than zero.
move publishsubscribechannel to'dispatcher'package
updated data types from String to Long across multiple classes to improve data handling by using a more appropriate data type
added bit digest updates for width and height in ImageProcessor. java to ensure accurate digest generation for image data integrity
removed logging of the overlay version in SolrConfig. java and added necessary imports in SolrConfigHandler. java to streamline logging and enhance code
updated delayUntil calculation in FileSyncAdapter. java to ensure synchronization delays exceeding the current time limit
updated variable assignment in SegmentV1V2ToV3FormatConverterTest. java to ensure consistency in file time retrieval
refactor path handling in ` addPathToMTree ` method calls to use a new ` Path ` object to improve code clarity and maintainability by
allow package scan in jar url with ` ` file :''
[ flink - 20836 ] [ table - planner - blink ] fix timestamp field extraction for composite type
added support for ldapuserdetails in spring - security
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code clarity and maintainability
updated minimum SDK version from LOLLIPOP to KITKAT to ensure compatibility with the latest Android SDK features
updated dialog implementation to use a cached file to improve user experience by caching file names
added a new test method ` testNewput ` in ` TxInputUtilTest. java ` and updated assertions in ` StoreAPITest.
removed the entityType parameter from the stream method in MongoTemplate. java to simplify the method signature for better readability and maintainability
updated zoom factor and x - value calculations in MapOverviewImageMouseHandler. java to improve zoom responsiveness and accuracy in the map overview
added similarity handling to KNearestNeighborClassifier and updated related tests to improve classification accuracy and ensure compatibility with different similarity algorithms
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler. java to simplify query creation by using a more general query format
replace ` lowResourceCheck. toString ( ) ` with ` lowResourceCheck. getReason ( ) ` to improve clarity by using the actual reason
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
updated MTU request handling in ShadowBluetoothGattTest and ShadowBluetoothGatt to ensure correct MTU request behavior across different Android versions
replaced the existing read method with a new method ` createServletOutputStream ( ) ` in ` TestPayloadNameRequestWrapper. java ` to improve
added logging for unsatisfied link errors in VoskSTTService to improve error handling and provide visibility into library dependencies
channelprocessingmanager should use concurrenthashmap instead of hashmap.
updated Japanese language resources to include " all " and " grouped " options to enhance localization support for additional language options
updated size check from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and ` JDBCTypeMappingTest `
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene. java to ensure thread safety during player operations
replaced the isScreenReaderActive ( ) method with a new instance of AccessibilityStateTester and added controlCodes and codeMatcher to improve accessibility
fixed issue with side menu bar show up with hidpi screen. http : / / github. com / codenameone / codenameone / issues
removed the Disposable declaration from the subscription in PoloniexManualExample. java and added logging in WampStreamingService. java to
added validation for energy limit type in UpdateSettingForEnergyLimitContractActuator to ensure contract type is valid and improve error handling
updated URL handling in PostmanJsonBuilder to use a more descriptive variable name and added protocol handling in UrlBean to improve code clarity and ensure
camel - 4487 : added namespaceprefixref getter / setter to soapjaxbdataformat.
updated test assertions to use a constant for ONE _ MINUTE _ MILLIS and refactored date parsing logic to improve code readability and maintainability
added support for JettySolrRunner in BasicAuthIntegrationTest and updated security data retrieval in ZkStateReader to ensure proper server restart and validate
add support for market price in the trading chart view
from from - - - - - - - - - - - - - - - - - into - ci - ci - ci
modified the handling of the ` from ` and ` end ` variables in the ` NativeString ` class to improve clarity and correctness of the string
added file data storage management functionality in FileDownloader. java to enhance file handling during file downloads
[ java ] : ensure log file be clean up after use.
added a method to check if a registry is running with a specified timeout in TestLibrary. java and a method to delete a file if it
removed unused import statements and added ` startLoading ( ) ` method in ` Quick3dMain `, ` TextureTest `, and `
removed unused private variables and added multiple @ SuppressWarnings annotations in multiple Java files to improve code clarity and suppress unchecked warnings
added a null check for instances in TraceFeignContext. java to prevent potential NullPointerExceptions during execution
added isolation level handling for transactions in SQLExceptionCode and PhoenixConnection classes to ensure proper isolation settings based on transaction settings
added transaction attribute handling in AbstractStepFactoryBean and enhanced error handling in ItemOrientedStep and SkipLimitStepFactoryBean to improve transaction management and
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient to improve modularity and maintainability of the security interceptor
added functionality to the add category menu in ListFragment and NavigationDrawerFragment to enhance user experience by allowing category addition functionality
renamed method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation. java ` and ` FileDisplayActivity. java ` to
pdfbox - 4892 : remove unneeded cast, a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve font size management and provide a default text size
added validation check for the fact object before modifying the frame to ensure that the fact is valid before modifying it
add copyright notice to javadocs
return a new ArrayList instance instead of null to ensure safe creation of ArrayList instances
updated method calls and lock handling in Liquibase. java to improve code clarity and ensure proper lock management
added a ` setRevision ` method to ` MicroserviceVersions ` and modified ` InstanceCacheChecker ` and ` TestInstanceCacheChecker ` to
refactor foreign key and index handling in TableRetriever. java to improve clarity and maintainability of the code
camel - aws2 - s3 - add support for uri - endpoint - override option in s3 component
updated the ` getBitstampUserTransactions ` method to accept an array of user transactions instead of a single transaction to enhance functionality by allowing users to
added error handling for component retrieval in BlueprintContainerRegistry to ensure robustness by handling potential NoSuchComponentException
change pushbuilder. push ( ) to return a boolean instead of void.
refactor LegacyAddressTest to read data from a file before comparison to improve test reliability by reading input from the file
changed the access modifier of the method findDropTargetAt from package - private to public to allow access to the method from other packages
refactored push notification handling in NotificationsActivity and DrawerActivity to improve code clarity and maintainability by centralizing push notification setup
nettyasynchttpprovider. replayrequest should close the channel if the cause be an ioexception.
updated null checks and logging methods in LdapPasswordPolicyEnforcer. java to use StringUtils methods to improve code readability and ensure proper logging of
updated DefaultAnnotationEngine and Stubber classes to improve code clarity and maintainability
added an @ Ignore annotation to MemoryManagerTest. java to temporarily disable the test due to PHOENIX - 2840
nifi - 5383 : added timezone attribute to aboutdto
don't split local token if we don't split them
remove unnecessary try - catch block. no functional change
fixed synchronization issue in cdp connectioncacheimpl.
replace GdxRuntimeException with IllegalStateException in ShaderProgram. java to improve error handling by providing a more descriptive exception type
flume - 258. refactor eventdrivensourcerunner to eventdrivensourcedsource
don't log error in fastbind ldap authentication handler
refactor ContainerOrderFocusTraversalPolicy implementation to improve focus traversal performance and maintainability
don't throw exception if function can't be create
corrected a typo in the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency in naming conventions
refactor connection handling in SchemaCrawlerMain and Executable classes to improve resource management and logging for database connections
bump default tl version to v1.2 with fallback
rename " values " and " labels " to " metadata " in IllegalStateException messages to improve clarity and consistency in error reporting
modified audio queue position handling in MediaManager. java to ensure proper audio playback when mCurrentAudioQueuePosition is zero
updated debug log statements in HttpConnection. java to include the cancelled connection to improve traceability of connection operations
added support for transient fields in JpaPersistentPropertyImpl to ensure that transient fields are correctly handled during persistence
updated UpgradeResourceProviderTest to verify the correct stack version from " HDP - 2.0. 1 " to ensure the correct stack version is maintained
trufflevm : make eval ( ) return an object instead of symbol
make issbinarytype ( ) public so that it won't throw exception.
updated configuration property from " hive. tez. dynamic. parition. pruning. max. data. size " to " hive.
fix ( jdt ) : remove unused method ` findproblem ( int ) `
remove DictionaryIndexConfig. DEFAULT _ OFFHEAP constant from DictionaryIndexType and BloomFilterHandler classes to simplify the code and improve maintainability
added a system property ` LINE _ SEPARATOR ` in ` TableWriterTest. java ` to ensure consistent line separators across test cases
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added a boolean flag ` ownsTexture ` in ` ParticleEffect. java ` to ensure proper resource management by preventing potential memory leaks
added LDAP configuration properties to HiveConf. java to enhance security by including additional authentication options
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated input method input methods to use SHOW _ FORCED and HIDE _ IMPLICIT _ ONLY instead of HIDE _ IMPLICIT
added tests for converting a map of strings to maps of primitive types in DataTableTypeRegistryTableConverterTest. java to ensure that the converter correctly
testfilesystem : fix flaky test by increase the size
updated error message in ContentTypeManager. java to clarify the nature of exceptions related to file triggering and bug tracking
changed the ` dropSequences ` method to be abstract and implemented it in subclasses to enhance extensibility by allowing subclasses to override the ` drop
added a null check for the status variable in MainWindow. java to prevent potential NullPointerExceptions during execution
updated variable assignment for binaryField. createField call to improve code readability and maintainability
bugfix : don't update tree style for hierarchical icon event
added a test for a non - existing object upsert in MongoTemplateTests to ensure that the upsert functionality returns the correct result for non - existing
hbase - 2857 fix minor off - by - one error
added a method to record app launches and updated broadcasting logic to ensure broadcasting only occurs when the shortcut is not null
replaced direct data manipulation with graphics object creation in JavaSEPort. java to improve performance by avoiding unnecessary data updates
[ 4898 ] instructorfeedbackresultspageuitest : ensure team have no response
don't generate inventory id if it's zero
added a conditional check for ` found ` in ` ConfigDescriptionRegistry. java ` to prevent fall - through behavior when no configuration is found
added returnType parameter to multiple parser visitor classes to enhance the parser's ability to handle null return values effectively
modified the initialization of blended tiles in TileMapRenderer. java to handle null values gracefully to improve robustness by ensuring blended tiles
8151575 : remove ` ` java. util. concurrent. *'' from test class list
added a null check for the last segment in the getArea method and adjusted the sum calculation logic accordingly to ensure proper area calculations and prevent potential
( chore ) camel - throttler : use'this'instead of'null '
pipeeventbus now extend from superclass ( fixes # 588 )
increased timeout duration from 1000ms to TIMEOUT in ZkControllerTest to improve test reliability by allowing more time for ZkController operations
added a test for handling passcode requests with client parameters in TokenMvcMockTests. java to ensure that the correct client parameters are passed in
added constructors for LengthFilter and KeepWordFilter in TestRandomChains. java to ensure proper handling of input parameters in the analyzer
removed unused JUnit Ignore import from RandomPlaneTest. java to clean up the test code and reduce unnecessary dependencies
use integer. tounsignedlong instead of boolean.
updated return statements in btCollisionObjectArray, btRigidBody, and btRigidBody _ upcast to use btCollisionObject. getInstance to
added a method to retrieve the build copyright year and updated the OPENROCKET _ URL in AboutDialog. java to improve copyright information and enhance
added getdistributedobjects ( ) method to jetclientinstanceimpl.
updated inertia calculations and added debug prints in FinSet. java and MassCalculatorTest. java to improve accuracy of inertia calculations and
updated the maximum memory semaphore implementation in SmartDexingStep. java to ensure better resource management by using maximum memory instead of total memory
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher. java to improve error handling clarity and maintain consistency in exception management
remove validation of amount of delayed payout tx output in bsq
updated JsonLoaderTest. java to replace single quotes with double quotes and added ignoreException and unignoreException methods to improve JSON parsing accuracy and
updated the threshold for tableSize in ObjectSet. java from 1 < 30 to 0x40000000 to ensure the integrity of the table size
updated import statements and modified decimal digit setting logic in ColumnSnapshotGenerator. java to improve code clarity and ensure decimal digits are set only when data
removed @ AddToRuleKey annotations from several fields in AppleTest. java to simplify access annotations and improve code clarity
added a SecurityException parameter to the limit methods in FileHelper and TextHelper classes to enhance security by preventing sensitive data exposure
added tests for resolving styles with multiple attributes in ShadowThemeTest to ensure correct functionality of styles with multiple attributes in the application
updated sheet name validation in HSSFWorkbook and modified sheet creation in TestHSSFWorkbook to ensure correct sheet handling and improve test coverage for sheet
replaced ` primaryColor ` with ` elementColor ` in ` ManageAccountsActivity. java ` to ensure the correct background color is utilized for
updated DefaultEventBus to handle null replyHandler and simplified path resolution in DefaultPlatformManager to improve robustness by ensuring a default handler is
added binary collation support to MariaDbmsType, MySqlDbmsType, and FilterSortedSkipOptimizer classes to enhance database compatibility by supporting
added a new method ` whenType ` to return an Optional < T > based on the class type to enhance flexibility in handling different tree types
added a method to retrieve the user view destination and simplified navigation logic to improve code readability and maintainability by consolidating user view logic
replace ok response with a temporary redirect for application settings to enhance user experience by redirecting to the correct public URL
[ flink - 18836 ] [ kinesis ] fail kinesis consumer if deserialization schema be not serializable
( chore ) camel - example - java : add apache license header to javadoc
replaced the sleep duration with a boolean flag and added a try - finally block to ensure proper resource management and prevent potential resource leaks
rename methods from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity by indicating
refactor the fill method in ProxyHandler to use a dedicated read method to improve code readability and maintainability by centralizing buffer reading logic
replaced BufferUtil. allocate with ByteBuffer. allocate in ABCase1 _ 2. java to optimize memory usage and improve code clarity
modified the ` prepareStreamsToUpload ` method to return a boolean instead of an exception to simplify the method signature and improve error handling by indicating
updated comparison methods in AbstractConfigLoader and TestMicroserviceConfigLoader to use Integer. compare for better comparison accuracy
added a new file ` PicOfDayAppWidget. java ` for displaying a picture of a day of an app widget to implement functionality for displaying
bugfix : fix npe in internalloadbalancervmmanagerimpl if default system internal lb offering be null
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil and modified join condition handling to improve compatibility with Hive '
[ flink ] deprecate the old version of transformers in favor of the new one.
added user and password options for remote JMX connector in NodeToolCmd. java to enhance JMX connectivity by providing credentials for remote JMX connections
removed unnecessary BytesRef instantiation from Stemmer. java to streamline code by eliminating redundancy
updated method calls in AppsCustomizePagedView. java to use mPageViewIconCache instead of null to improve compatibility with multiple page
ggb - 2118 : don't show 3d thumbnail if not 3d
updated rotation calculations in GcodeRenderer. java to ensure proper positioning based on rotation direction
added WORKSPACE option to DAEMON command and updated TerminalClient to utilize it to allow users to specify a workspace directory in daemon mode
updated test file name from " options. apt " to " options. html " to ensure the test outputs the correct HTML file
test : migrate scimutilstest to junit 5
refactor ` confimAccess ` method to accept a ` Map < String, Object > ` instead of using ` ModelAndView ` to improve flexibility and
added a call to ` assertTrueEventually ( ) ` in ` HibernateIT. java ` to clear the cache stats after each test to ensure
updated EventBusHook class to improve event handling functionality
updated test cases in MultiPaintEventTest. java to improve test coverage for multi - paint functionality
removed the'final'modifier from the mNewScale variable to simplify the code and improve readability
refactored methods in SyncFactory class to improve code readability and maintainability
added handling for unique key fields in LukeRequestHandler to ensure unique keys are included in the information returned for Luke requests
added roundBorderColor attribute and associated code in Border. java and EditableResources. java to allow customizable border color settings
add compilerasserts. neverpartofcompilation ( ) to binaryparserexception and assertion.
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder
added log statements for pending request logging in GatewayRSocket, GatewaySocketAcceptor, and PingPongApp classes to improve logging clarity and
added a Toolbar. OnMenuItemClickListener to the RecentChatFragment class to enhance user interaction by providing context for the action under construction
changed the ` InfoDropTarget ` class to extend ` UninstallDropTarget ` and modified the ` startDetailsActivityForInfo ` method to
refactor symbol table operations to use ` peek ( ) ` and ` pop ( ) ` instead of ` add ( ) ` and ` removeTail
updated wiki URLs to use " commons. wikimedia. org " instead of " testwiki " to align with the new wik
refactor index management by introducing a new method ` setIndex ` and ` updateIndex ` to improve code readability and maintainability by encapsulating index
replaced usage of ` Collections. sort ` with direct calls to ` AnnotationAwareOrderComparator. INSTANCE ` in multiple classes to simplify code and improve
added DateTimePatterns to FormatData _ hr _ HR. java to enhance date formatting capabilities in the application
clear focus from clickedView in DetailFragment. java to improve user experience by ensuring focus is properly managed
replaced ` notifyDataSetChanged ( ) ` with ` setSelection ( position, true ) ` in ` DescriptionsAdapter. java ` and modified selection behavior
updated time zone entries for West Samoa from " WSST " to " WSDT " across multiple language files
added native methods for global and weak registerings and access field retrieval in FastGetField. java to enhance memory management and improve access field handling
added default value handling for UNION and NULL types in ReflectData. java and corresponding tests in TestReflect. java and ReflectData.
increase timeout for seda blockwhenfull test
added a null check before remapping the r class in ResourceMerger to avoid potential NullPointerExceptions when the r class is not set
added constructors to various dialect classes with DatabaseVersion parameter to ensure proper initialization of dialect instances based on the database version
http producer : ignore online connection close method
increased timeout duration from 60000ms to 120000ms in BasicDistributedZkTest. java to improve stability during distributed operations
added a SQL query to check if the ticket status is'FREE'and final price is greater than zero to ensure that ticket status is
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter class to improve code readability and maintainability
refactor : replace getFirstChild ( ) with getfirstelementchild ( ). getfirstelementchild ( ). getfirstelementchild ( ).
[ optaplanner - 7 ] fix infinite loop in enum lookup
[ java ] wait for node to be shut down before shut down the cluster.
change log level to info when try to purge beans from javax. el. BeanELResolver
added a content type of " application / octet - stream " in WebdavEntry. java to ensure proper handling of application / octet -
added getQueueSize method to LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure correct retrieval of the queue size from the task executor
fix distanceop for geometry that don't use the minimum envelope
renamed the variable'required'to'requiredLabel'in AbstractUITag. java to improve clarity by using a more descriptive variable
updated the ` next ( ) ` method in ` PurgingPartitionIterator ` to call ` updateProgress ( ) ` directly to streamline the
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this method
added abstract methods getHeight ( ) and getWidth ( ) to BaseMonochromeBitmapSource to provide methods for retrieving bitmap dimensions
added validation to ensure localVertices contains at least 6 vertices to prevent IllegalArgumentException when polygons contain fewer than 6 points
replaced ` new ObjectMapper ( ) ` with ` newDefaultInstance ( ) ` in multiple files to ensure default object creation and improve code clarity
add null check for coeffSquarefree array in GeoImplicitCurve. java to avoid potential null pointer exception
drill - 47384 : fix externalnamerecord reading when multibyteflag = = 0
fix typo in jms destination description
added logic to exclude username and password prompts in LoginInfoEndpoint to ensure sensitive data is not present in the login process
updated listener removal logic to use ` removeIf ` to improve efficiency by avoiding redundant removal operations
added a case to handle the'spin'action in the PieChartActivity to enable the functionality to toggle the spinning feature of the chart
xenserver return null value for copy _ vhd _ to _ secondarystorage return null when fail to copy
hbase - 25836 avoid normalizing table if namespace don't have quota
updated import statements and added a resize method for handling pressure data to streamline import statements and enhance functionality for handling pressure data
added a static method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the ` JavaBeanDescriptor ` and ` PropertySupport
added JUnit @ Ignore annotation to ClientMapNearCacheTest. java to temporarily disable the test due to blocking PRs
fix the hopperhock not be able to place item outside the range of the bounding box.
added authentication functionality to the SsoWebViewClient class to enhance user experience by providing required authentication details
updated assertions and introduced new methods for document deletion and deletion in TestStressIndexing2. java to improve test reliability by ensuring
[ flink - 22559 ] [ table - planner - blink ] ignore udtfpertkafkaitcase. test
replace ` dtohs ( ) ` with ` computeIfAbsent ( j, k - > new ArrayList < > ( ) ) ` for type retrieval
added a configuration for JSON deserialization in DefaultEntityMapper to ensure proper handling of single - value values in JSON serialization
updated localization information in VersionChangeLogs. java to include UK and SL to enhance localization support for the application
use string split instead of hardcoded string array
updated visitExpressionInstanceOf method in ASTBuilderVisitor to use RelExpressionContext instead of ExpressionInstanceOfContext to improve clarity and accuracy in expression evaluation
nifi - 710 : added content - type attribute to gethttp processor.
updated provenance handling in BaseHapiFhirDao and ResourceHistoryTable classes to ensure provenance entity is properly converted to provenance
replaced exitButton with doneButton in HelpActivity. java and updated searchable handling in SearchBookContentsActivity. java to improve clarity of button
fix checkstyle issue in natsconfiguration
refactor ` invalidateStalePartition ` method to accept a list of ` partitionNamesWithVersion ` instead of a single ` PartitionNameWithVersion `
make view result tree more resilient for large result set
replace instances of " ic _ group " with " ic _ chat _ bubble " in multiple files to enhance user interface consistency by using a more
changed method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` classes to ensure proper
updated import statements and method names in MocksCreationTest. java to improve code readability and maintain consistency in naming conventions
added a constant for CSVThirdEyeDataSource and modified the return type of generateDetectionConfig method in YamlDetectionConfigTranslator to improve code clarity
updated awaiter timeouts from 10 seconds to 30 seconds to provide more time for phaser synchronization
removed the BuildSlaveFinishedStatusEvent class and its associated functionality to streamline event handling by eliminating unnecessary complexity
fix findbugs encode issue in vmwarestoragemanagerimpl. java
add test to ensure that user can deposit a workspaceitem without workflow
fix concurrentmodificationexception in classloadersupportimpl. getclasspathfiles ( )
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags in TestSpecificCompilerTool to improve code clarity and ensure correct
added logic to delete a table if it is not an external table to ensure that external tables do not delete their internal partitions
hive - 21975 : limit the number of async executor to 10 ( jesus camacho rodriguez, review
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a constant for task role and component name to improve code readability and maintainability by centralizing task execution logic
added a variable ` currentConfInfo ` in ` OperationSetTelephonyConferencingSipImpl. java ` to track the current conference
reload the log tree when a new log entry be add. ( # 548 )
updated return conditions in ChannelEndPoint. java to include input and output shutdown checks to ensure proper handling of input and output shutdown scenarios
refactor SetNullableGenerator class implementation to improve code clarity and maintainability
camel - example - reportincident should use the newfilecomponent, not the file component.
updated import statements and refactored form submission logic in NettyRoutingFilter. java and FormIntegrationTests. java to streamline import statements and
added API operations for " hello " and " helloWithValue " in AbstractBaseService, IBaseService, MyEndpointWithInterface, and MyService
modified lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to ensure proper lifecycle management before invoking ApplicationListener methods
updated the FG _ FK color from 90 to 200 in UIUtil. java to improve visual consistency and usability of the UI components
fix soundmanager. play ( ) not support mp3
inoutoutoutoutoutout
pmd plugin : add ` ` version'' and ` ` eclipse'' preference
[ hotfix ] [ test ] make customserializationitcase more resilient
refactor MediaFormatUtil class for improved readability to enhance maintainability and reduce technical debt
added a method ` isCellEditable ` to the ` GeneralTab ` class that always returns false to ensure that cell - based editing functionality is
refactor ` AbstractUnusedDependenciesFinder ` to conditionally generate command strings based on the ` isOnlyPrintCommands ( ) ` property to enhance command handling
updated the VocalTractModifier class and adjusted the vscales array size in VocalTractScalingProcessor to improve performance by reducing
updated import statements for BaseScalarUdfTest in both BaseScalarUdfTest and TestGenericUDFConcat to ensure correct usage of test
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
* fix testskeletoncontrolrefresh to use the new animation system
rename NodeFilter to NodeCountFilter in NodeUtil. java to improve clarity and consistency in naming
updated size comparison in NodeImpl. java to ensure proper size validation for sync block fetching
updated debug expression parsing logic in DebugExpressionParser. java to improve accuracy and maintainability of the code
updated dependency resolution logic in ExcludeDependency. java to improve dependency resolution accuracy and maintainability
replaced the tmp ( ) method with dst2 ( t v ) and updated the lerp ( T target, float alpha ) method to
initialized the ` args ` variable in the ` GridHubConfiguration ` class to ensure proper initialization of the ` args ` array
replaced ` List < String > ` with ` ImmutableList < String > ` for linker flags in ` RustBinaryDescription ` to improve flexibility by
[ te ] add travis and appveyor test for travis and appveyor test
added configuration for Hive query name and enhanced logging for LLAP splits to improve clarity of query execution and enhance logging for better debugging
removed unused import of ` File ` from ` TileAtlas. java ` to clean up the code and improve readability
gradle daemon executor should show build failure if the build fails.
updated the ` validateQuery ` method to accept ` Object. args ` instead of ` String. format ` to enhance error handling by providing more
updated INDEX _ VERSION from 1 to 2 and refactored getTree method to streamline code and improve readability by reducing redundancy
[ flink - 11361 ] [ flink - 11362 ] [ kryo ] fix the default kryo registration be lose
added null check before removing configuration properties in BlueprintConfigurationProcessor. java to avoid potential NullPointerExceptions during property removal
updated Boolean handling logic in MetaStoreDirectSql. java to improve clarity and error handling for null or string values
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user interface by hiding customization drawer functionality
added a new constant TV _ KEY _ WARNINGS and updated the handling of warnings in the TermVectorComponent class to improve code clarity and ensure
added logging for optimistic types and improved logging levels to enhance readability and provide better insights during the compile job process
refactor methods in Expect class to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enable access to Docker with Unix socketer in the
( chore ) camel - aws2 - * : fix flaky junit test
camel - 1782 : camel - reactive - add exception when a stream don't have active subscription.
refactor task conversion logic in Vectorizer. java to improve code clarity and maintainability by consolidating task validation logic
added a boolean parameter to the super constructor in StringAppender and LogDivertAppender to enhance logging functionality by allowing conditional logging behavior
add null check for guipackageres to avoid npe
improve handling of weak function function in llvm
refactor multiple Java files to improve code organization and maintainability
no effective change - add unit test for defaulttransactionthreadlocal
added validation for operation handles in HiveStatement. java to ensure only valid operation handles are processed to avoid runtime errors
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL to clarify that the
camel - aws - secrets - manager - add support for camel - aws secret manager with minimal configuration
refactor SimpleTree class to improve code readability and maintainability
updated the response formatting in UserREST. java to improve code readability and maintain consistency in formatting
modified the ` fromContent ` method to accept a ` boolean subTree ` parameter to enhance flexibility in handling different tree structures
updated column width calculations in HSSFSheet. java and added unit tests in TestHSSFSheet. java to ensure correct column width calculations and
added a configPath parameter to the Commands. less function call to enhance functionality by providing additional configuration information
replaced ` Set ` with ` Collection ` in method signatures and replaced ` Set ` with ` Collection ` in ` DotWriter ` and ` Graph
updated the Docker image URL from " sshd " to " sshd. container. image " to ensure compatibility with the latest version of the
server : remove an assertion that check if hostid be null
refactor key generation logic in DefaultGroupKeyGenerator to use BlockSingleValIterator for multi - valued columns to improve clarity and maintainability of
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and modified its implementation to improve clarity of exception handling and
fixed crash in bcsilicon recipe that cause recipe to not be add
rename method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn. java ` to improve clarity by indicating that
modified visibility handling in CellLayout and refactored drag exit methods to improve code clarity and maintainability by encapsulating drag logic
modified ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` and ` switchIfEmpty ` for handling requests with an empty body to ensure
added a check for package accessibility in multiple finder classes to ensure compliance with package - private access requirements
changed logging level from warn to trace in LoggingHandler. java to improve logging granularity for better traceability
fix #348 : handle wildcard in whitelist path ( #348 )
added imports and refactored gallery attachment handling in GalleryActivity to improve code clarity and enhance menu options for gallery activities
added null checks for the MongoDBService instance to avoid potential NullPointerExceptions during service construction
added tests to prevent code formatting for boolean values in InlineConstantMutatorTest. java to ensure correct behavior of code formatting when boolean values are
add a blackhole parameter to the decode method in RecordTest. java to enhance testing by incorporating a blackhole for state decoding
fix : update gapic - generator - java with mock service generation fix ( # 9 )
[ kmnx ] fix nullpointerexception when read dpt unit from knx channel ( # 11543 )
added a call to clear witnesses in the dbManager to ensure that witnesses are cleared before further operations
don't throw prestoexception when abort jdbc page
replaced ` getScriptStackString ` method with ` delete ` method and added stack property handling using ` ScriptFunctionImpl ` to improve code clarity and
added a check to return false if the path name starts with ". " to ensure proper handling of paths that start with ". "
changed the variable name from ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAn
added a call to clearIndex ( ) in BasicFunctionalityTest. java to ensure the index is cleared before further operations
updated BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to standardize bold weight values for improved readability
made ` fThreadGroup ` volatile in ` FailOnTimeout ` and made ` fLookForStuckThread ` final in ` Timeout `
reformatted the ` getValue ` and ` setValue ` methods in ` ValueResultData ` to improve code readability and maintain consistency in method naming
updated hashCode and equals method in FuzzyQuery class to ensure proper comparison based on the superclass's hashCode method
removed unnecessary print statements in PushedResourcesTest. java to clean up the test output and reduce unnecessary console output
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to simplify method signatures and improve method usability
updated JDBC driver version from 2.5. 1 to 2.5. 0 to ensure compatibility with the latest database driver releases
updated attribute retrieval and principal creation logic in PersonDirectoryPrincipalResolver. java to ensure that the principal is properly resolved and improve logging clarity
changed logging level from info to warn in OpenWebNetBridgeHandler. java to improve logging clarity and reduce unnecessary information
replaced instances of ` intHash ` and ` longHash ` with ` hash ` and ` hash ` in various hash map classes to improve consistency
added a constructor to ThumbnailGenerationTask to ensure storageManager is not null and prevent potential NullPointerExceptions during thumbnail generation
added a condition to check if ` nrFound ` is less than 5 before continuing to prevent infinite loop when the number of attempts is below 5
add test case for bug 1933922.
corrected formatting in MultipleSeriesProvider. java and Tokenizer. java to improve code readability and maintain consistency across the codebase
updated character range check from 33 to 32 in FileResolver. java to ensure that invalid control characters 0 - 31 are properly handled
added focus request for the component in the display to enhance user experience by ensuring the component receives focus
update instructorhomepageuitest to use new test data
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming for parsing JSON streams
updated Crouton notification to use INTENT _ DETAIL _ RESULT _ MESSAGE and modified MainActivity's onPause method to ensure Crouton
added a test for schema queries and fetch with unrelated templates in IoTDBSchemaTemplateIT. java to ensure that schema queries and fetch
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
replaced Runtime. getRuntime ( ). exec ( ) with ProcessBuilder to modify process creation to remove JAVA _ TOOL _ OPTIONS environment
use 127.0. 0.1 instead of 127.0. 0.1 in test
refactor Metrics class to use a loop for pathing metrics based on the controller and base names to improve code readability and maintainability by consolidating
added assumptions in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed when macOS is available
jvmciversioncheck. java : remove validation from jvmciversioncheck.
updated Mockito library version to ensure compatibility with recent features and bug fixes
updated test cases in TestLargePageUseForAuxMemory. java to improve test reliability and maintainability
updated method calls in BinaryParser, PlainTextParser, and ParsingExecutionContextView to include charset handling to enhance parsing functionality by allowing dynamic character encoding
added support for handling ` MultiPartFormDataCompliance ` in ` HttpConfiguration ` and created a new ` MultiPartFormDataCompliance ` enum
added JDK 17 support to GradleDistributionManager to ensure compatibility with JDK 17 features
added type handling in SnapshotControl by introducing the addType method to improve code clarity and maintainability by centralizing type addition logic
refactor Term class to improve code readability to enhance maintainability and reduce technical debt
modify return statement to handle null or empty runWith to improve robustness by preventing potential null pointer exceptions
resolve http : / / issues. apache. org / jira / browse / amq - 4212
refactor multiple classes to improve code organization to enhance maintainability and readability of the codebase
[ pdf417 ] fix localblockbinarizer crash if the image be too small.
added a temporary value of ` mTintAmount ` before setting dimension alpha and icon color tinting to ensure accurate color tinting for
added a new file ` SumZeroFunctions. java ` to implement sum zero functions in the Gaggr implementation
[ flink - 1752 ] [ table - planner ] fix checkstyle violation in firstvaluefunctionit and nthvaluefunction
hbase - 25836 improve error message when bucketallocator can't be allocate
added a null check for propName before adding properties to the roleObject to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation to several fields in StatusBarTouchController. java and modified method visibility in RecentsView. java to improve test
added methods to log containers using a stream parameter to improve resource management by allowing users to streamline container logging behavior
mv store performance improvement : add test for mvstore.
updated the LONG type from " Long " to " J " to reflect the correct primitive type for improved functionality
changed the return type of delegatingApplicationListener from instance to static to allow the method to be called without an instance of WebSecurityConfiguration
camel - 19836 : camel - rest - dsl : null body should not be null
added FileDeletingTasklet class and its corresponding test class to implement tasklet functionality for batch processing
euclidian view : don't update sizekeepdrawables if view just create
refactor buffer manipulation in multiple classes to improve code clarity and maintainability by reducing redundancy
refactor ` sendEventToTest ` to use ` stateOrdinal ` instead of ` eventTag ` and ` eventTag ` parameters to enhance event handling
added checks for video thumbnail requests in RequestHandler and RequestHandlerV2 to ensure proper handling of thumbnail requests based on user - agent and format
bugfix : don't scroll to the top of the line if the line number be less than zero
added conditional layouts for menu buttons based on the UI manager's theme settings to enhance flexibility in button positioning based on user - defined settings
added " libskia " to the preload configuration in Skia. java to ensure proper loading of the Skia library for proper functionality
networkparameters : return unittests ( ) for unittestnets
added a validation check for format arguments in QueryCommand to ensure that only valid format arguments are accepted to prevent runtime errors
refactor variable names and improve clarity in IntIterator. java to enhance code readability and maintainability by using more descriptive variable names
modified the ` walkRuleAndAdd ` method to include a ` SourcePath ` parameter to enhance dependency resolution based on the project's source path
add support for override module in patchmodulefilemanager ( netbeans - 505 )
[ java ] don't compare protocol version with consensusmodule. protocol _ major.
set a default policy for SAML authentication in OwnCloudClientManagerFactory to ensure proper session management based on authentication type
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure required resources are provided when building batches
use utils. close ( ) instead of try - catch block
refactor anonymous authentication handling in ` AnonymousAuthenticationFilter ` to use a ` Supplier < SecurityContext > ` to improve clarity and maintainability of the authentication
modified the ` removeActor ` method to accept a boolean parameter for unfocusing to enhance functionality by allowing optional unfocusing of actors
replaced hardcoded string concatenation with a variable for cloud configuration validation to improve maintainability and readability of configuration validation logic
added logging capability and improved connection handling in NettyHttpServer and RoutingInBoundHandler to enhance logging capabilities and ensure data is written only when the
updated import statements in multiple Java files to improve code clarity and maintainability
replaced direct update ( ) call with SwingUtilities. invokeLater ( ) in CodeDependenciesPanel. java to ensure UI updates are performed on the Event Dispatch
camel - 5957 : fix the issue that groovy can not be load from the classpath.
pluginmanager. getresolvedartifacts ( ) now return a set instead of a list.
[ hotfix ] make clifrontendparser and programoptions api public
replaced ShadowSharedPreferencesEditor with TestSharedPreferencesEditor and added a new test class for SharedPreferences functionality to improve test coverage and ensure shared preferences
added storageAlias assignment in HttpsMessenger. java to ensure proper certificate chain retrieval from the storage key
simonstewart : add a try - catch block to handle potential classcastexception.
changed access modifier of updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access the updateImage method for
fix drop on serverlevel ( # 4987 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality by providing access to the spatial location calculator configuration
add license header to gsapage package
updated ` TreeTrie ` to use ` _ root ` instead of ` keySet ( ). isEmpty ( ) ` and added a new `
replaced foreground and background method calls with direct parameters in AttributedStringBuilder to simplify method calls and improve code readability
added a conditional check for the " solr. disableFingerprint " system property in PeerSync and PeerSyncTest classes to ensure that fingerprinting
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
replaced ` maybeEmitEvent ` with ` maybeEmitEvent ` in ` MongoTemplate. java ` and added ` setApplicationContext ` method
fix settransactiontest. testmultitransaction ( ) and collectionitem. testmultitransaction ( )
fix for tika - 1471 : close input stream
updated the JSON string format in TestCollectionAPIs. java to use an array instead of an ApiBag. ExceptionWithErrObject to improve
updated configuration loading syntax in OptionsParser. java to improve code clarity and maintainability
[ fix ] instructorfeedbackcopyactiontest : fix typo
[ beam - 8470 ] fix checkstyle issue in java / util / externalworkerservice
removed the ` step ` variable and related methods from ` HmDatapoint ` and ` DisplayTextVirtualDatapoint ` classes to streamline
added logging for acquired shared locks and exclusive lock releases in PostgreSQLReadWriteAdvisoryLocksTest. java to improve traceability and debugging of
remove duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl. java to streamline the job scheduling process
simonstewart : fix a failing testgettextcontent.
modified logger handling to use a ThreadLocal for improved thread safety to enhance performance by avoiding multiple instances of the logger
fix flaky test in functioninitializer
added boxedTypeOrType method in Types. java and modified type checking in Infer. java, and created a new class T6995
updated child task orientation state handling in RecentsView and TaskView classes to ensure proper state management when a task view is focused
hbase - 25801 fix flaky testflushfromclient. testflushfromclient. testflushfromclient. testflush ( )
added logic to delete original repository for contract details in TransactionExecutor to ensure proper tracking of contract details during transaction processing
updated balance balance calculations to include asset issue fee to ensure accurate fee calculations for asset issues
fix for http : / / github. com / codenameone / codenameone / issues / 208
refactor raster creation in blit. java and add a new test class Bug7049339.
added support for unselected styles in the Label class and updated string width calculations accordingly to enhance flexibility in label handling based on the selected style
updated the instantiation of ` DefaultMapping ` and ` ActionList ` in multiple classes to ensure proper initialization and prevent potential null pointer exceptions
removed the'flags'parameter from multiple methods in ShadowApplicationPackageManager to simplify method signatures and improve code readability
updated PingRequestHandler. java file to improve code clarity and maintainability
added MP4 _ ASSET _ WITH _ INCREASING _ TIMESTAMPS _ URI _ STRING in AndroidTestUtil and RemoveAudioTransformationTest
updated firmware check logic in TradfriGatewayHandler. java to ensure proper handling of firmware upgrades to the latest version
refactor AjaxElementLocator to improve code readability to enhance maintainability and reduce technical debt
updated references from InlineLayout to DefaultLayout in BoxLayout. java and DefaultLayout. java to ensure proper layout handling for table - cell display
refactor JsonDecoder to improve handling of JSON parsing levels to enhance clarity and maintainability of the code
blockcache # releaselocation should use removalcause instead of notification. value
added JUnit Ignore annotation to SavepointTestBase. java to temporarily disable tests that are not ready for execution
drools - 5657 : add @ test annotation to droolmvelparsertest.
changed fields in ContextRegisterListener from non - final to final to ensure immutability and prevent unintended modifications
refactor ObjectHashSet to use a configurable iterator and improve iterator initialization to enhance flexibility and maintainability of the code
added batch byte handling logic in SparkReduceRecordHandler, ReduceRecordSource, and VectorizedRowBatch classes to ensure batch processing does not exceed
updated MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE
updated logging messages for better clarity and functionality in JdbcProxyGenerator. java to improve debugging and ensure proper resource management during connection closure
set IMPORTANT _ FOR _ ACCESSIBILITY _ AUTO or IMPORTANT _ FOR _ ACCESSIBILITY _ NO _ HIDE _ DESCE
hbase - 15836 log level for malformed edits should be debug
refactor scope processing in UaaTokenServices and add unit tests in UaaTokenServicesTests to ensure scope length does not exceed 1000 characters to
updated import statements in SchemaRetrievalOptionsBuilderTest. java and modified logger initialization in AvailableJDBCDrivers. java to improve code clarity and
[ kie - api ] add executablecommand interface for execute ( context ) method
camel - 16400 : remove itest dependency from camel - itest - spring
added padding retrieval methods in CellLayout and modified bitmap creation in Launcher to improve layout handling and ensure proper bitmap scaling
modified the filtering logic in LineReaderImpl to handle empty candidate values to ensure candidate values are filtered appropriately based on the input string length
added null check for flow in SamlMetadataUIParserAction and updated import statements to improve code robustness and maintainability by ensuring flow
added a method to check open ports in LdapMockMvcTests. java to ensure process execution respects port requirements
log4j2 - 1349 fix javadoc warning in org. apache. log4j. impl. log4j. executorservice
updated URL handling and logging in Fetcher and HTMLMetaProcessor classes to improve URL validation and enhance logging clarity
updated query string from " * : * " to " name : samsang " and modified assertions to include " hope + loaves "
refactor terminal initialization to conditionally use Karaf Console API to enhance compatibility with old Karaf Console API
bugfix : meshhelper. getverticescolors ( ) now return an empty list if bmesh compatibility be enable.
added EXCLUDE _ TIMESTAMPED _ REPORTS _ DIRECTORIES import and modified copyDirectory method to include this filter to enhance the
refactor test method names and use parameterized tests in DataValidatorTest. java to improve code readability and maintainability by utilizing parameterized tests
pdfbox - 2852 : remove unused method, a suggest by valerybokov
added a null check for bindStatus in FieldUtils. java to improve error handling when form binding fails
removed a print statement from JoglInput. java to streamline output for debugging purposes
added a method to allow extracting private fields and updated the readField method to include this parameter to enhance field extraction functionality by allowing private fields
replace " { name } " with device. getName ( ) in WebDataHandler. java to ensure that the device name is properly formatted for
replaced direct instantiation of the constructor with MethodHandles. lookup for Java 8 compatibility to ensure compatibility with Java 8 and improve method handling
updated weights method references from ` weights ` to ` weightsByDouble ` in ` SortedSetCommandsTest. java ` to ensure compatibility with updated API
updated writeCustomHTML method signatures to include an additional ` Database ` parameter across multiple classes to enhance functionality by integrating Liquibase's
updated key serialization and deserialization logic in BTreeMap. java to improve code clarity and ensure proper handling of null values
updated exception handling in ` CancelDeferredTransactionContractActuator ` and ` UpdateDeferredTransactionContractActuator ` to throw exceptions for insufficient exceptions
bugfix : disable zero file writing in profiler
updated logging behavior and improved license handling in the Main class to enhance error reporting and ensure compliance with Liquibase Pro license requirements
updated byte buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy. java and removed generic byte handling in Horton
added ItemReadListener imports to multiple batch - related Java files to enhance functionality by integrating ItemReadListener for batch processing
refactor code for improved readability and maintainability to enhance code clarity and facilitate future modifications
updated print statements and method parameters in SearchFiles, SortedSetDocValuesFacetCounts, and MessageFilesParser classes to improve code readability and maintain consistency in
updated test cases in Test7005594. java to improve test coverage and maintainability
update error message formatting in ResourcesValidationProcess. java to improve clarity of error messages for entry validation
updated TopKRollupPhaseOneJob. java to improve code clarity and maintainability
cloudstack - 6685 : fixed npe in kvm creation when the vm be not a regular vm
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and added a new ` MCOptionUtils. MCO
replaced ` Arrays. asList (... ) ` with ` Iterable < T > ` in ` IterableSubject. java ` and ` IterableTest.
camel - 9443 : camel - http - add support for http header with thanks to oliver
hhh - 147481 add more oracle test for count ( * ) function
updated BarChartActivityMultiDataset and BarLineChartBase to use a new LargeValueFormatter class to enhance chart functionality by providing customizable value
added support for INNOCUOS _ CHAR and INNOCUOS _ CHAR in commentsParser to improve handling of comments in string
remove @ suppresswarnings ( ` ` argument. type. incompatible'' ) from platform. java
updated the printLir call in TraceLinearScanLifetimeAnalysisPhase. java to ensure consistent output format
updated the TODO Auto - generated method stub in NullAssertionValidator. java to improve code clarity and maintainability
added import for RuleKeyAppendable and appended rule keys in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in the
added system profile directory existence check in PmsConfiguration. java and refactored test setup in DLNAMediaInfoTest. java to ensure
replaced the use of DefaultThreadFactory with a direct call to createThreadFactory ( ) in TestcontainersDockerCmdExecFactory. java to
refactored message retrieval in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to improve code clarity and maintainability by centralizing message handling
added " accept " attribute to " image / * " in ImageFileInputDialog to allow users to accept images directly from the input dialog
updated import statements and refactored transport client initialization in ElasticIndexWriter. java and TestElasticIndexWriter. java to improve code clarity
added detailed information about witnesses in ForkController. java to improve debugging by providing more context about the witnesses data
added a new test class ` NullPointerAndEmptyArrayTest ` to test handling of null pointers and empty arrays
removed the implementation of the ` getDepToGeneratedSourcesMap ` method in ` AbstractIjProjectConfig ` and added a test class ` Test
added a new method ` constructSimpleWildcardPatternWithAnyCharDelimiter ` and updated wildcard handling in ` UaaStringUtils ` to enhance wildcard
added validation for table scan operators in the map work to ensure that only valid aliases are processed to avoid errors during map work validation
updated import statements and modified exception handling in WeatherQueryTest. java to improve code clarity and ensure proper exception handling during testing
added error handling for setting values in TinyGFirmwareSettings. java to improve robustness by logging errors when setting firmware settings
replaced multiple import statements with a wildcard import and modified the getLangs method to return a set of Accept - Language headers to simplify import statements
rearranged import statements in LazyTraceScheduledThreadPoolExecutorTests. java to improve code clarity and maintain consistency in import statements
hbase - 25836 takesnapshothandler should throw hbasesnapshotexception instead of hbasesnapshotexception
[ j2kt ] implement finally via control flow.
added a test for modifying the HTTP _ RPC endpoint in the Docker quickstart test to ensure that the correct handling of HTTP _ RPC endpoints in
added a ` isSuspended ` flag and modified thread state handling in ` mmm Thread. java ` and ` ppp Thread. java `
refactor Javadoc visitor classes to improve handling of DCTree. DCReference to enhance code clarity and maintainability by using more descriptive variable names
( chore ) camel - spring - remoting : fix npe when use a different camel context
removed redundant @ Override annotations from multiple security classes to improve code clarity and maintainability
added module import and updated type handling in Java2TypeScriptAdapter. java ; added static field in EnumTests. java to ensure proper module
use http : / / www. w3. org / 2001 / XMLSchema instead of http : / / www. w3c. org
added content description handling for badge notifications in BubbleTextView to improve user experience by providing appropriate content descriptions based on badge status
added a mouse wheel listener to retrieve wheel rotation in TestMouseWheelScroll. java to ensure proper handling of mouse wheel movement based on the wheel
pdfbox - 4892 : ensure stream be close to avoid memory leak
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
fix ( vacuumframe ) : use string instead of object
replaced hardcoded currency strings with uppercase values for bitfinexSymbol to ensure accurate representation of currency values in the Bitfinex API
replaced ` HashSet ` with ` ImmutableSet ` and updated fields printing logic in ` JsonFormat. java ` and ` BalanceContract. java `
added handling for array and enum types in JacksonXmlFormatMapper to ensure correct serialization behavior for different Java types
updated variable names and added new constants for PARKED and SUSPENDED in VirtualThread. java to improve clarity and accuracy of thread
updated DirectoryTaxonomyWriter and NameIntCacheLRU classes to enhance taxonomy handling and improve cache management
refactor methods in VetoableChangeSupport class to improve code clarity and maintainability
adjust calculation for height by subtracting 1 from owner's height to ensure correct positioning of the content pane based on its height
pdfbox don't throw invalidpasswordexception, a suggest by valerybokov
added unit tests for ` getShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper security
ggb - 2118 fix for exam exam exam and g - > exam
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code clarity and maintainability
updated sleep durations in BackendInitializerHelper and TerminalClient and added new test cases in GcodeParserUtilsTest to improve responsiveness and ensure
updated version comparison logic in SwingStartup. java to improve clarity and correctness of release status checks
added support for generating a comment in the DbMigration class to enhance migration documentation by including the generated file comment
added ` < player | * > ` to the argument syntax in multiple files to enhance permission handling for players in the plot command
deleted ` BadHdfsThreadsFilter. java ` and ` BadZookeeperThreadsFilter. java ` files to remove unused filters that are no
updated method names from ` nameVariableName ` to ` optionName ` in ` OptionProcessor. java ` to improve clarity and consistency in method
added support for parallel processing in TestNGContentHandler to enhance functionality for parallel testing scenarios
don't set enableactingmaster to false if the old address be empty
refactor : remove static import of enums in ctmethodimpl. java ( # 2852 )
added serialVersionUID to multiple exception classes to ensure compatibility during serialization and deserialization processes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated shaBase64 method to accept a separator parameter to ensure consistent hashing behavior across different operating systems
updated system actions enabled check to handle null values to improve robustness by ensuring system actions are validated correctly
added a new Person class in the org. apache. maven. it0074 package to facilitate the representation of a person's
remove redundant call to getlocaladdress ( ) inossiper
modified the indexOf method call to use toUpperCase ( ) instead of indexOfStr directly to improve code readability and maintain consistency in string comparison
add time column and time unit fields to the metadata in SegmentMetadataImpl to ensure consistency and correctness in metadata handling
replaced ` java. awt. Color ` with ` net. sf. openrocket. util. Color ` in ` SimulationPlotPanel
added disconnectEmitters. onNext ( new Object ( ) ) method call in NettyStreamingService. java to ensure that disconnectEmitters
changed the method for retrieving scope hierarchy from ` getAnnotationNamesByStereotype ` to ` getAnnotationTypesByStereotype ` to
danielwagnerhall for click on hidden element on double overflow.
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
hhh - 146183 : fix jtatransactionmanager to use a custom jndi location
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
added a method to check if a function is present in the library to ensure that the function is not present in the library
rename variable ` enabledCiphers ` to ` result ` for clarity to improve code readability and maintainability by using a more descriptive variable
[ beam - 8470 ] change timestamp type to micro for bigquery
replaced IllegalArgumentException with requireNonNull for null values in Identifiers. java and DatabaseConnector. java to improve code robustness by ensuring non -
fix value resolution for input field with default value
added bounds checking for row and column in FlightConfigurablePanel. java to ensure that the application does not throw index out of bounds errors
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel. java to ensure proper scrolling behavior in the motor selection
fixed false positive with unnecessarylocalbeforereturn
refactored the initialization of ` scriptEngineManager ` and removed null check for ` scriptEngine ` to improve code clarity and ensure proper engine
mahout - 4957 : fix computation of correlation in euclidean distance similarity
don't call storageservice. tasks when incrementallybackup be call
added a new method ` relativize ` to ` MorePaths ` for comparing two paths to ensure that extra dot paths are not added to the
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure correct representation of column size and decimal digits
( chore ) camel - dlq : skip current writer head file 1. log. tmp
replace ` ByteArray. toHexString ` with ` ByteArray. toJsonHex ` in ` TronJsonRpcImpl. java ` to improve code clarity by
renamed ` ErrorHandlerController ` and ` Error404Controller ` to ` Error403Controller ` and added ` Error403Controller ` to improve clarity
replaced ` TerminalFactory. resetTerminal ( this ) ` with ` TerminalFactory. resetIf ( this ) ` in ` UnixTerminal. java
Tiny class to enhance functionality to support both source version and target version of collections
fixed - infinite loop in connectionpool # acquireconnection
change method name from ` getDateConverter ` to ` getLdapDateConverter ` in multiple classes to improve clarity and consistency in naming conventions
pdfbox - 4892 : avoid npe if the destination name don't exist
improve error message when javassistutils fail to create class
increased exception handling for writer and reader threads in LargeStreamletTest to improve test reliability by ensuring proper exception handling
added functionality to set extra pages based on user preferences to enhance user experience by allowing more pages to be displayed based on user settings
added support for broken Gaussian rendering in Android versions to enhance image processing reliability and compatibility with different Android versions
add miss @ suppresssubnodes annotation to baseparser to silence some ide warning.
pdfbox - 4071 : fix resource leak
deleted the file TestDocInverterPerFieldErrorInfo. java to the file is no longer needed in the project
added shell command execution for input keyevent 82 in AbstractLauncherUiTest. java and removed an assertion check in LauncherInstrumentation. java to enhance
added JSON file mapping for filename to URL in FileDumper to enhance data processing by generating URLs from the output file
bugfix : ` ` reset result notified'' don't lock
blenderimporter : don't load texture from an image if it's already load
polish ` ` remove application - specific prefix''
updated the seed value in RandomizersTest. java from " 9781797745008 " to " 9781797845005 "
fixed crash when notification sound be not enable.
added a method to report the loop count in the RootNode class to ensure proper handling of loop counts based on the caller's type
added stack version handling for cluster finalization in ` FinalizeUpgradeAction. java ` to ensure proper versioning for clusters in the upgrade process
bugfix : use getregionid ( ) instead of getrangeid ( ) to getregionid ( )
removed redundant method call to streamManager. open in ItemOrientedStep. java to streamManager. open in ItemOrientedStep
added a new file ` CountedLoopProblem. java ` that generates a random number based on a given hash value to facilitate testing
removed the ` metaspaceMethod ` parameter from several ` executeCompiledMethod ` methods across multiple classes to simplify method signatures and improve code clarity
[ gr - 37894 ] jvmcierror : : _ pending _ failed _ speculation should be throw when attempt to get field offset
updated KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing capabilities for better data transformation
[ 3.0 ] fix feedbackconstantsumquestiondetailspageuitest and add more detail to error message
updated the method call from ` applyToActivitiesIfAvailable ` to ` applyToActivitiesIfAvailable ` in ` BaseApplication. java ` to
added thread management and stack dumping functionality in CloseRace. java to ensure graceful termination of child threads during process execution
updated return value to use intValue ( ) method in IntPointField. java and added multiple assertions in TestPointFields. java to ensure correct
updated arcSize calculation to use a calculated value based on width and height to improve accuracy of button arc representation by incorporating width and height
fix for image border cutting w. r. t. a. w. r. t. a. w. t. t.
rename method from ` isMinifySqlEnabled ` to ` isShrinkWhitespacesInSql ` to improve clarity by using a more des
replaced multiple calls to waitForStateTransitionToEnd with a single waitForState method in AbstractLauncherUiTest. java to improve clarity and maintainability
added CasCoreConfiguration, CasCoreTicketIdGeneratorsConfiguration, CasCoreLogoutConfiguration, and CasCoreHttpConfiguration to
replaced direct calls to ` readLong ( ) ` with ` readFully ( buf ) ` in ` Volume. java ` to improve performance by using byte
camel - 15836 : camel - http - should only log http code if debug logging be enable.
) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
automation : add scope element to defaultscriptscopeprovider
added methods to get and set the layer manager in AnimComposer and updated event handling in AnimEvent to improve layer management and ensure
added a check in DeferredHandler to return early if no queue elements are available to improve performance by avoiding unnecessary processing when no queue elements are available
added null checks in MapRecordProcessor and modified exception handling in TezProcessor to improve error handling and ensure proper propagation of exceptions
refactor CylinderRegion to use direct Vector and Vector2D instead of Vector and Vector2D to improve code clarity and maintainability by
replaced the try - catch block with a direct ` expect ` call in ` TestBadUseCases. java ` to simplify exception handling and improve
added null check for subparams in QueryExecutorImpl. java and created a new test for multi - execute in StatementTest. java to ensure
added a conditional check for the customized environment in the SecurityModel class to improve flexibility by allowing the customized security environment configuration
added a new rctag parameter to the API request in ReviewInterface. java to enhance functionality by allowing users to edit their contributions
updated test cases in Test. java to improve test coverage and reliability
updated PBEKeySpec to use keyLength instead of blkSize to improve accuracy of password generation
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader. java ` to ensure that section definitions are properly generated
added a check for GPS location accuracy and speed adjustments in GpsLoggingService. java to improve performance by avoiding unnecessary distance calculations
updated text rendering messages in TableCellLayout, TableLayout, TableLayout2, and TableCellLayout to improve clarity of cell painting and layout
doc ( regen ) : regenerate client with updated copyright year ( # 4382 )
changed ` rootNameFn ` and ` sourceFilterFn ` from boolean to ` Reference < Object > ` and ` SourceFilterFn ` to
replaced binary search with direct addition of info in AllAppsList. java to simplify code and improve performance by eliminating unnecessary binary search
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to streamline the
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests. java to clarify the purpose of the
added a semicolon to the assertRootArcs ( ) method in FST. java to ensure proper functionality of the assertion for root arc assertions
added an assertion to check if the security policy exists and is a file to ensure that the security policy is validated against the expected file
camel - 15836 - olingo2 now inherit from the superclass.
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest. java to allow more time for the recovery process to complete
removed the exception parameter from the log statement in MongoPersistentEntityIndexResolver. java to simplify logging by eliminating unnecessary information
added functionality to send images via HTTP using XMPP in the XMPPClient class to enable users to send images using HTTP using the XMPP client
camel - 7999 : fixed the npe in camel - netty. thanks to benjamin for reporting.
[ calcite - 2852 ] fix url pattern for valid and invalid hostnames ( # 2853 )
remove the system property ` org. apache. jasper. compiler. disablejsr199 ` from ` FragmentActivator. java ` to clean up
added null string handling in CSVRecordReader and related classes to ensure proper formatting of null values in CSV processing
added @ LiquibaseService ( skip = true ) annotation to multiple connection classes to skip specific implementations of the LiquibaseService
updated method signatures to use JavaSourceFile instead of J. CompilationUnit to ensure compatibility with Java source files in the import statements
make event. topics a private field and update the logic to compare event topics to improve clarity and maintainability of the event topic handling
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration. java ` to correctly handle bean
updated case handling for " zkCredientialsProvider " in SolrXmlConfig. java and added multiple assertions in TestSolrXml. java
fixed mana tablet not show the durability bar for creative
added a line to set the identifier collection in the P25P2DecoderState class to ensure that the current call event has the correct identifier
removed import of DictionaryCompoundWordTokenFilter from TestRandomChains. java to streamline dependencies and improve code clarity
updated the method name from " ScryptUtil : deriveKeyWithScrypt -% d " to " ScryptUtil : deriveKeyWith
updated method signatures in GeneratedCode. java to improve code clarity and maintainability
fix a typo in the assertion message for the definition to ensure that the definition is not null to avoid potential null pointer exceptions
hide the share with me icon in LocalFileListAdapter to improve user interface by hiding the share with me icon
update the crossorigin attribute from HTTP to HTTPS in multiple filter classes to enhance security by using secure resources
updated import statements and method signatures in RouterFilter, RouterServerListFilter, RouterDistributorTest to enhance code clarity and ensure headers are
improve assertion message in TestIndexWriterMergePolicy. java to enhance readability of failure messages for better debugging
deprecate multilayerperceptron interface ( graal )
added null check for ` contextAware ` in ` CrawlerSessionManagerValve ` and created unit tests for context awareness to ensure proper context
added a security check for the JspApplicationContext in the presence of a security manager to ensure proper handling of JspApplicationContextImpl based on security settings
refactor RocketComponentConfig to adjust length based on minimum and maximum values to improve accuracy of length calculations for set components
added Scopes. SINGLETON to the NonceService binding in OpenIDAuthenticationProviderModule to ensure proper scoping for the Nonce
feat : feat : feat : feat : feat : feat : feat : feat : feat : feat : feat : feat : feat : feat :
removed the ` HttpMethod ` import from ` doExecute ` method in ` SpringCloudPlugin. java ` to simplify the method signature and improve code
increase publishWithDelay duration from 100ms to 500ms in RetrievalBlockingMessageStoreTests to improve test reliability by allowing more time for
add functionality to override shift codes always in the AnyKeyboard class to enhance user experience by allowing more flexible handling of shift codes
curatorframework : fix zkleaderelectionmanager. isleader ( ) to check if the leader be currently the cluster coordinator.
removed unnecessary whitespace in NearbyActivity. java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer to check if identity is a reference instead of a service name to ensure that the identity reference is
replaced ` AbstractCommandOptions options ` with a ` boolean noop ` parameter in ` ArtifactCacheFactory ` and ` InstanceArtifactCacheFactory ` to
added a delay of 3000 milliseconds before catching IOException in TestListenTCPRecord. java to ensure proper handling of IO exceptions during network operations
fixed issue where extension method don't use the original argument.
replaced ` Map < String, RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for library management to improve performance
added support for " apply - sequence " and " ignore - send - failures " attributes in the DefaultRouterParser and AbstractChannelNameResolving
added x509 publish URL handling in ClientKeyPublisher and JwkViewResolver classes to enable support for x509 certificate publishing in the application
updated the handling of a single reader in QueryComponent to ensure that the subReader is set correctly when there is only one reader available
replaced ` MaxFloatFunction ` with ` Double2Parser ` in ` ValueSourceParser. java ` to improve handling of maximum and minimum values
removed unnecessary null return statements in the Container class to simplify the code and improve readability
removed unused variables from Highlighter and TokenSources classes to improve code clarity and maintainability
updated user table to use UUID instead of username to ensure uniqueness of user data and improve data integrity
added @ Qualifier annotation to flowBuilderServices in CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to ensure
updated SQL commands and refactored connection management in WriteJdbcPTest. java to improve code clarity and ensure proper database interactions
remove null check for laf and set default laf directly in DefaultPlatform. java to simplify code and avoid potential null pointer exceptions
replaced calls to ` getDesiredStateEntity ( ). getDesiredState ( ) ` and ` getDesiredStateEntity ( ). getDesired
simplified margin calculations in FloatingTaskView. java to improve code readability and maintainability by reducing conditional logic
updated status line handling in NavigationShareTab to use user - friendly messages instead of null values to improve user experience by providing clearer feedback on tab
removed the ` threadId ` parameter from the ` instrFilter ` method to simplify the method signature for better readability and maintainability
ggb - 2118 fix : use def toolbar for probability, not the default
added NetworkAddressChangeListener to HomeKitImpl and improved logging messages to enhance network handling and provide more detailed logging information
updated lease handling in TestHDFSEventSinkOnMiniCluster. java to ensure proper retrieval of lease data based on the cluster's name
updated the ` prefixHeader ` and ` linkStyle ` attributes from ` Optional. absent ( ) ` to ` Optional. absent ( ) `
added null check for the message in ExceptionHandlerRegistryFactory to avoid potential NullPointerExceptions when handling null messages
changed the ` nextID ` variable to be volatile and modified the ` getSize ` method to return ` nextID ` instead of ` this.
resolve intermittent failure in vmtransportnetworkbrokertest
added ` HasSourcePath ` interface and implemented ` getPath ( ) ` method in ` AbstractThinArchiveArg `, ` FileListable
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify error handling and improve code readability
added index field name configuration to the OrdinalMappingAtomicReader and updated test cases accordingly to ensure unique facet fields and validate functionality through testing
modified the ` toEpochMilli ` method to handle negative seconds and nanoseconds correctly to ensure accurate conversion of epoch milliseconds to avoid errors
updated attribute retrieval from ` getBufferType ( ) ` to ` name ( ) ` in ` OGLESShaderRenderer. java `
bugfix : allow copypaste to block update script
added a new file ` TestCMoveLimitType. java ` for buffer manipulation in a loop to facilitate performance optimizations when dealing with
reset temporal attributes in ChannelState and refactored audio packet processing in AudioPacketWaveRecorder and OverflowableTransferableTransferable classes to improve
camel - 16400 : fixed arrayindexoutofboundsexception in sql - stored component
update vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer. java to reflect the current
refactor console initialization to use a custom method for VersionCommand to improve code readability and maintainability by encapsulating version printing logic
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to improve token validation to enhance security by using a stronger hashing algorithm
improve handling of eof exception in http 1.1 input buffer.
add unit test for group member deletion.
remove unnecessary object [ ] { } placeholder in camel - ftp
deleted the V2ReplicationProtocol. java file to the class is no longer needed in the project
updated references from ` ImmutableSortedSet < BuildRule > ` to ` ImmutableSortedSet < SourcePath > ` across multiple classes to improve type safety and clarity in
added new classes ` ConstructorArgsDemo `, ` StupidFinal `, and ` StrictDemo ` to demonstrate the use of constructor parameters and
make directtemplatefeaturecollectionfactory thread - safe
updated assertion to check if responseCount is less than 2 * DatabaseDescriptor. getReplicationFactor ( ) to ensure that the response count does not
added a null check for the index number in the ItemRowAdapter to avoid potential NullPointerExceptions when accessing the index number
renamed parameters from " areAnchestorsShown " to " areAncestorsShown " across multiple classes to improve clarity and consistency in parameter
add a check to return early if the application's width is less than 12 to avoid unnecessary processing when the application's width exceeds 12
updated equality check in ChangeLogParameters to use `. equals ( ) ` instead of ` = = ` to improve performance by using `.
changed the loggers variable from static to final to ensure the loggers map remains immutable and immutability of the loggers map
modify return statement to use getBasePlot method to ensure the correct plot is returned based on the specified criteria
restserverendpoint : don't warn if upload directory don't exist
added a boolean parameter ` sendStatus200 ` to the ` ServerGenerator `, ` HttpTransportOverFCGI `, and ` ServerFC
added a check for the length of the comment string in the multi - line comment condition to ensure that multi - line comments do not contain empty
added file type management for BuckFileType in the BuckModule class to ensure proper file type handling and prevent conflicts
replaced multiple specific function imports with a wildcard import in ComposedUtil. java to simplify import statements and improve code readability
8173178 : java / util / tm / rTMgenericcommandlineoptiontest fails on unsupported cpu
reformatted code for consistency and clarity in AccountsActivityTest. java to improve code readability and maintainability
refactored methods in Player class to improve code readability and maintainability
added a mockito package import method for ChannelTypeUID in AbstractModbusOSGiTest. java to facilitate mocking of ChannelType
fix arrayindexoutofboundsexception in polyglotexceptionimpl.
added context management for FontsContract in ShadowFontsContract to ensure proper context management during testing
added a ` toMillis ` method to ` TimeGranularity ` class and updated date handling in ` PinotDataSourceMaxTime ` to improve time
fix break / continue for finally flow
updated assertions in Assert. java and ArrayEqualityAssertTest. java to improve error messages for array comparisons to enhance clarity of error messages and ensure
add default case for windowclicklogic to make it easy to override behavior.
corrected the syntax for index calculation in MeshBuilder. java to improve code clarity and correctness
nifi - 5693 : remove unused controllerserviceprovider field from flowcontroller
added support for processing Java compiler plugins in KotlincToJarStepFactory to enhance functionality by integrating additional Java compiler options
updated scroll delay and page snapping logic in DragController, PagedView, and Workspace classes to improve responsiveness and performance of page navigation
refresh shortcut map on permission change
added case handling for history search commands in ConsoleReader to enhance functionality for history navigation
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robust handling of null core names and
added marker selection functionality in NearbyMapFragment to ensure proper bottom sheet behavior when a marker is selected
added error handling to catch and print stack trace to improve debugging and error reporting
refactor Docker test execution to use OutputAnalyzer for memory checks to improve error handling during Docker test execution
filter the feeds collection based on application settings to improve feed retrieval efficiency based on application health settings
add warn if ` defaultdrmsessionmanager ` be accessed on wrong thread.
updated AndroidBinaryDescription to convert packageType and resourceCompressionMode to uppercase and added a method to set packageType in AndroidBinaryBuilder to ensure
replace ` ` text / xml'' with ` ` application / xml''
updated references to ` configFile ` to use ` INSTANCE. confFile ` instead of ` INSTANCE. confFile ` to ensure consistency in accessing configuration
updated the method call from " sleep 5 ; exit 1 " to " exit 1 " in HostPortWaitStrategyTest. java to improve clarity
updated imports and condition checks in HiveExpandDistinctAggregatesRule. java to use LongMath instead of intMath to improve performance and accuracy in
added multiple instances of ` HeadlessException ( ) ` in ` mmm Toolkit. java ` and ` ppp Toolkit. java ` to
fix a crash in exoflamefurnacehandler. smelt
planner : add ` ` move thread count'' to solve problem
fix ( search ) : search with rev - include don't select wrong resource with same spname
added a new test file for Issue582Test. java to validate the functionality of the MapDB implementation
[ native ] add e2e test for decimal overflow
refactor LoadingCache class implementation to improve performance and maintainability of caching logic
bugfix : avoidnonconstructormethodswithclassname rule no longer need
simonstewart : catch ` ` staleelementreferenceexception'' in expectedconditions
refactor view existence checks in ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator classes to improve error handling and ensure resources are closed correctly
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future development
added translation calculations in TaskViewUtils and introduced a logMatrix method in Utilities to improve animation responsiveness and facilitate logging of matrix values
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags and Rotation
added a walk method to TempFSTTermsReader for processing FST segments to enhance the functionality of FST processing by ensuring only relevant
added SolrQueryRequest parameter to multiple DocTransformerFactory methods to enhance functionality by integrating Solr's request handling
added triggers for post content and announcement in the SingleTableMySQLTriggerTest class to enhance database interaction and ensure proper handling of null values
refactor comparator handling in FieldValueHitQueue and TopFieldCollector classes to improve code clarity and maintainability by consolidating comparator assignment logic
updated query prefix strings in PhoenixQueryBuilderTest. java to use double quotes for column names to ensure consistency and correctness in query formatting
added a call to ` Spark. awaitInitialization ( ) ` in the ` init ` method of ` RequesterTest ` to ensure proper initialization
added constants and methods to manage total storage pool, pool, and storage usage in DynamicPropertiesStore. java to enhance data integrity by ensuring
added support for generating URLs from the ` src ` directory in the ` AssetsController ` class to ensure proper handling of resources in development environments
bugfix : map mark manager should check for map mark key rather than position
added a ` TokenRewriteStream ` parameter to several methods in ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` to enable token
removed ` throws IOException ` from method signatures in ` JavaCompiler `, ` JavacProcessingEnvironment `, and ` FatalError ` classes to simplify
updated variable names and log messages to use fullPath instead of fileName to improve clarity and accuracy of file loading error messages
added a check for the AppVersion property in IOSImplementation. java and updated format comparison in createImageFile method to ensure proper handling of app version
updated method call from ` getBridgeUID ( ). getId ( ) ` to ` getUID ( ) ` in ` SomfyTah
disable flaky test on github ci
( chore ) camel - test - infra - openwire : remove unused import
updated logging and metric handling in DynatraceExporterV2. java to ensure that NaN values are not returned as a deliberate value
added a call to remove a session from the session info to ensure proper cleanup of session data
added hostname check for alerts in HeartBeatHandler. java and updated log messages in AlertReceivedListener. java to ensure hostname is set
modified the flushing logic in ChannelEndPoint. java to simplify the return statement to enhance readability and maintainability of the flushing logic
[ kie - api ] move kmodule. xsd under org / kie / api / instead of org / kie / kmodule
added support for seeking in ShadowMediaPlayer and implemented seekTo method in ShadowMediaPlayerTest to enhance playback behavior and ensure correct seeking behavior in
rename ` createTask ` to ` createThrowingTask ` across executor classes to improve clarity and consistency in task creation
added border for the close button in the CloseButtonTabbedPane for AQUA _ LAF to improve the visual appearance of the close button in
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
drools - 5957 : add permission to xstream. ( drools - 595 )
updated diamond application logic in ` mmm Attr. java ` and added a new ` DiamondRaw. java ` file to ensure
[ hotfix ] [ table - planner - blink ] fix format violation in reloptutil
updated condition checks for setting ID and value to use'&&'instead of'| |'and'|'to ensure proper bitwise operations
deleted file to remove obsolete test cases
[ hotfix ] [ test ] remove useless test in sessionspooltest
added start and end points for the " FeatureCollection " object in the GeoJsonWMSBuilder class to ensure proper serialization of the FeatureCollection
modified the method to set the selected index of myTable to ensure the correct index is selected based on the selected index value
added checks for manual unstashing in TaskbarStashController to ensure proper handling of unstashing behavior based on user preferences
camel - 6750 : camel - jbang - dump route to xml if customid property be not present.
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for wait time to improve flexibility in event mismatch detection based on the expected number
added a new file HeaderFixer. java to handle licence header files to facilitate the processing of licence - related headers in
added functionality to send broadcasts for the first loading completion action to enhance user experience by ensuring the correct broadcast is sent when the first loading
deleted the Android file ` SuperJumperAndroid. java ` to remove unused or redundant code
updated return value from true to isDistributed ( ) in SystemTableScan. java and refactored test statements in TestStarQueries. java
added interface methods for KeyValuesProvider and ObservationConvention in the Observation class to enhance functionality by allowing configuration of key - value pairs
don't remove the miss map from the registry when a miss mapping be present.
updated return statements in AtomicIntegerArray, AtomicLongArray, and AtomicReferenceArray to use'( long ) i * scale'to ensure proper conversion of
added caching for data format strings in HSSFCellStyle. java to optimize data format retrieval by caching formatted strings only once
updated the filter parameter in the getForObject method call in RemoteAuthenticationEndpointTests. java to ensure that the retrieval of users based on their username
update condition from needsInput ( ) to finished ( ) in DeflateCompressor. java to ensure proper handling of finished compression scenarios
update launcher _ allAPPS _ exit logging to include container info and page index to improve logging accuracy for launcher exit scenarios
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
delete deadlocktest. java
bugcontentprovider : don't silently ignore marker that don't exist
added functionality to open the " Reopen in Browser " menu item and implemented server opening logic to enhance user experience by allowing quick access to the
added OUTPUT _ SPECIFIED _ MULTIPLE _ TIMES error messages and refactored output handling in SemanticAnalyzer to improve error handling and ensure
added null argument assertions to the addEntryListener method in BasicTest. java to ensure that the addEntryListener method correctly handles null values and
fix ( geometry ) : do not reverse coordinate [ 0, 1 ]
remove unnecessary whitespace in ToolbarPanel. java to improve code readability and maintain consistency
added a variable ` first ` to the ` TestPayloads ` class to ensure that the variable is correctly initialized before usage
replace mWorkspace. enterOverviewMode ( ) with showOverviewMode ( true ) to simplify the overview mode display logic
added destination setting to msgDispatch in NetworkRouteTest. java to ensure correct destination is set for message dispatching
change return value from Integer. MIN _ VALUE to Integer. MAX _ VALUE in MessageHandlerInterceptorDefinition. java to ensure proper handling of message
fix some compiler warning in amd64floatconvertnode.
replaced calls to ` pending. addComponent ( pendingChunks ). writerIndex ( ) ` with ` pending. addComponent ( true, pendingChunks ).
updated artifact replacement logic in GetMavenDependenciesTask. java to ensure correct artifact identification based on the new schema
pdfbox - 2576 : use getcosdictionary instead of getdictionaryobject, a suggest by valerybokov
removed debug print statement from ReferenceUtil. java to clean up the code and improve readability
add support for visibility predicate in field visibility schema transformation.
added constants and constants for solidity JSON - RPC HTTP port and enablement to enhance flexibility and maintainability of the code
added a type check for ` folder ` before removing it as a ` DropTarget ` to ensure proper handling of ` DropTarget ` instances in
refactor StubJarTest to use a separate method for creating stub JARs to improve code readability and maintainability by reducing duplication
added two new feature files, " Setup wizard ", " Probe Module ", " Workflow helper ", and " Workflow " to enhance
move meteredflusher to storageservice. optionaltasks. schedulewithfixeddelay ( new meteredflusher ( ) )
simplified boolean retrieval logic in OnlineTestCase. java to improve code readability and maintainability
changed ReturnAttributes from NONE. value ( ) to ALL _ USER. value ( ) in LdapUserGraphicalAuthenticationRepository. java to ensure
refactor ` onIdleTimeout ` and ` onIdleTimeout ` handling in ` HttpChannelState. java ` to improve error handling and streamline
changed CreateEndPoint from implementing Runnable, Invocable, and Closeable to extending Invocable. NonBlocking to ensure that the CreateEndPoint class
refactor TABLE _ HEADER _ SEPARATOR regex pattern and update its usage in TableBlockParser. java to improve pattern matching accuracy and enhance test coverage for
change the return value from 32.0 f to 31.0 f in Camera. java to improve the accuracy of camera data representation
added a preference for " startonbootSetup " and disabled it in GpsSettingsActivity to ensure GPS settings are only enabled when in a
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService. java to enhance security by using a more secure secret
updated the error message for null parameters in MySQL and PostgreSQL stored procedure tests to provide clearer guidance on enabling passing nulls for null parameters
ignore flaky scheduledmethodmetricstest due to race condition
refactor getInputPinotFS and getOutputPinotFS methods to include exception handling and plugin initialization to improve robustness by ensuring input and output
added locale checks for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent across different locales
added import for MetalLookAndFeel and set it to the default look and feel in the UI
refactor ping task management in Bot. java to use a PreDestroy annotation to improve resource management and ensure thread safety during ping operations
removed the throwable message from the error method call to simplify error handling by eliminating unnecessary message retrieval
refactor method names and variable names in ModuleTable, PackageTable, and ModulesVMHelper classes to improve code clarity and maintain consistency in naming conventions
added handling for CmdLineException in PinotAdministrator. java to improve error logging for better debugging
replaced ` super. equals ( o ) ` with ` isEqualTo ( o ) ` and marked the ` hashCode ( ) ` method as deprecated to
updated method signatures and improved clarity in the CustomPlaybackOverlayFragment and ImageButton classes to enhance code readability and maintain consistency in method usage
update zoom level settings for map entries in BasicMapViewer. java to ensure consistent map zoom behavior
refactor admin user validation logic to use processUser and processUserGroups instead of adminUsers and adminUserGroups to improve clarity and maintainability by
replaced ` AccessController. checkPermission ( perm ) ` with ` sm. checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` Windows
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated related classes to enhance argument extraction functionality in the authentication process
changed the defaultGroup variable from private to private final in NacosServerRegisterRepository. java to enforce immutability of the defaultGroup
TileSizeChanger now use createTileCaches ( ) instead of destroy ( ).
removed redundant calls to ` addInfoRow ` and ` removeAllViews ` in ` CustomPlaybackOverlayFragment ` and ` InfoLayoutHelper ` to
refactor methods for cleaning feeds without subscriptions in DatabaseCleaningService to improve code readability and maintainability by reducing redundancy
replaced CoreAuthenticationTestUtils. getAuthentication ( ) with auth in ImmutableAssertionTests. java to improve authentication handling by utilizing the authentication object
nifi - 5693 : use a temporaryfolder in filebasedclusternodefirewalltest
fix for conic five point computation ( relate to http : / / github. com / jme3 / jme3 / issues
reformatted spacing in RandomAccessReader. java for consistency to improve code readability and maintain coding standards
added @ SuppressWarnings ( { " unchecked ", " vararg " } ) annotations in Fields. java and MockitoBeforeTestNGMethod. java
added utility methods for creating images from arrays and lists in CImage. java to enhance image handling capabilities and improve code clarity
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder. java ` to ensure compatibility with HBase's
rename ` runtimeVisibleMethodOfFieldAnnotations ` and ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` to
use objects. equals ( ) instead of null. equals ( )
refactor method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple classes to improve clarity and accuracy in
added verification for different HTML location configurations in NinjaDefaultTest to ensure that the application correctly handles and reports different HTML locations
renamed ` allAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile ` and ` InvariantDevice
updated timestampsViewPaddingBottom calculation and adjusted list position offsets in DetailFragment and ListFragment to improve layout responsiveness and ensure proper vertical margin for
updated exception handling in ZkStateReader to include InterruptedException to improve error reporting for thread interruption during property updates
added null checks for request fields in HttpFields. java and implemented a test for empty headers in RequestTest. java to ensure proper handling of
don't allow static nat rule for a network with non - supported nat service
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment. java to ensure header scrolling state is
added a call to removeExtraEmptyScreen to improve user experience by removing extra empty screen content
added a fixedWidth property and modified xAdvances calculation based on the glyph's width to ensure that the xAdvances are
removed the ` showTitle ` parameter from the ` createFragment ` method in ` ChangeLogFragment ` to simplify the fragment creation process and improve
added preEvent, preTransition, and postTransition methods to AbstractStateMachineFactory to enhance state machine functionality by integrating state machine interceptor
refactor ConfigDescriptionProvider class to improve code readability and maintainability
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf handling in StorageBasedMetastoreTestBase and TestStorageBasedMetastoreAuthorization
solr - 10865 : fix infinite loop when facet. sort ='count'facet.
updated property handling in CheckstyleReport. java to ensure correct cache file retrieval based on configuration settings
refactor DeleteInactiveReplicaTest to properly handle inactive replicas to improve error reporting and ensure correct jetty is stopped based on the replica's properties
added a file name parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to provide users with information about the file
added a new constant INVALID _ DIRECTION and updated conditions for reordering direction handling in CellLayout. java to ensure proper handling of reordering
api : move innertransferrequest to v1 / accounts instead of / pay / rec / accountid
added method ` getExecutionIdForJobId ` to ` JobExecutionService ` to retrieve the job execution ID for a given job
added a new annotation interface ` EnableAdminClient ` in the ` admin ` client package to provide an annotation for enabling admin client functionality
replaced specific imports with a wildcard import and added multiple visitIdentifier methods to streamline import statements and enhance identifier visitation functionality
updated action text color in AuthenticatorActivity to enhance user interface clarity by using the primary dark color
added ComparableField support to various components of the Manager and StreamSupplierComponent classes to enhance key constraint handling and improve error messaging for foreign key constraints
renamed test step creation methods for clarity to improve code readability and maintainability
corrected a typo in the method name from " noArgMethodIsNotValid " to " validNoArgMethod " to improve code readability and maintain
added a method to cancel clients in the RpcServer class and modified the startDriver method to call this method to ensure proper client termination before the
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo ` and ` ReflectionParamInfo ` classes to ensure proper handling
initialize lastDisplayedUser with Optional. empty ( ) to ensure lastDisplayedUser is initialized before use
updated the ` createQueryFor ` method to accept a ` Predicate ` parameter and added a new test for order specifications to enhance query functionality and ensure
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl instances to avoid potential NullPointerExceptions during shutdown
added a break statement in DefaultPlannerBenchmark. java to exit the warm - up loop in case of a failure to improve test reliability by
add xread ( ) and xreadgroup ( ) method to redis pipeline
updated method calls in LinkedBufferInput and StreamInput classes to improve code clarity and maintain consistency in byte counting logic
added a WebSecurityCustomizer bean to CasWebAppSecuritySecurityConfiguration and updated related methods in CasWebSecurityConfigurerAdapter to enhance security configuration
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` that extends ` TestJdbcWithDBTokenStore ` to ensure
added a method to register a ContentProvider in ShadowContentResolver and refactored ProviderInfo handling in ContentProviderController to enhance provider registration functionality
updated references from ` Version ` to ` ClassFile. Version ` in the AttributeReader constructor to ensure consistency with the class file's version
fixed - single connection manager don't respect keep - alive setting.
[ java ] use a supplier for flow control when multicast flow control be available.
gbasicstrokstroked don't crash when point be nan
added imports for ConcurrentHashMap and ConcurrentMap, modified error handling in HttpServerTestBase, and improved flushing in WebSocketGeneratorD13 to enhance
added support for FirefoxDriver and OperaDriver in HttpWebClient to enhance flexibility for Selenium WebDriver interactions
replaced JUnit assertions with AssertJ assertions in multiple test files to enhance readability and maintainability of the test code
remove deprecate context reference from trufflelanguage.
fix stubberimpl. reset ( throwable throwable ) to handle uninstantiated exception
modified validation in Actor and Group classes to throw IllegalArgumentException for non - ascendant and non - descendant actors to improve error handling and provide clearer
added location permission handling in LocationPickerActivity to improve user experience by allowing location access permissions
added example to show counter mdb connection.
added cookie specification setting in GetHTTP. java to ensure compliance with HTTP client cookie requirements
simplify the intersection logic in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule. java to improve audio processing accuracy by using non - cli
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance the user experience by allowing access to monitoring
[ hotfix ] [ config ] remove unused kubernetes. service. create - timeout config option
updated icon resource assignment based on place description to improve clarity and maintainability of the code by using a switch statement
add null check for package type in DefaultPackageScanClassResolver to avoid potential NullPointerExceptions during class resolution
added a new file PrintInlining. java with a main method that prints " Passed " to demonstrate the functionality of inlining
fix : nest bracket in javadoc tag ( # 2451 )
[ java ] remove unused variable in archivetest.
updated EdgeDataTable to use both edges and metadata edges to enhance data model functionality by associating edges with their metadata edges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration classes to improve code cleanliness and reduce unnecessary dependencies
changed error message format from " Invalid playback speed requested " to " Setting playback speed " to improve clarity of error messages for better debugging
don't wait for room remove event when cluster be shut down
updated the key from'replicas'to'cores'in AutoScalingHandlerTest. java to improve accuracy of scaling operations
added flipY and generateMips settings to TextureHelper to improve texture rendering by ensuring consistent Y - axis rendering
replaced ` ProjectBuildFileParseEventStarted ` with ` ProjectBuildFileParseEvents. Finished ` in ` PythonDslProjectBuildFileParser
implement pass - based processing for library normalization in j2cl.
replaced ` retrofit. nextResponseBodyConverter ( this, innerType, annotations ) ` with ` retrofit. responseBodyConverter ( innerType, annotations )
[ hotfix ] fix checkstyle violation in memorymanager
cloudstack - 7092 : add temporal annotation to consolessionvo for mysql compatibility.
added a new file ` Hbs. java ` that implements the template engine in the ` io jooby. handlebars ` package to
updated ChatMessageAdapter to handle null or empty hints and improved message handling logic to enhance user experience by ensuring appropriate UI elements are displayed based
updated measurement iteration from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv. java ` to improve accuracy in processing header
fix test : wait until alert dialog be present
added a condition to return null if distinct column indices exceed two to ensure proper handling of distinct column indices in the ReduceSinkDeDuplication
miscutils. getclasspathfrommanifest now handle absolute path correctly.
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty - websocket -
saml authenticate user : use unmodifiable map instead of unmodifiable map
don't update the header if the user edit an already edit code
replaced instances of ` new Double ( x ) ` and ` new Float ( x ) ` with ` return x ` and ` new ConstantFloat
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in ` JdbcDataSource. java ` to ensure compatibility with timestamp data type
updated the condition to check for both Context and javax. naming. Context in HtmlJndiTreeReport. java to ensure compatibility with additional context
refactor database option handling in StorageUtils. java to improve clarity and maintainability of the code
changed case check from " double " to " mutual " in ImporterGEXF. java to accommodate " mutual "
replaced the static final integer FLAG _ SLIPPERY with an import for FLAG _ SLIPPERY in StatusBarTouchController. java
truffle : fix truffleconstantfieldprovider. getarraydimension for non - array field
added functionality to retrieve and set the Google Drive folder path preference to enhance user experience by providing access to the Google Drive folder path
ggb - 2118 fix : add shuffleSuggestions ( ) to ggb - 2118
added @ Nullable annotation to method parameters in Truth. java to improve null safety and clarity in test assertions
update case handling for array resizing in ArrayUtil. java to improve the efficiency of array resizing operations
added a new test class ` ApiExceptionTest ` and modified the ` instrumentConstructor ` method in ` ClassInstrumentor ` to ensure that constructors can
fix race between in and in message wait for anticompaction
added methods to check if the keyguard is secure in ShadowKeyguardManager to enhance functionality by allowing configuration of keyguard settings
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization processes
replace'>'with'' in the string split method and add a conditional check for the length of overrideParts to ensure proper parsing of
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
added a checkDrained ( ) method call in AsyncFileImpl. java and created a new test in FileSystemTest. java to ensure
updated light count constants and modified shader creation parameters in HybridLightTest. java to improve lighting efficiency and ensure proper shader creation
replaced instances of ` FakeProjectFilesystem ` with ` workspace. getProjectFileSystem ( ) ` in various integration test files to simplify filesystem initialization and improve
refactor ` loadRerunFile ` method to use ` PathWithLines ` instead of ` String ` to improve type safety and clarity in
Apple Apple Apple Apple Apple Apple Apple
remove @ NotNull annotation from TEST _ DIRS array to address issue # 2022. 1
added a call to close the ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added thread - local support for prefix index management in ` BasisLibrary ` to improve thread safety and ensure consistent prefix index management across different threads
added LogLevel annotation to TestDistributedStatsComponentCardinality. java to enable debugging for HttpConnection in production environments
added multiple ` throwIfImmutable ( ) ` calls to ` IntList. java ` to ensure immutability of the list elements
added NotNull annotation to GrpcServerRunner and refactored channel creation in GrpcClientBuilder to ensure that the event is not null and
updated package structure and refactored command handling in Graal. java and SystemRegistryImpl. java to improve code organization and maintainability by
invalidate function array when instrumentation be invalidate.
added platform - specific line endings handling for the manifest file in GenerateManifestStep. java to ensure proper handling of line endings for the
fix rcn _ redundant _ nullcheck _ of _ nonnull _ value in findnullderef
added nullability annotations to getConfigDescription methods in ConfigDescriptionRegistry. java to improve code clarity and prevent potential NullPointerExceptions
don't wrap cancellationexception in runtimeexception in masterjobcontext. createcancellationexception ( )
pdfbox - 4892 : don't initialize stream when there be no cropbox
refactor methods in ManagerBase class to improve code readability and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR in FeatureFlags. java to enable accessing All Apps from the
refactor FragmentTestUtil to use ActivityController for activity lifecycle management to improve code maintainability and leverage Robolectric's activity lifecycle methods
renamed variable ` imageObj ` to ` gpsObj ` for clarity to improve code readability and maintainability by using a more descriptive method name
rename ABCase classes to TestABCase classes to improve clarity and organization of test class structure
modified the parameter name from ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
updated the RocketChangedEventHandler to properly handle change events to ensure that changes do not interfere with the current rocket lifecycle
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to handle Maven dependency changes to provide users with the ability to change Maven dependency IDs and
refactored file system and directory initialization in IndexingJob. java and added input validation in SegmentChecker. java to improve code clarity and
updated address comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1. java ` to
refactor PreprocessorDelegate to use Supplier for replacementPaths and pathToSourcePathMap to improve code efficiency and clarity in path handling
rename ` JsonExamples ` class to ` Examples ` to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor. java to improve traceability of extracting, making, and output streams
refactor methods in FindsByLinkText. java to improve code readability and maintainability
added a new Main class in the com. facebook. buck. oop _ javac package to facilitate the execution of the Java compiler
fix a couple of findbugs warning. no functional change.
removed duplicate continue statements in NativeScanner. java to streamline code by eliminating redundancy
changed the package of RendererConfigurationTest from ` net. pms. test ` to ` net. pms. configuration ` to organize configuration
replaced ` ImmutableSet ` and ` Collectors. toList ( ) ` with ` Supplier < ImmutableList < BuildRule > > ` and ` MoreCollectors. to
update method call from ` stream ( ). count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl. java
added charset retrieval for metadata in ExtractingDocumentLoader. java to ensure proper handling of character encoding based on the content type
fix findbugs warning in databaseconfig. java
added a check to return early if the slot is - 1 in WindowListener. java to optimize performance by avoiding unnecessary processing when the slot is
add cli to ignore transitive repository introduce by transitive dependency.
removed redundant @ Inject annotation in ContactsPreferenceActivity. java to improve code clarity and maintainability
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with older Android versions
added null check before closing the selection object to prevent potential NullPointerException when closing the selection
added a conditional check to break if the matcher's start and end matches the same string to improve robustness by preventing out - of -
added a " server. port = 0 " to the IntegrationTest annotation to ensure the test environment has a valid server port
added a new UDF named " reverse " in UDFReverse. java and registered it in FunctionRegistry. java to provide functionality for generating reverse strings
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to ensure accurate retrieval of the request
updated Tracer class implementation to improve performance and maintainability of tracing functionality
[ hotfix ] ignore rocksdb state backend reader keyed state test
simplified import statements in XMLChangeLogParserTest. java to improve code readability and maintainability
added synchronization and implemented a clear method in StarTreeRecordStoreCircularBufferImpl to ensure data consistency during split operations
updated the default values of ` forecastMinutes `, ` forecastHours `, and ` forecastDays ` in ` OpenWeatherMapOneCallHandler
updated test timeouts to include a timeout of 1000 milliseconds to enhance test stability and prevent premature test failures
updated RemoteTargetGluer and FloatingHeaderView classes to improve code clarity and ensure proper handling of split task IDs during creation and assignment
renamed ` splitAndMap ` to ` splitAndThenFlatMap ` and changed return type from ` Collection < FeatureWithLines > ` to
add more block to vanilla creative tab. close # 3481
updated assertions in TestRadioButtons. java to check for the correct size of options and items to ensure that the test accurately verifies the
added support for file size options in RCFileCat and RCFile classes to enhance functionality by allowing users to specify file sizes directly in command -
fix javadoc warning in example
[ hotfix ] [ pytorch ] add ndarray check in jnautils
[ hotfix ] fix typo in blobserver
fixed bug 1295588 - unusedprivatemethod no longer report false positive for static private method.
rename ` lexicalScope ` to ` lexScope ` in ` Global. java ` to improve clarity by using a more descriptive variable name
added unit test for sftp auto - startup to ensure that the ftp inbound adapter can be auto - started
* tree : treenode constructor now accept a root parameter.
updated version parsing logic to handle minor version numbers more robustly to improve accuracy in extracting version information from version strings
added a check for empty tags before persisting active items in ItemRegistryImpl. java to avoid potential errors when tags are missing
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and integrated it into ` DateTimeFunctions ` to enhance
hhh - 17100 fix nullpointerexception in customtype. disassemble
updated Log4j2ConfiguratorServlet. java to improve logging functionality
refactor exception handling in StorageBasedAuthorizationProvider to return a new exception instead of creating a new one each time to improve code clarity and maintainability
updated the method for putting the " CC " string in CGoCompileStep. java and added a new test case in GoBinaryIntegrationTest
added a Buildable annotation to the CustomResource class to enhance the API builder functionality in the application
added an @ Override annotation in the Only class to ensure proper method overriding and improve code clarity
added a timeout constant for three hour in HttpClientFactory to improve connection stability by allowing more time for HTTP connections
added new attributes " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _
simonstewart : rename constraint to avoid confusion.
remove @ Singleton annotation from ApplicationController. java to improve code clarity and maintainability
added support for OwnCloudAccount in ShareActivity to retrieve the username based on user display name if available
added BatchStatus import and a test for resuming job executions to ensure job execution resumes on a paused instance
added null check for cacheConfig before joining it in HttpSyncDataService. java and refactored data refresh logic in DataRefreshFactory. java
[ grid ] fixed checkstyle issue in grid / remote / node
[ javaparser ] change default package name to ` ` java. lang''
pdfbox - 4892 : use dictionary object when parse non sequential pdfs
mahout - 1757 : fix checkstyle issue in mahout - cli
refactor HttpServerTestBase class to improve code readability and maintainability
fix portletapplicationmaptest. testattributenotfound failure
added tests for handling ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` to ensure proper handling of null values in DynamoDB
added support for spring boot starter to customize spring boot config
fix an off - by - one error in the indicator. todouble method.
add ` execincontainerwithuser ( ) ` method to ` execincontainer ( ) ` api
update interestedInByteMessages and interestedInTextMessages checks to utilize WebSocketTextListener in addition to WebSocketByteListener and WebSocketTextListener to improve
added test cases for different attribute scenarios in SemgrexTest. java to enhance test coverage for different semantic graph structures
added a broadcast intent to clear the pull - pending unread action to enhance user experience by allowing unauthorized interactions
removed conditional logic for pre - Gingerbread state in TouchImageView. java to simplify code for better readability and maintainability
updated DefaultProfileValidationSupport instantiation in BaseDstu21Config and WebsocketDstu21Config to ensure that the default profile validation support is
( chore ) camel - base - engine : throw runtimeexceptions when camel be not start.
added a FloatingActionButton to the ShareActivity and implemented visibility handling for the maps fragment to enhance user experience by allowing users to interact with Google
added support for inline parsing in ToDateTokenizer and updated related tests to enhance date parsing functionality and improve test coverage
updated test cases in TestAnonymousClassUnloading. java to improve test coverage for anonymous class unloading scenarios
updated error messages in multiple error resource files to correct terminology to improve clarity and accuracy of error messages for better user experience
added a check for server state before binding operations service connection to ensure services are only instantiated when the server is checked
updated position retrieval from begin and end columns to begin and end lines in Position. java to ensure accurate representation of position positions in the application
added error handling in CxxPreprocessAndCompileStep and implemented waitFor method in ManagedThread to ensure proper cleanup and thread termination during preprocessing steps
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a new ` BaseAdditiveAttributeMerger ` class
remove call to ` checkIfLoaded ( ) ` in ` DefaultRecordStore ` and modify access level of ` getApproximateMaxSize `
added support for configurable SSL protocols in NettyWebServer and ServerBasicConfig to enhance security by allowing configurable SSL protocols
replaced ` AtomicBoolean ` with ` AtomicReference ` and introduced a new ` Wrapper < T > ` class for better atomicity to improve thread safety and
updated the return statement in QueryDslMongoRepository to handle null property case and added a new test in SpringDataMongodbSerializerUnit
updated assertions in RoundRectBorderTest to use ` assertNotEqual ` instead of ` assertEqual ` to ensure that round rectangle borders are equal with the self
added a check for empty Genesis configuration before creating a node in the cluster to ensure that the cluster configuration is valid before proceeding
simonstewart : remove parallel test in selenide
updated CountDownLatch and List initialization to use'min'instead of'cnt'and added a validation check for the sign length to improve code clarity
changed the conditional check from " if ( windows ) " to " if (! windows ) " to ensure the condition accurately verifies the
added a new static method ` empty ( ) ` and renamed methods ` maxN ` and ` leastN ` to ` greatest ( Comparator <
added null checks for orderbook and WebSocket client extensions in BitmexStreamingExchange and BitmexStreamingService classes to enhance error handling and
added validation checks for lat and lon in GeoPointField to ensure lat and lon parameters are valid to prevent runtime errors
updated methods to use ` workflowFilesService. createFile ` and ` workflowFilesService. createFile ` instead of ` workflowFilesService. saveD
updated the ResponderId class to improve functionality and maintainability of the code
modified getTableDocument method to accept a boolean parameter to control the behavior of table document retrieval based on dependency requirements
added functionality to track uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing feedback on consecutive uploads without coordinates
added a new POST endpoint for retrieving profile data and modified cache handling to enhance profile data handling and improve cache management
updated ` JpaMetamodelEntityInformation ` to handle identifier derivation and nested entity information to improve property value handling and ensure proper property value processing
added timing checks for indexed tables and views in UpgradeUtil to ensure accurate timestamps for database operations
add default exception mapper to jersey error handler
added a boolean parameter to the EntryEditor's storeFieldAction method to provide additional control over the behavior of the storeFieldAction
updated the parameter name from ` ownerPtr ` to ` ownerPtr ` in the ` nativeCreateNSWindow ` method to improve clarity by using
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to improve clarity by using a more descriptive table name
add an'Stock'skin for the'Stock'item to enhance the visual appearance of the'Stock'item
fixed - rbuckets. get ( ) and rbuckets. set ( ) method don't work with non - string codec. #
add detection for complex generic signature in the Ideas framework to improve detection accuracy for complex types in the analysis process
refactor back animation handling in LauncherBackAnimationController to improve respons and maintainability of the back animation logic
modified the ` _ initialPageNo ` variable to be non - final and added a conditional check for its value to ensure that the initial page
fix crc16 calculation in jedisclustercrc16 ( # 2451 )
added comment parsing logic in FormattedSqlChangeLogParser to handle changesets with comments to ensure that changesets with comments are correctly formatted for
( chore ) camel - maven - plugin : set the archiver on the plexus - plugin
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader. java to improve error handling by using a more general exception
fix nullpointerexception in tsfile service ( # 2595 )
added support for reading pixels from WebGL using Uint8Array to ensure that only supported formats are accepted for RGBA rendering
updated method names and added debug info tests in OutputMemoryTest, PrintR, and VarDump classes to improve clarity of test methods and enhance
replaced UnmodifiableClassException with a non - UnmodifiableClassException and improved exception handling in InlineBytecodeGenerator to ensure that classes cannot be instrumented
truffle : trace class initialization trace ( s ) of class ( es ) during instrumentation
http : / / issues. apache. org / jira / browse / amq - 3682 - remove unused parameter
use caffeine's cache instead of guava's one
modified the createDataSource method to include a readOnly parameter to control database connection behavior based on the read - only configuration
updated regex pattern for invalid target release in FindBuildToolFailures. java and added a new fatal error message in FailureLogAnalyzerTest. java
added a check for location availability before constructing the URI to ensure the URI is constructed only when the location is not available
initialized ` referencedIds ` as ` new ArrayList < > ( 0 ) ` when ` getInheritedParameterContexts ( ) ` is null to ensure
updated ClassLoader implementation to improve performance and maintainability of the code
added a method to set and test the origin response headers in ProxyRequestHelper and ProxyRequestHelperTests to ensure that the response headers are correctly
added a new ProfileSettingDrawerItem instance to GpsMainActivity to enhance drawer functionality in the application
add ` ` org. apache. jasper. XML _ VALIDATION _ ATTR'constant to allow configuration of XML validation
simonstewart : fix the firefoxdriver test to work as expect
added a maxRows variable and updated fetch size handling in IoTDBStatement. java to ensure fetch size does not exceed the maximum number of
use stream. allmatch ( ) instead of stream. allmatch ( ) in sqlstreamterminator
added handling for NODE _ LEFT _ CLICK and MOUSE _ LEFT _ CLICK events in StandardVizEventManager. java to ensure proper
replaced ` Integer. valueOf ` and ` Integer. valueOf ` with a new ` zeroBuffer ` method in ` ManyToOneRingBuffer. java
[ drools - 7 ] expose the xorgroup in the terminalnode memory.
added getHeight ( ) and getWidth ( ) methods to LCDUIImageMonochromeBitmapSource class to provide access to image dimensions and dimensions
refactor methods in SourcePathResolver to use a unified implementation for absolute paths to improve code clarity and maintainability by consolidating path resolution logic
fix ( dstu2 ) : fix xmlparser. encoderesourcetostring ( ) for identifierdstu2
refactor WebsocketRoutingFilter to improve URL encoding validation to enhance security by ensuring encoded WebSocket URLs are correctly handled
fix ` ` gcc - compile'' test suite
refactor CxxPlatform retrieval logic in HaskellBinaryDescription. java to improve code clarity and maintainability by encapsulating platform retrieval logic
added import statements for ` IndexReader `, ` Similarity `, and ` IndexWriter ` in multiple Java files to ensure proper handling of Javadoc
added null check for ` current. get ( ) ` in ` ConcurrentLinkedStack ` and improved test methods in ` ConcurrentLinkedStackTest `
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing it to avoid potential NullPointerException when mDirectories is null
added a condition to check if the overview state is not enabled and the first layout is not enabled to ensure proper handling of gesture end targets in
added multiple package - info. java files for various Lucene packages to improve organization and clarity of the package documentation
added a line to set the visibility of the autoleveler panel in the AutoLevelerTopComponent to ensure the autoleveler
added post optimization handling in DirectUpdateHandler and DirectUpdateHandler2 to ensure callbacks are properly invoked during updates
updated CompressionMode to use compressed length and set dummy byte to zero to ensure proper compression behavior and avoid potential issues with zero padding
removed a user _ data check from Shaderc. java to streamline the code by eliminating unnecessary checks
added a check for local metastore in retryingMetaStoreClient to ensure retries are handled correctly in both retryLimit and localMetaStore scenarios
added null check for hostStatus and rootCause in HeliosSoloLogService. java to enhance error handling by ignoring timeout exceptions
refactor methods in Subject class to improve code readability and maintainability
use weakly strong reference type for serialization service
updated color distance calculations in HSSFPalette. java and added unit tests in TestHSSFPalette. java to improve accuracy of color calculations and
doc ( regen ) : regenerate with updated copyright year ( # 4382 )
danielwagnerhall for android ` ` xpath library'' issue
added a flags parameter to the registerReceiver method across multiple classes to enable additional parameters for receiver registration based on context
updated FFmpegTest to use Mockito's Answer for reading the version string to improve test reliability by ensuring the version string is returned
added a previous input stream parameter to the OggInputStream constructor to ensure proper resource management and prevent potential memory leaks
replace hard - coded error message with a constant to improve maintainability and readability of the failure message
[ te ] migration ] fix flaky anomaly migration
refactor BaseActivity to use a new showToast method and add conditional toast display based on user settings to improve code readability and enhance user experience by
update TracingFeignClient to use requestTemplate ( ) instead of method ( ) to enhance flexibility by allowing custom request templates
added name validation and referral handling in LDAPCertStore. java to enhance robustness by ensuring valid names are handled correctly
refactor retain method calls in GatewayRSocket. java to use a new retain method to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click functionality to improve test clarity and ensure item click functionality
[ hotfix ] [ test ] fix checkstyle violation in checkpointfailuremanageritcase
remove genericitemuiprovider, since it's no longer use
added a ` selectedObject ` field and modified the ` setSelected ` and ` getSelectedObject ` methods in ` SIPCommSelectorBox ` to
added import for Isolated annotation and annotated the FileSystemPool method in MetaInfConfigurationTest. java to ensure accessibility of the FileSystemPool
added a line to set the server's bind address to HTTP _ INFO. bindAddress to ensure the server connects to the correct server configuration
updated token validity settings in DynamicClientRegistrationEndpoint for different grant types to improve token validity logic based on whether the application is in heart mode
added a ` CloverInstrumentationFilter ` class and modified the filtering logic in ` TestInterfaceAudienceAnnotations. java ` to enhance audience
added support for the Smartmi Evaporative Humidifier in MiIoDevices. java and updated the ReadmeHelper. java
fix plausible to break for cOST _ INF
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 19875. ambari should log an error if the repository list be empty. ambari may not be manage the repository
update logic in IntHashSet to use logical OR instead of logical AND to ensure proper handling of missing values in addition to existing entries
added Serializable interface to RuleAdministrator class to ensure proper serialization and deserialization of objects
` ` ` ` `'''''''' '
updated test files from " g3d / cube _ anim. g3dj " to " g3d / knight. g3
added error logging for updating latest solidified block in Manager. java to improve stability by preventing errors during solidified position updates
hbase - 25875 fix npe in execresult. getvalue ( )
added a method to check if the remote user has administrator access and improved error handling for unauthenticated users to enhance security by preventing null responses
replaced the ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror ` and refactored the ` CreateStubAction `
added a view to display the internal link text based on whether the file is a folder to enhance user experience by providing appropriate text based on file
updated string formatting in PredictionTest to use Locale. ENGLISH to ensure consistent formatting across different locales
updated the conditional check for SATURDAY from ` Calendar. DAY _ OF _ WEEK ` to ` Calendar. DAY _ OF _
removed unnecessary IME hiding methods in AllAppsContainerView and LauncherAllAppsContainerView to streamline input handling and improve code maintainability
use inmemoryeventstoragestore in sagaconfigurationtest
refactor path handling in BsdFileStore and add utility methods in BsdNativeDispatcher and UnixNativeDispatcher to improve clarity and functionality of path
add unit test for issue # 1599 ( # 1599 )
added optional parameters for the spawn command in SpawnCommand. java to enhance command functionality by allowing optional spawn parameters
added MIN _ CONTENT _ DIMEN constant and updated methods to use this constant to improve code clarity and maintainability by centralizing content dimensions
add debug scope for cryptosubstitution test ( graal compilation )
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter. java ` to ensure compatibility with Windows
added plugin check class names to the upgrade table to ensure consistency in plugin check handling
refactor Environment class to improve code readability and maintainability
added import for LuceneTestCase and annotated the test class with BadApple to address issue SOLR - 7421 in the testing framework
updated file system separator handling in CodenameOneImplementation. java and removed unnecessary type check in HashtableContent. java to ensure consistent file system
replaced the FLAG _ IGNORE _ HDMV _ DTS _ STREAM constant with FLAG _ ENABLE _ HDMV _ DTS _ AU
replaced deprecated ResourceAccessor with CompositeResourceAccessor in LiquibaseEntityResolver. java and modified XMLChangeLogSAXParser. java to enhance resource
added security property for disabled algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing unsupported algorithms during hostname verification
replaced ` @ Value. Immutable ` with ` @ Value. Immutable ` in ` AbstractCxxDeps. java ` to improve immutability
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory `, respectively to improve clarity and
updated the annotation for resizeThreshold in Int2ObjectHashMap. java to improve code clarity and maintainability
update folder name hint to null if title is empty to improve user experience by providing clear feedback when the folder name is empty
updated client loading in UaaResetPasswordServiceTests to include " uaa " as the client ID to ensure compatibility with the new client ID
changed access modifiers of methods isEmptyOrWhitespace and isSpecialCaseOrUnknown from public to private to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter, AtomicLongPosition, and UnsafeBufferPosition classes to ensure correct value representation based on the closed state of the counter
updated import statements in MimetypeIconUtil. java to improve code clarity and maintainability
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple files to improve clarity and consistency in the view provider interface
added a new test case for negated instanceof in UnnecessaryParenthesesTest. java and modified the condition in UnwrapParentheses
added a ` built ` boolean to the ` Location ` class and implemented the ` teleport ` method to ensure that the object is properly
replaced direct conversion of modulus, exponent, and signature with URL - safe encoding in TokenKeyEndpoint to enhance security by ensuring safe encoding of
updated import statements and added ProjectComponent dependency in TranslatorManagerHelper. java to improve project handling and enhance statistics reporting
rename the ` ContainerAnnotation ` interface to ` ContainedBy ` to improve clarity and consistency in naming
added a null assertion for the result in ObjectIdentityImpl. java to ensure that the getId ( ) method returns a non - null value to
refactor methods in TimeLineCursorAdapter to improve clarity and functionality to enhance code readability and maintainability by encapsulating retweeter logic
added support for displaying verified text based on user theme settings to enhance user experience by providing appropriate text based on user theme settings
refactor AbucoinsDigest to use a private final variable for secretKeyBase64 to improve encapsulation and reduce potential null pointer exceptions
camel - 15836 : added autowired to the mongo db component so you can plugin different dependency for the mongo db component.
added a sourceIndex parameter to the AttributeMapping class and introduced a constant for last index in DataAccessMappingFeatureIterator to enhance attribute mapping functionality
improve error reporting for corrupted column statistic in hive metastore
added a call to UserGroupInformation. isSecurityEnabled ( ) in AuthParams. java to ensure that security settings are correctly applied when security is
refactor multiple classes including ConnectivityReceiver, TerminalKeyListener, AbsTransport, and EastAsianWidth to improve code organization and maintainability
html escaping for contact email and contact email in geoserver home page
add modulemanagerimpl. enrichreflectionswithsubsystems ( ) to terasologyengine
add assertion to check the actual number of feature in the mmf stream.
don't throw indexoutofboundsexception if input be empty
added conditional logging statements in SingleNodeKafkaResumeStrategy. java to ensure logging is only enabled when debug or trace logging is enabled
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat. ACTION _ SET _ PLAYBACK _ SPEED
added support for automatic separation in the IgnitionConfigurationHandler and related classes to enhance the functionality of the Ignition configuration handling
tika - 2496 -- add mime type for nls file, and add unit test for nls
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest. java to temporarily disable the test due to non - deterministic issues
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by encapsulating lock file creation logic
updated sync interval settings from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added multiple sync interval settings
added a check to return null if the user is the FEDERATION _ USER constant to handle scenarios where FEDERATION _ USER is not
don't check for truffleobject in executemethodnode. isparameter ( ).
removed unnecessary ` Collectors. toList ( ) ` imports from ` JakartaClientShutdownWithServerWebAppTest. java ` to streamline
don't log an error if the access event be deny.
refactor Collection and Map classes to improve code readability and maintainability
removed unused import of Version in CreateIndexTask. java to streamline code by eliminating unnecessary dependencies
added logic to handle missing primary key changes for OracleDatabase and AbstractDb2Database to ensure proper handling of backing indexes and schemas during database comparisons
updated exception handling in MsckOperation and added a new test for invalid partition names in TestMSCKRepairOnAcid to improve error
[ flink - 18748 ] [ kafka ] fix kafkaproducer. committransaction ( ) to return a retryable
[ rip - 10 ] remove receipthandle from dlq activity
added a service list to DockerComposeContainer and modified DockerComposeContainer to handle empty services to improve flexibility in DockerComposeContainer by
don't duplicate collectionutil. copyset ( ) in export, StructContextDecorator. java and vice versa
replaced HtmlCleaner with direct XML return in FeedParser. java to improve error handling and streamline XML processing process
removed unnecessary condition check in Launcher. java and modified the way custom pages are retrieved in Workspace. java to simplify code logic and improve performance during
( ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
added a new file ` bug4150029. java ` to create temporary directories to ensure the application uses the system's temporary directory
added support for configuration updates in HiveConf and improved resource management in SparkSessionImpl to enhance configuration management and ensure proper resource management
added ` getLongPressIndicator ( ) ` method to ` AppIcon `, ` AppIconMenuItem `, and ` Launchable ` classes to
added checks for empty polygon data and updated test cases for these data to ensure proper handling of empty polygons and improve test coverage
refactor UnflavoredBuildTarget initialization to use a builder pattern to improve code readability and maintainability by using a strong interner
added a new file MultiplyByMaxInt. java with a method to compute the maximum value of a given integer to facilitate the
updated OCFileListFragment to enable drawer indicator based on current file state to improve user experience by enabling navigation drawer indicators when the current file is
removed unused imports from TestRAMDirectory. java to clean up the code and improve maintainability
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton. java ` and ` Operations. java ` to simplify code and improve performance
drools - 2576 dmn - improve error message when no expression define for a node
replaced instances of ` @ ContainedBy ( AC. class ) ` with ` @ Repeatable ( AC. class ) ` in multiple
updated the message formatting in AbstractController to include the end duration for better clarity to enhance the user experience by providing a clearer indication of file sending
updated class name handling in OpenMBeanAttributeInfoSupport. java to ensure proper package access validation during class loading
readresponseresolver should not return false if no response find. patch by jbellis
updated the calculation of freeSize in StoreDirect. java to ensure proper handling of size adjustments
implement touch event handling in AnyKeyboardView and AnyKeyboardViewBase classes to improve touch detection accuracy for native keyboard interactions
replaced instances of SslContextFactory with SslContextFactory. Server in multiple server classes to ensure proper SSL context configuration for the server implementation
removed the ` PrivilegedSocket ` class from ` PG _ Stream. java ` to simplify connection creation by directly using the host and port parameters
refactor InputTest class to improve code readability to enhance maintainability and facilitate future development
updated animation handling in various classes to ensure proper management and visibility of splash views
updated import statements and refactored location marker removal logic in NearbyMapFragment. java to improve code clarity and ensure proper handling of
updated client retrieval logic in ClientAdminEndpoints to use client ID to ensure secure access to client data
updated SQL query formatting in SqlSourceBuilderTest. java to ensure compatibility with different XML configurations
resolve http : / / issues. apache. org / jira / browse / amq - 2473
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown key scenarios
updated filtering logic in ShenyuTrieRuleListener to handle Optional data gracefully to improve code robustness by preventing potential NullPointerExceptions
* spatialcontrol should be a clone of the controldirection enum so the controldirection enum can be use.
updated conditional logic and added suppression warnings in StdErrLog. java to improve code clarity and maintainability by ensuring proper handling of null
added logging for ServletContextEvent publishing and improved null checks in HttpSessionEventPublisher to enhance traceability of event handling and ensure proper context retrieval
added a syntax check for creating a CQ statement in the ASTVisitor class to ensure the syntax of CREATE CQ statement has changed from v
[ hotfix ] [ doc ] fix typo in flinkiotdbsink
add a counter to track custom simplify in custom canonicalizer
updated fileIcon to use a context parameter instead of null to improve compatibility with updated file type handling
updated schema name retrieval method in Parser. java and TestScript. java to ensure correct schema handling during index operations
[ bigquery ] fix ` ` time'' field schema in bigquerytableentryiterator
added implementations of ` findViewWithTag ` in ` ShadowView ` and ` ShadowViewGroup ` classes to ensure proper retrieval of views based on
updated generic type declarations from ` ( String ) ` to ` Enumeration < String > ` across multiple files to improve type safety and reduce casting errors
removed unused imports from IndexTool and MetaDataClient to streamline code and improve maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated related logic in SpringBootDocBuildTemplate and JavaClassUtil to
[ gr - 34494 ] fix npe in resourcesfeature. getclasspathfiles ( )
updated CUDA _ R _ R _ * and CUDA _ C _ 32U constants in cublas. java and cuda. java to improve CUDA
refactor ResourceLoader class to consolidate resource loading logic to improve code maintainability and reduce redundancy
use simpleattachablematerialdata instead of custom glowblock. getattachedface ( glowblock me )
added support for VARBINARY data type in RelToStageConverter to enhance data handling in the RelToStageConverter
removed unused import of DateHelper from NoteAdapter. java to clean up the code and improve maintainability
updated backup error messages for better clarity to improve error handling and provide more informative feedback during backup operations
ggb - 2118 fixed position of very small element in the simple panel
removed unnecessary file deletion logic in ShadowParcelFileDescriptor. java to simplify the file creation process and improve error handling
remove unnecessary call to poll ( ) on securitycontextholder.
rename " optimizations " to " controversial " in BooleanInversionTest. java to improve clarity by reflecting the purpose of the
canonicalization of ` xorNeutral ` to ` binary ` in ` integerequals `
added a constant for String array type in TypeFactory to enhance type handling for String arrays in the application
added hideIme ( ) method to AllAppsContainerView and refactored logging in LauncherAllAppsContainerView and StatsLogManager to improve user
fixed network issue with resize below blockstatecontainer.
updated error messages in TimelineMetricCacheSizingTest for clarity to enhance readability and maintainability of the test code
add gl _ max _ texture _ size to the player usage snooper to avoid create multiple instance of the player with the same texture.
[ java ] fix checkstyle issue in java / util / consensusmoduleagent. java
added a check to reset startPosn when isInTransform is true to ensure startPosn is set correctly when transform information is present
replace the ` isStarTreeDisabled ( _ queryContext ) ` method with ` isSkipStarTree ( ) ` in multiple plan nodes to
added a lock mechanism for refreshing the nearby view and refactored related methods to improve performance by controlling the refresh state of the nearby
add static factory method for maptransformer.
refactored EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for loading launcher widget span information in ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` to enhance widget management by ensuring a
replaced ` ChangeEvent ` with ` EventObject ` in ` StageSelector ` and ` StageAction ` classes to use ` StateChangeListener ` instead
added methods to get and set callingPid and and callingUid in ShadowBinder to enhance functionality by allowing retrieval of process ID and UID
refactor ExpectationFailure class to use Objects instead of AutoValue to improve null safety and leverage existing utility methods
added a warning log message when deserializing a message without a name to improve error handling and provide feedback on unsupported message formats
updated calculations for new dimensions in ImageReplacedElement. java to ensure proper scaling based on input values
added handling for'&# 10 ;'characters in Markdown rendering logic to ensure proper processing of Markdown data in Markdown rendering
updated password sharing functionality in SharePasswordDialogFragment to improve user experience by allowing confirmation of shared files
refactor method calls to use a static class for file channel operations to improve flexibility and error handling when accessing file channel methods
updated method visibility modifiers from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test. java to enhance
added slider - keytab and slider - default - keytab options to LlapOptionsProcessor to enhance configurability for Slider AM keytab
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation handling to enhance flexibility in managing window
added a check for ` mHasLoaderCompletedOnce ` and refactored the ` findSpaceForItem ` method to ensure that bindings are
[ iotdb - 4977 ] fix npe in node path operator
renamed ` error ` to ` messageType ` and added new methods ` setCheckValid ` and ` setCheckValid ` in ` ValidationReport `
added a method to safely retrieve the cipher provider in RSAClientKeyExchange. java to improve error handling and provide clearer output when the cipher provider
[ hotfix ] rename ` ` dynamicconfiguration'' to ` flinkconfiguration '
change log level from WARNING to OFF in CCJSqlParserUtil. java to disable logging for improved performance
added a condition to append a newline in AggregateLifeCycle. java to ensure proper formatting of output for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public to allow external access to these constants for external use
removed the @ Ignore annotation from CovariantOverrideTest. java to address issues where covariant override is not implemented
refactor curly and character property handling in the Pattern class to use a new Qtype class to improve code clarity and maintainability by centralizing type
camel - 16400 : camel - core - optimize modelhelper. loadroutedefinition to reduce code duplication.
added space minimum and maximum settings for the X - axis in ScatterChart to ensure consistent spacing between data points
fix a syntax error in the ExpressionStringBuilder. java file to ensure proper handling of INTERVAL expressions
implemented shouldPreserveDataStateOnReapply method in multiple classes to ensure data state is preserved during animations
added a check for the UTF8 key in the ClassLoader's system resource to ensure proper handling of missing UTF8 keys in the properties file
updated print statements in TestReproduceMessage and added randomized runner annotations in LuceneTestCase to improve error handling and clarify the use of randomized
added a UI event for long - pressing an AllApps item in the StatsLogManager to enhance user interaction tracking for analytics
added null check for ` log ` in ` StoreWAL. java ` and created a new test class ` Issue112Test. java ` to
added a condition to check if the sector preset is null before showing land information in the Campaign control to ensure that land information is displayed only
[ hotfix ] [ table - common ] fix unchecked cast
refactor Enum class to improve code readability to enhance maintainability and facilitate future development
improve error message if randomselection ben't enable
remove temporarycache. removetime ( ) from server. close ( ).
hide the createsqlviewcontainer and createwmslayerimportcontainer in NewLayerPage. java to improve user interface by hiding unnecessary components when
initialize Availability _ availability to UNAVAILABLE to ensure availability is consistently set to unavailable
updated logic to include a check for sync finishing in multiple classes to ensure pbft synchronization occurs only when the synchronization is complete
fix : update gapic - generator - java version to 2.1. 0 ( # 48 )
modified the ` freeSpaceReclaimDisable ` and ` freeSpaceReclaimQ ` methods to accept a query parameter instead of a boolean to
changed public modifiers to static final for KDC _ OPT _ PROXIABLE and KDC _ OPT _ FORWARDABLE options in KDCO
initialized the writer variable before creating it in the Json class to ensure proper initialization of the writer object and prevent potential null pointer exceptions
updated mentions and favorites lists in ProfilePager. java to improve user experience by displaying more relevant mentions and favorites
changed the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider. java ` to improve method clarity by indicating that background components are
added a method to convert object value from a class constant to a constant value in Configuration. java to ensure that object values are correctly formatted and
added logging for service initialization failures in KafkaService to improve error handling during the initialization process
changed the data structure of RESOURCES _ TO _ ALWAYS _ ACQUIRE from Sets. newHashSet to ImmutableSet. of ( ) to accommod
use'channelname'instead of'channel'for auto - creating channel.
added functionality to retrieve and index keyword from metadata in HTMLDocument. java and created a new test for indexing in TestDemo. java to enhance
updated SDK version check from VERSION _ CODES to R to ensure compatibility with newer Android versions
modified the initialization of ` _ addresses ` in ` MemcachedSessionDataMapFactory. java ` to ensure ` _ addresses ` is only added when
replace ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` class ` in ` CorrespondenceSubclassToFactoryCallTest.
refactor builder methods for improved readability to enhance maintainability and facilitate future development
show error message when isbn can't be find
set keep - alive - time to 10 second in polyglot api
added null check for the text before triggering data change events to avoid potential NullPointerException when the text is null
add ` simplifiedmodel ` to sentimentmodel, fix some javadocs.
added line trimming in SuffixURLFilter. java to ensure consistent processing of URLs without leading or trailing spaces
added a conditional check in the HandlerCombatInvocationsNotify class to return early if the player is in godmode
ggb - 2118 remove popup registration from checkbox creation dialog w. r. t. checkbox creation
updated constructor parameters in LinkedHashMapCache and CacheType classes to improve clarity and consistency in method signatures
corrected formatting in ChannelEndPoint. java to improve code readability and maintain consistency
added null checks for keyIndex and refactored KeyIndexBuilder instantiation to remove the " compactor " parameter to improve code robustness and
updated exception handling to use Locale. ROOT for consistency to ensure consistent error reporting across different locales
add storecheckguard input type to writenode and canonicalizationphase.
fix a bug in the bciblockmapping. isreachable ( ) logic
added ` getClassificationDisagreement ` method implementations in ` AbstractCloud `, ` DBCloud `, and ` ViewFilter ` classes to
replaced BuildTarget. copyOf ( buildTarget ) with a direct assignment from unstrippedTarget to simplify code and improve readability by eliminating unnecessary method
[ hotfix ] [ sql - runner ] fix typo in sqlrunner
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
replaced ` knownApis ` with ` knownSdks ` and introduced a new method to retrieve all known SDKs to improve modularity and
show ` ` confidence'' instead of ` ` progress'' for create offer
updated user agent handling from " Cling / " to " UMS / " in multiple RequestHandler classes to ensure correct identification of UMS
fix ` ` iterator can not be iterate'' bug
added new view types for message display in CrowdfundingChatAdapter to improve flexibility in displaying messages based on their content type
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary. java ` and ` MacOSXLibraryDL. java
make sure that conj / sbar / conj / sbarq / sinv / sbar / conj / sbar / sin
removed the canvas parameter from the insert method and added padding adjustments in TexturePacker. java to streamline image processing by eliminating unnecessary
refactor refactor to use a default implementation of the Refactor class to improve code readability and maintainability by consolidating visitor retrieval logic
added methods to retrieve child elements by their names in the Xml class to enhance functionality by allowing retrieval of child elements by their names
added " Content - Charset " header with UTF - 8 in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of character encoding
refactor SystemUiController and TaskThumbnailView to use SystemUiControllerFlags annotation to improve code clarity and maintainability by centralizing UI state management
removed the private ClientConfigurationService from IntrospectingTokenService to streamline the code by eliminating unused components
updated the exception message for record reader creation in HiveRecordSet. java to improve debugging by providing more context on the error thrown
removed the ownerId field from NodeEntry. java to streamline the code by eliminating unused fields
bugfix : backup snapshot should be backupsnapshotaftertakingsnapshot instead of backupsnapshotafertakingsnapshot
added a score assignment in the ` merge ` method of ` TextFragment ` to ensure that the fragment's associated score does not exceed the
removed the private Digester digester field from Md4PasswordEncoder. java to streamline the codebase by eliminating unused components
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish. java to ensure that the property maximumUnim
added a check to return early if currently opened editors are empty to improve performance by avoiding unnecessary processing when no editors are available
added overloaded ` verify ` methods to ` BDDMockito ` for improved flexibility in verifying mock behaviors
updated ClassLoader retrieval from ` Thread. currentThread ( ). getContextClassLoader ( ) ` to ` PathScanner. class. getClassLoader ( ) ` to
modified the ` sayHi2 ` method implementation to use ` CompletableFuture < String > ` instead of ` String ` to improve asynchronous handling and
add logging to abstractsplitbraintespacetest. testsplitbraintespacetests
added null check for logout configuration in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure logout page is created only when logout is enabled
giac don't work with degree [ 0 ]
added logging functionality for DockerComposeContainer and created a new test class for it to enhance the DockerComposeContainer's ability to log
corrected the casing of the method name from " testMapping " to " testMapping " to ensure consistency with Java naming conventions
removed unnecessary import of FileUtils in AmbariMetaInfoTest. java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to create a ` ThrowingSupplier < T, E extends Exception > ` from a ` Supplier <
replaced a break statement with a return statement in ConsoleActivity. java to ensure proper flow control in the code
added handling for Buffer in VertxPlatformHttpSupport and created a new test for text content post in VertxPlatformHttpEngineTest to ensure
added platform - specific path handling methods in MorePaths and CopyStep classes to ensure consistent path formatting across different operating systems
added a null check for authorizationContext parameters before processing to avoid potential NullPointerExceptions when parameters are null
replace ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` in ` NativeLibraries. java ` to enhance error handling by
updated SDK version from " 4611349 " to " 4514284 " and added new test cases for text - to - speech functionality to
create a new ` transactionlogkey ` class for the ` queuetransactionlog `
datajpa - 283 - enh : add option to disable sql without profile
added a try - finally block around the write method call in ConnectHandler. java to ensure proper resource management during write operations
fix eclipse compiler generics issue in modloadingstage.
updated date formatting method to use a calendar parameter in DateUtils. java and removed an assertion in FontParsersTest. java to improve date handling
updated the ` getThreadInfo ` method to include a stack trace depth parameter in ` CachedThreadStatesGaugeSet ` to enhance thread information retrieval by
added a protected field ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to ensure
updated the version number for FastAsyncWorldEdit from P2 - V6 to 1.17 to ensure compatibility with the latest world edits
modified file handling logic in SegmentGeneratorConfig. java to check for null path and ensure output directory exists before creating it to improve robustness and
added a method to calculate normal vectors based on vertices in ObjUtils. java and updated triangulationHelper. java to improve code clarity and
updated JdbcAuditService to use identity _ zone _ id instead of identity _ zone _ id to improve accuracy in retrieving audit events based on the
refactor methods in SpanCollector class to improve code readability and maintainability
added a null check for the getCurrSession method in AuthorizationFilter. java to ensure that the session manager is not null before proceeding with
refactor TransactionIsolationLevel class to improve code readability and maintainability
rename method from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController. java ` to
set the thread's name to " Forwarding to " in the TestSession class to improve clarity of thread identification during the forwarding process
updated CookieManager class to improve cookie management functionality
return a new list instead of an empty ArrayList to simplify the code and improve performance by returning an empty list instead of null
added a new OverviewToAllAppsTouchController to the list to enhance user interface interaction with the All Apps launcher
modified the ` scaleHotseatWithWorkspace ` method to include workspace scaling and translation to enhance functionality by allowing dynamic scaling based on the hot
added a check to exclude JUnitRule from the stack trace filtering to ensure that stack trace filtering does not include the JUnitRule in the filter criteria
[ java ] : replace directbuffer. hasarray ( ) with array ( ) and null ( ) in mappedresizeablebuffer. java
refactor balance listener management in DepositListItem. java to improve code clarity and maintainability by encapsulating balanceListener logic
modified color conversion logic in RealisticRenderer to handle edge modes to ensure correct color assignment based on the edge mode of the renderer
added null check for httpClientResponse in HttpClientBeanPostProcessor. java to avoid potential NullPointerExceptions during execution
remove unused patternutil. checkpattern ( ) from gl200protocoldecoder
updated playback time validation logic in FullDetailsActivity. java to ensure proper playback timing for episodes and players
added MWE - PHRASAL constant and refactored elliptic node checks in SpanishXMLTreeReader. java to
added a condition to clear the language DC if it's empty in InstallItem. java to ensure the item's language context is cleared
updated the ` overrideScheme ` assignment in ` ReactiveLoadBalancerClientFilter ` to use ` retrievedInstance ` based on security settings to ensure that
[ hotfix ] fix memory leak in defaultmessagestore
changed the access modifier of ` fullFilePathFromClassName ` from private final to package - private in ` NativeImageDebugInfoProvider. java `
refactor the return statement in ShadowBackupManagerTest to use Correspondence. from for improved readability to enhance code clarity and maintainability by using
updated references from " # FormatData _ USLocales # " to " # NonENLocales # " in JRELocaleProviderAdapter and
removed redundant null check for redeemData in LocalTransactionSigner. java to simplify the logic for better readability and maintainability
add forge client support for render block with custom terrain texture.
added a return statement in TxCacheDB. java to prevent further processing during transaction processing
to avoid dependency from com
refactor FastDictionary class implementation to improve performance and maintainability of the code
of nioconnection. isclosed ( ) should set session status to closed
updated FlightEvent types for GROUND _ HIT and SIMULATION _ END in FlightEventsTest. java to improve event
to avoid compile error.
replaced target. addNamespaceDeclaration with newElement. addNamespaceDeclaration in SaajStaxWriter. java to ensure the namespace declaration is added
[ fix sf ] instructorfeedbackresultspageuitest : use courseid instead of studentemail
added support for short password rules in DefaultPasswordValidator to ensure only alphabetic and numeric sequences are accepted in the password validation
simonstewart : add a command to retriving remote control logs and screenshots
removed JUnit test import from ProxyClassSerializationTest. java to streamline test code by eliminating unnecessary JUnit import
updated scale and format parameters for thumbnail ratio and thumbnail dimensions in DLNAMediaInfo. java to ensure proper scaling and formatting of thumbnail dimensions
remove speculative guard movement phase from various compiler test.
sec - 1648 : don't allow authenticationmanager to be override by the authenticationmanager registration.
added handling for forwarded host and server in ForwardedRequestCustomizer. java to ensure proper handling of forwarded requests based on host and server type
added a call to sb. setLength ( 0 ) in ConsoleReader. java to ensure proper resource management and avoid potential memory leaks
ww - 3833 make allowedroles and disallowedroles protect to allow subclassing
update version numbers for OpenIDE - Module - Specification - Version to ensure compatibility with the OpenIDE - Module - Specification version
hbase - 25836 set hbase. server. netty. tls. wrapsize default value ( liang xie )
refactor multiple Java classes for improved consistency to enhance maintainability and readability of the codebase
replaced TestCase inheritance with JUnit's static assertions in FixedLengthTokenizerTests to improve readability and maintainability of the test code
added protocol binding validation in OpenSamlAuthenticationRequestFactory and created corresponding test class to enhance security by ensuring only valid SAML2 protocol bindings
refactor SurfaceControl transaction handling in DepthController. java to utilize AttachedSurfaceControl for better transparency management
update version check from " - SNAPSHOT " to " 2.0. x " to ensure compatibility with the latest releases
hbase - 25836 bulk load pre - prepare / pre - cleanup operation should be create instead of write
removed unnecessary parameters from subList calls in TsFileManagement. java and MergeTaskTest. java to simplify the code by eliminating unnecessary parameters
camel - 5687 : fileinputstream should return a filenotfoundexception if the file be a plain file.
added a login method to DefaultShardManagerBuilder and modified its implementation in DefaultShardManager to allow conditional login based on the login parameter
removed unnecessary global reference deletion in the Callback class to improve code clarity and maintainability
changed the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to align with the new naming conventions for
added a conditional check for the completion state before terminating the exchange to ensure the exchange is terminated only when it is marked
don't show comment if the user don't have a giver
added security checks for linked profiles in BMPImageReader. java to enhance security by ensuring only valid linked profiles are processed
update location parameters in setSimpleCuboid method calls to ensure consistent behavior across plot worlds
added a wait message for PMD status and modified the actionPerformed method to run pmdCPD asynchronously to improve user experience by ensuring P
refactor StdGridFragment to use a dedicated method for setting grid sizes to improve code readability and maintainability by centralizing grid size settings
updated return values in ContributionsListFragment. java to ensure consistent behavior of the method
added a test case for distinct prefix filtering in DistinctPrefixFilterIT. java and modified filter logic in BaseResultIterators. java to
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file to enhance file modification tracking and improve resource management
added a check for the existence of " metaTable " in the tableProps to ensure that the integrity of metadata tables in the Iceberg storage
use a combo box instead of a text field for default currency selection
changed exception handling from IOException to Throwable in WriteFlusher. java to improve error handling by catching all possible exceptions
added a flag ` mStartedEnterAnimation ` and modified item range change notifications to improve animation handling during content fill operations
added a new field ` activeKeyId ` to the UaaConfiguration class to store the active key identifier for improved configuration management
rename sendmail ( ) method to sendmailwithattachment ( ) and sendmailwithattachmentmessage ( )
changed the ` isActive ` variable from non - volatile to volatile to ensure the visibility of the ` isActive ` variable across multiple threads
updated ` isDesc ( ) ` method to ` isAsc ( ) ` in ` OrderByExpressionContext ` and related tests to ensure correct
make sure implicit equation and variable be not cast to string
added a check for the ownCloud app name in the Calendar condition to ensure that the app name is validated against the user's ownCloud
hbase - 19836. hbase. rootdir. perms should be configurable in hbase - site. xml
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange. java ` and
refactor Instant class to improve code clarity to enhance maintainability and readability of the codebase
changed the state format from int to String in multiple classes to improve handling of string representations of state formats
refactored authentication type logging and improved type checking in AbstractTicket and ServiceTicket classes to enhance clarity and correctness of authentication handling
added support for IllegalArgumentException in exception handling in PDICCBased. java to enhance error handling for specific exception types
added a check for file name ending with " / " in AbstractFileResourceSet. java to ensure that only valid file names are processed
pluginparameterexpressionevaluator now accept a pathtranslator so it can be use for expression evaluation
[ beam - 8470 ] restructure protobufcoder to avoid re - registration.
updated JpaQueryParsingToken instantiation to include a false parameter and added a new test for signed numeric literals to ensure that numeric literals are correctly processed
modified the launch lug generation methods in ` LaunchLugHandler ` and ` RailGuideHandler ` to accept a parent length and adjust
removed the getNonceFactory method from the BitmexStreamingExchange class to simplify the codebase by eliminating unused method
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] use default timer interval in driverconductortest.
changed the initialization of loaded classes from true to false in FastClasspathScanner. java and ScanSpec. java to ensure that classes are only loaded
added a call to grab focus on the search field in FullTextSearchPanel. java to improve user experience by ensuring focus is properly managed
refactor NioParams initialization in TlsConnectionLogging. java to improve code readability and maintainability by reducing redundancy
removed an assertion from the getDouble method call in StatementTest. java to simplify the test by eliminating unnecessary assertions
updated assertion message formatting in TestSolrConfigHandler. java to improve clarity of error messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` mocks in ` CsrfWebFilterTests ` to align with the
updated drawable density handling in FilterResourcesStep. java to improve accuracy in matching drawable density values
added a buttonUIID variable and refactored UIID updates to use this variable to improve code clarity and maintainability by encapsulating UI
removed the check for DENSITY _ 600 in the displayInfo rotation condition to simplify the condition for better readability and maintainability
bug in arraycopy, add test.
added import for LuceneTestCase. AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to address issue SOLR
fixed - rexecutorservice. schedule ( ) method throw npe if scheduledexecutorserviceatfixed method be call without a start date. #
refactor conditional logic for credential update in FileDownloader and FileUploader classes to improve code readability and maintainability
refactor code to handle null StoreFileScanner safely to ensure proper resource management and avoid potential memory leaks
replace `. get ( ) ` with ` getOrDefault ( ) ` in ` NetMetrics. java ` to ensure non - default values are
added nonce assertion to verify token claims in TokenMvcMockTests to ensure that the nonce is correctly validated for token processing
update javadoc for javax. swing. plaf. editor package
added width and height settings for formLayeredPane in mmm Form. java to ensure that the form layered pane adheres to
removed unused imports and added a method to calculate the maxY value based on the owner's height to improve code clarity and ensure proper height calculations
don't close database if not connect to db
replaced references to ` DOCKER _ COMMAND ` with ` Platform. DOCKER _ COMMAND ` in DockerTestUtils. java and Platform. java to
added null check for input stream in initializeParameters method to enhance robustness by preventing null pointer exceptions
updated drawLeaveBehind method to accept a color parameter to enhance flexibility in drawing leave - behind based on text attributes
show a clear error message when the project version don't match the version of android studio
fix npe in apiresponseserializer when identityproxy table name be null
added modulePersistEnable and modulePersistDisable lists to StartArgs. java to enhance functionality by allowing configuration of module persistence settings
updated conditional check and error message formatting in GeminiMarketDataService. java to improve code clarity and ensure correct argument length validation
replaced ` HashSet ` with ` LinkedHashSet ` in ` VerifyPasswordResetRequestAction. java ` to maintain insertion order for the questions map
add a test realm base to verify that a single role be present in the security constraint.
[ entesb - 1065 ] remove excessive jsps from the authcheckfilter
fix race condition in scheduler. postdelayed.
updated method signatures to use ` String. args ` instead of ` String [ ] ` in ` AbstractCommandRunner `, ` AuditCommandRunner
refactor XMLParser to handle end - of - stream cases for reading characters to improve error handling by returning END _ TAG when the input stream is
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest. java ` to address issues with text overflow
set the pivot X and Y values for the arrow in DeepShortcutsContainer. java to ensure proper alignment of the arrow based on icon presence
fix : don't print stacktraces to stderr
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter in the ` updateThumbnail ` method to enhance the handling of thumbnail
pdfbox - 4071 : use full class name instead of full class name
updated EmailFormatSpecifier and HostnameFormatSpecifier to include validation for domain names to improve error handling and provide clearer feedback for invalid domain names
removed unnecessary'this'references across multiple activities to simplify code and improve readability by eliminating unnecessary method calls
updated the ` SizeBasedDocIdIterator ` and ` FilterBlockDocIdSetBlock ` classes to use ` _ currentDocId ` instead
added overloaded ` promptToOpenFile ` methods in ` FileDialoger. java ` and updated file handling in ` FilePanelEntry. java
updated sPageSleepDelay and refactored widget span settings and introduced a new ` updatePageCounts ( ) ` method to improve responsiveness
added logic to update active components based on their transformed coordinates in FlightConfiguration. java to improve efficiency and accuracy of flight configuration updates
fix intermittent failure of micrometer unit test
updated DateTimeFormatter to use Locale. ROOT to ensure consistent formatting across different locales
[ ds - 3852 ] ds - 3852 : filter out metadata from object
added a test for missing required dimension names in StarTreeConfig to ensure that the configuration correctly handles cases where required dimensions are missing
camel - 13363 fixed the unit test error of frombuilder.
refactor InlineLayoutBox and HoverListener classes to enhance layout rendering logic to improve performance and maintainability of the code
refactor AuthenticatorActivity to use ServiceConnection and OperationsService for improved connection handling to enhance reliability and maintainability of the authentication operation process
