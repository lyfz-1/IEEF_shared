updated SocketAppender initialization to set remote host and port to ensure proper configuration of the SocketAppender instance
refactor header handling in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability by reducing duplication
replaced ` RecordDescriptor . msgLengthOffset ` with ` msgLengthOffset ` in ` ManyToOneRingBuffer . java ` to streamline
cloudstack - 4892 : fix npe when vm detail cpu and ram overcommit ratio be null
added a flags field and its getter method in ShadowPaint . java and updated PaintTest . java to use it to enable dynamic anti - alias
updated the title of the MassSetFieldsDialog to use localization for clarity to improve user experience by providing a more descriptive title
replace assertFalse with a conditional check for Eclipse collection in DetectorsTest . java to improve error handling for cases where no bugs are reported
added a nonce check to ensure nonce is not equal to " " in Realm . java and updated scheme setting in NettyAsyncHttpProvider
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor to accept a ` RemoteInputListener ` to enhance the
reformatted conditional statements in OrcEncodedDataReader . java for improved readability to enhance code clarity and maintainability
added a check for the enabled state before filtering the handler in HomeConnectBridgeHandler . java to ensure that only active thing handlers are processed
added null checks before calling removeAllPolicies and addPolicies methods in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions when bs is null
updated assertions in DefaultTypeAdaptersTest , ObjectTest , and DefaultDateTypeAdapterTest to use ` matches ` instead of ` isEqualTo `
added JSON serialization and logging for DAG information in TezTask . java to enhance debugging capabilities by providing detailed context and description information
updated time calculation in ComputedSummary and added a method to get heap time in HprofHeap to improve accuracy of time representation for heap dump
replaced RxJava2Tasks class with CommonsApplication for upload count retrieval and removed RxJava2Tasks class to streamline the code by elimin
removed redundant condition checks for lock mode in MVTable . java to simplify code for better readability and maintainability
[ issue # 1188 ] fix commitlog offset check for message store timestamp ( # 1188 )
updated folder handling logic in Launcher . java to check if the associated folder is open to ensure that only valid open folders are marked as open
added a test method to verify sorting of PGProperty names to ensure that PGProperty names are sorted in ascending order
added a new constant for the HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common . java to
replaced ` Object ` with ` ItemInfo ` in the ` supportsDrop ` and ` getUninstallTarget ` methods to improve type safety and
updated assertion message in RequestBuilderTest to use isIn instead of hasMessage to improve clarity and consistency in error reporting
refactor NearbyActivity to use NearbyListFragment instead of NearbyFragment to improve clarity and maintainability of fragment
renamed the parameter ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor and updated its initialization to improve cl
added a new column ` send _ zero _ anomaly _ email ` to the ` EmailConfiguration ` class and its getter / setter methods to
[ hotfix ] [ kafka ] fix npe in kafkaconsumerbase # open ( )
added methods ` getUser ` and ` getGeofence ` to ` DataManager ` for querying user and geofence IDs to enhance functionality by
added a constructor to BlockingResponseListener that accepts a length of 2MB and a length of 2MB to enhance flexibility in response handling by
refactor McastServiceImpl to simplify byte array handling and improve error logging to enhance code readability and maintainability by reducing redundancy
added logging for snapshot paths and improved resource management in MultiLeaderServerImpl . java to enhance debugging capabilities and ensure proper resource management during snapshot
corrected spacing in assertion statements in LoginSAMLAuthenticationFailureHandlerTest . java to improve code readability and maintain consistency
refactor ConfigMetadataProviderTest for improved clarity to enhance maintainability and readability of the test code
updated imports in ListFragment and SnoozeActivity to use a more descriptive variable name to improve code readability and maintainability by
added a ` AcceptAllFilter ` class and refactored directory stream handling in ` WindowsDirectoryStream ` and ` WindowsPathParser ` to
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
added ClassNotFoundException handling to the lookupType method across multiple classes to improve error handling by throwing NoClassDefFoundError for potential ClassNotFoundExceptions
refactor Docker image tag validation in GenericContainer . java and add DockerImageName . java and DockerImageNameTest . java to improve error handling and
updated the dialog message from " login _ failed _ username " to " login _ failed _ wrong _ credentials " in LoginActivity . java to
added ` setAutofocus ( " autofocus " ) ` method calls across multiple form classes to ensure that the ` setAutofocus
added unit tests for SAML configuration and zone provisioning in SamlIDPRefreshMockMvcTests . java to ensure correct behavior of zone properties in
added checks for empty and non - isDigit lists in ComparableVersion . java and created a new test for milestone in ComparableVersionTest . java to
replaced ` topLeftMode ` with ` bottomRightMode ` and adjusted return values in ` Sheet . java ` , and added margin properties
updated package imports from ` org . jetbrains . annotations . TestOnly ` to ` org . robolectric . internal `
refactor method handle retrieval in LocalCacheFactory and NodeFactory to use a constant for method handle to improve code readability and maintainability by
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to align the
added functionality to draw self loops in the graph based on graph properties to enhance rendering capabilities for self loops in the processing preview
updated constants and method names from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLID
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in naming conventions
set the translation position of the drag handle indicator to zero to improve the visual appearance of the drag handle indicator
removed unnecessary logging statements in CollectionViewer , CommunityViewer , and ItemViewer to streamline logging for better readability and performance
updated configuration messages for query optimization in HiveConf . java to clarify the behavior of push predicates down in the operator tree to improve user
added an assumption to check if the build server has issues with finding itself to ensure tests are only executed on non - OS environments
added Maven bundle options for Jetty alpn client in TestJettyOSGiAnnotationParser . java to enable debugging of Jetty al
improve executionmanager # updateprocessinstancelocktime and executionmanager # updateprocessinstancelocktime ( ) and executeasyncasyncjob (
refactor Transaction class to improve code readability to enhance maintainability and ease of understanding
replaced ` @ CustomFieldBehavior ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude specific
simonstewart : add a new method ` whichExec ` to ` AsyncExecute ` and modify ` FirefoxCustomProfileLauncher ` to
added a check to prevent duplicate fam entries in colFamToDynamicColumnsMapping to improve performance by avoiding duplicate entries
[ hotfix ] [ runtime ] remove unnecessary @ suppresswarnings ( ` ` rawtypes ' ' )
added a check for the client version of MIN _ SPLITTABLE _ SYSTEM _ CATALOG in the MetaDataEndpointImpl class to ensure proper handling
[ # 2321 ] update the googleid of the student course in the AccountsLogic . java file ( # 2323 )
updated import statements in AllXSSFTests . java to replace TestCellReference with TestCellReference to ensure compatibility with the latest XSS
added a block hardness check to the mobility flag condition in LensPiston . java to ensure that the block is only
added a new file LongPointerPressTest3049 . java that implements a UI with network error handling to test the long pointer press functionality
truffle : fix inlining of function inlining in trufflecompiler .
refactor null checks in BaseBuilder and XMLConfigBuilder for improved code readability to enhance code clarity and maintainability by avoiding
simplified the conditional check in ListBlockParser . java and added a test for deeplyIndentedList in SpecialInputTest . java to
added a new abstract class ` AbstractOptionalAssert ` and modified ` OptionalAssert ` to extend it to enhance the functionality of ` OptionalAssert `
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to mark the test as ignored due to issue # 1070
removed the ` GLOBAL ` dependency from the ` saveMessage ` method in ` TestCaseLogger . java ` to simplify the method signature and improve
camel - 14263 : camel - route - startup - order - last : fix the test error of routestartuporderlasttest
added a condition to check if the video format is a video before proceeding to ensure proper handling of video formats in the media playback process
added security property settings for disabled algorithms in ComHostnameVerifier and JavaxHostnameVerifier to ensure proper handling of TLS algorithms during testing
server : do n ' t create storage pool for zonestorage if it ' s local
updated logging statements in Driver . java and QueryResultsCache . java for improved clarity and consistency to enhance readability and maintainability of
added an option to skip model update after managing dependencies in the POM to improve dependency management by allowing users to skip model updates after managing dependencies
added a test for the last intent sender request code in ShadowActivityTest . java and implemented the send method in ShadowPendingIntent . java to
updated RocketFigure3d . java to modify GLJPanel and GLCanvas initialization and rendering hints to improve rendering flexibility and ensure
added synchronization to the controllerListeners list to ensure thread safety when accessing the list of listener listeners
added a static method ` @ BeforeClass ` to the ` TestCoreAdminApis ` class to ensure EasyMock does not work with Java
updated year retrieval logic in TimestampUtils and added local time formatting in SetObject310Test to improve accuracy of year handling and enhance date formatting
fix possible npe in jabber / jabber / jabber / protocolproviderservicejabberimpl . java
added " cur _ ws _ commit _ id " to the list of transaction types in TxnHandler . java to improve clarity and consistency in
replaced ByteChunk with ByteBuffer for buffer management in BufferedInputFilter . java to improve memory efficiency and handle buffer overflow exceptions more effectively
added a new method ` toSync ( CompletableFuture < T > future ) ` to ` AsyncUtils ` and created corresponding tests in ` AsyncUtils
added ActionGraphBuilder to multiple compiler factory classes to enhance the handling of ABI source paths in the build process
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to ensure that the upload functionality works
removed unnecessary try - catch blocks in SQLManager . java to streamline the code by eliminating unnecessary exception handling
added a check to return the local Maven directory if the file does not exist to ensure the correct Maven directory is used for the build process
ggb - 2329 hide the algebra label if it start with hidden prefix
fix ( metadata ) : fix npe in ctelementimpl # getmetadata ( )
replaced ` setFlags ( ) ` with ` addFlag ( buffer . BUFFER _ FLAG _ DECODE _ ONLY ) ` in ` Default
fix entityiterablebase . issortedbyid ( ) to not throw an exception if the iterable be sort by id
updated error message for missing method call in Reporter . java to clarify that the method is not specified for verify ( mock )
added a null check for backupFolder before logging it to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the ` Array . newInstance ` method to facilitate testing
added @ AddToRuleKey annotation to ToolType fields in ClangCompiler . java and GccCompiler . java to ensure toolType is
replaced hardcoded timeout values with a constant for PINCODE _ TIMEOUT to improve readability and maintainability of the code
add isampled ( ) method to PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to ensure consistent behavior across different prometheus
removed @ Ignore annotations related to MongoDB server requirements in multiple test classes to temporarily disable tests that require a mongodb server
http : / / issues . apache . org / jira / browse / amq - 4896 - fix test failure
changed the condition from checking if the table name starts with an empty string to checking if it is not artificial to ensure proper handling of
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session attribute handling in MongoSessionManager . java to improve clarity and correctness to enhance code readability and maintainability by using
replaced setFixedSize method with setSizeFromLayout method for surfaceHolder to improve layout responsiveness during rendering
refactor stopping logic to use CountDownLatch for clarity to improve readability and maintainability of the code
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 14836 : camel - defaultmessagelistener should not use stopwatch . taken ( ) .
refactor error handling in DelayedMonoPublisherTest to use lambda expressions instead of lambda expressions to improve code readability and maintainability by
replace assertTrue with a conditional check for WebSocketHandshakeException in WebsocketTest . java to ensure that WebSocketHandshakeException is not treated as a
refactor AllAppsTransitionController to use View . OnLayoutChangeListener for layout change handling to improve code readability and maintainability by reducing
corrected variable name from ' theHandler ' to ' handler ' in PolicyBasedAuthenticationManager . java to improve code readability and maintainability
int - 1188 add support for the ' default - output - channel ' attribute in xpathrouterparser .
updated cacheSeconds from int to String and modified cacheSeconds to use Beans ' s newDurationCapable to improve flexibility in cache duration
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to
removed the append method call from ByteBufferPool . java to streamline the code by eliminating unnecessary operations
added a check for the presence of " sun . boot . class . path " in the " sun . boot . class . path " property
updated user deletion queries and email addresses in JdbcScimUserProvisioningTests . java to enhance user deletion functionality and improve user email verification
replaced ` Arrays . asList ` with ` List ` for command - line arguments in ` FlightRecorderProfiler . java ` to streamline
added a method to check if the stream is empty in WebCamInputPanel and modified video drop handling in WebcamInputDialog to ensure
added a condition to check if the content view has content before processing the buffer in HttpParser . java and created a new test for chunked put
updated AtmosEndpoint . java for improved functionality to enhance performance and maintainability of the Atmos component
added support for " printf " , " print " , and " print " methods in Java2TypeScriptAdapter . java to enhance functionality by
added a new file TestCapacityUntilGCWrapAround . java with native methods for incrementing metaspace capacity in WhiteBox . java to ensure
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the calculation for endTime in SamplingStatCalculator . java to correctly account for the time being processed at the start
added unit test base on user forum issue
tmi - jpeg : fix handling of invalid icc _ profile chunk sequence
fix terra pick and terraform rod not be able to add a terra pick item . close # 143
added conditional checks for entry types in SpringModule and JoobyExtension to ensure proper registration of beans based on their type
replaced the use of ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` container . getParentClassLoader ( ) ` in ` Web
add nameupdater . properties file to nameupdater . properties file ( jmeter )
make sure ellipsoidregionselector . start be set to true when start
replaced instances of " http " with " https " in JavaSEPort . java to ensure compatibility with the latest Codenameone protocol
[ geos - 10767 ] add validation for sortby attribute in getfeature
updated the null check for the grantor variable in AbstractJdbc2DatabaseMetaData . java to simplify the code for better readability and maintainability
added graphics rendering functionality and improved image handling in DiagramGenerationTest . java to enhance image processing accuracy and ensure compatibility with different screen configurations
added a null check for sidedDelegate in FMLCommonHandler . java to prevent potential NullPointerExceptions when installing the Minecraft logger
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
fix flakiness of locktest # testlock ( )
added methods for generating whole word tokenization and joining tokens in StringUtil . java to improve tokenization functionality for better user experience
use response . senderror ( 404 ) instead of response . status ( 404 ) .
refactor command handling in SystemHighlighter to use a dynamic command index instead of a dynamic value to improve code readability and maintainability by
update version and version date constants in Constants . java to reflect the release and release of the application
updated buffer position from idx to dimensionSize in StarTreeRecordStoreCircularBufferImpl . java to ensure correct positioning of buffer based on
added drag - and - drop functionality to the QuickstepTestInformationHandler and SystemUiProxy classes to enhance functionality for managing drag - and -
[ java ] add assumption to allow socketappender socketappender to run only on java 7
added encryption support for PSK - AES256 and TLSv1.2 in TestCipher . java to enable secure encryption and security features in
replaced ` getDescription ( ) . getText ( ) ` with ` getLongDescription ( ) ` in ` NearbyMapFragment . java `
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of the ScimGroupMember variable
added support for schema scoring in HqlQueryRenderer and corresponding tests in HqlQueryRendererTests to enhance query functionality and ensure correct sorting behavior
corrected a typo in the null check message from " d " to " s " to ensure proper error handling for null values
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
modified the ` offsetStreamIndex ` method to include an additional parameter ` indexStartsAtOne ` and adjusted the logic for handling track selection to
pdfbox - 697 : fix typo , a suggest by valerybokov
[ hotfix ] [ table - planner - blink ] remove obsolete getmonotonicity method from flinksqloperatortable
added ` equals ` and ` hashCode ` methods to ` OneTimeTokenAccount ` and ` OneTimeToken ` classes to enhance object comparison and
added a condition to check if ' mLaunchedAssistant ' is not active before executing the fling condition to ensure that the touch consumer
added a new file SolarisShortDSA . java that implements key pair generation and verification using DSA to facilitate testing
added a method to toggle the search label in the ListFragment to improve user experience by disabling the search label functionality
server : lock the volume before create a snapshot
refactor the ` DetailsServiceConnection ` class to use a dedicated ` ServiceConnection ` class to improve code clarity and ensure proper resource management
updated the handling of SSLPeerUnverifiedException in HttpClientTLSTest to utilize AtomicReference for better thread safety to improve test reliability
removed the equals method from ConjunctionScorer to streamline the comparison logic for scorer objects
added a null check for the variable ' v ' in Binder . java to avoid potential NullPointerExceptions when binding items
fix race condition in metadataraftgroupmanager # getRaftgroupids ( ) and # getraftgroupids ( ) . ( #
updated cache size calculations to use desiredSize instead of maxCacheSize and added logging for cache shrinking to 90% to improve cache management accuracy and
updated API path from " / api / v2 " to " / api / v3 " and modified account handling logic in CryptoFacilities
added a method ` empty ( ) ` to check if the size of the ` freenect2 ` is zero to provide a way to
added support for handling empty dictionary pages in AsyncPageReader and updated test annotations in TestDrillParquet and TestDrillParquetReader
updated the ` buildChannelName ` method to accept an additional ` SubscriptionType ` parameter and improved argument validation to enhance flexibility and ensure
add config option to disable charging animation when an item be charging on the mana pool .
[ java ] make cluster node restart test more robust .
added error logging for InterruptedException in WaitForHelper . java to improve error handling by providing more context on the interrupted exception
updated test assertions in DefaultServletTest to use assumeTrue instead of FS . ensureDirExists for directory creation to improve test reliability by ensuring
updated the injection order for dialog and screen styles in ResourcesInjectorFull . java to improve code readability and maintainability
replaced ` String ` literals with ` FileResource ` and ` FileResource ` in ` BaseLiquibaseTask ` and ` DB
fix blockworldvector . equals ( ) to use getx ( ) and getz ( ) instead of getx ( ) and gety
updated LongConcurrentLRUMap . java to improve code clarity and enforce immutability to enhance maintainability and prevent potential null pointer exceptions
added regex handling for literal arguments in resourceConfiguration to ensure proper parsing of literal arguments in resource configuration
updated the cache retrieval logic in FileCredentialsCache . java and modified the EmptyCC . java file handling in EmptyCC . java to improve cache
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
[ pan - 2630 ] add support for fast sync for eth peer ( # 2636 )
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 538 .
do n ' t expand ` ` AreEqual [ x , y , z , w ] ' ' format expression
added a condition to clear pending rendering operations based on minimized status to ensure pending rendering operations are only cleared when the implementation is minimized
fix flaky test in hazelcasttestsupport
fix mapstore . writebehind write - behind - time window ( # 11818 )
set the icon of the JLabel to null in GroupTreeCellRenderer . java to improve the visual appearance of the JLabel component
updated test methods in TestBlacklistAwareRedirectResolver to set strict match to false to improve test coverage for redirect matching behavior
fix # 915 - the jetty - maven - plugin : stop goal do n ' t stop everything completely .
updated the calculation of ` moveSize ` and ` fillRateToCompare ` in ` RandomAccessStore . java ` to improve memory management and
added a method to read fields from an ObjectMap of an Object to enhance flexibility by allowing multiple fields to be read from a specified type
[ hotfix ] [ runtime ] move componentclosingutils to runtime . operators . coordination
cloudstack - 4892 : remove vm from snapshot when vm be not in error state
cloudstack - 4892 : fix nullpointerexception in getip6rangefromcidr ( )
renamed ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` and updated references accordingly to improve clarity and
increased the shard retry duration from 15 seconds to 30000 milliseconds in CollectionsAPIDistributedZkTest . java to allow for
removed the ` input ` parameter from the ` errorMessage ` methods across multiple parameter classes to simplify error handling by eliminating unnecessary parameters
corrected the positioning of the image from 0 to - x in URLImage . java to ensure proper rendering by using the correct positioning
updated field name comparison from solrDocument1 to solrDocument2 to ensure compatibility with both solrDocument1 and solrDocument2
refactor code to introduce a private method ` isItemZeroHighCardDim ` to improve readability and maintainability of the code
[ hotfix ] [ runtime ] add exception to streamconfig exception
refactor the handling of expanded tags in Preprocess . java to improve clarity and efficiency to enhance code readability and maintainability by redu
removed unnecessary whitespace in the read method signature in MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a structured way to
do n ' t encode empty extension list if fhir comment be not support
updated regex patterns and added null checks for external meta entries in LibraryManager . java to improve code readability and ensure proper handling of external meta
added alias " node _ popup _ scripting " to entryNavigator in ScriptingMenuEntryVisitor . java to enhance the functionality of scripting
updated the handling of hidden scrolling and alpha animations in OverviewActionsView and RecentsView to improve user experience by ensuring actions are only
camel - 14263 : camel - jms should use jmsmessage . class instead of cast to jmsmessage .
removed unnecessary ` throws IOException ` declaration in multiple Java files to improve code readability and maintainability
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` to remove obsolete code to streamline the project
updated ` GzipHandlerTest ` to be ` final ` and added a new ` MicroServlet ` for handling micro requests to improve immutability
replaced ` consumerCapacity . getAndAdd ( n ) ` with ` BackpressureUtils . getAndAddRequest ( n ) ` in ` On
added logging functionality and improved formatting in SpeedmentImpl . java to enhance debugging capabilities and enhance code readability
add dspace - oai - config to allow oai to load dspace oai configuration
hbase - 2594 improve performance of storescanner . setbatch ( ) and storescanner . setbatch ( )
camel - 16462 : camel - test - add jmx support to camel - test - infra
replaced hardcoded slash with a constant for the CANONICAL _ PACKAGE _ SEPARATOR to improve code readability and maintainability by centralizing
added YARN bin path handling and app ID logging in HiveConf , RemoteSparkJobMonitor , and LocalSparkJobStatus classes to enhance
added support for " maria " database in DbConnectionManager to enhance compatibility with multiple database types
updated log message formatting and modified time calculation logic in SplitLogManager . java to improve readability and correctness of log output
added a new file ExecuteAndReturnStringTest . java to implement a UI test for network error handling to ensure that the UI correctly handles network
added a new file ` InvokespecialInterface . java ` containing interfaces and methods using a lambda expression to demonstrate the use of
refactor EvictingBoundedList class for improved clarity to enhance maintainability and readability of the code
use setencodingmanager ( ) instead of setencodingmanager ( ) for turn cost support
added a null check for backgroundDisabled in SelectBox . java to ensure selection is valid and prevent illegal argument exceptions
added a null check for the header method in RpcServer . java to ensure that unsupported methods do not throw an exception
updated hotseatCellSize and hotseatIconCenter calculations in TaskbarViewController . java to improve layout and spacing of hotse
simplified the construction of ` valString ` to use ` values . get ( partitionColumnIndex ) ` instead of ` substring ( ) `
add version check to namedtaskdecorator and taskdefinition to ensure compatibility with v4.1
updated the index directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for
changed the boolean variable ` equal ` from ` false ` to ` true ` and updated the comparison logic in ` DisplayModeTest . java `
updated UnicodeToLatexFormatter and HTMLUnicodeConversionMaps to handle special characters correctly to ensure proper formatting of Unicode characters and improve code clarity
added null checks and initialization logic for values in OAIDCCrosswalk . java and Item . java to ensure proper handling of ISO control
simonstewart : do n ' t try to select the selenium window from the last frame if it ' s null or empty .
added a clear button to the BookmarksPanel and updated the StringSearchPanel and BookmarksPanel to enhance user interaction by allowing users to clear
refactor port handling in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building full request URLs to improve code readability and maintainability
updated ` SoftAssertionsTest . java ` to use ` parseDatetime ` for date comparisons and improved error message formatting to enhance date validation
updated adaptOrders method to include a reverse parameter for order adaptation to enhance order adaptation by allowing reverse orders
added null and pos checks for tree vartype in Delombok . java and created a new Java11Var class with a test method to improve
simonstewart : remove unused import , a suggest by valerybokov
updated configuration initialization to set the default value to false and removed debug logging for overriding Hadoop configuration properties
replaced call to ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) `
added unit test base on user forum issue
replaced usage of ` Globals . CATALINA _ BASE _ PROP ` with ` context . getCatalinaBase ( ) `
added unit tests for the getBestDateTimePattern method in ShadowICUTest . java and modified ShadowICU . java to handle locale - specific
updated the color mapping in the PlotSquared class to include additional color information to enhance the visual appearance of the PlotSquared style
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration constructors to enhance traceability by allowing
tika - 1767 -- set default time to utc and add test for tika - core - properties .
added new file ` SampleApplication . java ` and ` SampleApplication . java ` , and modified ` BuildInfoMojo . java ` to
updated the calculation of xDist to use the absolute value of mScroller . getFinalX ( ) to ensure correct positioning of the
remove the guirwtester . java file that be no longer need
removed the nullableDecl annotation from the countPlaceholders method in LazyMessage and StandardSubjectBuilder classes to simplify method signature by removing unnecessary null checks
updated log message formatting in TestStream . java to improve readability of log messages
rename thymeleaf . templateparser to thymeleaf . templateparser . markup and move thymeleaf . templateparser to
added a new test method ` testXPathString ` in ` XPathTest . java ` to validate the XPath syntax to ensure correct functionality of XPath
added @ Nullable annotation to FutureUtils . java to indicate that the method should not be nullable
add warn about invokedynamic to call - graph construction
updated email addresses from " @ gmail . com " to " @ example . com " in ContextTest . java to reflect the correct email
updated HTTP response format in HttpConnectionTest . java and modified URI decoding in URIUtil . java to improve readability and correctness of the
added the ` getColumnDataType ` method implementation in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a
replaced ABSTRACT modifier with DEFAULT modifier in AsyncClientInterface and SyncClientInterface , and added unsupported operation exception handling in SyncClientInterface ,
refactor HSSFPictureData class to improve code readability to enhance maintainability and facilitate future updates
replaced ` long ` with ` Instant ` for startTime and stopTime in ` Statistics . java ` to improve time precision and consistency in time
added version handling for media info options in LibMediaInfoParser . java to ensure compatibility with newer media formats and improve logging clarity
refactor IdeaDependency handling in ProjectReader . java for improved clarity and functionality to enhance code maintainability and ensure correct proxy creation
added a new ` SerialHeap ` class and updated ` Universe ` and ` GenCollectedHeap ` mappings in ` Universe ` to
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson $ Types class to suppress serialization warnings for better error handling
change mouse wheel event to use mouse position instead of mouse . getposition ( )
datamongo - 1608 - fix nullpointerexception in findbyfirstname ( )
[ hotfix ] [ table - common ] add multiset type info to maptypeinfo
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to ensure
added handling for delimiters in CMapParser and introduced a new test for parsing Nasty CMap files to improve parsing accuracy and ensure proper
added a new ` OperationsServiceConnection ` class for managing operations in the ` ContactsBackupJob ` to improve service management and ensure proper management
refactor constraint handling in ` ForAll ` and introduce new classes ` T6938454a ` and ` T6938454b
added a new method ` isConfigHidden ( ) ` to the ` AccountList ` class and updated conditional checks in ` AccountList ` to
added error logging for unsupported number of displays in DisplayController . java to improve debugging and monitoring of unsupported display states
updated schema removal logic in PMetaDataImpl . java and added a test case in PMetaDataImplTest . java to ensure that the schema is
ggb - 2338 fix npe in loginpassive mode
added a new file Box2DTest . java and modified GDXTester . java and Box2DTest . java to include it to
add some debug log to help diagnose nullpointerexception
[ hotfix ] [ runtime ] increase default _ buffer _ request _ timeout from millis to minute
added DEFAULT _ GENERATOR _ NAME and DEFAULT _ GENERATOR _ VERSION constants in SpeechSettings . java and updated its usage in Speech
added a help button to the OpenOfficePanel to enhance user interface by providing users with a help message
[ java ] add ` ` child ' ' option to channel option .
changed method signatures of ` keepAliveUserDataStream ` and ` closeUserDataStream ` to use wildcard generics to enhance type safety and improve code readability
replaced direct class name retrieval with a transient class reference in ScanResultObject . java to improve code readability and maintainability by avoiding
refactor connection handling and error logging in DecodeServlet . java to improve code readability and maintainability
added null handling functionality to the Querydsl class and created a new integration test class to enhance test coverage and ensure proper handling of null values in
added null checks for actor in ParallelAction and SequenceAction classes to ensure proper handling of actions when the actor is null
test ( refactor ) : fix typo in cttypetest
added synchronization to the HDFSEventSink class to ensure thread safety when accessing the sfWriters list
added new files ` Issue888 _ JavaI ` , ` JJ ` , and ` JK ` implementing the ` aa ` method
added functionality to revoke an existing certificate in the CertificateManager class and updated related tests in CertGenerationTest to enhance certificate revocation process and ensure correct
added checks for HTTP / 1.1 response body handling in AbstractHttpTest and implemented a new test case in HttpServerTestBase to ensure proper
added error handling for invalid script tags and language in ScriptTransformer . java to improve robustness by providing clearer error messages for invalid script tags
added " DBCP " and " HikariCP " configuration to the METASTORE _ CONNECTION _ POOLING _ TYPE configuration and
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added methods to filter lock and unlock file actions in FileMenuFilter and updated OCFileListFragment to handle lock events to improve user experience by
updated versioning logic in mmm Version . java and ppp Version . java to improve versioning accuracy and maintainability
clear endpoint cache when update keyspace
replaced the direct calls to ` waitForSignal ( ) ` with a new method ` waitForState ( Thread . State . WAITING ) `
refactor ` getCoercedAttrValues ` method to accept ` SkylarkRuleContextAttr ` instead of ` Map < String ,
refactored sessionstorage to extend storage rather than localstorage .
added null check for existing views before calling checkViewNewRowType to prevent potential NullPointerException when accessing existing views
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by catching all exceptions instead of just just returning
updated the way the query string is retrieved in SpellCheckComponent . java to ensure that the query string is retrieved only if it is null
added checks for illegal characters and whitespace in header values to ensure proper handling of header values and prevent errors
replace instanceSize with arrayBaseOffset in HybridLayout . java and introduce afterFieldsOffset in HostedInstanceClass . java to improve
[ java ] add experimental annotation to astcommentcontainer . setcontainscomment ( ) .
hhh - 14850 - add log for fetchtype . lazy and fetchmode . join
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions to verify database and table name retrieval in TestCompactionTxnHandler . java to ensure correct retrieval of database and table names from the
camel - 1641 : timer consumer should not throw exception when shut down a timer .
added a condition to check if the block is processed before adding traces to ensure traces are only added if the block is processed before adding them to
refactor ProviderManager to use CollectionUtils for null checks and add tests for handling null and non - null providers to improve code robustness and ensure
simplified the database check logic in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining if the database is a Postgres
added assertions and configuration for LOCAL _ INDEX _ LIMIT in multiple classes to ensure correct handling of local index limits and improve query performance
added a check to prevent adding a collection with the same name and a different type in AlterTableStatement . java to ensure that collections with
updated cursor position calculations in VDUBuffer . java and removed cursor change handling in vt320 . java to improve cursor responsiveness and ensure
removed the static final String USE _ RETRIES from HttpShardHandlerFactory to simplify the configuration for better readability
updated the version number regex in JavaVersion . java and added an assertion in TestJavaVersion . java to ensure compatibility with the latest Java version
added a check to return early if all input gates are empty in StreamTask . java to avoid unnecessary processing when no input gates are
added a JUnit test annotation to the TestReceivingMessageSourceParserTests class to facilitate testing of message source parsing functionality
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties are null
updated IOException handling to include the original cause of the IOException to improve error reporting by providing more context on the original exception
updated error message formatting in multiple Java files to improve code readability and maintainability
added a new TxConfidenceListener to manage transaction confidence updates in TxIdTextField to ensure accurate tracking of confidence updates in the wallet service
added a new constant G1 _ PERM _ GEN with a value of " G1 Perm Gen " in JmxSupport . java
removed unnecessary import statements and simplified return statements in NearbyController . java to streamline code and improve readability by eliminating unnecessary
pdfbox - 4892 : make class public , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to include a check for home activities to ensure proper handling of home activities
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related constants to improve clarity and consistency in naming conventions
changed method names from ` networkCountryIso ` to ` networkCountryIsoInLowercase ` and ` simCountryIso ` in ` ShadowT
removed the setUnfreezeAmount method call from UnfreezeBalanceV2Actuator . java to streamline the code by eliminating unnecessary
updated description strings for published timeslot and room in ConferenceSchedulingXlsxFileIO . java to clarify the purpose of the published
simonstewart : use common fileutils instead of java . common . io . files
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
refactor Observable class to improve code readability to enhance maintainability and facilitate future updates
refactor the ` $ pushAll ` method to use ` addMultiFieldOperation ` for multi - field operations to improve code readability and
added a null check for randomUUID before setting the hubChangeLog ID to avoid potential NullPointerExceptions when randomUUID is null
added hover event handling in InputConsumer and OverviewInputConsumer classes and updated InputConsumerProxy to utilize this new method to improve hover event
updated the initialization of boostrapConf in CoreContainer . java to include a delay when bootstrap _ conf is set to false to ensure proper
camel - 14284 : camel - netty - http : fix default value of maxheaderssize
hbase - 17452 increase default hbase client retry limit from 5 to 15
replaced the use of ` toPath ( ) . toPath ( ) ` with ` new File ( File . separator ( ) . getAbsolutePath ( )
make encodedgraphcachetest . testencodedgraphcachetest more robust
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added currency handling for Kraken assets in KrakenAdapters . java to ensure accurate currency metadata for Kraken assets
added ` toString ( ) ` method to ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
updated variable names from ` entry . getKey ( ) ` to ` dimensions ` in ` AlertTaskRunnerV2 . java ` to improve cl
[ beam - 10663 ] add check for non - blank measurement and database in influxdbpublishers
corrected a typo in the method name from ` doTransform ` to ` downcast ` across multiple converter classes and added a null check
added filter conditions for unique local addresses in NetUtils . java to enhance address filtering by excluding unique local addresses
refactor column name handling in DataTextFormatter by introducing a new method ` quoteColumnNames ` to improve code readability and maintainability by
added methods for setting properties and setting properties in WrapSystem , updated method handling in StrUtils , and modified method names in CompileMethodEntity to
added a constructor to the UpdateRequest class that initializes the POST method with a URL to ensure proper initialization of the UpdateRequest with a specific URL
changed the visibility of the EnumSerialization enum from static to instance to allow access to the EnumSerialization enum from other classes
added a method ` addExperimentalFormatWarning ` to ` RequestHandlerUtils ` and updated its usage in ` DataImportHandler ` and ` Replication
updated debug logging to include formatted module names and improved string formatting to enhance readability and maintainability of the logging output
increase the table row height to match the default label font size .
refactor code for improved readability and consistency in DefaultBrokerHeartbeatManager . java to enhance code clarity and maintainability by reducing
added mean _ partition _ size and partition _ count variables in CqlInputFormat . java to calculate partition size and split count based on row
simplified the conditional check for the JUnit class name in JUnitTestsShouldIncludeAssertRule . java to improve code readability and
add hashcode ( ) and equal ( ) for ruleterminalnodelefttuples
added StageIDsRearranger import and resolution logic in TezCompiler . java to ensure proper stage ID rearranger resolution based on configuration
update the mbean name from " org . apache . cassandra . concurrent " to " org . apache . cassandra . net " in MessagingService .
updated memory consumption logic in LotsOfOutput . java to include a check for the total memory before consuming to ensure that memory consumption does not
added import statements for Document and DimConfig in multiple classes to enhance documentation clarity and maintainability of the codebase
replaced ` setAnonymousReadOnly ` with ` setAnonymousReadOnly ` in ` LdapAutoConfiguration ` and updated related methods in ` LdapProperties `
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the access modifier of the @ RunWith annotation from public to private and changed the visibility of the EchoInputDoFn class from public to
added finishMocking method to MockitoSession and DefaultMockitoSession classes and improved null handling in DefaultMockitoSession to enhance mock
removed extra dependencies from the ` withDeclaredDeps ` method in ` GoTestDescription . java ` and added new test cases in ` GoTest
refactor SPDYAsyncConnection and HTTPSPDYAsyncConnection to separate readBuffer , writeHandler , and writePending variables to improve code
replaced ` BlockLiquid . getStaticBlock ` with ` BlockLiquid . getFlowingBlock ` in ` BlockLiqu
updated background class handling and improved parameter parsing in AndroidLocationPlayServiceManager and BackgroundLocationHandler to enhance flexibility by allowing customizable background
[ java ] fix typo in aprendpoint javadoc
[ hotfix ] [ cli ] add support for streaming plan in cli
fix potential npe in craftingmanager . getshapedrecipes ( )
[ hotfix ] [ test ] fix flakey test failure in kafkapartitiontestutil
simplified conditional checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern to match " pg _ temp _ " in NeuteredLinesFilter . java to ensure proper matching of temporary file names
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated type handling in DataTypeFactory and ColumnSnapshotGenerator to support " NCLOB " type to enhance flexibility in handling different data types and
add metric to wavefront distribution summary if it ' s not publishing
updated the handling of divide upstreams in ShenyuClientRegisterSpringCloudServiceImpl and modified the return statement in Divide
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of sensor events with specified rate and maximum latency
added multiple test methods for SSL connection handling in SelectChannelServerSslTest to improve error handling and provide clearer logging for socket exceptions during SSL
camel - ignite : fix potential npe in camel - ignite
modified the handling of the total line number and the reach end condition in AbstractClient . java to improve clarity of output messages based on the
pdfbox - 4892 : catch unsupportedflavorexception instead of ioexception , a suggest by valerybokov
added unit tests for the ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest ` and implemented exception handling in ` ShadowDisplay ` to ensure
added a finally block to close the classLoader variable to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer to include expected values and added a toString method in SemiJoinHint to improve debugging and provide clearer
added a default constructor to the Message class to ensure proper initialization of the Message class
do n ' t report class priority for java . awt . component in serializableidiom
updated PhoenixDecimalObjectInspector and PhoenixObjectInspectorFactory to include PrimitiveTypeInfo and improved null handling logic to enhance
updated CompressionResponseStream to use OutputStream instead of GZIPOutputStream and added a check for response committed before setting the Content - Encoding header to ensure proper
updated method signatures and variable names in Authenticator . java to improve clarity and consistency to enhance code readability and maintainability by using more d
removed conditional check for " EJS " and " org \ omg \ " paths in DCD . java to streamline code by elim
added a method to retrieve the thread group name in ThreadLeakTest . java to improve thread management by providing a default value when the thread
added logging functionality and improved error handling in MethodInvocationPrivilegeEvaluator to enhance debugging capabilities and provide clearer error messages during security interceptor verification
changed package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` in
updated imports in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to improve code clarity and maintainability
server : add iso disk to storage pool for user vm
removed the previousHandler and modified signal handling logic in SigInt . java and SigIntTest . java to simplify the signal handling logic and improve
replaced static import of ArrayUtils . isEmpty with Apache Commons Lang . isEmpty in NodeTool . java to improve code readability and maintainability
replaced ` @ ContextConfiguration ` with ` @ SpringBootTest ` and updated import statements in ` AxonAutoConfigurationWithSpringCloud
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and maintainability
[ solve ] remove unused planningentityconfig # resetinitializedplanningentities
added buildTimeMs and buildTimeMs parameters to TwoLevelArtifactCacheDecorator and ManifestRuleKeyManager classes to enhance tracking of artifact build time
updated field handling in GroupByOperator to use getType ( ) instead of getFields ( ) and added a condition for numEntriesHashTable to improve
added null checks before adding block appearance in Wallet . java to avoid potential NullPointerExceptions when the block is null
added support for the CNC currency in the currency handling classes to enhance functionality by integrating CNC currency in the application
updated skewAllowance from 5 to 15 and modified related classes to utilize CasConfigurationProperties for improved configuration handling to enhance flexibility in
added sorting functionality to the songs field in SongListActivity and updated sorting behavior in Utils to enhance the sorting functionality by allowing users to
removed unused imports and modified the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline the code by eliminating
refactor block classes to extend ` LegacyBaseBlockWrapper ` instead of ` BaseBlock ` to improve code organization and maintainability by centralizing
added a check for the existence of a tag before retrieving its snapshot ID in IcebergBranchExec . java to ensure that a valid tag
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest
[ fix ] add support for boxes in Photon mapping demo .
added validation for requirePasswwordChangeRequired in IdentityProviderEndpoints . java and improved logging in IdentityProviderEndpointsMockMvcTests . java
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that all fields are not initialized in constructors are removed
modify DatabaseException to handle closed connections correctly to ensure proper URL is used for SQL execution errors
http : / / issues . apache . org / jira / browse / amq - 4892 - add test case for springm
updated regex patterns for user and password in CredentialInjector . java and modified test cases in CredentialInjectorTest . java to ensure correct parsing of credentials
added a new menu item " Item4 " and a key binding for the Enter key in ActionListenerCalledTwiceTest . java to support additional
updated print statements in TestCoreParser . java to include class canonical names and added a conditional check for results to improve clarity of output and
fix checkstyle issue in simplenode . java
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow access to the PopulatorContextStackItem
changed the data type of ` numDocs ` from ` int ` to ` long ` and added a test for small sample from corpus to
reformatted the lambda expressions in QuestManager . java for improved readability to enhance code clarity and maintainability
[ hotfix ] [ test ] move networkbufferpooltest to testlogger
replaced direct call to ` append ( __ EXPIRY , 0 ) ` with ` append ( __ EXPIRY , 0 ) . append (
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class and integrated it into the ` CompilerDirectivesSubstitutions
updated time zone identifier for Asia / Amman from ARAST to EET across multiple language files to align time zone representation with the
updated the id variable from 90000010 to 90000011 in DeprecationLogger . java to improve clarity and maintainability of the code
hhh - 14836 - jdbcexception should not be convert to lockoptions if the transaction be rollback only
remove system . out . println from downloadexternalfile
set apple . laf . usescreenmenubar to false on macos
added test case for piecewise integration in geogebra ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a test for config white list modification in TestJdbcWithSQLAuthorization . java and modified modWhiteListPattern in HiveConf . java to
remove duplicate mapping for invalid classes in EntryLoader . java to improve code clarity and maintainability
updated the team reference from ` Team . sharded ` to ` player . team ( ) ` in the ` findClosest ` method to
updated Cookie . Builder to use domainHelper ' s getHostName ( ) instead of a hardcoded domain " comp1 " to ensure the cookie
added nullable validation logic in MissingColumnChangeGenerator and MissingTableChangeGenerator classes to ensure correct handling of nullable columns based on search condition
refactor multiple security token - related classes for consistency and clarity to improve maintainability and readability of the codebase
added deleteByQuery and commit methods in CustomCollectionTest . java and made fields static final in CompositeIdRouter . java to improve query functionality and
added snapshot handling for bytea and blob types in ExecutablePreparedStatementBase . java and created a corresponding test in PostgreSQLIntegrationTest . java to improve
updated conditional checks and formatting in DefaultServlet . java to improve code readability and maintainability
added drag - and - drop functionality to the JabRefFrame to enhance user interaction by enabling transfer modes for drag - and - drop
updated ` ExecutionUnitRunner ` and ` ExecutionUnitTest ` to use ` Description . createTestDescription ` instead of ` createDescription ` to
replaced the use of ` ! myVersion ` and ` ! buildTimeString . isEmpty ( ) ` with ` StringUtils . isNotEmpty ( )
removed ` public ` access modifier from several methods in ` TimeUtils ` and updated imports in ` GitBlitSuite ` and ` TimeUtils
refactor SecurityFrame handling in RefectionMHTests to use a dedicated method for improved clarity to enhance code readability and maintain
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with different file formats in
fix native - image debug info for hostedmethod
added getIcon ( ) method to Data and Data classes and updated DataTableTopComponent to initialize icon settings to improve icon loading functionality and ensure proper display
added a null check for the last occurrence of a period before retrieving the request name to avoid potential NullPointerExceptions when the substring method does not contain
modify the replacement logic in FindAndReplace and add a new test for dollar signsTolerated in FindAndReplaceTest to ensure consistent
do n ' t cast to xmppconnection when set remote address and port to 5222
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the schema extraction process
added a method ` copyDir ` to create directories for source and destination paths in ` IO . java ` to improve file copying functionality and ensure
added error handling for unknown datum class in JacksonUtils to improve robustness by throwing a specific exception for unknown datum classes
refactor ABI handling in DefaultJavaLibraryBuilder to use requireRule for library target retrieval to improve code clarity and maintainability by central
simplified height adjustment logic in SelectBox . java to improve code readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure consistent formatting of database and table names
added schema handling for Oracle database types in DbSqlSession . java to ensure compatibility with oracle databases and provide clearer logging when schema is not
removed the Logout method from the HomeFragment . java file to streamline the code by eliminating unnecessary logout logic
updated MockStreamingRuntimeContext parameters across multiple test files to use a specific task number to ensure compatibility with the latest features and improvements in
added null check for candidates in FastImportAction . java to ensure robustness by preventing potential NullPointerExceptions
refactor condition checks in ContainerLifeCycle to use a boolean variable for managed state to improve readability and maintainability of the code
rename iexecutionattributemialect to iexecutionattributemialect in order to improve code readability and maintainability
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is properly cleared
added null checks for the ` loc ` variable in ` CmdGetTime . java ` to avoid potential NullPointerException when ` loc ` is null
added null checks for measurement in ` TabletInsertionDataContainer ` and introduced ` DisruptorQueue ` and ` CachedSchemaPatternMatcher ` to
deleted the Session2Token . java file to the class is no longer needed in the project
do n ' t destroy volume when fail to create volume
added a new ` Install ` class and integrated it into ` SystemShortcut ` and ` InstantAppResolver ` for managing instant app support to enhance
added a ` NullAuthoritiesPopulator ` class to ` LdapAuthenticationProvider ` for retrieving user authorities to ensure that null authorities are
updated retrolambda handling in Executor and CN1BuildMojo to use a system property instead of a hardcoded path to improve flexibility
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to streamline the build process by
updated the method signature of ` sortLiveDocs ` to use ` Bits ` instead of ` MutableBits ` to improve code clarity and ensure
added a method to handle null results in JMESPathExtractor to improve handling of null results in the extraction process
updated import statements in AuthorizeTag . java to include specific utility classes and added a null and empty check for user authorities to improve code cl
refactor assertions in multiple test classes for improved clarity and consistency to enhance code readability and maintainability
cloudstack - 4892 : fix typo in vmsnapshotmanagerimpl . java
refactor annotation handling in RobolectricTestRunner to improve clarity and functionality to enhance code readability and maintainability by using more
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to ensure compatibility with the latest J
refactor partition key comparison logic in HiveAlterHandler and add test cases in TestHiveMetaStore to improve code clarity and ensure correct
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to enable the display of icons in
updated the condition to check if the component is active in SimulationStatus . java to ensure proper handling of component activation status
replaced ` SharedBlockingCallback ` with ` Callback ` in multiple classes to simplify code and improve readability by using a more concise callback
added workspace listener functionality to ` PreviewControllerImpl ` and modified ` PreviewUIController ` to use it to improve workspace management and ensure graph updates
added checks for VM anonymous classes and modified class name checks in ReflectUtil . java to ensure proper handling of anonymous classes and improve code clarity
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
added import for ResourceLoader and modified file path formatting in CatalinaAcegiUserRealm . java to ensure proper resource loading and improve
updated logging statements in AmbariServer . java for server startup and manager initialization to improve logging clarity and ensure proper initialization of ActionManager
added null checks for initialization , modify , and node in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions during processing
refactor method signatures in SliderAppsViewControllerImpl . java for improved clarity and functionality to enhance code readability and maintainability
added a check to ensure the backgroundManager is attached before attaching it to avoid potential null pointer exceptions
added methods to set the current tab in AllAppsTabbed , Launcher , PagedView , and Workspace classes to improve tab management and
added a null check for the URL in BaseDataSource and created a corresponding unit test in SimpleDataSourceTest to ensure that the URL is valid and
added JRE support to the PebbleModuleTest and modified the instantiation of PebbleTemplateEngine to ensure compatibility with newer Java versions
added EditNameDialog functionality to the FileDisplayActivity for directory creation to enhance user experience by allowing users to create a new directory with a specified
added functionality to toggle bar borders in multiple activities to enhance user experience by allowing dynamic adjustment of bar borders based on data sets
updated SSL URI and host from " www . okcoin . com " to " www . okex . com " in OkCoinExchange .
refactor AcceptedForagerTest to use a factory method for StepScope creation to improve code readability and maintainability by centralizing step
replace FileChannel with SeekableByteChannel in Files . java and add byte reading functionality in BytesAndLines . java to improve performance and ensure
refactor getFlattenFieldTransferPair method to accept a FieldReference parameter and improve variable declarations to enhance code clarity and ensure immutability
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
reformatted conditional statements in SerializationConfigurationParser . java for improved readability to enhance code clarity and maintainability
added heap limit configuration for debug devices in QuickstepProcessInitializer to optimize memory usage for debugging purposes
refactor summing in Collectors . java for improved readability to enhance code clarity and maintainability by reducing redundancy
log4j2 - 1343 add a flag to check if a bundle can be load by default .
added a conditional check for the top level deletion in PrecompactedRow . java to ensure the buffer is only serialized when the top level deletion
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
added support for MeterRegistryLifecycle in MetricsAutoConfiguration to enable monitoring and resource management of MeterRegistry instances
change log level from warn to info for config center
added exception handling for certificate generation in CertificateFactoryTest . java to ensure proper exception handling for certificate generation failures
camel - 16462 : fixed simple predicate parser to handle ambiguous binary operator
simplified the onTabUnselected method in EditorActivity and added focus handling in IDEEditor to improve code readability and ensure window
include user name in error message when open access log
updated file paths in SkeletonModelGpuSkinningTest . java and added null check for submeshnames in OgreXmlLoader .
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these classes are outdated and should no longer be used
added support for generating declaration files in the JSweet transpilation to enhance the transpilation by allowing users to specify the output directory for
[ hotfix ] [ stream ] increase default fetch timeout for kinesis consumer factory
added a new timestamp field " . html " to the StreamingDataflowWorker . java file to enhance the streaming data flow functionality by providing a
increased the maximum number of metastore server threads from 100 , 000 , 000 to 1000 , 000 in HiveConf . java to
changed the return type of the onTaskSnapshotChanged method from void to boolean and added a return statement to ensure that the method returns true for
replace mMaxShadowRadius with shadowRadius in SwipeUpAnimationLogic . java to ensure the correct shadow radius is used for the animation logic
added a new field ` aggregatorInput ` and a test method ` chainNestingAndAggregation ` in ` ChainParserTests . java ` to
updated loop condition in MarketSellAssetActuatorTest . java to use ' end ' instead of ' limit ' to ensure correct iteration
use isInteractive ( ) instead of isinternal ( ) in polyglotcontextimpl . java
updated the condition to check if previousCachedFilePath is null or equal to simplify the condition for better readability and maintainability
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance functionality by integrating DisplayController functionality
updated toolTipText assignment logic for root directory in MetalFileChooserUI and SynthFileChooserUIImpl to ensure the tooltip text is
replaced getToolkit ( ) with Toolkit . getDefaultToolkit ( ) in LooksFrame . java to ensure the application uses the
changed the type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > in both Tensorflow
refactor JPASQLBase . java to improve entity handling and add new test cases for fetch results to enhance test coverage and ensure correct
removed redundant drag index check and adjusted drag index logic in FreeformFinSetConfig . java to streamline drag - and - drop logic for
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest version of the mo
updated error message in Runtime . java to include spendAllGas ( ) method to improve clarity and functionality of error reporting
updated error formatting in ` ElementsShouldSatisfy ` , ` ZippedElementsShouldSatisfy _ create _ Test ` , and `
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should no longer be used
refactor unsafe plugins registration to use a separate method for clarity to improve code readability and maintainability by reducing redundancy
added Hint annotations to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and AndroidBinaryModularIntegrationTest classes , and
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to reset the value of mCenterPages
added a call to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure that the migration process is
updated variable names from ` ipAddress ` to ` baseUrl ` in multiple classes to improve clarity and consistency in naming conventions
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy ` to
updated test table handling and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to support different
added a new test method ` testCaseInsideBrackets ` to the ` CaseExpressionTest ` class to ensure correct parsing of cases inside brackets in
refactor console flip event handling to a separate method ` startCopyMode ( ) ` to improve code readability and maintainability by encapsulating
updated the ` writeXmlOutput ` method to accept a ` Writer ` parameter and modified its implementation to use it to improve XML output handling and
camel - 14284 : fix npe in abstractlistaggregationstrategy when exchange be null
camel - 14263 : camel - aws2 - exchangemq should use camelexchangemq and not exchangemq
move basicconfigurator to classic package , so that it can be re - organized
[ hotfix ] [ dataflow ] fix type qualifier analysis for phi _ node
added import statement for SharedStringSource in TestXSSFRichTextString . java to facilitate the use of SharedStringSource
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with specified parameters
updated multiple Java files related to BoxAndWhiskerCalculator , BoxAndWhiskerCategoryDataset , HistogramBin , SimpleHistogramDataset ,
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
replaced ` field ( ) = = ` with ` equals ( ) ` for consistency and clarity to improve code readability and maintainability
changed the access modifier of the singleton variable from static to private in IndexFileNameFilter . java to restrict access to the singleton instance for better encaps
refactor IfStatementTest to use a separate PluginDefinition variable and streamline if statement creation to improve code readability and maintainability by redu
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactor TypeAdapter methods to simplify null handling and improve read / write methods to enhance code clarity and maintainability by eliminating unnecessary
updated the expected size in the BundledDistributionTest from 12 to 13 to correct the expected value for the distribution tests
added a new file EXIFReader . java and modified ImageProcessingService . java to include metadata processing functionality to enhance image processing capabilities and improve
fix ( cloudwatchmeterregistry ) : return default standardunit when unit be none
[ pmml4 ] fix pmml4datafactory . newinstance ( ) to work with java 1.6
improve error message in fluentprotocol . java
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bar is not visible
do n ' t emit uncaught exception in substrateaarch64backend .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java and created a new test for concurrent logging
added a ` find ` method to ` TicketCatalog ` and updated logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry `
refactor SSL and trust store initialization in TestSSL . java for improved readability and maintainability to enhance code clarity and maintainability
[ hotfix ] [ runtime ] fix race condition in sort mergeresultpartition
http : / / issues . apache . org / jira / browse / amq - 4696 - fix jmsio read / write
added type and sort parameters to the query method in PluginHandleController , PluginHandleDTO , and PluginHandleService classes to enhance the query functionality
updated method calls from ` nextSpan ( ) ` to ` start ( ) ` in ` DefaultSpanCreator . java ` and ` Sle
added configuration properties for GLKViewDrawableColorFormat , depthFormat , depthFormat , and stencilFormat in IOSApplicationConfiguration and IOS
refactor login test to use a new attemptLogin method to improve code readability and maintainability by reducing duplication
[ pytorch ] throw unsupportedoperationexception if complex ( ) be not support .
refactor condition checks in SynchronizationStatistics . java to use a do - while loop for thread info retrieval to improve code readability and ensure
refactor Implements and ShadowPicker classes to improve code organization to enhance maintainability and readability of the codebase
refactor HttpClientOptions creation into a separate method for improved readability and maintainability to enhance code maintainability and facilitate easier
added additional checks for ` DynamicArray . class ` in ` DynamicStruct . java ` and improved type handling in ` SolidityFunction
updated ` getStringProperty ` calls to include a ` true ` parameter for ` text _ align ` , ` parent _ size ` , and `
added constructors to the CopyStep class that accepts a Path parameter and modified the CopyStep constructor to accept a boolean parameter to enhance flexibility in
fixed - rsemaphore . acquire ( ) and rsemaphore . addpermits ( ) method do n ' t
camel - 14263 : camel - random - load - balancing : fix the test error of camel - core
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` and ` FlavorParserTest ` to utilize
replaced instances of ` List < String > ` with ` List < ByteString > ` in ` WitnessScheduleStore . java ` to enhance
added a check for non - empty resultsMeta before printing the output to avoid printing empty results when no results are provided
refactor condition checks in ConcurrentLinkedQueue and add a new class RemoveLeak to improve code clarity and facilitate removal of
added ` addSpecialTokens ` parameter to multiple ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer ` to enhance
[ hotfix ] [ runtime ] use collections . ncopy instead of manual arraylist
updated chunk data handling in LoadSingleTsFileNode . java to ensure correct data size and data size for chunk data
added a new key session storage context and updated related actions in the DuoSecurityMultifactorWebflowConfigurer to enhance session management
add a new test for schema validation in the TestJspDocumentParser to ensure that the schema validation functionality works correctly for XML documents
added a default constructor to TypeAdapter and disabled tests until record support is added in Java 17 to enable initialization and disable tests until record support is
refactor suspend event handling and introduce a new ` prepareKill ` method in multiple classes to improve error handling and ensure proper termination of the
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
danielwagnerhall : remove null argument from getresourcepolicy ( )
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor to prevent potential NullPointerException when _ deflaterEntry is null
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure tests are executed after each execution
added normalization for Unicode characters in CheckSum . java to ensure proper handling of unknown Unicode characters in checksum computation
refactor command handling and improve null checks in Example . java to enhance code robustness and prevent potential NullPointerExceptions
add miss @ override annotation to basic profilerstate . keylistener ( )
updated JSON handling in MongoTemplate and added a new test for saving JSON strings in MongoTemplateTests to ensure correct serialization of DBObject objects and
added a check for multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to ensure correct handling of multiple remote addresses in
changed the return type of getJobArgs and getJobArgs methods from String to ObjectBuilder and updated related method calls to enhance type safety and improve JSON
updated ` CookieManagerTest ` and ` UnmodifiableMaps ` to use ` NO _ PROXY ` instead of ` InetAddress . getLocalHost ( )
updated glyph rendering logic in GlyphLayout . java and added a test case in BitmapFontTest . java to ensure proper handling of whitespace characters in
added pauseOrResumeSplits method to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes to handle split pause
added support for the HIVESCRIPTIDENVVAR in HiveConf and updated ScriptOperator to utilize it to enable dynamic assignment of the script
refactor the getListedTermCounts method to use streams for improved readability and performance to enhance code maintainability and reduce boilerplate
added a new file ` UseSeparateStepSizeAction . java ` to handle the " UseSeparateStepSize " action in the J
updated FileMenuFilter to use final fields and added user ID handling to improve immutability and ensure proper file locking behavior based on user
updated import statements and modified iterator usage in RoundRobinTableInputFormat . java and TestTableSplit . java to improve code clarity and
updated the ` name ` header from " false " to " 1 " in ` HttpClientRequestAdapter ` and ` HttpClientRequestAdapterTest ` to
pdfbox - 4892 : use ioutils . close ( ) instead of manual close ( )
updated GwtApplication and GwtGraphics to improve fullscreen handling and canvas rendering to enhance user experience by ensuring proper rendering behavior based on full
updated WebfingerIssuerService to use URI instead of String for parameter names and added error handling for URI parsing to enhance flexibility in resource
added a new test class ` SoulApacheDubboClientConfigurationTest ` for the ` SoulApacheDubboClient
replaced calls to ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` in ` SkinLoader .
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK
updated package declaration in Compiler . java to improve code organization and readability
fix a bug in nullerefandredundantcomparisonfinder where we do n ' t have an exception table .
use defaulthttpdatasource instead of string in dashrendererbuilder
added a configuration property for maximum prepared statements cached per database connection to allow configuration of the maximum number of prepared statements cached per database connection
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` in multiple configuration classes to improve clarity and
added error handling for bad request commands in AutoScalingHandler to improve error management by throwing a specific API response for bad requests
refactor CombinedDataset class for improved readability to enhance maintainability and clarity of the codebase
updated variable name from ` buf ` to ` b ` in ` InflateIn _ DeflateOut . java ` to improve code
added methods to remove cryptography restrictions from JceSecurity , CryptoPermissions , and Java Runtime Environment in Utilities and BitsquareApp classes to ensure
added a cancellation check before calling moveToNether and refactored chunk teleportation logic in the entity class to improve responsiveness and ensure
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest . java ` to verify the functionality of
added a null check before setting the vContext in Vectorizer . java to ensure vContext is only set when it is null to avoid potential
fix wialon speed decoder ( fix # 489 )
hbase - 25819 enable / disable metric user aggregate by default ( # 2576 )
added ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if the
added new boolean fields mUserPresent , mVisible , and mAttached , and modified unregister logic to check if the receiver is attached before unregister
refactor multiple HTTP client and response classes to improve code organization to enhance maintainability and readability of the codebase
added params to zadd method call in PipelineBase . java to enhance flexibility in handling parameters during zadd operations
[ ds - 4892 ] fix checkstyle violation in metadataimportit .
renamed ` TestAsyncMessages ` class to ` TestAsyncMessagesPerformance ` to clarify the class ' s purpose to improve clarity
added a method to retrieve an optional TargetNode and updated the Arg class to implement HasTests interface to improve handling of non - existent targets and
updated epoch seconds from constants to constants in TimeZoneProvider . java to improve clarity and maintainability of the code
updated the calculation for picture data length in EscherBlipRecord . java and added a new test class TestOLE2Embeding .
updated the initialization of the ` row ` and ` column ` variables in ` JSONParser . java ` to ensure consistent handling of row and column
replaced ` JavaType . FullyQualified ` with ` Pattern ` for pattern matching in ` FindTypes . java ` and introduced a new
updated DETAIL _ THUMB _ HEIGHT and added PLAY _ TRAILER action handling in BaseItemDetailsFragment . java to
added a method to remove glyph information from native pointers in CStrike and CStrikeDisposer classes to improve memory management by removing glyph
act - 1342 : terminate end event should record process instance end when the execution entity be terminate .
camel - 16462 : camel - xml - add support for the xmlrootelement annotation in the type name strategy .
updated the HTTP endpoint from " http : / / www . apereo . org / scottb . html " to " https :
add ` ` prdef ' ' option to reset all default value
changed access modifiers of several methods from private to protected in ThriftMetrics and ThriftServer classes to enhance encapsulation and allow subclasses to access these methods
[ danfossairunit ] remove deprecated channel for manual fan speed
use hamcrest assertion instead of junit in integration test
removed redundant code in TweetActivity . java to streamline the code for better readability and maintainability
added equals ( ) and hashCode ( ) methods to PartitionFactory and implemented equals ( ) and hashCode ( ) methods in PartitionPanel to enhance object
cloudstack - 4892 : fix npe in uservmmanagerimpl when root disk size be not specify
added preference management and modified visibility logic in PredictionRowView . java to improve user experience by enabling prediction visibility based on user preferences
[ geos - 6892 ] fix invalid bbox in feature service
added methods to validate value , position , and Merkle tree depth parameters in LibrustzcashParam . java to ensure values and depth
mark ithrowableentity a deprecate , and mark it a deprecate
added x and y variables to NodeDataImpl . java to generate random values for the node ' s position
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes in `
refactor the initialization of ` invocation ` and ` firstOrderStdout ` and ` returnedStderr ` in ` JavacStep . java `
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the release of the latest version
added a condition to check for DEEP _ SHORTCUT itemType in LoaderCursor . java to ensure proper handling of DEEP _ SHORTC
added hashCode ( ) method to TimeGranularitySpec class to ensure consistent hash code generation for different data types and columns
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes for better encapsulation
added a boolean flag ` useProxyResponseCode ` to control proxy response handling in ` HttpURLConnection ` to improve flexibility in handling NTLM
fix aarch64maptoread . java and aarch64maptoread . java regression
server : fix listvirtualmachinesupbyhostid to return the reserve and used capacity
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and included a new query in `
updated audio recoder from 22050 to 44100 in AudioRecorderTest . java to accommodate new audio recoder requirements
updated the calculation of newOriginX in RocketFigure . java to account for the minimum x value to ensure correct positioning of the
[ calcite - 4892 ] fix druidquerybasedinputformat error when data source be empty
added ` ORIGINAL _ TYPE ` to the ` ORIGINAL _ ID ` and updated regex pattern in ` CustomProperty . java `
added a static method ` create ( Table parent , Map < String , Object > data ) ` to the ` Index ` class to facil
simplified the return statement by removing unnecessary variable assignment to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and corresponding test cases in TestSchemaCompatibility . java to improve compatibility checks and ensure correct handling of
added persistent attribute type handling and updated join logic in QueryUtils . java , and test cases in EclipseLinkNamespaceUserRepositoryTests . java
added synchronization to the spans list and modified return statements in TestSpanHandler . java to ensure thread safety when accessing the spans list
change return type of getText methods from List < Object > to List < ? > in multiple classes to improve type safety and flexibility in method
updated exception handling in ViewContextImpl to use reflection for username and realm to improve error handling and provide more detailed logging for authentication failures
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future updates
updated error messages in SCBEngine , TestInvocationFactory , HighwayServerInvoke , TestHighwayServerInvoke , and TestHighwayServer
added new iOS resource files for iOS data and moe resources in GdxSetup . java to support iOS - related resources in the application
added ConcurrentMergeScheduler to MockAnalyzer instantiation in TestSearcherManager . java to enhance merge performance during test execution
added null check for session state and improved list handling in GenericUDTFInline . java to enhance robustness by preventing null pointer
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
do n ' t swallow ` ` click ' ' event in spreadsheet key listener
refactor HibernateBundleActivator to use ServiceRegistration for persistenceProviderService and sessionFactoryService to improve resource management and ensure proper cleanup of
fix ( pool ) : fix timeout calculation in hikariconfiguration
refactor component file creation to use a non - packaged resources directory to improve flexibility by allowing component files to be created without packaged
updated filename handling in Compat . java and FileOpener . java to use File . separatorChar instead of URL . getFile ( ) to
changed the return type of the row ( ) method from Cell < T > to void to indicate that the row method is intended to be used
[ 1340 ] added check for duplicate configuration port . ( # 1401 )
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 to use fixed mask generation to enhance flexibility in mask generation for WebSocket connections
modified the return type of ` genUDTFPlan ` and ` genUDTFPlan ` methods to return a ` Pair < <
added new statistics tracking for bucketed preferred and non - preferred node selection in the NodeScheduler and TopologyAwareNodeSelector classes to improve tracking of
added a new class Person with a name field and its getter / setter methods to facilitate the management of the ' name ' property
added a boolean variable ` hasOwnerPtr ` to track the presence of the owner pointer in ` CPlatformWindow . java ` to ensure that
refactor PlaybackOverlayFragment to use a Handler for clock management to improve performance and responsiveness of the playback overlay
remove unnecessary updatecomparatoroutputlevel ( ) call
changed the ` IMPL ` variable from ` static final ` to ` IMPL ` and modified exception handling in ` SegmentReader . java `
added a Runnable to invoke the fireCellUpdatedEvent method on the SudokuGridEvent thread to ensure that the SudokuGridEvent
updated the ` DefaultInetAddressAdapter ` and ` CollectionTypeAdapter ` classes to remove the deprecated ` DefaultInetAddressAdapter ` class
added null checks and assertions for double , long , and boolean values in Series and DataFrameTest classes to ensure proper error handling for null values and
removed the " -- no - audio - time - stretch " option from the options list to streamline the code by eliminating unnecessary options
updated conditions in GeoRelationUtils , GeoUtils , and GeoPointQuery classes to use Math . min ( ) and GeoUtils . max (
cloudstack - 4892 : fix npe in virtualmachinemanagerimpl . finddiskoffering ( ) when the service offer be not
added cleanup method to HazelcastTest for proper resource management to ensure proper cleanup of resources after tests
added tests for AES / NoPadding cipher modes in BlockCipherTest . java to ensure correct handling of unsupported cryptographic algorithms in tests
added filters to print operations logs in QFileClient . java to enhance debugging capabilities by providing clearer output during operations
add support for @ inject ( parentinterface ) and @ childintroduction ( childinterface < t > )
fix a nullpointerexception when try to set the current connection address to the proxy address .
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to improve code read
refactor ImageOutputStream handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
refactor search functionality by replacing ` TvApp . getApplication ( ) . showSearch ( ) ` with ` startActivity ( Intent ) `
removed the ' this ' keyword from the constructor of SchemaCrawlerOptions and simplified the toString method in GrepOptions and MutableIndexColumn classes to
http : / / issues . apache . org / jira / browse / amq - 4757 - add osgi configuration for the
added an @ Autowired annotation to the repository field in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository instance
changed the exception type of the stop method from Exception to InterruptedException in UIServer . java and updated log message in TestVertxUIMan
refactor case statements in BlockCactus . java for improved clarity and structure to enhance code readability and maintainability by standard
refactor mouse handling in ThemeSelector to use a dedicated ` handleMouse ` method to improve code readability and maintainability by encapsulating mouse
added a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` to the ` AbstractMinMulticastFlowControl ` class to
added alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance text editing functionality by allowing
refactor error handling in StatTokSentAnnotator to improve clarity and consistency to enhance code readability and maintainability
added a condition to check if the query is distinct in ClusterIntegrationTestUtils . java and modified group column handling in QueryGenerator . java to
[ gr - 25946 ] add jni reflection dictionary . getclosestlinkage ( ) and jnifunctions .
javadocs : fix typo in filelistpanel and jsyntaxtextarea
added null check for children in PartitionPruner . java to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition variables and updated JsonLocation initialization in MessagePackParser . java to improve handling of JSON parsing and ensure correct parsing behavior
added a method to set the default locale in AbstractSolrMorphlineTestBase to ensure consistent locale settings during tests
removed conditional check for ` isLauncher ( ) ` and simplified size calculation in ` LauncherFragment . java ` to streamline code for better
add unit tests for the MetricsReporter class to ensure proper functionality and error handling of metrics in the MetricsReporter class
camel - 16462 : remove unused import in camel - mock - bundle
added equals ( ) and hashCode ( ) methods to the Rectangle class to ensure correct behavior of object comparison and usage in collections
[ hotfix ] [ kafka ] use random sink name in kafkapptest
updated validation logic for prime values in DSAParameterGenerator . java to ensure correct handling of prime values and improve code clarity
added a new configuration variable ` LLAP _ DAEMON _ AM _ USE _ FQDN ` and updated related classes to utilize
fix flaky test of clientoutofmemoryhandlertest
added a method to calculate the object ID for shape IDs in multiple shape classes to improve code readability and maintainability by centralizing object ID
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to validate the functionality of fetching multiple posts
refactor multiple task classes to improve code organization to enhance maintainability and readability of the codebase
fix ( kubernetes - client ) : remove bind / unbind extension adapter from managedk8sclient
added functionality to display episode and media streams in the DetailsDescriptionPresenter and Utils classes to enhance user experience by providing detailed information about episode and media
updated JUnit imports and annotations in TestAuthHandlerBoot , TestRSAProviderTokenManager , and TestAuthHandlerBoot to use Jupiter
do n ' t throw exception when generate summary html
replaced multiple calls to ` intPool . reset ( false , false ) ` and ` bytePool . reset ( ) ` with multiple calls
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added support for TIRAMISU in ShadowWindowManagerGlobal based on API level to ensure compatibility with TIRAMISU and improve
updated scheme validation logic in UrlHelper . java and added a new test case in UrlHelperTest . java to ensure correct handling of requests and
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL database operations
refactor lambda expressions in StoreEngine and related classes for consistency to improve code readability and maintainability
remove debug output from emzuli pipe and add PipeEventHandler to handle pipe events to improve code readability and maintainability
fix for http : / / issues . apache . org / jira / browse / bugzilla / show _ bug . cgi ? id
updated method calls to use ` getTableSchema ( ) ` instead of ` getProducedTableSchema ( ) . getFieldDataTypes ( ) `
[ exoplayer ] add thread verification to the listenerset .
added CatalogAndSchema to the SCHEMANAME query in SequenceSnapshotGenerator . java to enhance schema management by integrating CatalogAndSchema for
updated color calculations in SpriteBatch , SpriteCache , LwjglDebugStarter , and AlphaTest classes to improve color handling
fixed - redissonconnection . close ( ) and redissonconnection . closeasync ( ) method throw a classcastexception . # 118
added logic to track the base core in the statistic year cores collection to ensure that the statistic year cores are only added if they are not already
renamed the ` launchTask ` method to ` launchTaskFromView ` and updated related references to improve clarity and consistency in task handling
updated MorfologikFilter to accept a dictionary resource and added loadDictionaryResource method to enhance flexibility in handling dictionary resources and improve
corrected the spelling of " CommunityRating " and " CriticRating " in the GridFragment . java file to ensure the
added imports for ViewKt and ListRow , and modified visibility logic for ListRow in CustomListRowPresenter to ensure proper visibility of the
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ` for DB2Database to improve code readability and maintainability by
[ te ] add support for java . time module in jackson serialization .
updated MDC import from log4j to slf4j in LogUtils . java to ensure compatibility with the latest logging framework
removed the import of TypeBearer and updated type casting in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary whitespace in CoinbaseTransactionStatusDeserializer . java to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to conditionally build targets based on configuration
removed redundant initialization of BusySpinIdleStrategy in Ping . java to ensure proper resource management and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` across multiple files to improve flexibility and maintainability of the codebase
reformatted conditional statements for better readability in ReportPanel . java to improve code readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot
add a new recipe class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime .
added multiple superclass constructors to multiple exception classes to ensure consistent behavior across different exception types
added a setUIID method to the ScaleImageLabel class to set the UIID of an image with a specified ID and its icon to
replaced the variable ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable
added support for both " - classpath " and " - cp " arguments in the command - line argument handling to enhance flexibility in command -
updated the linker option from ` options ` to ` compiler ` in the ` avutil . java ` file to ensure compatibility with the new compiler
updated the initialization state in StorageService . java to ensure proper initialization of the StorageService instance
updated Test7196045 . java file to improve test coverage and ensure proper functionality
updated density and decay values in ShaderParametersLightShaft . java to improve the visual representation of shader parameters
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated related methods in ` OidcRedirectActionBuilder
phoenix - 1346 add null check for unique constraint when nullable
updated conditions in UsersAndGroupsSearchProvider and EditShareFragment to include federated sharing functionality to enhance user experience by allowing file sharing based on
added a method ` needsDocValues ( ) ` that always returns true in the ` TestBBoxStrategy ` class to ensure that document values are
updated error messages in BufferAlignmentAgent , BufferAlignmentInterceptor , and StringWriterOutputManager to improve clarity of error messages and enhance code readability
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and updated method signatures in ` IntObjConsumer ` , and
fix worldserver . saveworldscoreboard ( ) not associate the save data with the global map storage , cause us to share scoreboards
changed the return type of the count ( Predicate predicate ) method from Long to long in multiple repository classes to ensure the count method returns a long
updated logging conditions for MTree snapshot creation in MManager . java to improve clarity and accuracy of log messages during snapshot creation
refactor dot product calculations in VectorUtil and TestVectorUtil to use a temporary variable to improve code clarity and maintainability by using a
added a threshold constant and methods to manage the latest confirmed block in DynamicPropertiesStore to enhance configuration flexibility by allowing more flexible block
refactor setLocale method to use Systems class for locale handling to improve code organization and maintainability by centralizing locale setting logic
added a condition to check if the new database was created in LauncherClings . java and implemented it in LauncherProvider . java to
refactor BasicAclEntryAfterInvocationCollectionFilteringProvider to improve readability and maintainability of the code
refactor conditional logic in Constants . java for improved readability to enhance code clarity and maintainability
added a check to ensure the current thread is the same as the current thread to avoid unnecessary processing when the current thread is the same
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method
updated imports from ` org . jellyfin . apiclient . model . dto ` to ` org . jellyfin .
added functionality to set XML attributes for SVG elements in BatikSVGDrawer to ensure proper handling of XML attributes for SVG elements
added a try - catch block around the user configuration parsing in ConsoleKeys . java to improve error handling and provide clearer logging for user configuration
added handling for " WaitForResult " in AndroidImplementation and CodenameOneActivity and modified waitingForResult logic in CodenameOneActivity
refactor constructors in HitQueue , SpanPositionQueue , PriorityQueue , and TopOrdAndFloatQueue to use a Supplier for sentinel object
updated WidgetCell . java to improve widget description handling and visibility control to enhance user experience by providing clearer widget information and descriptions
added a maximum attribute count check and exception handling in the Attribute class to ensure that registered attributes exceed the defined maximum attribute count and prevent runtime errors
move predicatestest to correct package
camel - 14263 : camel - defaultheaderfilterstrategy should accept case - insensitive header name . thanks to david for the
refactor InlineLayout and Breaker classes to improve handling of inline wrapping logic to enhance clarity and maintainability of inline layout logic
added null checks and improved code readability in ShareUserListAdapter . java to enhance robustness by preventing potential NullPointerExceptions during view
refactor Setup class to simplify instrumentation logic and improve readability to enhance maintainability and clarity of the code
added a condition to return the last index of columns based on the association ' s insert destination before source to ensure the correct index is returned for
updated memory file path handling in CmdModifierTest . java to utilize a new method to retrieve the memory limit file path based on Cgroup
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxx
added a null check for the rule parameter in JavaTestRule . java to improve error handling by providing clearer feedback when the source is not
remove hardcoded ` ` minecraft 1.9 . 4 ' ' and ` ` minecraft 1.9 . 4 ' '
added a check to ensure atIndex is non - negative to prevent index out - of - bounds errors
increased timeout duration from 100 milliseconds to 500 milliseconds in BuckBlockJUnit4ClassRunner and Thread . sleep to allow more time
refactor TaskOverlayFactoryGo to include AssistContentRequester and AssistContentRequester as a parameter to enhance flexibility in managing assistant content
replaced the method of creating a readable string to encode the witness address and updated the account check logic to ensure that the address is properly encoded
refactor DefaultMethodRegressionTests to improve test coverage to enhance reliability and maintainability of test cases
refactor WorkloadManagerMxBean class for improved clarity to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure compatibility with the latest
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a ` clear ` method to ` ExceptionThrowingTaskletStub ` and multiple test cases in ` FaultTolerantExceptionClassesTests
improve error message when config be not set
added extraProperties parameter to multiple tuner methods in TableConfigTuner and related classes to enhance tuning capabilities by allowing additional properties to be
added logic to handle progress segment instances in PinotRealtimeSegmentsManager to ensure that segments are only added when in progress instances are processed
added a condition to return null if the touchable is disabled in the Table class to prevent potential null pointer exceptions when the touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` in ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryable exception if cache config be not create yet
refactor module installation logic in JSweetTranspiler and introduce a new method in ProcessUtil to improve clarity and maintainability of
added Jetty annotations to MBeanContainer and Destroyable classes to facilitate the management of MBeans in the application
changed the condition from ` inAppBrowser ` to ` false ` in ` LongClickableSpan . java ` to ensure that the browser is
updated string comparisons to use ` equals ( ) ` method instead of ` equals ( ) ` for consistency to improve code readability and maintainability
updated conditional check in mmm Types . java and added new classes T6558559a . java and T655855
updated player position and edit message formatting in WorldEditListener . java to improve clarity of player information and enhance readability
camel - 14284 : camel - kafka - allow to shutdown the kafka consumer if the consumer be shut down
removed the default implementation of the examples ( ) method in Schema . java to streamline the code by eliminating unnecessary default implementation
modified the condition for thread interruption handling in AgentRunner . java to ensure proper termination of the loop when the thread is not alive
removed dataset time columns from the dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns during data
added a null check for shards in FacetComponent . java to ensure that only non - null shards are processed to avoid potential NullPointerExceptions
replaced linker dependency retrieval with CxxPlatforms dependency retrieval in RustBinaryDescription and RustLibraryDescription to streamline dependency management by
added ` name ` property with getter and setter methods in ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` Ntlm
do n ' t throw runtimeexception in IdealGraphprinterdumphandler if printer be invalid
phoenix - 2576 add support for small scan for point lookup ( phoenix - 2576 )
added ` routeId ` to the ` toString ` method in ` RetryGatewayFilterFactory . java ` to include the route ID in the returned
replaced multiple calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java
refactor ` onOverviewShown ` method to ` showForOverviewIfNeeded ` and introduce delay handling in ` DiscoveryBounce ` to improve
refactor null checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a test for deleting all
updated the publish method to use updateLastState instead of a boolean flag to improve clarity and functionality of the publish method
updated the SKEWED _ STRING _ LIST _ VALUES string formatting in MetastoreDirectSqlUtils . java to ensure proper formatting of
removed a null element from the exp list in SpliteratorCollisions . java to simplify the code by eliminating unnecessary operations
[ java ] add ` ` textcaseSensitive ' ' and ` ` exacttextcaseSensitive ' ' method to the ` ` condition ' '
replaced multiple instances of ` do ( true ) ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java `
# 113 - add ` ` forward _ only _ fetch _ size ( ) ' ' support for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid unnecessary logging when the channel is already closed
pdfbox - 4892 : optimize arraylist initialization , a suggest by valerybokov
updated the calculation of window radius in QuickstepAppTransitionManagerImpl to accommodate rounded corners to ensure proper scaling of window radius based on
replaced ` ShapeDrawable ` with ` View ` and updated background handling in ` DesktopTaskView . java ` to improve UI consistency and
refactor UpstreamCheckServiceTest to initialize properties before setting the is _ checked property to improve code readability and maintainability
refactor logging statements in AbstractSession and AbstractSessionManager for improved readability to enhance code clarity and maintainability by standardizing logging
replaced error logging with returning locks in ZooKeeperHiveLockManager to simplify error handling by returning locks instead of throwing an exception
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a conditional check for custom data in the mipmap generation logic to ensure mipmap generation only occurs when custom data is present
updated test cases in DefaultMaskingFormatterTest to use single quotes instead of single quotes to ensure consistent character encoding across different operating systems
added a selectable boolean field and related methods to manage touch event behavior in the List class to ensure touch events are properly handled when the NOT selectable
removed a conditional check for empty vector schema root in LlapArrowBatchRecordReader . java to streamline the code by eliminating unnecessary
added file separator handling in PolicyContext and updated test cases in TestPolicyContext to ensure consistent file path formatting across different operating systems
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance and reduce memory usage
refactor TLSRestrictions class to improve code readability to enhance maintainability and facilitate future updates
http : / / issues . apache . org / jira / browse / amq - 4757 - add daemon task to kafkamanager
added a ignorableNodeValues parameter to the assertNodeStateProvider method to handle node state assertions with ignorable node values
added a lock file handling in RocksdbMavenPomCache . java to delete the current workspace if it exists to ensure that the
updated MiniZooKeeperCluster to use InetSocketAddress instead of NIOServerCnxn for client port initialization to ensure compatibility with the latest NIO
added a new method ` getResponse ` to handle IOException and ` HttpURLConnection ` in ` RestClient . java ` to improve error handling and logging for
updated the method to convert segmentTarURIs to an array to improve performance by avoiding unnecessary array creation
replaced TEST _ STUDENT2 _ ACCOUNT with TEST _ STUDENT1 _ PASSWORD in the loginStudent method calls to ensure
added null checks for item ID in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions during item deletion
increased the number of strings from 500 to 100 in TestSpecialOperations . java to reduce the number of strings from 500 to 100
updated ByteArrayInStream initialization and removed hexToBytes method from WKBAttributeIO . java to simplify the code and improve performance by eliminating
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if a transition is a direct substate before proceeding to ensure that only direct substates are processed in the state
added checks for ListMultimap and SetMultimap types in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation class to enhance functionality by allowing join operations in the application
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify the execution of PostgreSQL tests
resolve intermittent test failure in amq - 5035
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
updated configuration values for lifeTime , idleTime , and maxWaitTime in MongoDbConnectionPoolProperties . java and MongoDbConnectionFactory . java to
use sip activator . getMediaservice ( ) . getmediafactory ( ) instead of null
refactor ` handleFilters ` , ` handleBlockJoin ` , and ` handleDomainChanges ` methods to ` evalFilters ` , and `
added a enabledTimeout property and modified timeout handling logic in ShuffleHandler . java to enable or disable the timeout handler based on the enabled state
updated the initialization of ` mQuickStepStartingRotation ` to use a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
updated logging statements in XPathBuilder and XQueryBuilder to remove redundant concatenation and added debug logging in XQueryBuilder to improve logging clarity and provide more
refactor : use aima - learning - data - core instead of aima - learning - data
issue # 1751 - escape backslashes in GoTokenizer ( # 1751 )
added a validation check for the " atlas " property in AtlasTmxMapLoader . java to ensure that the map is missing the " atlas
camel - 14263 : camel - core - remove unused propertyplaceholderhelper
removed redundant ReceiveSource setup and added database closure in BlockchainTest . java , and simplified Kafka message broadcasting in KafkaTest . java to
refactor CoreMarkdownNodeRenderer to use a new method for splitting lines to improve code readability and maintainability by centralizing line splitting logic
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
refactor SQLBindings to use List instead of ImmutableList for improved type safety to enhance code clarity and maintainability by using a more d
added support for checking the Java VM name in the VirtualMachine class to ensure compatibility with OpenJDK in addition to Apple
added keepAlive ( true ) to the baseUrl configuration in ReactorClient . java to ensure proper connection management and prevent potential connection issues
updated VertexAttribute calls to use ` ShaderProgram . POSITION _ ATTRIBUTE ` and ` TEXCOORDS _ ATTRIBUTE ` constants instead of hard
camel - 14263 : camel - core - add support for ` ` property ' ' component in defaultcamelcontext
refactor account retrieval logic in UnfreezeBalanceActuator . java to check for null before accessing its properties to improve code clarity and prevent
update version number to use alpha instead of release
replaced direct return statements with calls to ` t . unannotatedType ( ) ` in ` Types . java ` to improve type handling
updated assertions in StorageGroupProcessorTest . java for consistency and clarity to improve code readability and maintainability
added a new ` DumpableCollection ` parameter to the ` dumpObjects ` method and modified class names for better clarity to enhance debugging capabilities
added a wait time of 2500 milliseconds before starting the video processing to allow for necessary initialization before playback begins
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related classes to simplify constructor parameters by eliminating
refactor AccessorsTest . java for improved clarity and consistency to enhance code readability and maintainability by standardizing import statements and
added a new method ` compileMethod ` in ` GraalCompiler ` and modified ` LIRGenerator ` to return a ` FrameMap `
updated JUnit imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningStand
fix boat collide with water . close # 1193
updated ` toString ( ) ` method calls in ` Directory ` and added ` getLockID ( ) ` method in ` RAMDirectory ` to improve
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the code by eliminating unnecessary method
added new methods ` then ` in ` BDDAssertions ` for handling path assertions to enhance the functionality of path assertions in the application
renamed variable ` hp ` to ` hostField ` and updated related logic in ` ForwardedRequestCustomizer ` and ` ForwardedRequest
updated logging level from debug to warn for multiple Kubernetes config files to clarify that warnings are only logged when the file is not found
added file upload status handling in UploadListActivity and integrated it into FileStorageUtils for better file management to enhance user experience by allowing users to
added ProviderLoader and ProviderLoaderListener classes to manage provider installation and error handling to improve the management of provider installation process and provide more detailed logging
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to util
updated the SelectFromDatabaseChangeLogStatement to use a computed column name instead of a hardcoded name to simplify the SQL statement by removing unnecessary
hhh - 14923 - fix namequalifiersupport # getcurrentschemacommand ( ) in postgresql dialect
do n ' t calculate the number of partition per member when there be no data member
added error handling and scheduler start logic in the ExecutionScheduleManager and ExecutionSchedulerImpl classes to ensure that the scheduler is only started if it is
removed the ` toString ( ) ` method from the ` InlineBox ` constructor and modified the conditional check for ` blockParent ` to streamline
updated precondition messages in StatisticMap . java for consistency to enhance readability and maintainability of the code
updated the return value of getStagedRectSlideEnd from 383 to 500 to adjust the slide duration for better user experience
updated WaveInfoDialog to use bundle keys instead of hardcoded strings to improve maintainability and readability of the code
updated condition to include plot area check in KILL _ ROAD _ ITEMS to ensure that KILL _ ROAD _ ITE
added a test for invoking setTouchExplorationEnabled in ShadowAccessibilityManagerTest and modified touch exclusion handling in ShadowAccessibilityManager to
pdfbox - 5328 : do n ' t use the first code when calculate the glyph id , a suggest by valerybok
bugfix : use getname ( ) instead of getpropertyastring ( ) in testelement
replaced direct instantiation of NPOIFSFileSystem with POIFSFileSystem . create in TestNPOIFSFileSystem . java to simplify
updated the handling of plot area retrieval in mmm Move . java and ppp Move . java to improve robustness by checking for null plots
updated regex pattern in TestWebHCatE2e . java to ensure proper matching of version properties
updated the condition in Filters . java to check for count less than 1 instead of 0 to ensure that the count is less than 1 to prevent
camel - 14263 : camel - kafka should use camel - core - naming instead of camel - core - naming for camel - kafka
added error handling for javac execution failure in JavacCompiler . java to improve error reporting for failure scenarios
ggb - 2203 repaint option when select an item in the list be select .
camel - 14263 : camel - spring - batch - addendum fix checkstyle violation
added a method ` isAnimationFinished ` to check if an animation is finished to provide a way to determine if the animation is finished based on
updated import statements in LoginMockMvcTests . java and added a test for custom FavIcon with LineBreaks in LoginMockMvcTests .
added null check for otherUrl in TimeLineCursorAdapter . java and modified refreshing text in HomeFragment . java to enhance robustness by
ggb - 2338 fix for ` ` ` space ' ' in the text field of the radio button
updated the implementation of ObjectHashSet to improve performance and maintainability of the code
refactor null checks in DataUtilities . java for improved clarity and functionality to enhance code readability and maintainability by reducing red
allow enchanted books to be delete ( mc - 12770 )
( chore ) camel - helidon : add unit test for asyncresource . get and asyncresource . put
updated variable names from " target - flat - headers . hmap " to " target - user - headers . hmap " in ProjectGenerator
added error handling for SendFailedException in MailService . java to improve logging clarity and error reporting for email sending failures
replaced ` resetTaskItemView ( ) ` method with ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` and
added multiple test cases for retrieving partitions with single batch , multiple equal and unequal size batches in TestHiveMetaStoreClientApiArgumentsChecker
added a closing brace in FileListListAdapter . java to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OC
adjusted the position of the removeViewInLayout method from getChildAt ( getChildCount ( ) - 1 to getChildAt ( getChildCount ( ) -
removed " org . eclipse . jetty . websocket . util . server . internal " and " org . eclipse . jetty .
do n ' t set s3request . expiresseconds to false when create a new s3request
update jfxradiobuttonskin when timeline be null
updated condition checks for splits length in DeweyNumber . java and added a test for zeroSplits in DeweyNumberTest . java
added a new static variable ` categorySetString ` and modified the return statement in ` MwVolleyApi . java ` to ensure category
updated the expected error message in WebSocketClientTest from " Invalid close control status code 1111 " to " Invalid close code 1111 " to
added null check for classLoader in WebappLoader and updated test assertions in TestVirtualWebappLoader and TestVirtualWebappClassLoaderWeaving to
removed redundant code in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new file TestPorterStemFilter . java to implement a test for the PorterStemFilter functionality to ensure that the Porter
added a success parameter to the postBatchMutate method and updated related calls to ensure that the index updates are only written if the batch operation
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
added synchronization to the chat window manager to ensure thread safety when accessing shared resources
remove duplicate ` Sys . touch ( ) ` calls across multiple Java files to streamline code by eliminating unnecessary static block
updated the status command to include " - mardu " and modified the untrackedFiles method in HgCmdLineInterface and related classes
camel - 14263 : camel - netty - make the netty component thread safe .
updated variable declarations to use ' range ' instead of ' intensity ' in multiple light classes to enforce immutability and improve code clarity
added bounds checking for width and height in X11GraphicsConfig and WGLGraphicsConfig classes to ensure that only non - positive dimensions are processed
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a consistent string representation
added an ` AnnoFilterTreeSet ` class to manage inner classes and annotated classes in ` ClassFinder . java ` to improve annotation handling
updated the logic for determining the maximum size of newLength in BytesColumnVector . java to ensure proper handling of integer overflow scenarios
updated test assertions in WriteBehindMapStoreWithEvictionsTest . java to use assertTrueEventually to improve test reliability by
updated the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI `
ggb - 1193 fix for polyfunction . isEqual ( polyfunction )
added a null check before setting the column class in SynthTableUI . java to avoid potential NullPointerException when table is not initialized
added error handling for class loading in CustomChangeWrapper to improve robustness by catching ClassCastException during class loading
refactor DistBuildConfig to use DistBuildConfig instead of ConfigPathGetter and update related methods to improve code clarity and maintainability by
show warning for double entry in export dialog
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored to temporarily disable the test due to
changed the return type of ` doJoin ` and ` doJoin ` methods from void to boolean in multiple classes to enable conditional execution of join
removed the Optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription . java to simplify the method signature by eliminating
updated intent flags in LauncherTimelineCursorAdapter . java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure proper activity management and
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance query performance by allowing paging by
updated repository URL assertions in RepositoryConventionPluginTests to check the number of repositories instead of the first to ensure the test accurately reflects the
[ java ] add a task for nodeaffiliate . affiliate to create a pubsub node .
improve error message for invalid uri
changed the access modifier of the ` buildUserProfileByClassCompleteName ` method from private to public to allow access to the method from other classes
added array handling and refactored cache key update logic in CacheKey . java and CacheKeyTest . java to improve code clarity and
replaced GnomeFileTypeDetector with FileTypeDetector across multiple files to enhance file type detection capabilities across different operating systems
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent memory leaks
refactor ` ShadowVirtualDeviceManager ` to replace ` ShadowVirtualDeviceParams ` with a new interface ` VirtualSensorCallbackDelegateReflector `
added a null check for ` contextBeforeExecution ` in ` HttpSessionSecurityContextRepository ` and created a test for context removal in ` HttpSessionSecurityContextRepository
refactor loopback address retrieval logic in NetUtil . java to improve clarity and correctness of loopback address handling
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and updated related memory management to improve clarity and ensure
added secure validation and retrieval method checks in KeyInfoReferenceResolver , refactored exception handling in XMLSignatureInput , TransformXPath , and XML
added a boolean flag to track if the icon change listener is installed and updated the action listener assignment logic to ensure that the icon listener is only
added " ru " to the Language class to support Russian language support in the application
hhh - 14836 - fix type conversion for duration type in sqmtosqlastconverter
disable frame state verification in substrategraphkit .
added cleanup and reset system properties in RobolectricTestRunnerTest and TestUtil classes to ensure proper cleanup of system properties during tests
added " org . slf4j . " system class to " org . slf4j . " in ViewClassLoader and a corresponding
added handling for " jar " packaging in ChangePackaging . java and implemented a custom toString method in ChangePackagingTest . java to
( chore ) camel - core : fix test that fail on window
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer before
replaced instances of ` getDefaultUnits ( ) ` with ` setPreferredUnits ( Units ) ` in multiple files to improve clarity and consistency in
updated DatePatternConverterTest to use UTC timezone for date formatting to ensure accurate date formatting based on the current time zone
removed unnecessary whitespace in Terminator . java to improve code readability and maintain consistency
improved error messages for invalid file URIs in FileSystem , LocalFileSystem , and DistributedFileSystem classes to enhance clarity of error messages and ensure
use a timertask instead of a single - threaded executor for show track notification
updated FtpReconnectAttemptServerStoppedIT and FtpEmbeddedService to use Awaitility for session management and added a method to count active
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve concurrency handling for the `
added ` ignore ` methods to ` JavaUtilLog ` , ` Logger ` , ` StdErrLog ` , and ` JavaUtilLog `
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when runningTaskView is null
removed unnecessary cast to byte in BukkitWorld . java to simplify code by eliminating unnecessary type casting
removed unnecessary image cleaning in PanelManager . java to streamline image processing by eliminating unnecessary code
added two new classes , MMapDirectoryFactory and SimpleFSDirectoryFactory , for managing MMapDirectory and SimpleFSDirectory to facilit
added null check for ` ic ` before initializing ` cleanUpColor ` to avoid potential NullPointerException when ` ic ` is null
updated the variable name from ` field1 ` to ` field1 _ s ` in ` QueryEqualityTest . java ` to improve clarity
refactor ExtendedOperatingSystemMXBeanImpl to improve code readability to enhance maintainability and facilitate future updates
added a method to install left commands in the SideMenuBar to enhance the functionality of the SideMenuBar by allowing command installation based on
added a boolean flag ` advanceWindowed ` to manage window initialization in multiple activities to control window behavior based on user preferences
added support for SybaseDatabase in DropPrimaryKeyGenerator to ensure compatibility with SybaseDatabase alongside FirebirdDatabase
refactor Client class to improve code organization to enhance maintainability and readability of the codebase
[ java ] reset leadershiptermid and lastrecordingshiptermid when there be no leadershiptermid
replace invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and implement shouldDelayChildPressed
added a return statement to the NearCachedClientMapProxy class to improve performance by avoiding unnecessary processing
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a try - catch block to shutdown the HTTP server in ListenHTTP . java to handle potential exceptions when starting the server
camel - 15836 - camel - aws2 - s3 : fix the issue of streamuploadoperationintegrationtest and camel - aws2
[ hotfix ] [ runtime ] remove unused param _ tm _ id in webmonitor
db upgrade : drop key that do n ' t exist in 2.2 . 7 version of the db
added a new test class ` TestThriftCLIServiceSecurity ` and modified password handling in ` TOpenSessionReq ` to improve test coverage and
added a new variable ` maxEnergyLimit ` and updated energy limit assignment logic in ` VMActuator . java ` to ensure accurate energy
added maxInMemorySize property and its getter / setter methods to HttpClientProperties and updated webClientPlugin constructor to accept properties for better configuration management
refactor Cache class to improve cache management to enhance performance and maintainability of cache operations
added two new test classes , RunCucumberTest . java , StepDefinitions . java , and StepDefinitions . java , for the C
added error handling for parsing double values in TypeJsonUtils . java and corresponding test cases in TestArrayOperators . java to improve robustness of
removed duplicate variable assignments in Utf8StringBuilderTest . java to streamline code and improve readability
added a check for the parameter set before appending them to the string map and refactored parameter handling logic to improve code readability and maintain
camel - 14263 : circuitbreaker should throw an exception if there be no output to load .
updated the configuration setting for document frequency in TestIndexWriterExceptions . java to ensure the test accurately reflects the maximum buffered documents limit for
replaced calls to ` putUnencodedChars ` with ` update ` for resource APK , primary Dex , and asset hash codes to
added static methods for retrieving enum values , intValue , and longValue in AsmRuntime . java to improve code readability and maintainability by redu
add biome tag for michael ' s biome ( # 1748 )
refactor asyncimageloader to use a fixed thread pool to improve performance and reduce memory usage during image loading
changed access modifiers of several fields and methods in BaseTableUpsertMetadataManager to protected and refactored preloading logic to enhance encapsulation and
replaced occurrences of " “ u0648 ” ” ” ”
updated image comparison from ` equals ` to ` hasImageEqualTo ` in ` AbstractSunSecureRule . java ` to improve clarity and
camel - 16462 : camel - jbang - add -- repos = true to run command
added handling for NaN score values in CrawlDbReader . java to ensure that score values are processed correctly when they are NaN
added a cleanup method in OnStartupTriggeringPolicyTest to clean up temporary files after tests to ensure proper resource management and prevent memory leaks
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` and updated focus handling in ` FindAction ` to improve
[ hotfix ] [ runtime ] add autocloseableasync to checkpointscleaner
added a new file XPathWhiteSpaceTest . java to test XML schema parsing to ensure proper handling of whitespace characters in XML schemas
fix npe in bonsaipersistedworldstate when block header hash be empty
refactor FilledNewArrayInstruction class for improved readability to enhance maintainability and clarity of the code
increase timeout for simplenetworktest to avoid intermittent failure
updated the method to check if the parent path ends with a trailing slash instead of substring to ensure correct handling of trailing slashes in the parent path
added a debug print statement to indicate the loading failure of the skin file to facilitate debugging by providing insights into the loading process
fix lgogroupedlevel2update . markdirty ( ) and lgogroupedlevel2update . isvalid ( ) ( # 2
added a new static final Result constant UNDEFINED in Result . java and updated TestStep . java to return UNDEFINED instead of creating a new Result instance
replaced ` PersistenceException ` with ` NullPointerException ` in ` TestTransactionCallback . java ` to ensure proper handling of null pointer exceptions during database
make uploadjobmultipartoperation extend operation instead of asyncjoboperation
added exception handling for recovery data in MessageDatabase and improved log message formatting in JobSchedulerStoreImpl to enhance error handling and provide clearer
add summarylevels . of ( ) and summarylevels . ignoringchildnodes ( ) to layout strategy .
replaced the ` pos ` variable with a ` sizeMask ` and refactored the ` ensureAvail ` method to improve size management
added JUnit @ Ignore annotations to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to temporarily disable tests
replaced the assignment of ` targets ` with ` endpoints ` in ` StorageProxy . java ` to simplify the logic for determining the number of
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
added additional transform function types to the TransformFunctionType and TransformFunctionFactory classes to enhance functionality by providing additional transformation functions
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement and updated package - info . java to enhance functionality and maintain consistency in
updated RFC3280 to " RFC5280 " in multiple Java files to ensure compatibility with the latest RFC standards
updated version number from " 2.17 . 3 " to " 2.17 . 4 " and changed type casting in SearchAnnotationVisitor to
refactor ListActivity and NoteAdapter to use SparseBooleanArray for selected items instead of HashMap to improve performance and reduce memory usage during item selection
refactor conditional statements in DirectUpdateHandler2 . java for improved readability to enhance code clarity and maintainability
updated path handling in ConfigFileApplicationListener and added a test for absolute resource defaults in ConfigFileApplicationListenerTests to improve path validation and ensure correct file
updated PreviewPositionHelper initialization to accept a Context parameter and modified clipping logic based on device insets to enhance flexibility in handling split - screen insets
[ java ] do n ' t publish new leadershipterm when the leadershiptermid change .
[ drools - 705 ] fix test failure in pmdcoveragetest
refactor ByteArrayInputStream logic and add a new Skip class for skipping bytes to improve efficiency and clarity in byte processing
simplified the condition for promptUpdate in UpdaterTask . java to improve code readability and maintainability
change the visibility of the MAX _ HEADERS constant from final to public and add a check for block headers size in Peer . java to allow
added " rt . jar " to the list of STANDARD _ LIBRARIES in ModClassLoader . java to support additional jar files in the
refactor code for improved readability and structure in AbstractHandshakeHandler . java to enhance maintainability and clarity of the code
updated GranuleDescriptor , RasterLayerResponse , GTDataStoreGranuleCatalog , and GTDataStoreGranuleCatalog classes to utilize
added a check for ` isCommitted ( ) ` before sending errors in ` HttpChannel . java ` to ensure that errors are only sent when
updated condition checks in HttpSession . java for better readability and consistency to improve code clarity and maintainability
changed the fadeOutFakeTaskView parameter from true to false in HomeGestureTutorialController . java and added feature flags for gesture navigation
add name to prefab format and serializer to avoid npe
replaced the initialization of ScimGroupExternalMembershipManager and bootstrap with a direct addition of superusers to externalGroupSet to streamline the
updated thirtyDays calculation in FreezeBalanceActuator . java and added a validation check in TransferActuator . java to ensure thirty
updated file path handling in FileResolverTestBase . java to use File . separator instead of a hardcoded slash to ensure compatibility with different operating
ggb - 2338 fix for keyboard keyboard not show properly
updated GpsMainActivity to retrieve session description and modified AnnotationViewFragment to utilize EventBus for command events to enhance user experience by providing
updated JsoupNonVisualRegressionTest to check for the number of pages before verifying the expected number of pages to ensure that the
rename androidbufferallocator to androidnativebufferallocator so it can be use
added checks for flag names and flags starting with " ! " in Main . java , PrimaryItem . java , and Util . java to ensure
added a NOPMD comment to the executeQuery method in JDBCHistoryCache . java to indicate that NOPMD is no longer needed
updated equality check for ITEM _ USE _ GRANT _ SELECT _ REWARD in BattlePassManager . java to improve readability and
refactor QueuePriorityTest to improve assertions and add a toString method to enhance clarity and functionality of the PriorityElement class
refactored affinityapiunittest to use @ inject instead of @ inject
added null check for the command in Main . java and modified conditional logic in Main . java to enhance command - line argument handling and improve help
increased the number of output streams from 7 to 4 in PropertyTypes , ByteIterableBase , and LongBinding classes to accommodate
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and modified conditional logic in ` ClassWriter . java ` , and created a new class ` T8032
removed assertion for length checking in Person class to streamline code by eliminating unnecessary assertions
added null check for file extension in VirtualFile . java to avoid potential NullPointerException when checking file extensions
replace return statement with continue statement in ContactRightButtonMenu . java to ensure proper flow control in the button menu
[ hotfix ] fix checkstyle issue in simpleslot and slotsharinggroupassignment
simplified the calculation of the screen index in InstallShortcutReceiver . java to improve code readability and maintainability
updated the binding and reset methods in PlainSocketImpl to use a delegate socket descriptor to ensure proper resource management and prevent potential memory leaks
added functionality to clear removed items from media details in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by managing media details
updated log message to reference ' in - view center point ' instead of ' center of element ' to improve clarity of log message regarding the
added a new file ` bug4865918 . java ` that implements a GUI test for testing scrolling behavior to address bug 48659
replaced the usage of ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code and
added functionality to handle group triggers in QuestCommand . java to improve user feedback by providing clearer feedback when a group does not exist
add the ability to select gnu cash account file in the web
added @ tostring ( callsuper = true ) and @ tostring ( callsuper = true ) to partitionchangeevent and tbapplicationevent
updated the configuration URI for the CloudService to use a configurable configuration URI to improve flexibility and maintainability of the cloud service configuration
removed the setViewportComponent and setJScrollPane methods from the BrowserPanel to streamline the code by eliminating unnecessary method calls
replaced ` Input . Keys . KEYCODE _ DEL ` with ` Input . Keys . KEY _ FORWARD _ DEL ` and
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " configuration before retrieving MIME type parts to enhance flexibility in handling MIME
added a pattern to find the author from the constructor declaration in JSDoc . java to enhance comment parsing functionality by allowing users to specify the author
added constants for CREATE _ TOTAL _ DATABASES , CREATE _ TOTAL _ TABLES , and DELETE _ TOTAL _ PARTITIONS
refactor HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for better schema management to improve
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling logic to
updated the month name from " Hijrah - umalqura " to " Islamic Umm al - Qura
added a condition to check if the browser is not Firefox in the supported state to ensure compatibility with both IE and Firefox devices
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the private constructor in ` InterceptorConstants ` to enhance server interceptor
added a default charset parameter to the CREATE TABLE statements and updated its usage in TestCompatibility . java to ensure compatibility with different character sets for database
[ hotfix ] [ stream ] remove redundant call to resetvalues ( ) in streamingaggtemplate
[ hotfix ] [ runtime ] fix typo in executiongraph
added a ` hasFrom ` property and its getter / setter methods to the ` Delete ` class , modified SQL statement appending logic , and added
refactor SynchronizeFolderOperation to improve status handling for multi - status requests to enhance code clarity and maintainability by using a more d
refactor test applicable checks into a new method ` applicableListTests ` in ` RecipeScheduler ` to improve code readability and maintainability
updated the logLine string format in LogAnalyser . java to improve formatting to enhance readability and maintain consistency in log formatting
( chore ) camel - aws2 - integration : enable integrationtest based on environment variable
fixed - rsearch . max ( ) and rsearch . min _ exclusive ( ) method do n ' t include min _ exclusive parameter .
refactor CCLicenseStep to improve type safety and clarity to enhance code readability and maintainability
added a null check for ifcRoot ' s getGlobalId before adding it to guidIndex to avoid potential NullPointerException when getGlobalId is null
updated comparison logic in OptionalAssert to use objects ' s comparison strategy to improve readability and maintainability of the code
refactor memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally store the last margin value based on the presence
added a new file TestArrayCopyToFromObject . java to test array copying functionality to ensure that ArrayStoreException is correctly thrown when copying objects to
updated the formatting of sys . path . insert statements in BuckPythonProgram . java to improve code readability and maintain consistency in formatting
fix checkstyle issue in protocol / protocol / ajp / ajp / ajp / ajp / nio / protocol . java ( #
deprecate findfiles ( ) in favor of getallfiles ( )
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to unstable test case
added null check before calling doRequest in TestInternalInputBuffer . java to ensure robustness by checking for potential null pointer exceptions
http : / / code . google . com / p / mybatis / issues / detail ? id = 561 : prevent lock in
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and ` PlaybackController ` classes to improve server version
replaced the usage of ` writeJAASConf ( ) ` with ` writeJAASConf ( ) ` in ` BasicK
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a specific
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability by standardizing import statements
added a constant for the HS2 proxy user and modified session parameter handling in ConnectionFactory . java to improve clarity and maintainability of
camel - 14263 : camel - hdfs - add support for snappy compression with bzip2 and snappy compression .
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper synchronization during tests
bug 49966 : fix xssfcell . setcelltype ( cell . cELL _ TYPE _ BLANK ) for multi - cell
adjusted width and height calculations in GlyphLayout . java and modified text in BitmapFontTest . java to ensure proper rendering of glyph dimensions and
refactor image loading in Fabric8IstioIT . java to use constants from Commons class to improve code readability and maintainability
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . getPlaybackManager ( )
close fileinputstream in simpleauthority to avoid memory leak
fix maploader hitting eviction on initial load
updated the return statement in ResponseFlag . java to include ERROR _ BIT to ensure proper handling of LENGTH _ BIT and ERROR _ BIT values
[ ds - 489 ] fix default policy bug when no read policy be find
replaced direct instantiation of CompositeFont with a concurrent map for managing CompositeFont instances to improve memory management and prevent potential memory leaks
updated the calculation of prefHeight by setting it to 0 to ensure that the prefHeight does not exceed the specified height
drools - 1187 dmnfeel : improve error message when dmn feel parse syntax error
removed unused import statements across multiple Java files to streamline code and improve readability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated Runnable execution in ` NavHandleLongPressInput
added null checks for node ID and edge type in ElementFactoryImpl . java , and improved edge handling in ImportContainerImpl . java ,
[ beam - 1770 ] fix npe in fnapicontrolclient and beamfnstategrpcclientcache ( # 177
updated Bin initialization to use sessionFactory and added a new test for flowfile limits in TestMergeContent to ensure proper session creation and validate flow
replaced Geometry ' s findClosest method with a loop for determining the closest core to improve code readability and maintainability by reducing
added content - length handling in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to ensure that the request is
updated Java2TypeScriptTranslator to handle literal values and added assertions in SyntaxTests to improve type safety and ensure correct formatting of literal values
updated channel bandwidth calculations and adjusted preferred sizes for various channels in the FilterFactory , ChannelizerViewer , and TwoChannelOutputProcessor classes to improve
hbase - 2594 canary : add - allregions option to allow regionserver to run in regionserver mode
removed the NodeModule import from CassandraConnectorFactory and updated the ImmutableMap constructor in TestCassandraConnector to streamline code by eliminating unnecessary
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure the cursor position is reset when necessary
added minimum size constraints for CallDialog and updated frame width and height calculations in OneToOneCallPanel to ensure that the frame dimensions do not exceed
fix loss of state information during world gen
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit ' s TestSetup and TestSuite classes to improve test structure and
added null check and removal logic for KerberosPrincipalEntity in KerberosPrincipalDAO . java and removed unused imports in KerberosPrincipalEntity .
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary parameter
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 559 .
updated the error message for the build hint in AndroidGradleBuilder . java to provide clearer guidance on how the licenseKey is defined
updated the method in ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` D
[ drools - 705 ] add support for ` ` bot - inf . classes . ' ' and ` ` bot - inf
added an assumption to check for the latest version of the CheckIndexTest to skip tests that are not running on the latest version 19
removed unnecessary context parameter from assignTargetsForSplitScreen methods in AbsSwipeUpHandler and RemoteTargetGluer classes to simplify the method signature
refactor LeaderLatch class to improve code readability to enhance maintainability and facilitate future updates
added methods to initialize Zksnark parameters in SolidityNodeHttpApiService to enable dynamic configuration of the Zksnark parameters
refactor ` TransactionConfidence ` and ` TransactionConfidence ` classes to use a new ` getDepthFuture ` method to improve concurrency handling and
added a new ` createMediaRecorder ` method to ` CodenameOneImplementation ` , ` Location ` , and ` MediaManager ` classes
initialized the platformName variable to " ios " to ensure a default value is used for the iOS platform
doc : generate sample code in the java microgenerator ( # 439 )
simplified conditional statements in Graphics2D . java for better readability to enhance code clarity and maintainability
refactor CreateVisibleSignature class for improved readability to enhance maintainability and clarity of the code
added error handling for outgoing frames in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing
replaced the try - catch block with a privileged action for checking the caller class loader to improve security by ensuring the caller class loader is
added logic to update the parent of a category to null if it does not match the category ID to ensure that the parent of a category is
updated contribs title handling in ContributionManagerDialog to differentiate between mode , tool , and library types to improve clarity and usability
added a ` vwap ` field and its getter / setter methods to the ` Ticker ` class and updated the ` Ticker `
added a ` NoWidgetsView ` parameter to the ` SearchAndRecommendationsScrollController ` class and updated related logic in ` Widgets
add api for rendergraphapi to make it easy to use .
added a color setting for primary color in NCFirebaseMessagingService to enhance the visual appearance of the NCFirebase messaging service
refactor ShadowUsbManagerTest class for improved readability to enhance maintainability and ease of understanding
updated calculations in AbstractDifferenceRecommenderEvaluator and added logging in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to improve accuracy of
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure that the selected configuration is updated correctly
updated calculation for width and height in AndroidGraphics . java to ensure that bounds do not exceed the specified width and height to prevent potential issues with
replaced instances of ` HashMap ` with ` LinkedHashMap ` in multiple classes to ensure consistent insertion order across the codebase
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a more
( chore ) camel - core - optimize : migrate camel - test to junit5
added WebsocketIngressIntegratedBootstrap and WebsocketPluginTest classes for integration testing to enhance testing capabilities for WebSocket communication in the application
[ ds - 1342 ] remove unused test case for getservicebyname config
refactor authentication comparison logic to use a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
refactor code to use a local variable ` callNodeType ` instead of ` callNode . getType ( ) ` to improve code readability and
added an ` @ Insecure ` annotation to the ` MessageBuffer ` class and modified the ` MessageBuffer ` class to include additional methods for insecure
added new Hive configuration variables in HiveConf . java to enhance configuration flexibility for various Hive types
initialize scopes and policies with a new HashSet instance in ResourceSet . java and add a null check in DefaultResourceSetService . java to ensure
added a constructor to the MultiReader class that accepts a Collection of ReaderFinishedListeners to enhance flexibility in handling reader closure behavior
refactor multiple socket channel implementations to improve code organization to enhance maintainability and readability of the socket channel implementation
simonstewart : refactoring test to use setvalue ( ) instead of clear ( )
refactor ` getFirstTypeArgument ` method to be final and update class declarations accordingly to improve code clarity and enforce immutability of the
changed return types of keySet and values methods from Set to KeySet and Values to improve type safety and clarity in the code
added duration field and methods to set and get the animation duration in FlipTransition to enhance flexibility by allowing customization of animation duration
removed logging statement for invalid subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
update major and minor version from 8 to 9 in ForgeVersion . java to reflect the new version of the application
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for unsupported warnings in ` StackLocator . java `
[ javaparser ] add support for java 16 and java 14
updated padding values for background elements in ExpansionViewHelper . java to ensure proper padding for multiple replies in the status view
[ hotfix ] fix npe in abstractpartitionprimaryreplicareplicaantiEntropytask
added metadata handling in SeedUrl , SeedResource , and SeedUrl classes to enable retrieval and setting of metadata for Seed requests
fix npe in patternbuilder when declaration be null
refactor TestCoprocessorWhitelistMasterObserver class for improved clarity to enhance maintainability and readability of the test code
ww - 4891 add package name to validator config ( # 4892 )
updated assertions in IterableTest to use ` Arrays . < Object > ` instead of ` asList ( ) ` and ` containsExactly ` to
added ` stream ( ) ` and ` parallelStream ( ) ` methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and `
replace the return statement to clone the notifInfo object to ensure that the original notifInfo is not modified after modifications
refactor command key comparison logic to use commandConstants and iterate over command keys to improve code readability and maintainability
refactor AEADBlockCipher class for improved readability to enhance maintainability and facilitate future updates
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` WebVariablesMap ` , and ` WebVariablesMap
added a null check and initialization for ` id ` in ` PackageResourceTable . java ` and updated default resource mode in ` Robolect
added a conditional check for ` ulSize ` and ` ulPos ` before retrieving the table buffer in ` TrueTypeFont . java ` to
refactor SignPlugin constructor to accept a List of message readers instead of a static list to enhance flexibility by allowing dynamic configuration of message readers
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added validation for remote repository in StandardMavenAuthenticationProvider to ensure proper validation of the Maven repository before proceeding
refactor AudioNode class for improved readability to enhance maintainability and clarity of the code
added SSL context initialization and exception handling in LinkyHandlerFactory . java and updated HTTP client cookie store usage in EnedisHttpApi . java
refactor HiveFunctionRegistry to use streams for splitting strings to improve readability and maintainability of the code
fix for http : / / issues . apache . org / activemq / browse / amq - 4445 - add service name
updated the ` getBuildTargetForAlias ` method to include a ` possiblyFlavoredAlias ` parameter and modified the return statement accordingly to handle
camel - 14263 : camel - olingo2 - do n ' t process olingo2 result if there be no feed
added support for retrieving Hive version from EquIVALENT _ VERSIONS map to improve code readability and maintainability by using a
do n ' t attempt to expunge a vm if we do n ' t have it
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
updated ONDashClockExtension , AlarmReceiver , and ONDashClockExtension to use a new method to retrieve the alternative title to
updated GoogleAuthUserConfigTable and TotpEndpointIntegrationTests to use " nvarchar / varchar " instead of " varchar " and added
replaced calls to ` editor . commit ( ) ` with ` apply ( ) ` in multiple Java files to improve code readability and maintain
added TestIdleListener to the StandardSession constructor to enhance session management by allowing idle listeners to be registered
[ beam - 10663 ] add testid to bigqueryioit output ( # 10763 )
set the background resource of the predicted icon in HotseatPredictionController and reset the background in BubbleTextView to improve visual consistency
fix typo in mondrianproperties . getflushafterquery ( )
add unit test for system . runtime . nodes and system . runtime . transactions
updated LIMEExplanation and LIMEColumnarTest to conditionally return active features based on the presence of ALL _ OUTPUTS to ensure
added a new command line option ` -- r ` to the ` AppleSimulatorController ` and updated related tests to allow users to specify
replaced calls to getArea ( ) . getCurrentParagraph ( ) with area . getCurrentLineStartInParargraph ( ) for better
added a check for the availability of the pipeline in ContainerBase and StandardContext classes to ensure proper handling of lifecycle states based on the availability of
added background clipping to the outline in QsbWidgetHostView to enhance the visual appearance of the QSB background
added timing checks and improved flag conversion logic in SQLManager and improved string concatenation in BlockTypeListFlag and PlotArea classes to enhance
replaced multiple specific OpenGL imports with a wildcard import and modified depth handling based on the floating text rendering condition to improve code readability and
rename ' linux ' to ' linux ' to avoid confusion .
added getter and setter for the propagation behavior in JdbcAggregationRepository to allow configuration of the propagation behavior for transaction template and read - only transactions
add support for l1 and l2 regularization in layervalidation
added exception handling around the ` readWrite ( ) ` method in ` AbstractChecker . java ` to improve robustness by logging exceptions when reading
changed the visibility of the colorStack array from static to instance and updated its assignment to enhance flexibility by allowing access to the colorStack variable
updated method calls from ` false ` to ` true ` in ` Configuration . java ` to enable the retrieval and checking of mapped statements in the
convert the currency to lowercase in BTCEPollingMarketDataService to ensure consistent depth retrieval across different locales
update channel state test to reflect change from 0.312716 to 0.22700
remove unused ` versionedhashes ` field and related getter / setter from ` enginepayloadparameter `
reset the value of triggerPrice and onTriggerPriceTextFieldChanged in MutableOfferView . java to ensure proper handling of price field changes in the
refactor feedback submission edit page handling in StudentFeedbackSubmissionEditAction . java to improve clarity and functionality to enhance user experience by
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2594 addendum fix checkstyle violation in hstore . java
fix for # 1188 - savemanybean do n ' t update property when bean be read - only .
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control the behavior of
added static methods to set layer type and paint in ShadowRenderNode to enhance functionality for setting layer properties in the rendering node
replaced specific imports with wildcard imports and added accessibility support in LWChoicePeer . java to improve code readability and ensure proper visibility
removed redundant null check for the insert variable in StressProfile . java to streamline code by eliminating redundancy
replaced instances of ` asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper classes to streamline
added null check for requests in MockServerEventLog . java and improved logging in HttpForwardObjectCallbackActionHandler . java to enhance robust
added warning log for missing properties file in DefaultEnvironment . java to improve error handling for properties file loading issues
refactor SessionDataSet handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added checks for multicast support in the SetOutgoingIf class to ensure proper handling of network connections based on network capabilities
modified the initialization of sqlCommand to include the length parameter to ensure proper handling of command parameters during execution
added latestConsumeTime and latestConsumeTimeForEnergy methods to UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and updated its usage in the ` SessionManagementConfig
improve error message when a token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` for verifying the presence of keys in assertions to ensure correctness of
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and modified method signatures in ` JdbcProxyGenerator . java ` to implement temporary statement methods
added a ensure method to create a ServerWebSocketContainer and updated the start method to accept a Handler instead of ContextHandler to improve WebSocket container initialization
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` toLanguageFlags ` and ` getLanguageFlags ` methods to improve immutability
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a static final empty MethodHook array and refactored hooks initialization in MethodHook . java to improve memory management and simplify hooks initialization
added a grantAccess flag to MockAuthenticationManager and modified the return logic in MockAuthenticationManager to allow control over access control based on the grant
updated method signatures in JobListener , SimpleJob , and CompositeJobListener classes to accept JobExecution parameter to enhance the functionality of the afterJob method
added a condition to check if the file can execute before proceeding to ensure that files are only written if the canExecute ( ) method is
chore : update protoc to v3.15 . 3 ( # 339 )
refactor saveservice to use event . getresult ( ) instead of e . result
added new constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , and PROFILE _ NAME in BundleConstants
changed the parameter type of applyRule from Hashtable to Map in SearchExpression . java to allow for more flexible mapping of search rules
use absolutescreenlocatable instead of geowidget in euclidiancontroller
updated JoglGraphics and ProjectiveTextureTest to use RGB565 format and modified texture filtering parameters to enhance texture rendering accuracy and improve
modified the ` setResourceToDelegate ` method to return a ` File ` instead of void and updated its implementation to ensure the output file is properly
camel - 14263 : camel - properties component should intercept from property uri . thanks to sergey for the patch .
updated time comparison logic in ActionScheduler . java and changed expected value in TestActionScheduler . java from 1 to 2 to ensure correct handling of
updated debug log path in DbgPacker . java to include a null check before replacing " debug . log " with " / tmp /
update notification overlay to be able to hide hud hidden
pipe : add pipe . resetgate ( ) to allow pipe to reset gate
refactor TestSupplementary to use Locale . getDefault ( ) for setting the default locale to ensure the TestSupplementary class is properly managed and
updated the team color from 0.8 f to 0.4 f in the Team class to improve the accuracy of the team ' s color
changed the type of ` activeMatchedStates ` from ` Set ` to ` Collection ` and added logging conditions for state removal and hash code generation
updated the condition to check for null annotation in SoftAsserts . java to ensure proper handling of null values and avoid potential NullPointerExceptions
added error logging for invalid JSON messages and improved exception handling in StoragePluginRegistryImpl to enhance error reporting for better debugging and provide clearer
refactor report reporting in CallTreePrinter to use a new method toCsvFile for CSV file formatting to improve code readability and maintainability
added null checks for note and noteTmp in DetailFragment . java and updated method calls in WidgetProvider . java to improve code robustness and
added a peakTasks variable and modified the return logic in AssetManager . java to track the number of loaded tasks and improve the calculation of the
danielwagnerhall : disable native event on window
added support for custom score and fetch interval in the Injector class to enhance scoring flexibility by allowing customization of score and fetch interval
updated import statements from ` org . apache . commons . collections . ListUtils ` to ` org . apache . commons . collections4 . List
modified the null check for zkController in CoreContainer and added a new method isShareSchema in TestCoreContainer to improve code clarity and
updated sizeInBytes method calls to accept a boolean parameter for better control over size calculations to enhance flexibility in size calculations and improve logging clarity
added a null check for the Version1 _ 2 object in VersioningTest . java to ensure that the Version1 _ 2 object is correctly
updated SQL query to include an additional condition for handling domain columns to ensure correct handling of null domain columns in database metadata queries
[ java ] return false for appendnewleadershiptermevent ( ) and appendnewleadershiptermevent ( ) in
removed the ` buildMediaType ` method from ` WebClientPlugin ` to streamline media type handling by eliminating unnecessary dependencies
replaced occurrences of ` fill ` with ` fillSlice ` and ` fillAndGetIndex ` across multiple classes to improve clarity and consistency in
added a new boolean variable ` isCompactedBase ` and modified conditional checks in ` AcidUtils . java ` to improve readability and
updated initialization of immutableStorageScheme and qualifierEncodingScheme to use a default value of NON _ ENCODED _ QUALIFIERS to ensure
added new files for PojoProducersCustomized and RestProducersCutomized in the servicecomb demo package to facilitate
updated cache key references from " cache " to " CACHE _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to improve clarity
[ ambsgmsiv ] remove duplicate registration of avsgmsivprotokeymanager # register ( )
added a new item stack for the Wooden slab in the OreDictionary to enhance the visual representation of the slab in the Ore
refactor multiple session - related classes for consistency and clarity to improve maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` UndefinedSymbolsLinker . java ` to simplify the class
prepare next release 3.2 : update version number to 3.2
hhh - 15836 fix test failure in denyormalizedtablesuppliertest
updated the calculation of spriteBatch ' s draw position in HelloWorld . java to correct the positioning of the texture to ensure proper rendering of
updated the logic for determining the plot ' s position in PlayerFunctions . java and modified the toString method in PlotId . java , and modified
added a deprecated static final Version constant for Lucene 8.5 . 0 to indicate that the version is outdated and should no longer be used
updated print statement formatting in SSLSocketImpl . java to improve code readability and maintain consistency
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing for signed
replaced ` String dependenciesType ` with ` DependenciesType ` enum in ` CoNLLUOutputter ` and ` SemanticGraphCore
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods in ` NoSuchBuildTargetException ` and ` ParseContext `
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild ( args ) . init ( ) ` to
reduced the array size of configBlocks from ` Block . blocksList . length ` to ` 256 ` to optimize memory usage and improve performance
use git - spigot instead of git - spigot
added escaping for PostgreSQL questionmark operators in AbstractSQLChange . java and corresponding test in AbstractSQLChangeTest . java to ensure proper handling of
added ` ofAll ` and ` withAll ` methods to ` MutableBagFactory ` and ` MutableBagFactoryImpl ` classes and corresponding tests
added checks for ' . adoc ' and ' . html ' files and improved error handling in BuildNavAndPDFBody . java to
updated the MqttConnection constructor to include a boolean parameter to enable or disable the Mqtt broker connection for improved performance
replace direct retrieval of ChangeSet with a null check for the root change log to ensure that the change set is only retrieved if it is null
remove unnecessary call to writer . output ( ) in plugin handler . before ( ) .
added database drop functionality in TestHiveMetaStorePartitionSpecs and enhanced logging in TestObjectStore to improve database management and enhance debugging capabilities
added a new parameter " order _ currency " to the BithumbAuthenticated class and included it in the BithumbAccountServiceRaw class
thymeleaf / thymeleaf / thymeleaf / thymeleaf / sandbox / ssefluxwebconfig . java
updated method return type checks to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName
updated YamlResource to replace YAML _ READER with YAML and added a new endpoint for listing Yamls to streamline YAML configuration and enhance
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to allow access to these
refactor thread factory to use a lambda expression and introduce awaitTermination method for asynchronous channel group termination to improve code readability and maintainability
added unit tests for adding a list with simple and mapping converters in MongoTemplateTests . java and created a new class PersonWithAList .
ggb - 1193 fix size of applet in web
replaced direct toolbar visibility setting with a delayed execution using a Handler to improve responsiveness by ensuring the toolbar is hidden after a delay to
refactor the first page reader logic into a separate method ` unpackFirstPageReader ( ) ` and introduce a new method ` isExist
server : do n ' t try to save vm password if vm be not in vr
added new variables usingOutputStream , usingWriter , and isCharacterEncodingSet in Response . java to ensure proper handling of output stream and character encoding
added warning for assignment side effects in GroupDialog to enhance user experience by preventing unnecessary assignment effects
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and clarity of the code
updated the condition in FileUploadApiController to use ` maxWidthWithMargin ` instead of ` maxHeightWithMargin ` to ensure proper handling of icon
refactor key fetching logic in RegisteredServiceProperty and improve error handling in JwtTokenCipherSigningPublicKeyEndpoint to enhance code clarity and ensure proper
updated import statements and added content type checking in Basic . java for Windows and Windows to enhance compatibility checks and ensure correct content type handling for Windows
fix ( netty ) : use jzlibdecoder / jzlibencoder instead of jzlibdecoder
added a method ` doesClassLoaderDescendFrom ` to the ` Util ` class and refactored conditional checks in ` Class ` and ` Method
removed the ` doConnect ` parameter from the ` connect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` classes to simplify the
added a new test method for handling empty final columns in TestCsvHeader . java to ensure correct handling of empty final columns in CSV processing
added compass alignment and margins to NearbyMapFragment to improve visual appearance of the NearbyMapFragment
added unit tests for the ` computeNearestDistance ` and ` computeInterpolation2 ` methods in ` GeoPathTest . java ` to ensure correct
added exception handling to the ` getLeafFilterBuilderByType ` method and improved error logging in ` ParquetFilterPredicateConverter ` to enhance
added language handling for video stream types in LibMediaInfoParser . java to ensure correct language settings are used for video stream processing
added a warning log when schemas in the new version exceeds the old version to improve error handling and provide feedback when schemas are less than the old
replaced manual array resizing logic with a new ` addAll ` method in multiple array classes to simplify array manipulation and improve code readability
reformatted try - catch blocks in DataSourceProxy . java for improved readability to enhance code clarity and maintainability
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a List of ClientRegistration objects instead of a List to
added a method ` resetUIState ( ) ` to the ` SchemaUpgradeHelper ` class to ensure the UI state reflects the current state
added handling for failed steps in JUnitReporter and corresponding tests in JUnitReporterTest to ensure proper reporting of pending exceptions and improve test coverage
add a patch for playerselector ( # 179666 )
added ` Closeable ` interface to the ` Selector ` class to implement the ` Closeable ` interface for better resource management
updated connection pool configuration in MaxConcurrentStreamsTest . java to utilize MultiplexConnectionPool for improved connection management to enhance connection management and
added multiple calls to stringType ( ) in CoreOptions . java to ensure consistent handling of string types across the application
updated HqlQueryRenderer and UserRepositoryFinderTests to handle both character and parameter types to ensure correct parsing of query tokens based on context properties
updated status checks in HttpGenerator , HttpChannel , HttpChannelState , and StatisticsHandler to use HttpStatus . NOT _ SET _ 000 instead of
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix test which fail on slow ci server
refactor ParquetFormatPlugin to utilize a new expandSelection method and improve file selection handling to enhance code readability and maintainability by
modified the success flag and added diagnostic handling in Jsr199Javac . java to improve error handling and provide clearer diagnostics during compilation
added a new ` BaseTableModelListener ` class and integrated it into the ` DefaultSortedTableModel ` to handle table change events to enhance
updated the condition in ServerConfig to check for a maximum number of 65535 instead of 49152 to ensure that the number is within a valid range
added support for DocumentsContract in AuthenticatorActivity and AccountRemovalJob based on Android SDK version to enhance functionality for document provider management on devices running
removed logging start from MainApp . java to streamline the application logging process
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for improved exception analysis to enhance robustness of request rejection handling by
update arraycopy method to use ' this . length ' instead of ' length ' for better readability to improve code clarity and maintainability by
pdfbox - 4892 : throw illegalargumentexception if filterlist be empty
added a new class ` TbStopWatch ` to handle stop operations in the application to provide a mechanism for managing time - related operations in the
ppliststore : fix typo in init ( )
mark multiple classes as deprecated and mark them as deprecated to indicate that these classes are outdated and should no longer be used
[ zeppelin - 4892 ] fix classloading issue in remoteinterpreterserver
remove unnecessary entity check from command source check in forgehooks .
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
updated parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve
# 1394 - add simplename ( ) method to beandescriptor to provide a way to retrieve the name of the bean
updated response URLs from " wro / all . js " and " wro / all . css " to " static / all . js
added a test method to show the latest timeseries in IoTDBMetadataFetchIT . java to ensure that the functionality of the showLatest timeseries functionality
updated parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to improve clarity and consistency in naming conventions
refactor exception handling in OCSPChecker to use a conditional check for CertPathValidatorException to improve clarity and maintainability of exception handling
( chore ) camel - benchmark : add option to disable write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to validate slice size reopening in map operations to ensure correct behavior of slice size reopen
add a shapeless recipe to the game ' s inventory . close # 1193
[ mahout - 1342 ] fix arrayindexoutofboundsexception in sequentialaccessSparsevector . iterate ( )
added metadata handling for Shulker and Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to
added a ` getDebugLogger ( ) ` method to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
http : / / issues . apache . org / jira / browse / amq - 4898 - add max _ filename _ length
replaced the instantiation of UpToTagChangeSetFilter with a direct instantiation and added a check for tag matching in the Liquibase class
changed generic type from ` T ` to ` T2 ` and replaced ` LinkedList ` with ` ArrayList ` in multiple files to improve type safety
refactor methods in BrokerRoutingManager for improved clarity to enhance maintainability and readability of the code
change volume and up paint color from gray to green in CandlestickRenderer . java to improve visual consistency with the Candl
refactor layout parameters in InsettableFrameLayout to use a boolean flag for ignoreInsets to enhance flexibility in layout parameters based on
added a new ` duration ` parameter and updated the ` buildTargetDurationListener ` to include it to enhance the functionality of the ` duration `
replaced ` @ Profile ( " @ Profile " ) ` with ` assumeTrue ( " expected db profile to be enabled " ) ` across
added null check for user before processing claims in OAuthConfirmationController . java to prevent potential NullPointerException when user is null
camel - 1748 : camel - test - add advicewith to replace route from endpoint in camel - test
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` in ` CassandraConnection . java ` to improve performance by using a more
api : listpublicipaddresses : add sourcenetworkid parameter to listpublicipaddresses api
added tests for ignoring battery optimization in ShadowPowerManagerTest and implemented it in ShadowPowerManager to ensure correct behavior of isIgnoringBattery
updated the version property retrieval in Jetty . java to use ` __ buildProperties . getProperty ( " jetty . version " ) ` to
added unit tests for verifying invocation order in NumberOfInvocationsInOrderVerifier to ensure correct behavior of invocation verification based on verification order
refactor debug evaluation logic in TRegexExecNode . java to improve clarity and maintainability of the code
added a " - foreground " argument to the startProfile method call in NewProfileExtensionConnection . java to enhance user experience by providing a foreground
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve resource management
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related logic
updated logging statement to include file name in CodeEditorView . java and added null checks for actionsList in EditorTextActionWindow . java to
improve error message for skipped entries in ClassFileReader and JdepsTask to enhance clarity of warning messages for better debugging
refactor Fetcher and FetcherTask to use LinkStorage for document storage to improve performance and maintainability of the code by utilizing L
updated the ` populateBubble ` method to include an additional ` BubbleBarBubble ` parameter and added a check for existing existing B
updated warning messages to throw an IllegalArgumentException for route issues to improve clarity of error handling and provide clearer context during job execution
refactor the ` buildRpcExt ` method to remove the ` methods ` parameter and simplify the event publishing logic to improve code clarity and
[ java ] use nak _ multicast _ delay _ generator instead of nak _ multicast _ delay _ generator .
updated the Gson initialization in ClientInformationResponseView . java to include client secret details and added JSON serialization for client information to enhance the clarity
added a conditional check before setting the average price for order in HuobiAdapters . java to ensure the order ' s average price is only
removed the rawExecutionReports ( ) method from the execution report subscription in BinanceStreamingMarketDataService . java to streamline the execution
added exception handling in LdapTimeoutTest and updated timeout condition in ReadServerTimeoutTest to improve error reporting and ensure proper timeout validation
improve error message when the user dictionary do n ' t exist .
updated password handling logic in AmbariServerConfigurationHandler . java to check for blank password file or credential store aliases before updating to ensure that
added a check for already parsed segments in ParseSegment . java and implemented the isParsed method in SegmentChecker . java to improve segment parsing logic
[ flink - 18936 ] [ yarn ] add yarn . application - attempt - failures - validity - interval configuration for y
do n ' t unload the h2 driver if it ' s not included
hbase - 2594 add default value for snapshot - based inputformat scan ( # 2594 )
added fixedHeight and fixedWidth fields with their respective getters and setters in LoginInstanceRequest . java to enhance instance positioning capabilities for improved user
added a cornerRadius parameter to the update methods in ActivityControlHelper , WindowTransformSwipeHandler , ClipAnimationHelper , LauncherLayout
updated COMMANDS _ TO _ REMOVE array to include additional conditions for DESC ( RIBE ) and added additional filter settings for cross product
added retry logic for the connection from the pool in TxnHandler . java to handle potential connection issues around BONECP bug to improve reliability
change txnprepareoperation and txnreserve to txncheckreserve and add poll - operation to backup reservation
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class that initializes the ` strings ` array to facilitate
updated SQL delete statements in CostBasedDecisionIT and DeleteCompiler to use " DELETE ROWS CLIENT SELECT " instead of " DELETE WS " to
added handling for " insufficient data written " exceptions in BaseServiceException and corresponding tests in BaseServiceExceptionTest to improve error management and ensure proper retry
added support for rapid install types in AdbHelper and RealAndroidDevice classes to enhance functionality for faster ADB installations
updated the seed pattern in SortTest . java from " = ( - ? + ) " to " = ( - ? + ) " to
refactor MultimapSubject to utilize a factory for Iterable values and improve string representation to enhance flexibility and maintainability of the code by
modify return value calculation in Workspace . java to correct the display size calculation based on device orientation
added support for transcoding media items in the Transformer and related classes to enhance flexibility in transcoding behavior based on media item counts
added localize functionality to the list of strings in Picker . java to ensure consistent formatting of localized values for better user experience
camel - 2348 : camel - cxf - do n ' t swallow exception when try to connect to cxf
hhh - 10663 - postgresql81dialect . convert ( sqlexception , message , sqlstate ) do n ' t return
added null check for queryId and improved exception handling in HiveStatement to enhance robustness and prevent potential NullPointerExceptions during execution
[ beam - 10619 ] fix pardo test for usesunboundedpcollections and usestimerersinpardo
removed unnecessary em tags from text formatting in GpsSimpleViewFragment . java to streamline code by eliminating unnecessary em tags
[ java ] remove unused leadershiptermid parameter from joinlogasfollower .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code clarity and maintainability by encapsulating the exchange variable
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the ` token ` method to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and consistency in
added null check for the tree before processing markers in Recipe . java and created a new MarkersTest . java file to enhance robustness
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 576 : font
changed the type of the email variable from a single string to an array of strings to improve type safety and reduce potential null pointer exceptions
refactor exclusion handling in RawMavenResolver to use a set for improved clarity to enhance code readability and maintainability by redu
refactor DSXAdapters , DSXPairInfo , and DSXBaseService to utilize DSXExchangeInfo for better error handling to
refactor multiple test classes to improve code organization to enhance maintainability and readability of the test code
[ drools - 90 ] fix drools - 90 : incremental compilation fail if kiemodule pom be invalid
updated the initialization of the ` copy ` variable and added a conditional check for ` sobj . has ( k ) ` before calling ` define
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code readability and maintainability
truffle : use unreflectgetter / unreflectsetter instead of findstaticgetter / unreflectgetter / unreflectsetter
added a new method parameter for the CompletableFuture annotation in DefaultNullnessAnnotations . java to enable the handling of completed stages in the database
updated the calculation for the freeze check point in PlaybackController . java to correct the calculation of the freeze check point based on the
added annotation handling in AbstractCommonPowerMockRunner and removed the run method from PowerMockRunner to streamline the execution process by eliminating
replaced ` typeCode ` with ` realType ( ) ` in ` TCUtility . unmarshalIn ` method call to ensure compatibility with the
refactor indentation logic for method elements in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to improve compatibility with JUnit ' s testing framework
updated HTML output format in HtmlProcessInformationsReport . java to include wrappedText to enhance the display of wrapped text in HTML output
refactor JdbcStepExecutionDao , MapStepExecutionDao , SimpleJobRepository , and MockStepDao to streamline execution context handling and improve
added a condition to check if the media folder is not hidden before adding it to the child to ensure that a new media folder is only added
added null checks for firstWidget and secondWidget in SplitPane . java to ensure proper handling of null widgets and prevent potential NullPointerExceptions
added handling for parameterized Java types in RemoveUnusedImports . java to ensure proper type resolution and avoid potential null pointer exceptions
added a null and empty check for modInfos in UniqueModListBuilder . java to ensure proper handling of null and empty modInfos to avoid
changed the logger variable from instance to static in TicketGrantingTicketImpl . java to allow for more flexible logging by allowing the logger to
updated SQL query to use SNAPPY . 81 + 12 instead of SNAPPY . RLE to ensure compatibility with the latest SNAPP
added a method to check if a value is a value in AttrData and updated the Converter error handling in R . java to improve value validation
added support for character modifier keys in US International PC in CPlatformResponder . java and implemented utility methods in LWCToolkit .
[ java ] set aeron _ publication _ connection _ timeout in spysimulatedconnectiontest .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon "
replaced direct execution of the " pm install " command with an assertion to check if the device installation fails to ensure the device is rooted
remove oracle _ sql _ rowslimiter and add @ ignoreplatform ( platform . oracle )
updated test assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to reflect the correct number of secure transport protocols from 1 to 3 to ensure
updated references from ` e3506ff7c11d54f186dc79ddada ` to ` fc76b63
added a check to prevent haptic feedback dismissal from running concurrently to avoid potential conflicts and ensure smoother user experience during task navigation
add support for projectile source in explosioneventworldexplosion .
removed unused imports and modified getItemId method in SymbolInputAdapter . java to improve code clarity and maintainability by eliminating unnecessary dependencies
updated API endpoint parameters from ` limit _ bids ` and ` limit _ asks ` to ` limit _ asks ` in ` Bitfinex
added a check to remove single quotes from the result string in StaxConverterTest . java to ensure proper handling of special characters in the result
[ flink - 32994 ] [ runtime ] add proper tostring ( ) implementation to the leaderelectiondriver implementation to have human - readable version of the driver in log message
refactor SqlSessionFactoryBean class to improve code readability to enhance maintainability and facilitate future updates
simplify TripleInvoker to use rpcutils . isgenericcall ( ) instead of reflectutils . isgenericcall ( )
replace error handling with a runtime exception throw in PolygonRegionLoader . java to improve error handling by throwing a runtime exception instead of throwing an error
added a method to check if a threadlocal Deadline is started and implemented timer registration logic in RawStoreProxy to ensure that a deadline
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer context when a channel is closed
added null check for genres before setting text to avoid potential NullPointerException when genres is null
[ hotfix ] [ checkpoint ] fix checkpointcoordinator reset hook not call in region recovery
fix entitydatajsonformat and entitydatajsonformat to handle collection of mappedcontainers
[ iotdb - 4892 ] fix npe in walnode . getoldestunpinnedmemtableinfo ( ) ( #
updated handler invocation in Endpoint . java and added a new test for retrySameHostOnCallbackFailure in HttpTest . java to ensure proper handling
fix checkstyle issue in package - info . java
added a new test class SQLServerEscapeQuestionCharacterTest for SQL server escape functionality to ensure correct handling of escape characters in PostgreSQL queries
added nullability annotations to constructors in CamelModule and JoobyBeanRepository classes to enhance code robustness by preventing potential NullPointerExceptions
replaced synchronized block with Util . wait for bc wait in JavaFXSEPort . java to improve code readability and maintainability by using
changed the package of ParameterFlags from ` com . kenai . jaffl . ParameterFlags ` to ` com . kenai
refactor cropping logic to handle both RegionDecoderCropBehaviour and Bitmap objects more effectively to improve flexibility and ensure compatibility with different image
removed appName parameter from several configure methods in InputRC and InputRCTest classes to simplify method signatures by eliminating unnecessary parameters
[ gr - 25946 ] add test for ignored dependency in install and uninstall .
danielwagnerhall : use ` ` -- headless = chrome ' ' instead of ` ` headless = chrome '
replace value assignment with value . intern ( ) in VersionedValue . java to ensure the value is properly managed and avoid potential memory leaks
added a check for " MOVE " in the status condition to ensure proper handling of MOVE operations in the database
updated date formatting for ISO8601 _ PERIOD _ MICROS and ISO8601 _ PERIOD _ MICROS in FixedDateFormat
updated import statements from ` org . apache . curator . shaded . com ` to ` com . google . common . collect ` in
[ hotfix ] [ runtime ] fix race condition in startspillingbuffer ( )
updated permission checks in UntrustedVisit . java to include ADMIN _ VISIT _ UNTRUSTED permission to ensure that untrusted visit
fix ( jabber ) : do n ' t send jabber message if jabber be not register
updated the condition in BasicURLNormalizer to include additional hex values to enhance URL normalization accuracy by accommodating additional hex values
changed access modifiers of several methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a condition to compare ClockRate in EncodingConfiguration . java to ensure correct processing of compression rate comparisons
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and updated ` SeparatedProjectsGenerator ` to return a list of generated
updated the zero digit setting logic in HostLocaleProviderAdapterImpl . java to handle invalid calendar IDs to ensure that the zero digit is set correctly
added a new file ` MSwingUtilities . java ` that defines utility methods for managing image icons and images to facilitate easier
camel - 14263 : camel - mail - make it easy to use the async producer instead of the default producer .
added @ RefreshScope annotation to CasCoreWebConfiguration , PasswordlessAuthenticationConfiguration , and CasCoreWebConfiguration classes to ensure proper refreshing of
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , and modified SchemaCrawlerMojo to utilize it to enhance script
updated content type check in Request . java and added a new test method in RequestTest . java to ensure correct handling of query parameters after read
added checks to ensure glyph dimensions are non - negative and improved touch focus handling in multiple classes to enhance robustness by preventing invalid glyph
replaced ` reportFailure ` calls with ` runCloseHooks ` in ` DeploymentManager . java ` and added a new test in ` Deployment
add a forceignore option to the lexiconrecipemappings . stacktostring ( ) so that it do n ' t overwrite the itemstack
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow for more time to complete before proceeding
replaced specific StringUtils imports with a wildcard import and added a condition to check if shortName is not blank to improve code readability and maintainability
make holidayxmlurl use class loader instead of hardcoded url
added a new file FieldUtils . java with utility methods for retrieving and setting fields in a class to provide utility functions for retrieving and setting fields
removed conditional check for SPECULATIVE mode in DeferredAttr . java and added a new DoubleStaticImport . java file with a test method to
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding adjustments for custom content to improve
add the ability to save the last xabber account if the token be invalid .
added a new method ` setvar ` to handle variable setting in ` Commands . java ` to enable users to specify a command line option for
fix catentity . onanimaltame not fire on animaltame event .
fix sort by range bug in window frame
pdfbox - 4892 : add a test to verify that the font name be the correct
added a method to set the app ' s mode in PageListController to ensure the application uses the correct mode for better user experience
added support for passing Docker file arguments in the ImageFromDockerfile class and created a new DockerfileBuildTest class to enhance flexibility in
added a null check before creating a new ThreadInfo instance to avoid potential NullPointerExceptions when accessing threadInfos
update conditional check in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of 0.00001 f to ensure proper handling of
[ hotfix ] [ checkpointing ] add debug log to singlecheckpointbarrierhandler
added new tables and their respective types in the Schema . java file to enhance functionality for managing various table types in the application
added a minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors and updated related methods to enhance flexibility in fuzzy queries by
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
added support for immediateflush in outputstreamappender in layoutwrapperservice .
added " org . springframework . boot . autoconfigure . RabbitAutoConfiguration " and " org . springframework . boot . autocon
modified the null check for the component in JLayer . java and added a new test class bug6875716 . java to ensure that
updated import statements from ` avro . shaded . com ` to ` com . google . common . base ` in multiple Java files to ensure
refactor block handling in BciBlockMapping and GraphBuilderPhase to improve code clarity and maintainability by consolidating return and unwind
added getter and setter methods for legacyRenderer in mmm Label . java and ppp Label . java to enhance code readability and maintainability
replaced the use of ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and
added null check for mObserver before accessing its properties to prevent potential NullPointerException when mObserver is null
removed the generic type parameter from the ` thenComparing ` method in ` Comparator . java ` and added a new ` Department ` class
refactor DocIdSet class for improved clarity to enhance maintainability and readability of the code
updated the end time UTC setting in UserRuleAnomalyFunction . java to use currentKey instead of null to ensure accurate time tracking for user
added a try - catch block around NumberFormatException in VisualScoreTagTest . java to ensure robustness by handling potential NumberFormatException during parsing
added a class loader to the naming policy setting in MockFactory . java to ensure the correct class loader is set for mocking classes
added a new ` OriginalFormat ` class to handle object formatting and parsing in ` ConverterWithEnumFormat . java ` to facilitate
replaced hardcoded string " yyyy / MM / " with a static final constant PATTERN _ YYYY _ MM in FileStorageUtils . java to
refactor JAWTRenderer class for improved rendering performance to enhance performance and maintainability of the rendering process
camel - 15836 - camel - aws2 - * : enable autowire on the lambda client , regen test
fix mac address generation in uservmmanagerimpl . add test for invalid mac address
added a condition to check if the string header name is " Authorization " in ProxyServlet . java to ensure proper handling of authorization headers in the
updated method name from submit to execute in TraceableExecutorService . java to improve clarity and consistency in method naming
added ` getDetails ( ) ` method to multiple classes and updated ` getDetails ( ) ` method in ` Authentication ` , ` AbstractAuthentication
updated the randomness of the ` randUsePoints ` variable to use a fixed value of 0 instead of a fixed value to ensure that the
rename method ` appendDot ( ) ` to ` endSentence ( ) ` across multiple classes to improve clarity and consistency in method naming
updated the ` formatForConsole ` method to include ` Locale . US ` as a parameter in multiple test classes to enhance flexibility by allowing
replaced specific imports with a wildcard import and modified the handling of unparsed arguments in GroovyParserVisitor . java and GroovyPrinter . java to improve
added boundary checks for bottom , bottom , and right inset values in Border . java to ensure that inset values are within bounds to prevent
refactor GestureState initialization to use a static final instance of GestureState to improve code readability and maintainability by centralizing state
replaced ` DateTime ` with ` java . time ` in ` LlapServiceDriver . java ` and updated version formatting to use ` DateTimeFormatter
refactor openblas and openblas _ nolapack classes for improved readability to enhance maintainability and clarity of the
fix potential resource leak in torrentsstorage
added synchronized keyword to the initTxnMgr method in SessionState . java to ensure thread safety during transaction management
increased the timeout duration from 120 seconds to 480 seconds in AbstractDistribZkTestBase and set SO _ TIMEOUT in Abstract
added a new file ` SearchResults . java ` to handle search results from a document to facilitate the retrieval and retrieval of document
add a null check for threadsCPU and reorganize the threadCPURefresher initialization in CPUSamplerSupport . java to improve code
refactor the initialization of the primitives array to use a null check and initialize body if it is null to improve code clarity and ensure proper
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to the TestBack
updated the feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the condition
added a new API endpoint to retrieve tenant pools for the current instance to enhance the functionality for managing instance pools in the application
refactor canEarlyTerminate method to improve clarity and functionality to enhance code readability and maintainability by reducing duplication
updated InlineBytecodeGenerator to use isToString ( ) instead of isToString ( ) and added new test cases in InlineByteBuddyMock
added debug logging statements to CxxCompileStep and CxxPreprocessStep for improved error handling to enhance visibility into compilation and preprocessing
add utility . removecharacter ( string , char ) to remove the ' - ' character from the string
fix ( config ) : remove metadata _ service _ protocol _ key from url
add a new interface ` DataTransformer ` in the ` org . kie . api . runtime . process ` package to provide a way to
changed the type of ` values ` from ` Object [ ] ` to ` Number [ ] [ ] ` in ` DistributionGraph . java `
simplified conditional checks in FormatStringChecker . java to improve code readability and maintainability
solr - 1391 : fix a bug in electioncontext . setcore ( null ) where solrcore be null .
refactor ITestDbTxnManager class for improved readability to enhance maintainability and facilitate future development
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and prevent potential memory leaks
added tests for the MapModel functionality in CodeFirstPojoClient , CodeFirstPojoIntf , and CodeFirstPojoClient to
pdfbox - 4892 : simplify code , a suggest by valerybokov
refactor the selection option handling in ScaleDialog . java to improve clarity and functionality to enhance code readability and maintainability by reducing
rename playertrvelbelt . updateplayerstepstatus to tickBelt and add a null check for step height
pdfbox - 4892 : skip appearance stream if there be no appearance stream
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to improve insertion order of keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer . java and modified Page
updated the preload version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java
added conditional check for agentSupport in MainMockTransformer and created MockStaticWithPrivateCtor and StaticWithPrivateCtor classes to enhance flexibility in
pdfbox - 4892 : optimize , a suggest by valerybokov
bugfix # 11877 , set window title for sun . awt . xtoolkit
modify the depth calculation based on the color model ' s pixel size to ensure correct depth based on the color model ' s pixel size
added error response body handling in OkHttpDataSource to improve error reporting for unsuccessful responses
added a static method ` exit ` in ` TopLogging ` and replaced ` TopSecurityManager . exit ` with ` TopLogging . exit `
updated the logic for determining the start index in NativeRegExp . java to ensure correct index assignment based on regular expression type
disable flaky optaplanner daemon solver test ( # 468 )
updated the variable reference from ` lowIndex ` to ` highIndex ` in ` DefaultAllocator . java ` to ensure the correct allocation is used
added a method to clean entries without feeds in DatabaseCleaner , FeedEntryDAO , and AdminREST classes to improve the management and management of
changed the return type of appendToLabel method from void to this to allow method chaining in the AtomicCounter class
[ java ] use noopidlestrategy instead of busyspinidlestrategy in lowlatencymediadriver .
added checks for HTTP status not modified in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure headers are only written when not modified
refactor instrumentation methods to use ToolEvalNodeFactory instead of SpliceNode to improve code clarity and maintainability by using a more d
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to correctly calculate the dimensions of the tab area to ensure
updated KrakenMarketDataService and KrakenMarketDataServiceRaw to accept an optional argument for depth retrieval to enhance flex
added methods to get file separator and absolute path in FileEndpoint , GenericFile , and RemoteFile classes to ensure consistent file path handling across different
added a new method ` build ` to ` JavaProvenance ` and updated ` MavenProjectParser ` to include dependencies to enhance the build process
added trace logging for Hive functions and UDFs in HiveFunctionRegistry . java and updated condition checks in InbuiltHiveUDFs .
increased loop iteration from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for cloud state updates
fix potential npe in hintedhandoffmanager . sendhint ( )
added a check for writable output files in NativeErrors . java to handle cases where the output file is not writable to improve error handling and provide
added imports for PackageInfo and NameNotFoundException , and implemented package info retrieval in LauncherModel . java to ensure proper handling of package information retrieval
added error handling for CloudRuntimeException in DatabaseUpgradeChecker . java and modified the DELETE statement in Upgrade410to420 . java to improve
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantChunkOrientedTaskletTests to
replaced ` startsWith ( completed ) ` method with ` regionMatches ( completed ) ` method in ` LineReaderImpl . java ` to improve
added global data table descriptors and modified return logic in Recipe . java to include global data tables to improve data handling by eliminating unnecessary
added functionality to dismiss all tasks in the overview in TaplTestsTaskbar to improve user experience by ensuring tasks are dismissed when
database upgrade : add dbupgradelibuilder interface for system vm template
removed unnecessary null checks for the connection object in LdapClient . java to simplify connection handling and improve code clarity
refactor index handling in SequenceAction . java to use a variable for better readability to improve code clarity and maintainability
make cassandraserver . set _ keyspace thread - local
added a check to skip synthetic fields in ReflectUtils to ensure proper processing of synthetic fields in the ReflectUtils class
added SLF4J Logger integration to the Configuration and ApplicationController classes to enhance logging capabilities for better debugging and monitoring
changed the type of ` ImmutableMap . Builder ` from ` ImmutableMap . Builder < String , String > ` to ` ImmutableMap . Builder < String ,
added deprecation warning for deprecated Spring context in SpringFactory . java and updated test cases in SpringFactoryTest . java to improve error handling and ensure
added a deepStart method to the Startable class to provide a way to handle deep start operations in the application
removed the deprecated ` reservePrimitiveExtensionArray ` method from the ` Shape ` class and its implementation in ` ShapeImpl ` to encourage
fix laser table not be add to the laser table . close # 2323
simplified the return statement in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the expiration message period setting in MemoryLimitTest . java to ensure proper handling of memory consumption during tests
removed unnecessary null checks for handlerName in RequestHandlers . java to simplify code and improve readability by eliminating unnecessary null checks
updated the servlet name retrieval to replace ' - ' with ' . ' in the return statement to ensure proper logging behavior by removing leading and trailing
refactor Python environment handling in ProjectBuildFileParser to use a constant for the environment variable name to improve code readability and maintainability by
refactor audio format calculations and error handling in DirectAudioDevice and Toolkit classes to improve robustness and error handling for audio data limits
added null check for enums in ElasticSearchStringLookupService to avoid potential NullPointerException when enums is null
updated error message format in CommitLogReader . java to include additional context to improve clarity of error messages for better debugging
added a policy assignment from containerScope in WebSocketSession . java to ensure the WebSocket session ' s policy is retrieved from the container scope
simplified static field initialization logic in Java2TypeScriptTranslator . java to improve code readability and maintainability
added a webroot parameter to the server context creation in UserService . java to allow dynamic configuration of the web root directory based on user configuration
test : migrate spring - dsl module to junit5 ( # 1188 )
[ netbeans - 4892 ] use netbeans . editor . focusedcomponent ( ) instead of registry . getmostactivecomponent
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatting helper classes to improve clarity and consistency in header creation
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure proper resource management during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground and mBackground are not
updated the range check for decExp in FloatingDecimal . java and added a new ToString class in ToString . java to ensure decExp is
updated property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure correct type checking for property
removed maxVersion assignment from recentUpdates . getVersions method to simplify version retrieval logic
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5768 . add support
updated modal animation logic in RecentsView and TaskView classes to improve visual consistency and responsiveness during modal transitions
updated error messages and variable names in ORCRecordReader . java to include ' field ' as a parameter to improve clarity of error messages
added new sample files for various video formats in DemoUtil . java to enhance video processing capabilities for improved performance
removed unused import statements and updated method references in PersistenceProvider . java to streamline code and improve readability by eliminating unnecessary dependencies
updated log initialization to use the " org . apache . hadoop . ipc . RPCEngine " prefix to ensure compatibility with the latest HBase API
added diagnostic logging and a new test case for handling union and fixed fields in TestSpecificCompiler . java and created a new Position . java file
refactor WebSocket session handling in WebSocketEndpoint and add a new test for session closure in WebSocketIT to improve session management and ensure correct handling of
updated random seed values and method names for consistency across multiple services to improve randomness and clarity in naming conventions
updated OpenSymphony and XWork version mappings in XmlConfigurationProvider . java and LocationAttributes . java to reflect the latest version of Struts
do n ' t stop video track in webcaminputpanel when stop
changed ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType ` enum to
updated import statements in GMLExamples . java and removed unused imports to streamline dependencies and improve code clarity
updated method call from ` substream ` to ` skip ` in ` TargetType58 . java ` to improve clarity by using a more
added a method to retrieve an IdentifierGenerator in SimpleValue and modified AbstractEntityTuplizer to include an identifier parameter to enhance identifier handling
rename findfulltextaction to downloadfulltextaction and update localization
refactor URI registration logic to include host and port information to enhance URI registration functionality by including host and port information
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for non - blank OSDb hash before retrieving info from OSDB to improve robustness by avoiding potential null pointer exceptions
added token transfer functionality in ` RuntimeImpl ` and implemented ` transferToken ` method in ` MUtil ` to facilitate the transfer of
camel - 14263 : camel - ftp - do n ' t delete a file in stepwise mode . thanks to david
updated the method call from ` searchBindDN ` to ` searchBindPassword ` in ` JacksonLDAPConfiguration . java ` to correct the
added checks for MATCH and SPILL join results in MapJoinOperator and modified join logic in HybridHashTableContainer to ensure proper handling of
updated HTTPSPDYAsyncEndPoint to accept an AsyncEndPoint parameter and added local and remote address retrieval methods to enhance flexibility in managing HTTP
added extra data for the tweet ID in multiple adapter classes to ensure proper identification of tweets in the intent
added proxy authorization handling and refactored disconnect methods in HttpURLConnection to improve proxy management and enhance code clarity
updated the ` _ numChildren ` variable to use an ` AtomicInteger ` for thread - safe incrementing and modified the return statement in ` Trace
refactor JWT and RESPONSE constants across multiple Java files to improve code clarity and maintainability
disabled the test annotation in ValueTypeTests . java to disable the test to ensure that the test is disabled by default
resolve split - packages : move everything from kie - api under org . kie . api : move class to kie - api
replaced occurrences of " IN " with " NOT _ IN " in multiple predicate classes to accurately reflect the purpose of the predicate ' s
replaced ` AccountUtils . AccountNotFoundException ` with ` Exception ` in ` FileActivity ` , ` Preferences ` , and ` ReceiveExternalFiles
added null check for witnessService before validation to prevent potential NullPointerException when witnessService is null
updated the method of obtaining the expression string in JoinDesc . java to improve clarity and maintainability of the code
added a conditional check before setting the Java document in AbstractJavaClassTranslator to ensure that the item ' s Javadoc is not present before setting
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add a new class ` RedefineInterface
replaced multiple calls to ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in ` Tabs . java
[ hotfix ] [ connector ] remove unsupported metricgroup from serialization schema adapter
added a new variable ` oldX ` and modified the calculation of ` y ` to correctly account for the old coordinates in the polygon ' s
updated the cache creation method to explicitly cast the cache configuration to enhance type safety and prevent potential runtime exceptions
added a null and length check for stringConstant in InheritanceUnsafeGetResource . java and created a new class Bug2974855 .
refactor ShadowCookieManager class for improved readability to enhance maintainability and facilitate future updates
added a new configuration option ` METASTORE _ AUTHORIZATION _ EXTERNALTABLE _ DROP _ CHECK ` in ` HiveConf . java
added a check for WebGL in Stage . java and adjusted the draw position in ProgressBar . java to ensure proper positioning of the background draw
add getplatformbyteorder ( ) to get the byte order for llvmlanguage and platformcapability .
updated the property name from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " in WindowsClientProviderStrategy . java
modified the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and updated the URL loading logic to enhance flexibility by allowing
corrected the spelling of " Parameter " in the exception message in CallableStatementHandler . java to improve clarity and specificity of the
updated the ` after ` parameter in ` AuditEventsMvcEndpoint ` and added a new test case in ` AuditEventsMvcEndpointTests ` to
rename ExponentialTimer and ExponentciseTimer classes to PreciseThroughputTimer across multiple files to improve clarity and consistency in naming conventions
added functionality to remove a soft body from the dynamics world in SoftBodyTest . java to ensure proper resource management and prevent memory leaks
changed interface visibility from package - private to public for ` SinkFunctionProvider ` , ` SourceFunctionProvider ` , and ` InputFormatProvider `
[ zeppelin - 4892 ] add log for remote websocket error
add unit test for jingle element that do n ' t have a redundant namespace
add null check for redplasma file to avoid npe
added support for HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
refactor conditional statements in Remove . java for consistency and clarity to improve code readability and maintainability
updated the delimiter parameters and modified string formatting in SimpleReport . java to improve clarity and correctness of the output format
removed the option ` ignoreSymbolFile ` from ` JavapTask ` and updated its usage in ` JavapTask ` to stream
renamed TickerDemo class to StreamingTickerDemo and updated related references to improve clarity and consistency in naming conventions
refactor exception handling in Runtime . java for improved clarity and error management to enhance code readability and ensure proper validation of contract types
do n ' t create input3d if not applet
added an @ Ignore annotation to the KinesisIntegrationTests class to temporarily disable tests that are not ready for execution
do n ' t throw parserexception in scripttagpayloadreader . parsepayload ( )
renamed the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` and added an ` @ Override ` annotation to improve clarity
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to improve type safety
replaced multiple instances of ` this ` with a single instance variable ` IOSGLES20 ` in ` IOSGLES20 . java `
removed the UploadPathActivity class and its associated functionality from the ComponentsModule to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to conditionally return totalTermFreq and sumTotalTermFreq based on indexOptions to enhance functionality by
test ( constructor ) : add test for implicit constructor in constructor ( # 1748 )
modified the ` populateValidateValidatePrimaryKeyIfNeeded ` and ` populateValidateUniqueIfNeeded ` methods to include a ` Database ` parameter to ensure only valid
refactor Database class to improve code structure to enhance maintainability and readability of the database operations
refactor SpringApplicationBuilder class to improve code readability to enhance maintainability and facilitate future updates
updated the iterator assignment in PointInSetQuery . java to ensure consistent reference to the iterator reference in the indexing chain
removed substring extraction from rawName in SchematicHandler . java to simplify the code by eliminating unnecessary substring operations
added a switch statement to handle empty and sorted collections in AbstractCollectionAssert and updated the return statement in CollectionAssert _ isUnmodifiable _ Test to
changed the ` Option ` enum from static to instance in ` ProcessExecutor . java ` to allow broader access to the ` Option ` enum
added a new AlertDialog for handling twitlonger actions in Compose . java and ComposeActivity . java to enhance user experience by
replaced the ` toggleKeepInSync ( ) ` method with a call to ` getFileOperationsHelper ( ) ` in ` FileDetailFragment
use java . util . base64 instead of javax . xml . bind . datatypeconverter . parsebase64binary
added a new file ` ControllerCounter . java ` and a ` DBCallback . java ` with methods and names in MongoDB documents to provide a
added ' final ' keyword to the deleteTicket method in EhCacheTicketRegistry . java to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement FlywayMigrationRunner for XML configuration to facilitate the migration
replaced calls to ` isEmpty ( ) ` with ` size = 0 ` in ` HashMap . java ` and added a new class ` Override
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
added @ Nullable annotations to the modify method parameters in CompressionCodec and ZlibCodec classes to improve null safety and provide clearer logging for missing
added null check for mainValue and improved error handling in LauncherHelper , Arrrghs , TestHelper , and TestHelper classes to
renamed test classes for consistency and clarity to improve code readability and maintainability
rename methoddata : : _ graal _ node _ count to _ jvmci _ ir _ size for performance
pdfbox - 4892 : move cellcopypolicy . clone ( ) to cellcopypolicy , a suggest by valerybokov
added a method to reset the icon load result in FloatingIconView and updated its usage in Launcher and FloatingIconView to improve
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
added landscape orientation handling and adjusted top and bottom margin calculations in IconRecentsView . java to ensure proper layout adjustments for landscape
deleted the AddAdapter . java file to the functionality was no longer needed in the project
fix check for empty constructor code in non - static lifter
refactor the handling of parentColNames and bucketColNames in OpTraitsRulesProcFactory . java to improve code readability and maintainability
refactor the handling of LogWatcher messages in TestLogWatcher to improve clarity and error handling to enhance code readability and maintainability by
added a print statement to the Java2TypeScriptTranslator class to enhance the output format for better debugging
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the new version of
added a conditional check for the SPRING _ AOP _ PROXY _ TARGET _ CLASS property in TraceEnvironmentPostProcessor . java to ensure
removed the singletonLock boolean parameter from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary locking logic
add documentation for responseclasscallback and forwardclasscallback
improve output file handling by introducing the ` appendToFile ` method with an optional ` append ` parameter to enhance flexibility in output
updated MavenExecutionContextView and MavenRepositoryMirror to return getMirrors ( ) instead of getMessage ( MAVEN _ MIRRORS ) to
added a name field to BuildRuleSourcePath and updated constructors in PathSourcePath and related classes to include it to enhance flexibility by allowing
updated service client redirect URI comparison from ` getRegisteredOAuthServiceByRedirectUri ` to ` matches ` in ` OAuth20CallbackAuthorizeEndpointController
replaced instances of ` EMPTY _ ANNOTATION _ ARRAY ` with ` AnnotationParser . toArray ( ) ` across multiple files to streamline the
updated method calls to use ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` instead of ` getBadgedDrawableForUser
updated the default line separator in GlobalConfiguration . java to include CRLF to ensure consistent line endings across different operating systems
fix checkstyle issue in configurationmanager # isimplementinginterface ( )
[ te ] sanitize the request body in the model ( # 1748 )
chore : update java and python dependency ( # 16 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added a new test for file contents to
refactor CountersReader class for improved readability to enhance maintainability and clarity of the code
updated containerType assignment and refactored logging methods in AllAppsRecyclerView , UserEventDispatcher , DeepShortcutsContainer , and DeepShortcut
hbase - 23233 add deprecation warn for config key hbase . ipc . server . allocator . max . buffer . size and
[ native ] add support for window query with lineitems in window
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types in ` Executable ` and updated references in ` Parameter `
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future updates
improve label height calculation in drawinputbox and drawdrawables
hbase - 14819 add initial size to increasetoupperboundregionsplitpolicy ( # 4757 )
added model reset and start loader functionality in LauncherClings . java to enhance user experience by resetting loaded state and loading states
updated initialization of keys and updates to use ISO _ OFFSET _ DATE _ TIME instead of ISO _ OFFSET _ DATE _ TIME to ensure consistent date
added a ` excludedDatasources ` field with getter and setter methods in ` SpringDataSourceBeanPostProcessor ` to allow configuration of excluded Spring data
added a call to store undo info in TableValuesView and removed null check in TableValuesPanel to improve user experience by ensuring undo information is
( chore ) camel - aws : allow to use custom kinesis client configuration
refactor channel triggering logic in VelbusSensorHandler to use a loop for different channel states to improve performance by reducing the number of
disabled unfavorable benchmarks in LocalCacheSelectorCode and modified delayable tests in BoundedLocalCache to disable unfavorable benchmarks
added a test for illegal database names in IoTDBSessionSimpleIT and improved error handling in PartialPath to ensure that illegal database names are
added a call to resetNewFiles ( ) in GarbageCollector . java to reset the new files after processing
rename ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and update related calculations to improve clarity and consistency
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
cloudstack - 4892 : fix typo in xenservernetworklabel
updated libGDX and libGDXNightlyVersion from " 1.5 . 5 " to " 1.5 . 7 -
removed the metricNames field and its getter method from SolrCore . java to streamline the code by eliminating unnecessary methods
refactor URI handling in MavenManifestFactory to use Path instead of URI to improve code clarity and maintainability by using a more descriptive
replaced direct string comparison with a static final boolean variable for macOS detection to improve code readability and maintainability by reducing duplication
refactor JdbcAggregationRepository class to improve code readability to enhance maintainability and facilitate future updates
added slotList . clear ( ) and slotList . addAll ( other . slotList ) to the Frame class to ensure that the slotList
initialize m _ predCount to - 1 in PredicatedNodeTest . java to initialize m _ predCount to ensure proper initialization of predCount
added configuration merging functionality to the ConfigurationSpringInitializer class to enhance configuration management by merging configuration properties
refactor ` setupLogging ` method to use ` org . slf4j . Logger ` instead of a switch - case statement to improve
replaced ` HashMap ` with ` LinkedHashMap ` for the ` aliasToWork ` variable across multiple files to ensure consistency in data structure across the
added a check for the superclass of the TYPE _ HANDLER _ MAP in TypeHandlerRegistry . java to ensure proper retrieval of the class hierarchy
added debug logging for writing items in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter to improve
refactor the parsing of the language range by removing leading and trailing spaces to improve code readability and maintainability by reducing redundancy
refactor Http2ServerResponseImpl and VertxHttp2Handler to execute the closeHandler in an IO context to ensure proper context handling during
pdfbox - 4892 : improve performance of xssfevaluationworkbook . gettables ( ) , a suggest by valery
updated schema text detail type checks and modified symbol assignment logic in BaseSchemaTextFormatter . java to ensure correct handling of nullable columns and improve code
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to enhance compatibility with
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure uniqueness of elements in sorted order
removed redundant code and added a check for cloned operators in SkewJoinOptimizer . java to ensure the operator tree is properly cloned before proceeding
added a null check for the client ID before retrieving headers in DynamicRegistrationClientConfigurationService . java and updated JsonFileRegisteredClientService . java
clear the achievement list field _ 187981 _ e when a achievement be remove ( # 187981 )
initialized ` userName ` , ` productName ` , ` productName ` , ` productName ` , ` productVersion ` , and ` connection
updated references from " link _ share _ read _ only " to " link _ share _ view _ only " in QuickSharingPermissionsBottomSheet
added LongBuffer support for reading long data in ByteBuffersDataInput and ByteBuffersIndexInput to enhance performance by leveraging LongBuffer for
refactor file time handling by introducing sec and nsec variables in UnixFileAttributes . java and modifying FileTime calculations in Basic . java
added a new file TestNoEagerReclaimOfHumongousRegions . java with a large large reference holder implementation to test garbage
added a condition to hide the search bar based on user preferences to improve user experience by controlling search visibility based on user preferences
corrected the method name from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to ensure correct
added null checks for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action to reload the page in the menu to enhance user experience by allowing users to reload the current page
changed log level from info to warn for various entries in SQLManager . java to provide more detailed logging information for debugging purposes
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type does not have a selected version to
[ geot - 6748 ] use serviceloader instead of factoryregistry for extension point
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource management and prevent memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and ` HiveViewImpl ` classes to manage the execution of the
updated feature settings in DocumentFactory , XMLSAXHandler , and ElementHandlerFactoryTest to use generics for hints to improve code clarity and
replaced JdbCommand . cont ( ) with OutputAnalyzer . contToExit ( 1 ) in JdbStopThreadidTest . java
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enhance type retrieval functionality and ensure
refactor future handling in ExpressionThreadPoolManager to improve clarity and consistency to enhance code readability and maintainability by using a more descriptive
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure compatibility with the
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog . java ` to streamline the listener setup for better readability and
updated the default batch size from 10 to 3 in NewSessionQueueOptions . java to increase the batch size based on available processors for better performance
[ hotfix ] [ runtime ] log failure when establish resource manager connection in taskexecutor
initialize classFile to null and modify exception handling in LambdaRewriter . java to improve error handling and return a new LambdaExpressionFallback when classFile is
enhanced error message in IllegalArgumentException for min and max values in ProgressBar . java to improve clarity of error messages for better debugging
updated onMessage method signatures across multiple classes to include ' owner ' parameter to enhance message handling flexibility and improve logging clarity
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` , along with their respective methods in the ` com . codename
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
# 1188 - add setbeanid ( ) method to ebeanserver , add convertid ( ) and setbeanid ( )
updated the transformation method in RuleSetToDocs to use a method to retrieve the add - to - site descriptor xsl to ensure compatibility with the
replaced the direct instantiation of ` OrRequestMatcher ` with a collection of ` requestMatchers ` to enhance flexibility by allowing multiple request matchers
added hashCode and equals methods to ContactResource class to ensure proper object comparison and hashing functionality
move request and response to processor so it can be use by other processor .
updated logging messages in FileManager . java for better clarity and consistency to enhance readability and provide clearer error messages for better debugging
added mock control reset in TestJdbcDataSource and implemented tearDown method in TestIndexSearcher to ensure proper cleanup of resources and improve test
added import statement for LambdasWithInterfaces and updated import statements in SyntaxTests . java to improve code clarity and ensure proper handling of
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
update parserdecorator to use mimetyperegistry instead of empty parser
fix fml security manager do n ' t check for dedicated server .
changed variable types from ` String ` to ` String ` in multiple files to improve code readability and maintain consistency in variable naming
updated parameter key from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a new test method ` testJsxComment ` in ` JsLexerJsxTest ` and modified conditional checks in ` Parser ` to
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for widget tests
added tests for handling missing Buck configuration in BuildEndToEndTest and updated error handling in CxxEndToEndTest and Cxx
added memory limit validation for physical memory in TestStringBufferAndBuilderGrowth . java to ensure test execution does not exceed available memory limits
deprecate conversionservice . convert ( ) in favor of conversionservice . convert ( )
added a success variable to HiveMetaStoreClient . java to track the success state of the operation
updated string comparison for include value in ResourceReferenceInfo . java and modified bundle creation in Dstu2BundleFactoryTest . java to improve
updated video display conditions to include " amp . twimg . com " in multiple files to ensure compatibility with the new video formats in the application
added a @ Deprecated annotation to AreaReference . java to indicate that the AreaReference class is outdated and should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the code
updated assertions and reference kind handling in MemberName . java to improve clarity and correctness of method reference handling
changed the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization around the runChange method to
simplified the conditional check for mouse events in EditNodeTextField . java to improve code readability and maintainability
camel - 1641 : fix issue with bean : type : type lookup in camel - spring - dsl .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
reformatted code in AgentRunnerTest . java for improved readability to enhance code clarity and maintainability
added ` getDescription ( ) ` method implementations for Maven dependencies , plugins , changeproperty , and findproperties to provide clearer descriptions for better cl
refactor face tracking logic in ObjLoader . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future updates
corrected a typo in the variable name from " reentrantLock " to " lock " across multiple files to improve code readability
added Maven packaging parameter to the getBomReference method in PrintMavenAsCycloneDxBom . java and PrintMavenAs
updated the back method to use the component ' s component instead of the current component to ensure the back method correctly reflects the component ' s
refactor certificate verification logic in SASLAuthentication . java to improve readability and maintainability to enhance code clarity and maintainability
updated method signatures in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity to enhance code readability
replace NutchConf . get ( ) with getConf ( ) in Fetcher . java , Generator . java , and Injector . java to
removed boards pane from the tab in SheetAssembly . java and added conditional logic in StubsController . java to ensure the assembly is properly
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the session ID in the application
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java and updated tests in ImporterGEXF2Test
removed the " logLevel info - serverPort " command from MockServerContainer . java to simplify the command configuration for better readability
updated error logging to include exception message to improve error reporting for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in the ` DispositionProcessor ` class to streamline the
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
fix test that fail on window on window
added import statements and a method ` alternativePath ( ) ` to the ` ExpectNewDemo ` class to handle potential runtime exceptions and provide a
updated input initialization in LogEntryParseTester . java to use getFirstFilter ( ) . init ( ) to ensure proper initialization of the first filter
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance functionality by allowing protection domain for buffer alignment operations
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent memory leaks
added configuration for disabling semi join optimizations on external tables in Hive to enhance performance by allowing control over semi - join optimizations on external
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
updated wallpaper offset from - 30 to 0 in Workspace . java to improve the responsiveness of the wallpaper manager by adjusting the
modified return values in SybaseASADatabase and modified SQL query handling in SequenceSnapshotGenerator to ensure compatibility with SybaseASADatabase and
updated PutSQL to conditionally commit and rollback based on the auto - commit setting to ensure proper handling of database operations when autocommit mode is
added directory creation checks for sub directories in SnapPuller . java and corresponding test cases in TestReplicationHandler . java to ensure that the
updated AppTargetId in AppEventProducer from " id : launcher " to " launcher : launcher " to improve clarity and consistency in the
updated the ` frame ` and ` frameAndReleaseMessage ` methods to include an additional ` output ` parameter to enhance message framer functionality by
refactor OAuth2AuthorizationRequestRedirectFilter to accept ClientRegistrationRepository as a parameter across multiple classes to improve code clarity and maintainability by
updated error messages for parsing text in GenericUDFStringToMap . java to provide clearer guidance on splitting text into key - value pairs
updated date formatting logic in PlainFormatter . java and added a test for it in PlainFormatterTest . java to improve accuracy of time representation and
replaced TIMEOUT _ MS constant with RETRY _ CLOSE _ TIMEOUT _ MS and refactored the close ( ) method to improve timeout handling
removed reflection - based method invocation for private lookup in ClassLoadingStrategyHelper . java to simplify code and improve readability by eliminating unnecessary
refactor Mockito class to improve code structure to enhance maintainability and readability of the codebase
updated debug log message to reflect the new proto event file format to clarify the purpose of the log for better debugging
added JUnit @ Ignore annotation to SamplingNamingTest . java to indicate that the test produces at least one sample result to temporarily disable the
corrected the spelling of " rows " and " columns " in the IllegalArgumentException message to ensure that the error message accurately reflects the
updated method calls and string concatenation in DecisionNode . java , WagonCART . java , and DecisionNode . java to improve code
added functionality to order and sort BOF records in XLS2CSVmra and BoundSheetRecord classes to enhance the functionality of the CSVm
refactor average impulse calculations in ThrustCurveMotor . java to improve clarity and consistency to enhance code readability and maintain
updated InputSystemJme instantiation to include inputManager parameter to ensure proper input management for JME display
refactor hash code field offset handling in UniverseBuilder . java to improve clarity and ensure offset is non - negative to enhance code read
remove block . getmesh ( ) and deprecate block . getmesh ( )
renamed keytabPath variable to localKeytabPath in YarnTaskManagerRunner . java to improve clarity and consistency in variable naming
added a new option ` EMPTY _ WORD _ OPTIONS ` to ` Example . java ` and modified matchers in ` LineReaderImpl . java `
added a writeCommitLog parameter to the pushViewReplicaUpdates method in Keyspace . java to ensure that the view replica updates are only pushed
added auto - open functionality for clipboard content in CaptureActivity and updated button handling in PreferencesActivity to enhance user experience by allowing customizable selection of
added a new test method ` testBatching ` to ` JoinedTableTest . java ` to validate batching behavior of a Board
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamps during item persistence
replaced deprecated ` format ` argument with ` plugin ` in ` RuntimeOptions ` and updated plugin handling in ` RunCukesByComposition
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary functionality
simplified the back key event handling in ExtendedEditText . java to improve code readability and maintainability
updated ` newCapacity ` calculation in ` AbstractStringBuilder ` and added a new ` Capacity ` class with tests for the ` ensureCapacity ` method to
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to streamline the
fix for http : / / schemas . openxmlformats . org / 2006 / relationships / endnotes / xwpfwordextractor . java
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event publishing by including client information
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the correct versioning of the GDAL
added a new file ` Lifecycle . java ` that implements a UI with network error handling to facilitate the management of network errors in
make deviantart ripper more resilient to http 404 error
removed unused imports and simplified loop structure in BodyTubeShapes . java and RocketFigure . java to improve code clarity and maintainability
replaced GL _ BACK and GL _ FRONT with dynamic retf adjustments in PJOGL . java to improve texture scaling flexibility
set default value for project offline dialog ( # 1748 )
replaced PackedInts with BlockPackedWriter for writing values in DiskDocValuesConsumer . java to streamline code and improve performance by
change defaultroute to use sortedset instead of collection
refactor data handling in GoAwayTest . java for improved clarity to enhance code readability and maintainability by eliminating
added support for setting properties for Fluent beans in ReflectionUtils and created corresponding tests to enhance functionality and ensure correct behavior of FluentSetterBean in EasyRandom
updated the ` post ` method to return a ` HttpResponse ` instead of a generic type in ` BlockingHttpEndpoint ` and ` HttpEndpoint `
rename file : / / target / filesorter / ? noop = true to file : / / target / filesorter /
updated the output statement to include the ID of the last appeared task target to improve clarity of the output for better debugging
added support for image scaling options in RtfDocumentSettings . java and updated related methods in RtfDocumentSettings . java to enhance image scaling options for
updated the handling of aggregate function names in TSServiceImpl . java to include the aggregate function name when applicable to enhance query flexibility by allowing
updated test classes to extend WithNestedTests . AbstractNestedTest instead of LuceneTestCase to improve compatibility with nested tests and enhance test execution
added functionality to set the selected state of the xCapEnableBox based on the presence of X - Capability settings to enhance user experience by allowing
ww - 4898 add a parameter to the dispatcher to handle exception . thanks to david for the patch .
added stopEditing method to CodenameOneImplementation , Display , and AndroidImplementation classes to manage text editing behavior to ensure proper handling of text
nifi - 1341 : fix npe in controlrate when group attribute be null
modified the ` showDialog ` method to include a newComponent parameter and added a checkbox to always open the preset if the component is new to
added error handling in ChatAnnotation and synchronized the sendText method to ensure thread safety when sending messages to the client
added a check to skip tests for MS Windows in HTMLDataFlavorTest . java to ensure that the test is only executed on Windows to
added SQL _ SERVER _ SNAPSHOT constant to the serialization method in TransactionIsolationLevel . java to enable SQL server snapshot functionality in the transaction isolation
replace direct insertion of newRecid with a polling mechanism that waits for new recids to become available before proceeding to improve responsiveness
use java . util . zip . zip instead of jrecompat . getinstance ( ) .
added a null check for commandClass before creating a new RegisteredService instance to avoid potential NullPointerExceptions when the command class is not available
change default disk _ failure _ policy from best _ effort to ignore and update stop case handling in CassandraDaemon to improve disk failure policy management and
remove ` ` public ' ' access modifier from ripper interface
updated filter condition to include a check for the IP address in PeerDiscoveryAgent . java to ensure that only valid IP addresses are processed in the
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the job execution process by eliminating unnecessary methods
updated import statements in PinotSegmentRebalancer . java to use ClusterDataCache and added ClusterDataCache to improve performance by reducing unnecessary
simonstewart : remove the deletecontainer method and add an auto - remove option to the container configuration
simonstewart : add unit test for the defaultselenemodule . parse ( ) method
added MultipleAttemptsRule to CreateGlossaryTests to allow multiple attempts for testing purposes
updated references from COMPONENTS _ SCHEMAS _ REF to COMPONENTS _ SCHEMAS _ REF in ModelResolver . java to
updated EntityDeletedEvent to use JsonUtils for serialization and deserialization to improve data handling and ensure proper serialization of deleted event data
added support for the " gop " option in FormatConfiguration and updated media handling in DLNAMediaInfo and LibMediaInfoParser to
added a new file TestProfileReturnTypePrinting . java containing methods for testing profile return type printing to facilitate testing of return type
refactor config change handling to use a lock for thread safety to improve concurrency handling and prevent potential resource leaks
added functionality to acquire and release columns segment operators in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent memory leaks
danielwagnerhall : remove @ ignore from firefoxprofiletest
added @ return annotations and modified the return type of getSystemBars method in HasAndroidDeviceDetails . java to improve clarity and functionality of
remove duplicate call to addbug ( ) in projectstats
bugfix # 2178 , add disabled text to the import panel
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code for better readability and maintainability
added logic to return a date in the future when no weekly actions are set to ensure that scheduled actions do not have a weekly action
refactor upload button functionality to use a menu item instead of a button to improve code modularity and maintainability by using a dedicated menu item
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added loadMetaData method to MeXBTExchange and RippleExchange classes to ensure proper metadata loading for exchange data
added a custom ` WritableSerializer ` for serialization of ` Writable ` objects in ` CrawlDbReader ` to enhance JSON serialization capabilities for better
remove unused testjaspicbasicauthenticator . testjaspicbasicauthenticator . testjaspicbasicauthenticator . test
updated the Component annotation in MDNSDiscoveryService . java to include the service configuration process ID to enhance configuration management for MDNS services
added null check for messageItem before scrolling to position to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer classes to include a new thread for improved
removed assertions related to DATANODE and NAMENODE in RoleCommandOrderTest to streamline test assertions for better readability and maintainability
added a new method ` restoreLocalInfoFromTableInfo ` and renamed the method ` writeObject ` to ` dedupWithTableInfo ` to improve
updated formatting in multiple Java files for consistency to improve code readability and maintainability
added a transform transformation to BitmapFontTest and modified the logoSprite flag in BitmapFontTest . java to improve rendering accuracy and ensure proper
added a condition to exclude built - in aggregate checks in StreamPhysicalPythonGroupWindowAggregateRule . java to ensure that only non - built -
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 559 .
add a method to get unreachable token owners in the Gossiper class and fix a typo in the method name in StorageProxy
mondrian : fix coordmultipointreplaced expressionnode # isvariable ( ) to not change to multiplication
added content type handling in FormAuthenticator and SavedRequest classes to ensure correct content type is set based on request properties
changed access modifiers of variables and modified display handling in XToolkit . java to improve encapsulation and ensure local graphics environment is not null
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` and updated lock management in ` EnvironmentImpl . java ` to improve concurrency
added a test for reading an identity provider in the other zone using the Zones token to ensure that the identity provider functionality behaves as expected
updated scheduleJob method to use ExpireJob and added null check for timestamp in PointInTimeTrigger to improve job handling and prevent potential null
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 1188 ] send heartbeat to all broker when rebalance change ( # 1188 )
added detachedMkdirMode property and its getter method in multiple configuration classes to enable dynamic directory management for improved resource management
[ java ] do n ' t remain stable follower when there be a low follower .
change the default label pattern from " authors3 " to " auth " in JabRefPreferences . java to align the label pattern with the
refactor DBinaryDescription , DLibraryDescription , DTestDescription , and DTestDescription to use CxxPlatforms for dependency resolution to
refactor OAuth service handling in GoogleCloudAPI and GoogleTTSService to use ungetOAuthService method instead of createOAuthClientService to
camel - 16462 : camel - core - do n ' t consume dynamic file name when complete be true .
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and modified the conditional check in ` SolrCore ` to conditionally reopen
add ` ` dialect ' ' attribute to mapwriter and freeplaneversion
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor the Condition class to use a lambda expression for better readability to improve code readability and reduce boilerplate code
replaced ` Term ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to utilize a new ` MatchAll
removed multiple unused imports from ConcurrentClassLoadingTest . java to improve code clarity and maintainability
added a method to provide direct nearby upload preferences in CommonsApplicationModule to enhance flexibility in specifying upload preferences for the application
added support for " SYSIBM " and " SYSDUMMY1 " modes in the database and mode classes to enhance compatibility support for
updated logging statements in TraceGatewayEnvironmentPostProcessor and added conditional properties in SamplerAutoConfiguration to enhance logging clarity and allow configuration of scope
[ bugfix ] add ` ` last pid ' ' and ` ` next pid ' ' property to workbookproperties
geotiffreader : fix problem with negative infinity nodata when no data be nan
updated the ` executeDriver ` method to return process status and modified session state handling in ` SessionState ` to ensure proper resource management and enhance
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated related tests in ` MockRestAdapterTest ` to improve
added a default implementation for the ` selectByRuleIdSet ` method in ` RuleConditionMapper ` to improve flexibility and maintainability of
added a method ` addExitDescription ` to ` ExitStatus ` and refactored its usage in ` AbstractJob ` and ` AbstractStep
fix the click block not render properly on the player . close # 489
renamed ` columnFamily ` to ` columnFamilyColumn ` and updated related methods to improve clarity and consistency in naming conventions
removed unnecessary import of Collections and simplified the range length calculation in PlotConfiguration . java to improve code readability and maintainability
refactor ` buildUIAlertView ` to ` buildUIAlertController ` for improved clarity and functionality to enhance code readability and
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method for clarity to improve code readability and
added a null assertion for the service message in AdvServiceTest . java to ensure that the service message is correctly retrieved from the service
corrected the spelling of " potentiallyConvertMapKey " to " potentiallyEscapeMapKey " in MappingMongoConverter . java to ensure proper
updated log message formatting in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 14263 : camel - core - allow to use java . lang . name instead of java . lang . javaType .
added null check for terms in FuzzyLikeThisQuery and introduced a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to include a ` boolean ` for the list of applications links to enhance the HTML structure by providing a
[ ds - 4892 ] use identifierservicefactory instead of dspaceutils . getservicebyname ( null , identifierservice . class
replaced ` bytes . length ` with ` bw . getLength ( ) ` in ` assignBytes ( ) ` calls to use ` bw .
changed the return type of the getDisplayScript method from abstract to null and added a return statement to prevent potential null pointer exceptions during script execution
updated key sequence handling in RemoteWebDriver . java and modified test annotations in BasicKeyboardInterfaceTest . java to improve clarity and consistency in
pdfbox - 4892 : optimize arraylist initialization , a suggest by valerybokov
added synchronization and null checks for activeInterfaces in NetworkConfigurationWatcher and implemented null checks in NetworkManagerListenerImpl to ensure thread safety and prevent potential
[ bug - 45538 ] add test for read nested object in hssfworkbook
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to streamline dependencies and improve code clarity
replaced ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to standardize the order of
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font types
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourg
updated LiveTvGuideActivity and ProgramListAdapter to use a private variable for mCurrentGuideStart and modified related logic to improve code clarity
updated method invocation in MockGateway and added new classes CommonParentTest , ChildB , ChildB , and Parent in MainMockTransformer to improve
added dlopen method calls for " libfreetype . so " and " libfontmanager . so " in JREUtils . java
refactor FunctionParser to introduce a dummy argument handling for multi - variable functions to improve code readability and maintainability by reducing duplication
[ gr - 25946 ] fix loop safepoint elimination for non - overflow loop .
fix a bug in the typeframemodelingvisitor where the instance of a reference type be the same a a reference type .
added a new ` LocalizedString ` class and updated ` Attr ` and ` T6758789b ` classes to utilize it
added a new boolean field ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig ` , and modified the condition in `
[ java ] use arrays . copyof instead of system . arraycopy
updated the ` retries ` and ` retries ` methods in ` Reference ` , ` AnnotationPropertyValuesAdapterTest ` , and ` Reference ` classes
updated TexturePacker . java to use a Settings object and modified command - line argument handling to improve flexibility in managing texture packing settings
refactor image upload handling in AchievementsFragment to use AppCompatTextView for better clarity to improve code readability and maintain
added mock logger and tracer methods to manage annotations in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing and
added categoryinfo field to the MwQueryPage class and updated the CategoryInterface to include it to enhance query capabilities by including category information information
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error reporting
added accessibility support and refactored timeout alarm logic in TaskbarStashController . java to improve user experience by ensuring proper taskbar
added a check for the ' ^ ' character in the signature validation logic to ensure proper handling of invalid signature inputs and prevent runtime exceptions
updated access flags handling in ClassVisitorDriverFromElement . java and added multiple test cases for stubbing functionalities in StubJarTest . java
added null checks using Objects . requireNonNull in IntervalFilter and added null check in LowpassIntervalsSource to ensure input is not null to prevent potential
added tests for iterator iteration methods in MapInterfaceTest . java to ensure correct behavior of iterator iteration in the map implementation
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
updated the creation time from Instant . ofEpochMilli to Instant . ofEpochSecond in ImageData . java to ensure the created time reflects
added support for " grobcovF2m " locus in SingularWebService and updated CASTranslator to use it to
added encryption key deletion for private and public accounts in AccountRemovalJob . java to ensure proper key management for accounts in the application
replaced hardcoded " keep - alive " with a static method ` keepAliveHeaderValue ` in ` AsyncHttpProviderUtils ` to improve code read
added a check for empty interceptorList in PostJoinMapOperation . java and created a corresponding test in PostJoinMapOperationTest . java to
remove duplicate inlining processor for text , javascript , and cs
removed the ` spillEnabled ` parameter from multiple constructors in ` BaseHybridHashTable ` , ` BinaryHashTable ` , and `
refactor environment variable retrieval to use Optional for improved null safety to enhance robustness by handling potential NullPointerExceptions during environment variable retrieval
fix issue with extension not set in defaultactionmapper when extension be null
added SerializableMode import to Mockito . java and removed unnecessary whitespace in PluginSwitch . java to enhance serialization support and improve code readability
added instrumenting of annotation metadata and modified error handling in DependencyInjectionException to ensure proper handling of nullable field values in dependency injection
updated SQL query parsing logic to support isolation level in select statements to enhance compatibility checks for different database modes
replaced direct usage of ` HiveConf ` with static final constants for transport mode and HTTP path to improve code readability and maintainability by
added a method ` isCacheable ( LeafReaderContext ctx ) ` to ` GlobalOrdinalsWithScoreQuery ` that always returns false
added a new file TestStrangeControl . java that demonstrates the behavior of StrangeControl to demonstrate the use
updated file generation format from " % s . json " to " % s . jsfile " in JsFile . java and JsLibrary .
added selection start and end variables with their respective getter and setter methods in ShadowEditText . java to enhance functionality for setting and retrieving text selection
refactor GRPCEnrichment to use a try - with - resources statement for server and executor service management to ensure proper resource management and prevent
modified the use method in Jooby and Router classes to allow a path parameter to be passed to the MvcClass to enhance flexibility
added a null check for the ` fst ` variable in ` FreeTextSuggester . java ` to ensure that ` fst ` is not
updated newline handling in T4975569 and T6729471 classes to ensure consistent newline formatting across different operating systems
added support for loading ABI writer classes in JavacInMemoryStep . java to ensure proper instantiation of ABI writer classes and improve
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethodIsAlways
do n ' t crash if pullmesservice be not stop
refactor EnergyEndpointer class to improve code organization to enhance maintainability and readability of the code
refactor the handling of displayed columns in ComponentPresetChooserDialog . java to improve clarity and functionality to enhance code readability and maintainability
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to improve code clarity and maintainability
camel - google - sheets : fix switch / cases indentation see camel - 14540
added a default method to retrieve the exported header style in CxxLibraryDescription and updated related classes to utilize this method to improve flexibility
deleted the files Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
refactor disk key splitting logic in RandomPartitioner . java to improve readability and maintainability of the code
do n ' t fail build - time initialization on jdk11 +
added a new test method ` testCreateInline ` in ` RoleBindingTest . java ` and refactored the ` handleCreate ` method
added debug logging statements to UaaSessionCookieConfig . java for session cookie configuration to facilitate debugging and monitoring of session cookie configuration
updated the calculation for the file name in HotseatFileLog to use the correct calendar date to ensure accurate file name retrieval based on
change variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve clarity and consistency in variable naming
added error handling for invalid javap options in JavapTask . java and created a new class T8033711 . java to
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` in multiple Java files to improve code readability and maintainability by
updated logging level from error to warn in TaskDriver . java and modified error handling in TaskDriver . java to improve logging granularity and handle shutdown
[ flink - 31643 ] [ network ] restrict the max number of required buffer per input gate in tiered storage
refactor code to use a new method ` isNotSuccessStatus ` to improve readability and maintainability of the code
added GL20 configuration to Cuboc and modified LwjglApplication parameters to enable OpenGL 2.0 support for the Cub
remove unnecessary check for voidtype in method . getreturnvalue ( )
refactor OutputMacroExpander to replace DefaultSourcePathResolver with SourcePathResolver and add a new command line command line argument handling to improve
corrected the spelling of " light " in the assertNoJobsLeftEventually method and its usage in SimpleTestInClusterSupport to
added a newline character to the conditional check for duplicate words in MergeWordsListTask . java to ensure proper handling of build paths in the build
update instructorfeedbackresponsecommentsloadpagedata and instructorfeedbackresponsecomments to use string instead of feedquestionattributes
removed unnecessary whitespace in mmm Container . java to improve code readability and maintainability
added a new file TestEscapeThroughInvoke . java containing a test class TestEscapeThroughInvoke to demonstrate escaping of ' a '
replaced stream . skip ( ) with IOUtils . read ( ) in FilePreviewService . java to improve code readability and maintainability by
added interceptor handling in ConnectionPool and JdbcInterceptor , and improved error logging in DataSourceProxy , and TestSlowQueryReport classes to enhance error
change catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
added eviction handling logic in LruBlockCache and a corresponding test in TestLruBlockCache to improve cache management and ensure correct behavior of
removed unnecessary conditional check for taskCount in RecentsView . java to simplify code by eliminating unnecessary checks
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter . java and HelixServerStarter . java to allow more
added new ` CoinmateMetadataServiceRaw ` interface and updated ` CoinmateExchange ` to utilize it for metadata retrieval to enhance
fix ` ` system - path . xml ' ' to not point to project basedir
pdfbox - 4892 : update key for cosobject , a suggest by valerybokov
add ptransform . setdisplaydata ( list < itemspec < ? > > ) method to ptransform to allow customization of ptransform
replaced instances of ` DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) . check ( ) ` and
remove jdk . certpath . disabledAlgorithms from ClientJSSEServerJSSE . java to streamline security configuration by eliminating unnecessary
added additional checks for SUB _ COMMAND and SUB _ COMMAND _ GROUP options in OptionData . java to ensure proper handling of command and group sub
updated module - info . java files for mmm and ppp modules to improve module documentation clarity and maintainability
added error handling for unknown server errors in IOSImplementation . java to improve robustness by throwing an IOException when an unknown server error is provided
updated the assignment of sCheckingEvents in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper
refactor exception handling in FileSinkOperator and add closeWriters methods in SortedDynPartitionOptimizer to improve error management and ensure proper resource management during
added diagnostic output to the task call in SchemaGenerator . java to facilitate debugging of Java files during execution
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling for
refactor DataSourceMonitorTests for improved clarity to enhance maintainability and readability of the test code
added a check to prevent duplicate resource paths in ClasspathMethodScanner to improve performance by avoiding redundant scanning of resource files
updated the method of obtaining the test instance from ` get ( ) ` to ` orElse ( null ) ` and improved error logging to
added null check for ` o ` in ` RoutingInBoundHandler . java ` and updated response handling in ` RoutingInBoundHandler . java
added natIp field and updated logger warning message in EkeyUdpPacketReceiver to include IP address to improve logging clarity by providing more
replaced ` BaseAllocator ` with ` RootAllocator ` and ` ArrowByteBufAllocator ` in multiple Java files to align buffer allocation with the
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP header and body buffer length in HttpConnection . java and created a new test in RFC2616BaseTest . java to
[ reactive ] fix multi . timeout onsubscribe / schedule race violate the spec ( # 1674 )
add leveledmanifest . getOverlappingstarvedsstables ( ) to improve performance
added a test annotation to the TestOrcTimezone1 class to enhance test coverage for the Orc timezone functionality
updated conditional logic in Debug . java to handle multiple enabled metrics and timers more efficiently to improve flexibility in determining if metrics and timers are
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve robustness
added null check for columnClass before retrieving the default renderer in JTable . java and created a new test class Test6888156 .
added conditional logic to set the SHELL path based on its existence and BUSYBOX to ensure proper handling of command line arguments based on
updated the number of deleted feed from 10 to 1 in DatabaseCleaningService . java to allow for more than one subscription in the database deletion
updated testInstances from List to LinkedHashSet in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to ensure
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
replaced deleteFilesAfterClose ( ) and fileMmapEnableIfSupported ( ) calls with transactionDisable ( ) and fileMmapEnable
modified iterator initialization in SortedIntList and added a reset method in SortedIntList to improve iterator handling and ensure proper initialization
added unregistering of JMXHelper and modified exception handling in JMXHelper to improve resource management and enhance error handling
updated the default writebuffer size from 4MB to 64MB in RocksDBConfigurableOptions . java to increase the default writebuffer size for
removed unnecessary parameters from the constructor call in the Style class to simplify the constructor and improve code readability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to streamline message handling by eliminating unnecessary
[ amza ] remove unused json graph in samza runner
use mouseinput . button _ left instead of vector3f . zero .
refactor LoopRotateBadNodeBudget class to improve code readability to enhance maintainability and facilitate future updates
added a ` TypeInformation < ? > ` parameter to the ` convertToMongoType ` methods across multiple classes for improved type handling to enhance type
ggb - 1193 display imaginaryunit instead of iscomplex in inputbox
simonstewart : update copyright year and add unit test for sendkeytoactiveelement
added methods to retrieve scaled images with negative target sizes in AddAndScaleMultiImage . java to improve image rendering performance and prevent potential issues with
removed the extendArgumentCheck ( ) and extendWrapStore ( Engine engine ) methods from DBMaker . java to streamline the code by elim
on keyboard layout switch , re - query ic for shift state . issue # 383
removed the " DETECTED _ ACTIVITY " constant and updated related methods in multiple classes to streamline the detection process by eliminating
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket .
removed the import of Buildable from AaptPackageResources . java to clean up the code and improve readability
added unused comments to several method calls in CodeException , ConstantInvokeDynamic , ConstantMethodHandle , and ConstantMethodType classes to improve code clarity
enhanced exception message in WebSocketUpgradeHandler to include the status code to improve clarity of error reporting for invalid upgrade protocols
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
refactor Mockito class to improve code structure to enhance maintainability and readability of the codebase
refactor permission handling logic in Merge . java to streamline code for better readability and maintainability
deprecated the getConversationID ( ) method in HttpContentResponse , HttpResponse , Request , and Response classes to indicate that the getConversationID method
replaced imports from ` com . sun . speech . freetts ` to ` de . dfki . lt . mary . units
refactor ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` to improve code readability and maintainability by utilizing a
refactor rendering handling in DLNAResource and Request classes to improve clarity and functionality to enhance code readability and maintainability while ensuring
added remote artifact repositories to the DefaultPluginManager to enhance plugin management by including resolution and project repositories
camel - cxf - fix the cxf test error of cxfproducerclientfactorycachetest
doc : generate sample code in the java microgenerator
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failures
added a new File instance in ZipFile . java to initialize the file object with the specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the ` handleAll ( ) ` method
make channel . uid non - null by default to avoid npe .
added a new utility class ` StackTraceUtils ` and modified ` GenericDAOImpl ` and ` ForumServiceImpl ` to utilize it to
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test cases for improved readability and maintainability
refactor ` ExpDefBase ` and ` ParenthesesFunDef ` to handle comma - separated arguments in ` ExpBase . unparse
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY and improved logging messages in CheckDatabaseHelper
corrected the spelling of " supressWarnings " to " suppressWarnings " and added a conditional check for Java version 11 to ensure compatibility
added checks for unexpected JSON token types in JsonTreeReader and implemented nextJsonElement method in JsonElementReaderTest to improve error handling for unexpected JSON
added an option to consume internal runner arguments after the " -- " option in TestCommand . java and a corresponding test in ExternalTestRunnerIntegration
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to facilitate the deletion and indexing of Solr URLs based on
[ hotfix ] [ example ] add support for blink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure proper database management during integration tests
updated progress handling in ` Progress ` and ` RSSReader ` classes to include a ` showPercentage ` parameter and improved resource management to enhance
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added multiple overloaded methods for writing and closing a POIDocument in IOUtils . java to improve resource management and ensure proper closure of files
replaced print statements with newline characters in JavaBuild . java to improve readability and maintainability of the code
replaced Box _ root with BlockBox _ root and added getter methods for getRootBox ( ) and getDotsPerPoint ( ) to enhance
added support for custom user search queries in CustomQueryFilterFactory and updated LDAP transport port in TestLdapAtnProviderWithMiniDS to
added default port support to Router , DefaultRouteBuilder , and FilteredRouter classes to enable dynamic port assignment based on server and HTTP ports for
updated SnmpTargetHandler and related test classes to improve status handling and ensure proper mock closure after each test to enhance test reliability and ensure
update instructor feedback edit page to only allow instructors with submit privileges
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor FileResolverImpl to correctly handle jar and zip paths in FileResolver to improve handling of specific jar file formats and enhance test coverage for
updated the string concatenation for newFlushedSize to include docstores to enhance clarity of the output for better debugging
updated print statement to use getUnlocalizedName ( ) instead of func _ 149739 _ a ( ) to improve clarity of output
corrected the spelling of " stripWhitespaceX " and " stripWhitespaceY " from " stripWhitespaceX " to " stripWhitespaceY
increased the lock duration in FeedRefreshUpdater from milliseconds to milliseconds to improve thread safety by allowing more time for concurrent access
added exactSearch parameter to MetadataIndexNode deserialization in TsFileSequenceReader . java and created a test for it in MeasurementChunkMetadataListMap
pdfbox - 4892 : remove redundant parameter , a suggest by valerybokov
added preferred size adjustment for the pane in NavigationShareTab . java to ensure proper layout of the pane based on user - defined dimensions
replaced offset handling with state management in BeiderMorseFilter and added a new test for custom attributes in TestBeiderMorseFilter
refactor Upnp audio and handler classes to improve code organization to enhance maintainability and readability of the codebase
fix burst collided at the wrong position . close # 1193
added new test cases for JSON serialization and deserialization in JsonTest . java to enhance test coverage for JSON serialization and deserialization functionality
refactor MutableContextDataSupplier class to improve code readability to enhance maintainability and facilitate future updates
change catch block from Exception to Throwable and log a warning instead of throwing a SolrException to improve error handling and provide more informative logging for
updated the ` KubernetesMockServer ` constructor to use ` https ` instead of a boolean parameter to allow for more flexible configuration of the `
[ gr - 25946 ] fix the bug of defaultjavakintrinsicnode . computestamp in defaultjavaloweringprovider .
updated response handling in DefaultServlet to use GET / HEAD / OPTIONS instead of HTTP / HEAD / OPTIONS to ensure proper handling of HTTP requests and
tika - 1188 -- use u locale for decimalformat in tiffextractor
updated the ` ShowFileRequestHandler ` to use ` rsp . setException ( ) ` instead of throwing ` SolrException ` to improve error handling by
added reflection - based exception handling in ReflectorClassWriter . java and corresponding test in ReflectorTest . java to ensure proper exception handling and
added a clamp method to the Vector and Vector2 classes to enable clamping vectors with specified minimum and maximum parameters
added imports and modified token creation logic in ChainedTokenGranter . java to utilize OAuth2Authentication for improved token handling and
refactor BC _ instanceof class for improved readability to enhance maintainability and clarity of the code
replaced the method call to setSaveFlags with a logger instance and added a static final logger to improve code readability and maintainability by
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test flexibility and ensure compatibility with
hhh - 14663 - fix npe in nativequery . addScalar ( )
added a caching mechanism for font information in SunLayoutEngine . java to improve performance by reducing the number of concurrent access to font information
use intarraylist instead of bigarray in typedset .
updated driver name from HTML _ UNIT _ JS to REMOTE and refactored related test cases to improve clarity and consistency in session ID handling
refactor BrokerRequestUtils for improved readability to enhance maintainability and clarity of the code
refactor instance handling in InjectorBuilderImpl to use a map for improved clarity and efficiency to enhance code readability and maintainability by
updated rawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use getBasePath ( ) instead of getAbsolutePathToBuildFile ( ) to
added a null check for the ' val ' variable before parsing to avoid potential NullPointerException when ' val ' is null
fix ( jabber ) : fix connection leak in jabber protocol provider
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 in IntHashSet . java to align the constant with
added a method to retrieve all the physical variations in VectorizationContext and updated related classes to utilize it to improve the handling of data type
move htmlassettranslator and stringsresourceresourcetranslator to client . j2se
refactor conditional checks for vertical bar layout in OverviewState . java to improve readability and maintainability of the code
added the @ Entity annotation to BaseActivityEventEntity . java to facilitate entity management in the BaseActivityEventEntity
added tracing functionality to the NavBarSwipeInteractionHandler and modified the SYSTEM _ TRACE flag to false in the TraceHelper class to improve
added a new file ` InvalidOptions . java ` that implements a test for validating JavaAP options to ensure that the JavaAP program correctly handles
added error logging for unsupported number of displays in DisplayController . java to improve debugging and monitoring of unsupported display states
replaced the method ` getClientIdAndClientSecret ` with ` OAuth20Utils . getClientIdAndClientSecret ` in ` OAuth20UsernamePasswordAuthenticator
changed the ` _ unwrapServletException ` variable from ` false ` to ` true ` in ` ErrorPageErrorHandler ` and ` ErrorPageErrorHandler
added logic to set the status of ` si . status ` to ` ShortcutInfo . DEFAULT ` when ` infoUpdated ` is set to
camel - 14263 : camel - seda - allow to configure the queue size to be configurable .
added batchupdatestart ( ) and batchupdateend ( ) methods to the Kernel class and App classes to enable batch processing for improved performance
added HttpClient configuration to ThirdEyeApplication to enable HTTP client integration in the application
added a getSort ( ) method to JobInstanceFetchRequest and updated getBatchSize ( ) method to include it to enhance the job instance retrieval by
refactor CryptoFacilitiesTradeService to use OpenOrders and CurrencyPair directly instead of throwing an exception to improve code clarity and maintainability
ggb - 2338 hide keyboard when click in web
refactor llvmheap . memmove to use nfi . getfunctionhandle ( ) .
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve code readability and maintainability
do n ' t block tooltip in mode toggle menu if the tooltip be n ' t block
updated DefaultDateTypeAdapter to accept a customizable date style and time style in Gson and GsonBuilder classes to enhance flexibility in handling date
updated player string formatting in ListCommand . java to improve clarity and consistency of player identification
added a check for empty lists in the List class to ensure proper handling of empty lists
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper handling of CommandException during execution
modified the ` getLikeExpression ` method to include a boolean parameter for LIKE expressions to enhance flexibility in expression filtering based on user - defined
added ` start ( ) ` and ` stop ( ) ` methods to ` StreamSupplierComponent ` and its implementation in ` StreamSupplierComponentImpl
updated the runChild method to set the default locale based on available locales in LuceneTestCase to ensure that all available locales are set correctly
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating initialization logic
camel - 9898 : add support for camel - blueprint - test . xml and camel - blueprint - test . xml in osgi
updated assertions in TestExecuteStreamCommand to check for " execution . error " attribute instead of substring to improve readability and maintainability of the
refactor ` returnTypeSubstitutable ` method to simplify parameter handling and improve readability to enhance code clarity and maintainability by reducing
added throttle type enum and modified throttle processing logic in TestExecutor . java to enhance flexibility in processing throttling based on the specified throttle type
removed unnecessary variable assignment in ColorBleedEffect . java and added conditional check in SpriteBatch . java to improve code clarity and
refactor Annotation and AnnotatedElement classes for improved clarity to enhance maintainability and readability of the code
added a new interface ` Model ` in the ` org . apache . poi . hssf . model ` package and updated ` Sheet `
( chore ) camel - cxf : use the same filter pattern in the filter strategy .
added a ` clearEntityManager ` property and its setter in ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control
added null checks for shortcut information in multiple classes to improve robustness by preventing potential NullPointerExceptions
updated TwoDimensionalCollectionValuedMap instantiation to include a boolean parameter to enhance flexibility by allowing multiple instances of TwoDimensionalCollectionValuedMap
updated exchange specifications from " btc - e " to " Wex " and changed the exchange name from " btc - e " to " W
added null checks for columnReaders and reader in OrcEncodedDataConsumer and modified buffer setting in EncodedTreeReaderFactory to prevent potential NullPointerExceptions
added null check for files in SegmentInfos and implemented a test for opening a reader after deleting a file to ensure robust error handling when attempting to
updated the search parameter type from " search _ PARAM _ ROOT " to " search _ PARAM _ ROOT " and refactored test data builder
refactor the return statement to use a separate variable for percentValue to improve code readability and maintainability by reducing duplication
change limit validation from 1 to 0 in RangeInputStream and RangeReader classes to ensure that limit is less than or equal to zero to prevent errors
camel - 17836 : camel - route - add more logging to help diagnose failure
refactor getNextChunk method to improve calculation of playback position and durationUs to enhance clarity and maintainability of the code
refactor NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to extend LuceneTestCase instead of TestCase to improve code organization
[ flink - 23254 ] [ runtime ] fix the next input in the statefuloperator .
removed null check before setting the bitmap shader shift in Area . java and Line . java to simplify code by eliminating unnecessary null checks
removed the dbExists ( ) method and updated related imports in Blockchain and BlockchainTest classes to streamline the blockchain initialization process and improve
trim whitespace from the group value in SQLPlusSupport . java to ensure consistent formatting of the input string
stop async request hang - side effect of r1006358
bugfix : fix div position calculation in drag - and - drop
add health check metric to pinot broker ( # 1748 )
set the visibility of sharedAvatars to GONE in LocalFileListAdapter to improve user interface by disabling shared avatars
updated @ ClientBundle . Source annotations in MebisResources . java to remove unnecessary dependencies to streamline the code by eliminating unnecessary
updated conditional checks from ` > = args . length ` to ` < = args . length ` for BurstSendReceiveUdpPing ,
added logging level check to the execution process in LogInterceptor . java to ensure that commands are executed only when logging is enabled
replaced CountDownLatch usage with assertWaitUntil for span completion to improve code readability and maintainability by reducing redundancy
replaced the static QueryParser constructor with direct locale assignment and added setter methods for locale to improve code readability and maintainability by reducing
replaced ` Arrays . asList ( ... ) ` with ` Collections . singletonList ( ... ) ` in ` EntryCustomizationDialog . java `
[ jbrules - 4892 ] fix rulebase . add test case for beta node constraint
added a new class ` OCSPUnauthorized ` and modified ` OCSPResponse ` to handle ` UNAUTHORIZED ` case in ` OCSPResponse
refactor server state management in SSL . java to introduce a loop to wait for the server to complete before proceeding to improve stability
added methods to retrieve and set open connection count in SourceCounter and updated connection count management in AvroSource to improve connection management and ensure accurate tracking
( chore ) camel - graphql : add a field definition to the interface type ( # 1748 )
refactor ` createDefaultJavaPackageFinder ` method to return ` Set < String > ` instead of ` paths ` to improve code readability and
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to enhance logging capabilities for better debugging
[ hotfix ] [ test ] fix test failure of filesourcetextlinesitcase
added support for handling DataTable instances in JRubyStepDefinition to enable Ruby conversion for DataTable instances in the step definition
updated visibility settings for author in SearchImagesRenderer and refactored API response handling in ApacheHttpClientMediaWikiApi to improve user interface clarity
refactor ReadSentimentDataset class to improve code structure to enhance maintainability and readability of the code
improve error message for formula parse error
added getter and setter methods for SocketAddress in WebSocketClient . java and modified visibility of WebSocketFuture in WebSocketClient . java to improve socket address
[ java ] delete archive and archive directory before close the clustered medium driver .
refactor width and height calculations in WidgetGroup . java to use a unified setSize method to improve code readability and maintainability
replaced direct boolean conversion with Boolean . valueOf for sessionFixationAttribute to improve code readability and maintainability
refactor switch statement to include edgeOption parameter in startOneChannelLA method to enhance flexibility in handling edge options in LALogic
added linear backoff logic to ChromeBinary and updated sleep duration in ChromeDriver to improve performance by reducing sleep duration and enhancing backoff handling
added URI template attribute handling in TraceExchangeFilterFunction and updated ClientResponseWrapper constructor to include HTTP method and HTTP route to enhance HTTP request handling and
do n ' t use integer . min _ value for purge cf in precompactedrow .
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
[ # 1748 ] add support for edit contribution question ( # 1748 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ findbugs ] fix findbugs warning in kafkatynumberlyoncesink
added PGConnection . class to PooledConnectionImpl and created a corresponding test in BaseDataSourceTest . java to enhance connection handling and ensure proper
refactor PropertyTable and CloseIgnoringInputStream classes to improve code organization and maintainability
updated logging levels in TokenAuthenticationHandler to provide more detailed information about the configuration of the token encryption secret to improve logging clarity and provide more
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class should no longer be used in favor of an alternative implementation
updated command reporting logic in AmbariManagementControllerImpl and added a new method to send topology update events in FinalizeKerberosServerAction to
added iterator handling for NamedListCodec and updated related methods in NamedListCodec to improve iterator functionality and maintain consistency in data processing
added null check for state before assigning new owners in MigrationManager . java to avoid potential NullPointerException when state is null
added schema inclusion rule to ApiExample . java to enable public access in the API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test accurately reflect
fix polygon creation for unclosed or two point ring
added methods to retrieve base name and dimension count from the ConstantPool class to enhance functionality by allowing retrieval of base and dimension counts for better resource
added a new method ` setDebugEvaluationOutputForNextEval ` in ` FormulaEvaluator ` , ` SheetUtil ` , and ` XSS
( chore ) migrate test module to junit 5 ( # 1748 )
modified the condition to check if live TV is live TV in PlaybackController . java to ensure that the live TV is not
added a return statement to the DynamicStyleBar class to improve control flow by returning early
added SLF4J logging statements to set and reset the repl dump state in the Utils class to improve debugging capabilities by providing insights into
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future updates
added a check for boolean types in the MethodEmitter class to ensure compatibility with both object and boolean types
rename llvmobjectnuller to llvmaddressnuller and add llvmaddress . fromlong ( 0 ) .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add unit test for caffeine cache default configuration
added a method ` calculateBoundingBox ( ) ` to calculate bounding box based on vertex attributes to enhance the mesh ' s bounding box calculation for better
added a target hash function option to the TargetsCommand class to enable the use of murmur hash3 for target files
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the code
added color and alpha settings for highlighting elements in ListViewMultiChartActivity and BarChart classes to improve visual consistency and visual appearance of
removed the entry from pgSgPathPlanMap in ClusterPlanRouter . java to streamline the mapping process for better performance
( chore ) camel - infinispan : fix flaky test in camel - infinispan
added locking mechanism to manage artifact files in MavenArtifactFetcher and modified test assertions in MavenDependencyResolver and MavenRoboSettingsTest to ensure proper
added a conditional check for GL _ ES in the fragmentShader string to ensure compatibility with GL _ ES when using GL _ ES in the Sp
changed the return type of ` RSGroupInfo ` and related methods from ` SortedSet ` to ` Set ` across multiple files to ensure consistency in
added error handling for loading WebXmlConfiguration and changed log level from warn to debug for skipping tld processing to improve robustness by avoiding unnecessary
added a new test for version awareness in CustomAnalyzer and refactored version handling in TestCustomAnalyzer to improve test coverage and ensure correct
added a test for reading package archive information from setPackageArchiveInfo in ShadowPackageManagerTest . java to ensure correct retrieval of package information from
replaced direct calls to ` MethodUtil . invoke ` with ` MethodUtil . invoke ` for method invocation and added package access checks to enhance
added progress update events to the GradleBuildService and updated the Main class to include project configuration and task updates to enhance the progress tracking
removed synchronization block from AndroidWebDriver . java to streamline code by eliminating unnecessary synchronization
simplify initialization fail timeout logic in HikariConfig . java and improve exception handling in HikariPool . java to enhance code
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` sendHttpRequest ` method to
made the ` isNative ` field transient and updated the entry method to use ` false ` instead of ` readBoolean ( ) ` to
updated error message formatting in CEntryPointCallStubMethod . java to improve readability of error messages
rename ruleenablehandler to ruleenablementactionhandler in coremodulehandlerfactory
refactor multiple classes to improve code readability and maintainability to enhance maintainability and clarity of the code
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of logging for authentication requests
renamed ` getBasicSourceOptions ` to ` getBasicSinkOptions ` and updated related methods in ` KafkaDynamicTableFactoryTest ` and ` Upsert
added null check for repository existence in UsersPanel . java to improve error handling and provide clearer feedback when the repository is not found
added support for font extensions " . otf " and " . OTF " in the name validation logic to ensure compatibility with various font formats
refactor type checking logic in AnnotationMatcher . java to improve clarity and functionality to enhance readability and maintainability of the code
replace " OFF " with " SEVERE " in Grep . java to enhance error reporting for better debugging
added a check for debug logging before logging messages in FaultTolerantChunkProcessor . java to optimize logging performance by avoiding unnecessary string concatenation
fix npe in surefireplugin when there be no ` ` excludes ' ' field
added methods to move the default screen on the home intent when openFolder is null to ensure that the home intent is only moved to the default
updated maximum bitrate from 110 to 30 in PMS configuration to increase bitrate for better user experience
simplified the retrieval of options from the optionsMap in the getOptions method to improve code readability and maintainability
trim whitespace from the description return value in MutableDatabaseProperty . java to ensure consistent formatting of the description
corrected the concatenation of the output filename in XOMParserTest . java to ensure proper file path formatting for better readability
removed the process ID from the error log message in ProcessBesuNodeRunner . java to simplify the error message by eliminating unnecessary
added getLoadedMusic ( ) and getLoadedSound ( ) methods to MusicLoader and SoundLoader classes to provide access to the
removed unnecessary imports and simplified type declaration in OnBeanCondition . java to improve code readability and maintainability
added ScreenRecordRule import and annotation to RequestPinItemTest . java to enhance screen recording capabilities for better debugging
set the selection of lrPauseButton in CPUFeature . java and MemoryFeature . java to false if it is not null to ensure the button
refactor ` createAccountsCheckboxPreferences ` and ` createAddAccountPreference ` methods for clarity and consistency to improve code readability and maintain
fixed typo in packetwriter . sendpacket ( )
modify StringBuilder initialization to handle UTF - length values correctly to ensure proper initialization of StringBuilder based on the size of UTF - length
added property values for Spring metrics export configuration in WebEndpointsAutoConfigurationIntegrationTests . java to disable metrics export during test execution
refactor InterruptedException class to improve code readability to enhance maintainability and facilitate future updates
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor connection check logic to use a boolean variable for SSL status to improve readability and maintainability of the code
updated the conversion logic in ArgumentArrayMessageMapper to handle both String and Map types to improve type safety and clarity in type conversion logic
updated collection handle in SolrServiceCommunityCollectionItemFilterPlugin . java and adjusted test assertions in XmlWorkflowFactoryTest . java to ensure correct
replaced ` sExemptOfPasscodeActivites . add ( AuthenticatorActivity ) ` with ` intent . FLAG _ ACTIVITY _
refactor : remove deprecate annotation in patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` method from ` void ` to ` boolean ` and added a null check for the drawable
added JUnit @ Ignore annotation to TestPackedInts . java to mark the test as ignored due to LUCENE - 4488
added null check for root and collect components in DynamicStyle . java to prevent potential NullPointerExceptions when root is null
add the ability to update the confusion matrix in the sentence test
change last _ sample _ ok to lastsampleok , not lastinerror
added unit tests for ` addDevice ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct behavior of
corrected the spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest and PropertyBindingSupport
added a new parameter " clone " to the " objectMethods " set and introduced a finalization constant for the method to enhance functionality by allowing
added null checks for counters object in IntegrationTestBigLinkedList . java to ensure robustness by handling cases where Counters object is null
added can _ get _ instance _ info flag to reply with object reference . referencing _ objects . id
updated the method name from ` service ` to ` serviceId ` and added a matching check for ` SamlRegisteredService ` to improve clarity
added a null check for the activity before running the UI thread in PhotoFragment . java to avoid potential NullPointerExceptions when the activity is not initialized
corrected the spelling of " Logger " to " logger " across multiple files to ensure consistency in logger initialization across the codebase
changed access modifiers of fields and methods in DatabaseAdaptor and JDBCSessionDataStore classes from private to protected to enhance encapsulation and allow for customizable
updated test cases in UIMAUpdateRequestProcessorTest to use " suggested _ category " instead of " language : english " to improve test
refactor thread name management by introducing ` updateThreadName ` and ` resetThreadName ` methods across multiple classes to improve code readability
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the codebase
[ dmn ] add test case for dmnruntime . evaluateall ( dmnmodel )
update texture map size and add glflush ( ) to ensure proper texture map creation before moving on macs
added a tooltip text to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing a clearer tooltip for the
replaced calls to ` getTypes ( ) . add ( e ) ` and ` add ( i ) ` with ` addType ( e ) `
add text and description to the retarget action presentation ( # 1748 )
ggb - 2323 use stringtemplate . defaulttemplate instead of stringtemplate . islabelsimple ( )
changed the data type of BRIGHTNESS _ FACTOR from intValue to doubleValue to ensure accurate representation of the BRIGHTNESS _ FACT
fix a bug in the scm history parser that cause the history entry to be empty
added a isAdmin parameter to the createUser method and implemented listUsers ( ) and userIsAdmin ( ) methods to enhance user management functionality by allowing
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a new Test
updated debug logging format to use placeholder syntax to improve code readability and maintainability
updated method signatures in Context . java and Response . java for consistency and clarity to enhance code readability and maintainability by standardizing method
fix potential npe in mixinitemstack # setcapabilitiesFromSpongebuilder
updated the assertion in LifecycleUtilsTest to compare execution IDs instead of a default value to ensure the test accurately reflects the expected execution ID
added validation for CreateSmartContract and TriggerSmartContract types in multiple files to ensure only valid transactions are created to prevent errors during contract creation
added multiple package - info . java files for the ` Image ` , ` module - info . java ` , and ` module - info .
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for updating the sequence number to improve performance by
added a check to ignore duplicate JavaFileObject instances in JavadocTool . java and modified command - line arguments in T7091528 . java
change the default value of the STRIP _ IPV6 property from " true " to " false " and modify the host substring logic to
added support for adding a new user parameter in the LoginServerTokenEndpointFilter to enhance the token endpoint to allow users to add a new token
added a new constant ` C _ KEY ` and modified language checks in ` LanguageFactoryTest ` and ` CPPParserTokenManager ` to
replaced instances of ` MoreFutures ` with ` MoreExecutors ` and created a new ` MoreExecutors ` class to utilize a
added HTTP headers for cache control and expiration in FormAuthenticator and updated tests in ConstraintTest to enhance HTTP response handling and ensure proper caching behavior
improve error message when voice do n ' t exist
updated HSSFTests and TestEmptyDocument classes to use TestAreaReference , TestCellReference , TestRangeAddress , and TestSheetReferences
updated test classes for FetchHTTP2Test , FetchHTTP2Test , and FetchHTTPTestBase to enhance test coverage and improve reliability of
added null check for the output before retrieving the classDirectory to avoid potential NullPointerException when the output is null
added external resource control priority settings in Java2DRenderer . java to enhance access control behavior for better user experience
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure the build does not fail on Windows systems that do not fail the build
changed the ` mbean ` variable to be ` final static ` and refactored CPU time testing logic to improve thread safety and enhance error handling
added a check for empty comments in the TabsAndIndentsVisitor class to ensure that comments are only processed when they are not empty
updated assertions in SimDistribStateManager and TestTriggerIntegration to use greater than 100.0 instead of greater than 5.0 to ensure
replaced ` equals ` with ` equalsIgnoreCase ` for file comparison in multiple change set filter classes to ensure case - insensitive comparison for change set IDs
removed the ` getString ` method from ` ShadowBundle ` to simplify the code by directly retrieving the string value from the map
added support for military time formatting in TweetActivity to enhance user experience by providing more detailed time display based on the user '
added a check for empty connections in StandardProcessSession . java to ensure that an empty list is returned when no connections are available
refactor focus request logic in DetailFragment to improve code readability and maintainability by encapsulating focus request logic
added a check to ensure the canonical path is not empty before setting the extra class path to avoid potential errors when the file path is empty
improve solve ( ) to avoid npe
added an import statement for org . springframework . integration . core . Message in GenericMessage . java to facilitate the use of
refactor query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a new join method to improve code readability and maintainability
updated file filter handling in AquaFileChooserUI to ensure only valid file filters are applied to the file chooser UI
fix thread safety issue in p2ptransportmanager
updated the method to return " TRUE " instead of " FALSE " in ArrayPtg . java and added a test for the toFormulaString
updated import statements in PGtokenizerTest . java to use specific assertions instead of wildcard imports to improve code readability and maintainability by standard
refactor the handling of nested anonymous classes in Java2TypeScriptTranslator and add a new test for it in StaticsTests to improve code
added sequence creation and SQL statement for auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s default sequence naming conventions
refactor byte reading logic in DataInput . java to improve readability and correctness to ensure proper handling of negative values in UTF - 8
added assertions to check for the " Dimension VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " metadata in ImageParserTest . java to
updated the declaration of the parent variable in Component . java to ensure proper access to the parent ' s parent variable
refactor import statements for consistency and clarity to improve code readability and maintainability
( chore ) camel - crypto : use engine _ init instead of _ finish
added methods to handle iteration events in multiple classes and updated related classes to improve event firing and event handling in the application
added resource release calls to HttpContent in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leak
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during recovery
modified URL loading logic in BrowserActivity to handle " twitter : / / " URLs to ensure proper activity launching when the URL contains " twitter
added awaitHostStatus method call in DeploymentGroupTest . java to ensure proper handling of host status during deployment tests
changed the logResult parameter from false to true in VisibilityController . java to enable the logging of the list labels functionality
increase the maximum retry limit from 0 to 25 in RestTemplateRetryTests . java to improve test reliability by limiting retry attempts
removed a debug print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to streamline output
added support for the " fraction " resource type in ResourceLoader and Converter classes to enhance resource loading capabilities for better handling of fraction data
added a confirmation check for writing files in BasicFrame . java to ensure that writing is only performed when necessary
added null checks for tagGroupId and tagArtifactId in the findNewerDependencyVersion method to ensure that both tagGroupId and tagArtifactId
hbase - 25836 improve error message when table do not exist in namespace
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class for improved readability to enhance maintainability and facilitate future updates
added a null check for f0 in HTSVocoder . java to ensure f0 is non - negative and prevent potential errors
updated logging messages in SchemaRetriever and added null checks for pkColumn and fkColumn in TableRetriever to improve logging clarity and prevent potential NullPointerException
improve performance of request . clearencoders ( ) .
added SharedPreferences support for empty page handling in Workspace . java to enhance user experience by allowing users to disable empty page scenarios
added a warning log for deprecation of cucumber - needle2 or cucumber - jakarta - cdi to indicate that
replaced ` TestActivityWithAnotherTheme ` with ` Resources . Theme ` and refactored theme handling in multiple files to improve theme
updated error messages in VerifyFast . java to use ` Arrays . toString ( ) ` for better readability to improve code clarity and maintain
# 1188 - remove old @ system _ versioning _ alter _ history annotation ( # 1188 )
modified conditional checks in CodeGenerator and added new methods for getters and setters in Global and ScriptObject to enhance functionality and improve property management in Script
added a random argument to the Collections . shuffle method in TestFilterDirectoryReader . java to ensure that the readers are randomly generated before proceeding
added conditional logic to retrieve the display name based on the user ' s name in UsersAndGroupsSearchProvider to enhance user clarity by providing
updated the path formatting in CookieRetrievingCookieGenerator to ensure a default path is used to avoid potential null pointer exceptions
updated closing braces in multiple Java files to improve code readability and maintain consistency
updated cache name variable declaration to be final and added a check for total backup count to ensure immutability of cache name and improve code cl
updated pageNumber comparison from ` = = 0 ` to ` ! = 0 ` in ValidationResult . java to ensure correct comparison of pageNumber based on the
added a null and equality check for the focused widget in UIDropdown . java to ensure proper handling of focused widgets during highlighting
fix checkstyle issue in playSoundAtLocationExcept and playSoundPitchRange methods to improve code readability and maintainability
refactor ApplePackageDescription and AbstractKnownBuildRuleTypes to use getAppleCxxPlatformFlavors instead of getPlatformFl
added a test case to verify the functionality of the clickhousify SQL syntax in ClickHouseStatementTest . java to ensure that the
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor EnglishPTBTreebankCorrector class for improved readability to enhance maintainability and clarity of the code
added a new file TestGetLoggerNPE . java to test logging behavior with NPE handling to ensure that logging functionality behaves as expected
her - 1984 save script state - implement by add a map to the application context for arbitrary use , and make sure the app context be available in all scripting environment
improve performance of staticobject . getobject ( ) and getobjectvolatile ( )
added regex pattern matching for " NEXTVAL FOR " in NextValExpression and updated related methods to enhance flexibility in handling multiple values in SQL
improve error message when resource bundle be not pre - cached
refactor buffer handling in BoundedLocalCache and add a test for clearing pending writes in BoundedLocalCacheTest to improve performance and ensure
added support for the Leverage _ Level parameter in QuoineExchange and updated QuoineNewMarginOrderRequest to include an order direction
added methods to bound properties in PropertyDescriptor and created a new Test7192955 class for testing to ensure proper property binding and read - only
changed the type of ` failsafeWidth ` and ` failsafeHeight ` from ` int ` to ` LwjglGraphics . Set
added null checks for parent buttonsAwatingRelease in Tabs . java to ensure that buttons are properly set to null when the parent form is
fix linecell height calculation for empty text area
updated error message formatting in XSLTErrorResources _ it . java to improve code readability and maintain consistency
changed ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper ` classes to
# 912 improve code readability : replace ' \ ' ' by ` ` ' ' '
simplified namespace retrieval in StaxXmlPullParser . java to improve code readability and maintainability
added support for nested joins in multiple test classes to enable flexible configuration of nested joins in the application
cloudstack - 4892 : fix error message in querymanagerimpl for admin only
added JavacFileManager caching and modified CompletionTaskProcesor constructor to accept a cursor parameter to enhance performance by caching Java class paths
added configuration variables for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
replaced ` Assert . assertThat ` with ` assertThat ` in KuduIOIT . java and XmlIOTest . java
add miss @ nullable annotation to metadatarenderer , textrenderer , and renderer
fix ( tcp ) : fix offset calculation for symbol file mapping
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and updated package structure in ` Jooby . java ` and ` TypeConverters . java ` to stream
refactor ThreadlessExecutor to encapsulate finished state management to improve code readability and maintainability by encapsulating completion logic
refactor DateTimeFormatter and TestDateTimeParsing to improve error handling and add unit tests for date formatting to enhance code clarity and ensure proper handling of
rename ` chunk _ length ` to ` chunk _ length _ kb ` in ` CompressionParameters . java ` to improve clarity and consistency in
added a new case for WILDCARD in Types . java and created a new class T7034495 . java with generic interfaces in T
refactor while loop structure in LotsOfEvents . java to improve readability to enhance code clarity and maintainability
refactor conditional statements in TransclusionDecideRule . java for improved readability to enhance code clarity and maintainability
do n ' t print micronaut version if it ' s null
added unit tests for handling Area3DPtg name records and calculations in TestBugs . java to ensure correct handling of Area3DPt
updated the way the description is returned in MindIconFactory . java to ensure proper formatting of the description when the name starts with a slash
updated the ` onHomeIntent ` method to accept a boolean parameter ` internalStateHandled ` to enhance functionality by allowing the handling of the internal
replaced direct usage of ` getPreferDependencyTree ( ) . orElse ( false ) ` with a boolean variable ` preferDependencyTree ` to
added showDetails method to multiple activities and updated FileDetailFragment and FileDetailFragment to handle the active tab correctly to enhance user experience by allowing
updated function names from ` $ apply ` to ` apply ` across multiple files to standardize function naming conventions and improve code readability
improve minimalencoder and highlevelencodetestcase to use more than 253 symbol size
updated formatting in SourceBuilder . java to include additional newline characters to enhance formatting consistency and improve readability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure proper handling of data changes in the adapter
removed the default WALSyncMode method from ShadowSQLiteConnection . java to streamline the code by eliminating unused functionality
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to enhance type safety and ensure correct removal of
[ s3 ] remove unused method from defaults3crtasyncclient
updated error messages in doDudPasswordTest from " DEF length 110 object truncated by 28 " to " 44 " and " 84 " to
add more information to the assertion error message in hazelcasttestsupport
improve graphbuilderphase . appendgoto ( truesuccessor = = falsesuccessor = = truesuccessor = = false )
[ web ] fix npe in euclidianpen and application . getimage ( )
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method in YoBitMarketDataService and updated related methods in YoBitMarketData
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` across multiple files to align exception handling with the new architecture and
added StreamReadConstraints to StandardDataFlow for improved JSON serialization to ensure proper handling of string lengths in JSON serialization
updated engine retrieval to use an empty string instead of a configuration string to improve code readability and maintainability by using a default value
renamed ` FullIterator ` to ` WheelIterator ` and updated references in ` TimerWheel . java ` and ` TimerWheel
added error handling for generating bug messages in BugInstance . java to improve debugging and provide clearer error messages for missing bug patterns
increased timeout duration from 3 seconds to 10 seconds in LocalChunkProviderTest . java to improve test reliability by allowing more time for
changed the visibility of the uncomplete check list menu item from true to false to disable the uncomplete check list menu functionality
updated DefaultResultSetHandler to resolve distributed result maps and added a new Contract class to improve result mapping handling and introduce a new Contract class for
add null check for defaultHome and unregister the receiver if it ' s null to ensure proper cleanup of the receiver when the default home is null
removed the import and annotation for VertxGen in PumpImpl . java to streamline the code by eliminating unnecessary dependencies
removed unnecessary cast to FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code by eliminating unnecessary type casting
trim whitespace from tokens in ConfigAttributeEditor and add a test for strips trailing and leading spaces in ConfigAttributeEditorTests to ensure proper formatting
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAux classes to improve code organization and maintainability
svm : make singlemodulereference public and add unnamedmodule ( ) method
updated the condition for determining the relKind from " TABLE " to " SYSTEM TABLE " based on the presence of " pg _ " to ensure
[ java ] deprecate agent . getagentrequest ( ) and setagentrequest ( ) in favor of agent . getagentrequest ( )
updated the formatting of the RQST constant in ThriftHiveMetastore and HiveMetaStore classes to improve code readability and maintain
added a new module - info . java file containing module - exports for the com . speedment . runtime . core package to provide modular
updated flush state handling and fill state checks in SslConnection . java to ensure proper flushing behavior and improve readability of the code
log4j2 : fix log4j2logdelegatefactory do n ' t throw npe in initializererror
7029048 : test7029048 . java fail on window due to server vm not find
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
added LibPQFactory import to PGProperty . java to support SSL configuration for LibPQ in PostgreSQL
disable the @ Test annotation in TestInterProcessSemaphoreEdges . java to temporarily disable the test due to failing issues
added sorting functionality for theme keys in EditableResources . java to ensure consistent ordering of theme keys during processing
added a new file ` OSvTerminal . java ` and integrated it into ` TerminalFactory . java ` and updated ` TerminalFactory . java
added support for additional file extensions in ClassType . java to ensure compatibility with additional file formats
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to improve iteration order and performance of test results
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 547 .
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
changed access modifiers and method names from static to instance variables in ShadowTelephonyManager , ShadowWifiManager , and TelephonyManager
added a parameter to the ` resolveMessage ` method and updated conditional checks for ` context ` and ` performOriginBasedResolution ` to enhance message
updated Class . forName calls to use asSubclass for TraceMethodVisitor and CheckClassAdapter to improve type safety and avoid unchecked cast exceptions
added LoggingAuditService and UaaAuditService interfaces to log user authentication success and failure messages to facilitate auditing of users in
added nullability annotations and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance robustness by
fix : do n ' t generate a proxy for abstract class
camel - 16462 : camel - http - add http . proxyhost and http . proxyport option to camel - http
updated the maximum encoding version from " 1.1 " to " 1.2 " to ensure compatibility with the latest encoding standards
added a call to ` jdkSerialFilter ( ) ` in the ` System . java ` file to enable serial filtering functionality for the static
camel - 14263 : add more information about pool size in log message
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple Java files to simplify the method signature and
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to accept ` rawRealtimeTableConfig ` and utilized ` ConfigUtils
added error reporting functionality in ValidationReport , DisallowValidator , RefTest , and RefValidator classes to improve error handling and provide clearer feedback
refactor inline QSB handling in InvariantDeviceProfile to use closestProfile instead of default displayOption to improve clarity and maintainability of
added exception handling and URL decoding for classpath creation in SortedArrayStringMapTest . java to ensure proper handling of special characters in the location string
updated the expected characters in the @ Given annotation from ' 10 ' to ' ( . * ) ' in TransformSteps . java to ensure that
added null check for ` prop ` and ` image ` before calling ` fillRect ` in ` PGraphicsJava2D . java ` to
replaced hardcoded timeout values with a dynamic variable timeout in FaultToleranceTest . java to improve code readability and maintainability by reducing
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
add url back to environment for backward compatibility
[ java ] add multiple call to system . gc ( ) in knowledgeagenttest .
refactor multipleAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
refactor ` copyFile ` method to use a dedicated ` copyFile ` method to improve code readability and maintainability by encapsulating file copying logic
renamed the method ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in naming conventions
[ pytorch ] move ndarray to the desired device ( # 1187 )
added a conditional check for XML type before visiting indent and line format statistics in Autodetect . java to ensure proper handling of XML
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in ` NotesHelperTest ` and ` GeocodeHelperTest `
added new GasLimitRule , DifficultyRule , and ParentGasLimitRule instances to CommonConfig . java to enhance configuration management for gas and
changed the visibility of the setupData ( ) method from public to private in BaseAssumptionsRunnerTest . java to restrict access to the
renamed the ` autocommit ` variable to ` runInTransaction ` in the ` ChangeSet ` class to improve clarity and consistency in
added null checks for endStream and listener in TripleServerStream . java to improve stability by preventing potential NullPointerExceptions
[ hotfix ] [ doc ] add ` { { . Site . BaseURL } } ` to documentation for failover strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure that the
refactor Common class to improve code readability to enhance maintainability and facilitate future updates
refactor context layer handling in Launchable . java to use try - with - resources for better resource management to improve code readability and maintain
refactor StreamExecDeduplicate class implementation to improve code readability and maintainability
[ hotfix ] [ kafka ] add warn log when send kafka message to topic
added PersistentPropertyAccessorFactory to SimpleElasticsearchPersistentEntity and implemented isImmutable method in SimpleElasticsearchPersistentProperty to enhance property management and ensure immut
return true for setcoord ( point , i ) method in 3d and 1d
added scrolling functionality and logging for scroll events in AskGestureEventsListener . java to improve user experience by providing insights into the scroll behavior
improve the comparison logic in NGramEstimator . java to enhance the accuracy of the comparison logic
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
added methods to retrieve folder icon properties in StatsLogCompatManager to enhance functionality by providing additional context for folder icons
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file ` TestSkeletonPredicates . java ` containing a test class for the ` IRNode . COUNTEDLOOP ` method to
modified the ` SelectionHighlighter ` class to add a ` setHandler ` method and modified the ` equals ` and ` hashCode ` methods to
added a new class ` StringResultConverter ` and refactored ` AsmRuntime ` and ` AsmRuntime ` to use it to
camel - 19751 : upgrade camel - 19751 to camel - 19751 for camel - 19751
updated condition in JansiWinSysTerminal from " ! = 0 " to " = = 0 " to ensure correct behavior when waiting for
added null checks before setting buffer capacity and setting buffer limit in BufferUtils . java to prevent potential NullPointerExceptions during buffer operations
updated the file path assertion in TestSolrDiscoveryProperties to use File . separator instead of " data / " to ensure compatibility with different operating systems
updated OS detection logic in AutoUpdaterServerProperties . java to handle macOS and pre - Catalina environments to ensure compatibility with different operating
replaced ` lockFile ` with ` lockName ` in the ` Lock ` class and updated related references to improve clarity and consistency in
updated variable name from ` appIcon ` to ` allApps ` for clarity to improve code readability and maintainability by using a more
updated references from ` Invocable . InvocationType ` to ` InvocationType ` in ` ClientDatagramEndPoint . java ` to improve code
changed the SQL query from " oreder by STEP _ EXECUTIONS " to " order by STEP _ EXECUTIONS " to ensure
updated button handling logic in LwjglInput . java to ignore unknown gdx buttons to ensure that unknown buttons are handled correctly and avoid
added validation for approve and reject actions in TaskRestRepositoriesIT . java to ensure that the test correctly verifies the status of the claimed
refactor logging statements to use a static logger instance across multiple builders to improve code readability and maintainability by centralizing logger initialization
updated the expiration time parsing logic in SsoAccessTokenProvider . java and added a new test case in SsoAccessTokenProviderTest . java to
[ geos - 8470 ] disable test on window for github action
[ ci ] add alarm suppression support to cdi test
reformatted code for better readability in JFrame . java to improve maintainability and readability of the code
added a null check for the MediaDatabase connection before executing the execution statement to avoid potential NullPointerException when accessing the MediaDatabase connection
replace metricsContext initialization with solrMetricsContext initialization in SuggestComponent . java to streamline metrics initialization and improve code clarity
updated file and folder output formatting logic in OCFileListFragment . java to improve readability and maintainability of the code
change default hash known hosts from " yes " to " no " and modify loadKeys return type in FileKeyPairProvider and ResourceHelperKeyPairProvider
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the codebase
added a new test class ` ThreadFactoryTest ` for testing the ` MyThreadFactory ` functionality to ensure that the ` MyThreadFactory `
refactor lock period retrieval and expiration logic in DelegateResourceActuator . java and ProposalUtil . java to improve code readability and maintainability
added a new TicketModel instance in EditTicketPage . java to initialize the ticket model before use
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow the option to dimiss apps
updated constructors in multiple assertion classes to include selfType parameter to enhance flexibility by allowing selfType to be passed in assertions
updated MENU _ DELETE _ TWEET , MENU _ COPY _ TEXT , MENU _ SAVE _ IMAGE ,
fix race condition in jmeterthread # start ( ) .
rename ` codecPassthrough ` to ` decryptOnlyCodecFormat ` and update related logic in ` MediaCodecAudioRenderer . java ` to
added a conditional check before offering and closing failures in ServerHTTP2StreamEndPoint . java to ensure that failures are only sent when the result
updated the option name from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during cleanup operations
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapterTest ` , and ` RestAdapterTest `
reformatted code for better readability in ComponentPresetManager . java to improve maintainability and clarity of error handling
added a column name configuration option in HiveConf and updated related test assertions in TestJdbcDriver and TestJdbcDriver2 to ensure unique column names
remove the bfirsttime field from maryclient . additemlistener ( ) and remove the bfirsttime field from the gui .
added session validity check and updated exception handling in Session . java and SessionHandlerTest . java to improve error handling for invalid sessions and ensure proper
removed the ExceptionHelper . java file which contained a utility method for retrieving the root cause of a Throwable to streamline the codebase by elimin
change keyPairGenerator initialization from 256 to 255 in JceX25519Domain . java to accommodate larger cryptographic values
added codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene 4.41
[ hotfix ] [ checkpointing ] add debug log for empty header list
added support for RSA / ECB / OAEPPadding algorithm and improved exception handling to enhance security and provide clearer error messages for
updated platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with the latest architecture
updated exception handling in DebugSourcesResolver to include SecurityException to improve error handling and provide clearer logging for potential security issues
removed unnecessary whitespace in AbstractTest . java to improve code readability and maintain consistency
updated error handling and logging in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest classes to improve clarity of error messages and
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple files to ensure consistent buffer management across different operating systems
set USE _ PIPELINE _ DOWNLOADER to true in FastSyncChainDownloader . java to enable pipe download functionality by default
replaced ZONE _ OFFSET with DST _ OFFSET in SimpleDateFormat . java and added a new test class Bug7130335 . java
replaced references to ` mRollo . mState . iconCount ` with a local variable ` iconCount ` to improve code readability
server : return router when no default hypervisors be available
refactor StringBuffer class for improved readability to enhance maintainability and clarity of the code
added a new field ` ruleUID ` to the ` RuleResource ` class to set the rule ' s UID for better rule management
added a null check for the listener before removing it from the registry to prevent potential NullPointerException when listener is not initialized
added a pretty - print property to the JoltTransformJSON class and updated jsonString assignment to use it based on context to improve JSON output formatting
make access _ table public so that it can be reuse
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to reflect the absence of resources at the specified location to improve clarity and accuracy
improve error handling in xmpptransport . dorun ( ) .
refactor multiple classes related to control handling to improve code organization and maintainability
added a new boolean parameter ` isUpgradeSuspended ` and modified related logic in ` AmbariManagementControllerImpl . java ` to enhance
update copyright year in FindsByCssSelector . java to ensure compliance with the latest copyright year
removed the declaration of wfields in Resolver . java to streamline the code by eliminating unnecessary variable declaration
added default encryption and signing key sizes to OAuthProperties to enhance security by allowing customizable encryption and signing settings
hbase - 26462 fix arrayindexoutofboundsexception in htabledescriptor # getcolumnfamilies ( )
replaced the deprecated ` AllowedResourceAliasChecker ` with a lambda expression in ` SampleWebJspApplicationTests . java ` to simplify the alias
refactor ObjectInputStream , ObjectStreamClass , Serializable , and package - info classes to improve code organization and maintainability
added a reset method to the Cluster interface and invoked it in ClusteredServiceAgent to provide a way to reset the idle strategy for better resource
updated the sequence file writing logic in ChunkedWriter . java to correctly increment the current chunk ID to ensure proper handling of the current chunk ID
added a new abstract class AbstractJobExecutor to handle job execution in batch processing to facilitate the execution of batch operations within the batch
added a variable ` replayFuture ` and modified the replay logic in ` RecoveryStrategy . java ` to improve clarity and functionality of the replay
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added service ID retrieval logic in AbstractConsulClient to ensure proper handling of service IDs based on the configuration settings
replaced ` Math . random ( ) ` with ` SecureRandom ` in the ` catPut ` method calls to enhance security by using a
add option to verify runtime compilation framestates during bytecode parsing
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline code by eliminating unnecessary complexity
updated method signatures in CallsRealMethods and added tests for abstract methods in CreatingMocksWithConstructorTest to enhance mock functionality and ensure correct behavior
refactor ` NashornScriptEngine ` and ` Context ` classes to use ` Class ` instead of ` String ` for package access checks
refactor ContextPathPluginTest to extend AbstractPluginDataInit and add setupErrorConfiguration method to improve test setup and error handling for plugin initialization
renamed ` dtm ` to ` model ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
added support for the ` has - touch - interaction - service ` request in multiple classes to ensure proper handling of touch interaction service requests in the
removed unnecessary try - catch block in ConnectAction . java to improve code readability and maintainability
updated variable names from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` to improve clarity and specificity of the
added new classes ` ArrayHelper ` , ` Asserts ` , ` NativeRegExp ` , and ` Objects ` in the ` javaemul .
added handling for ' HOME ' and ' END ' characters in the Less . java file to enhance functionality for handling home and end commands in the
removed synchronization around the retrieval of connected plots in the PlotHandler class to simplify the code by eliminating unnecessary synchronization
refactor intent creation in Utilities . java to use Intent . createChooser for better organization to improve code readability and maintainability by reducing
changed the access modifier of the Roster constructor from public to package - private to restrict access to the Roster class
added basic constraints to the certificate generation in TestUtils . java to ensure proper certificate generation with basic constraints
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address issues caused by using the wrong transform
replaced direct assignment of ` Integer . MAX _ VALUE ` with a local variable ` ps ` in ` TrieDateField . java ` and
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline taskbar state management by eliminating unnecessary
added a new file ` ArrayLength . java ` that tests the ` getFields ( ) ` method for an array type to ensure that the `
wait for the hazelcast process to be destroy before shut down it
replaced the @ Singleton annotation with @ ApplicationScoped annotation and refactored the save method in ApplicationSettingsService to use a PostConstruct method
updated assertions in Safepoint . java to check for non - negative values and adjusted newValue assignment logic to ensure that values are valid and
updated threadNameField to use " Ljava / lang / String " instead of " [ C ] " and changed return type from charArray
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
added stroke object and font handling in PGraphicsJava2D . java to enhance rendering flexibility by allowing customization of stroke objects
[ calcite - 4892 ] add support for window and groupby with dynamic star
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to initialize child records in the content of the
added import for Messages and set the HTTP frame status to 0 in HTTPServer . java to provide a user interface with a warning icon for the
remove deprecate inputevent . getmodifiers ( ) , use nativeevent . getmodifiersex ( ) .
change node cycles from CYCLES _ 6 to CYCLES _ 3 in AMD64CountLeadingZerosNode and AMD64Count
camel - 16462 : fix npe in entityparser when the content - transfer - encoding header be null
refactor Locale class to improve code organization to enhance maintainability and readability of the codebase
added a new button ` clearLogButton ` and ` clearLog ( ) ` methods to ` ErrorConsoleController ` and ` LogMessages `
updated the initialization of mRecentsAnimationController in RecentsView . java to ensure proper initialization of the animation controller
updated Debug . java , related classes , DummyCaptionMap . java , and LocalizedCaptionMap . java to use Collections . emptySet instead of
added connection pooling functionality to multiple test classes to ensure proper resource management and prevent resource leaks
simonstewart : add opera driver to the list of supported opera driver
added error handling for downloading files in ManageJournalsPanel . java to improve user feedback during file download failures
added new product entries for the Lifx
added asynchronous request handling to the OverseerCollectionProcessor and CollectionsAPIAsyncDistributedZkTest classes to improve asynchronous processing and ensure correct
refactor PostgresDatabase and PostgresDatabaseTest classes to improve readability and maintainability of the code
updated LogPanel instantiation to use getRepositoryModel ( ) . HEAD instead of repositoryName to ensure correct repository reference is used for log panels
update model space unit from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to ensure correct positioning of bone
added a browserDestroy method to the AndroidImplementation class and removed the deinitialize method from the deinitialize method to streamline the destruction
added a waitForActiveCollection call to waitForApiTestViolations in AutoScalingHandlerTest . java to ensure that the application waits for the latest API
refactor loop structure in ScreenTerminal . java and update import statements in Tmux . java to improve code readability and maintainability by
updated the condition in SoftResetAction to include controller state checks to ensure proper handling of controller states in the soft reset functionality
disable on - disc stream cache to speed up texture pack reloading
added conditional logic to retrieve the parent folder from mediaRenderer in Request . java and RequestV2 . java to ensure proper resource retrieval for media
[ java ] fix checkstyle violation in networkofferingvo . java
added a close method to FileOutputStream in AndroidImplementation . java to ensure proper resource management and prevent memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by catching a broader range of 403 responses
log4j2 - 1343 add getoriginal ( ) method to messagefactory2adapter , and fix unit test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress unnecessary serialization
updated regex pattern from " ( 1 , 2 ) " to " ( 3 ) " in mmm Version . java and ppp Version .
updated tooltip delay settings in ExtractionModelFrame . java to improve user experience by allowing dynamic adjustment of tooltip settings
refactor ProjectCommand to use a new ` passedInTargetsSet ` parameter for better clarity to improve code readability and maintainability by
added timezone setting and assertion in TimeTest . java to ensure correct formatting of 2445 milliseconds in tests
refactor MediaSessionConnector class to improve code readability to enhance maintainability and facilitate future updates
do n ' t use jssefactory to get the ssl implementation from the endpoint
updated accuracy retrieval from altitude to accuracy in GpsLoggingService to ensure accurate accuracy display based on location information
added a method to check if futures are enabled in BinanceExchange and updated order handling in BinanceAccountService and BinanceTradeService to
update adminaccountmanagementservlet and adminaccountmanagementhelper to use instructorcoursetable instead of accounts
added a method to set the acceptQueueSize of maxWorkerThreads in ThriftHttpCLIService to set the queue size based on the maximum worker
replaced direct retrieval of class name with a constant for watchServiceEnabled to improve code readability and maintainability by using a dedicated constant for
added a check to return true if the composite data scheme is " ssl " in JmsFactory . java to ensure proper handling of SSL protocol in
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test cases in ` TestWindow
updated the calculation of the duration by removing an assertion to ensure that the duration is only zero for a really fast collection to improve code reliability
fix : fix issue with javadoc on method with line comment .
replaced the ` getUnsafe ` method with a ` isOsx ` method for memory reading and updated the ` readReservedMemory ` method
added multiple calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner .
changed the visibility of procId from private to protected and updated formatting in exception messages to enhance encapsulation and improve readability of exception messages
( chore ) camel - cxf : allow to specify the service class in the soapservicefactorybean
refactor YamlChangeLogSerializer to use a list for storing databaseChangeLog to improve code readability and maintainability by using a dedicated map
updated print statements to include newline characters in SchemaPrinter . java to ensure proper formatting of the output for better readability
replaced ChunkLoc usage with C . NOT _ IN _ PLOT . send in DebugRoadRegen . java and improved
updated HomeFragment to use getActivity ( ) instead of getContext ( ) for nowPlaying and footer row initialization to ensure compatibility with the current activity
updated the generation strategy from AUTO to " native " in multiple Java files to ensure that the default generator is used for generated values
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country parameter
updated the write method to include position and remaining bytes in BZip2Codec . java and modified ByteBuffer allocation in TestBZip2Codec .
[ web ] move logging to html5 . util . debug
added a new constant VALUE _ TYPE _ EMPTY in Type . java and modified the create method in Value . java to utilize this constant to
replaced ` = = ` checks with ` . equals ( ) ` for string comparison to improve readability and maintainability of the code
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class for improved readability to enhance maintainability and clarity of the code
added a method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetNode ` to improve flexibility in creating Target
fix typo in getminrowcompactedsize ( ) and getmaxrowsize ( )
added a new ` ArtifactVersionAdapter ` class and changed ` parentMod ` and ` childMods ` fields to transient in ` ModMetadata
refactor the handling of previous and current states in NativeArray to improve clarity and functionality of the array management logic
update file handling logic in FileUploader . java to use a parent file ID instead of a local path to improve clarity and ensure the current
added a new file UTF8ReaderBug . java that implements UTF - 8 parsing with supplementary characters to ensure proper parsing of UTF - 8
added unit test base on user forum issue
updated subscription stream paths from " ethbtc @ depth " to " ethbtc @ depth20 " in BinanceIntegration and Binance
added a resetAllocation method to SimpleParallelizer and invoked it in Wrapper to ensure proper memory management during parallel operations
removed unused import of AssertTree in AmbariManagementControllerTest . java to streamline code by eliminating unnecessary dependencies
replaced direct addition of system properties with synchronization to ensure thread safety when accessing system properties
refactor ModelUtils for improved readability to enhance maintainability and clarity of the code
refactor AbstractDoubleArrayAssert to improve code structure to enhance maintainability and readability of the code
adjusted width and height calculations in Legend . java to account for index bounds to ensure that labels are only added when there are no labels
added test methods for delay and abort handling in multiple classes to improve test coverage and ensure proper handling of invocation exceptions
replaced ` get ` with ` getValues ` in ` MoreLikeThis . java ` and modified the term frequency addition logic to use a loop
replaced CxxLink rule resolver with BuildTargetSourcePath in Omnibus . java to improve code clarity and maintainability by
add option to disable versioning for botania . versioning . disabled
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` to track the number of files
updated argument formatting in AidlStep . java and GenAidlTest . java from " - b " to " - b "
added integration test for issue79 and issue79 ( # 79 )
added a todo comment to the FakeHttpLayer class to clarify the purpose of the test method
[ hotfix ] [ runtime ] remove errorhandler call in embeddedleaderservice
[ hotfix ] [ runtime ] use single instead of stream in compositediscoveryclient
rename ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in configuration management
[ hotfix ] [ doc ] update jobmanageroptions description
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` in ` WidgetsFullSheet . java ` to improve clarity
( chore ) camel - aws2 - woodstox : use class . forName ( ) instead of class . forName ( )
refactor test setup methods in AuditAliasCommandIntegrationTest to use JUnit ' s setup method to improve test setup flexibility and ensure proper
removed debug logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and improve read
( chore ) camel - cxf : disable the cxf test from the parent class
added error handling for the update ( ) method in CachedStore . java to improve robustness by logging exceptions during the refresh operation
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and refactored
refactor background fill handling in HSSFCellStyle and HSSFPalette classes to improve code readability and maintainability by reducing
refactor ZonedDateTimeFormatterBenchmark to improve code readability to enhance maintainability and facilitate future updates
refactor the buffer update logic in DistributedUpdateProcessor and add unit tests in DistributedUpdateProcessorTest to improve code readability and ensure correct state
added a condition to check if the rocket ' s stage is null in SimulationListHandler . java to ensure proper handling of null motor
add / editreplace / / editscript and / editreplace / / editreplace / to / editreplace / to / editreplace / to
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
changed the declaration of the ' processor ' variable from non - final to final in AndroidInput . java to ensure that the ' processor ' variable
added a listener to trigger a failure when the end of a stream is reached in WritableKeyProcessor . java to improve error handling by notifying
added " CUBE " to the MySQLDatabase class to support CUBE database functionality in the application
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the rm operation
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods to
refactor DefaultOkHttpClientFactoryTest to use getter methods for timeout , read timeout , followRedirects , and hostname verifier to improve code readability
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 1193 fix for drag - and - drop - and - drop - drop in algebra
modified the ` jailerMain ` method to include a ` fromCli ` parameter and added a conditional check for the ` fromCli `
refactor HttpRequest class for improved readability to enhance maintainability and readability of the code
added a new preference " pull _ unread " to the shared preferences in TalonPullNotificationService . java to enable users to pull unread
fix npe in isnullnode when the object be an object stamp .
updated parameters and parameters in Box2DTest , Pong , OrthographicCamera , and OrthographicCamera classes to utilize a
added null checks for mCommentsRecyclerView and its layout manager in ViewPostDetailFragment . java to enhance robustness by preventing potential NullPointerException
change log level from trace to warn for background operation aborted log message to improve log granularity for better debugging
do n ' t add methodinstance . flags ( ) for abstract method in jimplebuilder
ggb - 1358 fix pointer up on ie10plus
updated the ` getNotificationUsers ` method to include ` deviceId ` parameter and modified user retrieval logic to include device ID to enhance notification management by
updated the baseUrl from " http : / / droppr . org / srtm / v4.1 / 6 _ 5x5
updated file chooser behavior in MotifFileChooserUI and added a new test class bug6520101 to improve user experience by ensuring
change return value of handle method to boolean in hollowdiffuirouter and hollowhistoryui
refactor ` getRuleOptional ` and ` getRuleWithType ` methods in ` BuildRuleResolver ` to improve type safety and error handling to enhance
added visibility control for transportSpinner in HostListActivity to ensure the transport spinner is visible based on the makingShortcut flag
added null check for attributes _ field in Attr . java and created new classes T7043371 . java and T7073477
modified backPressed methods to return a boolean indicating success or failure in multiple fragments to ensure consistent behavior when the back button is clicked based on media
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and DEFAULT _ LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB constants , and updated
updated string concatenation syntax in SDRTrunk . java to improve code readability and maintain consistency
updated PrivateKeyParserTests to clean the file path before adding it to the message to ensure that the file path is clean before proceeding with tests
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method and related calls to simplify the method signature by eliminating unnecessary
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest testing framework
hbase - 2594 add option to disable column family check in importtsv
[ java ] : use subscription id instead of channel for log subscription .
replaced direct calls to ` startActivity ( intent ) ` with a call to ` startActivitySafely ( intent , " onClickVoiceButton
added a condition to return early if the first two node is a " i " in the PoloniexStreamingService class to prevent processing
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) to ResourceBundle . getBundle calls in Toolkit . java and Window . java to
[ j2kt ] add normalizearraycreationskotlin to support kotlin normalization
lucene - 4892 : fix persegmentsinglevaluedfaceting to only increment term enum if there be no count
replaced ` Optional . fromNullable ` with ` Objects . firstNonNull ` for retrieving authorList in ` ModMetadata . java ` to improve
added OSGiTest class for testing Google Gson annotations and sun . misc imports to ensure correctness of the import package handling in the Gson
refactor service enabling logic into a separate method ` isDependentServiceEnableable ` to improve code readability and maintainability by encapsulating
hbase - 2698 htable . setautofflush ( false ) do n ' t work with asyncprocess
fix ( ctelement ) : fix classcastexception in ifelement # getThenstatement ( )
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and corresponding tests in ` SimpleFeatureImplTest ` and ` Property `
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` classes to simplify exception handling by removing
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging configuration by eliminating unnecessary logger setup
added a new file ` InJavaSourceSet . java ` that implements an ` JavaIsoVisitor ` for processing Java source sets to facil
updated resource path for WFPC2u5780205r _ c0fx . fits in TestGDALParser . java to
added a new method ` createGetter ( Object , String attribute ) ` to ` ReflectionHelper ` to facilitate the creation of getter
removed conditional check for external storage in the Android version check to simplify the code logic for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` , ` IndexerOutputFormat ` ,
api : do n ' t allow disk offering id or snapshot id to be pass whilst create volume
updated whitespace in ` ToHtml . java ` and modified assertion in ` BaseTestCellComment . java ` to improve code readability and ensure
added checks for ` amountToAdd ` and ` amountToSubtract ` types in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to implement tests for handling specific error types to ensure proper error handling for specific error types
replaced the method ` signum ` with a static import for ` Integer . signum ` and simplified the return statement to improve code readability and
set text visibility to GONE in AttachmentAdapter to improve user interface by disabling text visibility
fix ( import ) : fix npe in ctimportimpl # getimportkindfor ( # 1188 )
refactor code to use lambda expression for retrieving the profile to improve readability and maintainability of the code
added a new block class ` LiquidBlock ` and modified ` f _ 54688 _ ` fields in ` LiquidBlock
[ amq - 2902 ] do n ' t fail test if exception in log be miss
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to align with the
removed the ` existingObservation ` parameter from several methods in ` DistinctErrorLog . java ` to simplify the code by eliminating
updated property retrieval for TEST _ NIGHTLY , WEEKLY , WEEKLY , WaitsFix , and BadApple in LuceneTest
corrected a typo in the method name from ` createLogger ` to ` getOrCreateLogger ` and improved logger initialization logic to enhance code
[ graal ] add denyaccess ( class . class ) method and proxy in graalcontext
replaced direct calls to ` getRGB ` with ` getRaster ` and ` setDataElements ` in ` PGraphics2 . java ` to
updated HiveAbstractReader to include partition information in verifyAndAddTransactionalProperties method to ensure correct transaction property verification based on partition information
refactor scrolling logic in Workspace . java to improve overlay scroll handling to ensure proper scrolling behavior when overlays are zero
added two new classes , UnmodifiableBatchBuilderImpl and UnmodifiableBatchBuilderInitiator , to enhance batch management capabilities in the Hibernate JDBC
improve error message for analysiserror . shouldnotreachhere ( )
added a new test class ` MockWithStaticStateDemo ` and integrated it into ` PartialMockingRetainsStateTest ` to ensure that
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing for
refactor the action execution logic in SecurityUtil . java to handle null ugi and improve error handling to enhance robustness by ensuring action execution
refactor error handling in OpenALMusic . java to use a local variable for error code to improve code readability and maintainability by
camel - 14263 : camel - quartz should use resolveparameter instead of reslovestringparameter . thanks to david
refactor precision and scale handling in RexNodeConverter to improve clarity and ensure correct SQL type creation for DECIMAL expressions
replaced direct calls to getVendorProperties ( ) and getAttestationMetadata ( ) with Optional . ofNullable ( ) for better null safety
updated the assertion in WalletTestAccount003 to use ` Long . toString ( now ) ` instead of a hardcoded string to improve readability
changed the type of ` topStage ` from ` AxialStage ` to ` RocketComponent ` and updated selection logic in ` DesignPanel
added a new parameter ` long - running - time ` to the ` Args ` class and integrated it into the ` VM ` configuration to allow
fixed bug in findrefcomparison and add hashcode ( ) and equal ( ) method
updated imports and modified method signatures in HttpServerProvider , HttpsServer , ScriptEngineManager , and FtpClientProvider to use Java ' s
( chore ) camel - gml3 : use decimal . toPlainString ( ) instead of decimal . tostring ( )
reformatted assertions in TestRestClientRequestImpl . java for improved readability to enhance code clarity and maintainability
added a condition to check if the reference database is equal before verifying the existence of the comparison database to ensure correct handling of unique constraints based
refactor Android constants and asset path handling in IjProjectTemplateDataPreparer . java to improve code readability and streamline proguard
replaced assertEquals statements with await statements in DuplicateCookieTest and SessionRenewTest to improve readability and maintainability of the test code
added user _ args and timestamp fields to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance the build listener ' s
svm : fix thread safety issue with resource bundle .
updated log message from " Match limit to " Match order " in HepPlanner . java to correct the spelling of " Match "
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata from an exchange to facilit
rename ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to ` strictfp ` and add a test for strictness in `
removed unparseIdentifier from columnNamesBuilder in ColumnStatsSemanticAnalyzer . java to streamline column name handling by eliminating unnecessary unparse
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified method signatures in ` BlockStatementTemplateGenerator `
added a check for ` isSynthetic ( ) ` in ` InstantiateStaticClass ` and implemented a new test method in ` Bug1282
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path
added pending resource management and error handling in IkStepDefinition . java to improve user experience by ensuring pending rescues are properly registered and
changed visibility of equals ( ) and hashCode ( ) methods in AbstractType , BigintType , BooleanType , DateType , TimestampType ,
added a new method ` getSyncLevel ` to retrieve the ` SyncLevel ` value and modified the ` SyncLevel ` enum to use it
[ java ] use try - with - resources to avoid resource leak
added a condition to check if the slice state is not RECOVERY in RecoveryStrategy . java to ensure that only valid slice states are processed
fix checkstyle issue in opencv _ core . java
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and updated ` makeProcessExecutorParams ` to
refactor TransientBlobCleanupTask to use a BiConsumer for cleanup callbacks to improve code readability and maintainability by reducing boilerplate
server : fix typo in log message when firewall rule creation fails
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion logic for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the proxy retrieval method to use the class loader to ensure the proxy is retrieved from the correct class loader
refactor nightly version handling to use a dedicated method for better readability to improve code maintainability and clarity by centralizing version
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing and duplicated lines in SQL statements
add a system property findbugs . nullderef . assumensp to disable findbugs . nullderef . assumensp
fix jolokia test to use port 12345 instead of 8080
update bLOB size , pLAY _ MARGIN , slider length , and slider length in DrawAudio . java to improve text rendering accuracy
added a method to add a multifactor authentication provider bypass to the DuoSecurityMultifactorProviderBypass configuration to enhance security
reformatted method signatures in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ drools - 5892 ] fix javadoc warning in drools - kmodule
added methods to set and get the help page in the PMS class and refactored the HelpTab class to utilize it to improve
added GeocodeProviderFactory and Constants interface files to facilitate the creation of GeocodeProviderFactory and Constants classes in the application
updated the import statement for CharArraySet from util to analysis in LuceneAnalyzerUtil and LuceneTokenizer to ensure compatibility with the latest L
refactored exception handling in tests for improved clarity and consistency to enhance code readability and maintainability by reducing redundancy
[ py4j ] do n ' t delete the memory object if it do n ' t exist
refactor condition checks in SegmentsInfoRequestHandler and add new document fields in CollectionsAPISolrJTest to improve code clarity and ensure correct
updated the logic for determining the number of predicted app columns based on the device type to improve accuracy in determining the number of app columns based on
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored related logic in ` DrillJoinRelBase
fix build craft crash when there be too many item in the world .
updated gravity and height adjustments in DeviceProfile . java for better layout management to improve layout consistency and ensure proper layout parameters for drag target bar
[ hotfix ] [ yahoo ] fix typo in yahoosession # start ( )
updated HiveMetaStore and HiveMetaStoreClient to check for null client before shutting down the local metastore client to improve error handling and
updated display script retrieval to use Category . DISPLAY in Locale . java and added tests for Locale . getDefault ( ) in LocaleCategory . java to
removed static imports for BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica . java to streamline code by eliminating
replaced ThreadLocalRandom with a Random instance in StoreDirectTest . java to improve randomness and reduce dependency on ThreadLocalRandom
refactor LauncherBackupHelper to check if the launcher is ready before backuping files to improve error handling and ensure backup only occurs when the
updated error messages in Cell . java for better clarity to improve readability of exception messages for better debugging
added unit test base on user forum issue
renamed ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
quality : avoid writing in source path from testcase
added multiple logger configurations in Grasscutter . java to disable unnecessary logging during development
changed the visibility of ` highlightCnstScrRngQuery ` and related methods from instance to static to allow for more flexible control
updated condition to check workspace state before exiting overview mode and added a method to retrieve the state in the Workspace class to ensure proper handling of workspace
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
added a conditional check for ` args . cacheable ` before notifying a new template in ` SnippetTemplate . java ` to ensure that the
updated SCOPE _ ENTITY , SCOPE _ DOC , and SCOPE _ SOLR _ CORE constants , and modified related classes to support session management
added a primary key column to the CREATE TABLE table in DatabaseMetaDataTest . java to ensure that the database metadata reflects the correct primary key
rename authentication config file cli command ( # 865 )
refactor conditional checks for session creation and security context holder in HttpSessionContextIntegrationFilter . java to improve readability and maintainability of the code
added a new file TestIfWithDeadRegion . java with a method to test string manipulation with a supplier to demonstrate the use
corrected spelling of " usd " to " usd " in DependencyParserITest . java and DependencyParser . java to ensure
replaced ` testConcurrentAccess ( ) ` with ` testConcurrentAccess ( ) ` in ` SnowflakeIdGeneratorTest . java ` to
added a staticUi flag and conditional logic in MainFragment to control the visibility of the toast bar based on user preferences to enhance user experience by
refactor the ` drop ` method in ` WindowsSecurity ` to use a lambda expression and ensure ` LocalFree ( pLuid ) `
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler . java ` and added null checks in ` Whitelist
updated JOptionPane calls to use Messages . getString ( ) instead of string literals to improve code readability and maintainability by using a consistent
tika - 1188 -- add test mime type for poi . xlsx file
updated logging statements and improved type safety in multiple classes to enhance logging clarity and maintainability by using a more descriptive variable name and
( chore ) camel - eip : fix xml output with empty line .
add a synchronization method to remove the version information for a specific endpoint in MigrationCoordinator to ensure that all versions are removed when the endpoint is removed
added debug logging for stored audio notifications and playback devices in DeviceConfiguration and PortAudioAuto classes to improve traceability of audio notification and playback device
added ` WebsocketConfig ` and a ` maxFramePayloadSize ` property with getter and setter methods in ` ShenyuConfig `
added TestNG support and improved cache validation handling in CacheValidationListener to enhance testing capabilities and ensure proper cleanup of test listeners
added a check for non - empty content length before adding it to the document to ensure that contentLength is only added if it is not empty to
refactor code to introduce solvingTerminated method to improve readability and maintainability of the code
added handling for PathAlreadyExistException in the createTimeseries method to improve robustness by logging warnings when inserting non - existent time series
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide functionality for checking authentication results
changed access modifiers of several methods from public to protected in ShadowActivityManager , ShadowMeasuredParagraph , and ShadowStaticLayout classes to restrict access
cloudstack - 4892 : add vmware state check for reserved network ( # 4892 )
updated HttpParser to initialize _ valueString to an empty string instead of an empty string to simplify the code and improve readability by eliminating
refactored thread initialization logic in J9VMInternals . java and removed redundant method in Thread . java to improve code readability and
added a new method ` getExternalStoragePublicDirectory ` to ` ShadowEnvironment ` and created corresponding tests in ` EnvironmentTest ` to enable testing of
[ jbrules - 4892 ] add test case for mvel type coercion
removed unnecessary imports and improved formatting in LoggingConfig and DbgPacker classes to enhance code readability and maintainability
added exception message to the log statement in ActionNode . java to improve error reporting for better debugging
added a check to extract the tel format from the toNumber string if it starts with " tel : " to ensure proper parsing of the tel
reformatted the visibility logic for shared file icon in FileListListAdapter . java to improve code readability and maintainability
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java to
refactor ` ExecuteStatementOperation ` , ` Operation ` , and ` SQLOperation ` classes to accept a ` Map < String ,
replaced usage of Google Commons Lists with Java ' s ArrayList and Arrays in BTCMarketsStreamingService and BTCMarketsStreaming
updated method calls from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java ` to ensure consistency in
removed the onErrorInStep method from StepListenerSupport . java to streamline error handling by eliminating unnecessary methods
refactor Wallet class to improve readability to enhance maintainability and facilitate future updates
camel - 16462 : camel - netty - http should use port and port in http header . fix camel - netty - http
replaced ` System . out . println ` with ` log . info ` for logging statements in ` TestNonBlockingAPI . java ` to
added a check to prevent index out of bounds when accessing the database connection list
added a new class MethodWithSameNameAsEnclosingClass to demonstrate the use of method declarations with the same name as the enclosing
added a new class ` ExtendedPlatformComponent ` and modified ` ManagementFactory ` to utilize it for managing managed objects to improve management management by
replaced single quotes with single quotes in SQL query strings to ensure consistent SQL syntax across different operating systems
updated resource paths in multiple test files to include the " org / knowm / xchange / bleutrade / dto / " prefix to
refactor TextEscapeUtils for improved readability to enhance maintainability and clarity of the code
added a filter parameter to the FunctionQuery instantiation in AbstractSpatialFieldType . java to allow dynamic query filtering based on local parameters
removed progress display logic for auto email sending in GpsLoggingService and added post method in AutoEmailHelper to streamline email sending process and
replace ArrayList with HashSet for inlinks and refactor iterator usage in LinkDb , LinkDbReader , and LinkDbReader classes to improve performance and
added synchronization to the stopScan method in TradfriDiscoveryService to ensure thread safety when removing older results
modified the ` testFilterForPartition ` method to accept a boolean parameter for server - side filtering to ensure that partition retrieval does not fail with
added " Abandoned " status to the list of status lists in TicketModel and updated the workflow to include it to enhance user experience by providing
removed redundant assignment of columnAliasPrefix in multiple platform classes to streamline code by eliminating unnecessary null assignments
updated LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer to use BytesWritable instead of Text to improve data handling and
add a warning for non - native jvm on a 64 - bit system .
refactor conditional checks for key equality in PdfCopy . java to improve readability and maintainability of the code
added a new option ` DAEMON ` to the ` RESET _ ALARM ` and implemented a daemon mode in ` TerminalClient `
added a new file ` FlushIndexTask . java ` that implements a performance task for flushing the index writer to facilitate the flushing
fix sstablestore . getflushpath ( ) to account for the estimated size of the data file
added support for SEASONS output in MediaLibraryFolder . java to ensure compatibility with SEASONS output format
added a new file LocalSocketAddress . java to check the availability of IPv6 loopback addresses to ensure that the Bound address is correctly configured for IPv
updated grid size points in GridSizeMigrationTask . java for consistency to improve code readability and maintainability
updated references from ` getName ( ) ` to ` getName ( ) ` in ` SerializerPojo . java ` to improve consistency and clarity
added READ _ ONLY flag and improved transaction handling in the Context class to enhance security by preventing operations on non - read - only contexts
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation of ` lastRunEnd ` from ` floor ` to ` ceiling ` in ` BlockBoxing . java ` to ensure
added imports for EOFException and EofException and updated assertions in GracefulStopTest . java to enhance exception handling by allowing EOFException to be
refactor NetJavaImpl to use synchronized methods for retrieving and removing HTTP response listeners to improve thread safety and maintainability of the code
refactor network parameters for improved clarity to enhance maintainability and readability of the codebase
updated account asset optimization logic in DynamicPropertiesStore . java to ensure proper handling of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to define garbage collection policy for improved performance
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to improve robustness by throwing a P2pException for invalid protocols
deleted the ExceptionTypeChecking . java file to remove unused code that is no longer needed
updated resource path in HelpContent . java to use " en / " prefix and improved logging messages to enhance localization support and provide clearer
added a new file ` ProcessorInfo . java ` that implements processor information reading and masking based on CPU status to provide a mechanism for managing
added support for a stylesheet option in PrintingBugReporter to enable customization of HTML output based on specified options
[ logback ] make logback _ location a final and deprecate
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to improve clarity and consistency to enhance code readability and maintainability by using
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to improve handler creation logic and enhance test coverage for tag
refactor dependency type handling in RustCompileUtils to use a switch statement to improve code readability and maintainability by using a switch statement
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling logic to
hbase - 2590 seek to first kv in halfstorefileloader ( # 2596 )
hhh - 14827 - add miss generationtimings . isalways ( ) to the generated class .
add a parameterized test for the layer norm function in the layeropvalidation class
refactor showShareFile calls to use getFileOperationsHelper ( ) method across multiple activities to improve code organization and maintainability by centralizing file
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of LiquibaseUpdate with relative
convert the proxyType value to uppercase to ensure consistent formatting of the proxyType value
add mod _ minecraftforge . getdungeonlootTries ( ) for major , minor , revision , and build version
refactor JdbcDatabaseSnapshot to improve cache handling for table and column names to enhance flexibility in caching results based on database configuration
added a Container with a custom border and a label in CSSBorderTest . java to enhance the visual appearance of the CSS by providing a
added a new ` RetryInterceptorAutoConfiguration ` class and modified ` RetryLoadBalancerInterceptor ` and ` RetryLoadBalancerInterceptor ` to utilize it to
changed the layout dimensions from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to improve layout accuracy for better rendering
updated the construction of the parentTaskName variable to use currentTimeMillis ( ) instead of nanoTime ( ) to ensure the parentTaskName reflects the
added error handling for parsing input in ServiceResourceProvider to improve robustness by catching UncheckedIOException and providing clearer error messages
refactor conditional logic in IndexDatabase . java for improved readability to enhance clarity and maintainability of the code
[ giac ] make sure x [ 0 , 1 ] be not negative in case x [ 1 , 2 ]
refactor AnonCipherWithWantClientAuth class for improved clarity to enhance maintainability and readability of the code
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these methods are outdated and should no longer be used
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flakiness of evictstest # testevictedentrycount ( )
refactor Md5PasswordEncoder to replace ` encodeInternal ` with ` encodePassword ` for clarity to improve code readability and maintain
replaced instances of ` ViewTreeObserver ` with direct calls to ` getViewTreeObserver ( ) ` in ` IconRecentsView . java
refactor Response class to improve code structure to enhance maintainability and readability of the code
corrected the spelling of ` Long . MIN _ VALUE ` to ` Long . MAX _ VALUE ` in ` SSTableMetadata .
increase the preferred size of the callparticipant panel to make it easy to use .
added null and empty checks for reply strings in multiple adapter classes to enhance robustness by preventing potential NullPointerExceptions when compressReplies is disabled
updated the ` HitbtcBalance ` class to use ` Objects . equals ` and ` hashCode ` methods instead of ` ToStringBuilder `
refactor column name handling and update sorting logic in SqlCodeGenerator and SqlParserTest to improve code clarity and ensure correct ordering of metadata
updated return statement to use ` addrs . toString ( ) ` instead of ` s ` in ` RetriesExhaustedWithDetailsException `
simplified cookie handling in EditGcodeFile . java by using OpenCookie . class directly to improve code readability and maintainability by
updated HTTP client imports from ` BasicHttpClientConnectionManager ` to ` HttpClientConnectionManager ` in ` JsonToGrpcApplicationTests . java `
updated energy calculations in PipePowerWood . java to use calculated energy instead of a fixed value to improve accuracy of energy management in battery
added a check to delete the temporary output file if it exists to ensure that the temporary output file is deleted when it exists
added " id " field to the BitstampWebSocketTransaction constructor and updated test cases for trades and ticker retrieval to enhance the transaction ' s
added expiration checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure that
updated the formatting of the expectedCitation string in CitationStyleGeneratorTest . java to improve code readability and maintain consistency
added new SQL insert statements for video HDR format in MediaTableFiles . java to enhance data retrieval capabilities by allowing dynamic video formatting
show only definition for exam in exam ( fixes # 399 )
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions when the component is null
hbase - 25946 add caching option to metareader to optimize scan performance
updated the init script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes for improved performance to enhance performance and maintainability of mathematical operations
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable transient taskbar functionality in the application
refactor AccessExecution , ArchivedExecution , and ArchivedExecution classes to improve code organization and maintainability
added a conditional check for scale in IOSGraphics to set the density to 3f when scaling is 3
rename variable ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
[ hotfix ] [ log ] add exception to log message
refactor assertion in TestClusterUpgradeUtils to use lambda expression for clarity to improve readability and maintainability of the code
updated logging messages in AsyncHttpConnection and modified async context handling in AsyncContextTest to improve clarity of warning messages and enhance async context management
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` class to enable the visibility of the arrow in the search functionality
updated lock mode handling in Database . java and removed the test case in TestRowLocks . java to ensure proper locking behavior for MV store
skip amd64 only test on linux / amd64
added type checks for Integer , IntValue , and StringValue in Scalars . java to ensure proper conversion of input values to String and IntValue
update error message for empty or multiple primary key aliases in CreateTableStatement . java to improve clarity of error handling for missing or multiple primary
added conditional checks for LMP in CellLayout , Hotseat , and Launcher classes to set drawable resources for widget , widget ,
fix npe in vmservicemanager . getflutterisolate ( ) .
added new header writer methods for content type options , xssProtection , cache control , and frame options in HeadersConfigurer . java to enhance
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and clarity of the code
simonstewart : move the smoke test class to the router package
added a type attribute to the AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type of the aggregate root for better
added support for resolving prebuilt rules in Python binary components to enhance the handling of prebuilt libraries in the build process
added support for the " clientAuth " option in NetServerOptionsConverter and updated HttpServerOptions to use this new value to enhance flexibility in
updated references from " / user / hive / " to " / user / $ { system } " in HiveConf and MetastoreConf
refactor task view retrieval logic in RecentsView . java to improve clarity and functionality to enhance code readability and maintainability by
( chore ) camel - amqp : add timeout to test
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
renamed ` controller ` to ` flowController ` in multiple classes to improve clarity and consistency in variable naming
[ flink - 20663 ] [ runtime ] fix the bug in the pipelinebuilder . consumeallchildrenpipelinebreaker .
added import statement for ClassLoaderHandler in module - info . java to facilitate the use of ClassLoaderHandler in the class graph
refactor solve method in SolutionBusiness and SolverAndPersistenceFrame to improve clarity and functionality to enhance code readability and maintainability by
added JsonIgnore annotation to ApplicationSettings . java to ignore serialization of application settings
updated conditional check from ` throwable = = null ` to ` throwable ! = null ` to ensure that ` throwable ` is not null to prevent
refactor query info retrieval to use a local variable for clarity to improve code readability and maintainability
fix auto workbench crash when there be no stack in the crafting slot
fix gl200 text decoder ( fix # 489 )
renamed variables ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and updated related logic to improve clarity and
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
added initializable support to container in mmm ContainerBuilder . java and created a new Initializable interface in mmm ContainerImpl . java to enable
update timerObservationhandler to use longtasktimer . sample instead of timer . start ( ) .
changed the data type of SYNC _ DELTA _ RATE from float to double and adjusted the calculation of refTime and interval to
add warn log for deprecate unwrapped fragment expression in thymeleaf
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when accessing the attributes map
http : / / issues . apache . org / jira / browse / amq - 4896 - fix for amq - 4
added new color constants for main and secondary colors in ColorExtractionAlgorithm . java and updated extractInto method to return applyFallback to enhance color extraction
added check for accessibility of data folder before adding it to srcFolderPathList to ensure srcFolderPathList contains the full path of the data folder
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified related logic in the ` NotesHelper ` class to enhance
removed initialization of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to streamline session management by eliminating unnecessary instantiation
added logging for reconnection completion and error messages in NettyStreamingService . java to improve error handling and provide clearer insights during connection
replaced the use of CglibProxyFactory with JavassistProxyFactory in multiple files to ensure compatibility with the internal Jav
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance by using a more efficient
updated exception handling to include the host and host address in the exception message to improve clarity of exception messages and ensure the destination address is valid
added a check for the existence of the view directory in the repository to ensure that the view directory is under the specified repository directory before proceeding
remove unused code in jabrefframe . openfiles ( )
added multiple test files with various options " - XX : + UseCompressedOops " and " - XX : + UseCompressedO
added a condition to check if the update log is in ACTIVE or REPLAYING state to ensure that the update log is only logged when
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
removed unused ` waitForReplicasInSync ` variable and its usage across multiple test classes to streamline test configuration and improve code clarity
( chore ) camel - rest - dsl : fix typo in parameterassert
updated ApexLanguageModule to use the current version of the ApexHandler and added a guarded access method in TestAccessEvaluator to ensure
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread pool management to improve thread management and ensure consistent thread management across different threads
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management by leveraging the HTTP connector
added scrollToPositionWithOffset functionality to the thumbnail index in UploadActivity . java to improve user interface responsiveness by adjusting the thumbnail
fix ( sql ) : fix sampleby on timestamp override by other column alias
refactor animation handling in LauncherAnimUtils and add transition step animation in LauncherStateTransitionAnimation to improve animation responsiveness and maintain
added a condition to disable the default user agent if the HttpClient configuration is not set to improve flexibility in user agent management by allowing users to
added a conditional check for pubsub hubbub in FeedRefreshUpdater and updated ApplicationSettings to conditionally handle thePubSub to ensure that only pubsub
changed the access modifier of the finalize method from public to protected to allow subclass access to the finalize method
updated the method signature of ` isAnonymousOrLocalClass ` to include ` ACC _ SYNTHETIC ` in ` StubJarClass
[ ds - 489 ] add web app to make it easy to use the rest web application
added null check for ` leftTableAlias ` in ` CalcitePlanner ` and implemented ` getTableAliasContainingColumn ` in ` RowResolver `
updated the triggerKey method to include a space before the key name to improve clarity of the key being passed to the trigger key
replaced instances of ` TransactionCapsule ` with ` TransactionInfo ` and updated logging messages to include transaction ID to improve logging clarity and
fix flaky test by increase timeout
updated the formatting of the ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` variables in ` HiveClientConfig . java `
added a new enum TlsClientCertPolicy and updated related methods to use it to improve flexibility in handling client certificate configurations based on user
removed a conditional check for " Failed to subscribe to a authenticated feed " and replaced a thread - based message sending with a debug log message to
added support for the Sec - WebSocket - Protocol header in the WebsocketRoutingFilter class to enhance WebSocket handling by allowing dynamic sub - protocols based
added debug logging for ` fetchReq ` in ` HiveQueryResultSet . java ` to facilitate debugging by providing visibility into the fetch
updated formatting of dimensions and label in HolidayEventFormatter . java to improve code readability and maintain consistency in formatting
modified the ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFields ` classes to handle inner class fields more effectively to improve clarity and functionality
refactor UnexpectedJobExecutionException class to improve error handling to enhance reliability of job execution failures
deleted the file ` AquaLookAndFeel . java ` and updated ` buttonShouldBeOpaque ` logic in ` Aqu
replaced maxFreq with maxCost in DrillSidewaysQuery . java and updated related logic in DrillSidewaysScorer . java
added a new classRegsitry mapping for GeoDegeneratePath in StandardObjects . java to enable the use of GeoDegeneratePath
removed the ` preFill ` parameter from multiple constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool
added state update logic in TaskbarLauncherStateController and updated TaskbarStashController flags in TaskbarStashController to ensure taskbar
added null check for default styles before comparing them to prevent potential NullPointerExceptions during style removal
improve the uiutil . setsize ( ) and setmaxwidth ( ) method to make it easy to set the size of the
refactor icon selection logic in FileTreeViewHolder . java to improve clarity and maintainability to enhance code readability and maintainability by
updated assertions from ` isEqualTo ` to ` contains ` in ` ParallelUniverseTest . java ` to improve clarity and consistency in the
added synchronization to the iteration of suiteResults to ensure thread safety when accessing the results map
add unit test for nativeworker
added shutdownThread . deregister ( this ) in ClientContainer . java to ensure proper resource management and prevent memory leaks
hhh - 14827 - sybasease15dialect should not drop temporary table after use
simonstewart : update the htmlunit test to use htmlunit instead of htmlunit
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated the hex string format in VirtualAllocCommitUncommitRecommit . java to include " reserved 1024KB for Test " to enhance clarity
refresh ad playback state when there be no ad group
refactor equality check in MultimapSubject to use a boolean variable for better readability to enhance code clarity and maintainability by reducing
updated the frequency property from deg _ text to unit _ hz in WaveGeneratorActivity . java to ensure accurate representation of the wave ' s
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the initialization of the TreeMap with a direct instantiation of includedLabelSets to simplify the code and improve readability
replaced direct instantiation of ` VertexFormatElement ` with a static final instance variable ` NORMAL _ 4F ` to improve code readability and
added tracing functionality to message messages in multiple classes to ensure messages are displayed only when tracing is enabled
refactor timezone handling in ScheduledTrigger . java and update test case in ScheduledTriggerTest . java to improve code clarity and maintainability by
added new classes AsyncBucket , InMemoryExtension , and InMemoryExtension , and modified the return statement in Bucket , ConfigurationBuilder , and In
updated the argument validation logic in resexhausted003 . java to ensure the class directory is found and improved error messages for clarity
reformatted code for consistency and clarity in AbstractConnector . java to improve code readability and maintainability
refactor OngoingStubbing class to improve code readability to enhance maintainability and facilitate future updates
added a new parameter ` webServerToReuse ` and modified the ` getValidWebServerPort ` method to accept an ` Optional < WebServer
renamed the variable ` productConstructor ` to ` constructor ` for clarity and consistency to improve code readability and maintainability by using a
added a check for non - empty allowlist before clearing it in ParametersInterceptor . java to ensure that the thread allowlist is properly cleared and
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity and consistency in
[ drools - 4892 ] do n ' t try to find overlap when hit policy be COLLECT
added a new test method ` testSlidingWindowsCombine ` to the ` CombineTest ` class to validate the functionality of the ` Combine `
added a check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` and modified variable declarations in ` Launch
removed the retrieval and assertion for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary
reformatted code in the Solution class for improved readability to enhance maintainability and clarity of the code
refactor AquaMenuBarUI . java to streamline property retrieval and enhance security checks to improve code readability and maintainability by
glowplayer . setsetrawlocation ( location , boolean ) do n ' t take us to spawn position
refactor query handling in SimpleJpaRepository to improve criteria query construction to enhance code clarity and maintainability by using a more descriptive
added timestamp , parenthash , nonce , and number properties to BlockUtil . java to enhance the configuration of genesis block parameters for improved functionality
move safepointinsertionphase from loopsafepointinsertionphase to safepointinsertionphase .
hbase - 25836 fix npe in rsgroupinfomanagerimpl # listchildrenandwatchfornewchildren ( ) ( #
changed class visibility from package - private to public for several methods in ArtifactResolver . java to allow access to these methods from other packages
added resource cleanup and error handling for reactor thread interruptions in multiple classes to ensure proper resource management and prevent memory leaks
added a validation check for maxBufferedDocs in IndexWriter . java to ensure that maxBufferedDocs is less than one to prevent runtime errors
added functionality to manage the login state in the LoginActivity to ensure proper handling of the login process during state changes
added null checks for values in Pump . java and created a new test for reverse order in PumpTest . java to ensure robustness
updated access modifiers of several methods and variables in HttpShardHandlerFactory , LBHttpSolrServer , and LBHttpSolrServer classes to
updated order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit tests for DefaultAuthenticationServiceSelectionStrategy
added server and handler setup in TestJNDI . java to enable handling of server and handler configurations in the Jetty server
refactor code for improved readability and consistency in SortedDynPartitionOptimizer . java to enhance code clarity and ensure proper validation of column
change return value from NIOEventLoop to true in FileStreamChannel . java to ensure proper handling of event loop states
updated the calculation of oldNumNulls and newNumNulls in StatsUtils . java to ensure that newNumNulls does not exceed newNumRows
camel - 17863 : camel - yaml - dsl - camel - export - do not generate kamelets when camel - endpointdsl be
replaced ` OkHttpOAuthConsumer ` with ` OpenStreetMap ` and added authorization handling in ` OSMJob . java ` to improve
remove system . out . println ( ) from jdk / test / javac / basicptxtest . java
added support for client authentication in IoTDBRestServiceConfig and updated related classes to allow configuration of client authentication based on authentication settings
refactor injection logic in PropertyAndSetterInjection and add new test cases in ChildWithSameParentFieldInjectionTest to improve clarity and ensure
refactor bloomuriuniqfilter to make it easy to set expectedinserts and hashcount
updated getCursorAdapter parameter from false to true in HomeFragment . java and added refresh preference in TweetPager . java to enable the refresh
updated the scroll bar ' s intermediate header height ratio from 1f to 75f to improve the responsiveness of the scroller by
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple files and added a new ` RecompilationEvent ` class to
added support for host - sys - prepped packages in the execution command and configuration to enhance configuration flexibility for host management
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog ` and created a corresponding test
added a loop to delete the first character from the location if it starts with a slash to ensure the location starts with a single slash to prevent
added properties for entities , urns , and scores in the StaticPipeline class to enhance entity and score processing capabilities in the application
updated filename handling and added configuration checks in Frame . java , Utils . java , WhoopsModule . java , and WhoopsModule
[ geos - 8470 ] catalogrepository should return null for non - qualified name
refactor assertions in Assert . java for improved readability to enhance maintainability and clarity of the code
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and ` MultiLineJaggedTextTests ` , and
( chore ) camel - http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
removed redundant initialization of measurementScheams in TsFileWriteAlignedWithTSRecord and TsFileWriteWithTablet classes to streamline code
updated memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve accuracy of memory usage calculations
updated log file path from " slf4j - log4j12 - . * " to " slf4j - reload4
added a wait assertion for the status information in HueBridgeHandlerOSGiTest to ensure that the status information is properly validated before proceed
refactor package structure and import statements for CrashHandlerActivity , PreferencesActivity , CrashHandlerActivity , TerminalActivity , and EditorHandlerActivity
added @ Ignore annotation to the KieContainerSolverFactoryTest class to temporarily disable tests related to DROOLS - 1276
added a constructor to PullRequestMergedEventsStream that reads the Pinot schema from a specified schema file to enable dynamic configuration of the Pinot schema
refactor AbstractExpressionPart class for improved readability to enhance maintainability and clarity of the code
[ hotfix ] [ javadoc ] fix typo in taskslot
replaced references to ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Netty
added error handling for lock management in MoveTask . java to improve robustness by logging exceptions when unlocking locks
refactor resource loading to use ResourceBundle for GEM _ PATH and RUBY _ VERSION to improve code readability and maintainability by using
replaced the constant ` ZERO _ ADDRESS ` with ` ByteUtil . EMPTY _ BYTE _ ARRAY ` in the ` Transaction ` class to
refactor variable declaration for clarity in ClassGraphClassLoader . java to improve code readability and maintainability
added setup and teardown methods for blob storage directory handling in JobManagerStartupTest . java to ensure that the blob storage directory is properly managed and
chore ( deps ) : upgrade gapic - generator - java to 2.1 . 0 and update gax - java to 2.16
added a new Bundle instance and set its extras in FileDisplayActivity to enhance the functionality of the FileDisplayActivity by providing additional extras
replace ' break ' with ' continue ' in ParticleEmitter . java to improve code readability and maintainability
updated cluster name expectations from 4 to 1 in AmbariManagementControllerImplTest . java and modified cluster name expectations in AmbariManagement
removed nullable parameter from the @ Column annotation in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry .
updated Bug4823811 . java file to improve code structure and maintainability
added a pathRelativizer function to apply the patternToDelete to enhance path management by using the project filesystem ' s pathRelativ
updated requestFullState method to accept a boolean parameter indicating if the request is an initial request to allow for better control over the full state request
refactor ShibbolethCompatiblePersistentIdGenerator to include an attribute property and update related methods to enhance flexibility in managing persistent ID attributes
corrected the formatting of the @ Inject annotation in RequestValidationService . java to improve code readability and maintainability
refactor keyboard logging to use a Bundle for message data to improve code readability and maintainability by encapsulating message data handling
removed unnecessary whitespace in FileNodeProcessor . java and updated MManager initialization in MTreeTest . java to improve code readability and ensure proper
refactor NavigableMap and NavigableSet classes for improved clarity to enhance maintainability and readability of the code
add unit test for slurp file in ioutilstest .
added @ FunctionalInterface annotation and @ FunctionalInterface annotation to multiple classes to improve code clarity and indicate that these classes are intended to
refactor span retrieval logic in TraceWebFluxTests to use a new method ` spanWithName ` to improve code readability and maintainability
added support for date type conversion in Hive schema to enhance support for date types in Hive schema processing
updated string splitting method to use Patterns . COMMA _ SEPARATOR to ensure consistent character handling across different operating systems
ggb - 2338 stringparser : add validation for start / end value
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability of the code
refactor assertions and updateMaxScores logic in WANDScorer . java for better readability and efficiency to enhance code clarity and ensure
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT - related classes to improve code clarity and maintainability by
updated the default value of curPixVal in XRSolidSrcPict . java and added a new test class WhiteTextColorTest . java
refactor biome dictionary to use a collection instead of a list to improve flexibility and maintainability of the code
updated variable names from ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability by using more d
added test stability annotations for LOCAL and PLATFORM _ POSTSUBMIT in TaplTestsLauncher3 . java to enhance test st
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure that logFileSuffix is not empty before proceeding to avoid potential issues with empty log file suffixes
refactor PythonBuckConfig class to improve configuration handling to enhance maintainability and readability of the code
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryNames ` methods in ` ShadowPackageManagerTest ` to
improve meiligao protocol decoder ( fix # 119 )
added null check for the tile object before calculating power calculations to avoid potential NullPointerException when tile is null
updated cache handling in PrefFragment and added a new TrimCache class to improve cache management and provide user feedback during pre / post execution
updated import statements from ` com . google . api . util ` to ` com . google . common . collect ` in multiple Java files to
replaced return statements with exceptions in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and BasicAuthBatchIntegrationTest to improve error handling
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and modified method signatures accordingly to enhance functionality by allowing the `
replaced ` refreshListOfFilesFragment ( false ) ` with ` getListOfFilesFragment ( ) . onItemClicked ( ) ` to
added a conditional check for multiple stream files and improved error handling in StreamUtil . java to ensure only one stream is processed and provide clear
refactor ` SessionHiveMetaStoreClient ` and ` HiveMetaStoreClient ` to use ` CreateTableRequest ` instead of ` Environment
added a ` aborted ` flag and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to ensure
added checks for indent values in multiple parser classes to ensure proper parsing behavior when indentation is less than 4 characters
add changewifistatusevent and networkwifistatusreceiver and networkwifistatusreceiver in the postfragment
simplified the conditional check for control frames in FrameGenerator . java to improve code readability and maintainability
added visibility control for the collapse handle in WidgetsBottomSheet to enhance user interface by disabling the collapse handle feature
added two new files , Issue475 . java and XSS . java , for testing HTML and JavaScript escaping in the Jooby
added a check to return early if the units to scroll is zero to avoid unnecessary processing when the scroll position is zero
updated condition from " > " to " ! = 1 " in the contract list check to ensure correct behavior when there are only one contract in
added methods ` add ` and ` put ` to ` JsonArray ` , ` JsonObject ` , and corresponding tests in ` JsonArrayTest ` and `
added hashCode ( ) method to IPPPrintService and created TestRaceCond class for comparison to ensure consistent hash code generation for PrintService
db2dialect : use getversion ( ) instead of getiversion ( ) and getzversion ( )
added a check for the platform fee before verifying if the connection is enabled to ensure that the connection is only enabled when the platform fee is
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
queue clear data first subsample by adaptivereconfigurationbytes if buffer encrypt or supplementaldata be false
removed ' public ' access modifier from multiple Antn classes and methods to simplify access modifiers for better encapsulation
added Retrofit import in Part and PartMap classes to enable Retrofit functionality in the Part and PartMap classes
refactor JSON handling in JsonBuildHelper and ParamsBuildHelper for improved clarity and functionality to enhance code readability and maintainability while
added ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` and ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the list of
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the second parameter from the createRenderScript method call to simplify the script creation process
fixed typo in javadoc of pmd . java
move system - bundle check into pluginmanageractivator . issystembundle ( )
updated import statements and formatting in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
change the bloom filter value from 0.001 to 0.00001 in KeyChainGroupTest . java to improve test reliability
refactor configuration handling in Overview . java for improved clarity and functionality to enhance code readability and maintainability by using a more
added a final variable ` agentAttache ` to the ` findAttache ` method to improve code readability and maintainability by reducing
added null check before processing data in DefaultRecordStore . java to avoid potential NullPointerException when accessing values
cloudstack 3.0 . x : improve error message when host discovery fail
updated string concatenation for NO _ NAME and NO _ VALUE in ParamAction . java to improve readability and maintainability of the error message
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a mock object instead of InvocationContainerImpl
added a static method ` stripMethodParams ` to strip method parameters in ` getMethodLine ` to improve method parameter handling by removing unnecessary parameters from
updated version name and code in GreatVoyage - v4.2 . 1 - 62 - gaff237ef7
replace list with set for allowedCommands in OutputFilter . java to improve performance and reduce memory usage
change symbolmblayer to use labelcacheitem . name ( ) instead of hardcoded string
ggb - 2338 fix for ggb - 2338 popups not resize when overlap feature be set
updated error messages in ValidationSuite . java for clarity and consistency to improve readability and maintainability of the code
refactor the initialization of StartingWindowListener to use a dedicated setter method to improve code clarity and maintainability by encapsulating the transition manager
added doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code clarity and maintainability
updated exception messages in CheckPackageAccess . java to include PackageAccess and PackageDefinition checks to improve clarity and specificity of exception handling for
increased the await termination duration from 30 seconds to 90 seconds and added an assertion in ThreadSafetyTest . java to ensure the test
changed the loggingEnabled variable type from boolean to Boolean and added a null check before setting it to ensure loggingEnabled is only set when it is
added @ JsonIgnore ( true ) annotations to the Schema class to ensure that these fields are ignored during JSON serialization
increased the timeout duration for the test from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for
refactor train method names and calculations in SimpleNaiveBayesClassifier . java for consistency and clarity to improve code readability and
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to improve clarity and functionality of the CheckHelper functionality
refactor Prototype class to improve code organization to enhance maintainability and readability of the codebase
added a check for null tableIsTransactional and assigned it if it is null to ensure tableIsTransactional is set to a default value
[ java ] use onblock instead of writefragment in recordingwriter .
update ceasubtitle to return empty list instead of 0
[ hotfix ] [ test ] add getalias ( ) method to datastoremetricqueryimpl
updated CurrencyPair instances from " DOGE " and " LTC " to " USD " in VaultOfSatoshiBaseService .
fix memory leak in unit test
updated KafkaSender import from kafka11 to kafka in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to align with the latest Kafka
added new files GwtBinaryIntegrationTest . java and A . java , along with a test class GwtBinaryIntegrationTest . java to
updated button visibility logic in BrowserContentPane and improved exception handling in SQLConsole to enhance user experience by preventing unintended mouse events
reformatted code for better readability in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to improve code clarity and
refactor XMLSecurityPropertyManager initialization in DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to improve code readability and maintainability
added a new file ` InlineDefaultMethod . java ` containing interfaces with default methods and classes to demonstrate the use of default methods
updated SQL query strings in SqliteFieldPredicateView to replace " LIKE " with " GLOB " for better handling of special characters to enhance
( chore ) camel - dmn : align visibility of the getDMNProfiles method with the one declare in the class
fixed - rscript . script _ load command do n ' t call redissonscript . redissonscript . redissonscript method .
replaced multiple instances of ` Unsafe . ARRAY _ BYTE _ BASE _ OFFSET ` with ` Unsafe . ARRAY _ BYTE _ BASE _ OFFSET
updated logging statements in ProjectGenerator , SchemeGenerator , XCodeProjectCommandHelper , and XCodeProjectCommandHelper to use % d instead of
[ fml ] fix memory leak in fmloutboundhandler
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and updated thread pool size based on configuration to improve flexibility in
replaced the initialization of ` idsToShortcuts ` and ` removedShortcutInfos ` with a new ` ArrayList < ShortcutInfo > `
remove unnecessary check for String type in DefaultHttpClientBinderRegistry to simplify code by eliminating unnecessary type checks
removed the case for navigation up in DetailFragment . java to streamline the navigation process by eliminating unnecessary navigation functionality
added a condition to check if ` hasAndroidMarket ( ) ` is present in the ` AndroidImplementation ` class to ensure compatibility with Android
refactor cell start and end calculations in TableBlockParser . java and add new test cases in TablesTest . java to improve parsing accuracy and
added support for a bridging header in NewNativeTargetProjectMutator and related classes to enable dynamic configuration of the Bridging header for
refactor PotentiallyDeadCode . java to improve handling of unused JavaType methods and streamline source path generation to enhance code clarity and
added support for finding diamond arguments in the Attr class and created new classes diamondRedundantArgs and T6939780
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest (
added logging for registering cachemetrics in SolrCacheHolder . java to improve traceability of cache registration process
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper exception management during authentication
updated the calculation of the ' zero ' variable in Test6796786 . java to correct the comparison logic to ensure proper handling of negative
added a new configuration file for the " logback . dev . xml " file in JoobyMojo . java and updated the
added a new file JaasEventCheck . java to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent events to facilit
refactor QuickstepTransitionManager to use forEach for adding views to Animate to improve code readability and maintainability by reducing redundancy
updated string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest .
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type
removed unused log strings for single and all leader information changes in DefaultLeaderElectionService . java to improve clarity and maintainability of log output
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add ` ` ready . command . wait ' ' config to control the wait time for the storage pool command
updated JDBC table parameters to use JDBC _ SCHEMA instead of JDBC _ TABLE to improve clarity and consistency in database connection handling
corrected the spelling of " SQLUpdate " in multiple files to improve code readability and maintain consistency in naming conventions
refactor schemaTypeCache initialization to use a synchronized map and simplify synchronization to improve performance and readability of the code
refactor header addition logic in StaticServerHttpHeadersWriter to use a loop for better readability to improve code clarity and maintainability by
added JUnit @ Ignore annotation to LatticeDemo . java to indicate that this test relies on files within CMU to temporarily disable the
added a call to mkdirs ( TEST ) in TestCollector . java to ensure the directory is created for testing purposes
added HTTP chunked streaming mode setting in StarTreeJobUtils . java to improve performance by reducing unnecessary chunk processing
jsonschema : add basicsyntaxchecker , multipletypesyntaxcheckertest , and singletypesyntaxcheckertest
hbase - 2696 fix checkstyle issue in pbcell , pbtype , and testpbcell
added a new ` Node ` class and a test method to validate the behavior of ` beansWithRecursiveStructureMustCauseStackOverflowException ` to
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IOException during remote name retrieval
added IllegalArgumentException handling to UserAccountManagerImpl and updated client creation logic in ClientFactoryImpl and ConnectivityServiceImpl to improve error handling and ensure
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for ` AspectJMethodSecurityInterceptor ` in the ` GlobalMethodSecurityBeanDefinitionParser ` to control the use of ` As
refactor SSL socket timeout handling by introducing hostname verification configuration to enhance security by controlling hostname verification behavior
removed the final modifier from the ` remove ` method in ` OHLCSeries ` and added a new ` remove ` method in ` OHLC
replaced ` invoke ( ) . joinInternal ( ) ` with ` invokeUrgent ( ) ` in ` ClientSchemaService . java
removed redundant traversal of the joint list in the world . java file to simplify the code and improve readability by eliminating redundancy
fix npe in searchfilter when filterstring be null
[ hotfix ] [ test ] move sourcereadertestbase to testutils
added a try - catch block around the ` toDocument ` method in ` DocumentsStorageProvider . java ` to handle potential ` NullPointerException `
added new ` HookDefinition ` and ` JavaHookDefinition ` interfaces , and created ` JavaHookDefinition ` and ` JavaHookTest ` classes
refactor buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by encapsulating
updated the ` setExoOptions ` method to accept a boolean parameter for allowTs to enhance flexibility in setting Exo options based on
removed the user identifier from the identifier collection in DMRDecoderState . java to ensure proper handling of user actions in the decoding process
added an INVISIBLE color constant and modified the toString method in Color . java , and updated import statements in RailButtonShapes . java to
updated null handling logic in CountAggregationFunction and added a new test for count queries with null handling options in NullHandlingIntegrationTest to ensure correct
initialize deep variable to - 1 in InternalTransaction . java to ensure proper handling of deep transactions during transaction processing
added XML escaping for the name in StreamInitiation to ensure proper handling of special characters in the name string
updated file initialization to use configuration values instead of hardcoded " work " to improve flexibility by allowing dynamic configuration of the work directory
added support for " deprecated " attribute in RuleSetFactory to ensure proper handling of deprecated rules in the rule configuration
fix amd64directcallop to use codebuffer . position ( ) instead of dummy
added static final constants for MIN _ TIME and MAX _ TIME in TimeRange . java and implemented rangeConstruction tests in TestTimeRangeTracker .
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactor the metrics JSON handling logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by encapsulating the
refactor DetailFragment and GalleryActivity to improve code readability and maintainability to enhance code clarity and maintainability while ensuring proper handling of
fix tank not drain the tank if the player be not remote
added support for handling ` RuleAnalysisLegacyBuildRuleView ` in ` CsharpLibrary ` and ` PrebuiltDotnetLibrary ` to
added handling for get pep and dummy service in iq handler
added a null check for runtime in the intrinsicGraph condition to ensure robustness by preventing potential null pointer exceptions
updated condition to check if active is not empty before refreshing active work in MetricTrackingWindmillServerStub and StreamingDataflowWorker
pdfbox - 4892 : avoid indexoutofboundsexception , a suggest by valerybokov
added new constructor to LwjglApplet that initializes the LwjglApplication with a canvas and configuration to enhance the application ' s
simplified the string representation of DockerClientConfig in the EnvironmentAndSystemPropertyClientProviderStrategy class to improve code readability and maintainability by
refactor LdapAuthenticationHandler and AccountStateHandler to improve password policy handling to enhance clarity and maintainability of the authentication process
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a new private field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize it to
refactor Readable class for improved readability to enhance maintainability and readability of the code
pdfbox - 551 : use testsupport . withfont , a suggest by valerybokov
updated the share menu icon from ` share _ menu _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java `
updated the ` JRE _ IS _ MINIMUM _ JAVA8 ` and ` JRE _ IS _ MINIMUM _ JAVA9 ` to
updated the condition for determining connection timeout in PoolUtilities . java to ensure proper handling of non - JDBC 41 compliant driver scenarios
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredList in Enclosed . java to improve performance by using a more efficient list implementation
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasProtocolValidationSpecification classes to ensure proper method overriding
removed redundant whitespace in ChartProvider . java to improve code readability and maintainability
fix : use path . getparent ( ) instead of path . getpath ( )
simplified the return statement in JavacParser . java and added a new ExtraSemiTest class to improve code readability and
added functionality to find users by created at and created time in the User class to enhance user query functionality by allowing users to retrieve users based on
updated Test15FloatJNIArgs . java file to improve test coverage for FloatJNI arguments
updated version strings in plugin . java for improved clarity and consistency to enhance maintainability and readability of the code
corrected substring index calculation in MockProcessContext . java and added a test for encryption and decryption in TestMockProcessContext . java to ensure
[ java ] add ensurenotreentrant ( ) to ensure that archive can not be reentrant .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerException when the dependency is null
added timeouts to multiple @ Test annotations in SslBytesServerTest . java to improve test reliability by allowing more time for tests to complete
refactor Peer class to improve code structure to enhance maintainability and readability of the codebase
added ` getRealtimeSegment ( ) ` and ` toHistoricalIndexSegment ( ) ` methods to ` RealtimeIndexingCoordinator ` , and
added null check for exportedData before writing to the output to avoid potential NullPointerException when exportedData is null
refactor popup positioning and touch positioning in RecyclerViewFastScroller . java to improve code readability and maintainability by centralizing
updated error message in BuckWSServerPortUtils and added a check for tool window instantiation in BuckEventsConsumer to improve clarity of
added a conditional check for Windows platform before setting the ` preventSleep ` checkbox in ` GeneralTab . java ` to ensure proper functionality for sleep
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
updated cropping logic in QuickstepAppTransitionManagerImpl and FloatingIconView to accommodate vertical bar layout to improve responsiveness
added fullScreenExclusiveModeState management in XWindow , XWindowPeer , and X11GraphicsDevice classes to improve control over full - screen
fix playeddurationstr ( string , string ) in pms configuration
added credentials handling for MapWork and ReduceWork in DagUtils . java and updated TezTask . java to utilize them to enhance
camel - 14263 : use entryset . entryset instead of keyset . entryset in camel - core
trim whitespace from the thread name in SessionState . java to ensure proper formatting of thread names
updated the message in GpsMainActivity to clarify that the description is not logged to a file to improve user understanding of the
refactor Job class to improve code readability to enhance maintainability and facilitate future updates
added a new abstract static class ` Unused ` with methods ` getIntField ( ) ` , ` getStringField ( ) ` , and `
updated the key for HBASE _ MASTER from " hbase _ master _ host " to " hbase _ master _ hosts " and added
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused XML event handling interfaces
updated the ` performJoin ` method to return a list of ` GenericRecord ` objects instead of a single ` GenericRecord ` object to enhance
updated maxDelegateLockPeriod validation to include a value greater than 10512000 to ensure that MAX _ DELEGATE _ LOCK _ PERIOD
change network rate type from int to integer in NicTO and NicProfile classes , and add a null check in ConfigurationManagerImpl to
modified the CmcExchange constructor to initialize services and apply exchange specifications to ensure proper initialization and configuration of the CmcExchange class
replaced the retrieval of seed nodes from ` cfgs ` to ` ipList ` and updated configuration handling in ` GossipLocalNode . java
set client . client . tpc . enabled to false by default
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple AdminApiApplication classes to reflect the
refactor the handling of the division operation in MutableBigInteger and add a new class ModInvTime for computing modular inverses to improve
modified the handling of the ` buffer ` and ` key ` variable in ` NamedObjectList . java ` to ensure proper initialization of the ` key
updated cleanupEmptyDir method to use cleanupEmptyTableDir instead of cleanupEmptyDir across multiple query compactor classes to improve error handling and ensure
refactor AsyncCache and Cache classes for improved readability to enhance maintainability and facilitate future updates
added import for RCFileInputFormat and registered it in kryo to enable serialization of RCFileInputFormat for improved data handling
added new methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for handling column types to enhance type mapping functionality for better
added error handling for invalid host header parsing in Request . java and updated test cases in RequestTest . java to improve robustness and ensure proper
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of ` libcore . util . TimeZone
refactor ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve handling of outgoing values and
changed the visibility of the ` segment ` variable and related variables in ` SegmentCoreReaders . java ` and ` SegmentReader . java ` to
implemented ` hasMainThreadProfile ` method in ` AggregateDao ` , ` AggregateDao ` , and ` TransactionCommonService ` classes to ensure
added validation to prevent annotation definitions in a Buck rule when required _ for _ source _ abi is set to false to ensure that annotations are
updated the NAME constant in multiple filter factory classes to use " lowercase " instead of " lowercase " to ensure consistency in naming conventions
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the code
move discoverysearchrequestprocessor to webui instead of lucenesearchrequestprocessor
added list elements for " America / Dawson " , " America / WhiteHorse " , and " Canada / Y
updated SurfaceSyncGroup instantiation to include a specific name for the TaskBarController to improve clarity and specificity of the synchronization group
updated GridFsTemplate and GridFsTemplateIntegrationTests to remove unnecessary object ID casting and improve test coverage to enhance code clarity and ensure correct
added tests for total size and bytesSoFar in ShadowDownloadManager and updated corresponding methods in ShadowDownloadManagerTest to improve test coverage and ensure correct
refactor character handling logic in TextField . java to improve clarity and functionality to enhance readability and maintainability of the code
added a conditional check to return early if the target equals the target to avoid unnecessary processing when the target is the same
added the ` afterSetStatements ` method in ` Lower . java ` and ` BlockLexicalContext . java ` classes to handle terminal state
added hashCode ( ) methods to IntervalXYDelegate and XYSeriesCollection classes and updated hashCode ( ) method in IntervalXYDelegate and IntervalXYDelegate
fix clientqueuedisruptiontest to work with junit 5
reformatted code for improved readability in CloudWatchAppender . java and added a new CachingAttributeRepositoryTests . java file to enhance code
replaced ` serializeSpecialDoubleValues ( ) ` with ` serializeSpecialFloatingPointValues ( ) ` in Gson . java to ensure proper serialization
added calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in
added checks for non - empty subtag before canonicalizing language tags in Locale . java and improved language tag handling in LanguageTag . java
kvm : add kvm . ssh . to . agent config option to allow ssh to agent
refactor method visibility from public to package - private in SchedulerWhen . java and SchedulerWhen . java to improve encapsulation and clarify
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline the code by eliminating unnecessary dependencies
added a condition to exclude spaces from the filter string in SimpleSearchQueryConverter to ensure only valid input strings are processed
replaced " natural order " with " Natural column order " in BrowserContentPane . java and updated UISettings initialization in DataBrowser
replaced ` Arrays . copyOf ( input , 6 ) ` with ` Arrays . copyOf ( input , 6 ) ` to improve performance by redu
updated the method call from ` write ` to ` htmlEncodeButNotSpace ` in ` HtmlSessionInformationsReport . java ` to ensure
updated topic check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to ensure correct matching of
removed unnecessary synchronized block in FastHttpDateFormat . java to improve performance by eliminating unnecessary synchronization
refactor file move logic to use a fixed thread pool for better error handling to improve responsiveness and resource management during file move operations
added a new ` trigger ` method to the ` WrapTimer ` class that executes a timer with a specified period to facilitate the
added support for " LOCAL _ DATE " and " LOCAL _ DATE _ TIME " data types in TypeStringUtils and corresponding tests to enhance type handling
added a verbose option to the error setting in AbstractStatusReporter to enhance error reporting by allowing customizable verbose error messages

added validation to ensure vpn connection can only be esitablished between different account and customer gateway to ensure that vpn connection can only be es
updated error handling logic in CursorReadingTask and corresponding unit tests in CursorReadingTaskUnitTests to improve clarity and functionality of error handling in
added logging for encrypted PDFs in PDFBoxThumbnail and PDFFilter classes to improve error handling and debugging for encrypted PDFs
[ 3.0 ] fix race condition in curatorzookeeperclient . childchanged ( )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated the ` deleteItem ` method to use ` id ` instead of ` getSelectedItemId ( ) ` in ` HostsList . java ` to
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of ` replaceOrderBulk ` from ` Collection ` to ` List < ReplaceOrderCommand > ` and updated the parameter type
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and implement ` enterFunctionNode
added a new utility class ` J9ConstantHelper ` and modified ` ObjectHash ` and ` ObjectHash ` classes to utilize it to
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for testing concurrent modification exceptions to ensure that concurrent modification exceptions are
send roster offline message if it ' s not find .
updated method to retrieve overlayed properties in MapOperator and PartitionDesc classes to ensure proper retrieval of overlayed properties from the table descriptor
reformatted method call in FunctionObjectCreator . java for improved readability to enhance code clarity and maintainability
added null check for extTypeCustomDesers before assignment it in MessagePackFactory to avoid potential NullPointerException when extTypeCustomDesers is null
remove system . setproperty ( ` ` mockserver . logLevel ' ' , ` ` warn ' ' ) from main . java
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
changed the type of scoreMap and termScoreMap from Map < Float , Float > to Map < String , Map < Float , Float >
updated bitwise operations in U64 . java to use less than or equal instead of bitwise and added an ` eq ` method to improve clarity
added headline style for the text field in MainViewModel to enhance the visual appearance of the text field
added a boolean flag ` didSupportDarkText ` to the ` notifyChange ` method to ensure proper handling of dark text support in the
[ hotfix ] [ checkpointing ] fix npe in checkpointrequestdecider when there be no pending checkpoint
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS to MAX _ POOL _ SIZE and added a
replaced ` filter ` with ` anyMatch ` for provider matching in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
fix fail opencvimagefactorytest on window servercontainer
resolve http : / / issues . apache . org / activemq / browse / amq - 4896 - allow to configure prefetch
added throwable handling to the getReturnValue method in Protocol . java and modified exception handling in Py4JNetworkException . java to ensure proper exception
added a Repeatable annotation to the Issue class with a value ( ) method to enhance the functionality of the Issue class by allowing multiple instances of
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and refact
modify socket connection to use an unresolved InetSocketAddress if the " socksProxyHost " system property is not set to ensure the socket connection is
refactor SlotReport and SlotStatus classes to improve code clarity and maintainability
removed the import of ClassUtils from commons - lang3 to streamline the code by eliminating unnecessary dependencies
replaced ` HashSet ` with ` LinkedHashSet ` in ` _ excludeProtocols ` , ` _ includeCipherSuites ` , and ` selected _ cipher
added a static variable ` systemResource ` and updated its assignment logic in ` Resources . java ` to ensure that the system resource is only retrieved
added a constant for plaintext segment size in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to improve code readability
added a test for handling invalid circuit breaker gateway fallback in ServerMvcIntegrationTests . java to ensure that the circuit breaker correctly throws an
added SSL connection socket support to the CloseableHttpClient to enhance security by restricting the use of SSL connections
set the size limit to 0x7FFFFFFF in PerformanceTest . java to optimize memory usage during testing
added getter and setter methods for ` preferAES ` in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to streamline
( chore ) camel - opentelemetry : use logger instead of system . out
added a test method to validate the functionality of LoadBalancer instance operations to ensure the correctness of instance management and health checks in the elb integration
rename the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the method
added error handling for file creation in DiacriticTest . java to improve robustness by handling potential InvalidPathException during file creation
hhh - 14827 - followonlockingtest do n ' t work on oracle 11 when use a driver other than ojdbc
updated texture file retrieval and exception handling in TextureUnpacker . java to improve error handling and provide clearer error messages for unknown atlas files
refactor AmbariManagementControllerImpl to use a synchronized lock for thread safety to improve concurrency handling and ensure thread safety during service state updates
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the ResultSet is not closed and modified the closing logic in HiveStatement to ensure proper resource management and prevent potential
remove support for mark ( ) and reset ( ) in inputstreambodygenerator .
added pre - deleted database handling in ClusterSchemaManager to ensure proper management of pre - deleted database entries in the consensus manager
updated the handling of the " chunkedWriter " pipeline in Http1xUpgradeToH2CHandler . java to ensure proper handling of chunked
updated conditions for deleting items in EnhancedBrowseFragment and added delete functionality in FullDetailsFragment to enhance user experience by providing confirmation for item deletion
replaced instances of ` RuleFinder ` with ` RuleBank ` and introduced a new ` RuleBank ` interface to improve code organization and encaps
added a try - catch block around the initialization and final operation in JcaTlsCrypto . java to handle potential exceptions to improve error handling and
added two new files , TestMonomorphicObjectCall . java and Object . java , and modified TestMonomorphicObjectCall . java
replaced the ` removeMetaDataSource ` method with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop .
hbase - 2696 fix potential npe in memstore . shouldseek ( scan , store )
[ hotfix ] [ table - planner - blink ] move localstate _ sub _ directory _ root into taskmanagersconfiguration
modified AlterTimeSeriesStatement to accept a boolean parameter for the isAlterView variable and updated related methods accordingly to enhance flexibility in handling time
[ codeborne ] fix regex pattern for matchtext ( # 1188 )
added a try - catch block around the retrieval of the routing table builder in HelixBrokerStarter . java to handle potential exceptions when fetching
fix potential nullpointerexception in httpclientintroductionadvice
( chore ) camel - jms : use char [ ] instead of string for password
cloudstack - 4892 : do n ' t swallow illegalstateexception when call session . invalidate ( )
modified the ` toSortedListWithCounts ` and ` equals ` methods in ` Counters . java ` to streamline the comparison logic and
modified the ` initialize ` method to accept a ` SimulationStatus ` object instead of a ` SimulationStatus ` to ensure warnings are properly
add compiler directives to get current time in llvmamd64syscallclockgettimenode
updated the method calls in PrettyPrinter to use a variable for better readability to improve code clarity and maintainability by using a local variable
added null checks before creating a new Node instance in LRUDictionary . java to ensure that the indexToNode array is only created when it is
refactor filtering logic in DatagramSocket and DatagramChannelImpl for better readability and efficiency to enhance code clarity and maintainability while
test : migrate testquerydns from junit 5 to junit 5 ( # 1748 )
added a new file ` NutchServerInfo . java ` with properties for date , job , and running jobs in the application to provide
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` for managing token attributes to streamline attribute handling and improve
added a timestamp option to the SettingsColumn class and updated its usage in CqlInserter and ThriftInserter to allow users to
updated validation logic for prime values in DSAParameterGenerator . java to ensure correct handling of prime values and improve code clarity
fix numberutils . numbertointbits ( ) and numberutils . numbertodouble ( ) to work with java 8
updated masking logic in InetAddressSet . java and added unit tests in InetAddressSetTest . java to ensure correct masking of raw addresses and
added constraint violation check for SQLException in DefaultJdbcOptimisticLockingExceptionMapper to enhance error handling for specific SQL states
http : / / issues . apache . org / jira / browse / amq - 4892 - fix remotebrokeroffsetstore .
added methods for adding and inserting tabs in the Tabs class to enhance the functionality of the RadioButton component by allowing multiple tabs to be added
replaced usage of ` size ( ) ` with ` [ 0 ] ` in multiple Java files to simplify array conversion by removing unnecessary size checks
[ hotfix ] [ runtime ] add taskmanagermanagerruntimeinfo field to mockenvironment
refactor conditional statements in MavenVisitor . java for improved readability to enhance code clarity and maintainability
updated test cases to replace " MOCK _ APP _ SECRET2 " and " MOCK _ NAME2 " with " MOCK _
added a new test file FormatCheckingTest . java to validate Java class name validation to ensure proper error handling for illegal class names in Java processes
added a new variable ` lastLineNumber ` and updated the line number assignment logic in ` CodeGenerator . java ` to ensure the correct line number
added a try - catch block around the retrieval of service properties in ConfigHelper . java to handle potential exceptions during service property retrieval
added methods to create a RadioButton with specified icon , command , and button group in RadioButton . java to enhance the functionality of the Radio
updated the initialization of the cache in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to
polish ` ` make capacity ' ' public to allow access to the cap attribute .
added null check for symbolicName and initialized it to an empty string if it is null to ensure robustness by avoiding potential NullPointerException when symbolic
added support for the usemode system property in modecontribution . java and updated log message formatting in Base . java to enhance flexibility in
( chore ) camel - yarn : make sure yarnsessionfifoitcase do n ' t wait for two container to start
updated variable names from ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to improve clarity and consistency
added a check for non - existent headers in AbstractMessageProducingHandler and updated selective header propagation logic to ensure proper handling of non -
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to enhance testing capabilities for build targets
updated drawable resources for recent images in FileMessageVH . java to improve clarity and consistency in image placeholder handling
refactor OnExitTest class for improved clarity to enhance maintainability and readability of the code
added a method to recreate the taskbar when user preference changes to ensure the taskbar is refreshed when user preferences change
added reflection - based heap dump functionality based on IMM virtual machine type to enhance flexibility in heap dump functionality based on the availability of
added try - finally blocks around session commit and close calls in MyBatisProducer . java to ensure session resources are properly closed to prevent
simonstewart : add support for window switch to ie
updated the ` @ TriggerPatterns ` annotation and modified the initialization of ` SAFE _ COLLECTION _ METHODS ` and ` SAF
set the application ' s state to unavailable in JmxApplicationProvider . java to ensure that the application is properly managed when the application is unavailable
refactor position and limit handling in ByteBufferAs , Heap , StringCharBuffer , and StringCharBuffer classes to improve clarity and correctness
replaced ` toUri ( ) . toString ( ) ` with ` split ( ) ` in ` ConditionalResolverMergeFiles . java ` to
updated array deletion logic in NativeArray and added setEmpty methods in ArrayData , DeletedRangeFilter , ObjectArrayData , and SparseArrayData
changed enum visibility from package - private to public for Protocol and Transport in VirtualAuthenticatorOptions . java to allow external access to these enum elements
replaced ` doc4 ` and ` doc5 ` with ` doc6 ` in ` TestMultiPhraseQuery . java ` to streamline
updated the assignTickets method to include payment method check in ReservationController . java and modified the filtering logic in TicketHelper . java to enhance
added onTimeoutThread handling and modified request state management in HttpChannelState . java to improve thread safety and ensure proper handling of timeout events in
replaced printStackTrace ( ) calls with debug logging in multiple test classes to improve logging granularity for better debugging
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the ConsistencyLevel assignment in the read method to conditionally use LOCAL _ QUORUM based on consistencyForPaxos to
added a condition to check for " Home " model in HeosDiscoveryParticipant . java and updated player ID handling in HeosPlayerHandler .
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectDeParser ` classes to
refactor Neo4j node data handling to utilize AttributeController for improved attribute management to enhance code readability and maintainability by
added a null check for the ' from ' variable in the SessionManager class to ensure that ' from ' is not null to avoid potential NullPointerException
nifi - 1744 : upgrade rocksdb to controller . repository and remove obsolete rocksdb class
updated the method for reading the " IS _ GRANTABLE " boolean value to use results to improve code readability and maintainability by using
updated URL validation logic in JavascriptContext . java to ensure that the URL does not start with " javascript : " to improve logging clarity and
camel - 15836 : camel - cxf - do n ' t run test on macos
hbase - 26946 loadtesttool should not modify the column descriptor if the cf be a new one
added Disposable interface to Texture class and modified Texture class to implement it to enhance functionality by implementing the Disposable interface
added null checks for tldBundleLocation and updated WebAppRegistrationHelper and WebBundleDeployerHelper to enhance code robustness and ensure proper context
add GoQuorum genesis file validation to ensure GoQuorum compatibility mode is used only if GoQuorum privacy is enabled
replace IOException with Throwable in HttpInput . java to improve error handling by using the appropriate error state
added a check for the " JP " country in the LocaleTest . java file to prevent issues caused by the change in era due to
replaced ` Wrapper . class ` with ` HostResponse . HostResponseWrapper . class ` in multiple service classes to improve consistency and clarity
updated equality and hash code logic in FilteredQuery . java to include getBoost ( ) to ensure correct comparison and hashing behavior based on
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 2339 add support for ` ` geogebra debug ' ' in web
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
do not attempt to throw a forge event when there be no entity leave to spawn . fix # 614 .
renamed ` KeyMappingPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` across multiple files to improve clarity and consistency in naming conventions
make sstable compaction test use identityqueryfilter instead of range
added null check for ' type ' attribute in MiniAapt . java and created a test for invalid resource resources in MiniAaptTest .
added support for Spel " Spel " operator in the operator enumeration and created a corresponding JUDGE class to enhance the functionality of the
replaced ` = = ` with ` equals ` for ` ordinalityType ` in ` LocalExecutionPlanner . java ` to ensure correct
bugfix # 20632 , use java . util . lookup instead of sun . misc . service
refactor CertBlacklist , ConscryptCertStore , Java8EngineSocket , and ConscryptTest classes to improve code organization and maintain
updated variable types from ` Ref < > ( 0l ) ` to ` Ref < > ( 0L ) ` in ` AttributeResolution9
updated the fullOptions list from " 1.5 " to " 6 " in SetupHid . java to support additional source and target options
changed access modifier of ` extractMetadataColumns ` method from private to public and refactored project handling in ` PushProjectIntoTableSourceScan
sort localized names in AboutActivity by their canonical names to ensure consistent ordering of localized names for better user experience
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming mode before updating shared preferences to ensure preferences are only updated when live streaming is enabled
added an exception parameter to the MappingException constructor in AuditConfiguration . java to improve error handling by providing more context on the exception
fix flakiness in fileconsumerpollingstrategystoponrollbacktest
updated generic type parameters in CompositeType and DynamicCompositeTypeTest to use wildcard generics to improve type safety and flexibility in type handling
added support for transport matching in GitClientApplication and modified repository URL handling in RepositoryUrlPanel to enhance transport management and ensure proper permission checks for
added getDelegatorName ( ) method implementations across multiple input consumer classes to provide clearer getDelegatorName ( ) for better debugging and
add null check for ` mavenMetadata ` and update ` availableVersions ` logic in ` ChangeParentPom . java ` to ensure proper handling
added a check for the " Disabled " flag in TestLargePageUseForHeap . java to handle cases where the " Disabled " flag is
cloud _ usage : skip event migration if db do n ' t exist
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5761 - fix test
added a new test class for ObjectStreamClass functionality to ensure proper serialization and deserialization of ObjectStreamClass objects
simplified the null check for data center information in ZoneAwareDiscoveryFilter . java to improve code readability and maintainability
changed log level from error to warn for tracing data in OpenTracingTracer . java to provide more detailed logging for debugging purposes
added a toString ( ) method to the Generator class to provide a readable string representation of the generator registered state
refactor URI handling to improve clarity and consistency to enhance code readability and maintainability
added a check for non - existent resources in ClusterControllerImpl and created a corresponding test in ClusterControllerImplTest to ensure proper error handling for
refactor error handling and logging for API response validation in AccepttoApiUtils . java to improve robustness and provide clearer error messages for
updated buffer allocation logic in VertexBufferObject . java to ensure compatibility with Android version 5 and improve performance
refactor SybaseASADatabase class for improved readability to enhance maintainability and clarity of the codebase
added a ` forceProjection ` parameter to the ` HashJoinInfo ` class and updated related methods to include it to enhance performance by reducing
added a method ` getStringDistance ( ) ` to retrieve the string distance in ` SpellChecker . java ` to provide access to the string
added FLAG _ MMUTABLE and FLAG _ CANCEL _ CURRENT flags , and modified PendingIntent creation logic in AndroidImplementation . java to enhance
added methods to append and modify read column ID handling in HiveFileFormatUtils and HiveInputFormat to improve code readability and maintainability by
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added a new ` DisplayTemporaryToast ( ) ` method to display a toast message in ` SavedExperiments . java ` to
added version handling in ServiceModule and corresponding tests in ServiceModuleTest to ensure proper version management and validate service resolution functionality
added a new test class ` RawSerializationTest ` for serialization of collections , collections , objects , and parameterized objects to ensure correct serialization and deserialization
simonstewart : move the seleniumserver interface to the sslcertificategenerator interface
refactor the loop to iterate through the list of replies and set padding for the last tweet view to improve code readability and ensure proper padding
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow for more time for resource access
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to validate the functionality of ` N
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future updates
refactor test methods in EasyRandomTest for better clarity and functionality to improve code readability and maintainability by reducing redundancy
added exception handling to RebootAnswer and StopAnswer constructors and modified connection initialization in CitrixResourceBase to improve error handling and provide clearer
replaced direct execution of ` _ runCompleteWrite . run ( ) ` with a thread - local variable ` _ tryWriteAgain ` to
refactor actor visibility checks and add ancestorsVisible method to improve clarity and functionality of actor visibility checks
added logging for deployment group failure in RollingUpdateOpFactory . java to improve traceability of deployment failure during rolling updates
[ hotfix ] [ table - common ] fix checkstyle violation in sinkprovider
added error handling for BadCredentialsException in DaoAuthenticationProvider . java and created a new AuthenticationFailureUsernameNotFoundEvent . java file to improve
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and facilitate future development
updated the default QTYPE assignment from " lucene " to " QParserPlugin . NAME " and added multiple test cases for sorting to ensure
added Locale . US to the SimpleDateFormat instantiation in WeekDateTest . java to ensure consistent locale handling across different locales
added an overridden method ` isInitialized ( ) ` in ` ILanguageServer ` and implemented a new test class ` LocalsCompletionTest ` to
updated the parameter ` idToken ` to ` shouldHaveIdToken ` and modified related assertions in ` ClientAPITokenIntegrationTest . java `
added transaction management methods to DatabaseAdapter and modified GncXmlHandler to call beginTransaction ( ) and endTransaction ( ) to improve transaction management and
replaced byte array with ByteArrayOutputStream for reading input data to improve performance and reduce memory usage during file reading
added multiple @ Override annotations and refactored exception message handling in MessagingTemplate . java to improve code readability and maintainability by reducing
added an overridden method ` isAcceptable ` in ` AutoFormatVisitor ` to check if a source file is an instance of ` J .
added maximum buffered documents and RAM buffer size settings in TestIndexWriterMergePolicy to improve performance and resource management during index writing
added a new method ` updateWits ( ) ` to the ` Manager ` class and a corresponding test in ` ManagerTest ` to ensure
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling potential NoSuchElementException
[ hotfix ] [ runtime ] remove log4j . level from flumenode and flumeshell
refactor BasicAuthIntegrationTest and DaemonStream classes to enhance authentication metrics assertions and improve thread management in DaemonStream to enhance test reliability and
replaced HashMap with LinkedHashMap in DependencyUtil . java to improve insertion order for better performance
( chore ) camel - jersey : add internal error mapper to jerseysupport
refactor header validation logic in Http2TestBase . java to use a dedicated method to improve code readability and maintainability by encapsulating
added support for additional Java property keys in System . java to enhance flexibility in property management for different Java versions
changed method parameters from ` String ` to ` CharSequence ` in ` StringSubject ` and added corresponding test cases in ` StringTest ` to enhance
added " toBeInvestigated " and " jdk / jfr / internal / JVM . counterTime ( ) J " and " j
rename IntUtilsTest to PrimUtilsTest to improve clarity and consistency in naming conventions
updated DataSource initialization to use a variable for connection factory to improve flexibility in handling different data sources
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
changed the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable . ConstantState ` to ` Drawable ` and updated drawable handling to
updated resource handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve resource management and avoid potential memory leaks
added a method to rewrite coalesce children in RexNodeConverter and registered it in SqlFunctionConverter to enhance functionality for handling coalesc
( chore ) camel - hl7 : clean up test code and improve readability
updated JavassistProxyFactoryFactory to set the context class loader for proxy factory generation to ensure proper context class loading for proxy factory generation
added synchronized keyword to constructors in DefaultDateTypeAdapter to ensure thread safety during instantiation of DefaultTypeAdapters
reformatted code in DocumentUtil . java for consistency to improve readability and maintainability of the code
refactor HttpClientRequestBase to streamline URI handling and update query parsing logic to improve code clarity and maintainability by eliminating unnecessary
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to streamline the code by eliminating unnecessary filtering of old entries
change log level from fatal to warn in FSHLog . java to improve logging granularity for better error handling
refactor NodeMap class to use a new NodeMapIterable class for better organization to improve code readability and maintainability by separating the
updated import statements and refactored predicate creation in DiscoveryClientRouteDefinitionLocator . java to improve code clarity and maintainability
added a check for non - empty fields before adding aggregation in MongoRecordReader and modified the return condition in RexToMongoTranslator to ensure
of - 1341 : add admin to list if no admin be available
replaced MultiFields . getFields ( ) with getSlowAtomicReader ( ) for terms retrieval in multiple classes to improve code clarity and ensure
updated the return statement in ConstantBeanHolder to use ObjectHelper ' s class name and identity hash code to improve clarity and maintainability of
simplified the condition for determining the primitive type in GroovyParserVisitor . java to improve code readability and maintainability by eliminating
svm : remove unused code from java . lang . frameinfoqueryresult
increase timeout in sedablockwhenfulltest from 100 to 300
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level
updated the calculation of ` readLen ` in ` MessageUnpacker . java ` to ensure that ` readLen ` does not exceed the buffer
updated import statement from ` micrometer . common . lang ` to ` io . micrometer . core . lang ` to
updated SQL query to include the user column in IconDB to ensure that the correct component and user information is included in the database
http : / / issues . apache . org / jira / browse / amq - 4896 - fix typo in defaultmq
modified the ` addWhitelistedResource ` method to include a ` isClassfileOnly ` parameter and adjusted the logic for adding whitelisted resources to enhance
cloudstack - 4892 : fix foreign key in baremetal _ dhcp _ devices table
removed the IJava2DRenderer interface and its Closeable interface from Java2DRenderer and removed it from Java2DRenderer to simplify the
added onTearDown method to handle offload buffer emptying in DefaultAudioSink to ensure proper handling of audio buffers when the audio sink
added scheduling functionality to the UpstreamCacheManager and refactored related logic to improve thread management and enhance the timing of upstreams
refactor StreamType class for improved readability to enhance maintainability and clarity of the code
updated assertion message in Recording . java to include a more descriptive message to improve clarity of assertion failure message for better debugging
updated FilestorePage , RootPage , and FilestorePage to use RequiresAdminRole and improved authentication logic to enhance security and
( chore ) camel - elasticsearch : ignore the camel - elasticsearch test
added a check for the class type of the Lifecycle method in ExpressionControlBusFactoryBean . java to ensure the method is only checked if the
updated button names from " leftButtonAltcoin " and " rightButtonFiat " to " buyAltcoin " and "
camel - 15836 : camel - restlet - fix invalid url in invalid url
refactor ` createNextBlock ` and ` createNextBlockWithCoinbase ` methods to accept nullable ` Coin coinbaseValue ` as a parameter
removed the ` Serializable ` interface from ` BTreeMapJava ` and updated the ` serialClone ` method in ` JSR166Test `
added null check for cause before logging error messages in RuleEngineImpl . java to avoid potential NullPointerExceptions when the cause is null
reformatted the conditional statement in Main . java for improved readability to enhance code clarity and maintainability
changed the return statement from ` mFilesAll ` to ` mFiles ` in ` LocalFileListAdapter . java ` to ensure the correct file
deleted the PlainVerifier . java file to remove unused code that is no longer needed in the project
added a condition to close system windows when triggered from the AltTab to ensure proper resource management and prevent memory leaks
updated DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog handling and visibility management to enhance user experience by ensuring the correct bottom sheet
added UTF - 8 encoding to the body charset parsing in RestAdapter . java to ensure consistent character encoding across different operating systems
added a call to super . deinitialize ( ) in TextField . java to ensure proper initialization of the TextField class
refactor testSerialization method to use TestUtilities for serialization to improve code readability and maintainability by using a centralized utility method
updated parsing method to use ` previousUntilLastClause ( ) ` instead of ` previousClause ( ) . DURATION ( ) . getText ( )
added validation for array size and improved argument handling in JAXWSExceptionBase . java to ensure proper handling of negative array sizes and prevent runtime
test : migrate ctunresolvedimporttest to junit 5 ( # 1748 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow for more time for thread execution
[ hotfix ] [ test ] fix default value of slotsharinggroup in miniclusteritcase
added title property and its getter and setter methods in ShadowActivity and updated @ Implementation annotations in ShadowAlertDialog ,AlertDialog , and ShadowTo
replaced Apache Commons Logging with Apache POI logging in POIFSFileSystem . java to standardize logging practices and improve logging consistency
refactor alarm handling in InstarHandler to use string literals for better readability and maintainability to improve code clarity and maintainability by
update localmapstats for delete ( ) ( # 11886 )
refactor status handling in Response . java to use a switch statement for better readability to improve code clarity and maintainability by using a
refactor javac location retrieval logic in CheckResourceKeys . java to improve clarity and functionality to enhance code readability and maintainability by
add project name to create additional settings for stable channel compatibility
added a new test class ` DeprecatedStubbingTest ` for verifying stubbing behavior in Mockito to ensure correct behavior and behavior of stub
replaced ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType ` in ` IT
add nml and nml to the participialmodiceticalrelations test
add a system property to allow rsa key exchange in fips configuration
replaced instances of ` output _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent potential memory leaks
added oAuthFactory and oAuthServiceHandleId fields and implemented deleteOAuthServiceAndAccessToken methods in PubSubAPI , SDMAPI , and PubSubSub
updated animation interpolators from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to
added support for UpdateRegionLocationPlan in ConfigPhysicalPlan and improved logging levels in DataNode to enhance region management and provide clearer logging
added a new file ` FileDialogLeakTest . java ` that tests the finalization of ` FileDialog ` with a ` CountDown
hbase - 25836 testopentableincoprocessor need to be package org . apache . hadoop . hbase . coprocess
do n ' t interrupt the implementation method if the implementation method be uninterruptible
[ hotfix ] [ table - planner - blink ] remove unused splitmethod parameter
updated the null check for the disi variable in DrillSidewaysScorer . java to ensure that the disi variable is not null
do n ' t refresh the source if there be no source
added JVM version detection logic in Constants . java and updated Helper . java to check for newer Java versions to enhance compatibility with newer Java versions
updated FileReporter to cast null to String and File to ensure proper type casting for FileReporter initialization
updated the method call from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity . java ` to ensure the correct
added menu item navigation functionality in DirectMessageConversation to enhance user experience by allowing navigation to the home button in the action bar
added support for the GET _ USER request in the RpcServlet and RpcUtils classes to enhance user management capabilities in the application
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable compatibility with AMD64 and X86
replaced the variable ` startClass ` with ` originalStartClass ` in the ` strategy . notFound ` method to ensure the original class is
improve error message for invalid register number in dexbody .
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in TestAsyncContextImpl .
kristianrosenvold : fix the nurserostering of the nimbus be nicer but incompatible look and fe
updated regex pattern in AppPage . java to ensure proper matching of version strings in the application
replaced the ` mUiResetListener ` with ` launcherAnimator ` and ` appIconAnimatorSet ` in ` LauncherAppTransitionManager
dumpedprivatekey : fix typo in exception message
update extra data for new offer payload in EditOfferDataModel . java to ensure consistency in data handling for new offer payloads
modify milestoneParameters to handle open and repository parameters based on the milestone ' s status to ensure proper handling of tickets and repositories based on their open
change the default value of the battery from 640 to 80 in PipeItemsWood . java to improve the stability of the b
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRev ` parameters to enhance the functionality to retrieve the
initialize downgradeAllowed to true in UpgradePack . java and add a new test for downgrade handling in UpgradePackTest . java to ensure
replaced instances of ` ATTRIBUTE ` with ` ELEMENTSTART ` and ` ATTRIBUTENAME ` in multiple XML processing classes to ensure consistency in
added a new configuration option for emulation system load libraries and refactored library loading logic to improve flexibility and maintainability of library loading
replaced ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePagedView .
replaced ` putEntry ` with ` closeEntry ` in ` DefaultPlatformManager . java ` and added directory creation in ` FatJar
updated print statements in TestSecretKeyCredentialHandler . java for improved readability to enhance clarity of error messages for better debugging
camel - 14263 : camel - spring - boot should use springcamelcontext instead of applicationcontextaware
[ hotfix ] [ doc ] fix typo in metric option description
hbase - 25836 fix flaky testfulllogreconstruction . testfulllogreconstruction . testfulllogrecon
added reuseAddress property and its setter methods in DatagramSocketOptions class to ensure consistent behavior of DatagramSocketOptions with network options
fix ( server ) : fix typo in shutdown message
simonstewart : remove deprecate locatable interface
updated error messages in VersionInfo . java for clarity to improve readability and accuracy of error messages
renamed equalityPredicateColumns to predicateColumns and updated related logic in StarTreeIndexOperator . java to improve clarity and consistency in predicate
reformatted code in HandshakeHandler . java for improved readability to enhance maintainability and clarity of the code
updated formatting in Navigator . java for consistency to improve code readability and maintainability
changed access modifiers of record reader classes from private to default in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest .
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and corresponding unit tests to enhance query
refactor grouping logic in CalciteSqlParser to use a new method for expression outside the group by list to improve code readability and maintain
updated MappedByteBuffer and FileChannelLinesSpliterator to utilize AtomicInteger for buffer reference counting to improve memory management and prevent memory leaks
replaced direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` for clarity to improve code readability and
added a ` schedule ` method to ` CircuitBreakerImpl ` and updated the ` testCircuitBreaker ` method to include ` ExecutionException ` and `
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent flags for
corrected the property key " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in multiple
updated the display name of the test from " Retrieve view column privileges " to " Retrieve column privileges " and added a JUnit @ Disabled annotation
added synchronized keyword to addExportedCount and getExportedCount methods in EntityGraph . java to ensure thread safety when accessing shared resources
updated the import statement for IntRangeUtil from IntRangeUtil1 . requireNonNegative to IntRangeUtil . requireNonNegative to align with
updated HttpParser and HttpParserTest to handle encoded headers correctly to ensure proper parsing of encoded HTTP headers and improve error handling
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` to align the activity ' s layout with the new
updated print statement in SLWTTextListing . java to include the position of the SLWT document to improve clarity of the
refactor ForceLeaderTest and HttpPartitionTest to handle tlogReplicas conditionally and update test assertions accordingly to improve test reliability and ensure
refactor Thread class to improve thread management to enhance performance and maintainability of the code
fix # 606 - apply template mode depend on template resource extension during resolution
camel - 15836 : camel - cxf - fix the issue that camel - cxf do n ' t set the namespace of the
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated date formatting in ToChar . java to use String . format for consistency to improve readability and maintainability of the code
added configuration keys for ValidTxnList and ValidTxnWriteIdList in GenericUDTFGetSplits . java to ensure valid transaction and write ID
replaced ` ArrayList < String > ` with ` Collections . emptyList ( ) ` for ` columnNameProperty ` , ` columnTypeProperty ` , and
added a check for book . getBookPath ( ) before loading sheet folders and improved logging for missing data to enhance robustness by prevent
updated SSTDeserializer and TestSSTDeserializer classes to improve handling of record IDs and enhance error logging for Ran out - of - data
updated grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant for default grid columns to improve code readability and maintainability
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java to include line - break characters to improve clarity and accuracy of
added a ` waitingForKeys ` flag to ` DecoderInputBuffer ` and updated related logic in ` ClippingMediaPeriod ` , and
updated API path annotations from " / api / margin / v3 / accounts " to " / accounts " in OkexV3 . java
updated comparison logic in LineUtilitiesTests . java to check for both x1 and y2 values to ensure correct evaluation of line values based on
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java
log warn if defaultdrmsessionmanager be access on wrong thread
added support for method calls in the VariableContext class and updated related tests in TestVariableContext . java to ensure correct handling of method calls and
[ te ] add test case for invalid compilation unit and profile string
updated buffer limit calculation in Piece . java and SharingPeer . java to improve clarity and correctness of buffer position handling
added HttpClientProperties and responseTimeout support to NettyRoutingFilter and related classes to enhance HTTP request handling by allowing configurable response timeout settings
refactor ` getNativeLinkTarget ` and ` getNativeLinkTargetInput ` methods in ` CxxLibraryFactory ` and ` NativeLinkTargetGroup
added unit test base on user forum issue
added support for RexFieldAccess in ASTConverter and implemented a conversion method in RexNodeConverter to enhance the handling of field access in
replaced direct iteration over ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
[ http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5457 ] add
refactor certificate handling in PKCS12KeyStore and StoreSecretKeyTest for improved clarity and consistency to enhance code readability and maintainability by
added reflection access checks and refactored method names in Bootstrap and ReflectionCheckLinker classes to improve code clarity and maintainability by central
changed access modifiers of constructors in CollisionMap from public to package - private to restrict access to encapsulation
updated the ` getRawInputFromTransactionInput ` method to use ` @ Deprecated ` and added a null check for the ` input ` parameter to
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability by using a
cloudstack - 1341 : remove unused ` ` region _ id ' ' parameter from sql insert statement
added encryption support for Old Excel files in OldExcelExtractor and corresponding test case in TestOldExcelExtractor to ensure compatibility with encrypted documents and improve
add extra - image - build - argument to mx _ java _ benchmarks . py
simplified the visibility setting of the image in TimeLineCursorAdapter . java to improve code readability and maintainability
increased sleep duration from 10 seconds to 50 seconds in BatchingStateChangeUploadSchedulerTest . java to improve test reliability by allowing more
refactor directory creation logic in ShadowContext and add a test for external directory deletion in ContextTest to improve code clarity and ensure proper directory
refactor exception handling to use Class . forName ( " org . mockito . exceptions . verification . opentest4j . AssertionFailed
increased WAIT _ TIME _ MS from 10000 to 60000 in LauncherInstrumentation . java to improve the responsiveness of the
updated ` ConnectOAuth2RequestFactory ` and ` ConnectTokenEnhancer ` to utilize ` AUD ` extension for JWT claims to
remove default value of ' breakonfirsterror ' from camel - kafka
added a new constant selectableItemBackground with a value of 0x10a13 to define the background color of the selectable item in the application
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
updated event type assignment logic in TxnSetOperation . java to ensure proper event type handling when the record is null
added a new class ` ResumableRandomAccessFileListener ` and modified ` ResumableExternalDownload ` to use it to enhance file handling
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to align class name with the
added logic to set the size of format records in HSSFDataFormat . java and updated test cases in TestWorkbook . java to ensure
[ hotfix ] [ kafka ] fix checkstyle violation in flinkkafkaproducer
updated the calculation of ` compressedChunkLength ` to include ` info . parameters . maxCompressedLength ( ) ` to ensure accurate chunk length validation
( chore ) camel - spring - data - redis : add idempotent support for string operation
fix a bug in containerrepair that cause kotlin to not be repair .
do n ' t use defaultrepositorylayout in legacylocalrepositorymanager if the layout be not local .
added initialization checks and error handling in LocalInstanceManager , JobManager , and LocalTaskManager classes to improve error handling and provide clearer diagnostics
added detailed artifact deployment information in AbstractArtifactResolutionException . java to improve debugging information for artifact resolution issues
updated temporal path generation to include a context parameter in UploadFileOperation . java and added a method to retrieve internal temporal paths in FileStorageUtils
refactor FeedEntryStatusDAO to use Apache Commons Collections for retrieving FeedEntryStatus objects to improve code maintainability and reduce dependency on Google
added thread execution logic in ContextImpl and improved test cases in BlockedThreadCheckerTest to enhance thread management and ensure proper execution flow during
updated the ` instantiate ` and ` convert ` methods in ` FormatterConverter ` to include a ` formatterString ` parameter and added a null check
updated LoadContactsTask . java to conditionally handle file reading based on SDK version to ensure compatibility with newer Android versions and improve file handling
replaced multiple setter methods for remote address and hostname with direct assignment to improve code clarity and maintainability by reducing redundancy
added a null check for shadowClass in Robolectric . java to ensure that shadowClass is not annotated with @ Implements to prevent runtime
added a check for ` tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory `
updated import statements in BasicHttpTest . java and added a test for handling SSL exceptions to ensure proper handling of SSL exceptions and improve test coverage
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance encapsulation and provide access to these getter methods
refactor event handling in PageChangeListener . java and add frameClassList in FrameRenderer . java to improve code readability and maintainability while ensuring
corrected the spelling of " from " to " SMS " in the warning log message to correct the spelling of " SMS "
# 113 - add draftqueryoptimise ( query < t > query ) method to beandescriptor
added error handling for resource temporarily unavailable resources in MultipartBody . java to improve reliability of file transfer process and provide a warning for resource temporarily
fix ( zipfolder ) : fix arrayindexoutofboundsexception in executablefactory
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix the issue that attach file do n ' t work on window
added LoadOptionsBuilder and SchemaInfoLevelBuilder to AccessTest . java to enhance schema crawling capabilities in the test configuration
changed package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace exception throwing with returning null in TestReader . java to improve error handling by returning a default value instead of throwing an exception
added methods to set name , enabled , and expanded properties based on the prototype ' s properties to enhance the configuration options for the project ' s
refactor connection info handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ stream ] fix typo in datastreamjob javadoc
refactor output stream handling to use try - with - resources for better resource management to improve resource management and prevent potential memory leaks
camel - 14263 : camel - cxf should use cxf . common . util . classhelper instead of cxf . class .
added a condition to return true for H2 - 14 protocol in HTTP2ServerConnectionFactory to ensure proper handling of H2 - 14 protocol in
modified the handling of lambda parameters in LambdaToMethod . java and added a boolean flag in ClassFileVisitor . java to improve code clarity and
updated regex pattern in CoordinationTransformer . java for improved clarity to enhance readability and maintainability of the code
updated the timeout value in the copyURLToFile method call from 5000 to 60000 to allow for more time for URL copying in the application
added a line to set the phrase slop in the QueryParser to enhance query parsing capabilities for improved accuracy
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test responsiveness by allowing more
updated the maximum port from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
[ scene2d . ui ] use parallel task in screenscheduler for save / save screenshots
updated visibility logic for the compound view in EditShareFragment . java to ensure correct visibility based on edit options availability
update progress calculation in DepthController . java to ensure progress is within a minimum of 1.1 f to improve the responsiveness of the
removed the ` packetReceived ` method from multiple session classes to streamline the packet handling process by eliminating unnecessary methods
refactor authentication handling in ` DefaultCasDelegatingWebflowEventResolver ` and ` DelegatedAuthenticationGenerateClientsAction ` to improve code
added null checks for the service variable and improved error handling in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdP
[ pantheon ] make PantheonCommand hidden by default .
add donotinstrumentclass ( " androidx . room . CoroutinesRoom $ Companion " ) in AndroidConfigurer to ensure
modified the access modifier of the ` isSupported ` method in ` NegotiateAuthentication . java ` from private to public to allow access to the
business schema for test split out into separate file
camel - 14263 : camel - aws2 - queue : set jmx name for persistent and temporary queue reply to avoid npe .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added functionality to open and close MC blocks in the PdfDocument to ensure proper handling of tags in PDF rendering
add unit test for patternlayout . createselector ( ) method
simonstewart : do n ' t throw unsupportedoperationexception when run hta test under selenium rc
added a new class ` MwThankPostResponse ` and modified the ` thank ` method in ` Service . java ` to implement
implemented the ` SocketBased ` interface in ` ChannelEndPoint ` and introduced a new ` SocketBased ` interface in ` SslConnection ` to enhance
updated revokingStore initialization and set maximum size in AbstractRevokingStore to improve clarity and ensure proper configuration of revoking
added new test cases for implicit join scenarios in HQLTest . java to ensure correct behavior of query execution with implicit join scenarios
replace whitespace characters with newline characters in expected and actual strings to ensure consistent newline handling across different operating systems
replaced references to ` toCommit ` with ` filesToCommit ` in ` IndexWriter ` and updated related references to improve clarity and
replaced ` @ final ` annotations with ` @ Final ` annotations in ` BaseError . java ` to improve code clarity and ensure proper
added validation for resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the consumption user resource percentage is within valid range to prevent
added a condition to check if the old login is displayed in the AuthenticatorActivity to ensure that legacy login display only occurs when the user is in
rename ` StreamNetworkThroughputBenchmarkTests ` class to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in test naming
simplified the response page assignment in EditTeamPage . java to improve code readability and maintainability
updated debug log message format in PMS . java to improve clarity of error messages for better debugging
refactor connection handling in ConnectionManager to ensure proper shutdown of the server socket channel to improve resource management and prevent potential memory leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
refactor conditional logic in BaseSemanticAnalyzer to use a dedicated method for creating dynamic partition specifications to improve code readability and maintainability by
pdfbox - 4892 : make round half up factor configurable , a suggest by valerybokov
added directory traversal methods to ` JarDirectoryStep ` and corresponding tests in ` DirectoryTraversal ` and ` JarDirectoryStepTest ` to enhance functionality
added a new file ` JWKSetEditor . java ` that implements a property editor for setting JWK values to facilitate the editing of
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , VersionTreeTermsWriter , and BlockTreeTermsWriter to
do n ' t use method . getmethod ( ) . resolveparameterklasses ( ) in invokeespressonode and toespress
changed the default value of ` byIP ` from true to false to set the default value of ` fetcher . threads . per . host .
updated condition checks for queryTimeout in StatementUtil . java to improve clarity and correctness of timeout handling logic
added imports and modified target configuration hash handling in HaskellGhciRuleIntegrationTest . java to ensure correct generation of target configurations based
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
server : add initial delay for network usage stats update task
refactor animation interpolators to use a static final variable for view alpha to improve code readability and maintainability by using a consistent interpolator
adjusted swipe length calculation in Background . java to improve the responsiveness of the navigation bar ' s responsiveness based on display density
added a new module - info . java file named org . eclipse . jetty . http3 . server to define module dependencies and updated
updated JsonType . java and JsonTest . java to use constants MY _ JSON _ OBJ and BIG _ JSON _ OBJ instead of
simplified the initialization of the ` ctx ` variable in ` ResourceResolverBean . java ` to improve code readability and maintainability
[ hotfix ] [ checkpointing ] remove nodefaultvalue from executioncheckpointingoptions
updated the ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` and added a new test for inner class references
added an empty string to the command in TimestampCheck . java to improve command formatting for better readability
replaced ` FluentIterable ` with ` MoreCollectors ` for stream processing in ` ChromeTraceBuildListenerTest . java ` to improve code
[ dubbo - 4892 ] add config option to disable register ( # 4892 )
do n ' t end all session when otr mode change
added outline size , transparency , and color constants in PreviewProperty and modified renderProcessing method to include additional parameters for outline size , color , and
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a boolean parameter to the Win32FontManager class to enable font management functionality in the application
added null check and set cursor for the visit method in TreeVisitor . java to prevent potential NullPointerExceptions when v is null
add errorhandlingpolicy to jdtbatchcompiler when there be no classpath
added content alignment point and text anchor properties to LabelBlock and its tests to enhance alignment functionality for better user experience
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
updated the ` fromRfc1123DateString ` method to include a ` Locale . US ` parameter to ensure consistent date formatting across different locales
updated the download method in FileDownloadViaProxyTest to include a file extension to ensure the test verifies the correct file download behavior
add support for output no hits in abstractjsonqueryelasticsearch
change the calculation of the ` aggregationratio ` to ` hours _ in _ month ` in the ` updateQuotaRunningVMUsage ` and `
[ java ] fix switch / cases indentation see http : / / github . com / cincheo / codenameone / issues /
douniaberrada : fix resource leak in readfilesp and streamfilesp
refactor the logic for determining the skipWidget in PageChangeListener . java to simplify the logic for determining the widget ' s visibility based on item
added isWriteProtected ( ) method to Workbook , FileSharingRecord , and HSSFWorkbook classes , and updated username handling in Record
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration to improve error handling and
refactor CategorizationFragment class to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " not reachable " in HueLightHandler . java to clarify that the
add a loading flag to fmlclienthandler . isloading ( ) , close # 74303 ( # 74303 )
updated return statements to include " unit . millions " and " unit . thousands " in UI and BlockInventoryFragment to improve cl
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and
added parameterized tests for query parsing with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure proper functionality
added unit tests for map serialization and deserialization in MapTest . java to ensure correct handling of nested maps in JSON serialization and deserialization
added offsets to the x2 and y2 calculations in GeometryUtils . java to ensure that the coordinates do not exceed the specified offset
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to use SortingOrderDialogFragment to improve code readability and maintain
do n ' t swallow empty plan in standardjmeterengine
updated method names from " dbmsName " , " schemaName " , " schemaName " , " getTableName " , " getTableName " ,
added null check for argIdent before assignment to improve robustness by handling cases where argIdent is null or non - strict mode identifiers
updated the default protocol from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1.1 " to ensure the correct
set displayVolume to true in VolumeVO . java to enable displayVolume functionality by default
modified the version method to accept a boolean parameter and updated log message retrieval to enhance flexibility in versioning functionality by allowing users to specify the
refactor condition checks in ChangeLogParameters . java for improved clarity and functionality to enhance code readability and ensure correct handling of global
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for better debugging
hhh - 14813 skip setoperationtest due to oracle dialect
added startHandshake ( ) and setSoTimeout ( socketTimeout ) methods in SSLSocket . java to ensure proper handshake and socket timeout settings are
updated the calculation of the status bar size in multiple fragments to include a check for MainActivity to ensure correct behavior when the status bar size is
changed the default value of CHA from false to true in EspressoOptions . java and made several classes final in DefaultClassHierarchyOracle
http : / / issues . apache . org / activemq / browse / amq - 4896 - fix threadcontextclassloader
replaced specific imports with a wildcard import and refactored test methods in JodaTimeRangeRandomizersTest . java to improve code read
make backport of webdescriptor to ee8 more reliable
fix : add check for node status in readiness . isready ( )
updated loop variable references from liveEndpoints to handler . endpoints in StorageProxy . java to improve clarity and maintainability of the code
added null and empty checks for creationStatements in IdTableHelper . java to ensure robustness by preventing potential NullPointerExceptions
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of the RPC
added security checks for package access checks in ObjectStreamClass and ObjectStreamField classes to ensure security checks are only performed when the caller class is
removed unused imports and updated return statements in Utils . java , and changed UGSCommandCount from private to private in XLCDCommun
refactor DefaultMetricsTagProvider to return an unmodifiable map of tags instead of an immutable map to improve code readability and maintainability by redu
simonstewart : make the mock browser test a bit more stable
change default level from OFF to ERROR in opt2 from OFF to improve error handling for better user experience
changed several fields to be final in IconNormalizer . java to ensure immutability and improve code clarity
added support for the ` firstCallPrepareDo ` parameter in the ` PrepareInterceptor ` class and updated the ` invokePrefixMethod ` method to
refactor workspace and overview mode handling in Launcher . java to improve clarity and functionality to enhance code readability and maintainability while ensuring
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature . java ` and `
added an ` ignoreInvisibleAssociations ` parameter to the ` incomingAssociations ` method in ` GraphicalDataModelView . java ` to conditionally
cloudstack - 4892 : remove the private ip from the capacity table when delete a pod
improve error message in profile servlet for empty diagram and linux 4.6 +
fix ( core ) : add support for ` ` required ' ' flag to ref field
rename ` CasCoreWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` classes to ` CasCoreConfigurationWatchAutoConfiguration ` and ` Cas
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated the number of unique values in the ` ConfigStore ` class and modified related tests in ` CommonSetup ` and ` CommonSetup ` to
added picture handling in TimeLineCursorAdapter and TimelineArrayAdapter to manage image drawable updates to ensure the image is displayed correctly when the picture
updated configuration messages to clarify compaction behavior in insert - only tables to improve user understanding of compaction behavior during queries
added a null check for the storage path in the waitingToSend condition to prevent potential NullPointerException when the storage path is null
refactor resize condition checks to use a dedicated ` checkResize ( ) ` method across multiple classes to improve code readability and maintainability by
refactor LDAPConnectionService to improve code readability to enhance maintainability and facilitate future updates
marked the ` @ XmlAttribute ` annotation as deprecated in ` AggregateDefinition . java ` to indicate that these elements should no longer be used
removed debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to clean up the code and improve performance
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher to use hits2 and hits3 instead of hits . length to ensure accurate testing of the length of the
added a new file LucenePackage . java to provide a centralized way to access the Lucene package from the Apache Lucene package
corrected the calculation of sizeInBytes in RAMDirectory . java to ensure correct handling of the existing sizeInBytes
updated calculations in StatsRulesProcFactory and added estimate methods in GenericUDAFBloomFilter and GenericUDAFEvaluator classes to improve accuracy of
added a null check for getDrawerToggle in MainActivity . java to avoid potential NullPointerException when getDrawerToggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method in DefaultAuthenticationAdapter . java to improve code clarity and suppress warnings
added logic to determine if the classpath and modules are scanning based on the specified class loader configuration to improve flexibility in scanning specific class loaders and
updated MSBibConverter and MSBibExportFormatTestFiles to include a new getAuthors method for author handling to enhance flexibility in
refactor core recovery cancellation logic into a separate method to improve code readability and maintainability by encapsulating core state management logic
refactor time measurement logic in bug5070081 . java to use a dedicated method to improve code readability and maintainability by encapsulating
simplified conditional logic in RepoEditView . java to improve code readability and maintainability
updated connection parameter messages in PGProperty . java for clarity and consistency to enhance readability and maintainability of the code
added trustResolver , roleHierarchy , and permissionEvaluator to SecurityEvaluationContextExtension and updated SecurityExpressionRoot initialization to enhance security configuration and ensure proper
added a check to set exponentSize based on primeSize in DHParameterGenerator . java to ensure exponentSize is correctly set based on primeSize
replaced direct usage of ` ocLocalFolder ` with a new method ` getUsableSpace ` in multiple classes to improve code readability and
replaced delegate . combine with accumulate for values in DistinctSqlAggregation . java and added a test for the combine method in DistinctSql
added a test method to verify post - login activities execution for a user on successful authentication to ensure proper functionality and functionality of the PostLoginActivities
refactor ExtractorFramesRare to allow dynamic initialization of ExtractorSpanishStrippedVerb and SpanishVerbStripper based on the
refactor CharArraySet to simplify code and improve type checking to enhance readability and maintainability of the code
simplified the check for track types in MuxerWrapper . java to improve code readability and maintainability by reducing redundancy
replaced ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule . java ` and updated asset directory handling in
set the character encoding of the request in PinotClientRequestServlet and refactored string processing in StringDictionary to ensure proper handling of UTF
updated the case name from " Logical Analyzer " to " Logic Analyzer " and removed the applications array from the InstrumentsFragment class to
added instanceClassName and instanceClass fields , and modified vector initialization logic in AbstractVector . java to ensure the vector class is only instantiated if it
removed syncMetaLeader ( ) method from CMManager . java to streamline the leader synchronization process
[ # 2329 ] fix feedbackfeedbackquestiondetail # getperceivedcontributionhtml return empty html instead of empty string
added TestLoggingExtension import and annotated DiagramRendererTest with TestLoggingExtension to enhance test logging capabilities for better debugging
camel - 16462 : fix the issue that camel - ibatis do not work with map mapping .
added a new constant VIOMI _ WATERHEATER _ E1 in MiIoDevices . java to support the new device type
replaced direct calls to getSslSessionData ( ) with a local variable for SSL session data to improve code readability and maintainability by
added a new file CreateNewSpreadsheet . java to implement spreadsheet creation functionality for Excel sheets to facilitate easier testing and testing of
replaced ` Duration ` with ` long ` for time - to - live and updated related methods in ` CacheProperties ` and ` RedisCache
replaced CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper , LauncherModel , and ShortcutInfo
updated the testCompile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to reflect the latest
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java `
added a condition to check if the character ' s length is less than 1 in the DocClassUtil . java file to ensure proper handling of
removed String . format from the return statement in Workspace . java to simplify the code by eliminating unnecessary string formatting
added import for Scope and sent a message if no validation errors are found to enhance user experience by providing feedback when no validation errors are found
updated IntegrationTestContextLoader to configure WebMergedContextConfiguration and added a method to configure web resources to improve resource management and ensure proper servlet context
refactor scroll handling logic in Component and Container classes for improved clarity and functionality to enhance code readability and maintainability while ensuring proper
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures in ` StatsService ` , ` DefaultStatsService ` , and ` StatsService
replaced multiple occurrences of " $ 1 " with " $ \ n1 " in the CellContentConverter . java file to ensure compatibility with
simonstewart : fix a problem with glob matching in the test case
[ mondrian ] fix typo in mondrianproperties . java
added stack trace printing in ProcessTools . java and updated launcher permission handling in CustomLauncherTest . java and LocalManagementTest . java to enhance
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the code by eliminating unnecessary test
added a conditional check for symbol slot before converting to the method to ensure that conversion only occurs when the symbol has a slot for the store type
refactor code to streamline the handling of nextLoadPosition in ContainerMediaChunk and InitializationChunk classes to improve code readability and maintainability
added UTF - 8 encoding handling in BaseLockFactoryTestCase to ensure proper output stream formatting for better debugging
tika - 1188 -- add support for dynamic service loader in tikaconfig . xml .
added JavaFileObject handling and improved code formatting in DocLint . java and DocLintTester . java to enhance code clarity and ensure
added a new constant IMPORT _ CMD and modified the conditional check in DataImportHandler and DataImporter to include it to enhance command handling by allowing
added a test to verify that inner classes are not modified when ignoreDefinition is true in ChangeTypeTest . java to ensure that inner classes are
removed unused import of Log in JettyService . java to streamline code by eliminating unnecessary dependencies
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to handle workspace screens
added a new servlet for the " / quitquitquit " endpoint in the Jetty7AppServer and created a KillSwitchServlet class to
add a transformed row to the list of transformed rows in LLRealtimeSegmentDataManager . java to enhance the accuracy of realtime segment processing
added a check for Windows OS to skip processing Teredo in Tests . java to ensure compatibility with different operating systems for Teredo
add an error dialog if a contact be not register and the protocol provider be not register in the add contact dialog
replaced ` getReaderContext ( ) . getRegistry ( ) . registerBeanDefinition ` with ` BeanComponentDefinition ` in ` AuthenticationConfigBuilder .
updated the drawBitmap method to use a null parameter instead of a left and top to simplify the drawing process by removing unnecessary parameters
fix date ( fix ) : fix typo in totem protocol decoder
changed access modifiers of ` getFontPath ` methods in ` SunFontManager ` and ` X11FontManager ` classes from public to protected to
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
[ hotfix ] [ test ] fix clientmapstoretest . testreachedmaxsizeexception to throw more specific exception
add keepemptysentences option to documentpreprocessor , maxenttagger , maxenttagger , and taggerconfig . ( #
added error handling for directory creation failures in MavenArtifactFetcher . java to improve robustness by providing clearer error messages when the directory creation fails
removed unused imports and refactored the ` IDELazyTreeLoader ` class to use a singleton pattern to improve code clarity and ensure
added a null check for the ' answer ' variable in DirectAgentAttache . java to avoid potential NullPointerExceptions when ' answer ' is null
refactor sendEmail method to throw MessagingException instead of a try - catch block to improve error handling and maintainability of the email sending process
fix npe when pipe itemsobidian be null
refactor date math parsing methods to accept a Locale parameter to enhance flexibility by allowing locale - specific parsing
added a boolean field ` includeDecals ` to the ` StorageOptions ` class and integrated it into ` StorageOptionChooser ` to allow users
updated the ` generateDocumentation ` method to include an additional ` null ` parameter and added a suppression warning in the ` getImplementedDatabases `
added performance logging functionality and improved test cases in HiveProtoLoggingHook and TestHiveProtoLoggingHook to enhance performance tracking and ensure accurate
updated log messages in SolrIndexConfig and DocExpirationUpdateProcessorFactory to improve clarity and consistency in log output
updated the version check message in ignoreRecordAttribute . java to include the current version of the class file to ensure accurate validation of class file version
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP password authentication functionality to ensure proper functionality and validation of password authentication in LDAP
updated import statements in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to improve clarity and maintainability
fix nullpointerexception when reload on save
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future updates
fix ( kubernetes - kubernetes - api ) : add support for terminal exception
added a condition to check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of dynamic number columns in Sparklines
added null checks for groupId , artifactId , and version in ResolvedGroupArtifactVersion constructor to enhance code robustness by preventing potential NullPointerExceptions
updated the assignment of the ` api ` variable to handle null cases when ` apiInfo ` is null to improve robustness by avoiding potential
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added shader loading and disposal functionality in PhotoPanel and FlameRenderer classes to improve texture management and ensure proper cleanup of texture resources
updated scene parameters and added context menu functionality in InsnListEditor , InsnProxyListEditor , and InsnProxyListEditor classes to
refactor conditional checks in CSSParser . java for better readability to enhance code clarity and maintainability
added a boolean property ` isDecorated ` to control the appearance of JFrame and JDialog based on application properties to enhance user interface
removed the ' this ' keyword from the SQL query in HostRoleCommandDAO . java to simplify the SQL query and improve code readability
updated F2 _ TEST and F5 _ UNKNOWN to F5 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRANSPON
refactor swipe handling logic in WindowTransformSwipeHandler to use a boolean variable for better clarity to improve code readability and maintainability
changed mHostDb from HostDatabase to ColorStorage in ColorsActivity . java to utilize ColorStorage for better color management
refactor String class for improved readability to enhance maintainability and clarity of the code
removed unused SLF4J logger imports and initialization across multiple Java files to improve code clarity and maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide access to global entries from the map
added assertions to verify the sendcoin method in PublicMethed to ensure that the sendcoin method correctly handles blocking stubs
updated JUnit imports and assertions in CUFilterTest . java to use the correct Jupiter API for testing purposes
use system . getproperty ( ` ` path . separator ' ' ) instead of hardcoded ` ` ' '
changed the visibility of the augmentSuccessViewModelObjects method from static to instance to allow subclassing of the augmentSuccessViewModelObjects method
added assertions to verify presence of the existence of properties in the Metamodel for the Person class to ensure that the property ' s existence is correctly
removed the ` conf ` parameter from the ` Outlink ` constructor in multiple parser classes to simplify the Outlink initialization by eliminating unnecessary
removed the ` LexicalContext ` parameter from several methods in ` Lower . java ` and ` FunctionNode . java ` to simplify method signatures
added modifiers to the return statement in UseLambdaForFunctionalInterface and modified type expression handling in TypesInUse to improve code clarity and ensure
replaced ` appendClassSelector ` with ` createFileSet ` in ` TestNGAntTask . java ` to streamline file set addition logic
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary
added a pool field to the Mapping class and updated its usage in RegistryEvent . java to enhance registry management by associating the registry with the
reformatted the assignment of x3 and y3 assignments in Intersector . java to improve code readability and maintainability
added default methods ` sbeDecodedLength ` , ` sbeLimit ` , and ` sbeLimit ` to ` MessageDecoderFly
updated ElasticsearchContainerTest to use a constant ELASTICSEARCH _ VERSION and added a new test method for restClientClusterHealth to improve clarity
[ java ] use bytebuffer . copy ( ) instead of bytebuffer . parse ( ) in workreceiver
added version ID handling and updated cluster definition initialization in ClusterDefinition . java and GSInstallerClusterProvider . java to improve clarity and consistency
camel - 14263 : camel - ftp - remove unused method from camel - ftp
[ zeppelin - 2852 ] download interpreter dependency from zeppelin to zeppelin - 3
modified the local assignment logic in ` Gen . java ` and added a new test class ` NoLocalsMustBeReservedForDCEed
added a check for basic constraints in ` ForwardBuilder ` and created a new class ` BuildEEBasicConstraints ` to facilitate certificate
added database initialization logic for PostgreSQL connection in JdbcPostgresqlDAO to ensure compatibility with PostgreSQL versions below 9.5
updated WebSocket connection buffer settings and added validation for input buffer size in AbstractWebSocketConnection to ensure proper handling of buffer sizes and prevent runtime errors
lucene - 4892 : remove undeleteall and rollbackundidocs from segmentreader , and add a test to prevent double write
added null checks for scopes in ClientRegistration and updated corresponding test cases in ClientRegistrationTests to enhance robustness by preventing potential NullPointerExceptions
added null checks for orderBy and explanation in CartesianProductStream . java to avoid potential NullPointerExceptions when orderBy is null
[ java ] use hamcrest assertion instead of junit in clusterentrypointtest
cloudstack - 4892 : remove unnecessary check for back - up state in vm snapshot
added a debug log statement for the HiveLog4j initialization to facilitate debugging by tracking the initialization of the log4j message
added a check for non - empty tasks before processing to avoid unnecessary processing when no tasks are available
pubsubmanager . deletenode ( ) should return true if the delete operation fails
[ iotdb - 4892 ] fix npe in gettimesearchpagespec ( ) and gettimesearchpagespec ( ) (
added checks for empty result strings in Code128Reader , Code39Reader , and falsePositivesBlackBoxTestCase classes to ensure proper error
replaced TreeSet with LinkedHashSet in SSLContextImpl . java to ensure consistent ordering of cipher suites
updated control character validation in Escaper . java and corrected a typo in InternationalizationTest . java to ensure proper handling of control
changed the type of ` providerMethod ` from ` String ` to ` CharSequence ` in ` ProviderSqlSource ` and ` SqlProviderTest `
added null checks for aliasChildren in InternalMNode . java to ensure proper handling of null values and avoid potential NullPointerExceptions
added a method to calculate the layout transition offset based on a page index in PagedView . java to improve the handling of page scrolling by
renamed variables and methods in JavaTemplate . java for clarity and consistency to improve code readability and maintainability
added a setAccessible statement to the WidgetInterceptor class to ensure method accessibility for better encapsulation
added a condition to check if the field ' s raw name is not " database . server . id " before setting the literal initializer to ensure
updated the Mozilla version from 20100101 Firefox to Windows NT 10.0 in AbstractRipper . java to ensure compatibility with the
added a web interface menu item to display the server ' s host in the popup to enhance user experience by providing access to the server ' s
refactor HandleGetter and HandleGetter to use a configurable value name for better clarity to improve code readability and maintainability by centralizing
added error handling for record building in EncryptedSlideShow . java to improve robustness by handling potential ArrayIndexOutOfBoundsException
[ iotdb - 4892 ] improve debug log for queue and filecheckpointio
added a call to loadBattlePassManager ( ) before avatar postLoad to avoid null pointer exceptions during avatar loading
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified command line options in PortForwardingContainer . java to
added a large array and called System . gc ( ) in ThresholdTest . java to force a full - gc to ensure proper garbage collection of
updated logging conditions in StdErrLog . java and added new test assertions in StdErrLogTest . java to ensure proper logging behavior and validate
fixed - rremoteserivce method invocation with service name . # 3893
added methods to manage the " selected " state of the RadioButton and CheckBox classes to enhance the functionality of the RadioButton component by allowing
updated the intent from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to reflect the correct functionality of the NextUpActivity
reformatted code for better readability in BrokerController . java to improve maintainability and readability of the code
refactor RedisHealthIndicator to utilize ReactiveRedisConnection for connection management to improve resource management and ensure proper cleanup of Redis connection resources
refactor background color handling in ProgramGridCell and Utils classes to use a resource ID to improve code clarity and maintainability by centralizing
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
refactor type adapter registration in ToolingApiLauncher . java to improve code readability and maintainability
updated test cases in TestPayloadCheckQuery . java to improve test coverage for payload check functionality
refactor ConsoleReader to simplify character printing logic and add a new test for reading strings with a mask to improve code readability and ensure correct
added user identification and command line information in BaseCommand . java to enhance user experience by providing context - specific information during command execution
move modulesupport from graalvm . compiler . test to graalvm . compiler . api . test
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
updated the condition for creating Java9Specific in StreamExInternals and modified the dropWhile logic in StreamExTest to ensure compatibility with Java
updated texture paths from " wheel . png " to " sys . png " and adjusted songDuration from 22 to 8.12 . ogg
refactored the registration and unregistration of the close system dialogs receiver in Launcher . java to improve code readability and maintainability
updated import statement for Cluster in HostsRemovedEvent . java to improve code clarity and maintainability
added support for introspection endpoint in ClientDetailsEntity and updated related error handling in IntrospectionEndpoint and ChainedTokenGranter to enhance
added HTML encoding for session attributes in HtmlSessionInformationsReport . java to ensure proper handling of special characters in session content
updated link annotations in Query . java to include " PhrasePrefixQuery " and " SpanQuery " to improve clarity and organization of query
replace size ( ) = = 0 with isEmpty ( ) in CommentsInserter . java and CommentsParser . java to improve code readability
refactor NoValueOfOnStringType to simplify string type checks to improve code readability and maintainability by reducing redundancy
updated method signatures in AbstractAssert , DateAssert , ExtensionPoints , and ExtensionPoints to use Object types instead of A to enhance type safety and
updated the ThrowingFunction interface from ` ThrowingFunction ` to ` ThrowingFunction ` and modified import statements to use generics to enhance type
added getUploaderBehaviour ( ) and setUploaderBehaviour ( ) methods to AppPreferences and PreferenceManager classes to streamline preference management and
fix ( targetedexpression ) : fix npe in typefactory . getelements ( ) ( # 1748 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s flexibility in
corrected a typo in the method name from ` isValidSEnding ` to ` isValidEnEnding ` to improve clarity and consistency in
updated PageMarkerResources from ic _ pageindicator _ add to ic _ pageindicator _ current to improve the clarity of the page indicator '
added a counter for reinvocations and updated backups completion logging to track the number of backups completed during backups processing
updated calculations for topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to ensure proper layout
added a break statement to the break statement in Recognize . java to ensure proper flow control during the loop execution
added preference management and haptic feedback functionality to multiple classes to enhance user experience by allowing users to lock the home screen during drag operations
updated cell type checks in ExcelBatchReader . java and added new test cases in TestExcelFormat . java to improve handling of numeric and float
fixed bug 1244443 - immutablefield no longer report a warning for assignment in anonymous inner class .
added an ` userAgent ` field and updated the user agent assignment logic in ` CommaFeedConfiguration ` and ` HttpGetter ` classes to ensure
added the ' required ' attribute to the XmlAttribute annotation in AvroDataFormat . java to ensure that the XML attribute is required for proper XML
changed log level from info to debug for file not found messages to reduce log verbosity for better debugging
rename ` QueueTest ` to ` QueuedPipeTest ` to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use OfflinePlayer ' s getUniqueID method to ensure compatibility with newer server versions and
camel - 16462 : camel - core - optimize defaultroutscollector to avoid npe
added a vertexColor property and modified color handling in PShape3D . java to conditionally enable colors based on the vertex ' s color
updated ` printForeignKeys ` method to include ` isPkColumnFiltered ` parameter and modified related logic for foreign key printing to support primary key filtering
removed the import of ShadowMatrix and simplified the way matrix values are retrieved in ShadowMotionEvent . java to improve code clarity and maintainability
updated package structure and import statements for MetaRules and PythonDslProjectBuildFileParser classes to improve organization and clarity of the codebase
simplified the class definition logic in GroovyEngine . java to improve code readability and maintainability by eliminating unnecessary logic
change package of BrandingServlet from ` io . hawtio . web ` to ` io . hawtio . plugin
removed redundant line breaks in NativeCodeGenerator . java to improve code readability and maintainability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve
added unit tests for expected exceptions with different types in ThrowableAssert _ hasCause _ Test . java to ensure correct behavior of the hasCause method
removed redundant variables ` flatten ` and ` pack ` from ` AutomaticDependencies . java ` to streamline code by eliminating unnecessary variable
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in variable naming
danielwagnerhall : add test for firefoxoptions . setprofile ( ) and firefoxdriver . setcapabilities (
camel - 14263 : camel - jbang - allow to configure route description . thanks to david for the patch .
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a method to set the weight of the edge in ImporterCSV . java to ensure the edge ' s weight is set correctly for better
updated the handling of the cost per month in QuotaManagerImpl to use a dedicated method for retrieving the tariff cost per month to improve
updated SQL query parameters in DatabaseMetaData . java and DatabaseMetaData . java to use adsrc instead of table name and column name patterns to ensure
added a null check for binarized sentence in SentimentAnnotator . java to ensure that an AssertionError is thrown when the Binarized
added detailed user authorities information to the return statement in User . java and updated tests in UserTests . java to enhance debugging information and ensure
updated the body extraction logic in MessageHelper . java to handle null messages gracefully to improve error handling and provide clearer feedback when the message body
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory # fromexecutionvertex to execution
refactor rosteraccess . cansubscribe ( ) and rostermanager . isgroupvisible ( ) to be more generic .
added " maven . test . classpath " reference in AbstractJRubyMojo and removed unchecked suppression in CucumberMojo to
refactor MethodHandleImpl to simplify type handling and add a new user method test in MethodHandlesTest to improve code clarity and ensure correct
added imports for StopFilterFactory , AnalysisSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , and LegacyHTML
updated width and height checks from " > " to " ! = " in URLImage . java to ensure that the image dimensions are not equal
added a condition to check if the class name starts with " META - INF / " and modified the logic for appending package names to ensure that
added final modifiers to parameters in ` createImageToFileSystem ` , ` createImageToStorage ` , and ` createImageToStorage ` methods to ensure that
updated the expected number of values in StackWalkerTest from 3 to 4 and modified the log message formatting to ensure compatibility with version checks and improve
changed the access modifier of the addViewportJob method from protected to public to allow external access to the addViewportJob method
removed the partitions parameter from the buildFlow method and related tests to simplify the method signature and improve code clarity
removed server restart settings and checks in TestDatabase . java to streamline server shutdown process and enhance test reliability
added null and empty checks for block in NodePathsConvertOperator and modified child iteration logic in SchemaQueryMergeOperator to improve robustness by prevent
added a method to retrieve the total harvesting time in multiple classes to provide a clearer way to retrieve the total harvesting time
updated font drawing parameters in ParticleEditor . java for improved rendering accuracy to enhance the visual appearance and responsiveness of the particle
added logic to update configuration properties based on " hadoop - env " and " keyserver _ port " in UpgradeCatalog240 . java to ensure
added a transparent background color to the SvgViewerFactory to enhance the visual appearance of the SVG viewer
removed minSdk parameter from the @ Config annotation in ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to simplify the annotation
refactor ` containsExactly ` method to use ` asList ` instead of ` accumulate ` for improved clarity to enhance code readability
updated Bucket4jFilterFunctions to use capacity and refillGreedy instead of simple and added a check for non - empty key to
updated GermanAnalyzer , GermanStemmer , and WordlistLoader files for improved clarity and consistency to enhance code readability and
added hook functionality to the Generator class to conditionally evaluate lineage transformations based on query hooks to enhance performance by allowing lineage evaluation based on query hooks
added exception handling for NoClassDefFoundError and set supported to Boolean . FALSE to ensure proper handling of NoClassDefFoundError and prevent
refactor TraceFilter and TraceWebFluxTests to use SpanAndScope for better span management to improve code clarity and maintainability by
added a null check for the cause before setting the exception message to avoid potential NullPointerException when the cause is null
updated SolrServerException to include the base URL to improve error handling by providing the base URL for SolrServerException
modify landscape setting and return logic in HSSFPrintSetup . java to ensure correct behavior when landscape is not set
added null check for the variable ' o ' in JavaVoidObjectInspector . java to ensure robustness by preventing potential NullPointerExceptions
added validation for argument names in ArgDesc . java to ensure that invalid arguments are provided to avoid runtime errors
added background location handling in AndroidLocationPlayServiceManager to manage location updates more effectively based on activity context
updated the conditional check for primitiveType in MeshBuilder . java to simplify the condition for better readability and maintainability
trufflestring : do n ' t use length ( ) to check for byte [ ] array
added a method to set the command list in the ComboBox class to enhance command list functionality for better user experience
nifi - 5696 : escape alias filename with forward and backslashes .
updated the ZkCLI command to use zkhost instead of a hardcoded value to improve flexibility and maintainability of the command execution
updated comparison methods in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` equals ` instead of ` equals
added a conditional check for remoteGrpcStatus before posting the console event to avoid unnecessary logging when the remoteGrpcStatus is OK
reformatted code for improved readability and consistency across multiple Java files to enhance maintainability and adhere to coding standards
added a new entity id to the tick entity check in ForgeChunkManager . java to ensure that a valid entity ID is added to the
added error handling for invalid GLSurface errors in GLSurfaceViewAPI18 . java to improve user feedback by providing clearer
added a method to retrieve supported locales in FeatureRegistry and improved error handling in InfoRequestHandler to enhance locale management functionality and provide clearer error
updated server URI handling in RFC2616BaseTest . java to use " HTTP : / / myhost : 1234 / tests " instead of
added a call to addToHelperList ( ce ) in Construction . java to facilitate the handling of helper lists in the code
added a condition to skip the first character " [ " escape sequence . " in GlyphLayout . java to optimize processing by skipping the first character
added security permissions for setting context class loader in Transport and TCPTransport classes to enhance security by ensuring proper context class loading during security checks
added null checks for the folder before populating the directory list in ReceiveExternalFilesActivity . java to ensure that the folder is not null before
fix npe in testng when service loader classloader be n ' t set
removed debug logging statement in BarrowmanCalculator . java and adjusted the deltap calculation in TubeCalc . java to simplify the code and
updated column assignment logic for node and edge tables in TimelineControllerImpl . java to ensure correct column assignment based on instance type
added a method to register extra components in BaseBrokerStarter to facilitate the registration of extra components for the broker admin application
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to validate the functionality of SQL
change peergroup . candidates to use a linked list instead of a list to improve performance and maintainability of the code
fix an issue with the abstractbuilder not be able to update the tile . close # 424
updated the consensus snapshot trigger threshold handling to use a Supplier for RatisConfig to improve flexibility in configuring ratis retries based on
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a conditional check for the ManagedService annotation before registering JMXHelper to ensure JMXHelper is only registered when the ManagedService annotation is present
tika - 1188 -- add support for non - unicode entry name in packageparser
added a new file TestSplitThruPhiDivMod . java with two test methods for division and division operations to verify the behavior of division
added methods to lookup generic type and superclass types in TemplateRegistry . java to enhance flexibility in handling generic type resolution based on generic types and
increased the initial capacity of the ByteArrayOutputStream constructor from 512 to 1028 to increase memory usage for better performance
added comments to the ` languagesExcluded ` array in ` PlayerSettingsScreen . java ` to clarify the availability of various language symbols in
modify byte array initialization and fireOnBytesSent logic in TransferCompletionHandler . java to handle larger bytes more efficiently to improve memory management and
move windowfocuslistener to windowadapter so that it can be use
added null check for the source node before throwing SemanticException to prevent potential NullPointerException when the source node is null
added scaling functionality to the aabb in SkeletonRenderer . java to enhance the rendering ' s visual representation by incorporating scaling factors
added getSolrHome method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes and set it in BaseDistributedSearchTest
added ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the Spring Web configuration
removed the ` getAccount ( ) ` method from ` UserListItem ` to streamline the code by eliminating unnecessary functionality
added unit tests for installing package information in ShadowPackageManagerTest and modified package name assignment logic in ShadowPackageManager to ensure proper handling of
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added TransactionCapsule initialization and finalize methods to TransactionTrace class to facilitate the management and management of transaction transactions in the application
add client property to allow member connection order to be shuffle
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
updated fetch size handling to use ThreadLocal for thread safety to improve performance and ensure thread - safe access to fetch size
changed the method name from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the
removed unused import of ExecutionContext in TaskletStep . java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure a default value is used for the title variable
added empty body handling in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response body is not null in the
[ java ] deprecate embeddedserverinstance and deprecate it
use reflection to register macevents in jabrefframe .
renamed SecurityTokenServiceAuthenticationMetaDataPopulatorTests to SecurityTokenServiceTokenFetcherTests and updated related references to improve clarity and consistency in
added a return statement to the ` toEnum ` method in ` HandlerLibrary . java ` to ensure that the ` toEnum ` method is
made the ` hideUnprivilegedObjects ` variable final in ` PgConnection . java ` to ensure that the ` hideUnprivileged
change log level from info to fine in ThreadedAcousticScorer . java and improve batch file handling in AudioDataSourcesTest
added support for saving Giphy Android 11 video URLs in IOUtils . java to ensure compatibility with Android Q and improve video loading functionality
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 576 : fix
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced manual logging instance retrieval with a computeIfAbsent method to simplify the code and improve readability
hbase - 2696 remove unused dataoutputoutputstream from hbaseobjectwritablefor96migration
updated transaction IDs and bucket IDs in TestAcidOnTez . java to ensure correct row IDs are stored in the database
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity and improve performance
added a static method to retrieve the default provider name and updated JSSE _ PROVIDER _ NAME to use it based on the platform type to
added imports and implemented Captor annotation processing in MockitoBeforeTestNGMethod . java to enhance functionality for processing Captor fields in
added validation checks for class and method names in TestSuiteBuilder . java to ensure that only enabled classes and methods are present to improve error handling
refactor GroovyAutoComplete and GroovyLanguage classes to improve prefix handling and enhance code clarity to enhance code readability and maintainability while ensuring
use osm instead of graphhopper in import . java ( # 1748 )
simonstewart : use a config object for the client with retries
changed the ` mHideSysUiScrim ` variable from final to non - final and added functionality to manage the visibility of the shadow
added cancellation handling in OkHttpCall and OkHttpCall classes to ensure proper cancellation of calls before execution
refactor swipe handling logic in WindowTransformSwipeHandler to use a boolean variable for better clarity to improve code readability and maintainability
updated the RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to enhance security by integrating
added a new condition to the DeferredAttr class and created a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` with
[ j2kt ] update integration test for j2kt and j2kt
added unit tests for applying qualifiers with default and density in DeviceConfigTest . java to ensure correct handling of display metrics with different density configurations
replaced IOException with RuntimeException and updated timestamp calculation in ExternalViewReaderTest , PinotDataTypeTest , and PluginClassLoader to improve error handling and
updated the icon resource used in RootCursor from logo to mipmap . ic _ launcher to improve visual clarity by using a more appropriate
added content text setting for error builder in FileUploader . java to enhance error handling by providing clearer error messages
refactor ConcurrentHashMap class implementation to improve performance and maintainability of the code
added methods to adapt user trades and order data in the Abucoins API to enhance trading functionality for better trading functionality
updated plot removal logic in Claim . java and modified clearAsPlayer method call in Delete . java to ensure plot removal only occurs when the plot
[ java ] add proxy support to htmlunitdriver for firefox , firefox , and internet explorer
added handling for VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY data types in the application
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5581 - check for
added synchronization around the cache type assignment in LibFFIContext . java to ensure thread safety when accessing shared resources
updated InboundBuffer to use VertxThread instead of Vertx for context handling to ensure compatibility with Vert . x threads and improve error handling
updated timeout settings and added a new test for dead server timeouts in LdapTimeoutTest . java to improve test reliability and ensure timeout behavior is
corrected a typo in the usage message from " UniocdeData . txt " to " UnicodeData . txt " to ensure
camel - 15836 fixed the test error of cxfmessageheadersrelaytest
refactor multiple UI classes to improve code organization to enhance maintainability and readability of the codebase
added handling for BoosterSet in ComponentAssemblySaver and modified BoosterSet ' s return value in BoosterSet to ensure proper boost
add proxy proxy support to jabref
corrected the spelling of " BLOCKCHAIN __ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT " across
replace an InternalError throw with a return statement that returns false for JEP 359 support to ensure compatibility with JEP 359 support and
updated logging imports and refactored logging statements in TestIPCUtil . java to improve logging consistency and maintainability
removed chunked transfer handling from NettyRoutingFilter . java to simplify the code by eliminating unnecessary transfer encoding logic
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper attribute handling during parsing
refactor VerificationAfterDelayImpl to include a polling period and improve error handling to enhance verification flexibility by allowing customizable polling behavior
added compaction handling and session state management in multiple classes to enhance security and control over compaction behavior during query processing
[ zeppelin - 4892 ] [ zeppelin - 4892 ] fix zeppelin
reformatted code for better readability and consistency in HBaseAdmin . java and TestThriftServer . java to improve code maintainability and clarity
added an @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated calcXBounds methods in BarLineChartBase , CombinedChartRenderer , and Renderer classes to correctly calculate minimum and maximum chart bounds based on
added a try - finally block to ensure the reader is closed properly to ensure proper resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` for testing the ` UseDiamondOperator ` functionality to ensure
added null and closed check before closing the ResultSet in JdbcExecutor . java to ensure proper resource management and prevent potential resource leaks
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest driver
fixed bug 1244443 - usestringbufferlength no literal be always empty .
removed error logging from RemoteSparkJobMonitor . java to simplify error handling by eliminating unnecessary logging
updated the createDb ( ) method to return a connection object instead of void to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 25941 add a config option to limit hstore compaction max size
added handling for " address " in BitstampDepositAddress and created DepositAddressJSONTest class to improve deposit address unmarshalling
replace IllegalStateException with response . abort in BufferingResponseListener . java to ensure proper handling of buffer capacity issues
updated the condition to check for absolute paths in the deleted directories check to ensure correct handling of paths in deleted directories
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and replaced ` operationType ` with ` invocationType ` in ` DefaultMetricsRegistry `
refactor network interface retrieval to use a while loop for better readability to improve code clarity and ensure proper handling of multicast support
refactor code to use a loop for validating CheckSum instances to improve readability and maintainability of the code
added a clone method to the BufferedChecksumIndexInput class to ensure that the Clone method does not throw an unsupported operation
replaced Math . sqrt ( x * y + y * x + y * y ) with radius * radius * radius in Circle . java
updated frequency band assignment logic in P25Channel . java and added @ Override annotations in P25ExplicitChannel . java to ensure proper handling of
renamed ` tapSquare ` to ` tapRectangle ` in ` GestureDetector ` to improve clarity by using a more descriptive variable
set default repallow _ on _ write to false by default
added a new query parameter " lastFillTime " to the CryptoFacilitiesAuthenticated API and implemented date formatting in Util to enhance functionality by allowing
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests in ` TraceCallable ` and
refactor error handling in FileActivity and FileDisplayActivity to improve clarity and functionality to enhance user experience by providing more informative sync events
added stream writable functionality to ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to ensure that the quiche
added a boolean parameter ` true ` to the method call in ` JavascriptContext . java ` to enhance functionality by allowing the method to be executed
removed the padding from the TableCell constructor parameters in BaseTextFormattingHelper . java and TableCell . java to simplify the TableCell instantiation by
added a new file ` TracingAutoConfiguration . java ` to define tracing bean configuration to facilitate tracing capabilities in the application
added a new variable ` secondP ` and updated the addContent method in ` Submissions . java ` to include a Para object to enhance
updated the ` getPrunedQueryableSegments ` method to accept a list of queryable segments instead of a single queryable segment to improve
updated VertxBufferTest . java for improved buffer handling to enhance performance and reliability of buffer operations
refactor date extraction logic in MessageSubmissionChunk . java and add unit tests in AllHSMFTests . java to improve accuracy of date extraction
changed mContext from private to protected in PredictionAppTracker . java to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to include ` WriteResult ` and ` ActionOperation ` to
[ hotfix ] fix checkstyle violation in jobcoordinationservice
replaced the ` bitsToHumanReadable ` method with a new ` bytesToHumanReadable ` method and added a new ` mimeType2H
removed conditional check for TieredMergePolicy in TestUpgradeIndexMergePolicy . java and added a test method in TestMergeOnFlushMerge
added a conditional check to return early if overview state is disabled to improve performance by avoiding unnecessary processing when overview state is not enabled
updated error log link in CpuNDArrayFactory . java to reference the correct documentation to clarify that binaries cannot run on a CPU
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for context initialization to enhance flexibility in handling different input streams during
added null checks for input parameters in FilterTermsEnum constructor to ensure robustness by preventing NullPointerExceptions
add defaultSecretKeysizeprovider to aes 128 / 192 key size for jcecrmfencryptorbuilder
updated IOException to use getMessage ( ) instead of getMessage ( ) in NetSocketReader . java and removed redundant constructor in SoftEndOfStreamException .
replaced ` @ Inject ` annotations with ` @ Inject ` annotations across multiple Java files to improve dependency injection performance and reduce unnecessary dependencies
updated assertions in ` BundledDistributionTest ` and ` PostgreSQLTest ` to reflect changes in database user attributes to enhance test coverage and ensure correct
[ hotfix ] [ stream ] add pipeline . name configuration to streamexecutionenvironment
updated scaling logic in OverviewState . java to differentiate between two - panels and device profile dimensions to ensure correct scaling based on device
refactor IcePlainsBiome to extend SnowyBiome instead of GrassyBiome and update populators to use
removed the zone parameter from the getMaxTime and getMinTime methods in DataUpdateManager . java and StorageUtils . java to simplify time comparison logic
[ j2kt ] add the isqualified flag to the this reference .
xhamster ripper now accept w / w / w / w / w / xhamster .
fix npe in glowworld . getall ( ) .
hhh - 14663 fix oracledialect to use ` ` . ' ' instead of ` ` . ' '
fix checkstyle issue in console filter .
added a ` mNumberOfAllFiles ` variable and modified constructors in ` FileMenuFilter ` , ` FileListListAdapter ` , and `
[ java ] fix term offset calculation in network publication .
refactor GuildUpdateOwnerEvent class for improved clarity to enhance maintainability and readability of the code
fix an issue where portal tick be too long than 80 .
added support for compressed data in ClusterMonitorTileSkin and updated chart pane spacing calculations to improve visual clarity and maintainability of the visual representation
refactor ResponseTemplate , TransactionalListCodecTemplate , TransactionalMapCodecTemplate , TransactionalQueueCodecTemplate , and TransactionalSetCodecTemplate classes to improve
changed data types of ` lengthDataBits ` and ` fewerThan24bits ` from ` int ` to ` long ` in ` Base64
removed the condition that checks if the renderer is null in RendererConfiguration . java to simplify the condition for better readability
cloudstack - 4892 : do n ' t change disk offering when scale cpu and memory of vm with custom service offering be
replaced wildcard imports with specific imports in HitbtcAdapters . java and updated Order . Builder to use LimitOrder . Builder instead of
corrected the spelling of " consecutiveIdleCount " to " idle " in LLRealtimeSegmentDataManager . java to ensure accurate tracking
updated the label of the JRuby Scripting service from " jruby " to " jrubyscripting " to align the service with the
replaced the variable ` name ` with a variable ` displayName ` for clarity to improve code readability and maintainability by using a more
updated the condition for preciseExchangeAmount in ParticipateAssetIssueActuator . java to include a check for non - negative values to ensure
simplified the loop condition in FeedUtils . java to improve code readability and maintainability
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 file parsing to ensure compatibility
added a new constant ` CALCITE _ 6092 _ FIXED ` and modified test cases in ` SqlOperatorTest . java ` to
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintainability
added methods to quiet closing all AutoCloseable instances in CloseHelper . java to improve resource management by allowing better control over closing of resources
replaced variable assignment for ` posBtn ` with a constant value ` common _ yes ` in ` RemoveFileDialogFragment . java ` to
added null checks before drawing images in Pixmap . java to avoid potential NullPointerExceptions when drawing images
replaced ` ReflectionHelpers . callInstanceMethod ` with ` Unsafe . class . getMethod ` for better reflection handling to improve code clarity and
updated the regex pattern for hostname validation in GUIUtil . java and added corresponding unit tests in GUIUtilTest . java to ensure correct validation of
replace boolean conflict variable with long conflicts in CachedRowSetWriter . java to improve clarity and efficiency in handling conflicts effectively
fix version cache for pubspec . yaml and pubspec . yaml file ( # 1748 )
added a conditional check for reference equality in ReferenceMemory . java to ensure that reference is only assigned when the reference is equal to the current instance
added seed file injection logic and improved error handling in Injector . java to enhance dependency management and provide clearer error messages for missing input files
added a condition to hide the original view in FloatingIconView . java to ensure the original view is hidden when the original view is not
updated maxNodes and maxTrips calculations in DefaultLoopPolicies . java to ensure maximumDesiredSize does not exceed the specified maximum capacity and prevent
added support for texture coordinate types in CombinedTexture and UVCoordinatesGenerator classes to improve error handling and provide clearer logging when texture coordinates are
added error logging for file deletion and improved input validation in multiple classes to enhance error handling and ensure proper input validation
[ hotfix ] [ runtime ] add close ( ) method to tracingconsumer and tracingproducer
updated SQL update statement to use oldPrefixLength instead of locate to improve accuracy of prefix handling in query execution
removed the addition of a collection to the convertedValsList in JSONSerializer . java to simplify the code by eliminating unnecessary collection addition
added a deprecated constructor to the AbstractTimer class to indicate that the constructor is outdated and should no longer be used
added a nightly build warning dialog to the MainWindow to inform users when the version of Universal Gcode Sender is nightly build
added a check for GENERAL _ QUESTION in teamName and modified the getResponsesSortedByRecipient method to accept a boolean parameter to
updated return statement in UnnecessaryThrows . java to correct a typo to improve clarity of error messages for better debugging
deleted the CacheApplication class and updated references from ` CacheController ` to ` CommonsApplication ` to streamline the codebase by eliminating
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated configuration update logic for devices running KitKat and above to ensure compatibility with newer Android versions and improve configuration management
added a constant for the ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` in ` VersionDefinitionResourceProvider `
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
add null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during processing
added package access checks for XML resolver helpers and readers in CheckPackageAccess . java to enhance security by restricting access to XML resolver functionalities
rename ` save ` and ` persistExecutionContext ` methods to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity
added logic to handle LoopExitNode instances in GraphUtil . java to ensure proper input processing for loop exit nodes
updated RecyclerView references to WidgetsRecyclerView in SearchAndRecommendationsScrollController . java to improve layout consistency and ensure proper handling of
added a check to ensure the terminal is supported before proceeding to avoid potential errors when the terminal is not available
updated time handling in CloudExitableDirectoryReaderTest and LBHttpSolrClient to use Integer instead of Long to improve flexibility in time
added session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure proper session validation and improve test coverage for session management
refactor column name handling in ChangedIndexChangeGenerator . java for clarity to improve code readability and maintainability
changed the type of ` buttons ` from ` Vector ` to ` ArrayList < RadioButton > ` and updated its usage throughout the code to
updated UserManagerCompat , UserManagerCompatVL , and UserManagerCompatVN to extend UserManagerCompatVM instead of UserManagerCompat
added methods to retrieve database major and minor version in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and updated ReorganizeTable
updated ActionGraphCache . java to utilize a new constant for maximum mismatched rules and improved error messaging to enhance code clarity and
added two new classes , LockDatabaseDesc . java and UnlockDatabaseDesc . java , to represent the description of LockDatabaseDesc . java and
updated RankingUIModel to use setter methods for property assignments to improve code clarity and encapsulation by utilizing setters
added handling for disconnect messages in HandshakeHandler and updated logging for INCOMPATIBLE _ PROTOCOL in NodeImpl to improve disconnect handling and provide more
added a test method to set and delete a storage group in IoTDBAuthorizationIT . java and updated AuthorityChecker . java to handle permissions
chore : update the java microgenerator to 1.1 . 0 and update gax - java to 1.1 . 0 ( #
added support for handling missing variable declarations in TypeValidation and related classes to improve type validation logic and ensure proper handling of unknown variable types
added two new methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to facilitate
replaced multiple specific imports with a wildcard import and updated validation logic in CountersManager . java to improve code readability and maintainability by
updated log messages in MultiSteps . java and SendEmail . java to improve logging clarity and consistency to enhance readability and maintainability of
added a check to clone the joinKeys array in JoinDesc . java to ensure that the joinKeys array remains unchanged when it is null
updated WebAuthnConfiguration to use PrincipalResolver for authentication handler registration to improve flexibility and maintainability of authentication handling
added a new parameter ` searchPaths ` to the ` addSettingsFromFile ` method and updated related calls to support additional search paths in the X
made several lists and sets final in Oracle . java to enforce immutability and enforce immutability of these lists
[ hotfix ] [ doc ] disable unaligned checkpoint when rescaling of unaligned checkpoint
fix ( sql ) : ignore unsupportedoperationvisitor for sort _ by and map _ value _ constructor
add a system property ` ` graal . compiletheworldtest . log ' ' to disable debug output
added a check to ensure ` lValue ` is an instance of ` LocalVariable ` before throwing a ` CannotDelambaException ` to
added support for MySQLDatabase in the CreateTableGenerator class to ensure proper handling of timestamp data for MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper context class loader management during execution
added a conditional check to set the Ejection delay if stageNr is zero in SimulationListHandler . java to ensure motor configuration reflects
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated method names for clarity to improve code readability
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
refactor issuer handling to utilize ` Optional < OAuthRegisteredService > ` instead of ` JWTClaimsSet ` to improve flexibility in issuer
added null check for the collection reference in ClusterState . java to ensure robustness by handling potential null references gracefully
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance the functionality of foreign database and schema management in the database management
[ java ] warn cluster member in unsuccessful leadership bid .
replaced static import of Shadows . shadowOf with a private method shadow . extract in ShadowActivity . java and ShadowBluetoothDevice .
drill - 4192 : fix bug in fileselection . select ( ) when the selection root be empty or empty .
deprecate itemstack . oninventorytick ( itemstack , slotindex ) in favor of itemstack . oninventorytick ( )
[ coley ] add support for war resource in jar export .
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when getSherlockActivity ( ) is
updated widget binding logic in AppsCustomizePagedView , Launcher , PendingAddItemInfo , and PendingAddItemInfo classes to
[ ecobee ] add ` ` airPressure ' ' , ` ` airquality ' ' and ` ` airqualityaccuracy ' '
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
added environment variables for " AAPT " and " AAPT2 " in Genrule . java and updated tests in GenruleTest . java
do n ' t dump access table when truffle compilation option be enable .
added null check before disposing the message to avoid potential NullPointerException when message is null
added @ Getter annotation and modified initialization methods in TronStoreWithRevoking , TxCacheDB , and TransactionCache classes to enhance
updated warning messages in CoreContainer . java to clarify that log watching is not implemented for Log4j to provide clearer context for
replace printStackTrace ( ) calls with fail ( ) for cloning failures in CategoryPlotTests . java to improve error handling and provide clearer feedback
updated dial method to use " tel : / / " and added a new SmallByteArrayOutputStream class for handling byte arrays to improve compatibility with
use intmap < attribute > instead of hashmap < string , attribute > for shader .
change connection name from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java to
added null checks for ` firstExchangeTimestamp ` and ` lastExchangeCompletedTimestamp ` in ` RouteInfo . java ` to avoid potential NullPointerExceptions
updated default language handling in TestHtmlTag . java and added new test cases in TestUseOption . java and TestUseOption . java to
updated the condition to check if the result is incomplete before proceeding to ensure proper handling of incomplete items and prevent potential errors
updated command - line argument usage and improved time column name handling in HybridClusterIntegrationTestCommandLineRunner . java to enhance command - line
updated output format handling in SiteSnapshotVariationsTest and OutputOptions classes to support both HTML and HTML format formats to ensure compatibility with different output
changed the condition from checking if the condition is met to checking if the condition is met to ensure correct behavior when conditions are met
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` and ` SceneKey `
added a ` setDate ` method to ` AbstractGenerator ` , ` Generator ` , ` HttpGenerator ` , and ` HttpGenerator ` classes to
replaced instances of ` Adler32 ` with ` CRC32 ` in the ` Store . java ` file to utilize the new CRC
change default value of xen . heartbeat . interval from " any # of seconds " to " null " in XenHeartBeatInterval
added a new constant for ZERO _ AREA _ FIN and modified geometry warning handling in FinSetCalc . java to improve code clarity and
replaced deprecated Jackson annotations with a new DocumentMetadataSerializer class for JSON serialization to enhance compatibility with newer Jackson versions and improve JSON serialization
hhh - 14923 add support for date _ trunc function in h2 , oracle , sqlserver , and h2
added memory pool error handling in MetricUtils and corresponding tests to ensure proper error reporting when memory pool not found
added a ` useJavaScript ` flag to ` UserContext ` and modified return statements in ` UserContext ` , ` UserContext ` , and
updated validation messages to use ` RUNTIME _ PROTOTYPE _ FACTTOTYPE _ TYPE . classNameWithEnclosingNames ( ) `
updated the BACKFILL path from " / generateAnomaliesInRange " to " / replay " to align the URL with the intended replay
updated the return statements in PrecompiledContracts . java to use a new DataWord with the latest proposal number to ensure compatibility with the latest proposal
refactor badge handling in AllAppsContainerView to use child views instead of adapter items to improve responsiveness and maintainability of badge updates
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
update comments in ResourceService and ResourceHandlerTest for clarity to improve code readability and maintainability
simplified the conditional check for drawing identifiers in Cling . java to improve code readability and maintainability
do n ' t check if lookupmodule be null in trufflejdkservices .
added @ Ignore annotation to the test method in ClassicSuperHandlingTest . java to indicate that the test does not make sense until the default is
removed unused import of ItBitV1 from multiple demo files to streamline the code by eliminating unnecessary dependencies
[ struts2 ] fix npe in profilinginterceptor and scopeinterceptor
added private constructors to Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce immutability and enforce immutability of
added try - with - resources for ObjectInputStream in RegionsApiUtil . java to ensure proper resource management and handle potential IOExceptions
updated file names from " java . util . Vector " and " java . util . Hashtable " to " java . util . Vector " and
added tableNameWithType parameter to the log warning for invalid retention time to improve log clarity by including the table type in the log message
added trim ( ) method to fragmentList check in QueryExecutorImpl . java to ensure that fragmentList is not empty before processing
updated ResourcePackFileNotFoundException to use modFile . getFilePath ( ) instead of path to ensure the correct file path is used for resource pack file
refactor the handling of TransformerBuilder instances in PartitionToolbar . java to improve clarity and functionality to enhance code readability and maintainability by
refactor conditional checks in RecentsView . java for better readability and maintainability to enhance code clarity and ensure proper handling of
updated the ` calculate ` method to return ` BMIViewObject ` instead of a ` Map < String , String > ` to streamline
removed Comparator from the key comparison in QueryCommand . java to simplify the code by eliminating unnecessary comparator usage
fix damage calculation for haybale block
refactor environment variable handling in WindowsProcessAddressSpace , J9DDRImageProcess , NewElfDump , and NewElfDump
added support for custom plugin properties in OptionsParser and updated related tests in OptionsParserTest to enhance configuration flexibility and ensure correct handling of plugin
changed the condition from checking if hashTable is not null to checking if it is empty to improve code clarity and prevent potential NullPointerExceptions
updated timestamp validation in ` Timestamp ` and refactored test methods in ` TimestampTest ` to improve accuracy of timestamp validation and enhance test coverage
[ java ] remove unused variable from cluster service agent .
added a condition to check if the method is not compiled before evaluating the COMPILE _ THRESHOLD threshold to ensure that the method type is
added new test methods for image processing in multiple online test classes to enhance testing coverage for different image scenarios
replaced ` getInitialValue ` with ` getOverridenDefaultValue ` in ` TogglableFlag ` and updated related methods to improve default
updated logging statements in DockerClientFactory to include placeholder syntax to improve readability and maintainability of log messages
added a conditional check to return early if the current platform is Android to optimize performance by avoiding unnecessary processing on non - Android platforms
refactor assertions in RoutesTest to use assertThat for better readability to enhance readability and maintainability of the test code
added new functional interfaces for byte , float , and short predicates in the common function package to enable conversion of byte , float , and short values
changed the return type of getSubsColor methods from int to String and added logging for subtitle limit usage in multiple classes to improve flexibility and
added a conditional check before deregistering the invocation registry in Invocation . java to ensure that deregistering the invocation only occurs when the future is complete
replaced the ` queue . append ( frameBytes ) ` method with ` output ( null ) ` in ` AbstractWebSocketConnection . java `
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity and set it in SignupActivity to ensure that
added a new ShadowCheckedTextView class to handle CheckedTextView functionality to enable testing of CheckedTextView functionality in the Robolectric
added Serializable interface to ParserState class and made fields transient in AccessorProperty and Property classes to ensure serialization compatibility for the ParserState class
added a new certificate entry " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance certificate validation
removed redundant calls to ` context . setAttribute ( TEMPDIR _ CONFIGURED , null ) ` in ` WebInfConfiguration . java ` to
add miss nick to occupant . getnick ( )
refactor QuicSession and related classes to simplify context and connection handling to enhance code readability and maintainability by eliminating unnecessary volatile
updated merge scheduler and configuration handling in CreateIndexTask . java to ensure compatibility with LogMergePolicy and improve merge policy management
refactor ICU4JImpl and TextPosition classes to improve clarity and consistency to enhance code readability and maintainability by using more d
added support for ` ComputedDateValue ` and ` ComputedNumericValue ` in ` AddDefaultValueChange ` and ` AbstractDatabase ` to
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - saml : do n ' t throw type exception if service provider metadata resource exist
changed the access modifier of the printer variable from private to protected and added a new method createPrinter ( ) in GraphPrinterDumpHandler . java
added BigDecimal import and updated average price calculation in HuobiAdapters . java to ensure accurate calculation of average price for order
updated ProjectionOperation and TypeBasedAggregationOperationContext to use target instead of name and modified field handling in TypeBasedAggregationOperationContext to improve cl
added a check to prevent adding players to the viewers list in FakePlayer . java to ensure players are only added to the viewers list
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve code clarity and maintainability by centralizing constant state
refactor connection handling in SPDYClient to use AsyncEndPoint and ISession . Controller to improve code clarity and maintainability by central
fix ( core ) : fix npe in protostuffobjectoutput # writeobject ( null )
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
do n ' t show axis if there be no number
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap in Texture . java to improve texture handling flexibility by allowing unsafe
removed unnecessary whitespace in XmlWorkflowServiceImpl . java to improve code readability and maintain consistency
added support for HTTPS connections in CustomUrlJob . java and created a new class CustomUrlTrustEverything . java to enhance security by en
added a method to retrieve the real used clock rate string in multiple classes to improve clarity and maintainability of the code by encapsulating the
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
replaced getProductNameForBuildTargetNode with getModuleName in ProjectGenerator and added a method to set the module name in AppleLibraryBuilder
[ hotfix ] [ test ] fix lock in testslot .
# 1188 - sqlbuilder . findids ( ) now include type . id _ list .
replaced the ` closeFrame ` variable with a ` rbuf ` variable for better readability to improve code clarity and maintainability by
[ wasm ] set reference multi - value stack to null when call pushreference ( )
add ` ` ttl ' ' configuration to clickhouse log collect client ( # 1748 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomChangeWrapper , CustomPreconditionWrapper ,
replaced ` QueuedThreadPool ` with ` Server ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java ` to improve server management
added error handling for Fresco initialization and initialized VectorDrawableCompat in CommonsApplication . java and NearbyController . java to improve
added null and empty checks for objectName in PostgresDatabase . java to ensure that objectName is only returned when it is not null or empty
updated UserDataException to include the error message when a file cannot be opened to improve error reporting for better debugging
[ hotfix ] [ table - planner - blink ] make the planner and executor class constant static final
updated variable names and added null checks for subject name in KeyTool . java and Resources . java to improve code clarity and handle potential null
added a @ Deprecated annotation to RuntimeOptions . java to indicate that the RuntimeOptions class is outdated and should no longer be used
replaced ByteBuffer encoding with string . getBytes for byte conversion to improve performance and readability of the code
added a new interface PermissionEvaluator in the Spring Security expression package to provide functionality for managing permission checks in the security expression framework
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and modified ` LineReaderImpl ` to
[ hotfix ] fix checkstyle violation in masterfilesystem . java
replaced SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR in exception handling to
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 559 .
improve error handle for fullnettyclientresponse . decode ( )
changed the centering of the spinner container from center to centerAbsolute to ensure the spinner ' s position accurately reflects its absolute representation
updated the ` recycleMemorySegments ` method to include a ` numRequiredBuffers ` parameter and added a new test for memory segment request in `
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper management of the MBeanServer
replaced AndroidJUnit4 runner with JUnit ' s RetryTestRule in AbstractIT . java to improve test reliability by using a
updated the ` QueryStateMachine ` class to use ` transactionManager ` instead of a boolean for auto - commit checks to improve transaction management and
updated import statements in CsvFieldType , CsvTable , and CsvTableScan , and added a new package - info . java file to improve code
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ test ] remove unnecessary dependency on processingtimecallback in streamtasktimertest
refactor URI handling in Request . java and add a new test in RequestTest . java to improve clarity and correctness of request URI
changed visibility of ` KEY _ LAST _ SEEN _ VERSION _ CODE ` from private to public and refactored storage point retrieval in `
added methods for managing session availability and unavailability in the SessionManager class to enhance session management functionality for better session management
added package scan for " liquibase . pro " in ServiceLocator . java to enhance package scan functionality for Liquibase
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in the ` MainApp ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept an additional parameter for arguments to enhance flexibility in handling global arguments during context loading
refactor path matching logic in FastPathResolver . java for improved readability and maintainability to enhance code clarity and maintainability by
replaced length ( ) method with toIntExact ( ) for footer and stream sizes in HiveClientModule . java to ensure accurate size calculations for
corrected the spelling of " hasAlreadyRandomizedType " to " hasAlreadyRandomizedType " across multiple files to improve code clarity and
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and corresponding tests in TestWindowFrame . java
clear the headers in AbstractProxyServlet to ensure proper handling of HTTP headers in the proxy request
added a validation check for SA attach in CompressedClassSpaceSizeInJmapHeap . java to ensure tests run only if SA attach is
added null checks for bgColor in GraphicsDevice . java and created TranslucentWindow . java for fullscreen window functionality to ensure robustness
added a condition to check if the user information is null before displaying the empty content in UserInfoActivity . java to ensure that the user information is
added custom field behavior for PrecompiledHeaderData and updated precondition check in PreprocessorDelegate to ensure precompiled headers can be used on different machine
[ flink - 20663 ] [ table - planner - blink ] fix update mode in kafkasinksinkfactory
added a new integration test class ` MultipleOutputsIntegrationTest ` for validating named output groups and source files to ensure that named outputs can be used
updated regex pattern and added content comparison logic in FileSettings . java to ensure proper formatting of content for better readability and maintainability
updated variable handling in StatelessFlow and related classes for improved clarity and consistency to enhance code readability and maintainability by standardizing
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable taskbar mode switch for improved user experience
added new DeviceStatus entries for leaving - dock , energy - save - mode , and energy - save - mode in DeviceStatus . java to
improve error message for itemloadingexception in modelloader .
removed redundant import statements and added an @ Ignore annotation in KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to
added conditional check for 2 - x graphics before setting the current pixel scale to ensure correct scaling behavior for 2 - x graphics
refactor RussianLowerCaseFilter class to improve code readability to enhance maintainability and facilitate future updates
updated configuration handling in CsvBulkLoadToolIT and QueryUtil to use EMPTY _ PROPS instead of a hardcoded value to simplify the test setup
replaced File . separatorChar with File . pathSeparatorChar in displayName to ensure consistent file path handling across different operating systems
littleendien now support seekableinputstream . skip ( ) and resetoffset ( ) .
added a boolean flag ` repeatFirstLineIndent ` and modified the indentation logic in ` ColumnText . java ` to enhance flexibility in indentation
cast the Oid object to Object before comparison to ensure proper type safety and prevent potential ClassCastException
refactored configuration handling for metrics tracker factory , metric registry , and health registry in HikariPool . java to improve code readability
use controlflowanchored instead of controlflowanchornode in loopex .
added a call to set the button ' s painted state to false in WindowsPlacesBar . java to improve user interface responsiveness by
updated condition to check for UniqueConstraint and ForeignKey types in DatabaseSnapshot . java to ensure proper handling of backing index cases for unique constraints and ForeignKey
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and updated ` AccountAPI ` to use it
[ ds - 4892 ] ensure that the community admin group title be unprocessable ( # 4893 )
refactor GapInsertionDetector to check for empty words before returning the utterance to improve robustness by preventing errors when no words are available
added unit test base on user forum issue
updated thread retrieval from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater ` and added getter
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40ms to 10ms in RecyclerViewFastScroller . java to
replaced ` MetaUtil . toInternalName ( System . class . getName ( ) ) ` with ` Ljava / lang / System `
hhh - 13644 fix npe in procedurecallimpl when get _ random _ value be null
added a null check for APIProperties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added new classes BinaryFrameGenerator and TextFrameGenerator for handling binary and text frames to enhance WebSocket frame generation capabilities for improved data handling
danielwagnerhall : use webdriverwait instead of webdriver . findelement
simplified the calculation of ` lat ` and ` lon ` in ` RandomGeo3dShapeGenerator . java ` to improve code read
added a keepAlive method to manage ClassLoader references to ensure thread safety during resource loading
change return value from false to true in SQLiteDatabase . java to indicate success or failure
refactor concurrent handling in FindJSR166LockMonitorenter to improve clarity and maintainability to enhance code readability and
added a new ` MkdirStep ` import and updated the steps count in ` FatBinaryTest ` and ` AndroidAar ` , `
updated coordinates and error messages in MeshLeveler . java for improved clarity to enhance error handling by providing clearer error messages for invalid
drools - 1342 -- add check for availability of jpmml module on classpath and skip pmml compilation
replace locationMode with thermalStatus in ShadowPowerManager . java to improve clarity and accuracy of the status validation logic
updated temporary directory creation logic in MountableFile . java to conditionally use the system ' s temporary directory based on the operating system to ensure
added a check for memory mapped buffers in PrjFileReader and modified GEOM _ FACTORY initialization in CatalogManager to ensure compatibility with Windows
added a null check for the organization in the PluginManager class to ensure Plugis is required to have an organization in the pom . xml
updated the contributor license agreement documentation in SepPostingsWriterImpl . java to clarify that the NOTICE file distributed with the NOTICE file distributed
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the project
updated the method to retrieve the Java class path from a system property instead of an empty string to ensure the application uses the correct Java class path
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , priv , and md
added a new test method ` dontChangeJavadoc ` in ` AddLicenseHeaderTest . java ` to verify the behavior of the ` java `
changed LAUNCHER3 _ PHYSICS flag from false to true to enable the LAUNCHER3 _ PHYSI
added a new div class ' noPrint ' to the HtmlThreadInformationsReport . java file to provide a visual representation of thread information in
updated the main version from " 3.1 " to " 4.0 " and updated the Lucene test version from LUCENE
added new fields for symbolicator and task in BsdDebuggerLocal . java and modified platform check in PlatformInfo . java to enhance functionality for
[ fml ] use weakreference for inboundpacket packet to avoid memory leak
do n ' t log stacktraces when connection reset by peer .
[ java ] use admin _ dir _ name for client conductor buffer in aeron client .
added a break statement in the TouchImageView . java file to improve control flow of the switch statement
chore : update proto and proto file for advancedsettings ( # 118 )
simplified the flushOnSSLHandshakeComplete method in FeedableBodyGenerator . java to improve code readability and maintainability by elimin
added logic to check for variance assignments in TypeUtils . java to ensure correct handling of variable assignments in type calculations
replace NonBlockingHashSet with ConcurrentSkipListSet in memtablesPendingFlush to improve concurrency handling for memtable operations
added null checks for tree . errs and modified error handling logic in MemberEnter , JavaCompiler , and Erroneous classes to enhance error handling
replaced SWT . NO _ BACKGROUND with SWT . NONE in BugInfoView . java to change the browser ' s background state from
updated the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
fix integerstamp . create ( ) to account for negative range
added a method ` readStream ` to read an InputStream and updated the image initialization to use it to improve code readability and maintainability by
added variable variable handling and scope management in CaseStmtToken to enhance variable assignment and improve code clarity
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during the handshake process
updated references from " kernel32 . lib " to " psapi . lib " in WinGammaPlatformVC10 . java to ensure compatibility with
updated newline handling in StringUtilsTest . java to use system - specific newline to ensure consistent newline formatting across different operating systems
added new template configuration settings and updated JavaScript alert syntax in multiple files to enhance template rendering capabilities and ensure proper JavaScript formatting
refactor byte array handling in CRDGeneratorTest . java for improved readability to enhance code clarity and maintainability by using a
change the access modifier of ` holdSamples ` and ` type ` from static to instance variables in ` SampleSenderFactory . java ` to allow
added a null check for the " testngEmailableReporter " system property before adding it to the EmailableReporter to avoid potential NullPointerExceptions
added a boolean flag ` quoted ` and updated conditional checks in ` CommandLineBuilder ` to ensure proper handling of quote characters in command line output
removed the ' public ' access modifier from multiple interfaces and classes in the codebase to enhance encapsulation by restricting access to package - private
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks for the job
fix nullpointerexception in schemageneratorhelper . getfielddefinitions ( )
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the new version of the SaveService class
added support for " GL _ ARB _ texture _ float " and " GL _ RGBA32F " extensions in FloatTextureData . java
add synchronization to fileserver . write ( ) and fileserver . closefile ( ) . jmeterversion . 20050211
added a null check for outputDirectory and jarStream before setting the output directory to avoid potential NullPointerExceptions when outputDirectory is null
replaced ` getFuture ` method with ` measure ` for ` sqlite ` in ` ShadowSQLiteConnection . java ` to improve performance measurement
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
add a new enum for resource error handling in the config package
added a check for buffer position in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure proper buffer position adjustment and handle EOFException in
improve error message when file be not find
modified ForkJoinPool and ForkJoinWorkerThread to include a boolean parameter for innocuous permission handling to enhance thread management by allowing permission
updated the CHECK _ EVERY _ N constant and modified memory checks in Caches . java to improve performance by reducing the number of checks
hbase - 2594 testsplittransaction . testsplit ( ) do n ' t try to open region if it ' s not in
added null check for currentSelectionArea before enabling selection in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test method ` testJaasDemo ` to ` DemoModulesTests ` to facilitate testing of Jaas demo
added a check for spanX and spanY in the folder creation logic to ensure that folder creation only occurs when spanX and spanY are
refactor CacheOffHeap class to improve performance to optimize memory usage for improved efficiency
add support for reference a table with a higher ID in CreateTable . java and a corresponding test case in TestCases . java to ensure that
added a check to ignore extra XML gid values and improved string trimming in TiledLoader . java to enhance robustness by preventing
fix thread safety issue in inmemorytilecache
added a new file ` Solution . java ` that implements a solution for determining the minimum and maximum steps based on input to implement a solution for
add a trackerrequestprocessor interface to check if an ip be bad .
remove unnecessary conditional check for rendertype . getTranslucentmovingblock ( ) in ForgeHooksClient . java and MultiLayerModel
add a new method to remove a tag from the config element in the tool tooltip to improve user experience by providing clearer information about the tag
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and updated its assignment in `
added a null check for recieptents before sending email to avoid potential NullPointerExceptions when recieptents are null
refactor is isSingle logic into a separate method to improve code readability and maintainability
refactor DockerClientFactory to conditionally execute commands based on a failFast flag to enhance flexibility in handling Docker client execution based on a
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated its usage in ` RobolectricTestRunner ` to
fix : use the correct calendar in historicprocessinstancequeryimpl . gettime ( )
replaced ` importProject ( ) ` with ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule . java ` to ensure
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command failures
refactor TreeMap class for improved readability to enhance maintainability and clarity of the code
added methods to check and set async stack traces in the Display class to enable or disable asynchronous stack traces in the application
added a method to set the glow color in BubbleTextView and updated Folder to use it to enhance the visual appearance of the
added file - row - text styling for links and descriptions in LinkedFilesEditor . java to enhance the visual appearance of file elements in
updated return type from " java . lang . Short " to " java . lang . Short " in AbstractJdbc2ResultSetMetaData . java and
removed unnecessary try - finally block around file writing in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify
added a null check for the _ info object before determining if the upgrading boolean is met to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a String provider to enable initialization of ShadowLocation with a specified provider
added a condition to check if deviceRam is less than 2048 in the maxRAM calculation to ensure that the maximum RAM value is within
add empty _ local _ map _ stats if no data be available
added logging functionality to FileProfileActivator for file existence and missing checks to enhance error handling and provide clearer logging during file profile activation
updated the string in the addToBody method from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity
updated the collection type from ` Collectors . toList ( ) ` to ` Collectors . toSet ( ) ` in ` GuildImpl . java `
updated the maximum upload limit from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to ensure
added multiple assertions for the ` delete ` method in ` DashboardUserMapperTest ` to ensure that the ` delete ` method correctly handles cases where
update instructorfeedbackresultspagedata to include primaryparticipantid and secondaryparticipantid
[ llvm ] add support for auto deref handle .
added a method ` getBufferSize ( ) ` to ` BufferedIndexOutput ` to provide access to the buffer size in the application
[ terasology ] add help text for usage help
reformatted switch statements in DrawerActivity . java for improved readability to enhance code clarity and maintainability
refactor CommandLineParserTest for improved readability to enhance maintainability and facilitate future development
added interpolators and modified visibility of ALL _ APPS _ CONTENT _ FADE and ALL _ APPS _ SCRIM _ VISIBLE _
updated the method to use ` javaNameFromExternal ` instead of ` Character : : toUpperCase ` to improve code readability and maintainability by
removed native methods related to Rectangle2D in CWrapper . java to streamline the code by eliminating unused native methods
added constant value validation in ` Checker . java ` and created a new class ` ValueTest . java ` with tests in ` ValueTest .
updated test files for MontgomeryMultiply , MMulAdd , and SquareToLen to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null check
refactor JiraConfiguration class to improve configuration handling to enhance maintainability and readability of the code
updated error and coverage string formatting in UploadBuild . java to improve clarity of error messages for better debugging
updated bounds calculations in DeviceProfile . java to include search bar offset to ensure proper layout adjustments based on search bar offset
do n ' t schedule next disconnect if idle timeout be 0
refactor the launching process in OverviewCommandHelper . java to use a UI thread for better responsiveness to improve responsiveness
removed the ` getSourceGroupOptional ( ) ` method and its usage from ` AppleSource ` to simplify the code by eliminating unnecessary
increased the timeout duration from 220000 milliseconds to 320000 milliseconds and increased the timeout duration from 60000 milliseconds to 90000 milliseconds to
replace outputPositionCount with positionCount in FloatSelectiveStreamReader . java to ensure the correct position count is used for the RunLengthEncodedBlock
added null checks and a square comparison for the distFromStartSq in AbstractNodeCostSearch . java to ensure proper handling of null values and
added a conditional check to skip processing for specific UI components in ResourceEditorView . java to ensure proper handling of form and dialog components in the
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint and initialized it if it is null to ensure the correct commit point is used for replication operations
added tests for ` getImei ` and ` setImei ` methods in ` ShadowTelephonyManagerTest ` and implemented
added debug logging for HTTP / 1.1 requests in SimpleHostRoutingFilter to enhance debugging capabilities for HTTP / 1.1 requests
added ` destory ( ) ` methods to multiple classes to close resources to ensure proper resource management and prevent memory leaks
[ issue # 1188 ] fix test failure of normalmessagesendandRecvit ( # 1188 )
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer .
hbase - 2696 bulkload do not crash if there be multiple file in the table ( # 2696 )
added a ` commission ` parameter to ` DefaultWithdrawFundsParams ` and updated its usage in ` RippleWithdrawFunds
removed the import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
updated exception handling in LoadSolrBuilder and SolrLocator to include additional SolrServerException and IOException to improve error handling by distinguishing between SolrServerException and
added validation for abstract overloaded methods in Java2TypeScriptTranslator . java and updated OverloadTests . java to ensure proper handling of method
added StacklessLogging to the FileSessionDataStore synchronization in TestFileSessions . java to improve debugging capabilities and ensure proper resource management
added Serializable interface to MutableColumnDataType and changed access modifiers of several static maps in Entities class to enhance data type serialization and improve type safety for
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added a null check for claimRequestString before parsing to avoid potential NullPointerException when processing claimRequestString
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory and added a singleton pattern to improve flexibility and maintainability
updated the ` processTypeHintForNestedDocuments ` method to handle null values correctly and added unit tests for null values in ` UpdateMapper `
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest and added a new getCoreStatus method in CoreAdminRequest
initialize transformers and locators lists with new ArrayList instances to ensure proper initialization of lists
mondrian : fix typo in exception message
make pegraphdecoder . getcallstack ( ) return - 1 instead of throw unimplemented exception
updated method names from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency
camel - 1748 : fix the issue that mailmessage do n ' t display the identity hash code .
http : / / issues . apache . org / activemq / browse / amq - 4896 - fix nullpointerexception in
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure that the getIdentifierName ( ) method correctly handles property
add a wave generator activity to the InstrumentsFragment and update the WaveGeneratorActivity to use it to improve user experience by providing an intent for
added null check for ` m ` in ` KeyedProperties ` and improved logging in ` SheetOverlaysManager ` to enhance robustness
( chore ) camel - kubernetes : add test for exec ( ) and log ( )
added a test method ` testNoWriter ` in ` TestReplicationHandler . java ` to verify the behavior of ` SolrCore . initIndex
mondrian : fix npe in graalkerneltester . dispatchmethodkernelokra .
updated DnsClient and DefaultDnsClient to use List < DefaultMxRecord > instead of List < Object > and added sorting functionality to enhance
refactor thread creation in XToolkit to use a generic action for better readability to improve code clarity and maintainability by reducing
added validation ( ) method in SelectBox . java and set the dropdown selection in UITest . java to ensure the dropdown reflects the
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing stack trace for exceptions
nifi - 5892 : flowbuilder now support the parent of a split state when create a flow
changed the ` connectionState ` variable to be volatile and updated its usage in the ` getConnectionState ( ) ` method to ensure thread safety and
increased the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added a period test in EnableIntegrationTests . java
refactor MemoryStack and MemoryUtil methods to use NATIVE _ ORDER for allocation and encoding to improve memory allocation efficiency and ensure correct handling of
added exception handling for ` DocletAbortException ` in ` HtmlDoclet ` and ` AbstractDoclet ` classes to improve error reporting by
pmd : fix false positive for unusedmodifier
refactor lambda expressions to use method references instead of lambda expressions to improve code readability and maintainability
added a name parameter to the @ Parameterized annotation in AbstractHttpClientServerTest . java to improve clarity of test parameters for better debugging
added exception handling for IllegalFormatException in transformation transformation to improve error reporting and provide clearer error messages for transformation failures
replaced ` getUserPermissions ( ) ` with ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java ` to improve cl
replaced direct equality check with Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability by utilizing Apache Commons
added null check for outputRoot in the process method to avoid potential NullPointerException when outputRoot is null
added a new ` AnnotationFilter ` interface and modified ` PDFPage ` , ` PDFRenderer ` , and ` PDFPage ` classes to support
refactor StackTraceCleaner class for improved clarity to enhance maintainability and readability of the code
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure correct content type is set based on file path format
hhh - 14263 skip test that fail on oracle and db2
updated the ` upgrade ` method to include a ` slotSize ` parameter and modified the logic for handling version values to improve clarity and ensure
added ` getStats ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` DocBuilder ` classes , and updated `
[ scb - 2321 ] add support for long polling in kiesclient ( # 2321 )
replaced direct calls to ` overview . gestureMargins ` with ` mLauncher . scroll ` for better responsiveness to improve responsiveness
replaced the instantiation of UnlocksDialog with a new instance of UnlocksDialog and added a button in PausedDialog to enhance user experience
added a call to clear the drop list in PlayerEventListener . java to ensure proper handling of drop events in the PlayerEventListener
added a new constant DEFAULT _ PARAM with a value of " inputName " in StreamResult . java to define a default parameter for the input stream
removed MalformedURLException from the test method signature of the testNormalizeOrder method to improve error handling by explicitly indicating the expected exception type
updated printlnBoth to include chunk type in TsFileSketchTool . java and modified strBuffer flipping in LocalTsFileInput . java to
added functionality to exclude Swift headers in UmbrellaHeader . java and updated test assertions in ProjectGeneratorTest . java to improve header exclusion
corrected the spelling of " onHttpHeaderError " to " onHttpHeaderError " in GrizzlyAsyncHttpProvider .
added encode ( ) method to RequestPlugin . java to ensure proper handling of character encoding in request processing
added support for DB2 - specific expression formatting in RolapNativeSql and RolapNativeTopCount classes to enhance compatibility with DB2 -
added validation for LDAP users with null or blank password in LdapAuthenticationProviderImpl . java and created unit tests in TestLdapAuthenticationProviderImpl .
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper cleanup of complexWriters when conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress warnings related to serialization compatibility
removed the ' public ' access modifier from the ClassGraphClassLoader class and simplified the class loading condition to enhance code readability and maintainability by
added schema error handling for " _ errors " names in ErrorResponseException . java to ensure proper parsing of schema errors and avoid potential null pointer exceptions
added a constructor to EventSourcingRepository that accepts an AggregateModel , AggregateFactory , and RepositoryProvider to enable initialization of EventSour
refactor symbol handling for binary nodes in Attr . java to improve code readability and maintainability
updated the handling of currentText and searchText in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure the correct text is displayed
do n ' t send command in standby mode if command end with ON or page _ on .
tmi - tiff : use tiff baseline instead of extension . planarconfig _ planar
added close ( ) method to ItemListTag . java to ensure proper resource management and prevent memory leaks
move averageutil to the core utils class and move it to the core utils class .
added new classes ` SigInt ` and ` SigIntBarrier ` for signal handling in ` SigInt ` and ` SigIntBarrier
refactor graph handling in ExporterGEXF to support hierarchical graphs to improve compatibility with hierarchical graphs in graph processing
refactor TCTLSeparatedProtocol to use Text for decoding and writing strings to improve handling of character encoding errors and streamline string
[ # 1187 ] fix invalid index in rubric response ( # 1187 )
updated the condition to check schema and catalog case comparison to ensure consistent comparison of catalog comparisons based on schema and catalog case
refactor test setup and teardown methods in BrowserMobProxyTest to improve clarity and functionality to enhance test setup and teardown functionality
updated the formatting of criticalErrors to use Integer . toString ( ) for consistency to improve readability and maintainability of the error message formatting
removed redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline code by eliminating redundancy
improve javadocs for internalbytearray and trufflestring .
[ hotfix ] [ runtime ] fix typo in OutEdgesFunction and related classes
refactor multiple Java assertion classes to improve code organization to enhance maintainability and readability of the codebase
deleted the ClassA \ 314 \ 201 . java file and added a new DiacriticTest . java file for MacOS to
replace CountDownLatch with CyclicBarrier in ClusterMembershipTest and introduce assertExecutionsDone method to improve test reliability by using a
added error handling for ComponentLookupException in DefaultMaven . java and modified project collection logic in DefaultGraphBuilder . java to improve robustness
updated SSL scheme check from ` startsWith ` to ` equals ` in ` ServiceRegistryConfig ` and modified assertions in ` TestServiceRegistryConfig `
refactor Mockito class to improve code structure to enhance maintainability and readability of the codebase
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
refactor servlet initialization logic into a separate method ` ensureInstance ( ) ` to improve code readability and maintainability by encapsulating initialization logic
added logging functionality and modified deltaServerTime calculation in BinanceExchange and BinanceBaseService classes to enhance monitoring capabilities and improve time management during
added support for binding " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat
added null check before deregistering the animated form in InfiniteProgress . java to prevent potential NullPointerExceptions when the component form is not initialized
updated ` decodeResource ` and ` drawBitmap ` methods to accept an additional ` options ` parameter to enhance flexibility in bitmap decoding by allowing
[ java ] use configuration . number _ of _ messages instead of hardcoded 10 to 10 .
added click and long click functionality to the TimelineArrayAdapter to enhance user interaction by allowing more control over click events
added " text " to the unmodifiableDataTypes list and modified condition checks in NumberType and ColumnSnapshotGenerator to support additional database data types and
fix flaky testentryprocessorbouncingnodestest ( # 3683 )
updated state checks from isHardDeletableState ( ) to isRemovableState ( ) in AmbariManagementControllerImpl . java to
added a null check for the thing registry before adding a result to the inbox in CreateBridgeServlet . java to prevent potential NullPointerException when the bridge
refactor ` PreconditionEnforcer ` and ` CrawlServer ` classes to improve thread safety and consistency to enhance code readability and maintainability
added null checks for the display name in multiple classes to prevent potential NullPointerExceptions when getDisplayName ( ) is null
added a default shader parameter to the SpriteBatch constructor and updated its usage in ImageButton and ImageButton classes to enhance flexibility by allowing
added synchronous _ commit option to properties in TestUtil . java to enable synchronous commit functionality in the application
added type coercion and updated sorting set handling in SortedSetTypeCoercer . java and TypeCoercerTest . java to improve
refactor confirmation messages in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality to enhance user experience by providing clearer
added a boundary check for the character ' s value in URLPathEncoder . java to ensure the character index does not exceed 256 characters
updated the port assignment and fragment storage registration logic in UserContext . java to ensure the correct port is used for fragment storage registration
removed the expect statement that returns an empty map for clusters in HostResourceProviderTest . java to streamline the test by eliminating unnecessary
[ hotfix ] remove unnecessary log parameter from yarnentrypointutils . loadconfiguration ( )
refactor SIPCommFrame to initialize colors and styles after initialization to improve code readability and maintainability by encapsulating initialization logic
removed the ShadowHtml class and its implementation from RobolectricBase . java , and updated HtmlTest . java with new test cases to
added a new file StarTreeRecordStoreFactoryBlackHoleImpl . java that implements the StarTreeRecordStoreFactory interface to provide a
updated logger variable names and added logging for HTTP / 3 and quic in HttpClientLoadTest . java to improve clarity and consistency in logging
changed the visibility of the addListeners method from private to package - private in MockSettingsImpl . java to restrict access to the method and ensure
refactor StateHandleStore class for improved clarity to enhance maintainability and readability of the code
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . j
[ # 1187 ] instructor : update studentattributes to use constant . default _ section ( # 1187 )
use try - with - resources to avoid resource leak
( chore ) camel - 1145 : fixed the unit test error of camel - core
added support for ` BuildTarget ` in ` AndroidBuildConfigJavaLibrary ` , ` AndroidPrebuiltAar ` , and ` DefaultJava
corrected a typo in the error message from " validating - cerficates " to " validating - cerficates " to
bug 9452 : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd which have the change for default pagination to unlimited .
added a case for CLOSED in IteratingCallback . java to ensure proper handling of closed states in the callback logic
added a new boolean field ` isAuthorized ` to ` AccessControlContext ` and updated its assignment in ` ProtectionDomain ` to handle authorization checks
refactor OSGiDeployer to check if the app is an instance of AbstractOSGiApp before sending events to improve error handling
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure proper MIME type handling for tiff
[ hotfix ] [ call ] fix synchronization issue in optimizedcalltarget
added a new file CubocDesktop . java and modified Cubocy . java , Map . java , and MapRenderer . java
updated PolicyMonitor and PolicyMonitorTest to use target directory paths instead of test resource directories to ensure compatibility with different directory structure for monitoring tests
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure all files are removed from the trashbin list
replaced instances of ` org . eclipse . jdi . virtualMachineManager ( ) . allConnectors ( ) ` with ` com
truffle : fix checkglobalvariablestoragenode . execute ( ) and dowrite ( ) in runner .
updated the ` createLauncherEvent ` method to accept an additional ` Intent ` parameter and modified related data handling to enhance event processing by associating
replaced hardcoded value of myMaxBurnAmount with a constant variable MAX _ BURN _ TARGET _ LOWER _ FLOOR to
refactor UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database for managing unique constraints to improve compatibility with H2 - specific database
updated the SQL query construction in DMLTransformer . java to handle empty insert statements correctly to improve clarity and correctness of the SQL query
updated import statements and changed parameter from " http " to " https " in ServiceValidateControllerTests . java to enhance test clarity and ensure
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and adjusted related logic for handling default function names to enhance functionality
refactor JarLauncher class to improve code readability to enhance maintainability and facilitate future updates
updated generic types in multiple classes to use generics for better type safety to enhance code readability and maintainability
added a new dimension to DeviceConfiguration and modified the handling of the first call peer in OperationSetVideoTelephonyJabberImpl to
added unit tests for updating a PGobject in ResultSetTest . java to ensure correct handling of PGobject values in database operations
modify password reset endpoint to return UNPROCESSABLE _ ENTITY if the user has a non - UAA origin to ensure proper response handling for invalid
replaced the method of retrieving the propertiesElement from getChildNodes to getDocumentElement to improve clarity and maintainability of the code
refactor Cache class to improve cache management to enhance performance and maintainability of cache operations
changed variable names from ` timeInSec ` to ` timeMillis ` and ` prevTimeMillis ` in ` Isochrone . java `
fix the lightrelay not be able to bind to a non - existent bind
added a new ` Chainer ` class and updated the ` contains ` method in ` CollectionSubject ` to use it to improve type safety and
refactor Model class to improve code organization to enhance maintainability and readability of the code
updated recordedTime calculation to include 619315200000L to ensure accurate representation of recorded time
added a condition to resize the status if the terminal type starts with Windows to ensure proper handling of terminal types in the application
updated the ` UpdateDesiredStackAction ` to conditionally set the ` hostVersion ` state based on the ` NOT _ REQUIRED ` state to
[ java ] move java _ src / gwt - jsinterop - annotations . jar into integrationtestcase
replaced HashSet with LinkedHashSet and updated resolvedArtifacts initialization across multiple classes to enhance insertion order and improve code clarity
changed the declaration of the ` op ` variable to be final in ` OperationServiceImpl . java ` to ensure that the ` op ` variable
[ knative ] fix checkstyle issue in knativeenvironment
updated thread pool name from " commitlog _ archiver " to " commitlogArchiver " to improve clarity and consistency in thread naming
added connection ( ) method calls in CloudSolrClient and implemented a test for cloud client uploads in TestCloudSolrClientConnections to ensure proper handling
synchronize access to allbindings in case of concurrent modification
added methods to clear files and cache in ShadowContext . java and refactored file handling in RobolectricTestRunner . java to
added LinkedHashSet and TreeMap classes to SecureXStream and updated test assertions in XStreamPersisterTest to enhance the functionality of the SecureXStream class
[ drools - 4892 ] add kie - api - builder . withkiemodule ( kiemodulemodel ) (
added conditional checks for nearmland and nearmland data in BlockEventListener . java to ensure proper handling of nearml and nearml
added a default implementation of the ` getLocalIp ( ) ` method in ` FinishedSpan ` to provide a default implementation for the ` getLocalIp
replaced direct retrieval of OBJECT _ VAL with serialization in JdbcStepExecutionDao and updated test cases in AbstractStepExecutionDaoTests to improve data
updated the calculation of ` b0 ` and ` frequency ` in ` AbstractDictionary ` , ` BigramDictionary ` , and ` WordDictionary
added " python37 " and " python - gpu " to the resource list and modified path handling in tensorflow . java to enhance compatibility with the
refactor PluginTab to encapsulate plugin retrieval logic into a separate refresh method to improve code readability and maintainability by encapsulating the refresh
changed log level from info to warn for history file reloading , saving , and trimming errors in DefaultHistory . java to provide more detailed
cloudstack - 4892 : fix npe in vmwarestorageprocessor when vm be not find
sftp : make sure we do n ' t stop the sftp server
refactor ExperimentalMockitoJUnitRunner class for improved readability to enhance maintainability and facilitate future development
updated serial handling in GpsSettingsActivity and Session classes to use a utility method to improve code clarity and maintainability by centralizing serial
refactor SwapGBuffers class to improve code readability to enhance maintainability and facilitate future updates
added null check for spatial before removing the skeletonControl to prevent potential NullPointerExceptions when spatial is null
added smartReplies functionality to ShadowRankingTest and updated ShadowRanking to use it instead of ReflectionHelpers to improve flexibility in managing smart
[ java ] remove unnecessary lambda expression in list ( ) .
simplified the initialization of carrot2ResourcesDir in CarrotClusteringEngine . java to improve code readability and maintainability by
added null check for testRect in WindowsTreeUI . java and created a new class bug8004298 . java for testing tree interactions
updated ASM API version from ASM7 to ASM9 in CompilationConfig . java and modified ASM _ API _ VERSION from AS
modified return statements in RecommenderMapper and Retriever classes to throw TasteException for null and empty map files to improve error handling by providing
added ClientInfo import and setup method in SurrogateAuthenticationEventListenerTests . java to ensure proper configuration of client information during tests
set isUserView to false in CardPresenter . java to reset user view state when user is not present
refactor ` DiagramRenderer ` and ` GraphvizJavaExecutorUtility ` to use ` GraphvizUtility ` instead of ` GraphvizJava
refactor the creation of metric metrics in LogDispatcherThreadMetrics . java to streamline the histogram creation process to improve code readability and maintain
added a new module - info . java file for the sqlite connector to define module exports and dependencies for the SQLite connector to facilitate
added a delay of 500 milliseconds in StreamResetTest . java to ensure the test has sufficient time to complete before proceeding
removed conditional check for " new " and " api " in permissionsManager initialization to streamline permission management by eliminating unnecessary checks
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method ` getDepth ( Context context ) ` to the ` SpringLoadedState ` class to provide a default depth of 0.5 f
refactor BinaryDecoder to use Arrays . copyOfRange for array copying to improve readability and maintainability of the code
[ hotfix ] [ doc ] fix typo in executiongraph javadoc
remove notification from notification activity and remove it from NotificationRenderer to streamline the user interface by eliminating unnecessary swipe - related components
updated exception handling in DefaultExceptionConverter and improved test cases in ExceptionsTest to enhance clarity and maintainability of exception processing logic
fix npe in glowcontainer when lock be null
replaced MethodHandle lookup with reflection - based method retrieval in ProxyMaker . java to improve code readability and maintainability by using a more
changed the type of ` value1 ` , ` value2 ` , and ` value3 ` from ` int ` to ` Integer ` to
updated the return statement in BaseEmailContentFormatter to remove unnecessary comma from the subject string to simplify the return statement for better readability and maintain
added a simple panel to the layout provided panel and updated its visibility logic in LayoutPanel . java to enhance user interface by providing a structured panel
added a null check for the location parameter in the sleep condition to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check for missing DSAPublicKey parameters in BasicChecker . java to ensure that the key parameter is not null before proceeding to prevent
refactor media handling logic in MediaTypeRequestMatcher to use a dedicated method to improve code readability and maintainability by encapsulating ignored media types
refactor logging statements to use a variable for task number instead of a hardcoded value to improve code readability and maintainability by reducing
added a property to the SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding in the Spring Boot test configuration
added null check before closing indexReader to prevent potential NullPointerException when indexReader is null
refactor package structure for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , and BTCMarketsManualExample classes to
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure that the code renders correctly
added a new file CompatibilityTest . java to test property loading and validating the Compatibility XML file to ensure correct handling of property
added new utility classes for PushUtils and SecurityUtils to provide utility functions for push and security management in the nextcloud client
updated the logic for determining the number of replicas from currentAssignment and targetAssignment to Integer . MAX _ VALUE in TableRebalancer . java to
update version numbers from 2.6 . 1 to 2.7 . 0 in ExoPlayerLibraryInfo . java to reflect the release of
log4j2 - 1343 fix test that fail on window
throw a sockettimeoutexception if the ajpprocessor . readtimeout be set to false
set default values for friction , restitution , density , density , and isSensor to 0 in FixtureDef . java to
[ te ] change fetchsaclingfactors to fetchscalingfactors in classificationtaskrunner
added a shell command for waiting for broadcast idle in LauncherInstrumentation . java to handle potential IOException when waiting for broadcast idle
added unit tests for font and link tags in ResourcesTest . java and adjusted span calculation in ResStringPool . java to ensure correct handling of
fix typo in guistatscomponent . getstats ( )
added permission handling for making phone calls in Launcher . java and a new utility method in Utilities . java to enhance user experience by ensuring phone
updated return value from 32 to 36 in SimulationPanel . java and modified method signatures in BasicEventSimulationEngine . java to include Flight
refactor GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoEncodingUtils , TestGeoEncodingUtils , and GeoPointInPolygonQuery
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to provide a way to check if the Docker client is
added a constant for the VPX value in CodecTypes . java to facilitate the use of the " vpx " codec
added coordinatorAddress option to DistBuildFactory and updated related classes to allow configuration of the remote coordinator thrift server to connect to the remote coordinator
added a new method ` match ` in ` FsUtils ` and refactored timer usage in ` WrapTimer ` to improve path matching functionality
added a check to ensure labelValues are only added if the value is non - negative before adding it to the labelValues list to avoid adding
ggb - 2336 fix for ` ` true ' ' and ` ` false ' ' for ` ` true ' '
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
updated materialization time handling in ObjectStore and added a test for updating materialization time in TestObjectStore to ensure materialization time reflects
added error handling for missing native dependencies in VoskSTTService . java to improve robustness by logging warnings when missing native dependencies are
remove the ` ` is _ one _ WAY ' ' property from JMSSamplerGui and update message formatting in JMSSampler
modify return condition in GlyphView . java to handle cases where p1 is equal to p0 to ensure correct break weight is returned based on
refactor RCFile . java to improve checksum validation logic to enhance performance and maintainability of the sync handling logic
added an @ AwaitsFix annotation for SOLR - 13028 in AutoAddReplicasPlanActionTest . java to address a known
replaced direct retrieval of steps and processors with a linked list of unwound entries in ToePool . java to improve clarity and
removed the parameter ` flavorsForFormats ` from the ` setToSortedDataFlavorArray ` method and updated the ` DataTransferer `
hbase - 14836 testthriftservercmdline : add - infoport and infoport to testthriftservercmdline
added a check for EOF state in RegExpScanner . java to ensure proper handling of end - of - file scenarios
replaced direct calls to ` Boolean . getBoolean ` with a static set of enabled metrics and timers to improve code readability and maintainability by
fix potential npe in chatroomjabberimpl .
improve error message for null or empty filename
refactor refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by encapsulating refresh token creation
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] [ yarn - flink - api ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a way to retrieve
updated BTCChinaExchange to set SSL URI for the polling market data service to ensure secure connection for the BTCChina exchange
pmd : use the base dir of the output file in cpdtask to ensure that the output file be relative to the project ' s
added OauthController and Oauth2PluginTest classes for OAuth2 integration to facilitate the retrieval and testing of OAuth2 functionalities in
refactor SemgrexPattern class for improved readability to enhance maintainability and clarity of the codebase
refactor ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` , removed ` EntryStream ` and ` StreamEx `
updated error log message to include the message in RestCodec . java and added error handling in ExceptionToProducerResponseConverters . java to improve error
updated the condition in RobolectricClassLoader to allow Maven projects with scala to run with Maven Surefire to enhance compatibility with Maven
inverted the condition check for transmittableAudioEncodings in MediaControl . java to ensure that the condition is only checked if the sdp is
change the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator . java ` to
added methods to check station paths for GML 31 and 32 in NormalizedMultiValuesTest . java to ensure compatibility with new feature features and
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a check for configuration before calling expandRegexMapping in ColumnarDataSource . java and changed return types in RowProcessor . java to unmodifiableMap
refactor ` splitIntoThirtyParts ` to ` splitIntoThirtySecondsParts ` and introduce ` getPositionsArraySize ` for
added new classes XLCDCommunicator and XLCDController , and modified FirmwareUtils to handle Grbl and Tiny
( chore ) camel - kie - api : move schema loading from kie - api to kie - api
added retry logic to check for empty messages and transaction messages in multiple classes to improve reliability of message validation and ensure that messages are not empty
[ hotfix ] [ test ] use join instead of await thread state in workerprocesspooltest
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
increased the values of FREEZE _ V2 , UNFREEZE _ V2 , and UN _ DELEGATE _ RESOURCE
updated the ` command ` method to throw ` ConfigurationException ` and modified configuration handling in ` DownloadPlugins . java ` to improve error handling and ensure
deleted the SpringTransactionHooks . java file and replaced it with AbstractSpringTransactionHooks in SpringTransactionHooksTest . java to streamline the
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added a new file GetUninitializedStringValue . java that implements a test for handling uninitialized String arguments to facilitate testing of string
added support for provided dependencies in AndroidLibraryDescription and updated related tests in GraphEnhancementQueryEnvironment to enhance dependency resolution and improve test coverage
added a new boolean flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable control over keyboard transitions
replaced the handling of system anomaly messages with a static flag for saving bugreport to improve clarity and control over the saving of bug
added a new constant CINEPACK in FormatConfiguration and updated LibMediaInfoParser to use it to enable support for Cinepack format in
added camera bobbing configuration and modified animation offsets in the Player class to enhance the visual appearance and control over camera bobbing behavior
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted the HSQLDBServerFilesFilter . java file and refactored the file listing logic in TestUtility . java to streamline the
added a null check for restoreFromSeed and restoreFromKey in the WalletAppKit class to prevent potential NullPointerExceptions when restoreFromKey is
added logging for missing title by IMDb ID in MediaTableTVSeries . java to improve traceability for missing title by IMDb ID
added a typeExists flag to the visitMethodInvocation method in HasTypes . java to ensure proper handling of method invocations based on type existence
replaced hardcoded array size with a constant to improve code readability and maintainability
do n ' t display the dialog if the current mode be not configure properly
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskShowFirstN , and
refactor test to use junit ' s TemporaryFolder for temporary file handling to improve test reliability and maintainability by leveraging temporary
added itemstack . isitemstackdamageable ( ) and gethassubtypes ( ) method to itemstack .
fix mc - 167447 line width issue ( mc - 167447 )
simonstewart : set the ` ` browser . startup . page ' ' preference to ` ` 0 ' ' in firefoxdriver
added a condition to check for CONNECT and GET methods in Http1xClientConnection . java to ensure proper handling of HTTP connection responses based on
updated the task accept method from " compile " to " process - classes " in JoobyMojo . java to align the task
replaced the connection manager shutdown method with a connection manager ' s closeIdleConnections method to improve connection management by allowing more time for idle connections
added a conditional check for aggregate function suffix before processing metrics in AmbariMetaInfo . java to ensure metrics are only created when aggregation functions
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use mCurrentFullscreenParams for corner radius retrieval to enhance
added a new Java class to calculate the frequency of a given number of times to facilitate the counting of occurrences of a given number
[ java ] set the ` ch1 ` variable to ` null ` in ` ClusteredAgentManagerImpl . java ` to ensure that the
refactor MutisignOperationerGodicTest class for improved clarity to enhance maintainability and readability of the test code
added error handling for fragment reading in StaxEventItemReader and created a new test for restarting at end of the file to improve robust
replaced specific text imports with a wildcard import and modified attribute handling logic in ShadowTextView and TestAttributeSet to improve code readability and
replaced the import of ` com . nimbusds . jose . shaded . json ` with ` net . minidev
added support for " AIX " family in OS . java and updated OS mapping in PKCS11Test . java to enhance compatibility with AIX
server : fix the usage of networkelementcommand # setaccessdetail and setaccessdetail in networkappliancemanagerimpl . java
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to provide a way to invoke a RunnableWithResult
deleted the PresenceMessageComboTests . java file to the test class is no longer needed in the project
replace explicit type casting with Math . round for calculations in PortraitPagedViewHandler . java to improve code readability and maintainability
updated variable names in TestClusterDumper . java for consistency to improve code readability and maintainability
updated the return statement in KeyValue . java to include a new size of 3 * Bytes . SIZEOF _ INT and rowCache to improve memory
camel - 14263 : camel - core - add support for type converter in camel context .
added support for handling ConditionalTask in SparkCrossProductCheck to enhance task execution capabilities for conditional tasks
refactor action handling in Launcher , LauncherAppState , and LauncherModel classes to improve code readability and maintainability
updated the login logic in LoginInfoEndpoint and added new test cases in LoginInfoEndpointTests to ensure correct handling of JSON inputs in the login
added a method ` toDescriptiveString ( ) ` to the ` AssignmentManager ` class to provide a detailed representation of the region ' s
added message and result fields to HuobiAccountInfo and updated related methods in HuobiAccountInfo and HuobiAccountServiceRaw
added support for " PERIOD " keyword in MariaDBDatabase and implemented a test for it in AddColumnGeneratorTest to enhance functionality and
[ flink - 1649 ] [ doc ] update portablepipelineoptions documentation
updated VersionChangeLogs . java to include additional information about changes to the dictionary loading mechanism to enhance user experience by providing clearer guidance for
updated NUM _ MILLIS _ IN _ DAY constant from private to public in IndexExpressionIT and TestUtil to allow external access to the constant
removed debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] use aeronclientinvoker instead of invoke aeronclient in archive and consensus module .
updated validation logic in Attr . java and added a new class NoWarnOnImplicitParams . java with generic merge tests in NoWarnOnImplicit
refactor menu item visibility and enablement of menu items in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by
added new data types for BTC _ deposit in BTCETransHistoryResult . java and updated corresponding test assertions in BTCE
replace ArrayList with Set for series and exceptions in RetryFilterFunctions . java to improve performance and reduce memory usage
marked the PluginLoader class as deprecated to indicate that the class is outdated and should no longer be used
added a condition to check if the end time is less than the sequence time in LastQueryExecutor . java and created a new test for last
updated newline character in HttpResponse . java to ensure proper formatting to improve code readability and maintain consistency
added a static block to set a system property " org . slf4j . simpleLogger . log . org . apache . http .
added a method to set the safe area of the title bar in the Sheet class to improve user experience by allowing the title bar to be displayed
reversed the iteration order of TimeSeriesChunkMetaDataList from a for loop to an index - based approach to improve code readability and maintainability
added SQL command for altering tables and deparsing in AlterTest . java to enhance SQL command functionality and ensure proper parsing and deparsing
changed the access modifier of the copyState method from package - private to public to allow access to the method from other classes
fixed - redissonexecutorservice . executeasync ( ) method do n ' t return a completable result
filelister : use ` ` . part ' ' suffix instead of ` ` . part ' '
refactor multiple Orc - related classes for consistency and clarity to improve maintainability and readability of the codebase
reformatted code for better readability in CompareFunctionsProcessor . java to improve code clarity and maintainability
updated the ` reduceScopeForLimitedSpace ` and ` checkAvailableDiskSpace ` methods to accept a ` expectedSize ` parameter and impro
added ` toString ( IndexReader ir ) ` method to ` TermFreqVector ` and ` getTermPositions ` methods in ` SegmentTermVector `
added checks for state handler invalidated in AbsSwipeUpHandler and unregistered TaskStackListener in TaskAnimationManager to ensure proper handling of gesture state
refactor lock timestamp handling to use SharedPreferences instead of static context to improve flexibility and maintainability of lock timestamp management
refactor artist retrieval in MediaInfoParser to use a dedicated method to improve code readability and maintainability by reducing duplication
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when accessing remoteMessage
added null checks and empty checks for splitInfo and splitFlowFile in SplitText . java and corresponding unit tests in TestSplitText . java
added support for Windows key store loading in HttpsConnectorFactory to ensure compatibility with Windows - specific key store handling
updated DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to improve test reliability by
added a condition to ignore the FILE _ NOT _ FOUND result when the remote folder is ignored to improve handling of file - not - found
added animation functionality to the Slider class to allow customizable animation effects during slider transitions
replaced occurrences of ` eol ` with ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to ensure consistency in variable naming across the
reduced the maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to optimize memory usage for texture packing
added a test for negated Ternary in UnnecessaryParenthesesTest . java and modified the condition in UnwrapParentheses . java to
camel - 14263 : camel - hazelcast - fix npe in camel - hazelcast
added a new ` TextFeedbackTest ` class and modified ` TestRunner ` and ` TestRunner ` to use it to enhance test coverage and
replace Math . round with Float . compare for score comparison to improve accuracy in score comparison
updated case statements and adjusted DENSITY values in AddAndScaleMultiImage . java and ResourceEditorApp . java to use try - with
[ hotspot ] add arrayelementoffset configuration to hotspotreplacedutil . arrayclasselementoffset
improve performance of defaultlogpublisher when there be no stage total
added remote SCM support handling in multiple configuration classes to enable or disable remote SCM support for remote systems in the application
[ mielappliance ] add support for end and rinse colour in appliance
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events in ` StatsLogCompatManager . java ` to improve
corrected variable name from ' log ' to ' LOG ' in LocalZookeeper . java to improve code readability and maintainability
added unit tests for ProjectGenerationEvent and ProjectGenerationEvent events in EventSerializationTest . java to ensure correct serialization and deserialization of ProjectGenerationEvent
ggb - 1187 add support for preVIEW _ POINTS and update specpoints in selectionmanager
refactor JavaCompiler class to improve code structure to enhance maintainability and readability of the code
added error handling for non - positive remainingTime in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that the test execution time
refactor multiple Java test classes to improve code organization to enhance maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " options to the Ldflags list in NdkCxxPlatform
updated ` SpringCloudCircuitBreakerFilterFactory ` and ` SpringCloudCircuitBreakerTestConfig ` to use ` ServerWebExchangeUtils . expand `
refactor test classes for consistency and clarity to improve maintainability and readability of the codebase
refactor checks for string attributes in ReadOnlySharedStringsTable . java to use localName instead of name to improve code readability and maintainability by
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 `
added a check for negative availTextWidth in SwingUtilities2 . java and improved exception handling in Test6635110 . java to
refactor FlatteningIterator to simplify iterator handling and improve clarity to enhance code readability and maintainability by reducing redundancy
removed HTML tags from title and body in NotificationUtils . java to ensure proper formatting of tags in notification elements
doc : generate sample code in the java microgenerator ( # 4382 )
added a test method to reload and delete an existing question in InstructorFeedbackEditQuestionsUiTest to ensure that a confirmation and deletion of
updated return values in HSSFSheet . java and added new assertions in BaseTestSheet . java to ensure correct handling of row counts and
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
[ java ] send event to cluster session when a session be open .
refactor hashCode methods in AbstractParquetMapInspector for improved clarity and consistency to enhance code readability and maintainability by reducing
added logic to flush and release the QIC session if the remote connection is closed to ensure proper resource management and prevent potential memory leaks
modified the SplitReader interface to extend AutoCloseable and removed the close ( ) method from SplitReader . java to enhance resource management by allowing
removed unused GsonBuilder . deepCopy ( ) method from GsonBuilder . java to streamline the code by eliminating unnecessary properties
replace null return statements with static final NOT _ FOUND map in LLScanner . java and add assertions in LLSourceBuilder . java to improve
refactor file handling in RestClientRequestImpl to use a loop for improved readability to enhance code clarity and maintainability by redu
removed unnecessary whitespace in dispatchStatusString method call to improve code readability and maintain consistency
replaced ` MockFactory . class . getClassLoader ( ) ` with ` SearchingClassLoader ` and introduced a new class ` SearchingClassLoader `
add test for refresh flag bug
added a condition to check for LEFT _ SEMI _ JOIN in ConstantPropagateProcFactory . java to ensure correct handling of LEFT _ SE
refactor response completion checks in HttpReceiver and HttpSender to use HttpStatus . CONTINUE _ 100 to improve code clarity and ensure proper response
replace ` arrayLengthOffset ` with ` arrayOopDescLengthOffset ( ) ` across multiple files to ensure consistent usage of ` arrayO
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for set default policy
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a check for ` isRunning ` before calling ` appCtx . stop ( ) ` in ` CrawlController . java ` to ensure that
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return a GlyphLayout instead of void
refactor metrics retrieval in SpringmvcClient and throw InvocationException in CodeFirstSpringmvc to streamline metrics retrieval and improve error
updated SAFE _ ACCOUNT _ AGE _ DATE to remove unnecessary type parameter and simplified return statements in AccountAgeWitnessService . java to
reformatted code for consistency and readability in StructureHeader . java and StructureReader . java to improve code clarity and maintainability
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and DefaultLogoutWebflowConfigurerTests to enhance interceptor handling for resource URL
add dexreturninliner to make it easy to transform the return statement .
include configuration property in enrichedruledto ( # 1748 )
removed the NOFOLLOW _ LINKS option from the directory retrieval method in PathResource . java and updated test parameters in AliasCheckerSymlinkTest .
[ hotfix ] [ table - planner - blink ] remove the sqldialect from the executionentry
rename ` rDotJavaPackages ` to ` rDotJavaPackagesSupplier ` and introduce a new boolean flag ` hasRDotJavaPackages
pmd : add test case for pmd package declaration
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to enable dynamic configuration of the minimum cross compaction unseq file level for
[ hotfix ] [ runtime ] move active class into active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated URI handling in ZipResource and added unit tests in ZipResourceTest to improve error handling and ensure proper parsing of feature files with spaces in
updated formatting and added thumbnail handling in ExpandableUploadListAdapter . java to improve code readability and ensure proper thumbnail management
refactor RobolectricTestRunner to improve configuration merging logic to ensure correct merging of parent classes and methods based on annotation presence
added filtering for block and item registry in ModelLoader to ensure that the registry name is not null before proceeding with operations
refactor methods in AbstractDataChangedListener and update WebsocketCollector and WebsocketDataChangedListener to extend AbstractDataChangedListener to improve method
added support for enum types in JSONPojoConvertor and updated test cases in JSONPojoConvertorTest to improve type handling and ensure
added deprecation warning for ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the deprecated ` -- view
refactor GWTRequestWrapper to use ByteArrayOutputStream instead of String for better memory management to improve performance and memory efficiency by utilizing byte array instead of
added orientation correction functionality to the GyroControl class to enhance sensor responsiveness based on device orientation
change the size of the BIOME _ LIST _ SIZE from 256 to biomeGenBase . getBiomeGenArray ( ) .
updated eval method calls to use ` print ` instead of ` println ` in ` GetInterfaceTest . java ` to improve clarity and consistency
updated the initialization of the Environment variable in FileCompilerConfig . java to ensure consistent environment retrieval across the compiler configuration
added a new interface ` ByteToLongCollector ` with methods for ` ObjByteConsumer ` , ` BinaryOperator ` , and ` ToLongFunction
added a preload parameter to the MMapDirectoryFactory to control the loading behavior based on user - defined settings
added multiple custom metrics for worlds , economy , economy , and mysql in BukkitPlatform . java to
refactor QuickConnectREST class to improve code readability to enhance maintainability and facilitate future updates
added aspect ratio and default card image drawable in CardPresenter to enhance the visual appearance of the card in the application
improve authenticationcountselector and loginredirect to use loginpageurl ( ) .
updated the handling of longValues , doubleValues , Decimal128 , and byteValues in VectorHashKeyWrapper . java to improve performance by avoiding
added tests for system nanotime JIT functionality in TimeChangeTest . java to ensure correct handling of JIT nanotime operations during
added trimming of input lines in MultiPartFilter . java and a print statement in MultipartFilterTest . java to ensure robust input handling and
fix livingexperiencedropevent not fire when it ' s drop from the livingbase
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to include " @ text / offline . config - error - unknown - apikey
[ beam - 1745 ] remove unsupportedoperatorvisitor from beamqueryplanner
refactor GraphEnhancementQueryEnvironment to improve node and target graph handling and add RdepsFunction to enhance query environment functionality and ensure correct
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a check for the entire rocket type before setting the selected index in ScaleDialog . java to ensure that the selection option is only selected
replaced ` Arrays . toString ( ) ` with ` assertEquals ( bytes , rs . getBytes ( 4 ) ) ` in ` Updateable
added time boundary info retrieval and attachment logic for hybrid tables in BaseBrokerRequestHandler . java to improve handling of time boundary information for hybrid tables and
do n ' t add a socket reference to the poller in apr when the endpoint be pause .
update eightmuses ripper to use a huge collection of free porn comics for adults .
replaced instances of ` mDevice . wait ( Until . hasObject ( ) ) ` with ` TestHelpers . wait ( ) ` across
added additional conditions to check if the user is not in landscape mode to ensure proper layout behavior for phone devices in the launcher
updated assertions in PartTreeJpaQueryIntegrationTests to use query unwrapping from HibernateUtils to ensure compatibility with the updated HibernateUtils
replaced the method ` readAllLines ` with ` readMatchingLines ` and added a new method ` readMatchingLines ` to enhance security by
added a dynamic check for the " getResultStream " method in JpaQueryExecution . java to ensure that the " getResultStream " method is
added null check for entity in PhysicsProcess . java to prevent potential NullPointerExceptions when entity type is null
add a test to verify that the entry processor clears the map when the value attributes are indexed to ensure that the entry processor clears the map when
add support for jitsi - conference - room and jitsi - conference - room in the sip implementation .
updated color formatting in Utils . java and modified HTML message format in UtilsTest . java to improve readability and maintain consistent text formatting
fix ` ` disable ' ' for menu and editor menu
updated cratch path format and added RmStep to Aapt2Link . java to improve clarity and functionality of crashes in the
replaced instances of ` new Capture ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java `
make sure selection be update in algebra instead of clearselectedgeos ( )
improve error message when parse cql expression in ysldvalidator
implement isCanceled ( ) method in BehaviorCall , Calls , and OkHttpCall classes , and updated ExecutorCallAdapterFactory to use it to
refactored the ` isAnnotationPresent ` method across multiple classes to use a default implementation of ` isAnnotationPresent ` to improve code readability and maintainability
added a default implementation for the ` removeAllWidgets ` method in ` UILayout . java ` to indicate that the ` removeAllWidgets ` method
[ hotfix ] [ test ] fix yarnsessionfifoitcase and yarnsessionfifoitcase to use log4j
http : / / issues . apache . org / jira / browse / amq - 4892 - fix opensslcipher . java to
added logic to conditionally force high res content for Fire TV Stick playback to enhance user experience by allowing transcoding of high res content
[ beam - 10670 ] fix readsourcetranslatorbatch and readsourcetranslatormockbatch to work with spark 2.0 . 0
replaced Date import with a wildcard import and modified listener handling logic in GpsLoggingService . java to improve code readability and maintainability
changed the data type of ` fullwidths ` and ` widths ` from ` boolean [ ] ` to ` byte [ ] ` and updated related
added support for BaseItemDragListener in FolderIcon . java to enhance drag - and - drop functionality in the launcher
added a new method ` createEmptyArtifact ` to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and `
updated configuration retrieval for RabbitMQ exchange server , type , host , queue name , and routing key in RabbitMQPublisherImpl . java to ensure
simplified the condition for checking the afterAug1 condition in VideoViewerActivity . java to improve code readability and maintainability by
added a compact path to the destination path in SftpOperations . java to ensure proper handling of file paths during FTP operations
fix unit test which fail on slow ci server
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability
added support for LARGE _ FERN in the BlockDoublePlant and BlockType classes to ensure compatibility with LARGE _ FER
replaced tree . setFocusable ( false ) with tree . setRequestFocusEnabled ( false ) in TranscodingTab . java to enable request focus
throw exception if stopping vm fails , then ui can show the error message in stead of fails silently
updated license acceptance logic in DB2TestSystem and modified database type checks in DockerDatabaseWrapper and TableIsEmptyGenerator to ensure compatibility with DB
refactor unit handling in DoubleModel and GeneralOptimizationDialog to use a new method for setting and updating units to improve code clarity and
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to facilitate the use of trading
added a check for the number of samples in TestPBRLighting . java to set the number of samples based on the current settings
removed redundant line breaks in StepWithSimpleTaskJobParserTests . java to improve code readability and maintainability
changed variable declarations from ` final ` to ` final ` in ` CentralAuthenticationServiceImplTests . java ` to enforce immutability of
fix a syntax error in the ggbabs ( ) function
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to improve code readability and maintain
[ jbrules - 4892 ] add support for bigdecimal coercion .
added " org . eclipse . jdt . " to hide jdt used by jetty in WebAppContext . java to enhance security by
removed the call to super . useAuthCache ( ) in NegotiateAuthentication . java to simplify the authentication logic by eliminating unnecessary
updated namespace assignment to use capitalization to ensure consistent capitalization of segments
camel - 16463 : camel - direct should not throw directexchangeexception if no consumer available on endpoint .
added null check for zooKeeper before setting it to null to prevent potential NullPointerException when zooKeeper is not initialized
corrected a typo in the step message in Loader . java to improve code readability and maintainability
replaced direct calls to ` mVibrator . cancel ( ) ` with a method ` runOnUiHelperThread ( ) `
added a method to update the last remote stream ID to ensure proper tracking of stream IDs in the HTTP / 2 session
added text anti - aliasing rendering hints to the Graphics2D object in EditorHeader and EditorToolbar classes to enhance rendering quality for better visual
[ java ] : fix position limit calculation in driver publication .
refactor : remove static import of enums in ctannotationimpl . java ( # 2598 )
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replaced native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to improve performance by leveraging native
added a method to create a new output stream with specified encoding to enhance flexibility in output stream handling by allowing custom character encoding
updated the vibration duration from 1 to 25 in TouchableMovementMethod . java to increase the vibration duration for better responsiveness
update import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to
refactor WebSocketClient constructor parameters to accept an explicit Executor parameter to enhance code readability and maintainability by reducing redundancy
simonstewart : make the i18n test more stable
updated exception handling methods to use ` handleLoadConstantException ` instead of ` handleIllegalArgumentException ` and ` handleIncompatibleClassChangeError ` to improve
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper management of authentication system state during tests
added a new ` LowercaseComparator ` class and modified constructors in ` CoNLLUFeatures ` to use it to improve case - insensitive
refactor the ` parse ` method to accept a ` List < JavaFileObject > ` instead of a ` Iterable < JavaFileObject > ` to
simonstewart : add more test for the multi - selection feature
removed validation for the length of keys in HighestKvno . java to streamline the code by eliminating unnecessary exception handling
added error handling for retrieving attributes in HDF5BatchReader to ensure only Huge object BTrees with 1 record are supported to improve robustness
[ beam - 1749 ] [ beam - 1748 ] use beamio . in ( ) instead of beamio . in (
updated XML root element name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added API implicit parameters in ProcessGroupResource
added a new file ` TestMultiANewArray . java ` that tests the functionality of multi - dimensional arrays in Java to verify the functionality
removed the use of the secondary storage vm configuration in the ManagementServer configuration to simplify the configuration by eliminating unnecessary configuration options
refactor the calculation of ` len ` to use a local variable ` headNum ` for clarity to improve code readability and maintainability
added a method to set the theme in the PreviewViewer to ensure the correct theme is used for the preview tab
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in ConnectorTimeoutTest . java and modified the idle timeout configuration in ServerConnectorTimeoutTest . java to ensure
added dcoref . dictlist , dcoref . dictpmi , dcoref . signatures , and dictionaries . getstring
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method
removed unnecessary type casting for JpaPagingItemReader and updated parameter values in JpaPagingItemReaderIntegrationTests and JobLaunching
changed log level from warn to debug for child node retrieval in DistributedQueue . java to reduce log verbosity for better debugging
refactor color extraction logic to use a dedicated method for retrieving the hotseat palette to improve code readability and maintainability by centralizing
replaced ` DefaultDataTableEntryTransformer ` with ` TableCellByTypeTransformer ` in ` TypeRegistry ` and added setter methods in ` TypeRegistry
removed assertion for newAvailableShared in AtomicRemainder . java to streamline code by eliminating unnecessary assertions
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` boolean field and its getter method from ` ProjectGenerator ` to streamline the project generation process by eliminating
[ hotfix ] [ runtime ] fix checkstyle violation in driverutils
added POST routes for contact form and created a new Contact class for handling contact names and descriptions to enhance user experience by allowing users to access contact
guacamole - 489 : use objectpermissionset instead of permission .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
[ hotfix ] [ runtime ] fix typo in method signature
rename method ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to improve clarity
replaced manual resource closing with IOUtils . closeSafely for better resource management to improve code reliability by ensuring safe closure of per - document
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper to enhance user interaction by allowing the overflow button to be displayed
updated failure messages in ` Subject ` , ` OptionalSubject ` , and ` SubjectTest ` to reflect " is a non - null reference "
ggb - 2323 update the line height of the input tree item in the help button
move protobufferutilitiestest to core . util and add test case
update divider position and side pane width in JabRefFrame . java to improve user experience by ensuring divider position and side pane appearance are
added support for crossref entry in aux file generation and improved error handling in AuxSubGenerator to ensure proper handling of crossref entries
[ geoserver ] use metadatamap instead of map in geoserverfeaturestore
rename the variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the
fix miss refresh of metacontact avatar when update a contact .
updated import statements for Command in ShellCommand and ShellFactoryImpl classes to ensure compatibility with the latest command structure
added a test for cleaning the audit log table post parameters by position in AuditLogTest . java to ensure proper cleanup of the audit log table
changed the type of the ` inject ` method from ` T ` to ` Object ` and added a suppression warning to improve type safety and
added regex patterns for parsing comments in ` ACLFileParser ` and updated related tests in ` ACLFileParserTest ` to improve parsing accuracy and
updated imports and modified the ` isReadable ` method in ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` and ` DynamicDrill
added ancestorDimensionValues map and updated node name formatting in StarTreeImpl and TestStarTreeNodeImpl to improve clarity and maintainability of
added a check for user unlock state before dumping plugins in TouchInteractionService and refactored closeOpenViews methods in BaseQuickstepLauncher
changed the condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to ensure the correct variable is used for position
refactor certificate validation logic in PKIXValidator . java for improved readability to enhance code clarity and maintainability
[ hotfix ] [ test ] add archunit test for the test code
updated package declarations for AlibabaDubboIntegrationBootstrap , ApacheDubboPluginTest , and ApacheDubboPluginTest
cloudstack - 4892 : remove skipprojectnetworks from networkserviceimpl ( # 4892 )
replaced ` remove ` method with ` get ` for retrieving the ` shape ` field in ` RuntimeTypeAdapterFactoryFunctionalTest ` to
added methods to store undo info for properties in App . java to enhance user experience by ensuring undo information is stored for properties
replaced direct access to the " sun . java2d . xrgradcache " system property with a privileged action to ensure that the
replace assertEquals with awaitility in StreamCloseTest . java to improve reliability of stream session management
updated the ` doAfterFlush ` method in ` DocFieldProcessor ` and modified the handling of ` perFields ` in ` TermVectorsConsumer
added support for handling deprecated errors in ConfigurationMetadataGenerator and added nested configuration annotation in AbstractJpaProperties to improve error handling and support for nested
updated capacity and mask calculations in BiInt2ObjectMap , Int2ObjectHashMap , and Int2ObjectHashMap classes to ensure consistent handling of
increased the maximum number of threads from 25 to 15 in HiveConf . java and modified file status handling in Hive . java to improve
add more trace logging to parallelniosender . close ( ) .
added a null check for the context in SchemeAndroidIDE . java to avoid potential NullPointerExceptions when context is null
fix native - image classloader usage in native - image build server
changed the return type of ` modifyGrantedAuthorities ` method from ` void ` to ` List ` in ` SwitchUserAuthorityChanger `
refactor JaxrsIntegrationTest to extend JaxrsIntegrationTestBase and add new test classes JaxrsSpringIntegrationTest and RawJax
added support for set query timeout in hikariconfiguration ( ) method .
added new data provider annotations for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest . java to enhance test coverage for
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in multiple classes to ensure proper resource management
added support for sequence handling in MariaDBDatabase and modified CreateSequenceGenerator to check for database version compatibility to ensure compatibility with MariaDB
updated formatting in MappedResizeableBuffer , UnsafeBuffer , CompilerUtil , and Int2ObjectCacheTest classes to improve code readability and maintain
replaced the import of ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test files to utilize the new ` MetricsRegistry
added support for " enableMFLNExtension " and " enableMFLExtension " properties in SSLExtension . java to enhance flexibility in
refactor ObjectHashSet and ObjectIterator to remove generic type parameters and improve iterator initialization to enhance flexibility and maintainability of the iterator implementation
updated character limit calculation in Compose . java and TweetFragment . java from 22 to 23 in Compose . java and TweetFragment
add datapoint _ ttl to the datapoint write buffer ( # 1748 )
modified ` checkForAndKillXcodeIfRunning ` method to accept an option for prompting Xcode to enhance flexibility by allowing users to
added a method to retrieve terrain at a specific cell in TerrainGrid . java to enhance terrain management by allowing retrieval of terrain
added default value handling in the Pretty class and created a new T6665791 class for testing annotation functionality to facilitate testing
added error handling for missing QuestEncryptionKeys . json in ResourceLoader . java to improve debugging by providing a clearer error message when the
added a condition to check if the HTTP transport is not pushed before proceeding to ensure that push support only occurs when the transport is not
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the sign method for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary signing logic
modified return statements in FileSystemView , Win32ShellFolder2 , and Win32ShellFolderManager2 to handle null roots and security checks to
updated row height retrieval and row span handling in ColumnText and changed copyContent method in PdfPRow to copyLastRow to improve accuracy of
refactor undo management in ListFragment to use SparseArray for managing selected notes to improve memory management and ensure all notes are removed from the list
[ issue # 1188 ] fix upload backup data for feedback question and comment ( # 1188 )
removed null check for data in getTransferData method to simplify error handling by throwing an exception for non - null values
# 827 - remove unused pstmtdelegate interface and interface
replaced ` Padding ` class with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame ` and ` Launcher ` to
refactored method handles in NashornBeansLinker to a static block and added consStringFilter functionality to improve code organization and enhance
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
rename ` latch ` to ` goAwayLatch ` for clarity to improve code readability and maintainability by using a more descriptive
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve cl
replaced ` ThreadLocal ` with ` Workbook ` and removed redundant calls to ` currentBook ` to simplify the code by eliminating
renamed the method ` vote ` to ` supports ` and added a validation check for ` Object ` to improve clarity and ensure compatibility with
removed unused imports from DataLoader . java to clean up the code and improve readability
added support for row count in postUpdateLog methods across multiple commands to enhance logging functionality by allowing tracking of row count updates
ggb - 2323 scaler style : make sure we do n ' t scale the scaler
added default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration . java to ensure default values are used for FPS
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog to ensure proper resource management and prevent memory leaks
replaced ` DefaultWebSocketFrame . FrameType . CLOSE ` with ` ChannelFutureListener . CLOSE ` in ` DefaultHttpServer . java `
renamed TestApplicationEventListener to TestApplicationEventListener1 and TestApplicationEventListener2 and added new test methods for OnStateMachineError to improve cl
refactor SettingsActivity to use a dedicated method for setting the list background color to improve code readability and maintainability by encapsulating the background
replaced Apache Commons StringUtils with OpenHAB StringUtils and added null check for line to ensure compatibility with OpenHAB ' s StringUtils and
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count based on a specified weight
reformatted code in Put . java and ReplicationSink . java to improve code readability and maintainability
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` for caching regular expressions to improve performance by reducing the number
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the ` gameThread ` instance
added a login method to the DigestAuthenticator class that checks if the username matches the digest realm to ensure that the login service is valid before proceed
refactor parameter handling in SavedRequestAwareWrapper to utilize an iterator for better readability and maintainability to improve code clarity and
updated InfoStatus messages in BasicConfigurator , LoggerContext , and ContextInitializer to improve clarity and consistency to enhance code readability and maintainability
replace countDown ( ) calls with this . wakeup ( ) in CommitLog . java and HAService . java to ensure proper synchronization of
added a check for Android O in PhotoViewerActivity and modified userAutoCompleteHelper to utilize this method to ensure compatibility with Android O and
updated schema info level from minimum to basic in SchemaCrawlerOptions to ensure consistency in schema info level configuration
replaced ` XMLStreamWriter ` with ` BufferedOutputStream ` for output stream handling in ` SaveTask . java ` to improve performance by utilizing buffered
replaced the use of ` random . bytesToString ` with ` randomFixedByteLengthUnicodeString ` and refactored the byte conversion logic
fix mc - 103516 not be able to find the entity in the list ( # 103516 )
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 4892 ] fix serializationinputmarshaller . hashcode ( ) and deserializationinputmarshaller . hashcode ( ) for multi - accumulate
refactor case statements in NowSearchTerm and SearchTermBuilder to improve code readability and maintainability
changed the visibility of the PDFCloneUtility class from public to package - private to restrict access to the class for better encapsulation
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageResolver for HTTP method resolution to improve code clarity and maintainability by using a
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start events
refactor ` computePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` before calling ` recomputePreviewDrawingParams `
replaced the use of TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to improve code readability and maintainability by
replaced null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot in AbstractCategoryItemRenderer . java to improve
modified the ` createSubContext ` method to include a ` Verbosity ` parameter and adjusted output formatting based on verbosity settings to enhance flexibility
added case conversion for databaseType in DbSqlSession . java to ensure consistent schema handling for Oracle database types
updated contextDesc construction in AsyncLoggerAllThreadContextImplementationsTest . java to include the context ' s simple name to improve clarity and
added a new file TestShrinkToOneRegion . java that calls System . gc ( ) to demonstrate the use of garbage collection of
updated string splitting method to use ` Splitter ` for improved readability to enhance code clarity and maintainability by using a more d
replaced ` utf8ToString ( context ) ` with ` context ` in ` AnalyzingInfixSuggester . java ` and
updated the handling of local attachments in PushsaferMessageBuilder . java to improve clarity and correctness of encoded string representation
[ zeppelin - 4892 ] remove unused usage of modelexplorer # showlabelstats
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the visibility of the FORMATTER function from final static to non - final in multiple field test classes to ensure consistent usage of the method across
updated the ` evaluate ` method in ` UDFRound ` to accept a ` Integer ` parameter and adjusted rounding logic to enhance flexibility in handling
refactor code to use ConfigParser for configuration retrieval to improve readability and maintainability of the code
changed class declarations from package - private to public in Test1 and Test2 classes to allow access to these classes from other packages
updated permissions in PlayerEventListener to use " deny . no _ enter " instead of " permission . no _ permission _ event " and improved
updated the method signature of ` getAdditional ` in ` ConditionAndOr ` and ` ConditionInConstantSet ` to include a session parameter to enhance
replaced ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` Base
added randomness for box and circle transformations in Box2DCharacterControllerTest . java to enhance the test coverage for Box2DCharacterController
added tests for the FLIGHT _ RECORDER _ OPTIONS option in TestBadOptionValues . java and modified memory size handling in TestMemory
removed validation checks for " must be power of 2 " and " must be a multiple of 8 " in ObjectAlignment . java and Options .
added a method to extract the target package name from the manifest in multiple classes to enhance the instrumentation test by allowing users to specify the target package
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
change the initialization of acceptableThrowawayItems from an empty list to an empty list to ensure that the acceptableThrowawayItems list is properly initialized
8278270 : [ testbug ] test6987555 . java fail to compile due to compiler warning
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
[ hotfix ] [ doc ] fix typo in inflection javadoc
added getter and setter methods for the Locale in EvaluationContext to enable retrieval and setting the locale for the el context
removed the import of Plugin from SummaryPrinter . java to streamline the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity . java to handle a specific case in the switch statement
updated import statements in MongoQueryCreator . java to use wildcard imports and modified debug logging to use getQueryObject ( ) method to improve code read
ww - 4898 add a system property ` ` xwork . loggerfactory ' ' to the system property ` ` xwork . logger
renamed methods in AdminAddPeerWithP2PDisabledAcceptanceTest for clarity to improve readability and understanding of the test
updated @ ConditionalOnMissingBean annotations to include the name of " livenessStateHealthIndicator " and " readinessStateHealthIndicator " to
added concurrent mapping for PStore configurations in LocalPStoreProvider . java to ensure thread - safe access to local pstores during write operations
changed the visibility of the deleteFiles method from public to private to encapsulate the method to improve code readability and maintainability
replaced instances of ` Provider ` with ` ServiceProvider ` and updated related methods to improve clarity and consistency in service provider management
refactor findField and setField methods to use try - catch blocks for better error handling to improve code robustness and maintainability by catching
added ` isToolchainCreated ` method to ` AbstractCell ` , ` DefaultToolchainProvider ` , and ` ToolchainProvider ` classes
fix race condition in removecontext ( ) in polyglotengineimpl .
replaced indexOf method with contains method for better readability to improve code clarity and maintainability
updated ` PrebuiltCxxLibraryDescription ` and ` PrebuiltCxxLibraryBuilder ` to use ` CxxFlags . getFlags `
replaced ` onConfigurationChangedInternal ` with ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recents
updated type checks in multiple classes to use wildcard generics to enhance code readability and maintainability by using wildcard generics
added the hashAsString ( ) method to the Object array in AbstractBlockChain . java to ensure that the correct hash string is used for the
use getstorepathphysic ( ) instead of getstoreconfig ( ) . getcommitlog ( )
removed unnecessary try - with - resources statement in MicrometerMetricManager . java to streamline the code by eliminating unnecessary resource
updated message stats tracking logic in CompactionLog . java to include total found and miss messages based on their status to ensure accurate tracking of message
added @ Deprecated annotations to multiple classes in the codebase to indicate that these classes are outdated and should no longer be used
added a method to check for the presence of a system UI object in AbstractLauncherUiTest to enhance functionality by allowing the keyguard status view
changed ` logger ` and ` sessionIds ` fields from static to final in ` SessionRegistryImpl . java ` to enforce immutability of
added checks for empty cookies in InMemoryCookieStore and NullUriCookieTest to ensure proper handling of empty cookies in the InMemoryCookieStore
add some debug information to bonsaistatearchive and bonsaiworldstateupdater
updated method signatures in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept a CharSequence instead of String to
added a @ NotYetImplemented annotation to AlertsTest . java to indicate that the test is not yet implemented due to a specific bug
added a try - finally block to handle potential IOException during connection return to ensure proper handling of IOException during connection return
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated related references to reflect the
added synchronization to the ` DbTxnManager ` class to ensure thread safety when accessing the ` DbTxnManager ` class
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
added updateFirstLineShowing ( ) method to TextArea . java to fix drag - selecting text out of the TextArea ' s bounds
added temporary and staging directory configurations in TestInformationSchemaWithPrivilege . java to ensure correct directory paths are used for configuration management
refactor graphics configuration retrieval logic in Component . java to improve clarity and efficiency to enhance code readability and maintainability by reducing unnecessary
tika - 3746 -- upgrade to tika - 3.2 . 0 and add test for oom in legacy mode
refactor pipeline processing logic to streamline the process process logic to improve code readability and maintainability
updated PrintTagList . java to accept command - line arguments for tag loading and improved display of tag states to enhance flexibility and provide
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
add test for eofexception in corruptioneofindexrecoverytest
[ java ] fix race condition in startfromtruncatedrecordinglogtest
updated the calculation of the arc variable in LineBorder . java to use offs instead of size to improve precision in rectangle rendering by using a more
added a null and empty check for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to prevent potential NullPointerExceptions when accessing galleryImages
modified the creation of the deployment _ ID column in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to ensure proper handling of deployment
pdfbox - 4892 : fix typo , a suggest by valerybokov
removed the ' moreColumnOk ' parameter from the ` canUseIndex ` method and related calls to simplify method signatures and improve code readability
camel - 14263 : camel - quickfix - add support for provisional engine in component .
added a new boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to accept an ` mixedContentMode `
add ` corporea _ block ` , ` corporea _ brick ` , and ` corporea slab ` , and `
refactor ConnectionFactory class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` EnableDisableMenuItems ( ) ` to manage menu items in ` GpsMainActivity ` to enhance user experience by
updated the message for empty list from " server _ search " to " filter _ list " in ExtendedListFragment . java to improve clarity
hhh - 14836 fix test failure on oracle
updated MotorMountConfigurationPanel and MotorConfigurationPanel to include subpanel parameter in MotorMountTableModel to improve layout
updated LINE _ SEPARATOR to use system . getProperty ( " line . separator " ) instead of System . lineSeparator ( ) to ensure consistent line separator
added getter and setter methods for creator , subject , and title in POIXMLProperties , and updated test cases in TestPOIXMLProperties
reformatted the call to doStop ( ) in HandlerWrapper . java to improve code readability and maintainability
[ java ] do n ' t check for empty cnc file to avoid npe .
rename ` NonMarkedFoo ` and ` MarkedFoo ` classes to ` Command ` and update method signatures accordingly to improve clarity
added methods to handle jmod classes and declass paths in ClassFileSourceImpl . java to improve handling of JAR and JMod files based on
updated TreeBackedElement and TreeBackedPackageElement to remove the PostEnterCanonicalizer parameter and added null checks to improve code safety and
replaced direct assignment of tokenRequest with a new instance of PublicTokenRequest in Saml2TokenGranterTest and UserTokenG
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure correct
added sync method calls in ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper connections
fix ( gl ) : add check for no current context
[ drools - 4892 ] do n ' t remove ruleflowgroup activation if it be active
added a return statement to HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed ` PipeNotExistException ` handling from ` DropPipeProcedure . java ` and added exception handling in ` IoTDBPipeIT . java `
fix clientqueuedisruptiontest to work with junit 5
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreference # getsignature ( )
changed the access modifier of the validateInstance method from public to protected to restrict access to the method for better encapsulation
refactor GeoPointField , GeoPointTokenStream , GeoPointInPolygonQuery , and GeoPointPrefixTermsEnum classes to improve code organization
added a new file ` FakeBuildable . java ` and modified ` OnDiskBuildInfoTest . java ` to use it to improve test
fix potential nullpointerexception in the forge forge .
rename ` ` rule path ' ' to ` ` timeseries ' ' in TSParser . java and SQLParserTest . java to improve clarity
added a check for negative vector values in TubeCalc . java to ensure proper handling of edge cases by preventing negative vector values
replace calls to ` getBucket ( ) ` with ` _ storage . create ( ) ` in ` GcsPinotFS . java ` to
replaced the direct call to blockCloseVertxByName with a finally block in TestHighwayTransport . java to ensure proper resource management by
added methods to create and recreate a history view in DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to enhance database schema management
updated the expected number of clustering engine from 2 to 3 in CarrotClusteringEngineTest . java to reflect the correct number of cluster
ignore test that need to be rewritten
updated ParserCacheCommand to use ParserStateObjectInputStream instead of ObjectInputStream and added a new ParserStateObjectInputStream class to improve deserialization handling and ensure
added null checks and initialization for objectQuotingStrategy in ChangeSet and DatabaseChangeLog classes to ensure proper handling of object quoting based on the change
replaced ` parse ` method with ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve clarity and
deleted the CsrfControllerAdvice . java file to the functionality was no longer needed in the project
added a method to quote the endorsed directory and improved endorsed argument handling to enhance the clarity of the endorsed
added scrim animations and drawable alpha properties to the Launcher and AllAppsBackgroundDrawable classes to enhance visual feedback during action screen resumes and
updated long parsing condition in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java to ensure correct parsing of long
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added support for handling absolute and UNC path types in WindowsPathParser and PathOps classes to ensure compatibility with different path formats and improve error
replaced the instantiation of InetSocketAddress with a direct instantiation of MulticastSocket in Promiscuous . java to simplify the code and improve read
reformatted code by removing unnecessary lines in TestWildcard . java to improve code readability and maintainability
modify return statement to return a cloned instance of nBits to ensure that the nBits remains unchanged to prevent potential memory leaks
changed access modifier of deriveCollectorName method from private to protected in ProfilerCollector . java and added custom test assertions in TestProfilerCollector . java
datamongo - 2043 - add support for write simple document type hint ( datamongo - 2043 )
added performance measurement for proxy factory creation in ProxyMaker . java to enhance performance monitoring during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception handling for ConnectException in TCPConnection . java to improve error reporting by including the original exception cause
refactor ` reinflateWidgetsIfNecessary ( ) ` method to use ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( )
added a new test class ` DeleteInsideFileDialogTest ` to demonstrate the usage of a file dialog with a right click popup
fix : do n ' t call display . processmessages ( ) if renderable be set to false
update instructor student list page to update profile picture
added logic to ignore methods and methods based on environment variables in TestIgnorance . java to enhance test reliability by ensuring only run
removed the ` pointer ` parameter from the ` fling ` method in ` ScrollPane . java ` to simplify the method signature by removing unnecessary
added null check for pageable in QueryDslJpaRepository and created a corresponding test in QueryDslJpaRepositoryTests to ensure
added a new method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding tests in ` MemoryManagerTest ` to enhance memory
updated JMSPublisherConsumerTest timeout from 20000 to 20000 and modified the runner run parameters in PublishJMSTest to
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
simplified the handling of previous and previous indices in StreamingAggTemplate . java to improve code readability and maintainability by eliminating
refactor plugin error message handling in BytecodeParser to use a new method for better clarity to improve code readability and maintainability by
added a new method ` stream ` to the ` StreamSupplierComponent ` class to facilitate stream generation based on a specified table identifier
updated logging messages and added retry logic for moving and sending files in MediaMonitor . java to improve clarity of logging messages and ensure proper file
refactor methods in InjectorProxy , StandardInjectorProxy , ReflectionUtil , TestConstructorInvocation , and TestConstructorInvocation to improve method accessibility and
[ hotfix ] remove unnecessary close ( ) call in flinkstreamingcreatefunction
added unit tests for ShowStatement and UnsupportedStatement in multiple test files to ensure correct parsing and handling of unsupported statements in SQL parsing
replace ` return null ` with ` return ImmutableList . of ( ) ` in ` AppleTest . java ` to ensure the method returns an
added Quality Distribution and Inc . to the list of test cases in NamedSetTest . java to enhance test coverage for the Quality Distribution
added a check for ` websocketReconnect ` in ` DeconzBridgeHandler . java ` and modified connection state handling in ` WebSocketConnection .
replaced ` setAttribute ` with ` removeAttribute ` for session attributes in ` AbstractProcessingFilter . java ` to simplify session management by removing unnecessary attributes
hbase - 25819 addendum fix testregionreplicareplicationendpoint # testreplicareplicationwithtable ( )
added PMS configuration to FormatRecognitionTest to enhance test coverage for PMS functionality
imagestoreuploadmonitor : handle imageformat . oval data disk template creation
replaced Spring Boot test annotations with JUnit4 annotations and updated method calls in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to improve test
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated SQL table and UPSERT statements to use ` metric1 ` instead of ` metricVal ` to ensure consistency and correctness in database schema
added a validation check for deletedDocs count in SegmentReader . java to ensure that the document count matches the segment ' s document count to prevent
updated method names and added new methods for logging the SIP Communicator JAIN SIP logger to improve clarity and functionality of logging
updated FilamentFactory to use 0.9 instead of 1.0 and added a comment to clarify that shorter length is needed
set handleFileUploads to true in VertxPlatformHttpServerConfiguration and set bodyHandler in VertxPlatformHttpEngineTest to enable file uploads
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
refactor : remove static field from hotspotobjectconstantimpl # readcallsitefrozen ( )
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
added a watermark to the metadata matching process in FileIO . java to ensure that watermarks are applied to the correct time during file operations
make ctedefinition non - final and add copy ( ) method to sqmselectquery
added import for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for improved data handling
updated the library output format in JsLibrary . java to include the root path of the library to improve clarity of library output by including the
updated the slider parameters in RailButtonConfig . java to use math . PI instead of 180 to improve the responsiveness of the slider
updated the positioning from 8f to 9f in OverlayRenderer . java and improved error handling in Saves . java to enhance rendering
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable expression language support in the Kerberos configuration
removed null checks for remoteMountPointComponent before setting translation and rotation degrees in ThirdPersonRemoteClientSystem . java to simplify code and improve
updated setupViews method to accept a ScrimView parameter and modified related animation logic to enhance the handling of workspace scrim animations and improve
[ state - backend - changelog ] add a config option to disable periodic materialization
added a ` value ` field and its getter / setter methods to ` ProtocolParameter ` and updated ` List ` and ` ParamTagHandler `
added unit test for handling chunking requests with the head header in TestHttpServlet . java to ensure that the servlet correctly processes HTTP requests with
added a boolean field ` isBumped ` and modified the ` parseDetails ` method to return a boolean indicating success or failure to improve the
added " application / x - www - form - urlencoded " header to " application / x - www - form - urlencoded " in
refactor EmbeddedClientConnector class for improved readability to enhance maintainability and clarity of the code
replaced SQLFeatureNotSupportedException with logging for SQLFeatureNotSupportedException in PhoenixResultSet . java to improve error handling and provide clearer logging
added initialization of AndroidNet in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
corrected the spelling of " numRowsConsumed " to " segmentMaxRowCount " in LLRealtimeSegmentDataManager . java to ensure consistency
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 25836 fix checkstyle violation in tablemapreduceutil
added error handling for back navigation in DesignerActivity and made the root variable final in XMLLayoutInflater to improve user experience by preventing
refactor PushbackInputStream to improve code readability to enhance maintainability and facilitate future updates
improve loweringphase to check if the node be lowerable .
updated the message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
fix makefiles . makefile ( ) and makefiles . makefile ( ) on window
replaced direct calls to reader . getDeletedDocs ( ) with MultiFields . getDeletedDocs ( reader ) in ReadTask . java to
added a new refresh flag and called setBoundRefresh ( ) in SimpleBatchNode . java to ensure proper rendering of the refresh state during batch
[ gr - 25946 ] remove unnecessary isguaranteedsafepoint check from sharedmethod . isinterruptible ( )
added framebuffer size callback and modified window size handling in LwjglWindow . java to improve handling of window size changes and ensure proper
replaced ` centerTaskParallaxToRight ` and ` play ` with ` centerTaskParallaxOffscreen ` for animations to
changed the return type of ` LiteralNode ` from ` NodeLiteralNode ` to ` NullLiteralNode ` and updated related methods to improve type
added a ` setLength ` method to ` CompoundFileWriter ` , ` FSDirectory ` , and ` IndexOutput ` classes to ensure the file
updated AndroidNdkScriptGenerator , AntScriptGenerator , LwjglDebugStarter , and LwjglDebugStarter to
camel - 15836 - camel - aws2 - s3 : use sourcebucket ( ) and sourcekey ( ) instead of copysource
solr - 8434 : add wildcard support to role , to match any role in rulebasedauthorizationplugin
refactor ZookeeperClientServerRegisterRepository to improve null checks and enhance URI handling to enhance robustness and maintainability of the registration process
refactor ReturnsDeepStubs to replace ` makeDeepMock ` with ` deepStub ` and implement ` ReturnsDeepStubSerializationFallback ` to
added a check for empty call values in contract . getCallValue ( ) to ensure that an empty array is returned when no call values are
updated debug logging format in BibEntry . java to improve readability of the debug log message
added a throw clause to the mapPBEAlgorithmToOID method and updated the PBE _ ALGO string in PBETest . java
rename ` length ` to ` inputLength ` and introduce ` isValidOffset ` method for better clarity to improve code readability and ensure
added validation for job parameters and improved error message formatting in CommandLineJobRunner to ensure correct handling of invalid job parameters and provide clearer error
update message content assertion from " \ r \ n " to " foo " in SmtpTests . java and MailTests . java to ensure
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve code readability and maintainability
replaced long ` lastSequenceId ` with ` AtomicLongFieldUpdater ` for thread - safe sequence ID retrieval to improve performance by reducing
added a new file Test . java with a static method ` sum ( ) ` to calculate the sum ( ) method to facilitate
updated ` ShadowWifiManagerTest ` and ` WifiUsabilityStatsEntryBuilder ` to use protected fields in ` WifiUsability
added a new file ` Solution . java ` that implements a solution to check the order of queries in a given array to provide a solution for
fix concurrentmodificationexception in table . java and gossiper . java
refactor taskbar recreation logic to use a boolean flag for better readability to improve clarity and maintainability of the code
refactor SyncFutureCache class to improve code readability to enhance maintainability and facilitate future updates
updated the DEFAULT _ DUBBO _ PROTOCOL _ VERSION from " 2.0 . 1 " to " 2.0 . 2 " and
[ java ] uselessstringvalueof : fix false positive for string literal
added a new test method ` testEllipseNoseconeDrag ` in ` SymmetricComponentCalcTest . java ` to verify the behavior
add max type shard size parameter to hollowproducer ( # 1748 )
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the code
updated database parameter handling in DDLTask and TestSemanticAnalysis to improve clarity and ensure location is displayed in test mode
added an executor to clear the database change log table statement in AbstractJdbcDatabase to ensure proper cleanup of database changes in the database
updated the ` RestClient ` , ` CallPath ` , ` CallPath ` , and ` CallPathProviderTest ` classes to handle version
phoenix - 1346 make sure we do n ' t close the driver if it have be close
[ android ] fix checkstyle issue in java . desktop
added cleanup of temporary files in ConflictsResolveActivityIT and modified FolderPickerActivityIT to extend AbstractIT and implement screenshot functionality to ensure file
[ gr - 25946 ] avoid npe in native image generation when dev mode be enable
added a length check in StringHelper and implemented a test for removing leading and ending quotes in StringHelperTest to ensure that the removeLeadingAndEndingQuotes
refactor JpaQueryCreator to use a more generic type for NOT _ CONTAINING and update related exception handling to improve code clarity
do n ' t push a branch if there be no auth dur
added a dispatch method call in P25MessageFramer . java to dispatch a new P25Message instance to ensure proper handling of message
added null checks for handler in WebSocketImpl before invoking checkClosed ( ) to ensure that checkClosed ( ) is only called when the handler is initialized to prevent potential null pointer exceptions
[ ds - 4892 ] fix bug in indexeventconsumer and add test
refactor padding retrieval in AppWidgetResizeFrame and Launcher classes to use dynamic values from the launcher to improve code readability and maintainability
added ` hideAllApps ( ) ` method to ` TaskbarUIController ` and ` TaskbarAllAppsController ` , and modified `
removed synchronization from the launch method and replaced sleep with join in CrawlJob . java to simplify the launch method and improve thread safety
updated the calculation of the Point object in JavaSEPort . java to use the canvas coordinates instead of the zoom level to ensure proper positioning
refactor notification handling in UploadService to use startForeground instead of notificationManager to improve code readability and maintainability by using a dedicated method
fixed bug 1244447 - excessivepubliccounttest no long run static final method
hbase - 2594 set the client retries number to 3 in testthrifthbaservicehandler . testthrifthbase
changed log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for better debugging
added error handling for FileNotFoundException in ResourceUtils and changed log level from debug to trace in AbstractCipherExecutor to improve robustness by logging exceptions and
added a new method ` getTickers ( ) ` to ` Bittrex ` and created a ` BittrexTickersResponse `
hhh - 14663 fix typecastexception in entityentry . getenumconstants ( )
updated session registration and unregistration methods in WsWebSocketContainer , WsHttpUpgradeHandler , and WsServerContainer to use Object instead of Class to
added additional characters ' \ u000 ' , ' \ u000 ' , \ u000 ' , \ u000 ' , \ u000
added a ` _ stylesheet ` property and updated related methods in ` ResourceService ` , ` ResourceHandler ` , and ` DefaultServlet ` to
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before use
changed method parameter type from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with the new parameter type handling
updated database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the condition checking for enum type in ObjectStreamClass . java to simplify the code by eliminating unnecessary checks
replace ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and add a new class ` SymbolNotFoundError `
added conditional logic to handlePseudoFields in BinaryResponseWriter to ensure proper document creation when onlyPseudoFields are provided
added WebSocket playback case handling for PING and PONG in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to enhance
updated the regex pattern for NON _ IDENT _ ESCAPES in RegExpScanner . java to ensure proper handling of special characters in regex patterns
refactor DnsResolverProvider to use configurable cache settings and update server selection tests to enhance cache management and improve test coverage for server selection behavior
added a conditional annotation for the MessagingTracing class in TraceMessagingAutoConfiguration to ensure that tracing functionality is only enabled when the MessagingTracing class is
mondrian : fix for mondrian - 1341 , mondrian - 1342 , mondri
updated import statements in multiple Java files to streamline the import statements for better readability and maintainability
added a conditional check to set the status for VERIFY _ CLOSE _ TAG based on the character ' / ' to ensure proper handling of closing
removed visibility setting for GONE in TouchCharInput . java to streamline input handling by eliminating unnecessary visibility transitions
added null check for the current user before comparing its ID to prevent potential NullPointerException when accessing the current user
updated JSObjectLinker to conditionally set the slot and member based on the index to ensure correct assignment of JSObject members based on the
initialized ` randomStringGenerator ` and ` suffix ` fields in ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should no longer be used
deleted the JoglDebugAdaptor . java file and refactored GuiceStartup . java to remove unused code to streamline the codebase
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes for better string representation to enhance readability and
added import statement for PendingIntent in FileDownloader and FileUploader classes to ensure proper activity management during notification updates
refactor nextOrd method to use a dedicated set method to improve readability and maintainability of the code
refactor DateTimeFormatter class for improved readability to enhance maintainability and ease of understanding
reformatted desktopProperties for improved readability to enhance code clarity and maintainability
added validation for null and empty principal and keytab parameters in the setAdministratorCredentials method to ensure that the setAdministratorCredentials method throws
added a maximum width scale constant for tablet and two - panels in BaseWidgetSheet . java to ensure proper width scaling for tablet and two
fix ( gl ) : do n ' t render sketch window color
refactor Hashing class to improve code readability to enhance maintainability and ease of understanding
updated the ` accept ` method in ` FileSenderFactory ` to use ` folderPath ` instead of ` s ` to improve clarity and functionality
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter and modified the ` addToListIfNeeded ` method to include
added a null check for the type variable in the JavaType class to prevent potential null pointer exceptions when type is not initialized
increased ACTIVITY _ START _ DELAY from 500ms to 800ms to increase activity start delay for better user experience
added a static constant WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to use this constant
removed diameter assignment and reset selection logic in ThrustCurveMotorSelectionPanel . java to streamline the code by eliminating unnecessary
added BufferUtil import and called BufferUtil . clearToFill ( buffer ) in ByteBufferPool . java to improve buffer management and ensure proper buffer
improve notification api documentation and add test for alarm trigger
replaced instances of " authorization " with " authentication " in LDAP group configuration to improve clarity and consistency in LDAP group naming and membership attributes
added deleteExchange ( " x " ) and queueDelete ( " q " ) calls in DurableOnTransient . java to facilit
[ hotfix ] [ test ] fix bulkslotproviderimpltest . testbulkslotallocationFulfilledwithnewslots
refactor connection handling in PingService and ServerInfoService to use addListener for better error management to improve error handling and provide clearer feedback during
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block around the execute method call in SulongLibrary . java to handle potential IllegalStateException during execution
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security 6.3 features
updated ` newNameResolver ` method to accept an additional ` Args ` parameter and modified synchronization handling in ` ConfigMappedNameResolverFactory ` and `
added a check for non - empty annotations and introduced a new method ` earlier ` in ` JavacParser . java ` , and created
added " com . sun . naming . internal " to the CheckPackageAccess . java file to ensure proper access control for internal packages
changed the strict variable from false to true in StaxEventItemReader . java to enable strict mode by default
refactor OfflineSorter to utilize a boolean array for handling partition exhaustions to improve code clarity and maintainability by encapsulating the
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
refactor color mode check to use a boolean variable for better readability to improve code clarity and maintainability by reducing duplication
updated the ` getFolderCreationRadius ` method to accept an array of target cells instead of a single child view to improve flexibility in folder creation
added import for FileDisplayActivity and removed the call to showLoadingDialog ( ) in FileOperationsHelper . java to ensure the loading dialog is
added a null check for uigestureFile before loading XML logs to avoid potential NullPointerExceptions when uigestureFile is not present
updated FieldNamingPolicyTest to use Locale . getDefault ( ) instead of toUpperCase ( ) and toLowerCase ( ) for case - insensitive comparison to ensure
added listener setting to the result in XmlSuite . java to ensure proper listener management during XML processing
added a new method ` loadWithNewGlobal ` and modified its usage in ` Global . java ` , and ` Context . java ` to
added ` fromJsonString ` and ` toJsonString ` methods to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest `
added imports for ObjectPostProcessorConfiguration in HeadersConfigurer , OAuth2LoginConfigurer , Saml2ResourceServerConfigurer , and Server
replace double quotes with single quotes in file path handling across multiple files to ensure consistent character encoding across different operating systems
[ zeppelin - 4892 ] fix npe in inoperator when child be null
added import for FieldCache and invoked commit ( ) and purgeFieldCache ( FieldCache . DEFAULT ) in TestDistributedSearch . java to
add unit test for messageboundaryevent on subprocess and inside subprocess
add support for static method resolution in pointer analysis
http : / / issues . apache . org / jira / browse / amq - 4896 - allow to specify the number of
refactor slot handling in Secmod . java to use specific slot IDs instead of a boolean flag to improve clarity and maintainability of slot
added alignment support to widgets in the layout class and modified the startRenderering method to return a boolean indicating success to enhance user experience by allowing
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added imports and a conditional check for class equality in JDK13Services . java to ensure proper handling of class types in the application
added a check to prevent duplicate keyword entries in the reference map to ensure that the keyword is only added when they are not already in the reference
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5761 - fix multicast
removed unused methods from SegToken and WordDictionary classes to streamline code and improve maintainability
escape telegraf character in statsd ( # 644 )
[ catalina - 3445 ] add the udp port to member serialization .
rename operatormulticast to operation multicast to fix typo
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for message delivery to complete
added a try - finally block around the assertion in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added a synchronized block to the destroy method in SessionFactoryServiceRegistryImpl to ensure proper cleanup of cachedEventListenerRegistry when the destroy method is called
danielwagnerhall : fix test to work with local storage
[ pytorch ] fix typo in ivalueutilstest
added a task stack listener to clear the visibility flag in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to improve
[ itextpdf ] add test case for date pattern check in defaultsplitcharacter
camel - cxf - fix the issue that cxfendpoint do n ' t set property on the factory bean .
refactor animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added logging for playback duration and modified play time handling in LauncherAnimationRunner . java to improve debugging capabilities and ensure playTime reflects total
added a conditional check for exception handling in C1XCompilation and introduced a BailoutOnException flag in C1XOptions to improve
changed initialization of signup and passwd variables to null in Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to ensure that
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduced a method to retrieve the format to improve clarity
added NoDataContainer property handling in GeoTiffReader and corresponding test in GeoTiffReaderTest to ensure proper garbage collection of data in
fix npe in llvmwritenode when source be null
replaced ` toString ( ) ` with ` toByteArray ( ) ` in ` JdbcExecutionContextDao ` and ` DefaultExecutionContextSerializerTests `
replaced ` blockUntilConnected ( ) ` with ` CountDownLatch ` for connection state management to ensure that ` PathChildrenCache ` is
added null checks for array retrieval in ArrayTypeHandler . java to ensure robustness by preventing NullPointerException when the array is null
refactor JakartaRegexpCapabilities to use reflection for retrieving the prefix field from REProgram to improve performance by leveraging reflection for
updated application selection to use Application class instead of null to ensure compatibility with the current application configuration
[ drools - 4892 ] fix npe on mutable global in phreaknode
replaced Preconditions with TransactionUtil for asset name , URL , and description validation in AssetIssueActuator . java to improve validation checks for asset
copypaste : do n ' t copy textfield if the parent algorithm be a textfield
updated action descriptions and updated status messages in LGWebOSActions . java , LGWebOSUpnpDiscoveryParticipant . java , and
refactor configuration to use addAll for seeds , active , and trust nodes to improve code readability and maintainability by reducing redundancy
enhanced assertions in BaseTokenStreamTestCase to include additional context in assertions and added thread handling in BaseTokenStreamTestCase to improve debugging
log4j2 - 1343 refactored patternprocessor . getnexttime and timebasedtriggeringpolicy to support modulate interval
refactor ` performItemClick ` and ` findIndexOfItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView `
pdfbox - 4892 : fix checkstyle issue , a suggest by valerybokov
improve debug information for pe graph decoding
replaced ` getSource ( ) ` with ` getSession ( ) ` in ` HttpSessionDestroyedEvent . java ` and added unit tests for security context
added a new test method to change the service name in the Zipkin span reporter to ensure that the service name changes in the zipkin span
added logging for excluded classes pattern in JavaInMemoryFileManager and JavacToJarStepFactory and improved SpoolMode handling in
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
increased the timeout duration from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow for more time for concurrent locking
added DEFAULT _ CACHE _ CAPACITY constant and updated ConfluentSchemaRegistryDeserializerProvider to include schemaRegistryConfigs as parameters to enhance cache management
rename the checkbox from " remind " to " checkAtStartup " in UpdateInfoDialog . java to improve clarity and consistency in checkbox
added methods to generate a node factory with various parameters for strong keys , weak values , and weighed parameters to enhance the node generation functionality
hhh - 14934 - fix bug in cascadingactions that cause a transient property value to be null .
added constants for prototype property handling in ScriptObject . java to improve code readability and maintainability by centralizing method handles
updated default read mode from " heap " to " mmap " and modified segment loading logic in ImmutableSegmentLoader to ensure consistency in read mode and
added import for ByteArrayTemplate and modified return statement in ArrayTemplateBuilder . java to enhance handling of byte data types in the application
added Hipchat property and configuration classes for SAML sp integrations in SamlServiceProviderProperties . java and created a new configuration class for SAML
changed the type of ` commandRegistryUrls ` from ` List ` to ` Set ` for storing resource URLs to improve performance by avoiding unnecessary
updated warning message to include context information and added debug logging for uncovered HTTP methods to improve clarity of warning messages and enhance debugging capabilities
do n ' t call checkloggedin ( ) when login the sftp connector
camel - 16462 : camel - jms - allow to configure a session transaction manager without a lazy create transaction manager .
cloudstack - 4892 : fix typo in vmwareresource . tostring ( )
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replace ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to align
removed deprecated constructors from UAX29URLEmailTokenizer and updated its usage in TestUAX29URLEmailTokenizer to streamline the
removed the ` Map < Object , Object > ` interface from the ` ScriptObject ` class and updated related assertions in ` ContextTest ` to
refactor EventBusMetrics class for improved performance to enhance performance and maintainability of event bus metrics
douniaberrada : move getepersonlocale ( ) into i18nutil . getepersonlocale ( )
updated JaversTransactionalDecorator to implement InitializingBean and modified schema initialization method to ensure schema is properly initialized after property setting
removed null check for pgTypeName in TypeInfoCache . java to simplify the code by eliminating unnecessary null check
added multiple setServer calls to ScopedHandlerTest to ensure proper configuration of the handler ' s server in the ScopedHandlerTest
add log for calltimeoutexception in wait - notify phase
updated the condition to check for empty credentials in RestLoginProcessingFilter . java to ensure proper handling of empty credentials for login requests
changed the condition from checking for a non - null permissionNode to checking for a wildcard " * " to ensure that the permissionNode is not
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the data type of ` postLogin ` and related methods from ` byte [ ] ` to ` String ` in multiple classes to simplify the
refactor ` GeneralOptimizationDialog ` to use ` final ` keyword for simplicity and clarity to improve code readability and maintainability
camel - 14284 : camel - main - add option to turn off context reload
updated console configuration properties in CommonTestUtils . java for improved clarity to enhance readability and maintainability of the logging configuration
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a check for unsupported content types before invoking the ` invokeSafely ` method in ` RequestBody ` to ensure that only supported content types
http : / / issues . apache . org / jira / browse / amq - 4896 - fix npe in case of
improve movementdebugcommands . savecomponent ( ) for player movement component .
refactor random load balancer logic to include a half - length weight parameter to enhance flexibility in generating random upstreams based on the total weight
refactor GsonParser to remove unnecessary StringBuilder and simplify cache string handling to improve code readability and maintainability
updated parameter documentation for sorting parameters in ApacheHttpClientMediaWikiApi . java to improve clarity and usability of sorting parameters
replaced multiple calls to checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) in AbstractSharedSessionContract and SessionImpl classes to
pipe : add lock ( ) and unlock ( ) method to pipetaskcoordinator .
modify the version calculation logic in DefaultSdkProvider to conditionally use pre - instrumented jars based on a system property to enhance flexibility in
simplified the conditional check in ExecDriver . java to improve code readability and maintainability
added validation for dynamic field default and required attributes in IndexSchema . java to ensure proper error handling for unsupported attributes in dynamic fields
corrected formatting of code in StorageProxy . java to improve code readability and maintainability
replace ImmutableSortedSet with Iterables in PrebuiltCxxLibrary . java and add a test for includesDirs in PrebuiltCxxLibraryDescription
added checks forSKIDSensitive and isSNSensitive in AdaptableX509CertSelector . java and modified conditional logic in ForwardBuilder . java
log4j2 - 1349 use abstractappender instead of string . parseint in nosqlappender
added a @ Deprecated annotation to the GuiScreenEvent class to indicate that the GuiScreenEvent class is outdated and should no longer be
added and removed methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to streamline category management and improve code clarity
# 827 - ebean - cache - add support for ebean . cache . type ( # 827 )
refactor the assignment of massOverriddenBy , CGOverriddenBy , and CDOverriddenBy in RocketComponent . java
updated JavaCompilerService and SynchronizedTask to use post instead of doCompile and added error handling in JavaDiagnosticProvider to improve resource management and
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` for task creation to improve code flexibility and
fix race condition in wanreplicationserviceimpl . shutdown ( )
added null checks for both partitions and tables in Partition . java and DDLSemanticAnalyzer . java to improve robustness by preventing potential
refactor code to use lambda expressions for thread creation in RemoteServiceRegistry and LocalServiceRegistryClientImpl to improve code readability and reduce bo
added unit tests for the ` Files ` class and implemented the ` delete ` method in the ` Files ` class to ensure that the ` delete
removed exception handling for closing socket connections in ServerSocketAdaptor and SocketAdaptor to simplify code by eliminating unnecessary exception handling
updated the class name check in SSLLogger from " java . lang . System " to " Logger . class . getName ( ) " to ensure
replaced ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) ` for adding files
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to prevent potential NullPointerExceptions
changed the visibility of the static String variable from public to private to restrict access to the method for better encapsulation
updated the CSV and JSON type declarations in SimplePostTool . java to ensure proper handling of CSV and JSON jar files in the application
ggb - 2339 add test for max / min / max command and min / max command
refactor clientContainer initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
updated the condition to check for both null and non - null open - with - application cases to ensure correct handling of open - with - application
close webapplicationcontext on teardown to prevent memory leak
added a method to retrieve the search string from a query string and updated resource loading logic to enhance user experience by allowing dynamic search based on request
set the neutral button visibility to INVISIBLE in SetupEncryptionDialogFragment to improve user interface by allowing the neutral button to be visible
hhh - 14819 add support for withdrawal and archive / withdrawal query in itemdaoimpl
updated SQL statement formatting in DDLTask . java for consistency to improve readability and maintainability of the code
added error handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error reporting for OAuth2 - related issues
refactor multiple Java classes to improve code organization and clarity to enhance maintainability and readability of the codebase
updated assertions and response handling in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests for improved clarity and consistency to enhance code read
updated dismiss delay from 20000ms to 10000ms in ExtractionModelFrame , DataBrowser , and SQLConsole classes to improve user experience by
add support for disable single test method with junit5
replaced ` HumanReadableException ` with ` RuntimeException ` in ` WorkerShellStep . java ` to improve error handling by providing more specific
[ hotfix ] [ doc ] introduce @ experimental in datastreamutils and socketstreamiterator
[ hotfix ] [ doc ] fix typo in streamcepstrumsource javadoc
added a boundary check for the index in the List class to ensure that the index does not exceed the defined list size
updated instance check from OrExpression to Parenthesis in CloneHelperTest . java to ensure compatibility with the latest JavaScript parser standards
added confirmation option to the DebugPaste class to enhance user experience by allowing confirmation for the debug paste command
replaced calls to ` . get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clear
ggb - 1358 prevent focus when create a new radio button in create mode .
replaced ` Arg ` class with ` AbstractGoBinaryDescriptionArg ` and updated related imports in ` GoBinaryDescription . java ` to improve
updated environment variable handling in Jooby . java to retrieve the logback configuration to ensure correct retrieval of application environment environment variable from the
replaced instances of ` RetryListenerSupport ` with ` RetryListener ` and introduced a new ` SecondDummyRetryListener ` class to simplify the
fix ` ` count ' ' metric in elasticmeterregistry ( # 498 )
made the ` email ` and ` author ` variables final in the ` Contribution ` class to enforce immutability of the ` Con
replaced a loop with a do - while loop for appending a dot in JUnitFormatter . java to improve performance and readability of the
refactor the handling of the " elements " field to use a variable for clarity to improve code readability and maintainability by using a
enhanced exception messages in StaxEventItemReader to include resource URL to improve clarity of error messages for better debugging
add simpleupdate ( ) method to testmultiprewritetarget . testmultiprewritetarget ( )
updated client retrieval logic to handle null currentProfile case to improve error handling and provide clearer logging when the current client cannot be found
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper handling of namespace declarations
added BigInteger and DSAParameterSpec imports to KeyStoreManager . java to enhance security by using specified parameters for DSA parameters
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
[ activiti - 5 ] add engineversion to processdefinition in bpmndeployer and bpmndeployertest
updated property names in SpecificCompiler . java for consistency and clarity to improve code readability and maintainability
added thread verification methods in CEntryPointSnippets and VMThreads classes to enhance thread management by ensuring only attached threads are processed
refactor GenericUDFMapValues to handle null map cases and add unit tests for GenericUDFMapValues to improve robustness and ensure
corrected a typo in the test variable name from " interceptors " to " handlerInterceptors " to ensure consistency in test naming conventions
added configuration options for oil well generation rate and spouts in BCEnergyConfig . java and updated the OilGenerator . java to
added a check for the existence of the " . clean - me " directory in ImportContext . java and updated JobQueue . java to check
improve error message when memoryrealm . readxml be miss
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code by eliminating unnecessary dependencies
updated EXTID _ ZIP64 , EXTID _ NTFS , EXTTT _ FLAG _ LMT , and EXTT _ FLAT _
refactor ` newFileSystem ` methods to improve file existence checks and error handling to enhance robustness and maintainability of the filesystem initialization process
replaced ` createHorizontalStrut ` with ` createHorizontalGlue ` for the condition panel in ` IfControllerPanel . java ` to
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper handling of connection creation
added Gson annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance data serialization capabilities for
add a new method to delete a book in the database adapter to ensure that the database entry is deleted only if the file deletion successful
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix off - by - one error in responsemessage . getbuffer ( ) .
improve admin console plugin to stop the admin console server
refactor WebSocketImplBase to simplify the unregisterHandlers method and improve resource management to enhance code readability and maintainability by eliminating unnecessary
added configuration properties for device ID transformation method , enable ID table , and log file in IoTDBDescriptor . java to enhance configuration flexibility for
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and modified assertions in ExitableDirectoryReaderTest . java , and added Delay
updated the condition for determining the mockTsp variable in TestSignatureInfo . java to improve clarity and correctness of the condition checking for
refactor createp2pkhoutputscript to use witnessscript instead of scriptcode .
updated the expression path in IndexSchema . java to include the " / schema / types / fieldType " to support additional schema types in the schema
added a null check for the value completer in Completers . java and created a new test class OptionCompleterTest . java to ensure
reformatted code for improved readability to enhance maintainability and clarity of the code
changed the type of sourcePeerId from String to int across multiple classes to allow for more flexible peer ID handling for consensus requests
refactor file upload logic in FtpHelper . java to improve clarity and functionality to enhance code readability and maintainability by encapsulating
updated the alpha settings for the reply button in TweetFragment . java to improve the visual appearance of the reply button
added mock for TimestampLogEntry and modified expected timestamp formatting in AccessLogSupportTest . java to improve test clarity and ensure correct timestamp handling in
updated the file path for maryCacheFile from " testfiles - deleteme " to " tmp / testfiles - deleteme " to ensure
simplified the null and size checks for subscribers in SettingImpl . java to improve code readability and maintainability by eliminating unnecessary
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unnecessary imports in AbstractSaml10ResponseView . java to improve
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of printing
added a condition to check if a static directory path does not exist in dev mode to ensure proper handling of static directories when the file is not
[ hotfix ] [ rocksdb ] fix write option in rocksdbkeyedstatebackend
updated the default format string from " value - tag - index " to " value - index " to improve clarity and consistency in the output
do n ' t set hint for dijkstrabi algorithm in mainactivity if no hint be present
increase wait time from 30 seconds to 60 seconds in BesuNodeRunner . java and set default values in SECP256K1
renameSandboxTest to SandboxTest and update references accordingly to improve clarity and consistency in naming conventions
camel - 16462 : camel - cxf - remove unused import and use exchange . setexception ( ex )
made the ` forwardPropagateTree ` method public to allow access to the ` forwardPropagateTree ` method from other classes
updated the SQL query parameters in JDBCExample . java from 0 to 20ms to correct the query parameters for better performance
improve error message for invalid $ { project . basedir } expression
refactor Style class to improve code structure to enhance maintainability and readability of the code
added functionality to handle back key events in ShareActivity to improve user interaction by allowing back navigation to zoom
added a condition to skip processing for deprecated fields in Json . java to ensure proper handling of deprecated fields in JSON processing
added animations for displaying and hiding the sendLayout in LauncherFragment to enhance user experience by providing visual feedback during floating compose interactions
reformatted the method signature for readTokenStorageFile in Utils . java to improve code readability and maintainability
added Progressable parameter to multiple methods in Utilities , PTFRowContainer , and HiveIgnoreKeyTextOutputFormat classes to enhance functionality by providing
[ hotfix ] fix typo in sourcecoordinatorprovider
added functionality to remove a contribution from the panel by removing it from the ContributionListPanel to improve user experience by ensuring the contribution is properly
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated references accordingly to improve clarity and consistency in naming
added a check for empty dPath and set it to the user ' s directory if it is empty to ensure the application uses the user '
updated the calculation of the maximum supported channel count to use a default value based on the format ' s sampleRate to ensure the correct channel count is
log4j2 - 1344 add a method to filter a mapmessage to avoid duplicate message .
refactor VerificationInOrderWithCallsTest class for improved test coverage to enhance reliability and maintainability of test cases
corrected the variable name from ` axis . x ` to ` axis . x ` in the setFromAxis method call to ensure correct positioning
changed the constant name from " colelction . delim " to " collection . delim " in serdeConstants . java to align with the
added test to expose issue curator - 72
bugfix # 5355 - fix typo in documentation ( # 5355 )
added a new boolean variable ` mIsOneHandedModeSupported ` and modified conditional checks in ` RecentsAnimationDeviceState . java
added onDetachedFromWindow method to cancel all running tasks in AppsCustomizePagedView to ensure proper cleanup of resources when the
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors and updated the Morfolog
replaced the variable ` count ` with ` thrown ` and updated exception handling logic in ` ResultSetTest . java ` to improve clarity and
changed the project message format from " debug " to an empty string in GradleBuildService . java to improve clarity of project initialization
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` in ` AbstractPhenomenaTest . java ` and added a
refactor tooltip text handling in ComponentTreeRenderer to use a unified applyToolTipText method to improve code readability and maintainability by reducing
increased the timeout duration from 5 seconds to 10 seconds in the await statement to allow for more time for the zipkin server to complete
updated DeviantartRipper to retrieve username and password from configuration and added null checks for deviantart login to enhance security by
replaced KNOWN _ GOOGLE _ SIGNATURES array with GOOGLE _ PLATFORM _ KEY and GOOGLE
replaced the use of ` SolutionBusiness ` with ` SolutionBusiness ` in ` ImportDirSolveAllTurtleTest . java `
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added email description to template data in EntityGroupKeyContentFormatter and set detection description in TestEntityGroupKeyEmailContentFormatter to enhance user experience
replaced ` remove ( sel ) ` with ` data . remove ( sel ) ` in ` UserData . java ` to ensure the correct data
refactor getISO3Language handling in Locale . java and add error handling in LocaleTest . java to improve code clarity and ensure correct
refactor code to use a dedicated method for creating UpdateVisitor in Liquibase . java to improve code readability and maintainability by
added a check to return early if the screen pinning is active to prevent further processing when the screen pinning is active
added support for no data text and description in the Chart class to enhance user experience by providing clearer information about chart data availability
added synchronization to check if the server response head has been written to ensure thread safety when accessing shared resources
refactor NettyResponse and NettyResponseTest classes to improve code readability and maintainability by encapsulating chunk handler logic
updated header handling in Http2TestBase and TestHttp2Limits to use " http " instead of " 3 " and modified test cases accordingly
fixed - rlocalcachedmap . getkey ( ) , rmap . getentryset ( ) , rmap . getentry ( )
camel - 14263 : fix potential npe in jpaendpoint
corrected the spelling of " fallSpeed " to " jumpSpeed " in PhysicsCharacter and PhysicsCharacter classes to ensure
added a null check for reparsedFunction in the parser condition to prevent potential null pointer exceptions when reparsedFunction is null
updated logging and error handling in BitstampPusherService . java to improve clarity and consistency to enhance code readability and maintainability by
added deprecated methods for retrieving old upload segments in FileUploadDownloadClient to signal that these methods are outdated and should no longer be used in future
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in MongoDbTailTrackingManager . java to ensure the
added a new method ` assertPredicateFails ` in ` LanguageTestSupport ` and invoked it in ` JuelLanguageTest ` to validate header
added a range bound to the alpha value in RecentsView . java to ensure the alpha value is within valid range for better user experience
updated the string representation of the import package attribute in ManifestReversion . java to ensure proper formatting of the import package string
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized the JavaSnippetRepository instance to ensure proper initialization of the JavaSnippetRepository instance
added a loop to iterate over numTimeBuckets before updating sums to ensure accurate sum updates based on the number of time buckets
use chromedriver . storage . googleapis . com instead of chromedriver / downloads / list
camel - 14263 : camel - pg - event - add support for jdbc jdbc connection in integration test .
updated import statements in FeedParser . java to use the new package from the rome library to ensure proper resource management and prevent potential memory leak
added content - length header handling in TransferCompletionHandler and updated NettyTransferAdapter initialization in NettyAsyncHttpProvider to ensure proper transfer transfer
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor of EnhancedRuntimeException that accepts a message cause and writableStackTrace to streamline the constructor by eliminating unnecessary parameters
added CountDownLatch and modified exception handling in SocketAppenderTest . java to improve thread safety and error reporting during socket event reading
( chore ) camel - core : remove unused import
updated exception handling and formatting in ByteArray . java for consistency to improve code readability and maintainability
added a method to disable the input proxy during touch events in RecentsAnimationWrapper . java to ensure proper handling of input events during touch
added JUnit @ Ignore annotation to RestletDomainServiceTest . java to temporarily disable the test due to issue CAMEL - 677
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify method signature by removing unnecessary parameter
rename module from ` com . hazelcast . tests ` to ` com . hazelcast . test . modulepath ` in ` ModulePathTest
added ` getSourceDirs ( ) ` method in ` JavaLanguageServer ` and ` JavaServerConfiguration ` classes to provide access to source directories for
updated menu item ID from " open _ web " to " mute _ hashtags " in TweetPager . java to improve user
corrected spelling of " isAncestorOf " and " isDescendantOf " to " isIsNotAncestorOf " and " isDescendantOf
fix possible indexoutofboundsexception in worldeditplayer .
added handling for PathNotExistException in selfCheckDataTypes method to improve error handling for partial insert operations
removed unnecessary closing brace in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ operator ] remove mailboxexecutor from continuousfilereaderoperatorfactory and asyncwaitoperatorfactory
hbase - 25819 add tablestateinmeta and fixmeta to master rpc
refactor code to use method reference instead of lambda expression for meter ID mapping to improve readability and maintainability of the code
updated BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) and removed initialization error handling to ensure compatibility with
replaced ` remoteItems ` with ` lastTimeData ` in the ` deleteHandler ` method call to ensure accurate tracking of the last modified data
adjusted the calculation for allAppsCellWidthPx and allAppsCellPaddingPx to ensure that allAppsCellWidthPx does not exceed the
[ hotfix ] [ core ] add internal annotation to coreoptions
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the multi -
modified the ` Session ` interface and ` SessionDelegatorBaseImpl ` to return void instead of ` Connection ` to enhance resource management by allowing
refactor GetLocations class for improved readability to enhance maintainability and clarity of the code
refactor exception handling in SchemaValidatorTask to use null check instead of print stack trace to improve code readability and maintainability by reducing
replaced UncheckedIOException with a specific ignore parameter in the Contents class to improve error handling by catching specific exceptions
updated the ` GeneratePubkeyActivity ` class to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with newer Android features
ruby flavor : wrap last term in stringbuilder instead of string .
updated logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
[ java ] remove the usecaches option from the nio2endpoint
refactor CasGeoLocationConfiguration to accept CasConfigurationProperties and update readDatabase method to use Resource instead of MaxmindProperties to improve flex
fix typo in instructorfeedbackresultsspageuitest
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to ensure that the ` useEncodedQualifierListOptim
removed ` public ` access modifier from several methods in ` ApprovalStore ` , ` ApprovalsControllerService ` , and ` Ap
added a new boolean flag ` mStartedDownload ` to track if a download was started in the FileDownloader class to ensure that the download
updated method names and logic in TaskbarDragLayerController and AbstractFloatingView classes to improve clarity and functionality to enhance code readability and
updated project version from " 1.0 . 11 " to " 1.0 . 13 " in JFreeChartResources . java to reflect
replaced multiple calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistent
refactor GsonBuilder class to improve code structure to enhance maintainability and readability of the code
added null checks for centerGeo and circleCenters before adding them to fixedPoints to avoid potential NullPointerExceptions when adding to fixedPoints
remove espressohome option and remove it from espressoproperties
doc ( javadoc ) : fix typo ( # 1188 )
changed the visibility of the DeleteSessionAction class from protected to private and modified session handling logic to enhance encapsulation and improve code clarity
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency in
initialize ` sz ` to 0 and update result initialization logic in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and `
added a file parameter to the triggerMediaScan method in FileDownloader . java to enhance functionality by allowing additional parameters for media scan triggering
removed conditional verbosity handling for test results in TestRunning . java to simplify the code by eliminating unnecessary verbosity checks
added custom G - code settings in MainWindow . java to enable custom G - code settings for improved user experience
http : / / code . google . com / p / mybatis / issues / detail ? id = 576 : add support for
refactor JsonElement class to improve readability to enhance maintainability and facilitate future updates
added imports for SolrTestCaseJ4 and resetExceptionIgnores ( ) in TestBadConfig . java to ensure proper exception handling during
added a method to remove the fragment and action bar from the GpsMainActivity to improve user experience by ensuring the action bar is hidden when
updated spanishTokens and spanishTokens2 from " = = " to " ( " ) " in TokenizerAnnotatorITest . java
updated RemoteMediaHandler , RemoteRawHandler , and RemoteUtil to use Range . Byte instead of Range . Range and Range . Byte to improve
updated the gcode file path and added new output statements in VisualizerCanvas . java and modified GcodeViewParse . java to include new
added new version strings " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBack
updated formatting in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added null check and closing logic for the output stage in StatementResource . java to ensure proper resource management and prevent potential resource leaks
fix Integrity check for non - jabref file ( # 1748 )
removed the import of SolrClient and added shardToClient in ChaosMonkey . java to streamline the code by eliminating
added null check for fas before accessing its private persistent file to avoid potential NullPointerException when fas is null
reformatted code in NestedRepositoryTreePanel . java for improved readability to enhance maintainability and readability of the code
made the constructors of ExtensionTypeHeader public and added a validation check for the extension type to ensure that the extension type is within range to
pdfbox - 4892 : throw ioexception instead of ioexception , a suggest by valerybokov
change default values for deleteOnShutdown and pushOnShutdown from true to true and added getter and setter methods for pushOnShutdown in Prometheus
refactor ReactiveStateMachineExecutor to include trigger callbacks and improve error handling to enhance error management and provide clearer error reporting during event processing
added a new test method to verify the behavior of multiple Python executable settings in BuckConfigTest . java to ensure correct behavior of file executable
added a default button to the root pane in InitialAccountRegistrationFrame . java to enhance user interaction by allowing the signin button to be set
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging in RegistrationRestRepository to include the exception parameter to improve clarity of error messages for better debugging
move org . axonframework . util . reflection to org . axonframework . util and remove unused package .
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed redundant private Vector2 fields from Circle , Ellipse , Polygon , and Rectangle classes to improve code clarity and maintainability
simplified the conditional check for ` pcollection ` in ` RegisterAndProcessBundleOperation . java ` to improve code readability and maintain
refactor SslContextFactory to improve SSL connection handling to enhance security and maintainability of the SSL context management
[ java ] remove unused default _ max _ expertations from configurationproperties test
updated return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer context for access confirmation issues
fix classloaders not be set to the current thread ' s class loader ( # 11886 )
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFS
corrected the method name from ` setRolloverIcon ` to ` setRolloverPressedIcon ` in ` FontImage . java ` to
updated the grid translation logic in TaskViewUtils , TaskViewSimulator , and RecentsView classes to improve the responsiveness of
refactor assertion methods in Assertions . java to improve code readability and maintainability
added null checks for ` currentDateTimeFunction ` in multiple database classes to prevent potential NullPointerExceptions when accessing ` currentDateTimeFunction `
[ scb - 2207 ] add utility to ioutils . anonymouspath ( string ) for microservice . yaml file ( # 2
updated the ` call ` method to include a ` contentDescription ` parameter and modified related calls in ` DigitalWellBeingToast
updated the timeout condition for metaLocation in CatalogTracker . java to allow a maximum timeout when metaAvailable is zero to improve responsiveness by
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
return a default state converter instead of null to ensure that a default state converter is used for improved functionality
added integrator support and updated imports in BidirectionalOneToOneNPlusOneTest . java to enhance integration with Hibernate ' s integr
added a method to remove extra empty screen and modified startSearchPageIndex initialization to handle cases where there are no screens available
updated baseDerivedRefs initialization and modified HashSet initialization in MarkBasePointersPhase . java , and added null check in IndexedValueMap . java to improve
updated string formatting in GoogleLineChart , GooglePieChart , and GooglePieChart classes to use double quotes instead of single quotes to
handle interruptedexception in sendaccountor . waitforbatch ( ) .
added a position property to WALPrettyPrinter and implemented its functionality to seek to the file to enhance the printer ' s functionality by allowing users to
increased the default port from 1 to 0 in the NettyTransceiver initialization to ensure that the default port is set to zero
sort log event before generate a simple report
added a test for CSV line retrieval with escaped quotes in CSVFileLoggerTest . java to ensure correct handling of escaped quotes in CSV descriptions
drill - 4892 : fix the bug in dcorefbenchmarkslowitest
added check to make sure we do n ' t send an iq message if the recipient be not remote .
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary Jni implementation
updated variable assignments and configuration settings in Fetcher2 . java to improve clarity and maintainability of the code
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java and removed
updated the package name from " other _ package " to " other _ package2 " in AstTests . java to reflect the new package structure
fix worldborder . setworldborder ( ) . setworldborder ( ) and setworldborder ( ) .
hbase - 25819 addendum fix hmaster . getwalgroupsreplicationstatus ( ) to return the replication status ( #
remove the caller from the login operation in the checkOpen method to improve error handling and ensure the login operation is properly closed
refactor markDataResourceOnline calls to use generateInstanceConfigs for improved instance configuration handling to enhance configurability and maintainability of the
changed the class modifier of FieldAttributes from final to public to allow access to FieldAttributes from other packages
added unit tests for handling missing Maven project references in ProjectBuilderTest . java to ensure that the build process correctly handles exceptions for missing artifacts and
removed null checks for protoGetSwitches and protoHistory in PropertyMap . java to simplify the condition for better readability and maintainability
updated the ` getControllerId ` method to accept a ` configId ` parameter and modified relay handling logic to enhance flexibility in managing relay IDs
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the condition for generating the refresh token in the OidcConsentApprovalViewResolver to simplify the condition for prompts based on refresh token generation
removed a debug print statement from Http2SolrClient . java to clean up the code and improve readability
replaced the lambda expression with a static factory method for ` NoopGetter ` and added a new ` get ` method in ` Bagg
refactor conditionalOnEnabledResourceChain class for improved clarity to enhance maintainability and readability of the code
added a condition to check if the treeRoot is a non - empty child in BarrowmanCalculator . java to ensure that the treeRoot
updated the method call from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated log messages and added intent result listener functionality in FacebookImpl . java to improve logging clarity and ensure proper handling of session state changes
updated the ` ShadowICU ` class to return the date - time skeleton instead of a fixed format string to ensure the method provides a more flexible and accurate date - time pattern based on input
removed the KeyguardManager dependency and simplified the condition in TouchInteractionService . java to simplify the code and improve readability by eliminating
fix npe when set the default disk offering id for custom volume
refactor UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel and update byte array handling to improve handling of asynchronous file channels and
refactor SigInt and SigIntTest classes for consistency and clarity to improve code readability and maintainability
textcontrollerw . updatetextboxresizing ( ) now update the bounding box if it ' s already update .
change return value from - 1 to 0 in the Asset class to correct the behavior of the method
refactor ComputeBenchmark to use a custom mapping function for benchmarking to improve code readability and maintainability by using a more descriptive variable
added a refresh listener to the UploadListFragment to notify the adapter when the dataset changes
updated file handling in BibDatabaseContext and related classes to use Path instead of File to improve type safety and consistency in file handling
replaced usage of ` array [ ] ` with ` get ( ) ` for accessing ` emitters ` in ` ParticleEffect . java
refactor Tomcat . java to use findServices ( ) instead of findServices ( ) for better clarity to improve code readability
updated error message formatting in BuildRuleFactoryParams and Console classes to improve clarity and consistency in error reporting
added a condition to return early if the playback state is not PLAYING to prevent further processing when the playback state is not paused
replaced instances of ` findByPK ` with ` findById ` for ` ServiceComponentDesiredStateEntity ` to simplify the retrieval process by using a
refactor ` Java2TypeScriptTranslator ` to improve inner class field clash logic and add a new class ` InnerClassFieldClash
added support for follow - redirect - filter configuration in DockerClientFactory and DockerClientProfile classes to enable customizable logging and follow - redirect -
replaced direct call to displayChanged ( ) with awtUnlock ( ) and added a try - finally block to ensure thread safety during display change
hhh - 10183 migrate nationalizedScalarquerytest to sqlserver2008
added a call to ` revert ( ) ` in ` OPCPackage . java ` and wrapped the ` verifyZipHeader ` method in a
changed the access modifier of the storeClassFile method from private to public to allow external access to the method from other classes
updated NO _ MORE _ ORDS assertion in SingletonSortedSetDocValues . java and added a new TestSortedSetDocValues . java
updated error messages in CGIHandler . java and added a new callback handler in JavaVM . java to improve clarity of error messages and
added additional characters " \ 033 [ m " and " \ 033 [ 0m " to the end of a line in LineReader
change return types of multiFetchSourceFiles and hashCodesToFetch from List to Set across multiple classes to enhance flexibility in handling multiple source
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to avoid unnecessary processing when no vertex
updated the test method names and added exception handling in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the folder
remove unused import and fix typo
refactor JsonObject class to improve readability to enhance maintainability and facilitate future updates
added a condition to check if idle time is greater than zero in SelectChannelEndPoint . java and modified HttpConnection . java to handle low resource
fix farmlandblock . cansustainplant ( ) not call getblockstate # cansustainplant (
added a new table and primary key retrieval test in QueryDatabaseMetaDataIT . java and modified upgrade logic in ConnectionQueryServicesImpl . java to
updated the date format to use Locale . US in HttpCookie . java and added a new class B6791927 . java to ensure
removed multiple redundant ` db . close ( ) ` calls in ` DbHelper . java ` to streamline database connection handling by eliminating
increased timeout values from 1 seconds to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow for more time for processing messages
[ gr - 25946 ] add trace for economy allocation stage .
store save key binding when code area be empty
added a static block to initialize the ObjectMapper instance and set line separator to ensure proper handling of line separators in the test
updated the handling of Windows path characters in NativeEnvironmentRepository . java to ensure compatibility with different operating systems in the application
refactored application management in multiple test classes to use a single instance of Application to improve code organization and maintainability by centralizing application setup
[ java ] remove recordlog . validateexistinglog ( ) in favor of recordlog .
chore ( deps ) : update dependency com . google . devtools . clouderrorreporting . v1beta1 to v1beta1
fix flakiness in testfuzzoptimizations . java
added a private boolean variable ` reverseImage ` and updated its usage in ` CameraManager . java ` to streamline the retrieval of the reverse
replaced ` . equals ( ) ` with ` . equals ( ) ` for string comparison in multiple Java files to improve code readability and
added a predicate to exclude IDs and updated field replacement logic in TerserUtil . java and MdmMatchLinkSvcTest . java to
updated JUnit 5 annotations from public to JUnit 5 in AuthenticationSuccessListenerTests . java to enable compatibility with JUnit 5 features and improve
improve performance of settypes by use indexof instead of indexof
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated the ` triggerTime ` variable to use ` LocalDateTime ` using ` TimeZone . getDefault ( ) ` instead of ` DTF ` to ensure
added a method to handle abstract method errors in MethodHandleResolver to improve error handling by providing a clearer error message when a method is not
[ camel - 14263 ] fix simple language expression validation for body . ognl
removed an empty check for ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - 14263 : camel - jclouds - add copy method to jcloudspayloadconverter to make it easy to copy the
camel - 16462 : remove unnecessary @ ignore annotation in camelconsultest . java
added a check for ACC _ STRICT access flag in the Check . java file and created a new test class CheckACC _ STRI
[ java ] increase driver timeout for channelvalidationtest .
added a new file ` FileExtensions . java ` that defines static final ImmutableSet of file extensions to facilitate file extension management in the
replaced ThreadLocalDateFormat with a private static final instance of ISO8601CanonicalDateFormat and updated ThreadLocalDateFormat to use ThreadLocal ' s clone
removed deprecated options from VMDeprecatedOptions . java to streamline the code by eliminating unnecessary options
added displayName and title properties to DelegatedClientIdentityProviderConfiguration and related tests to enhance configuration flexibility for client custom properties
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling for early termination scenarios
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
improve handling of httpconnection . isactive ( ) and httpbind . isactive ( ) .
fix npe in forgeeventfactory when parent be null
removed KeyCrypterException from the catch block in WalletTool . java to simplify exception handling by eliminating unnecessary exception handling
added a @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that the class is outdated and should no longer be used
updated the boundary calculation logic in HyphenationTree . java to correctly account for the original length of the Hyphenation object to ensure correct
added a delay of 200 milliseconds in IQRegisterHandler . java to introduce a delay of 200 milliseconds for better responsiveness
move the simpleaccreg class to the swing package to make it easy to use .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant in ParameterBinder . java to clarify that
added a new boolean variable ` providersChanged ` and set it to false in ` ConfigurationManager . java ` to ensure that the ` providersChanged
added a method ` quoteIdentifierTokens ` to handle quoted identifiers in ` SemanticAnalyzer . java ` to ensure proper formatting of identifiers in the token rewrite
added null check for ' name ' entry in fontInfoList and added a warning for missing ' name ' entry for PostScript name in FileSystemFont
refactor variable declaration and variable declaration in SolrResourceLoader . java to improve code readability and maintainability
modified the condition in the Window class to check the parent of the hit actor before returning the current actor to ensure that the hit actor does not
added a null check for appManifest before setting the target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog classes to improve configuration handling and ensure proper serialization to enhance code maintainability and ensure proper serialization
added userName property and getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and HiveSemanticAnalyzerImpl classes to enable users
added setter methods for transformer file , URL , and input stream in XsltBuilder , and updated instantiation in XsltComponent to improve flexibility
added support for HadoopShim in ContainerRunnerImpl , TaskRunnerCallable , and TestFirstInFirstOutComparator to enhance functionality by integrating
updated expectedFileSize calculation in ShadowAssetManagerTest and removed redundant variable assignments in ShadowDownloadManagerTest to streamline file handling and improve code cl
add null check for request . getmappingdata ( ) . context to avoid npe
[ hotfix ] [ test ] fix bug in throughputlogger . log ( )
updated VM version checks in CompilerConfigFileWarning . java and ConfigFileWarning . java to use Platform . isDebugBuild ( ) to ensure compatibility with debug
[ scb - 1341 ] fix bug where meterdetailstatisticmodel be n ' t initialize in defaultlogpublisher
refactor logback configuration handling in FrameworkLauncherExtended . java to improve clarity and maintainability of logback configuration resolution
added @ NotNull annotations to several methods in CipherExecutor , CookieRetrievingCookieGenerator , CookieValueManager , and DefaultCasCookieValueManager
replaced BASH _ ESCAPER with SHELL _ ESCAPER in multiple files to standardize command replacement across different operating
refactor ` waitUntilReadyAndSucceed ` and ` waitUntilReadyAndSucceed ` methods to use try - with -
changed the class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to align the test class with the new naming con
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a Shield address in RpcApiService to facilitate the generation of a Shield address in the RPC
changed the return type of readConsoleInput ( ) methods from byte [ ] to String in multiple terminal classes to simplify input handling by using a
updated regex patterns in TestStabilityRule . java and changed sRunFlavor from PLATFORM _ PRESUBMIT to PLAT
added a condition to limit fragment limits for multi - valued fields in DefaultSolrHighlighter . java and updated HighlighterTest . java to ensure
added username and password parameters to the tryToLogin method in WebdavClient . java to enhance security by allowing authentication with specified credentials
updated import statements and modified entity handling logic in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to
http : / / issues . apache . org / jira / browse / amq - 4896 - fix checkstyle violation in camel
removed wrapCollection from the update method call in DefaultSqlSession . java to simplify the method signature by directly using the parameter directly
added logging for illegal currency exceptions in BTCEAdapters . java to improve error handling and logging for unknown currency exceptions
refactor subscription handling in DurableConduitBridge to use a variable for candidateSubName to improve code readability and maintainability by
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated the ` startController ` method to accept a boolean parameter for tenant isolation and modified related method calls to enhance flexibility in managing tenant creation
simplified the return statement by directly casting the response value to a Map to improve code readability and maintainability
added a check for non - empty attrs size in ProjectWorkspace . java to prevent potential ArrayIndexOutOfBoundsException when attrs size is less than 4096
added abstract methods for retrieving JDK name , jdk type , and language level from BuckConfig to AbstractIjProjectConfig to enhance
corrected the spelling of " Experimental " in HiveSessionProperties . java to improve code readability and maintain consistency in naming conventions
added tests to validate the functionality of the ` resolveEffectiveAcls ` method with user details in the ` GrantedAuthorityEffectiveAclsResolver
fix ( javaparser ) : use reflectionmodel . getsolvedjavalangobject ( ) instead of object . class
added button count management logic in XToolkit . java to limit the number of buttons to a maximum of 24 to improve user experience by allowing
replaced ` jdk . testlibrary . Asserts . assertEquals ` with ` com . oracle . java . testlibrary . Asserts
added a new ` MessagePackFactory ` class and refactored ` MessagePack ` and ` MessagePacker ` constructors to use it to
add biome tag for item and remove bioself from biome
renamed the method ` present ` to ` draw ` across multiple screens across multiple screens to improve clarity and consistency in
added a check for the horizontal state before setting layout settings in ComponentGroup . java to ensure that UIIDs are only updated when the horizontal state
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matcher ( identifier ) . matcher ( ) ` with ` matcher .
replaced ` instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLockless
[ java ] close the commit position counter if it be close .
add a new model class for the usersite class to facilitate the management of user - related sites in the application
updated HttpConverterRegistrar to handle malformed URLs and improved port resolution to enhance error handling and provide clearer error messaging for malformed URLs
cloudstack - 4892 : listcapacity - check for storage - availability and storage - storage - storage - allof and storage -
replaced ` openInput ( ) . close ( ) ` with ` fileLength ( fileName ) ` in ` NRTCachingDirectory . java
updated JavascriptCompiler to be final and refactored class generation logic to enhance encapsulation and improve code clarity
added synchronization to the UISettings class to ensure thread safety when accessing the UISettings class
added native text input handling and changed the access modifier of the fireDataChanged method from private to public to allow access to fireDataChanged for
improve error message when emulator do not support one transaction
use diamond operator to avoid raw type warning
changed array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java for serialization testing to ensure correct handling
updated nonce handling and improved logging messages in OIDCAuthenticationFilter . java to enhance clarity and maintainability of nonce validation logic
added a condition to return true for relationship fields in DCInputSet . java to ensure proper handling of relationship fields in the input set
added support for server Slogan capabilities in FileDataStorageManager and updated related classes to enhance user experience by providing a clearer display name
refactor conditional logic for tinting menu items in DrawerActivity . java to improve code readability and maintainability
added JUnit assumptions for network connection verification in SolrRequestParserTest to improve test reliability by ignoring exceptions during network connection verification
added a check to return early if no symbol events are found in MissingSymbolsHandler . java to avoid unnecessary processing when no symbols are present
added new line breaks and updated HTML structure in StringHelperTest . java to enhance the readability and structure of test cases
added a warning for empty data providers in the Parameters class to indicate that the data provider returns an empty array or iterator to improve error handling and
( chore ) camel - core - optimize : use collections . empty ( ) instead of collections . empty _ map
update xml version to 1.9 . 8 and modify selection style handling in MapStyleModel to ensure compatibility with the latest freeplane version
corrected the variable name from ` mass ` to ` restitution ` in ` PhysicsRigidBody . java ` to ensure
added a new file ` AutoFtpActivity . java ` and implemented the ` FtpHelper ` class to handle FTP test success and failure
refactor token type handling in BaseSemanticAnalyzer to improve clarity and functionality to enhance code readability and maintainability by using a more
added getter and setter methods for imageX and imageY in ImageViewer , OnOffSwitch , Component , and GenericSpinner classes , and updated
added a new class RemoteExecutionEnabled with serialization and deserialization methods to enable remote execution control in the build process
pdfbox - 4071 : fix typo , a suggest by valerybokov
refactor file reading to use UTF - 8 encoding for better compatibility to ensure proper handling of character encoding in file operations
added a call to ` assertWorkingScoreFromScratch ` in ` AbstractScoreDirector . java ` to ensure that the working score is
updated SEMIJOIN _ CONVERSION from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added SLF4J logging statements to various decoder and encoder classes to handle cases where message content is not an io . netty . buffer
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and improved null checks in ` File
added assertions to verify the presence and presence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly validated
deprecate ischemaregion # constructschemablacklist in favor of ischemaregion # deletetimeseries
added a null check for sampleMimeType in MediaCodecRenderer . java to ensure that an exception is thrown when the sampleMimeType is null
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23Pool
updated @ AllArgsConstructor annotations to include @ JsonCreator . Mode . PROPERTIES to enhance JSON serialization support for properties mode
added a check to throw SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to ensure that the index creation is only
added a new class Website with properties for name , URL , and URI in the PopulatorImplTest class to facilitate the
added a setup method to set the default locale to " US " in BSFormatterTest to ensure consistent locale settings for test execution
[ fml ] log a warning for badly download jar file
updated the assertion to use ` Matchers . equalToIgnoringCase ` instead of ` containsString ` in ` MultiPartParsingTest . java
added a check for single parameters in SimpleExprGenerator to ensure proper handling of single parameters in the expression generation process
added a new volatile boolean variable ` createdVertx ` and modified the conditional check to include it to ensure that vertx is only created when
updated the ` writeAttributes ` method calls to use a local variable ` node ` instead of ` null ` to improve code clarity and maintain
updated log messages to replace " Synchroned " with " Synchronized " in SynchronizeFolderOperation . java and modified file retrieval logic in File
added a new boolean field ` ignoredReadStatus ` to ` Entries ` and updated related methods in ` CategoryREST ` and ` FeedREST `
replaced ` MavenTestingUtils . getTargetPath ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) ` for resource resolution
refactored data validation logic in RegisterServerConsumerExecutor and removed redundant list processing in URIRegisterExecutorSubscriber to improve code readability and maintain
updated the condition for playback status in GwtMusic . java to include a check for paused sound to ensure that sound playback is only
added a new permission constant for ADMIN _ SUDO _ AREA in MainCommand . java and updated the condition in Captions . java to
updated query options handling in ServerRequestPlanVisitor and modified test cases in QueryRunnerTestBase to enhance query tracing capabilities and improve test coverage for
updated file name comparison logic in ReloadableJava parsers and Java8ParserInputFileObject to use path . getFileName ( ) . equals ( ) to
updated assertions in ResourcesTest to use constants for pure emoji and mix emoji text to improve code readability and maintainability by using a consistent variable
replaced the NMTWaitForDataMerge method with a new NMTMTOverflowHashBucket method and added a new NMTM
[ hotfix ] [ runtime ] replace eitherserializer snapshot with javaeatersnapshot
updated AddressResolverOptions to replace DEFAULT _ NDOTS and DEFAULT _ NDOTS _ RESOLV _ OPTION with DEFAULT _ NDOT
added a call to the superclass ' s __ associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML file paths from " liquibase / parser / core / xml " to " www . liquibase . org /
move CommonMIMETypeLocator to test . source and move to test . source .
updated RepositoryVersionState from INIT to NOT _ REQUIRED across multiple files to ensure consistency in repository version handling
updated the comparison logic in GenerateChangeLogTask to include additional schema comparisons to enhance the comparison process by including catalog and schema information
replaced ` org . junit . Test ` with ` org . testng . annotations . Test ` in ` TestBackwardAnoam
added a new test class ` ProgressiveJPEGTest ` for testing progressive JPEG rendering to facilitate testing of the progressive JPEG
updated MaterialLoader . java to modify alpha settings and initialize various variables to improve material management and ensure proper initialization of material variables
[ gr - 11818 ] add support for x86 architecture in ccompilerinvoker
added a null and empty check before setting the size of the label to avoid potential NullPointerExceptions when text is not provided
modify readVarInt method to use % 1 _ 000 _ 000 instead of % 1 _ 000 _ 000 to ensure correct handling of integer values
added private constructors to PushUtils , ThumbnailsCacheManager , and PushUtils classes to enforce immutability and enforce immutability of constructors
replaced bounds check with curConfig . getLength ( ) in RocketPanel . java to simplify code and improve performance by eliminating unnecessary
removed unnecessary cast to MockDirectoryWrapper in setEnableVirusScanner method to simplify code and improve readability
updated the parameter in the load method from " . * csv " to " ( ? i ) . * csv " to ensure that the correct
added a condition to check if the app is in the app before announceing accessibility in TaskbarStashController . java to ensure access
replaced ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNode ( ) ` in the NodeManager
pmd : add targetjdk1.5 support to pmdtask and pmdtask
replaced ` PowerMockito ` with ` MockitoJUnitRunner ` in ` QuotaResponseBuilderImplTest . java ` and updated
added PrintStream variables and set output streams in TestSchemaToolCatalogOps . java to facilitate output stream management in the TestSchemaTool
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper constructor and updated related methods to include it to
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance query resolution capabilities by allowing additional metadata
add a wrapper for entityresolver to make it easy to reuse the entityresolver .
updated import statements in MetaDataEndpointImpl . java to include specific Phoenix database metadata classes to ensure compatibility with the latest Phoen
updated the ALLOWED _ REPEATED _ DEADLOCKS constant from 5 to 10 and added a deadlock retry interval in TxnHandler
rename variable ` xl ` to ` xAxis ` for clarity and consistency to improve code readability and maintainability
added a method to check if a character is printable and a set of system names to ensure that the system name does not contain " win "
rename webdriver . in ( ) to webdriver . using ( )
added process plugin configuration handling in ProjectBuildingRequest and related classes to ensure proper handling of plugin configuration during project building processes
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5481 and fix a
[ hotfix ] [ test ] fix integration test for google - cloud - vision
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Auth
add admin _ button to community request in community list servlet
replaced direct instantiation of ThreadPoolExecutor with AtomicInteger for longCompactions and shortCompactions to improve concurrency handling for concurrent compaction operations
updated the method of obtaining the package name from getApplication ( ) to resources to ensure consistent retrieval of the application ' s package name from the
updated the ` getPlayersInPlotVisible ` method in ` Near . java ` to include player visibility check to enhance user experience by allowing
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class for improved readability to enhance maintainability and facilitate future development
replaced hardcoded " com . sun . management . internal . OperatingSystemImpl " with a constant in JNIRegistrationManagementExt .
corrected the spelling of " ReferencedContainer " in SchemeGenerator . java and added a new test in SchemeGeneratorTest . java to
removed unnecessary null checks for key and iv in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary null checks
added @ Stability annotation for LOCAL and PLATFORM _ POSTSUBMIT in WorkProfileTest . java to mark the test as stable for
removed conditional check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary processing
replaced the use of ` setCursorPosition ` with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to
refactor LockFreeBucket to be abstract and introduce new classes LockFreeBucketContendedTimeMeter and LockFreeBucketLayout for testing to
add print thread pool stats to node probe
updated the method to retrieve the maximum bitrate using user preferences instead of a hardcoded value to ensure accurate bitrate configuration based on user preferences
refactor ZipkinHttpSpanExtractor to improve trace handling and span ID presence checks to enhance code readability and maintainability by encapsulating conditional
refactor : move getuserpaymentAccounts ( ) from mutableofferdatamodel to abstract
simplify code by use reflection instead of reflection
added a project assignment in the fs file system to ensure the project is correctly set for the application
updated JsBundle , JsBundleBuilder , JsTestScenario , and JsLibraryBuilder to include ProjectFilesystem as a parameter to enhance flexibility in
refactor various EnvelopeStyle , Databinding , MessageContext , and PropertySet classes to improve code organization and maintainability
refactor MetricsDSLContext class to improve code readability to enhance maintainability and reduce complexity
removed the VersionConfig interface and refactored the VersionBuckConfig class to simplify the code and improve readability by using ImmutableSet instead of
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve stability by preventing potential
changed the visibility of the ` validateTypes ` method from package - private to public to allow access to the ` validateTypes ` method from other
fix : update gapic - generator - java with mock service generation fix ( # 489 )
added SLF4J logging imports to SimulationStatus . java to enhance logging capabilities for better debugging and monitoring
updated the VERSION _ POSITION _ Y and VERSION _ FONT constants from 138 to 150 and 14 to improve the visual appearance of the spl
added a Runnable block to the notification addition process in UserInterfaceComponentImpl . java to ensure notifications are added on the UI thread for better respons
refactor ReturnsElementsOf class to improve code clarity and maintainability to enhance maintainability and readability of the code
corrected the spelling of " non - string partition column " to " non - string partition column " to improve clarity and accuracy of
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to ensure that the ` LineFileDocs `
added a method to retrieve the version code from the MainApp class and updated related references in FeatureList and WhatsNewActivity to improve code
camel - 1774 : fix beaninfo . matchmethodinvocation ( string , inputstream ) to not throw ambiguous method invocation exception
replaced calls to ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java `
added buffer ownership checks and modified buffer disposal logic in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer class to enhance user experience by providing a confirmation
refactor JerseyClientConfiguration to improve code readability to enhance maintainability and facilitate future updates
polish ` ` move characterstreamreadingmessagelistenermessagesource ' ' to ` ` org . springframework . integration . stream
updated print statements in InstanceOfPatternMatchTest and RemoveRedundantTypeCastTest to use ' o ' instead of ' s ' to improve
added methods to check if the last row and column count are empty in StringDict and Table classes to ensure proper handling of empty strings and prevent
expose low level api . make it possible to override unsupported createcontainercmd property without wait until testcontainers add support for it .
changed logging level from info to error in MediaInfo . java and removed unnecessary try - catch blocks in RendererConfigurationTest . java to improve error
added schemapattern option handling in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to support configuration for schemapattern in database connections
updated the return statement in ProvSSLSessionImpl to handle null tlsSession cases more gracefully to improve robustness by avoiding potential NullPointerExceptions
refactor ratio calculation and bitmap creation logic in AndroidGraphics . java to improve clarity and correctness of bitmap creation logic
refactor Base64 class implementation to improve code readability and maintainability
sulong : add get / set fallback ( ) method to llvmglobalcontainer . getstackfromthreadnode ( ) .
simonstewart : add iphone support to the javascriptenableddrivertest
refactor FlowBuilder and FlowJobBuilderTests to improve code organization to enhance maintainability and readability of the code
changed the type of ` resName ` and ` resEntry ` from ` ResName ` to ` int ` in the ` AttributeResource `
fix ( docker ) : fix tl verification of docker context
replaced @ After annotation with @ Before annotation in SimpleReactiveElasticsearchRepositoryTests . java to ensure test setup is executed before each test execution
modified type variable handling in ` mmm Attr . java ` and added a new class ` ppp T6450290 . java `
added a log level option to the LoggingFlags and LoggingOptions classes to allow customizable logging levels based on configuration
added logging statements to the deleteItemsFromDatabase method and updated related classes to improve visibility into the removal of packages from the database
added ` allFilesOption ( ) ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` backToDisplayActivity `
added new methods ` forEachOperation ` , ` hasMatching ` , and ` hasMatching ` to ` MutationOperationGroup ` for improved functionality
updated the logic for determining the number of predicted app columns based on the device type to improve accuracy in determining the number of app columns based on
updated StringUtils to use UTF - 8 encoding for content to ensure proper handling of character encoding in string input
added new classes ` RequestMatchers ` and ` RequestMatchersTests ` for managing request matchers to enhance matcher functionality for improved request matching capabilities
ggb - 1193 fix for text field not work on applet
adjusted height and width calculations in ProgressBar . java to account for bgBottomHeight and bgRightWidth to ensure correct positioning of the kn
[ native ] use external _ functions . json in presto - spark
changed variable access modifiers to final in BruteArgumentMoverHandle . java and added a native method for permuteArgs to enhance im
added a condition to check if the handler state is invalidated in the gesture state check to ensure that the gesture handler is not invalidated before proceeding
updated layout calculations in CellLayout and Workspace classes to improve layout handling for landscape and portrait orientations
added a condition to check if the redirected URL ' s file is " / robots . txt " to ensure that the parser only considers valid robots . txt files during redirection
[ netbeans - 4892 ] fix warning icon in callhierarchytopcomponent
updated button subscriptions in AdvancedGameSetupScreen to use " createWorld " and " return " instead of " continue " and " close " to
updated null checks in UDFOPDivide . java and added unit tests in TestUDFOPDivide . java to ensure correct
refactor code formatting in AbstractJob and FlowJob classes for consistency to improve code readability and maintainability
updated filter process URL and logout request matcher configurations in FormLoginBeanDefinitionParser , LogoutBeanDefinitionParser , and LogoutBeanDefinitionParser to enhance
unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper resource management during activity destruction
updated variable names from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a request timeout configuration in the RaftServerConfigKeys . Rpc to ensure proper handling of request timeouts based on configuration settings
updated logging level from error to debug in TsFileResourceManager . java and refactored test cases in ResourceManagerTest . java to improve
added system properties to the setModelSource method in MavenModuleLoader . java to ensure that the model source and system properties are correctly set
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to the server
add model handler for animatedtorch to make it easy to use .
added null check before closing the writer to avoid potential NullPointerException when writer is null
added a method to retrieve Hive configuration from a specified directory to enhance flexibility in configuration management across different test files
added a new link for Muting Users to the FeaturesActivity to enhance user experience by providing access to the Muting Users link
added a property " jdk . reflect . useDirectMethodHandle " to initialize the properties with a default value to false to enable direct method
hbase - 25836 splitonleadingvarcharcolumnspolicy extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 13434 ] [ yarn ] fix npe in yarnclusterdescriptor when env _ flink _ plugins _
updated method calls from ` getPronunciations ` to ` getWord ` in ` BuildTranscriptHMM ` and ` Trainer
updated JSON string formatting in JsonUtilsTest . java to ensure consistent formatting and improve readability
added a new extra entry for the tweet ID in TimeLineCursorAdapter and TimelineArrayAdapter , and updated the Compose class to handle
added a warning log for underlying ring buffer data related to reliable topic lost to improve clarity of warning messages related to reliable ring buffer data
do n ' t throw npe if no class find to analyze in classpath
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
updated the initialization of isIncompatible variable in DLNAResource . java to ensure proper handling of resource compatibility
updated the ` createAccount ` method to use ` AccountCreateContract ` instead of ` Account ` to enhance functionality by allowing the creation of accounts
pdfbox - 4892 : check for empty range array , a suggest by valerybokov
resolve http : / / issues . apache . org / activemq / browse / amq - 4896 - fix the redel
enable off - heap format by default and update star tree version retrieval to use common constants instead of hardcoded values
modified the title setting logic in FeedUpdateService . java to ensure the title does not exceed a maximum of 2048 characters to prevent potential issues with
updated JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory for the preview panel to improve code clarity and maintainability by
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for better debugging
added null check for reusable bitmap before setting inMutable and inSampleSize to avoid potential NullPointerException when reusableBitmap is null
added layoutParams field and its getter method to FakeView . java to provide access to the layout parameters for the view
added a check to throw an IllegalStateException if the cursor is already closed in DefaultCursor . java and created a corresponding test in CursorSimpleTest .
pdfbox - 4892 : simplify code , a suggest by valerybokov
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private field ` ts ` with getter and setter methods in the ` Message ` class to provide a way to store and store the timestamp
refactored genericexceptionmapper to use a new utility class to improve code readability and maintainability
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
[ isochrone ] fix remove legacy parameter from request
removed the ` public ` access modifier from multiple test classes and added an ` @ Nested ` annotation in the ` JavaRecipeLifecycleLifecycleTest
refactor CSRF setting logic into a separate method ` setCSRF ` to improve code readability and maintainability by encapsulating CSRF setting logic
do n ' t load shadowclassloader in eclipseloaderpatchertransplants if bootstrap = true
[ zeppelin - 4892 ] allow numericdisabled to be set to false
changed log level from info to debug for default value logging from info to debug to reduce log verbosity for better debugging
added null checks for axes and buttons in Lwjgl3Controller and updated controller management logic in Lwjgl3ControllerManager to
updated ObjectFactory import from cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactory
refactor the port forward save logic in PortForwardListActivity to use HostDatabase for database access to improve code readability and maintainability by
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods in ` GlobalConfiguration ` to control snapshot
modified the event handling logic in SyncedFolderObserver . java to check for non - null names before executing the scheduled job to improve robustness
refactor LocationMarshaller to improve code readability to enhance maintainability and facilitate future updates
simplified condition checks in StatusBarTouchController and updated gesture handling in OtherActivityInputConsumer to improve code readability and maintainability by
refactor VectorReader and related classes to remove the ` VectorReaderImpl ` interface and its implementation to simplify the codebase by eliminating unnecessary
replaced instances of ` ArgumentMatchers ` with ` Matchers ` across multiple test files to improve consistency and align with updated mockito standards
refactor methods in ` AndroidInstrumentationTest ` , ` AbstractPathSourcePath ` , and ` AppleCxxPlatformsTest `
refactor ` completeMapAndTransformRow ` and ` transform ` methods to use ` RecordReaderFileConfig ` instead of ` RecordReader `
added a null check for the extractor before processing annotations in ControllerMethodInvoker . java and added @ WithArgumentExtractor annotation in Param . java to
cloudstack - 4892 : add api to find correct resource limit for account / domain
add motion shift event to the inventoryeffectrenderer . close # 2323
added a deprecated constant for the COLD _ READS _ TO _ OMIT _ KEY and removed it from uncheckedOptions to indicate that the
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent potential memory leaks
[ issue # 1188 ] fix the issue of the metric not be send to the broker ( # 1188 )
refactor KeyboardAddonSettingsFragment to improve code readability to enhance maintainability and facilitate future updates
replaced the @ Test annotation with an @ Ignore annotation in ShadowDateUtilsTest . java to mark the test as ignored for a moment to
rename ` eventLoopGroup ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve clarity and consistency
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to enhance functionality and ensure correct handling of UpgradeRequest and UpgradeResponse
added connection timeout support in AndroidImplementation . java to enable dynamic connection timeout settings for improved user experience
updated ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return permissions for user and team permissions based on repository permissions to enhance
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing with quoted casting
updated assertions in Misc . java to differentiate between root and non - root files to ensure correctness of file access assertions based on the
added logging functionality for thread group and thread per group in FixedThreadExecutor . java to improve thread management by allowing dynamic thread group configurations
added null checks for the field variable in AbstractChangeGenerator . java to prevent potential NullPointerExceptions during field validation
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to standardize event listener functionality across the CAS framework
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added a close method to the DeflaterOutputStream to ensure proper resource management by closing the deflater buffer
added a new file gsp001 . java for testing JVMTI system property retrieval to facilitate testing of system property retrieval
do n ' t expose annotationmetadata when inject bean
add read / write method to cameranode , lightnode , cameracontrol , and cameracontrol
refactor PopupNotificationPanel to use SwingUtilities for parent window management to improve code readability and maintainability by utilizing a centralized
replaced ` NoInstanceException ` and ` InvalidInstanceException ` classes with ` InferenceException ` instead of ` NoInstanceException ` to
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` variable
changed the parameter type of the after method from int to long in Mockito . java to allow for more flexible handling of milliseconds in the
added ` onBuild ` and ` executionDriver ` fields with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes to
added conditional logic to set icons based on RTL direction in Toolbar . java and FlowLayout . java to ensure proper icon selection based on
added functionality to enable position increments in StopFilter to enhance filtering capabilities by allowing dynamic control of stop position increments
refactor IP address handling in EmailsTest and SystemErrorEmailReportTest to use a new instance of InternetAddress to improve code clarity
added a boolean variable ` mTryShareAgain ` and set it to false in ` FileActivity . java ` to ensure proper handling of share
added support for determining the tty name based on the version of the Jansi native Pty to enhance the functionality of the Jansi
refactor BandwidthProcessor to use bytesSize for better clarity and consistency to improve code readability and maintainability by using more descriptive
replaced direct calls to ` then ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to
updated URL constants in EaseeBindingConstants . java to use a new API base URL to enhance security by restricting access to these URLs
( chore ) camel - kafka : add startup attempts to the kafka container
replaced ` Matchers . anyOf ` with ` is ( itemName ) ` for better readability to improve code clarity and maintainability
added SSL trust management for SSL connections in OkHttp . java to enhance security by allowing multiple SSL certificates to be accepted
refactor button click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and functionality to enhance code read
added a new file ` HyperlinkFormula . java ` and changed the data type from byte to int in ` StringPtg . java `
added null checks for stdout and stderr in ShellStep . java to prevent potential NullPointerException when workingDirectory is null
increased TIMEOUT _ MILLIS from 1000 to 2000 milliseconds in AsyncAppenderTest . java to allow more time for asynchronous appenders to complete
updated the ` escapeDatabaseObject ` method to include ` objectName ` and ` objectType ` as a parameter to enhance flexibility in object name escaping
added a boolean field ` inputChanged ` to track the state of the ` setGlassEnabled ` in ` MaterialRenameDialog . java ` to
added a test to verify that ` stateChange ` is applied to other instances of ` Display . STATE _ DOZE _ SUSPEND `
[ geos - 8470 ] add a directinvocationservice interface for the dispatcher . invokedirect ( ) method .
gwt : add gwtkeycodes . key _ x and gwtkeycodes . key _ y to the globalkeydispatcherw (
added conditional queries for pg _ catalog and pg _ constraint based on server version to ensure compatibility with PostgreSQL versions below 9.0 and above
added @ Nullable annotation to the message variable in QueueChannel . java to ensure message is not null and prevent potential null pointer exceptions
updated method signatures and variable names in FileUtils . java for consistency to improve code readability and maintainability by using more descriptive variable names
added logic to handle Jenkins nodes in the RemoteCollector initialization to ensure that the Jenkins nodes application is correctly collected based on the presence of
refactor attribute resolution logic in HeadersBeanDefinitionParser to use a dedicated method to improve code readability and maintainability by centralizing attribute resolution
log4j2 - 1343 fix typo in ProtobufLogReader . java
removed redundant calls to destroyRegistries ( ) in DefaultApplicationDeployer . java and added a destroy ( ) method in NacosRegistry
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a new method for writing status codes to improve code readability and maintain
added a print statement for the " BadCredentials " event in AuditEventTests . java and modified the JSON output formatting in AuditEventTests .
added checks for negative rounding errors in the Interpolation class and adjusted the cbrt method call to ensure proper handling of rounding errors and prevent
fix path issue in forge - worldedit . java ( # 2321 )
refactor DxStep to use a local variable for the dx variable to improve code readability and maintainability
added multiple assertions to compare PointRangeQuery instances in TestPointQueries . java to ensure correct equality and equality checks for PointRangeQuery instances
hbase - 25836 testhfilecleaner should use ` ` / namespace / table / region ' ' instead of ` ` /
added a conditional check to set the file name before setting the file label in ReceiveFileConversationComponent . java to ensure the label reflects the
fixed - jce be n ' t be throw in jedisclustercommand # execute ( ) .
[ hotfix ] [ table - planner - blink ] add chainingstrategy to rowtimeminibatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap and added new test cases for
updated QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark to
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added checks for null and empty fields in GroovyEngine . java and refactored identifiers handling in GroovyEngine . java to improve code robustness
fix for ggb - 1353 : set drawable to false for angle number
added configuration options for read socket and TCP keepalive in Hive settings to enhance server connection stability by allowing configurable timeout settings
corrected a typo in the method name from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve code readability
no effective change - remove unnecessary sql log statement
refactor RealtimeSegmentRelocator to use TimeUtils for parsing time strings to improve code readability and maintainability by using a more
cloudstack - 4892 : fix npe in createvpccmdbyadmin . startvpc ( )
updated windowAlpha calculation to ensure progress is non - negative to prevent potential index out of bound errors
updated Spring Security schema warning from 3.2 to 4.0 in SecurityNamespaceHandler . java to ensure compatibility with Spring Security 4.0
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
made fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes final to ensure immutability of fields and
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to utilize it to
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage
[ java ] remove unnecessary final from log .
replaced ` updatePurgedShards ` and ` purge _ time ` with ` deletePurgedShards ` and updated related SQL batch calls to
added support for Java language 17 in JavaLanguageModule and its corresponding tests to enhance functionality and ensure compatibility with the latest Java features
added a constant for timeout for compression job and updated related methods in TimeBasedRollingPolicy and FileAppenderResilienceTest to improve job management
fix potential npe in volatilereadnode . getlocationaccess ( )
added a method ` getSteps ( ) ` to ` SimpleJob ` and improved formatting in ` getStep ( ) ` to enhance code read
removed redundant assignments of fromBase58 and toBase58 in TronJsonRpc and TronJsonRpcImpl classes to streamline the code
refactor currency pair creation to use a local variable for clarity to improve code readability and maintainability
update duration to use baseTimeUnit instead of TimeUnit . NANOSECONDS and add assertions for measurement values in MeterRegistryCompatibilityKit to ensure correct
[ hotfix ] [ euphoria - planner - blink ] fix the npe in reducebykeytranslator when the partition
changed variable types from String to CharSequence for color values and pubkeyId in HostEditorActivity . java to enhance type safety and improve code readability
rename incompatibledatabasehandler to databaseversionhandler and update test
added a maximum number of replies in the query loop in ExpansionViewHelper . java to limit the number of tweets in the contributionation
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to increase the refresh interval for better
http : / / issues . apache . org / jira / browse / amq - 4892 - fix persisting of deleted tail
fix a typo in the method call to getimplementationtitle ( )
refactored the ` grow ` method in ` DataIO . java ` to improve code readability and maintainability by reducing duplication
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method to retrieve the uploaded file name in AttachmentHttpBinding to enhance functionality by allowing access to the uploaded file name from the part
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure proper loading of data during loading
added ClassNotFoundException to the instrumentJar method and modified exception handling to improve error handling for negative array size exceptions
added a method ` checkForSpillPossibility ` to check if a partition is flushed in ` HashAggTemplate . java ` to ensure that
replaced instances of ` getDocStoreSegment ( ) ` with ` dsName ` in ` IndexWriter . java ` to improve code clarity
added a default SAML name ID format in SamlProfileSamlNameIdBuilder to ensure supported name formats are not added to the list of supported
added redirection and error handling for password change in ChangePasswordPage . java to improve user experience by providing feedback when the password change is aborted
reformatted closing brace in Deadlock2 . java to improve code readability and maintainability
added a new method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum
deleted the FontScalingTest . java file to the test class is no longer needed for the current implementation
added validation for filter begin and end dates in RRD4jPersistenceService . java to ensure that the filter ' s end date is valid
added checks to return early if numVectors is non - negative to improve performance by avoiding unnecessary processing when vector is zero
test : migrate executablereftest to junit 5 ( # 1188 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 14836 : add support for wiretap expression in camel - wire - tap dsl .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
add ` ` planner . enable _ topn ' ' option for push limit to topn
[ java ] remove unused variable in log agent test .
fixed - rbatch . ping ( ) method do n ' t call redisconnection . isqueued ( ) if connection be not queue . #
refactor ` getConfVarInputStream ` to ` getConfVarURL ` and update its implementation to use a new URL for loading configuration variables to improve
updated the method call from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in the createModel call to ensure the
modified the ` onCreateOptionsMenu ` and ` onMenuItemSelected ` methods in ` SimulationViewer . java ` to improve menu item selection
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of the homeDir variable to use a dynamic property key to improve flexibility by allowing dynamic configuration of the directory path
added a condition to return a single space for empty comments in Space . java to ensure proper handling of empty comments in the code
changed ` mClosed ` and ` mNativeDict ` fields to ` volatile ` in multiple dictionary - related classes to ensure that the ` m
added printStackTrace ( ) method to ContextHandler . java to improve error handling for better debugging
refactor CustomItemDropTest to extend BaseTest and update import statements to improve test structure and align with the new integration framework
added conditional checks for partition existence in DDLTask , DDLSemanticAnalyzer , and AddPartitionDesc classes to enhance partition management by allowing conditional
updated the logic for reading bytes in NfsSecondaryStorageResource . java to improve data handling and efficiency in reading data
[ java ] remove unused controlrequeststreamid call from basicauctionclusteredservicenode
added support for spatial operators in CapabilitiesTransformer and implemented corresponding tests in GetCapabilitiesTest and GetCapabilitiesTest to enhance support for spatial operations in the
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitsFix annotation to indicate that the test
added a check for ` pos ` and ` lastValid ` in the ` Http11InputBuffer ` class to ensure proper handling of preface
[ java ] set isIngressExclusive to false in AeronCluster . java to disable exclusive operations by default
hbase - 14823 hbase . hbase . cache . keys should be configurable in hbase - hfile . block . cache
updated JSONRecordReader to use currentRecordNumberInFile ( ) instead of recordCount + 1 to improve clarity and maintainability of the
added filtering logic to remove out year items from merged items to improve user experience by preventing out - of - year items from being processed
replaced ` 0x00000000 ` with ` 0 ` in ` CacheableTextView ` , ` CellLayout ` , and ` Holog
added a check for OpenGL ES version in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering
ww - 4892 set the actioncontext to null in backgroundprocess to avoid npe
added support for prepending default database names in BaseSemanticAnalyzer and modified related methods in QBParseInfo to enhance database name handling and
added connection timeout configuration to TestConnections . java and changed the count variable to be final in StubConnection . java to ensure immutability of
added tests for approx _ percentile and approx _ percentile queries in TestHiveAggregationQueries . java to ensure that the approx _ percentile function correctly
updated DEFAULT _ IDLE _ TIMEOUT to DEFAULT _ WRITE _ TIMEOUT and replaced idleTimeout and idleWriteTimeout with DEFAULT _ IDLE _ TIMEOUT
updated the way shares are retrieved by using the user ' s platform account type to ensure compatibility with the user ' s platform account handling
refactor Inet6Address to use generics and improve type safety to enhance code readability and maintainability
refactor methods in PlaybackControlView to use a unified setButtonEnabled method to improve code readability and maintainability by reducing duplication
updated session presence checks to use ` id ` instead of ` Session ` to improve clarity and consistency in session handling logic
updated method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary .
change default value of useexceptionprobability from true to ___ _
updated the plate color handling for themed icons in PredictedAppIcon . java to improve visual consistency for themed icons
ticket # 269 : make separation of concern in mysqluser more strict .
added " centre " alias to the aliases in Middle . java to support additional positioning options
added inject method to CommonsApplicationComponent and changed class visibility from package - private to public to allow external access to the DirectUpload class for
added space adjustments for left and right axis properties in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to improve layout
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance functionality to support additional Java ABI flavors
added operation event status type to the request parameters in OnlineHubService and initialized the services list in CompositeLogService to ensure proper handling of
added debug logging for annotations and modified visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure proper handling of annotations
refactor jmsio setup method to use teardown instead of startbundle
added a classpath variable to the ProcessBuilder creation in SortedArrayStringMapTest . java to enhance the output of the ProcessBuilder ' s classpath
updated the file path separator assignment in PackageResourceLoader . java to ensure consistent file path formatting across different Android versions
[ hotfix ] remove redundant ' this ' keyword from dataset . max ( ) and min ( )
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
added escaping logic for error messages in ` ShouldHaveMessage ` and updated test method visibility in ` ShouldHaveMessage _ create _ error _ Test
fixed - jcache . close ( ) method should return cache . geturi ( )
reduce log level when closing command context
refactor ALPNClientConnectionFactory initialization in HTTP2Client . java to improve code readability and maintainability
update entitypropertiespacket to use getbasevalue ( ) instead of getvalue ( )
use thinghandlerhelper . ishandlerinitialized ( ) instead of thingstatus . online
increased the timeout duration in countDownLatch . await from 500 milliseconds to 5 seconds in multiple test files to allow more time for the
changed log level from info to debug in LightThingHandler . java to reduce log verbosity for better troubleshooting
add db . properties to asyncjobmanagerimpl to support db . maxactive and db . properties .
updated method signatures and import statements in Reporter . java and ReturnsSmartNulls . java to include an additional parameter to enhance error message clarity and
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` in ` DataGenerator . java ` to improve type
refactor multiple package - info . java files for consistency to improve code readability and maintainability
added a check for non - empty physical column names before matching them in OrcPageSourceFactory . java to ensure that physical column names are
added a method to mix the input in methCla to enable audio playback functionality in the engine
refactor JComponent and SynthTextPaneUI classes for improved code organization to enhance maintainability and readability of the code
[ http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5767 ] fix
simplified the condition for checking ` leadingIncludePaths ` in ` PreprocessorDelegate . java ` to improve code readability and maintainability
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplication ` and refactored the
simonstewart : add ` ` find ' ' and ` ` find ' ' to the list of search result
updated the calculation of the maximum supported channel count to use a default value based on the format ' s sampleRate to ensure the correct channel count is
added getter and setter methods for formula text and refactored XSSFName class to improve code clarity and maintainability by encapsulating
increased the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to accommodate
fix ( core ) : fix arrayindexoutofboundsexception in gmlparser
added unit tests for ClassPathXmlJobRegistryContext to ensure correct job name retrieval in the job registry
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to improve precision in time calculations for better precision
camel - 12320 : camel - restlet should use advanced instead of consumer in camel - restlet
( chore ) camel - log : remove unused method showout ( boolean )
replaced ` submitTraceEvent ` with ` writeChromeTraceMetadataEvent ` and introduced a new method ` writeChromeTraceMetadataEvent ` to
added a condition to check if the order status is not CANCELED , FILLED , and REJECTED before adding to limitOrders to
added pixel offset calculations and validation for image layout in LCMSImageLayout . java to ensure proper handling of image layout and prevent invalid images
fix rubyevent . getunconverted ( ) to rubytimestamp . newrubytimestamp ( ) .
added a check to return the resource if the path ends with " / " in ContextHandler . java and created a corresponding test in WebAppContext
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
fix issue with textfield . setvalue ( ) on macos
added a conditional check for callerLoopScope before setting GuardsStage and StageFlags in GraphDecoder . java to ensure proper handling of guards
test ( sniperprettyprinterjavaxtest ) : migrate sniperjavaprettyprinter to junit 5 ( #
refactor URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added multiple @ Entity annotations to the Mail class to ensure proper entity management in the Mail class
updated default values for ` includeTablespace ` and ` includeTablespace ` from " false " to " true " and modified the command parameter
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to the buffer data for the CountersReader class
added a flag ` hasReadNonEmptyFile ` to reset ` container ` and ` fieldVectorMap ` in ` ScanBatch . java ` to
updated failure strategy in StringSubject to include custom name handling to improve clarity of failure messages for better debugging
added a regex pattern for matching Cuda libraries in the LibUtils class to improve accuracy in detecting cuda libraries based on the provided name
updated exception handling from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages and PackageHelper to improve error handling
hbase - 11886 add check for safemode in hbase - master and wait on safemode
enhanced error messages in TranslatingJavacPhaseTracer to include class name and message to improve clarity of error messages for better debugging
move defaultplugincache . getplugindescriptor ( ) method into a separate method
do n ' t trigger contact presence status change event if the parent provider be null
( chore ) camel - fhir : remove unused method in servletservletdetails # withresourceandparams
added a new integration class ` AccountInfoFetchIntegration ` for fetching account information in the BTCE exchange to facilitate testing of
added mouseWheel method to VDUInput and vt320 classes and updated mouse report logic in TerminalView to enhance mouse event handling and improve
updated library path handling in Natives . java to use a local variable for improved clarity to enhance code readability and maintainability by
# 1188 - remove columnhstore annotation and remove it
add player skin flag to metadata index ( # 2321 )
test : fix loadbalancerwithservicetests fail on window
fix npe in mapservice . getmember ( ) when member be null .
replaced System . getProperty ( " os . version " ) with AccessController . doPrivileged ( ) for retrieving the " os . version " property to
updated TemplateEngineFreemarker to use a configurable file suffix instead of a hardcoded value to improve flexibility and maintainability by
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
added animation callback to dockParent and modified animation handling in ToolbarPanel . java to improve animation responsiveness and responsiveness during layout
replaced ` EasyBind . bindConditionally ` with ` EasyBind . when ` in ` StyledTextAreaVisual . java `
added declaredPlatforms field and modified platform filtering logic in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenrule
replaced usage of SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator and PartTreeJpaQuery to standardize parameter handling across
added a null check for passwordAttribute before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and a corresponding test in DataUtilitiesTest to ensure proper handling of default values in byte and String
updated SSL engine logic to handle null addresses and ensure correct host name verification to improve robustness by avoiding potential null pointer exceptions
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals for cache hits to improve clarity and correctness of cache
simonstewart : refactored the deletion of cookies in the ie driver to use the new method ` wdDeleteCookie ` to
added a new boolean flag ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler . java ` to
added ` < meta charset = " utf - 8 " / > ` to the HTML file output in ` HTMLListWriter . java ` to
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum statistics key prefix length from 200 to 150 and refactored path separator handling in multiple classes to improve performance by reducing unnecessary
updated the formatting of the combo box addition in BasicComboBoxUI . java and added a new class bug6337518 . java to improve
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future updates
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added imports for HomeContentProvider and updated broadcast notifications across multiple services to ensure proper handling of content URIs in the application
added state management for state transitions in ` BubbleTextView ` and ` Launcher ` classes to improve user interaction by controlling the state
added Throwable parameter to getFallbackResponse methods across multiple classes to enhance error handling by providing additional error information
removed the conditional check for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is not null to simplify the
added null checks for tags in ChannelUri . java to ensure robustness by preventing potential NullPointerExceptions
updated JAVA _ REGEX _ SPECIALS regex handling and added new test cases in TestSqlPatterns . java to improve regex pattern matching functionality and ensure
added a new constant for the action bar title and updated its value in FileActivity and FileDisplayActivity to ensure the action bar title reflects
updated the method to use ` getLast ` instead of ` getOnlyElement ` in ` PythonDslProjectBuildFileParser . java ` and
updated the schedule time from " * " to " 0 " in CleaningService . java to ensure the schedule starts at zero instead of a
updated TransactionalValidationListener to handle partitioned tables and improve table path validation to enhance functionality for partitioned tables in the metastore
refactor ReplicationHandler and SnapPuller classes for improved polling control to enhance performance and control over polling behavior
changed the data type of generatedKey from int to long and updated SQL statement execution to support dynamic key generation and auto - increment functionality
refactor variable assignments in SimpleReferenceCache . java for clarity to improve code readability and maintainability
updated test messages from " inlineable " to " failed to inline " in multiple files to provide clearer guidance on test failures related to
increased keepAliveTimeoutShared and keepAliveTimeoutCustom from 60 to 10 and added thread pool stop timeout in WebClientFactoryImpl . java to
deleted the HttpTestAccount001 . java file to the test class is no longer needed in the project
changed exception handling from Exception to Throwable in Dispatcher . java and modified the try - with - resources statement in DispatcherTest . java to improve error
camel - 16462 : camel - cxf - allow to configure cxf data format if it be not cxf message
added a case ' ~ ' to handle the ' ~ ' character in ClientUtils . java to ensure proper handling of special characters in the client
camel - slack : add consumer and scheduler parameter to camel - slack to allow customization of the scheduler .
fix harvesting not fire when drop a block . close # 1193
updated the width of the FormLayout in TranscodingTab . java for improved readability to enhance the visual appearance of the FormLayout
added a new file ` bug8057791 . java ` that implements a GUI with a GUI to demonstrate the use of
refactor flag assignment logic in LambdaToMethod . java and add a new interface LambdaInterfaceStaticField . java with a static field to improve
refactor WebSocket method creation and subscription manager initialization in RunnerBuilder . java and add a new test case in RunnerBuilderTest . java to improve
updated null check from ` length ( ) > 0 ` to ` null ` in ` ComposeActivity . java ` to improve code robustness
refactor ParquetFixedWidthDictionaryReaders to conditionally use BigIntVector for reading values to improve performance by avoiding unnecessary exception handling when
refactor PortraitPagedViewHandler to handle landscape orientations and adjust translation calculations to improve layout responsiveness based on device
added a new annotation ` Log ` and ` LogInterceptor ` classes with a logging feature to facilitate logging functionality in the Spring Cloud
updated the format of the dump string in QueuedThreadPool . java to include a space before the trace string to enhance readability of the output
updated method signatures and variable names from ` ReferenceType ` to ` Implementation ` in ` CacheGenerator ` and ` CacheProvider ` classes to improve
updated the calculation of the reference map in FrameMap . java to include totalFrameSize ( ) to ensure the reference map accurately reflects
refactor TypesafeConfigurator to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - itest - karaf : add karaf feature for camel - graphql
renamed the main method from main to bug1 and bug2 in RFE2891944 . java to demonstrate the
remove unnecessary URL encoding in HttpClientIntroductionAdvice . java to simplify code and improve readability
replaced the deprecated ` unsupportedPlatformTool ` method with a new class ` UnsupportedPlatformTool ` that implements the ` Tool ` interface to improve
updated loopCount variable type from double to int and modified log message format to improve type safety and enhance logging clarity for retries
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
added reflection - based field access to addressManagerTest and updated index initialization logic in AbstractAddressManager and AbstractAddressManager to ensure proper handling of
updated column and row specifications in VLCVideo . java to adjust layout specifications for better user interface consistency
fix link to bitsquare link to bisq / bitsquare
updated the AUTHORITY from " com . klinker . android . talon . provider " to " com . klinker .
updated user configuration directory and refactored file parsing logic in MBoot . java to improve clarity and ensure correct Maven repository path is used
added a call to bind a buffer to the bufferHandle in VertexBufferObjectWithVAO . java to ensure the buffer is properly bound for
refactor ServerHttpSecurity configuration for improved security handling to enhance security measures and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to disable tests that are not ready for execution
added default HTTP headers to HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility
added userpasswordnotvalidexception and thingsboardcredentialsviolationresponse for user password validation
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
replace codec . base16Decode with bytes . fromhexstring for signingKey assignment to improve code readability and maintainability by using standard byte
replaced CascadedStyle with constants for float handling in FloatUtil . java to improve code consistency and maintainability by using constants instead of
planner - 489 add miss import to planner - core
replaced instances of ` CaseInsensitiveHeaders ` with ` MultiMap ` and updated the access level of ` getDefaultHeaders ( ) ` to improve
rename ` enc ` to ` charset ` in multiple classes to improve clarity and consistency in method naming
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that the
refactor comparison logic in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare instead of Long . valueOf for consistency to improve
changed log level from error to debug for HTTP response logging in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for better debugging
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials to improve clarity and consistency in the authentication
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check to prevent removing invalid filters and improved logging messages to enhance security by preventing invalid filters from being removed
refactor : move bcpginputstream . wrap ( inputstream ) into pgpkeyring and bcpginputstream . wrap
replaced DataOutputStream with BufferedOutputStream for file output stream and added try - finally blocks to ensure proper resource management and prevent potential memory leaks
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified column name handling in ` HiveBase
refactor FocusTransitionTest class to improve code readability to enhance maintainability and facilitate future updates
replace gwtproject . core . GWT with gwt . gwt in ShareControllerW . java to ensure compatibility with the latest GWT library
added a check for ` sourceTask ` before retrieving the job counter in ` CounterStatsAggregator . java ` to ensure proper handling of ` Map
removed unnecessary whitespace in the readListener assignment to improve code readability and maintain consistency
refactor color handling in AppearancePanel to use ColorSelectionModel for event listeners to improve responsiveness and maintainability of the color selection
updated the constructor parameters in TaskHelper to use ' hidden ' instead of ' false ' to ensure proper handling of the hidden state during task processing
http : / / issues . apache . org / jira / browse / amq - 4896 - fix failovertimeouttest
pdfbox - 4071 : fix resource leak , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java to enable the use of DefaultParameterHandler in the scripting framework
added a check for the def loop depth before setting the spill state in LinearScanWalker . java to ensure that the interval does not exceed
micronaut : add test case for groovy compilation ( # 1748 )
refactor PgResultSet and PgStatement to use a separate closeInternally method for better resource management to improve code readability and maintainability by
changed the default value of ` serviceAdvisorType ` from ` null ` to ` ServiceAdvisorType . PYTHON ` to ensure compatibility with the
replaced instance variables ` resolver ` with a thread - local variable ` resolver ` in ` GenericDatumReader . java ` to improve thread -
changed the type of the ` Path ` constructor from ` Collection ` to ` List ` and updated the handling of operators in ` PdfContentStream
replaced ` new byte [ 512 ] ` with ` memo ` for wallet outputs in ` SendCoinShieldTest . java ` to improve
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class for setting personalisation based on a specified locale
removed unnecessary whitespace in CodeGenerator . java to improve code readability and maintainability
removed the ' percent ' parameter from the scroll method calls across multiple classes to simplify the scroll method by removing unnecessary percentage parameter
changed the access modifier of ` pointer ` from private to public and added methods to reset the ` pointer ` variable in ` FlatRecordReader `
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
fix castexpression to work with rawjavatype .
refactor accepts handling logic in AbstractResource . java to improve clarity and functionality to enhance code readability and maintainability by using a boolean
added a new boolean variable ` false ` to the ` TaskView ` class to ensure proper handling of task view behavior
added an ` isAutoIncrement ` method to ` LiquibaseDataType ` and implemented it in ` CreateTableChange ` , ` DecimalType
added a default value of " Internal Server Error " in ExceptionResponse . java to provide clearer error messages for internal server errors
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils for improved performance monitoring to enhance
replaced ` add ` with ` push ` for ` currentStatus ` and ` boosterStatus ` in ` BasicEventSimulationEngine . java
added support for ajp connector configuration in GitBlitServer . java to enable users to configure the AJP connector based on the specified port
added type coercion logic for compound types in TransTypes . java and created a new class Intersection03 . java with a test for
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the test class
refactor WToolkit to use a native method for starting the toolkit thread to improve code readability and maintainability by avoiding direct
[ gr - 25946 ] bundlecontentsubstitutedlocalizationsupport should compress the bundle in parallel .
simonstewart : do n ' t use surface . setvisible ( true ) on macos
updated the temporary directory initialization in AbstractRecordExtractorTest . java to use the class name instead of a hardcoded string to improve clarity and
added configuration options for fullNodeHttpEnable , fullNodeHttpEnable , and solidityNodeHttpEnable in multiple Java files to allow control over
added a new ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and updated related methods in ` GoogleCloudFirestoreTicketRegistry
refactor the Generate class to improve code readability to enhance maintainability and facilitate future updates
updated the ScalarFunction annotation to remove nullableParameters and added new test cases for Java and JSON format to ensure correct handling of null values in JSON
updated BadgeRenderer to conditionally calculate width based on a dot - only flag and modified width calculation logic to improve flexibility in width calculation
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow for subclassing
added a test for invalid exclusion of package names in OgnlUtilTest to ensure that a ConfigurationException is thrown when invalid package names are provided
updated device Udid assignment logic based on platform name to ensure compatibility with macOS and improve SDK name handling
updated DefaultHttpClientFilter to replace InvocationType with ProduceProcessorManager and modified exception handling in TestDefaultHttpClientFilter to improve error handling and provide more
refactor context binding and execution logic in AllAppsView . java to improve code readability and maintainability
added a boolean flag ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally set shadow layer based on
added teardown methods for dropping table and view in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database resources after tests
added a line to retrieve the parser from the specified name in SecurityNamespaceHandler to improve code clarity and maintainability by centralizing parser retrieval
reformatted conditional statements in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to improve code
refactor RawConnection to extend WebSocketConnection and introduce complete and flush methods in WebSocketAsyncConnection to enhance WebSocket connection handling and improve frame writing
added multiple test cases for ` all _ assertions _ should _ pass2 ` , ` all _ assertions _ should _ pass3 ` , and
added a new constant ` TEST _ FAILURES _ EXIT _ CODE ` and updated the ` assertExitCode ` method in ` PythonRunTestsStep
added a check for markupEnabled before processing the xAdvances array in GlyphLayout . java to ensure proper rendering behavior when markupEnabled is enabled
refactor score document comparison in TestBooleanRewrites . java to use streams for improved readability and maintainability to enhance code clarity
replace ` getEnclosingClass ( ) ` with ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure the correct class is
add flush ( ) method to player socket connection to avoid memory leak
added a check for ` mStarted ` state and updated listener removal logic in ` Launcher ` and ` LauncherAnimUtils ` to ensure
updated CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added a null check for matchStatus to improve code readability and ensure
change the default return value of the getBoolean method from false to true to ensure the media info parser is valid before proceeding
http : / / code . google . com / p / mybatis / issues / detail ? id = 561 : add support for
added assertions to verify the existence and response of the TRUNCATE TABLE operation in FolderPermissionBase . java to ensure that the TRUNCATE
updated handleProviderRegistered method to include a boolean parameter for handling provider registration state to improve status publishing logic based on the presence status change
updated the color calculation in PastelColor . java to use a dynamic color base to improve the responsiveness of the pastel color
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use original and outline bitmaps to improve code clarity and maintainability by central
refactor HTTP method handling in CloudClient to use HttpMethod . fromString for better readability to improve code clarity and maintainability by reducing
improve multiwordpreprocessor . gettag ( ) to support multiple phrase
updated import statements in IOChannelUtilsTest . java to improve code clarity and maintainability
added conditional logic to retrieve the output format class based on the class name to improve flexibility in handling different output formats
refactor ChunkListener , AfterChunk , BeforeChunk , and BeforeChunk classes to improve code organization and maintainability
added a validation check for the length parameter in DOMBuilder . java to ensure that the length is within valid bounds to prevent potential ArrayIndexOutOfBoundsException
updated the handling of HierarchicalUndirectedGraph in ClusteringCoefficient , EigenvectorCentrality , DiameterUI , and Hits
camel - 15836 - camel - aws2 - * : camel - aws2 - * : improve the verifier to check if a particular
added a new file ` PublicStaticInterfaceMethodHandling . java ` containing interfaces with static and default methods to demonstrate the usage of
camel - 1641 : camel - defaultkeyselector now implement camelcontextaware to resolve property placeholder .
refactor catch blocks in LogResolverBean and ResourceResolverBean for improved clarity and consistency to enhance code readability and maintainability by
refactor multiple security - related classes to improve code organization to enhance maintainability and readability of the codebase
updated JGIT _ VERSION from " 2011060907 - r " to " 201109151100 - r " and modified
updated client key retrieval logic in HttpClientIntroductionAdvice . java to ensure the correct client key is used when the client path is
int - 1188 add namespace parser for transformer ( spring - integration )
replaced ` BACK _ FACTOR ` with ` REWIND _ TIME ` and updated related conditions in ` ResumeObj . java ` to
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` and ` JavaSEPort ` classes and modified
updated usage string formatting and improved command usage handling in UtilityCommands and DocumentationPrinter classes to enhance readability and maintainability of command usage output
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in attribute
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource and updated mergeFiles count in RewriteCrossSpaceCompactionSelector
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
updated the logic for updating the projet ruleset in ProjectPropertiesModelImpl . java to ensure that the project ruleset updates the appropriate state based on preferences
fix thread safety issue in abstractsootfieldref . getfieldunsafe ( )
add support for elastic meter name convention ( # 1748 )
added methods to manage controller listener and job length estimation in IController and updated BackendAPI to use IController instead of AbstractController to improve controller
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to ensure that the rendering functionality works correctly with
replaced ` System . out . println ` with ` TTY . println ` in ` TypeSystemTest . java ` and ` PartialEscape
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated conditional check from ` frameLength = = 0 ` to ` frameLength < = 0 ` to ensure that frameLength is less than or
updated return statements in IntFloatMap and IntIntMap to use a local variable for value and defaultValue to improve code clarity and maintainability
refactor ImageDownloadService to use a serially call for setting icons and styles to improve code readability and maintainability while ensuring icons are
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when registered is null
removed the ` hasNextSibling ( ) ` method from multiple node classes and updated the return logic in ` IeNavigator ` to streamline the
fixed - npe if redisdistributedmapcacheclientservice . results be null
updated logging statements in MobFileCache . java to include cache size , evictPeriods , and evictRemainRatio to improve clarity of
refactor ColConvCCMTest class for improved readability to enhance maintainability and facilitate future updates
refactor variable declarations and method calls in Check . java to improve clarity and maintainability to enhance code readability and maintainability by using
pdfbox - 4892 : add generic type to avoid raw type warning
updated the method to use ` asString ( ) ` instead of ` Float . toString ( ) ` in ` Json . java ` and added a
[ hotfix ] [ runtime ] fix npe in genericfileconsumer
replaced direct call to ` delegate . allInvoked ( ) ` with an ` EventQueue . invokeLater ( Runnable ) ` method to ensure
corrected the variable name from ` getMaxTextMessageSize ` to ` getMaxBinaryMessageSize ` in ` CompressExtension . java ` to ensure
updated the calculation of steeringValue in multiple test classes to correct the behavior of steeringValue in various car classes to ensure correct
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
updated JdbcSerDe to use LocalDateTime and LocalDateTime for date and timestamp conversion to improve date handling accuracy and ensure accurate time representation
updated version from 2 to 3 and modified metadata handling logic in ParseData . java to ensure compatibility with different versions of the application
refactor FlywayAutoConfiguration to use conditional annotations and add custom Flyway with JPA configuration to enhance flexibility in configuration management
added a sorted ( ) method to ClassesImpl . java to improve the ordering of class elements in the application
added a method to retrieve the current stable state in LauncherStateManager and refactored waitForLauncherCondition method in AbstractLauncherUiTest to
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
updated TestCloseScope0 . java to replace Class . forName ( " jdk . internal . misc . ScopedMemoryAccess $ Scope "
increased the test timeout from 500ms to 5000ms in AdaptServerSocket . java to allow for more time for the server to complete
refactor CaptchaChannelProcessorTests for improved clarity to enhance maintainability and readability of the test code
added logic to update the owning collection based on the item ' s owner ' s ID to ensure that the item is updated only when the owner
added retry logic for saving registry cache properties in AbstractRegistry . java to enhance reliability by preventing unnecessary save of cache files after retries
updated the variable name from ` mergeDirectory ` to ` directory ` in ` TrackingDirectoryWrapper ` to improve clarity by using a more
added test case for unusedimports and fix a bug in the ruleTst
added validation for insert overwrite queries on bucket partitioned Iceberg tables to ensure that Iceberg insert operations are performed on bucket partitioned
updated assertions in BootstrapTests to reflect changes in SAML configuration keys to ensure tests accurately reflect the availability of legacy SAML keys in the SAML configuration
update isAnonymousOrLocal method to include isAnonymousOrNonStaticLocal to ensure proper handling of non - static fields in the class
removed synchronization from the getAddressVector method and added a warning for unexpected e - mail addresses to simplify the method signature and improve error handling for unexpected
removed unused lines and blocks in CommentsParser . java to improve code clarity and maintainability
refactor release methods to include IOException handling in multiple classes to improve error handling and provide clearer feedback during lock release operations
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to organize
added a check for unary operators before transformation in SpelExpressionTransformer and modified return logic in LiteralNode , LiteralNode , and OperatorNode to
updated ByteBuddy initialization to use TypeValidation . DISABLED to improve flexibility by allowing dynamic type validation to be disabled
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and created a new ` Errone
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and updated timeout values in MySQL
refactor ` setSystemProperties ` method to remove the ` LogFile ` parameter and streamline its invocation to simplify the method signature and improve
refactor the ` request ` method to include a ` firstConn ` parameter and introduce a redirect check for HTTP redirects to improve handling of
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in MicroserviceFactory . java and modified microservice configuration handling to
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX to be static and modified database deletion logic in BaseAndroidTestCase . java and GeocodeHelperTest . java
updated return statement to retrieve unread count from the current account to ensure accurate retrieval of unread counts for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for virtual thread pool preview
modified the ` getAllOrder ` method to include a ` limit ` parameter and adjusted the handling of price keys in the ` Wallet ` class to
added null check for the user before retrieving user settings to prevent potential NullPointerException when accessing user settings
added a method to retrieve the absolute path of a file in LocalFileSystem and created a test for matching relative wildcard paths in LocalFileSystemTest to
added MAX _ WIDTH and MAX _ HEIGHT constants and modified rectangle creation logic in ComponentBuilders . java to ensure dimensions do not exceed defined limits
added logging functionality to ` CommonsHttpSolrServer ` and deprecated ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer ` to
removed exception handling condition from PrintController . java to streamline error handling for document creation failures
refactor ` Optional . of ` usage in ` CrateType . java ` and add assertions in ` RustBinaryIntegrationTest . java
added a method to check for numbers with separators in SpellChecker . java and created a corresponding test in SpellCheckerTest . java to
updated the MESSAGE constant in HelloWorld . java to ensure consistent formatting to improve code readability and maintainability
added a method to retrieve the OCFileListFragment instance and refactored the way file actions are handled in FileDisplayActivity to improve code
set the replication handler daemon to false and handle exceptions during the logReplicationTimeAndConfFiles method to improve error handling and provide better logging for
reformatted the update method call in StoreCachedTest . java to improve code readability and maintainability
renamed the constructor parameter from ' materials ' to ' theMaterials ' and added a loop to remove MaterialColumnParser from fileColumns to
added " Core Library for LibGDX " and " Controller / Gamepad API " to the DependencyBank . java file to enhance clarity
added maximum recycled views in the RecyclerView ' s recycling pool based on device profile dimensions to improve the responsiveness of
added a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest . java ` to verify the build
improve user feedback when there be no waypoint
added import statements for ParsedNode and ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to facilitate the use of
added null handling for range and equal filtering in FilterOperatorUtils . java and corresponding test cases in NullHandlingEnabledQueriesTest . java to enhance
updated validation logic for bootstrap method arguments in JDynamicInvokeExpr . java to ensure correct handling of bootstrap method signatures and improve error messaging
increase the port number for the jms test to avoid intermittent failure
removed the call to getFormatters ( ) . clear ( ) in CucumberInstrumentation . java to streamline the code by elimin
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and improved type casting in ` Principal
added a condition to adjust workspace labels based on cell size and icon size to ensure that workspace labels are only adjusted when they do not exceed
updated assertions in ReplicationFactorTest to use assertRf for consistency and clarity to enhance readability and maintainability of the test assertions
sulong : allow context initialization during pre - initialization .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java
replace RuntimeException with JsonIOException in Gson . java to improve error handling by using JsonIOException instead of RuntimeException
replace Integer . valueOf with Integer . parseInt in VisualScoreTagTest . java to improve code readability and maintainability
updated error messages and modified file walking logic in Copy . java to improve clarity of error messages and enhance code readability
refactor segment name checks into a separate method ` isHighLevelConsumerSegmentName ` and ` isLowLevelConsumerSegmentName ` to improve
added startActivity and startActivityForResult methods to ShadowFragment and corresponding tests in FragmentTest to ensure proper handling of activity launches and handle
updated date creation logic in DueDateBusinessCalendar to use the current time from the clockReader to ensure accurate date representation based on the current
updated the return statement in TargetCpuType to include " - target " and " x86 _ 64 - none - linux - android " to
added ` deleteAllFiles ( ) ` method to ` FileDataStorageManager ` and implemented file deletion logic in ` ManageAccountsActivity ` to improve
updated command line options in SchemaCrawlerCommandLine . java to use " - h " instead of " - ? " to improve clarity and consistency
added a new method ` createSuiteDescription ` to create a description with a unique ID and updated its usage in the ` Description ` class to
replaced the use of ` MultiFormatReader ` with a direct call to ` decodeBarcode ` in ` SnapshotThread . java ` to
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor and eliminate unnecessary
add unit tests for range pasting in GWCZoomContextFinderTest . java to ensure correct behavior of range pasting in the grid
added a new constant ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and modified dependency tracking logic in ` JRubyScriptEngine
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
do n ' t announce cf and auth keyspace if it already exist
refactor WelcomeWindow to improve image handling and caching to enhance performance and maintainability of the image rendering process
updated tuner configuration handling and added running state checks in multiple classes to improve tuner resubmitment and ensure proper tuner resub
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enhance test coverage for sh
added a condition to set includeString to " db : hsqldb " in TestFilter . java to ensure proper handling of HSQLDB
reformatted code for better readability to improve maintainability and clarity of the code
make trufflestacktrace . materializeedexception only if there be no stack trace .
refactor service loading logic in GraalServices . java and improve error handling in CompilerConfigurationFactory . java to enhance code clarity and ensure
add unit test for duplicate command handler resolution
[ flink - 20865 ] [ doc ] add fine - grained shuffle mode to stream graph
fix fish hook not be able to place the block at the end of the block . close # 4893
( chore ) camel - ftp : correct the spelling error of camel - ftp
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class to improve clarity and consistency
added a check for empty items in AppsContainerRecyclerView to avoid unnecessary processing when no items are available
added a conditional annotation for missing the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration to ensure that the bean is
updated StringBuffer to StringBuilder and added properties property handling in XMLLayout . java to improve performance and maintainability of the XMLLayout class
added support for the " omitHeader " parameter in multiple response writer classes to enhance control over response header management in the application
updated the method to retrieve property numbers from ` _ id ` to ` getPropertyNumber ( ) ` and added unit tests for the ` Escher
updated the return statement to use the method ` getBuildRuleType ( key . getSimpleName ( ) ) ` instead of ` getBuildRuleType ( key
refactor the removal and modification of the scene in the SootClass class to improve code clarity and ensure proper hierarchy management
added null checks for disputes per trade ID and items in TradeDataValidation . java to enhance robustness by preventing potential NullPointerException
added ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified ` retrieveColumns ` method in ` TableRetriever ` to enhance
wallet : set ` ` not _ seed _ in _ chain ' ' to ` ` not _ seed _ in _ chain ' ' ( #
fix httpclientintroductionadvice to use @ header annotation instead of @ body
fix : do n ' t process condition in craftinghelper . processconditions ( )
hbase - 2594 hregion . close ( ) do n ' t swallow exception
simplified null checks for ` s1 ` and ` b2 ` in ` Credential . java ` to improve code readability and ensure
[ java ] do n ' t check if the image be not present in the subscription .
[ hotfix ] [ test ] use process . waitforcibly ( ) in testjvmprocess
added support for Oracle database in TestDefaults . java to ensure compatibility with Oracle database connections
camel - 1566 : camel - mail - allow mail consumer to connect to the mail store if the store be not connect to the mail
added parsing logic to throw a ParseCancellationException if there are more tokens in the stop to ensure that no tokens are consumed in the query
camel - 15836 - camel - aws2 - translate : list all the available language in the enum - aws - translate2 - list
hmmmmmodel . getdatafilename ( ) now return the data file name if the model be duration or f0
added emailDomain field and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to allow configuration of the email domain in the
added configuration constants for read and connect timeouts in Configuration . java and updated ViewRegistry . java to use these constants to improve code readability and
do n ' t process deferred concept if there be no link to save
added Redis category annotations to RedisServiceRegistryTests to enhance test coverage for Redis functionality
updated test annotations and method parameters in ` FindDeprecatedMethodsTest . java ` and ` FindDeprecatedUses . java ` to improve test clarity
updated paintComponent method call in WaterfallPanel . java to ensure proper rendering of components in the layout
removed unused imports from multiple configuration classes to improve code clarity and reduce unnecessary dependencies
updated method names and added event signature handling in ContractEventTriggerCapsule and LogEventWrapper classes to improve clarity and functionality of event signature
updated filter condition in FileTestHelper to use endsWith instead of contains to improve accuracy of file name filtering
replaced ` clearRect ` method with ` fillRect ` and set the background color in ` MapView . java ` to ensure the background
[ drools - 4892 ] fix packagebuilder . compile ( ) to work with jdk 1.6
removed debug print statements from various graph - related classes to clean up the code and improve readability
added a check for NaN score before assertions in TestFieldCacheSort . java to ensure that the test correctly verifies if the score is not NaN
replaced the initialization of oldKeys with a copy of the deviceProfile entity keys to ensure the oldKeys is immutable before accessing its properties
added checks for zero time in ColumnSnapshotGenerator and created a new test for date default values in MySQLIntegrationTest to ensure proper handling of date
renamed ` offererMultiSigPubKey ` and ` offererMultiSigPubKey ` fields to ` offererBtcPubKey ` and `
updated parameter types from ` vsContext ` to ` < ? , ? > ` in multiple classes to enhance type safety and improve code readability
[ drools - 4892 ] fix session configuration cache not be update ( # 4892 )
updated the instantiation of HiveMetaStoreClient to use the current configuration object to ensure compatibility with the latest Hive API changes
added a conditional check to return early if modalness matches mModalness to improve performance by avoiding unnecessary processing when modalness changes
added a test for codec capabilities from a profile level in ShadowMediaCodecListTest . java and implemented native _ getGlobalSettings method in ShadowMedia
fix issue # 5460 ( when enter key use , focus be wrong )
added validation for width and height in SunVolatileImage and enhanced error handling in XRPMBlitLoops and XRPMBlit
updated the thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting
replaced int array with AtomicInteger for thread - safe handling in AsyncStressTest and StressTest to improve thread safety and performance during concurrent
added visibility handling for beta flavour in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback on unavailable beta flav
added access , name , and desc properties to the SearchMethodVisitor class to enhance the functionality of the Search method by utilizing context properties
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java to ensure proper synchronization during insert operations
reformatted code for improved readability to enhance maintainability and clarity of the code
polish ` ` add ` ` stream - config ' ' xml element name for resequencer
refactor transaction management methods in TableReader and TableReaderScoreboardInteractionTest for improved clarity and functionality to enhance transaction management and ensure
flume - 1341 : use ssl . keymanager . algorithm for keymanager / trustmanager / trustmanager / keymanager / thrift
replaced ` JavaIsoVisitor ` with ` TreeVisitor ` and updated the ` getSingleSourceApplicableTest ` method to utilize ` Applic
blockmania : do n ' t exit the blockmania . close ( ) if the key be not TAB .
replaced PACKAGE _ PRIVATE with NONE in AccessSpecifier . java across multiple files to ensure consistency and correctness in accessing access specifications
renamed the method ` unHandled ` to ` unhandled ` and updated related logic in ` Check . java ` , and created a new class
updated how stripes and stripeStats are retrieved in OrcInputFormat . java to ensure correct handling of stripe statistics during orc processing
added null check for exception in JCache . java to prevent potential NullPointerExceptions during execution
update myhentaicomics ripper to use https instead of http
added option to show the current jar version in the App . java file to enhance user experience by allowing users to specify the current jar version
use splittokens ( ) instead of split ( ) - > splittoken ( )
updated ConsoleActivity and TerminalView to use a default string rotation based on keyboard configuration to improve user experience by providing a default rotation setting based on
updated the type of the ` hq ` variable from ` HitQueue ` to ` PriorityQueue < ? extends ScoreDoc > ` to
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 16462 : camel - jolokia - add support for set the headermapfactory class name in camel - jolokia
updated string concatenation syntax in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
int - 1188 - jms outboundgateway now implement initializingbean and provide a parser for the parser .
updated the argument in the expect method from ' i + 1 ' to ' i 2 ' to correct the expected index in ArrayFunctions . java
added null checks and improved error logging for script engine offering in AbstractScriptProcessor and InvokeScriptedProcessor classes to enhance robustness and
added support for org . postgresql . PGStatement in PooledConnectionImpl and added a test for statement proxy functionality in ConnectionPoolTest to
add refresh size estimation to the bean proxy to ensure that the bean can refresh the size estimate .
changed log level from error to warn in AtomicRemainder . java to provide more detailed logging for fragment limit issues
do n ' t sort the candidate ' s minTimestamp in compactioncontroller and add a new test for aggressive fully expired ttl in TTL
fixed - redissonblockingdeque . polllastasync ( ) and redisblockingqueue . polllastasync ( ) method do n ' t
reformatted printMap calls in JobInspectCommand . java for improved readability to enhance code clarity and maintainability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
refactor the return statement in ChildHolder . java to use entrySet ( ) for improved readability to enhance code clarity and maintainability
[ issue # 1188 ] fix test failure in aclclient ( # 1188 )
changed the condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to accurately reflect
replaced printStackTrace ( ) with a warning log and added a null check for interpreterGroup to improve error handling and prevent potential null pointer exceptions
updated the variable name from funN to lt in the ExpressionNodeEvaluator class to improve clarity and consistency in variable naming
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java
server : fix error message when snapshot policy and volume be not attach to a vm before create snapshot
removed the ` public ` access modifier from several methods in ` ItemWriter . java ` to restrict access to these methods for better encapsulation
updated the ThingImpl constructor to include a test case parameter to enhance test coverage for the new Thing implementation
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory for directory creation in TestNorms . java to simplify directory management and improve code readability
added a new static variable ` mLineHeight ` and modified its assignment based on the height of ` mDrawTextRectBuffer ` to ensure
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the codebase
simplified the initialization stream retrieval in OQLEngineImpl . java to improve code readability and maintainability by removing unnecessary parameters
remove the menu item from the transport button group in ChatTransportSelectorBox . java to ensure the menu and button group is properly removed from the
added methods for resolving and replacing tokens in AbstractDataImportHandlerTest , Context , and ContextImpl classes to enhance functionality for handling token replacement in
check for bsqblockchreenode before use protobuf . bsqblockchreenode .
added attribute handling methods in StandardSession and Session classes to manage session attributes more effectively
added assertions to verify the displayed bean name and along in TestDbJson _ List . java to ensure the correct representation of the displayed bean
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to ensure the averages array reflects the
refactor BatchCommandLineLauncher class to improve code readability to enhance maintainability and facilitate future updates
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication to enable database and transaction management in the batch processing framework
updated the GlowrootLogHttpService class to implement HttpService instead of UnauthenticatedHttpService to ensure compatibility with the latest HTTP service implementation
pdfbox - 4892 : set graphics state to non - stroke java composite , a suggest by valerybokov
removed synchronization from the ` notifyAll ( ) ` method and added synchronization to the ` close ( ) ` method in ` DocumentsWriter `
added methods to retrieve properties based on row and column order in UiBinding . java to enhance functionality for managing multiple and validation options in the UI
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency and clarity to improve code readability and
do n ' t save the whole tree if it ' s full save
make dictionary . setcondition ( string , list < pattern > ) configurable .
updated the instantiation of ` krakenMakerFees ` and ` krakenTakerFees ` to use diamond operator
removed unused imports for CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees . java for improved readability to enhance maintainability and clarity of the code
remove unsupported encoding check from VectorizedPrimitiveColumnReader . java to streamline code by eliminating unnecessary checks
updated logging statements in HttpSolrCall . java for improved clarity and consistency to enhance readability and maintainability of the code
added a call to destroyMetadataServiceProxy ( instance ) in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy resources
fix infinite recursion in defaultentityqueryrepository # getmaxlevel ( )
refactor error message construction in HubChangeExecListener . java to include a check for the presence of a changelog ID to improve clarity and
improve error message when try to decode a barcode
updated CxxPreprocessAndCompileStep to return ProcessExecutor . Result instead of int for exit codes and added a new test for compiler error
refactor event handling logic in ObjectStore . java for improved clarity and efficiency to enhance code readability and maintainability by reducing
removed unnecessary checks for @ Validated annotation in ValidatedLocalValidatorFactoryBean . java to streamline the validation logic by eliminating unnecessary
fix possible race condition in worldawareworldprovider
removed unnecessary type checks in IntrinsifyArrayCopyPhase . java to streamline code for better readability and maintainability
do n ' t use logger . gethandlers ( ) [ 0 ] . remove unused import .
updated error message formatting in Reporter . java and removed WantedAnywhereAfterFollowingInteraction . java to improve clarity of stack trace
added validation checks for account and key addresses in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionAddKeyActuator to
scriptlauncher : remove the comparator from the command list in order to keep the order of command
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
replaced ` addProperty ` with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder . java ` to improve code readability and maintainability
updated AsmLoader initialization to use the interface class loader to ensure compatibility with the correct classloader for class loading
pdfbox - 4892 : ignore rlineto and rrcurveto without initial moveTo , a suggest by valerybok
updated print statements in Java2TypeScriptTranslator to conditionally include " declare " based on the " isDefinitionScope " condition to improve cl
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to ensure proper handling of HTTP requests in the server
removed unnecessary ` new String [ ] { } ` array in ` addListener ` calls in ` HelloInput . java ` to simplify the event listener
added a check for null ` getLhs ( ) ` in ` AbstractSqmPath ` to ensure ` getLhs ( ) ` returns a
refactor package structure for multiple test classes to improve code organization and readability
refactor BufferedImage initialization and filter logic in AwtCanvas . java to handle image types more robustly to improve image processing accuracy and ensure correct
add native image location qualifier to libgraal feature .
refactor ParDoTest to replace instances of ` UsesTimersInParDo ` with ` UsesTimersInParDo ` to simplify
updated response handling from ` remove ( ) ` to ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for the classes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log warn if max size configuration for map do not allow any data in the cluster size
updated error messages from " AST " to " LST " across multiple Java files to clarify that LST is used instead of AST
refactor scoring logic in ThreadedAcousticScorer . java for improved clarity and functionality to enhance code readability and
replace AssertionError with returning null in NetHooks . java to improve error handling by returning null instead of throwing an AssertionError
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLenium
added ` makeString ` methods across multiple classes for improved string handling to enhance string collection functionality and ensure thread safety during concurrent access
replaced the use of ` Ordered . HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` Oid
added a ` Predicate < ProposedWeakAssociation > ` parameter to the ` WeakAssociationsAnalyzer ` constructor and related classes to enhance flexibility
refactor Deflater class for improved readability to enhance maintainability and ease of understanding
added error handling for IOException in Font . java to ensure proper resource management by throwing an IOException when exceptions are encountered
added a null and empty check for content in VersionTypeBinding . java to ensure that a default version is returned when no content is provided
refactor places handling in NearbyListFragment to improve clarity and consistency to enhance code readability and maintainability by using more d
changed content type check from " text " to " text " in MailConverters . java to ensure consistent content type handling across different operating systems
ssh : make auth magic public and add format check for ssh dss
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for folder name suggestion and modified related logic to improve flexibility
replaced specific Hibernate annotations with a wildcard import and added logging for third access in JPA to improve code readability and facilit
updated import statements in ConnectOAuth2RequestFactory . java and added user approval request handling in TofuUserApprovalHandler . java to improve
fix # 645 name convention not apply to tag value ( # 645 )
do n ' t print a warning if there be no resolution for a marker
updated the cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the new cookie key used in the
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in ` Subject ` and ` Platform `
added functionality to toggle the visibility and dismissal of the clear all action in OverviewActionsView and RecentsView to enhance user experience
added " repository _ version " to ` desiredRepoVersion ` and modified timeout values in ` ClusterStackVersionResourceProvider ` and ` HostStack
deleted the MemoryLeakTest . java file to the test is no longer needed for the current implementation
updated the return statement in ServletTester . java to include the local host address to ensure the HTTP URL is formatted correctly based on the local
added a condition to check for MvDWPlaceholderAPI in the ServerListener to ensure that MVDWPlaceholderAPI is only used when
added assertclustersizeeventually ( ) to abstractpartitionassignmentcorrectstest # testpartitionassignmentcorrectness
refactor FFIProvider to utilize a singleton holder for FFI provider initialization to improve flexibility and maintainability of FFI provider initialization
tika - 1188 -- add a test for hierarchical w file list in batchprocesstest .
added null checks for ` mongoPersistentEntity ` and ` persistentEntity ` in ` MongoTemplate ` , and created corresponding test cases in ` Mongo
updated Position initialization to use NODE _ LIST instead of NOT _ ITERABLE to ensure correct node list handling for direct input and successor count
added a new field ` accTradeValue ` and its getter method in ` BithumbTicker ` , updated ` BithumbMarket
updated logging statements to include segmentName in RealtimeSegmentDataManager . java and AvroUtils . java to improve logging clarity and maintain consistency
replaced hardcoded maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMVMutableForwardIndex and FixedByteSVMutableForward
refactor multiple dictionary implementation classes to improve code organization to enhance maintainability and readability of the dictionary implementation
added null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
( chore ) camel - sv : fix flaky test
updated conditional check from ` = = ` to ` > ` in ` DelegationService . java ` to ensure correct boundary checking for the current
updated RandomValueStringGenerator from 6 to 10 and modified assertions in JdbcExpiringCodeStore , CodeStoreEndpointsTests , and Autologin
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching logic for UniqueConstraint instances
updated the handling of language codes and modified the description processing logic in MediaDetailFragment . java to improve language code handling and ensure accurate processing of
added catch block for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error handling for ArrayIndexOutOfBoundsException and ClassCastException
added support for reference filter in ListImagesCmd and related classes to enhance functionality to support reference filtering in the list images command
camel - 14284 : camel - jms - do n ' t support bridgeerrorhandler on jms endpoint . thanks to david
added a check for specific conditions in the OpExclusionUtils class to handle cases where no ops are found for exclusion to ensure proper handling of
added return statements to DatabaseCommand . java to ensure proper handling of database operations
replaced instances of ` blair ` , ` bush ` , and ` schroder ` with constants ` p1 ` , `
[ zeppelin - 4892 ] use string . isblank instead of null check for initfile
camel - 14263 : camel - restlet - make it easy to configure the restlet port .
removed unused imports and removed the case for WALL _ SIGN in SchematicFormat . java to streamline the code by eliminating
added a system property for the Hive query maximum length in QTestUtil . java and modified session state handling in SessionState . java to ensure
refactor WebServer and WebServer classes to use baseHttpConfig and set sendServerVersion to false to improve code clarity and ensure proper
corrected the spelling of " hdfsSink " and " s3Source " to " hdfsSink " and " kafkaSource " across multiple
updated the logic for determining the Spark app name in HiveConf and HiveSparkClientFactory to ensure the application name is correctly set based on
corrected a typo in the variable name from ' whiteName ' to ' includedName ' in ManagedClassFactory . java to improve code
danielwagnerhall : add support for maximize window in driverservlet
refactor ` AbstractEmbeddedCellBuckOutInfo ` to use ` getMainCellRoot ( ) ` instead of ` getEmbeddedCellsBuck
added an assertion to check if the exception message contains " entity expansions " in the TestXMLEntityExpansion class to ensure that
modify table offset and length assignments to mask 0x7FFFFFFF to ensure that the table ' s offset and length are not equal to 0
added a null check for the form ' s customized state in DirectMethodHandle . java to ensure that the form ' s customized state is correctly
refactor coordinate handling in LineChartRenderer to use a variable for better readability to improve code clarity and maintainability by using a more
refactor flavor validation logic in AndroidBinaryDescription . java for improved clarity and error handling to enhance code readability and maintainability by
updated buffer index from offset to i in LwjglGL11 . java to correct the buffer assignment logic
added new files Property . java and PropertySuper . java , and created TestClassResolutionFail . java with tests for Property and TestClassResolution
do n ' t terminate the shutdown hook if the shutdown flag be set to true
updated the bean ID from " myfilterChainProxy " to " FilterChjainProxy " and removed the URL parameter from the VirtualFilter
[ hotfix ] fix arrayindexoutofboundsexception in percentileaggregationfunction
added loading logic for the schema in MetaDataBasedSQLCompletionProvider and modified MDTable assignment in QueryTypeAnalyser to ensure proper handling of
set baseType to null in DatabaseInfoRetriever and initialize literalsPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to ensure default values are
updated link formatting in multiple Java files to improve code readability and maintainability
replaced singleton instances of ObjectEqualEvaluator , ObjectNotEqualEvaluator , and BooleanNotEqualEvaluator with a singleton pattern to improve performance and ensure
updated references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " across multiple test files to ensure
added sound effect handling methods in AllAppsView . java to enable or disable sound effects for better user experience
updated the main method signature to throw IOException instead of Exception to improve error handling by providing more specific exception types
added a method to enable the granularity of the left axis in BarChartActivitySinus to improve chart rendering performance for better user experience
refactor version comparison logic in GdxSetup . java to use a dedicated method for clarity to improve code readability and maintainability by
updated ContextHandlerGetResourceTest to use MavenTestingUtils for directory checks and added OS - specific assumptions to enhance test reliability and ensure
added a close ( ) method to multiple connection classes to ensure proper resource management and prevent potential memory leaks
refactor SocketRemoteTest , MockAppender , SocketServerFunctionalTest , and SocketServerFunctionalTest to use LinkedBlockingQueue for event
[ beam - 4142 ] improve error message when resource be not a directory ( # 4142 )
removed multiple redundant import statements from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability
removed duplicate call to handleService . unbindHandle ( context , item ) in ItemServiceImpl . java to streamline the code by elimin
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
refactor NavbarButtonsViewController to use UI _ MODE _ NIGHT _ YES for dark theme handling to improve UI consistency and
pdfbox - 4892 : throw an exception instead of throw an exception
refactor variable assignments for bootstrapMethodIndex , nameAndTypeIndex , and memberIndex to use byte instead of short to improve code clarity
modified the ` findBox ` and ` findElementBox ` methods to include a ` BlockFormattingContext ` parameter to enhance rendering flexibility by
added error output handling and improved error logging in WorkerProcess and WorkerShellStep classes to enhance error reporting and provide clearer feedback during execution
added null checks for the operator in CheckedListReplaceAll . java and improved error handling in Collections . checkedList to enhance robustness by
added a write callback in SslConnectionTest and modified fillInterested logic in SslConnectionTest . java to enhance connection handling and improve test coverage
added a listener for device configuration changes in DeviceFlag . java and changed visibility of mListeners in FeatureFlags . java from private to protected to
added JUnit Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue 2.2 . 0 gh - 111
removed import of MalformedURIException from StandardRequestHandler . java to clean up the code and improve readability
[ # 2321 ] instructorfeedbackeditpage do n ' t focus the current page ( # 2321 )
removed unnecessary synchronized block around the subscription logic in KrakenStreamingTradeService . java to improve performance by reducing unnecessary synchronization overhead
changed System . err to System . out for ignoring Class - Path entries to standardize output formatting for better readability and maintainability
added a ` randomAccessRows ` boolean parameter to ` SparseRowMatrix ` constructor and modified related methods to utilize it to enhance flexibility
server : fix npe in delete volume usage event when volume poolid be null
updated file input stream handling to differentiate between local and local job configurations to ensure correct path resolution for the Hive plan job
[ beam - 8270 ] fix test failure in dfstestprovider
reset internal state in soshutdown ( ) to free memory
added null check for the operation set in the ConferenceChatManager class to prevent potential NullPointerExceptions when accessing the operation set
added file write check and error handling in Save . java to ensure that the file is not written to prevent illegal user actions when writing fails
added a new FolderSyncActivity for managing folder synchronization in the DrawerActivity to enhance user experience by providing quick access to folder synchronization functionality
[ hotfix ] [ test ] use close closer in sequentialchannelstatereaderimpltest
spanishtreenormalizer : fix spanishtreenormalizer to use % instead of %
replaced the reader method with heapPointWriter ' s getPackedValueSlice method in SimpleTextBKDWriter . java to simplify the
added LocaleRandomizer and its corresponding test class to facilitate locale - specific randomization in the randombeans generator
added tests for the " application / x - font - printer - metric " and " application / x - font - type1 " MIME types
[ netbeans - 4892 ] upgrade 8.0 to 8.9 . 0 and 8.0 . 1 ( # 4
reformatted code for improved readability in TCPTransport . java to enhance maintainability and readability of the code
updated the timeout value for the socket read method in Http2AsyncParser . java to ensure the read timeout is set to zero when a block
updated the maximum batch delay from 120 to 600 in TimelineMetricConfiguration . java to increase the maximum batch delay from 120 to 600 for better
updated the error message formatting for the PRIMARY KEY column in SelectStatement . java to improve clarity of the error message for better debugging
added date formatting support in ThirdEyeJiraClient to enhance date handling capabilities in the application
refactor ` generatePriority ` and ` generatePriorityBody ` methods to use a new ` PriorityGenerator ` instance to improve code clarity and
added a maximum scalar replacement code size constant and updated the scalarReplace condition to improve performance by reducing the number of scalar replacement code
added DATE _ TAKEN to projectionTest and sortingSortOrder in MediaProvider . java to ensure compatibility with date - taken media data
updated image drawing calculations in TexturePacker2 . java to correctly account for width and height parameters to ensure the image dimensions are within the correct
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to utilize ServletContextHandler to improve servlet context handling and ensure proper filter initialization
added shutdown calls for validateSignService , transactionsMsgHandler , and trxHandlePool in Manager and TransactionsMsgHandler classes to ensure proper resource
added RawJsonRequestBody annotation to JaxrsSwaggerGeneratorContext and implemented it in Echo and JaxrsSwaggerGeneratorContext to enable processing of
added a new method ` newTarget ( int targetType , TargetExtension ) ` to the LoggerUtils class to facilitate the creation of
updated the instantiation of ListBeanContainer to use a new ArrayList and added a new test class for the BeanContainer functionality to enhance type safety and
updated the metric name from " blockCountHitPercent " to " blockCacheCountHitPercent " to clarify the purpose of the metric
camel - 1774 : fixed resource leak in cachedoutputstreamcache .
add deviceid to teltonika position decoder ( fix # 489 )
updated the method of reading the first line from ` Files . readFirstLine ` to ` Files . asCharSource ` to ensure compatibility with
added a null check and initialization for the operator in JCAssignOp and created a new test class for testing to ensure proper handling of null operator
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified the onCreate method call in ` FirstRunActivity ` to
refactor code to use heuristically findmainconnectedcomponent for polygon detection to improve code readability and maintainability by reducing duplication
added a path parameter to the DrillViewTable constructor and updated related method calls to include it to enhance the functionality of the DrillView
added new configuration options for PooledByteBufAllocator in PooledByteBufAllocatorL . java to enable dynamic allocation settings for better performance and
changed array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java for serialization testing to ensure correct handling
added a new configuration variable for the low - level IO thread pool size in HiveConf . java and updated the executor initialization in LlapIo
add jdk11 support for sun . security . ssl . debug and sun . security . ssllogger .
added bounds checking for latitudeRange and longitude range in LatLonGrid . java and updated test cases in TestLatLonGrid . java to improve
simonstewart : add ` ` invisibilityofelementwithtext ' ' and ` ` refreshed ' ' method to expectcondition
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated related logic to support insert overwrite functionality in file operations
added a test for the ` getOuterClass ` method in ` ReflectorTest ` to verify the functionality of the ` getOuterClass `
updated configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources " in
refactor error messages in HubChangeExecListener for clarity and consistency to improve readability and maintainability of the code
added properties field and its getter / setter methods to the Link class , and created a test for resolving properties in QuickLinksConfigurationModuleTest to
removed @ EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO , and added a toString method in YamlConfigFileDTO to streamline object creation
updated generic type parameters in AwaitableServerClientCallConfiguration . java for improved type safety to enhance code clarity and maintainability by
added @ CallerSensitiveAdapter annotations and modified forName methods to include callerClassLoader and isAdapter parameters to enhance class loading flexibility and ensure proper caller
updated import statements and method calls in RequestItemRepositoryIT . java to use Hamcrest . text . IsEmptyString instead of Matchers
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve code clarity and maintainability by
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
replaced ` HumanTime ` and ` HumanTimeConverter ` with ` Chronic ` in ` TimeStepdefs . java ` to
remove spark _ isolated , spark _ recessive , and spark _ recessive from the banners list
updated proxy creation to use ` getUri ( ) ` instead of ` ExchangeSpecification ` in multiple service classes to ensure proper URI handling and improve proxy
removed multiple debug print statements from RecordGenerator . java to clean up the code and improve readability
camel - 14284 : camel - kafka - do n ' t commit sync when auto - commit be enable
removed lock release mechanism and updated outputStatement method calls in LoggingExecutor and StandardLockService to streamline lock management and ensure proper statement outputing
updated @ SuppressWarnings annotations to include " rawtypes " in AbstractAuthorizeTag . java and added deprecation warnings in AuthorizeTagCustomGrantedAuthorityTests .
added synchronized keyword to several methods in Database and SessionRemote classes to ensure thread safety when accessing shared resources
refactor springbootautoconfigurationmojo to resolve nested property from classpath instead of project
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure
camel - 14263 : fix the build error of camel - core
use system . getproperty ( ` ` testid ' ' ) instead of uuid . randomuuid ( ) . toString ( )
added synchronization to date and number formatting methods in DefaultJobParametersConverter . java to ensure thread safety during date and number formatting operations
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
change height scale from 256 to heightScale in FractalHeightMapGrid . java to improve the responsiveness of the height map by
updated equality check in SecurityConfig to use ` equals ` instead of ` equals ` to ensure correct comparison of string attributes in security configuration
change default value of dumpPartitionId from " dump - partition - id " to false to ensure that the default value is set to false for
added mocking and verification for UTXO data retrieval in UTXOSetTest . java to enhance test reliability by verifying transaction
[ java ] unusedassignment and unusedlocalvariablestatemplate should not ignore unused variable .
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated job restart properties handling in JsrJobOperator and added a new test for new job parameters override in JsrJobOperatorTests to ensure
added a new boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the `
refactored principal assignment logic in JaasAuthenticationHandler . java to streamline principal retrieval logic to improve code readability and maintainability by
replaced direct core closing with an executor service for improved thread management to ensure proper resource management and prevent potential memory leaks during core closure
added null check and visibility logic for mActionsView in RecentsView . java to ensure actionsView is visible when fullscreenProgress is
refactor parameter handling in RunIdIncrementer . java for clarity to improve code readability and maintainability
refactor BasicEntity and TestUtil classes to improve code organization to enhance maintainability and readability of the codebase
added assertions to validate the results of ` getMatchedDevices ` method in ` SchemaRegionBasicTest . java ` to ensure the correctness of
[ 3.0 ] invoke metricseventbus before / after ( ) and after ( ) with error type aware logger .
added a null check for ` max ` before calculating the sum change in ` EigenvectorCentrality ` and created a new `
updated registry port handling and improved string formatting in multiple Java files to enhance code readability and maintainability by using a more descriptive variable
updated geometry generator to include device ID and type information in the geometry data to ensure compatibility with the database session and improve geometry data handling
fix blockentitybeacon . setamplifier ( 0 ) to set Amplifier ( 1 )
refactor TubeCalc class for improved readability to enhance maintainability and clarity of the code
disable health check by default ( # 1748 )
validator : add check for non - null and non - abstract class in defaultvalidator
added a new @ key headful annotation and a timeout for the JList drawn with wrong colors in Nimbus L and F to improve
refactor the initialization of ` scheduler ` and ` infoComponent ` to use a lambda expression for thread creation to improve code readability and ensure
remove whitespace from version check in itemlexicon . java
added reflection access check in JavaAdapterFactory to ensure proper access control for the type
camel - 9123 fixed the test error of camel - mina
updated initIOContext method to include a RecordReader parameter and modified HiveInputFormat and HiveInputFormat to utilize it to enhance context initialization
deleted classes ClassLoaderHolder . java and LoaderManager . java , and simplified VerticleManager . java to streamline the codebase by eliminating
added a new method ` configurationChanged ` in ` FileStore ` and modified file existence checks in ` JavaLanguageServer ` , ` ScanClassPath
added try - catch blocks around session callback registration and unregistration in PackageInstallerCompatVL . java to improve error handling by catching potential
removed the " src / test / org / apache / lucene / index / index . cfs " and " 23 . nocfs "
updated the ` createAndStart ` method to accept a ` BiFunction < ActorSystem , AkkaRpcServiceConfiguration , AkkaRpc
added a retry setting for map reduce maximum attempts in TestExportSnapshot . java to ensure proper configuration for map reduce attempts during export
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a new test class ` SslConnectionTest ` for verifying SSL connection behavior to ensure proper SSL connection initialization and handling in the application
added validation for IPv4 and IPv6 address types in InetAddress . java and NetworkInterface . java to ensure address types differ from IPv4 and IPv
added a test method to serialize a list of dates in a collection using Gson to ensure proper serialization and deserialization of date objects in the application
refactor Message class to improve code structure to enhance maintainability and readability of the code
added debug logging for SQL generation and modified the condition for determining the first update key to improve debugging and ensure proper handling of the first update key
adjusted loop condition in TableOutput . java to correctly calculate the maximum width based on the running width
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the priority of the VA _ FORMAT _ STRING _ EXTRA _ ARGUMENTS _ PASSED bug in FormatStringChecker . java to
[ java ] add property to ignore non - final loop variable in a for - each statement
updated PDFExporter and PDFExporterTest to use Java . gexf instead of Les Miserables . gexf and modified sample
added unit tests for the LdapUserDetailsMapper class to ensure correct behavior of role attribute mapping in LdapUserDetailsMapper
fix ( core ) : add ldap read timeout to the environment
refactor multiple TestDescription classes to improve code organization to enhance maintainability and readability of the test code
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple hash map classes to improve clarity and consistency in method naming
added a condition to check if the handler state is invalidated in the gesture state check to ensure that the gesture handler is not invalidated before proceeding
updated the dimensions of mMaxDistanceForFolderCreation and mOldScrollPageIndex from 0.6 f to 0.55 f and adjusted
updated OciConfigConfigSource to use ConfigProviderResolver for property name checks and improved assertions to enhance configuration handling and ensure proper assertions are
refactor Testjsig class for improved readability to enhance maintainability and facilitate future development
fix mana stack not respect the stack size in the mana stack .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the serialVersionUID field and added a suppression warning in P11TlsPrfGenerator . java to eliminate unnecessary serialization and suppress warnings related to
refactor tsFile validation logic to improve clarity and maintainability to enhance code readability and ensure proper handling of empty tsFile resources
added two new files , Switch21 . java and Switch19 . java , for pattern matching and null handling in switch statements to facilit
updated error messages in ComparableSubjectTest for clarity to improve readability and maintainability of the test code
added XML standalone flag functionality and created a new test class for XML handling to enhance XML processing capabilities and ensure proper functionality through testing
updated capacity check and improved error message formatting in Int2ObjectCache . java to enhance code clarity and ensure proper array size validation
removed sorting of security filter chains in WebSecurityConfiguration and added a test for sorting security filter chains in WebSecurityConfigurationTests to ensure correct ordering
removed the TimeInForce . GTC parameter from the market order type in BinanceTradeService . java to simplify the order type initialization and
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update related methods to improve randomness and enforce minimum and maximum values
updated KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper
camel - 14263 : camel - jms - add documentation and parameter json schema to camelcontext
added error handling for NoSuchFieldError in SourceUtils . java and created unit tests in SourceUtilsTest . java to improve robustness of the
refactor parquet type handling in LeafFilterFactory to use a dedicated method to improve code readability and maintainability by encapsulating filter predicate
added a condition to check if the original artifact name starts with SCOPED _ TARGET _ BEAN _ PREFIX before processing to ensure that the original
added logging for certificate reading in HttpsSegmentFetcher . java to improve visibility into certificate entries for better debugging
modified the return type of " libdefaults " and " dns _ fallback " from boolean to String and added a new DnsFallback class for testing
ww - 4896 add more information to exception in defaulttheme . java
updated the ` success ` field to ` url ` and added a new field ` coin ` in the ` DepositAddress ` class to
refactor the ` drop ` method in ` WindowsSecurity ` to use a lambda expression and ensure ` LocalFree ( pLuid ) `
removed " address " and " phone " from scope settings in CommonOAuth2Provider . java and its corresponding test in CommonOAuth2ProviderTests
refactor the submit method in ManagedSelector to use a separate Start class to improve code readability and maintainability by encapsulating the start logic
[ wled ] fix ( wled ) : do not send color rgb when segmentindex = - 1
replaced the method ` isValidCaller ` with a set of ` VALID _ CALLERS ` to improve code readability and maintainability by using
added a new method ` caseJSRInst ( JSRInst i ) ` to the ` InstSwitch ` class to enable handling of JS
add a transactionmanager to the subscriptionactivatingsubscriber so that the subscription activating subscriber can be activate
added SQL update statements and prepared statement handling in DBMSProcessor . java to enhance data management and improve error logging for database operations
added elevation handling for contact view in Lollipop and above to ensure compatibility with devices running Lollipop and above
rename ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
replaced direct calls to ` Files . readAllBytes ` and ` Files . write ` with ` AccessController . doPrivileged ( ) ` in ` S
added support for the ` [ " ] ` operator in the G . Binary operator in the Groovy parser and printer to enhance functionality for handling binary
updated warning message to include the class name in the exception to improve clarity of warning messages for better debugging
fix for bug # 1187 - unicodestring . read ( ) do n ' t handle uncompressed character correctly .
added a test for downloading a file with Norway characters in the name to ensure that the download functionality correctly handles Norway characters in
replaced ` RuntimeException ` with ` CancellationException ` in ` AsyncResource ` and added cancellation checks in ` FingerprintScannerSample ` to improve
added a null check for statistics before processing the cache count to avoid potential NullPointerException when statistics is null
added a test for removing an object from an explicit collection in MongoTemplateTests . java to ensure that the remove method correctly handles an explicit collection
updated copyright year from 2015 to 2022 in multiple Java files to reflect the correct copyright year for better clarity
( chore ) camel - coder : use % n instead of \ n
added mIsClearAllButtonFullyRevealed flag and refactored scroll handling in RecentsView and PagedView classes to
added COMMON _ HMS _ PROPERTIES map and updated parameter handling in HiveIcebergMetaHook , HiveIcebergSerDe ,
refactor address handling by introducing a new method ` isAddressInUse ` to improve code readability and maintainability by reducing duplication
added a new argument list for the test class path in TestNestmateAttr . java to enable dynamic configuration of the test class path
replaced the verbose logging constant with a verbose schema constant to improve code readability and maintainability by using a more descriptive variable name
fix checkstyle issue in java . util . lifecyclebase
# 827 - enh : add support for nested sub - transactions ( # 827 )
replaced int fetchSize with ThreadLocal fetchSize in QueryProcessExecutor and updated related methods to improve thread safety and ensure fetchSize is properly
[ hotfix ] [ test ] remove backoffidlestrategy from embedpingpongypong
refactor code to use a Supplier for blocking calls in HttpClientIntroductionAdvice . java to improve code readability and maintainability
added support for HDP version configuration in SliderAppsViewControllerImpl . java to enable dynamic configuration of the HDP version in the Sl
refactor JavacProcessingEnvironment to use reflection for loaderClass and loader , and add close methods to ensure proper resource management and prevent potential
added DeepCloner class and modified ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize it for deep object
added binding for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to disable stack trace functionality in the web server
added a check for OBJECT type in NativeObject . java to ensure proper handling of OBJECT types in object processing
replaced multiple instances of ` OopField ` with ` OopField ` and added a method to find well known klasses to improve
updated JwkKeyListView to use PublicKey instead of RSAPublicKey and added Base64 encoding for RSAPublicKey and ECPublicKey to
[ gr - 25946 ] fix nativeimageheap . getspawnisolates ( ) return false when spawnisolates be
updated MBeanServerMXBeanUnsupportedTest . java to improve test coverage for MBeanServerMXBeanUnsupported functionality
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve readability
replaced instances of ` Validator ( ) ` with ` Validator ( ) ` and added ` getOwnerAddress ( ) ` methods across multiple classes to
http : / / issues . apache . org / jira / browse / amq - 4894 - add a main class to d
updated BinaryClient to include minimum and maximum byte values for ZCOUNT and ZRANGEBYSCORE commands to ensure compatibility with both Double . MIN _
[ corenlp ] fix npe when empty index be set
[ java ] remove the correlationid from the async command when the client be remove .
added saveConflict calls to FileDataStorageManager , FileDownloader , and FileUploader classes to ensure conflicts are only saved when the file is
updated type parameters in ` ExecutionContext ` , ` AbstractMethodInvokingDelegator ` , ` AbstractTransactionalResourceItemWriter ` , and
replaced instances of ` StrUtils . splitFileNames ( ) ` with ` splitFileNames ( ) ` across multiple filter factory classes to
added support for " remarksReporting " and " useInformationSchema " drivers in DatabaseFactory . java to ensure compatibility with both Oracle and MySQL
updated the constructor in SignedSupportingClassProxyFactory to accept a handler parameter and added a serialVersionUID field to ensure compatibility with the proxy ' s
updated time tracking and logging mechanisms in FileChangedExclusiveReadLockStrategy . java to improve clarity and accuracy of time tracking during file change
refactor ExecutionContext and LocalExecutor to use generics for better type safety to enhance code readability and maintainability by using a more descriptive
added buffer change handling in TerminalView and adjusted buffer dimensions in TerminalTextViewOverlay to improve user interaction responsiveness during buffer changes
updated processConfigFile method to improve code readability and ensure pid is correctly set to " . " if it does not already contain " . "
refactor frozen action handling to differentiate between v2 and static calls to improve code clarity and ensure proper stack pushing behavior based on
added an insecure configuration option to TlsConfig and updated TlsUtils to utilize it to enable secure connections based on configuration settings
refactor package search logic in JavadocTool . java and add a new class T7091528 . java for testing to improve code read
replaced ` nodeColumns ` with ` edgeColumns ` and refactored the ID comparison logic in ` ExporterGDF . java `
added cascade attribute to OneToOne annotation in DefaultUserInfo . java to enhance data integrity by preventing unnecessary cascade operations
refactor hashCode and equals methods in Message class to use Arrays . equals instead of direct object comparison to improve code readability and maintainability by
updated the X - ISO header from " ? ? " to " \ u017D \ u017D \ u017D
added a method ` isKeySerializerTypeVariableSized ( ) ` to the ` RocksDBSerializedCompositeKeyBuilder ` class to provide
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified ` subjectPd ` assignment logic in ` SubjectDomainCombiner
added null checks for recipe in RecipeHandlerBrewery , RecipeHandlerElvenTrade , and RecipeHandlerFloatingFlowers
refactor index assignment and read logic in Parser . java to improve readability and maintainability of the code
added error alert dialog functionality in UploadMediaDetailFragment and modified error message handling in UploadMediaPresenter to improve user experience by providing clearer error
added a new test class ` Issue596 ` and modified ` Status ` and ` HttpHandlerImpl ` to check if the content type is
change bit masking from 1 to 1L in NodeBitMap . java to ensure correct bit manipulation for improved performance
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
refactor ConsoleUIService to use standard input handling instead of git bash configuration to improve flexibility and control over stdin mode in the console
refactor ShadowAccountManagerTest to use TestAccountManagerCallback instead of Mockito for mocking AccountManagerCallback to improve test reliability and
replaced the declaration of enclosingType with a direct call to wrapped . getEnclosingType ( ) to simplify the code by eliminating unnecessary
refactor methods in Pairs , InPairsExpression , TestCacheViaComplexNaturalKey3 , and TestCacheViaComplexNaturalKey
removed the timeout parameter from the set method in PutAllCallable . java to simplify the code by eliminating unnecessary timeout settings
[ issue # 5891 ] fix npe when consumer be empty or not ( # 5892 )
[ java ] generate source identity when create a channel from the driver .
added a new file ` TopTabAction . java ` that implements the ` Toolbar ` interface in the desktop branding package to provide a
camel - 14284 : camel - dynamic - router should use reactiveexecutor to make it easy to send to the dynamic router .
replaced TestCase inheritance with JUnit 5 annotations in AggregateItemReaderTests . java to ensure compatibility with JUnit 5 features and improve test
added generic type parameter ` < T > ` to the ` Procedure ` constructor in ` AbstractObjectValueTypeMap . java ` to enhance type safety
updated imports and added functionality to retrieve Wikidata edits in AchievementsActivity , AchievementsActivity , and OkHttp
added validation to ensure length does not exceed Short . MAX _ VALUE to prevent illegal argument exceptions
added a private final BugAccumulator ` absoluteValueAccumulator ` and updated related logic in ` DumbMethods . java ` to improve handling of negative
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
enhanced error message in ` ProvisionClusterRequest ` to include acceptable credential types to improve debugging by providing more context on invalid credential types
updated random number generation in TestVectorUtil . java to accommodate a minimum value of 1 to improve randomness and allow for more flex
change the return type of the ` compareBy ` method from ` int ` to ` long ` and simplify the comparison logic to improve performance and
added SSL property handling in TestUtil . java and updated PGPropertyTest . java to set SSL property to true to enhance security by allowing SSL
danielwagnerhall : add ` ` safebrowsing . enabled ' ' to chrome preference , and add test for
added null checks before modifying flight configuration in BaseMotorMount . java and RecoveryDevice . java to prevent potential NullPointerException when oldConfig is null
added a condition to check if transcoding is disabled in the renderer configuration to ensure proper rendering behavior when transcoding is disabled
updated DataTable and TableDiffer classes to handle empty lists and return an empty list instead of an empty list to improve robustness by preventing
added a new constant ` CustomIgnoreTag ` and conditional logic to remove the ` iter ` from the ` section ` if it starts with `
camel - 16462 : fix jdbcoptimisticlockingaggregationrepository to throw optimisticlockedexception
add @ configurationproperties ( ` ` parent ' ' ) for @ configurationproperties ( ` ` nationality ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added toolbar padding handling to improve layout responsiveness and visual consistency
deleted the ClusterNodeInfo . java file to the functionality was deemed unnecessary or redundant
corrected the formatting of the return statement in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for " Standard ciphersuite chosen " and " Legacy ciphersuite chosen " in ServerHandshaker . java to improve visibility of
modify ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle template selection based on the size of ` templateList
added a ` nodeLabelMap ` to store duplicate node IDs and improved error handling in ` ImportContainerImpl ` and ` ImportContainerParameters
added a new file R2303044ListSelection . java to implement a list selection test using SunToolkit to test the selection of
[ java ] throw controlprotocolexception if a client be already in use .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the ` StepSynchronizationManager
replaced the use of ` Lists . newArrayList ( ) ` with a ` List < Long > rowCounts ` for calculating the new row count
added path URL formatting and filter parameters in SpringBootDocBuildTemplate . java and updated usage in DocUtil . java to improve path handling and
remove use of hashtable . get ( ) and remove unnecessary hashtable .
changed the type of ` cachingBuildCachingEngineDelegate ` from ` DistBuildCachingEngineDelegate ` to ` CachingBuildEngineDelegate ` to
updated the RuntimeException message to include additional error details to improve debugging by providing clearer context about the parsing failure
added a conditional check for DEBUG mode before logging the log message to avoid unnecessary logging when DEBUG is enabled
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the code
updated the calculation of numTerms in SimilarityBase . java and added a new test for discountOverlapsBoost in TestSimilarityBase .
added verification logic for sending messages in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests based on the " send " method in Mime
added exit and quit methods to Global . java and removed it from ScriptingFunctions . java to streamline exit and quit functionality by elimin
refactor the initialization of the Spring Application context in LoanBrokerSharkDetectorDemo . java to improve code readability and maintainability by
renamed methods ` getFirstUnverified ` and ` getLastUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and
avoid npe in vmwarecontext . getservicet cooky ( ) if there be no cookie in the vmware web service
updated assertions in ResinAcegiAuthenticatorTests . java to ensure consistency and correctness of authority retrieval in tests
added 32 - bit parameters to ByteUtil . bigIntegerToBytes method calls to ensure compatibility with larger input values
updated the property key from " fml . disabledMods " to " fml . modStates " in Loader . java to reflect the
refactor account selection logic into a dedicated method ` showAccountChooserDialog ` to improve code readability and maintainability by encapsulating account selection
enhanced exception message in CollectSink to include host ip and port to improve debugging by providing more context during connection failures
added error handling for unexpected empty simulation results in ValidatorContractController to improve robustness by throwing an exception when an empty result is provided
added a null check for the root JSON file before reading fields in TexturePackerFileProcessor . java to prevent potential NullPointerException when the root file
removed null check for datasource in PooledConnection . java to streamline code by eliminating unnecessary checks
updated target MB and WINDOW values from 10 _ 000 to 1 _ 000 and modified buffer size calculations in TestRefprocSanity . java
added null checks for ` currentConsole ` and ` systemErr ` before writing to avoid potential ` IOException ` when ` currentConsole ` is not
set the credential refresh delay to 100 milliseconds in KinesisConfigUtil . java to improve user experience by allowing more time for credential refresh
refactor AlertDialog creation into a separate method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
added a ` - package ` argument to the ` test ` method in ` T4501661 . java ` to support package - specific
update Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUse
added a check for dependency presence before adding to resolve dependencies in PluginBundleManager . java to ensure that dependencies are only added if they are not
added a HashSet to manage the collection of ZipFileInputStream instances and updated the releaseInflater method to ensure proper resource management and prevent memory leaks
rename BarcodeFormat . DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in naming conventions
added methods ` runActive ` and ` runIdle ` to manage thread interruptions in ` SequenceGeneratorSource ` to ensure proper handling of
updated method name from ` getCurrentyActiveConnections ` to ` getCurrentActiveConnections ` in ` BlobServer . java ` and ` BlobServerGet
replaced ` findAny ( ) ` with ` findFirst ( ) ` and ` findFirst ( ) ` in ` AnnotatedDelegate ` and ` Syn
added support for " ppc64le " architecture in multiple Java files to support additional architecture requirements
updated the exception message in RoboMonitoringInstrumentation . java to include a link to a documentation to clarify the context of the activity
updated timeout values from COMMIT _ TIMEOUT _ MINUTES and ROLLBACK _ TIMEOUT _ MINUTES to Long . MAX _ VALUE in Transaction
replaced instances of ` new Date ( ) ` with ` Instant . now ( ) ` and ` Date . from ( moment ) ` in
refactor BytesRef class for improved readability to enhance maintainability and clarity of the code
added a toast message to notify users when YouTube Player doesn ' t work on Lollipop yet to improve user experience by providing feedback
added parsing checks for unterminated dollar quotes , string literal , and block comments in the Parser class to ensure proper error handling for unexpected SQL
added a null check for mVibrator before accessing its properties to avoid potential NullPointerException when mVibrator is not initialized
updated table border and background color settings and modified column name handling in DotRenderer . java to improve visual consistency and enhance column name selection based on
added ENCODED _ CONF constant and a method to check if a HiveConf variable is encoded in HiveConf . java to enhance configuration handling
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future updates
add uri support for wavefront config proxy ( # 3903 )
refactor NetworkedCacheableImageView to replace ImageView with NetworkedCacheableImageView across multiple files to enhance image loading functionality and
removed the ' target ' parameter from the ' ofFloat ' method in multiple classes to simplify the method signature by removing unnecessary parameters
added a new variable ` gdxControllersVersion ` and updated related references in ` DependencyBank . java ` and ` DependencyBank . java `
refactor LaunchedURLClassLoader for improved clarity to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to use DataAccessUtils for querying results to ensure correct column count is used when querying results
add cache - control and cache - control to authentication
updated the warningMsg to use Locale . ENGLISH for consistent locale handling to ensure consistent error message formatting across different locales
updated the constructor of SolrQueryParser to include an Analyzer parameter to enhance flexibility in query analyzer configuration
updated copyright year in multiple Java files to reflect the correct copyright year to ensure compliance with the latest version of the GNU General Public License
removed unnecessary whitespace in MainTest . java to improve code readability and maintainability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector when source is an instance of VoidColumnVector
updated method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct variable is
simplified the type matching logic in AbstractConfig . java to improve code readability and maintainability
[ java ] add sessiondecorator . offer ( ) method to set timestamp and correlationid in message buffer .
renamed methods ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll `
added a new annotation interface ` NoBootstrap ` and modified ` BootstrapInserter ` to conditionally build bootstrap static blocks based on annotations to
hbase - 25836 fix npe in tabledescriptorchecker when table . max _ filesize and tabledescriptorbuilder . memstore _
updated the calculation of ` requestedCommits ` and ` numCommits ` in ` BranchGraphServlet . java ` to ensure the correct number of commits
added InvocationTargetException to main and run methods in bug6794831 . java to improve thread safety and ensure proper invocation of Runnable methods
added a static final constant BUILD _ ID and refactored caching logic in CachingBuildEngine to improve code readability and maintainability by
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed the redundant call to markAsDone ( future , channel ) in HttpProtocol . java to streamline the code by eliminating unnecessary
added TezConfiguration import and modified copyInto method in TezConfigurationFactory . java to improve configuration handling and ensure proper source filtering
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added null check for recentSounds and implemented a forget method in OpenALAudio . java to prevent potential NullPointerExceptions when stopping the most recent
fix : invalidate state and other operation when discontinuity change
added DecimalFormat instances for decimal precision in NumberAxis to improve precision of number tick units for improved precision
refactor TargetGraphAndBuildTargets initialization to use a builder pattern instead of builder pattern to improve code readability and maintainability by reducing
replaced ` IndexFileNameFilter . INSTANCE . accept ( null , fileName ) ` with ` fileName . endsWith ( " write . lock " )
add option to disable ladders for entity collision bounding box
added a compression level parameter to several methods in ApkBuilderStep and SignedJarBuilder classes to allow customization of compression levels for improved
added a new test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify that static fields are included in a
added support for the ' BYTES ' data type in MetricFieldSpec and related classes to enhance functionality for handling byte data types in the application
updated message formatting in multiple test files to include a newline character to improve readability and maintain consistency in error message formatting
replaced direct calls to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java `
added caching functionality and cache management in SpringDataJPAJoinFetchPaginationTest , ForumService , and ForumService to enhance cache management
fix ` ` german . pronunciation . featuredefinition ' ' and ` ` german . pronunciation . targetfeature
added a check for empty postBody before returning the form body builder in SimpleHttp . java and updated test cases in TestHttpPlugin . java to
added a dispatcher for OkHttpClient in ClientSideSlb and updated tests in ClientSideSlbTest to ensure proper shutdown of the okhttp client
added conditional logic to set texture height based on clipping status to ensure correct texture positioning based on the user ' s orientation
do n ' t throw invalidconfigurationexception if there be no mapped property on the discovery strategy
changed the contextPath variable from final to non - final and added a null check to ensure contextPath is set to " NA " when it is null
[ drools - 4892 ] fix npe in projectclassloader . reinittypes ( )
added validation for BTreeMap root header in BTreeMap . java and defined B _ TREE _ MAP _ ROOT _ HEADER in Serialization
added support for validating ` prefix _ header ` and ` precompiled _ header ` arguments in ` AbstractCxxSourceRuleFactory ` to ensure
replaced WeakReference with a custom AccWeakReference for managing access control context to improve security by ensuring proper access control during image updates
changed the visibility of the findNextIndex method from package - private to private and updated its visibility in ObjectSet . java to improve encapsulation and
changed the initialization of the ` isDirect ` variable from ` true ` to ` false ` to ensure proper initialization of the ` isDirect `
remove duplicate code in maryclient . geteffects ( effectname )
modified the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods in ` Actor ` and ` Group
pdfbox - 5764 : use buffer . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
refactor border spacing calculations in CellLayout and DeviceProfile classes to improve clarity and maintainability of border spacing logic based on container type
refactor value numeric handling by introducing a new ValueNumeric class to improve code organization and maintainability by centralizing numeric parsing logic
added a condition to check if the response is a deferred authentication before proceeding with the login error page to ensure that the authentication process does not
updated command - line arguments from " -- module - start - ini = " to " -- add - to - start " in StartArgs .
added a default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure a default partition value is used when the value is null
[ hotfix ] fix nullpointerexception in streamnode # getoperatorfactory ( )
updated formatting in DefaultArtifact . java to improve clarity and consistency to enhance readability and maintainability of the code
camel - 14284 : kafka consumer should not call staterepository . getoffset ( ) twice for topic .
improve error message when a class can not be find in the classpath
change the default value of gmail notification from enabled to enabling the gmail notification
doc ( regen ) : fix docstring formatting
increased the expected message count in LumberjackMultiThreadTest from 125 to 25 * concurrencyLevel to improve test reliability by
added a check for player ' s dead state before retrieving player name in GlowPlayer and PlayerUpdateHandler to ensure health checks are only performed
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
api key and secret key should be specify with apikey and apikey in updateuser command
replaced switch - case statements with if - else statements in multiple classes to improve code readability and reduce redundancy
updated AbstractMetaDataExportMojo . java file to improve metadata export functionality
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to ensure proper dropping of materialized views during table dropping
updated the property key from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure compatibility with the latest
added a new file ` RoboExecutorService . java ` that extends ` org . robolectric . util . concurrent ` to define a
added subgroups and sorting functionality to the menu items in GroupTreeView . java to ensure that subgroups are only added when a root group
updated method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if the path
updated the dynamic number of GCThreads test to ensure proper execution of the Java process builder to improve test reliability and correctness by
updated ` getHostFlavorMap ` and ` getAllPossibleHostFlavors ` methods to return ` Flavor ` instead of ` ImmutableFl
updated SQL syntax in CreateTable , CreateTableDeParser , and CreateTableTest to use PlainSelect for parameter handling to improve flexibility in
refactor background color setting in ChatViewerFragment to use a local variable to improve code readability and maintainability by reducing redundancy
test ( refactor ) : migrate ctiteratortest to junit 5 ( # 1748 )
added token . clear ( ) and result . clear ( ) methods in several tokenizer and document writing classes to ensure proper clearing of tokens and improve
add a new test file ` astinitializertest . java ` that demonstrates that the initializers do n ' t crash on block
added validation for missing configurers in StateMachineConfiguration and StateMachineFactoryConfiguration to ensure that the state machine configuration fails if there are missing
simonstewart : add testlocators to the selenium test suite
update stringconverter to use integer . min _ value and float . max _ value instead of 234 .
simplify aggregatelifecycletest . getcurrentscope ( ) by remove the dependency on currentunitofwork
updated touchable insets from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to streamline
removed a conditional check for the ' ~ ' character in FencedCodeBlockParser . java to simplify the code by eliminating unnecessary
added socketTimeout property to ConnectionFactoryImpl and related classes to allow configuration of socket timeout values for read operations
added a delay in ElementAttributeTest using Thread . sleep with Throwables . propagate to ensure thread safety during tests execution
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of character encoding in the input stream
refactor List class to improve code readability to enhance maintainability and facilitate future updates
added support for handling URI and Path parameters in AsyncFileImpl and created corresponding tests in AsyncFileImplTest to improve error handling and ensure proper
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to mark the CucumberEngineExecutionContext as stable
fix npe in listvmspmanagerimpl when there be no physical network
rename ` retryUploads ` method to ` retryFailedUploads ` and update related logic in ` FileUploader ` and ` UploadListActivity ` to
updated Java version constants from Java 8 to Java 9 in ConstantPoolTagTests . java to ensure compatibility with newer Java versions
improve error message when compile with - xlint
added a method to clear the client header map in the AsyncHttpClient class to improve resource management by ensuring the client header map is cleared
replace Vector with ArrayList for handling input and output file names to simplify code and improve performance by eliminating unnecessary type casting
updated the default GRID _ COLUMN from 4.0 f to 3f to improve the visual appearance of the application preferences
added a condition to check if ` forViewCreation ` is not already defined in ` CalcitePlanner . java ` to ensure that the
updated regex pattern in TestHS2HttpServer . java for consistency and clarity to improve readability and maintainability of the regex pattern
added error handling when retrieving the object from snippetReflection to improve robustness by catching potential exceptions during object retrieval
simonstewart : fix a bug in the single test suite that fail on ie
updated byteOffset calculation in ByteBlockPool and added a test for too many allocation in TestByteBlockPool to ensure accurate byte offset handling and
changed the visibility of ` firstEncoder ` and ` secondEncoder ` fields in ` InteractionValueEncoder ` from static to default to ensure consistent
added error handling for unexpected exceptions in TcpTransport . java to ensure proper resource management and handling of unexpected exceptions
add @ suppresswarnings ( ` ` serial ' ' ) to papplet . java
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` to simplify the class structure
add ` ` discard ' ' and ` ` untitled ' ' message for database change
added response type validation and error logging in OAuth20DeviceCodeResponseTypeRequestValidator , OAuth20AccessTokenEndpointController , and NexmoSms
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure the index is validated before processing
updated TableMapReduceUtil to accept a input format class instead of a generic input format to enhance flexibility in handling different input formats during mapreduce
removed the redundant append method call in AbstractJRubyMojo . java to streamline the code by eliminating unnecessary complexity
improve error message when access to internal language be not find .
added deprecation warning for master commit duration in ReplicationHandler . java to indicate that Commits will be reserved for Solr 7.1 to inform users
rename ` ` cacheVariableName ' ' to ` ` cacheForeignKey ' ' in DIHCacheSupport . java to improve clarity and consistency in
changed the return type of generateECKeyPair and generateECKey methods from long [ ] to Object [ ] and updated related references to improve type
added suspend method to Restarting , StateWithExecutionGraph , and RestartingTest classes , and modified suspend method to include status overrides to enhance
replace singleton singleton implementation with direct instantiation of RotationTouchHelper to improve flexibility and maintainability of the RotationTouchHelper class
refactor filter and mapping logic for port tables and overrides in UniFiControllerCache . java to improve code readability and maintainability
updated thread ID references from ` lwp _ id ` to ` unique _ thread _ id ` across multiple files to ensure unique thread IDs are
refactor offer management logic to use stream and remove instead of stream for better readability to improve code clarity and maintainability by reducing
use constant instead of hardcoded ` ` tls ' ' for test
updated MockitoMethodInvocationControl and SystemClassUserCases to handle different mock types and modified test assertions accordingly to enhance mock interception handling and
updated NotLoadedException constructor to accept PartialDatabaseObject as a parameter across multiple classes to enhance exception handling by associating the original object with the
replaced import of DisplayUtils with direct assignment of EXTRA _ FILE in getIntent ( ) to improve code clarity and ensure proper handling of
added error handling and file deletion logic in StoreDirect and StoreWAL classes to improve resource management and ensure proper cleanup of old compaction files
added task snapshot retrieval and removed redundant calls to stopSwipePipToHome in AbsSwipeUpHandler . java and SystemUiProxy .
added ` hidden ` functionality to ` CommandArgumentDefinition ` and corresponding methods in ` LiquibaseCommandLine ` and ` Liquibase
[ hotfix ] [ test ] increase test port to 9092
[ geos - 8470 ] use styling . bean instead of parse catalog from stylegroup
added permission checks for launcher activities and improved intent handling in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious int
added getId ( ) and setId ( ) methods to TiledMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile
refactor Manager class to improve code structure to enhance maintainability and readability of the code
added a version parameter to JDBC connection in JDBCExample . java and modified Session . Builder instantiation in SessionExample . java to ensure compatibility with the
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance schema generation flexibility by allowing optional inclusion of schema
fix ( jmx ) : use put instead of putifabsent .
benchmarker : log single benchmark runner exception instead of error
changed the access modifier of the ` doPutRecord ` method from final to non - final to allow subclassing of ` doPutRecord `
fix a bug where the game dir be n ' t absolute .
added new test cases for handling large and slow response content in FastCGIProxyServletTest to improve test coverage and ensure correct behavior of response
added a call to start the ReadInteractionsService in MarkReadService . java to start the ReadInteractionsService to enhance user experience by
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when `
added port number handling for email properties in Email . java to ensure proper configuration for the email server port
added retry logic for renewing SSLFactory in TlsUtils . java to improve reliability and error handling during SSL factory renewal processes
updated the date format in ObjectMapperProvider . java to use milliseconds instead of milliseconds to ensure consistent date formatting across different locales
corrected a typo in the assertion message in SpyingOnRealObjectsTest . java to correct the spelling of " Mockito "
added a boolean flag ` isEndsOnNL ( ) ` to control line ending behavior in InlineBoxing and updated the LineBox class to
updated filePathString initialization to handle null parent cases to ensure filePathString does not lead to null pointer exceptions
removed unused import of DocCollection in TopicStream . java to clean up the code and improve readability
refactor ServletInputStream initialization and add a new test method for Windows 1250 parameter handling in NinjaServletContextTest . java to improve code
added a properties attribute to the configuration in AbstractCasEndpointTests . java to enhance configuration flexibility for web endpoint management
added a validation check for the current graph in StatisticsControllerImpl . java to ensure the current graph is a dynamic graph to prevent runtime errors
[ findbugs ] enable eager initialization of @ scopeone with @ scopeone .
added support for suppressExceptions property in JsonPathExpression and related classes to enhance flexibility in handling exceptions during JSON path parsing
updated the initialization of ControllerLeaderLocator in HelixServerStarter . java to ensure proper initialization of the ControllerLeaderLocator
updated usage messages from " java " to " clhsdb " and " hsdb " in CLHSDB . java and HSDB
added a read skip policy to the configureChunkProvider method in FaultTolerantStepFactoryBean and removed multiple listener registration in SimpleStepFactory
[ beam - 1776 ] remove deprecate write class from flinkbatchtransformTranslators and sinkoutputformat
refactor ` ShadowAccessibilityManagerTest ` to use ` RuntimeEnvironment . application . getSystemService ( ACCESSIBILITY _ SERVICE ) `
add a new analytics . group _ display _ id to track usage statistic .
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from multiple classes to
refactor ` PostgreSQLDatabaseConnector ` to use a new ` PostgreSQLEnumDataTypeHelper ` class instead of a lambda expression to improve code readability
updated path comparison in LogFileTests to use File . separatorChar to ensure consistent file path handling across different operating systems
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to accurately reflect the
added error handling for unsupported index tables in HiveMetaStoreClient to improve robustness by preventing operations on non - index tables
added a check to ensure the visibility is not visible before updating the disabled flag to improve user experience by preventing unnecessary scrolling when the visibility is
added a highlighter for non - Windows environments in Repl . java to ensure compatibility with different operating systems in the application
add a new method ` addOptionalLocalVariable ` to handle optional local variables in ` BugInstance ` and update ` CrossSiteScripting `
replaced ` getRawPath ( ) ` with ` toString ( ) ` for file path handling in ` HadoopPinotFS . java ` to
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
changed the value of _ metaDataComplete from true to false to reset the state of metadata completion
refactor removeTaskTarget method to return void and modify bitmap handling in ThumbnailSearchResultView and WorkEduView to improve task removal process
added environment variable handling for ` RELEASE ` in ` JsBundleGenrule ` and corresponding tests in ` JsBundleGenruleDescriptionTest `
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test method
added unit tests for crlf new lines in comments and Javadoc in AddImportTest . java , and modified import statements in Autodetect
added a check for non - empty hubMode in AbstractLiquibaseChangeLogMojo and defined it in AbstractLiquibase
removed unnecessary null check for item in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify code by eliminating unnecessary
added error handling for missing linkDb in IndexerMapReduce . java to improve robustness by logging warnings when linkDb is not found for
updated the method for retrieving the IndexWriterConfig ' s setIndexerThreadPool to use Class . forName ( " org . apache . lucene .
updated the address format in GameCanvasImplementation . java to simplify the address format for better readability
refactor MapJobExecutionDao to use a copy method for job executions to improve code readability and maintainability by reducing redundancy
added a new file ` DownloadTest . java ` to implement a download test for the Gdx graphics application to facilitate testing of
updated language handling in multiple Java files to normalize language to ensure consistent language formatting across formats
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` for type checking in ` GenericUDFRound . java ` to improve error handling
added a null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple AntPathRequestMatcher entries to matchers in SecurityConfig . java to enhance security configuration options for better user experience
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
do n ' t create bean definition writer for java . lang . object in inject processor
added an @ Ignore annotation to the HttpClientRedirectTest class to temporarily disable the test due to issues
[ openwebnet ] change default value of ` ` supported _ thing _ type ' ' to ` ` available _ thing _ type ' '
refactor code to simplify the execution of SocketEventProcessor to improve code readability and maintainability
deleted the SunToolkitSubclass . java file to remove unused code that is no longer needed in the project
updated the getTranslation method to include rotation or scaling checks in DefaultRenderableSorter to ensure accurate translation calculations based on rotation or scaling conditions
added JUnit imports and an Ignore annotation in TypeHandlerRegistryTest . java , and implemented a test for registering wrapper handlers before primitive types to
added support for alternate color space in the PDSeparation class to enhance image processing capabilities for different color spaces
updated API URL constants to use BuildConfig constants instead of hardcoded values to improve maintainability and readability of the code
camel - 15836 : camel - http - health - add health check for camel - main http
added null check for blockpos before accessing its properties to prevent potential NullPointerException when accessing block state
added a test for altering tables with indexes extend primary key in AlterTableWithViewsIT . java to ensure correct handling of primary key
updated offset initialization in FileFloatSource and modified test assertions in TestFunctionQuery to ensure correct document handling and improve test coverage
removed the DrillMongoConstants . ID from the fields collection in MongoRecordReader . java to clean up unused fields and improve code clarity
added disconnect method to YeelightHandlerBase and DeviceBase classes , and modified connection handling in WifiConnection to ensure proper resource management
added auto - increment handling in Parser . java and a test case in TestCompatibility . java to ensure compatibility with InnoDb ' s auto
fix sync for shared index in sharedinformerfactory
cloudstack - 4892 : fix nullpointerexception in templatemanagerimpl . savedetails ( )
refactor ShadowBitmapFactory to use RobolectricBufferedImage for image size retrieval and update initColorArray method to improve image handling and
removed deprecated constants related to shortcuts , uri , and displayMode in LauncherSettings . java to streamline code and mark these constants as outdated
move stocktickstream . dat to / org / drools / examples / broker / data /
updated legend positioning and offset calculations in PieChart . java to ensure correct positioning of legend elements in the chart
added a check to return early if the world transform is zero to avoid unnecessary processing when the rendering is empty
added a new file MaryScriptCreator . java to demonstrate the creation of text files in a specified directory to facilit
added a session attribute for the remote source host in the ListenHTTPServlet to ensure the correct flow file is used for the HTTP request
fix level compaction recover file not exist bug ( # 2067 )
removed the " xlink : href " attribute from the license and location elements in ComponentDescription . java to simplify the URL construction by removing unnecessary
camel - 14836 - camel - aws2 - s3 : use a constant for the timeout checker name
hbase - 2594 regionserver should not log a warning if cluster be shutdown
added null check for span before logging messages in Slf4jSpanLogger and improved formatting in DefaultTracer to enhance code robustness and
trim whitespace from the active option before adding it to the configuration to ensure that the active option does not contain leading or trailing whitespace
added a depth option to control wallpaper zoom behavior based on user preferences to enhance user experience by allowing customizable depth settings
updated the assertion in OverseerTest . java to check the success count of the overseer to ensure the correct success count is returned
simplified the version checking logic in LinuxFileStore . java to improve code readability and maintainability by eliminating redundancy
refactor ExecConstants to improve code readability to enhance maintainability and facilitate future updates
removed unused ScreenRecord import and annotation from ThemeIconsTest . java to clean up the code and improve readability
added a method to set scan attributes for paging in TableSnapshotResultIterator and updated ScanUtil to utilize it to enhance scan management by allowing
added bounds checking for lowRange in Request . java and RequestV2 . java to ensure lowRange is less than 1000000L to prevent potential
changed access modifiers of ` keySizeEstimator ` and ` valueSizeEstimator ` from private to protected in ` AbstractCachedSource . java ` and
cloudstack - 4892 : fix npe in hostjoindaoimpl # setzoneid ( )
[ zeppelin - 4892 ] add support for utf - 8 in java interpreter
removed the equality check for filesystems before removing it to simplify the removal process by eliminating unnecessary checks
replaced the ` obj ` field with a ` json ` field and updated its usage throughout the ` HttpRequestBuilder ` class to streamline
updated the calculation of hard529 in SoftAutoCommitTest . java to use hardCommitWaitMillis * 5 instead of hardCommitWaitMillis
simonstewart : do n ' t fail the screenshot if the browser do not have any listener
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
reformatted error logging statements in SyncQueue . java for improved readability to enhance code clarity and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features
updated method call from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and
simplified path resolution for the LegacyXMLLayout library and transformation path to improve code readability and maintainability
[ hotfix ] [ yarn ] use createyarnclusterdescriptor instead of createyarnclusterdescriptor
fix npe in localmapstatsprovider when no data be available
deleted the AllTests . java file to the test class is no longer needed in the project
added new character constants for NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE in AbstractWordConverter . java
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify behavior of large stack trace invocations to ensure
replaced ` nestedResultMap . getResultMappings ( ) ` with ` getResultMappingsForRowKey ( ) ` in ` createRowKeyFor
added a flag ` eventHandled ` to ` UIText . java ` to track the event processing state
deleted the ` Controller . java ` file and renamed the ` Weldby ` class to ` WeldModule ` to clarify the
do n ' t monitor capture group when empty check be enable
removed the initialization of the LIQUIBASE _ PRO _ LICENSE _ KEY variable and updated its usage in the maven plugin to streamline
refactor methods in RolapCube to use a dedicated setMeasuresHierarchyMemberReader method to improve code readability and maintainability by
add option to generate debug info for tracknodesourceposition
[ mondrian ] fix typo in mondrianproperties . java
added functionality to retrieve Friend paths in Kotlin - related classes and updated related classes to enhance functionality by allowing users to access friend paths
added aliases for BATK , BRAHMI , and MANDAIC in Character . java and updated CheckScript . java to
refactor ExecutionCommand equality checks to use ` . equals ( ) ` for string comparison to improve readability and maintainability of the code
refactor Mockito class to improve code structure to enhance maintainability and readability of the codebase
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope instance
updated CSSParser to handle percentage values more effectively and improved error handling to ensure parameters are valid between zero and one to enhance robustness and
added unit tests for local index reverse scan functionality in LocalIndexIT . java to ensure correct functionality of the reverse range scan functionality in the index
updated imports and method signatures in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to use ApplicationProvider instead of InstrumentationRegistry
updated messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and LiveTvGuideActivity to use localized strings instead of
refactor condition checks in RendererUtilities . java and add a new test case in RendererUtilitiesTests . java to improve code readability and ensure
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid nodes instead of Iterator to improve code clarity and maintainability by
added a try - catch block to handle SQLiteException when adding a column twice in FileContentProvider . java to improve robustness by logging a
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up the code and improve readability
updated the handling of memory calculations in ConvertJoinMapJoin . java to use a new method for calculating online data size to improve accuracy of memory
updated the ` buildView ` method to accept a ` Context ` parameter and added background resource resources for ` selectableItemBackground ` to enhance flex
added an ` assertAuthentication ` parameter to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : set vpc id to null in vpcmanagerimpl . setvpcid ( )
[ flink - 10955 ] [ test ] disable flinksavepointtest on jdk 1.11
updated variable declarations in multiple Java files to remove unnecessary whitespace to improve code readability and maintain consistency
simplified the loop condition by removing unnecessary variable assignment to improve code readability and maintainability
updated the ` BitmexStreamingExchange ` class to extend ` BitmexExchange ` instead of ` BaseExchange ` to align with the
[ ds - 4892 ] add test for virtual metadata in relationshiprestrepositoryit
added null checks for spatial in LodControl . java to prevent potential NullPointerExceptions when spatial is null
updated ` ConditionalTokenFilter ` , ` TestRandomChains ` , ` TestConditionalTokenFilter ` , and ` TestConditionalTokenStream ` to
make unsafestorenode and storefieldnode thread - safe .
replaced call to super . putAddress with io . putAddress in BoundedMemoryIO . java to improve code clarity and maintainability
added an assertion to check if the CAS event repository is empty before proceeding to ensure that the event repository is not loaded before proceeding with
updated parameter names in AuthenticationAttrProcessor for consistency to improve code clarity and maintainability
added null checks using ` Objects . requireNonNull ` in ` MacOSXPreferences . java ` and created a new class ` RemoveNullKeyCheck
added a method to set the Typeface in CodenameOneTextPaint to ensure that the typeface cannot be set in runtime to prevent
added open methods to AzurePinotFS , LocalPinotFS , and PinotFS classes to enhance input stream handling for better resource management
danielwagnerhall : remove deprecate method from webdriverrunner
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
replaced instances of ` ResultObject ` with ` ResultObject ` and updated related logic in ` DefaultResultSetHandler . java ` to streamline
updated SQL syntax in CreateTableGeneratorTest . java to use double quotes to ensure proper syntax for SQL generation
modified the filtering logic in VectorizationContext to handle primitive expressions based on the mode to ensure correct handling of filter expressions based on the specified mode
updated the declaration of ` moveSelectorConfig ` to use a generic type ` MoveSelectorConfig ` to improve type safety and clarity
replaced the instantiation of ReorganizeTableStatement with a direct method call to modifyDataTypeStatement to simplify the code by eliminating unnecessary
updated property names to use constants for consistency and clarity to improve code readability and maintainability by standardizing naming conventions
refactor connection handling and error logging in PeerGroup . java for improved clarity and debugging to enhance code readability and maintainability while
added conditional logic to set the style based on the presence of multiple styles in Nano . java to ensure the correct style is applied based on
refactored datafixer to use compoundbinarytag instead of compoundtag
change return value from " Use ` String ` to " No # toString ( ) on String " to clarify the purpose of the return
updated JVM argument " - Xmx64m " from " - Xmx64m " to " - Xmx32m " to ensure
updated method return types and added retry analysis for DataProvider to improve error handling and enhance test coverage for retry scenarios
updated the return statement to use the bandwidth value instead of the first token to ensure the correct retrieval of tokens based on the bandwidth value
danielwagnerhall : add support for ` ` select pop up ' ' and ` ` deselect pop up ' '
removed the ` storePass ` parameter from the ` doPrintEntry ` method and updated its usage in the ` doPrintEntry ` method to
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added validation checks for dialog , shape , and frame parameters in Dialog and Frame classes to ensure proper error handling for invalid components that are not opaque
changed the ` state ` variable to be ` final ` in ` DefaultProjectFilesystem . java ` to enforce immutability of the ` state
refactor RedisObjectFactory to use RedisStandaloneConfiguration for sentinel and standalone configuration to enhance configuration flexibility for Redis connections
chatroom : do n ' t send delayed message to the provider if it ' s already in use .
replaced ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method calls to streamline
refactor FileOperationsHelper to use OperationsService for creating share operations to improve code readability and maintainability by leveraging a centralized
removed unnecessary check for injected in BeanDefinitionInjectProcessor . java and added Inject annotation in FieldPropertyInject . java to improve code clarity and
replaced calls to getMinBuildHeight ( ) with a variable yStart in ClassicPlotManager . java to improve code readability and maintainability
added null handling for NullPointerException in SmackIntegrationTestFramework to improve robustness by preventing potential NullPointerExceptions
tiff : add interop subdir support for jpeg file with interop subdir
added ENABLED _ LS case to VersionTargetGraphMode and modified executor assignment logic in VersionedTargetGraphCache to support conditional execution based on version graph
added a check for video formats in DLNAResource . java to ensure proper handling of video formats in the code
chore : integrate new gapic - generator - java and rules _ gapic ( # 438 )
added reflection - based loading of the Jnlp ServiceManager in LwjglNativesLoader . java to enable dynamic loading of the L
added support for escaping characters in CSV strategy and updated related test cases to enhance security and ensure proper handling of special characters in the request
added validation for authorization code in ClientRegistrations and updated corresponding test cases in ClientRegistrationsTests to ensure correct handling of OAuth2 grant types
enhanced exception handling in Throwable . java and added suppressed exception handling in SuppressedExceptions . java to improve error reporting and ensure proper exception initialization
added query assertions and modified the constructor in ClientAggregatePlan to include a null parameter to enhance test coverage and ensure correct behavior of ordered result iterators
added a new key " RSquare " to the regression map in RegressionEvaluator . java and a corresponding test in StreamExpressionTest .
http : / / issues . apache . org / jira / browse / amq - 4898 - add context attribute to threadcontext
refactor MapWork handling to utilize getter methods for MapWork properties to improve code readability and maintainability by reducing casting overhead
refactor image retrieval and country handling in PdfJndiReport and PdfSessionInformationsReport classes to improve code readability and maintainability by
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added a new test case in JwtIssuerAuthenticationManagerResolverTests to improve cache efficiency
updated the condition from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for schema
[ gr - 10684 ] fix interop test failure with cxx method
removed duplicate sleep statement in AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability
added a new file ` KernCrash . java ` that implements a simple GUI with a KernCrash font to demonstr
added a fail ( ) method to LinkedHashTreeMapTest . java to ensure proper failure handling during tests
added a method to retrieve network interface addresses based on a prefix to enhance functionality by allowing dynamic adjustment of network interface addresses based on the specified prefix
cancel global housekeeper task when shut down the housekeeper pool
updated variable name from ` getClientAddress ( ) ` to ` getSlaveAckOffset ( ) ` in ` GroupTransferService . java ` to
refactor assertions in Assert . java for improved readability to enhance maintainability and clarity of the code
added a new test class ` Issue247Test ` for testing the ` Issue247 ` functionality in the ` org . mapdb `
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and updated related methods to enhance
added checks for today and birth year in validateMaxAge method to ensure correct validation of max age based on the current date and birth date
added GrblLookups for alarm and error codes in GrblController . java and updated error handling in command completion to improve error
updated the return statement in Workspace . java to conditionally return a string based on the number of screens to improve user experience by providing
removed the ' count ' parameter from the ` getTrades ` method signatures across multiple classes to simplify the method signature by eliminating unnecessary
updated ConsoleReader to remove unnecessary stripAnsi and modified flush logic in MemoryHistory to improve code clarity and ensure proper handling of null input
updated the path for the jdkPath in JavaBuild . java to ensure the correct path is used for PlugIns files
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple files to improve code cl
added a logger parameter to the JFCModel constructor and updated related methods to include it to enhance logging capabilities by providing a warning message for missing
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the Tolerance is positive to prevent runtime errors
added methods to create and drop views in TestUtil and corresponding tests in DatabaseMetaDataTest to enhance functionality for managing view privileges in the database metadata
added conditional checks for stable float and double tests in NaNTest . java to ensure proper handling of non - stable floating - point and double
added a new class ` DesktopTaskbarUIController ` to handle taskbar icons in the Quickstep launcher to enhance user experience by providing
added ProgressKeeper functionality and task management in SearchModFragment and ModItemAdapter to enhance user experience by enabling or disabling the install button
refactor file handling methods in mmm and ppp files to improve code readability and maintainability
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and update conditional annotations in GrpcServerAutoConfiguration to improve code clarity and ensure
changed the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and removed the ` @ FunctionalInterface ` annotation to simplify the
add debug log to resourcepackloader . getpackinfo ( ) for mod file .
chore : update gapic - generator - java version to 2.1 . 0 ( # 4382 )
added overloaded ` grow ` and ` growX ` and ` growY ` methods to the ` Cell ` class to facilitate
refactor DefaultInputHandler to use generics for bindings and simplify keyStroke handling to improve code readability and maintainability by using diamond
http : / / issues . apache . org / jira / browse / amq - 4896 - add try / catch block to
replaced long array with byte array in MetricsMemoryTester . java and added memory failure count option in TestDockerMemoryMetrics . java to
deleted the JobParametersPrototype . java file to remove unused code to streamline the project
added a securityEnabled field and updated related methods in MappingsTable and TableResolverImpl classes to enable or disable row security checks based on configuration
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE flag from true to false in TestMSPowerPointParser . java to disable the DUMP _
updated the method signature of ` codecNeedsEosPropagationWorkaround ` to accept ` MediaCodecInfo ` instead of ` codecName ` to
[ java ] : do n ' t check if spy position be available in network publication .
added a condition to check if ` dbInfo ` is null or ` options . getOutputOptions ( ) . isNoInfo ( ) ` is
do n ' t use ssl = false when use ssl = false
updated DOMConverter to include DOMOutputOptions as a parameter in the buildDOMSubtree method to enhance flexibility by allowing custom error output options
refactor assertions in Assert . java for improved readability to enhance maintainability and clarity of the code
added a retain parameter to the Event class and updated related methods to include topic and retained information to enhance event handling by allowing retained messages to be
added ` @ JsonIgnore ` annotation to ` TestResultSummary . java ` and updated test cases in ` EventSerializationTest . java ` to
[ hotfix ] [ table - planner - blink ] fix typo in sqlgroupedwindowfunction
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 561 : add support for
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to align with the
changed log level from debug to trace in FirmwareUpdateService . java to improve logging granularity for firmware update notifications
added unit tests for retrieving null values from SQL statements in GetObjectTest . java to ensure correct handling of null values in database queries
refactor string handling in StringSubject and Subject classes to improve clarity and consistency to enhance readability and maintainability of the code
added unit tests for repository permission handling in UserModelTest . java to ensure correct permission access for multiple teams in the repository model
added a new file Test7088020 . java that implements a method handle testing with incorrect stack frames to ensure proper exception handling for method
replaced the method ` matchAudienceRestriction ` to ` matchAudienceRestriction ` and added a ` Set < String > ` for audience URIs to
refactor cache update methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener for consistency and clarity to improve code readability and
replaced direct calls to ` _ stderr ` with null checks for the ` _ stderr ` variable to avoid potential NullPointerExceptions when ` _ stderr
added a SEPARATION _ ORDER warning to the BasicEventSimulationEngine class and updated its usage in the BasicEventSimulationEngine class to enhance
updated the query optimizer parameter from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure the query optimizer uses the correct
updated the SQL statement to include split points handling and added a condition for enabling the normalizer in the amsHbaseSite normalization
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass functionality to ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of BluetoothClass functionality in BluetoothAdapter
updated method names from " contains " to " containsProfile " across multiple files to improve clarity and consistency in naming conventions
[ feel ] fix npe when sum ( [ ] ) be null or empty
replaced the call to ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with a direct call to ` graph . read
updated coreNodeName assignment to use getCoreName ( ) instead of coreName to ensure the correct core name is used for processing node properties
chatactivity : do n ' t refresh the chat request if it be already update .
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for tagging functionality
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
added additional checks for element types in ` mmm Types . java ` and created a new class ` ppp T7005671 . java
updated mathematical calculations in DelaunayTriangulator and modified test setup in LwjglDebugStarter to improve
added @ Override annotation to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use Builder pattern to improve readability and maintainability of the code
refactor state management in StackOverflowCheckImpl . java to use variable variables for better readability to improve code clarity and maintainability by
added shadow methods for SQLiteDatabase , ContentValues , and SQLiteDatabase in Robolectric and removed deprecated methods from ShadowContentValues to improve
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglCanvas . java ` and `
replaced ` bytesPerDim ` with ` ArrayUtil . getUnsignedComparator ` in ` BKDWriter . java ` to improve performance by using
added a ` script ` and ` locale ` property to the ` getInstance ` method and updated the default locale initialization logic to enhance security by ensuring
replace ` mIconCurrentTextAlpha ` with ` mIconLastSetTextAlpha ` in ` PredictionRowView . java ` to accur
corrected a typo in the warning message from " Confimap " to " ConfigMap " to ensure accurate logging of the current number of ConfigMap
replaced ` LimitedModeLoginMockMvcTests ` with ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in `
trim whitespace from the token before adding to _ mimeTypes and _ excludedAgents , and excludedPaths in GzipFilter and GzipFilterDefaultTest to ensure
reformatted the assignment of _ outputType in Response . java to improve code readability and maintainability
changed the default string property " nashorn . regexp . impl " from JDK to JONI to ensure compatibility with the latest version of
replaced ` LooperExecutor ` with ` Executor ` and updated task handling in ` ViewCapture . java ` to improve task execution efficiency and
[ mary ] add support for ` ` / styles ' ' in voice and inforequesthandler
added a check to ensure the destination folder exists before creating it to prevent errors when attempting to create a non - existent folder
updated bind IP address from " 0.0 . 0.0 " to " 127.0 . 0.1 " to ensure compatibility with
camel - 16463 : camel - jbpm - fix the typo in the default handler name
pdfbox - 4892 : remove unused import , a suggest by valerybokov
updated ` WorkModeToggleContainer ` and ` WorkFooterContainer ` classes to use ` WorkFooterContainer ` instead of ` WorkModeToggleContainer
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix : handle implicit type in defaultjavaprettyprinter
added memory freeing functionality in OperatorContext . java to ensure proper memory management during execution
simplified string formatting in QueryByExamplePredicateBuilder and JpaPersistentPropertyImpl to improve readability and maintainability of the error message
replaced ` cumulativeStats ` with ` statsList ` and updated related methods in ` ConcurrentLRUCache ` and ` FastLRUCache
added a method ` runAndWaitInJavaFXThread ` to the ` DefaultTaskExecutor ` class and modified the ` runInJavaThread
fix networkaddressmanagerserviceimpl to use the intendeddestination instead of the local host .
set data root and source root to the runtime environment in MainFrame . java to ensure proper configuration for database and source in the application
added constructors to ` MarkedClientEnabled ` and ` MarkedServerBootstrapConfiguration ` to enable logging for Solon Admin client and server
refactor TableEnvironment class for improved readability to enhance maintainability and clarity of the code
updated timeout handling in MapperBuilderAssistant and MappedStatement classes to improve code clarity and reduce potential null pointer exceptions
removed the ` hangingTscTimeout ` parameter from multiple method signatures in ` TypeScript2JavaScriptTranspilationCompletedCallback ` to simplify
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocation
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to simplify
tika - 2857 -- add a test for jxl . xls in excelparser to verify that the jxl . xls
simonstewart : make sure script be not trigger concurrent modification
fix ( nio ) : wait for the channel input stream to be write to pipe
added validation for ` actual ` and ` expected ` values in ` GuavaOptionalSubject ` to ensure that ` actual ` and ` expected `
updated ` BackgroundAppState ` and ` ShelfScrimView ` to include ` VERTICAL _ SWIPE _ INDICATOR
added null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
ggb - 1193 fix for absolute location and classic bounding box
refactor ErrorOccuredInOnExceptionRoute class for improved error handling to enhance reliability and maintainability of exception handling logic
changed the scheduling method from ` scheduleAtFixedRate ` to ` scheduleWithFixedDelay ` and changed log level from info to debug in ` Ast
simplified the calculation of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability
added @ Ignore ( " Test hangs " ) annotations to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable
replaced wildcard import with specific imports in GuiceFactoryTest . java to improve code clarity and maintainability by using specific dependencies
added system feature list functionality to RobolectricPackageManager and corresponding tests in RobolectricPackageManagerTest to enhance functionality by allowing
refactor RCAFrameworkLoader to iterate over properties and add a new test class RCAFrameworkLoaderTest to improve path property handling and ensure
removed logging statement for cancellation watch dog to streamline the cancellation process by eliminating unnecessary logging
added null check and initialization for enumerationValues in RADProperty . java to ensure enumerationValues is reset when no valid enumerationValues is provided
rename ` needInline ` to ` needStartText ` and update related logic in ` BoxBuilder . java ` and ` InlineBoxing .
added a new method ` collectAndSendTelemetryDataAsynch ` to collect Telemetry data asynch and implemented remote IP retrieval in the
removed conditional handling for MySQL database type in UpgradeCatalog260 . java to simplify the code and improve readability by eliminating unnecessary complexity
updated error messages in BaseTableDataManager for clarity to improve user understanding of permission checks for index and temp resources directories
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added selector ID to the key format in Matcher . java to enhance key formatting for better readability
fix typo in debug log message and fix typo in transform
updated taskbar visibility and alpha handling in multiple classes to improve UI responsiveness and manage taskbar visibility more effectively
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintainability
added a check for JdbcConnection before accessing its properties in CockroachDatabase . java to ensure proper handling of JDBC connections to avoid potential
fix servermaintest . testindexoutofboundsexception on window
added ` getMediaRecorderingMimeType ( ) ` methods to ` CodenameOneImplementation ` , ` MediaManager ` , and ` Display `
make the useshaders ( ) method public and remove confighandler . useshaders ( ) from rendertilepylon .
updated the " BindableFilter " condition in DruidAdapterIT . java from " 6588 " to " 13500 " and modified
reformatted the initialization of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
updated formatting and configuration settings in XMPMetaParser . java to improve code readability and maintainability
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check with a while loop in UrlHelper . java to improve code readability and maintainability
rename ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and update conditional logic for varargs access to improve clarity and
refactor border check logic into a separate method ` borderIsNotSetOrBlank ` to improve code readability and maintainability
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to improve logging granularity for better debugging
refactor registration methods in InternalDropAllCommandStep and HubUpdater to return HubRegisterResponse instead of void to improve code readability and maintain
replaced direct bitwise operation with Byte . toUnsignedInt for byte conversion in multiple classes to improve code readability and maintainability by using a
updated the formatting of the string in OpenTracingTransactionProducer . java to improve code readability and maintain consistency
updated the default DepFiles value from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to improve caching behavior by using a more
changed the default value of rangePannable from true to false to disable range pannable functionality in the CategoryPlot class
update main activity handling in AllAppsContainerView to conditionally add and remove views based on the current active page to improve UI responsiveness
changed access modifiers of GLCaps , GcodeRenderer , and FPSAnimator in Visualizer2TopComponent . java to improve encapsulation and
added import for CancellationException and handled it in FunctionTest . java to ensure proper handling of cancellation exceptions during tests
changed constructor visibility of JarFileResource and JarResource constructors from package - private to protected to enhance encapsulation and restrict access to these constructors
refactor DefaultTrackSelector class for improved clarity to enhance maintainability and readability of the code
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to introduce a delay between unseq merging and
updated the expected currency from AUD to BTC in the BTCMarketsAdaptersTest to reflect the correct currency from BTC to ensure
added a @ Table annotation and modified test cases in HibernateDTOProjectionTest . java , HibernateDTOProjectionTest . java , and J
refactor Unicode handling in the application to improve code readability and maintainability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added logic to update Hive LLAP settings if required to enhance
removed unnecessary whitespace in the onComplete method call to improve code readability and maintain consistency
( chore ) camel - aws : use builder instead of builder for key and md5
added handling for BIG _ DECIMAL case in RangePredicateEvaluatorFactory to improve error messaging for unsupported value types
rename variable from ' inner ' to ' javacProcessingEnvironment ' in TreeBackedProcessorWrapper . java to improve clarity and consistency in
removed debug print statements for annotations in ParameterInfo . java to streamline code by eliminating unnecessary logging
added a new preference for AC3 in PlaybackController . java and modified seek logic in VideoManager . java to enhance video playback handling
added a new HashMap to store the value of a null value and set the content of the HttpResponse to improve data handling by providing a JSON response
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to address Commons DBCP and
added a test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to include
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
fix for issue # 358 : incorrect gap calculation on window
updated the initialization of ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` to include name and ` false ` parameters to improve clarity of
refactor ViewResultsFullVisualizer to use JScrollPane and JCheckBox instead of JScrollPane and JSplitPane to improve layout flexibility and
added descriptions for user phone numbers in ScimUserEndpointDocs . java to enhance clarity and usability of the user ' s phone numbers
changed class visibility from package - private to private in DeleteFiles , IndexFiles , and SearchFiles classes to enhance encapsulation and restrict access to
added null checks for responseMap in JsonHttpPropertyRequest . java and improved error logging in URLStreamProvider . java to enhance robustness
refactor SolrRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if ` DEFAULT _ PARALLEL ` is not ` DEFAULT _ PARALLEL ` before validating the `
test : fix checkstyle issue in test / java / awt / testvmware / testvmware / testvmwareutil . java
added a check for SCARD _ E _ NO _ SMARTCARD in the CardImpl constructor to ensure proper handling of SCARD _ E
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system out checks during testing
camel - 16451 : camel - bindy - bindy - bindy - bindy - bindy - bindy - data -
change default value of " useOwner " and " useTimeStamp " from TRUE to FALSE in JabRefPreferences . java to improve user experience
updated parameter type from ` Runnable ` to ` ThrowingRunnable ` in ` runAndCheckException ` and ` runAndCheckException ` methods to improve
updated hash calculation to handle null values in CrawlURI . java to improve robustness by preventing potential NullPointerExceptions
camel - 14284 - camel - aws - sdb : configuring endpoint should set property on endpoint and not configuration object - aws -
updated version number from " 4.1 . 1 " to " 4.2 " and modified object handling in LiquibaseXMLTransformer
change default value of proxy . cert . validity from 7 to 90
updated frame timing and elapsed calculation in ThreadHandler . java to improve responsiveness and responsiveness of frame processing
added null checks for paginator in HttpBatchReader and HttpBatchCreator to ensure proper handling of null paginator values in URL parsing
added null check for compactionInfo client in Worker . java and created a test for findNextCompact method in TestWorker . java to ensure robust
added onSaveInstanceState method to fragment state handling in ShadowFragmentActivity to ensure fragment state updates correctly during state changes
updated formatting in BatchResourceFactoryBean . java for consistency to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure correct handling of color references in the color resource loader
added exception handling for NoResultException in AbstractJPAQuery . java and a corresponding test in AbstractStandardTest . java to improve robustness
renamed variable ` fromCache ` to ` owner ` for clarity and consistency to improve code readability and maintainability by using a more
updated depthPref initialization to use LawnchairApp . getInstance ( ) instead of l to ensure compatibility with the latest Lawnchair
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
updated the method signature of ` updateTotalEnergyAverageUsage ` to use ` getHeadSlot ( ) ` instead of ` now ` to
added null checks for extensions in the ExtensionStack class and improved formatting in ExtensionStack . java to enhance robustness by preventing NullPointerExceptions
[ rxjava3 ] fix flowable . flatmap . cancel ( ) not dispose the inner subscriber
added connection manager and connection pool timeout handling in MultiGetRequest , ControllerStarter , and ServerTableSizeReader classes to improve connection management and
reformatted code for better readability in AndroidPrebuiltAarDescription . java to improve code clarity and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to streamline test setup for better clarity and
replaced instances of SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and updated the inline image method in
updated caching logic in CachingBuildEngine . java and added a new test in CachingBuildEngineTest . java to ensure output hash is
camel - 14263 : camel - netty - add option to turn off bytebuffer in camel - netty
updated the method call to use ` Warehouse . getQualifiedName ( ) ` instead of ` getOldName ( ) ` to ensure compatibility with the
improve error message when vertx instance be create with the prefernativetransport option set to true
move unit test for enumtypehandlerserializertest to typehandling . coretypes and add unit test
refactor StreamEx class for improved readability to enhance maintainability and clarity of the code
removed hints related to specQueryTimeout and specLockTimeout in SessionImpl . java to streamline query timeout settings for improved readability and
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to facilitate testing of SLF4J
removed duplicate put calls in multiple Java files to streamline the code and improve readability
updated orientation handling logic in TaskbarManager . java to ensure consistent behavior when different screen orientations are applied
chatroomjabber now properly escape the occupant ' s nickname in xml
added unit tests for database compacting and compacting functionality in Issue265Test . java and modified longStackPut method to improve test coverage for
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable components
[ zeppelin - 4892 ] fix executionflowcontroltest to work with jdk 1.6
corrected formatting in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and
added a boolean parameter ` unlimited ` to the ` NBWriteServlet ` and updated the ` TestWriteListener ` constructor to accept it to
update total difficulty in blockchainimpl and add a new test for invalid block total difficulty in ImportLightTest to ensure that the blockchain correctly
simplified the logic for determining the current window seekable action in DefaultPlaybackController . java to improve code readability and maintainability by
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated verification cache cleanup method in SecurityServicesFeature . java to
added a null check for theUniformAlloc shader and updated bendAngle and bendDistance calculations to improve stability and correctness of the
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper handling of special characters in the key
added PrincipalResolver dependency to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance dependency resolution for authentication metadata populators
replaced ObjectMapper with Noggit ' s JSON parsing using Noggit ' s ObjectBuilder to improve compatibility with Noggit ' s
added a method to remove trailing slashes from the StringBuilder in IoUtil . java to improve the handling of trailing slashes in the StringBuilder
added a new method ` matchesAny ` to the ` PatternsMatcher ` class and corresponding tests in ` PatternsMatcherTest ` to enhance
updated error message formatting in LoadIncrementalHFiles . java to improve readability to enhance clarity of error messages for better debugging
fix fire potion not be fire when potion be water
updated formatting of the method call in CellLayout . java to improve code readability and maintain consistency
refactor calculation of decreasePercent and increasePercent in ContractStateCapsule . java for improved readability to enhance code clarity and maintain
added checks for input readiness and debug logging in AsyncContentProducer and BlockingContentProducer to improve handling of readiness and debugging for unready
added a null check for weightField in DocumentDictionaryFactory . java to ensure that the weightField parameter is not null to prevent runtime errors
added plist variable expansion functionality to the AppleBundle and created a corresponding test in AppleTestIntegrationTest to ensure that the Info . plist
fix turret bullets and damage do n ' t shoot the turret
updated the ` adaptOrder ` method to use ` OrderCreateApiRequest . OrderCreateApiRequest ` instead of ` OrderCreateApiRequest . OrderCreateApiRequest
added a new file ` PreParseGrammarTest . java ` for testing XML grammar parsing to verify the functionality of XML grammar parsing in the X
added @ SuppressWarnings ( " doclint : missing " ) annotations across multiple Java files to suppress warnings related to the " doclint : missing "
added FontManager imports and font override functionality in ExtendedEditText . java to enhance font management capabilities in the application
added null check for currentUser in AuthorizeTag and created a test for it to ensure that the method returns an empty list if no user is found
camel - 16462 : ensure uri contain unsafe character in camel - cxf .
mondrian : add setupdata ( ) to jdbcgeometrytestsetup
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ flink - 13434 ] [ runtime ] throw an exception when restore attempt for already cancel task
add server . rmi . create = true to create rmi registry
replaced String . join with StringUtils . join for string handling to improve code readability and maintainability by using Apache Commons Lang
updated display metrics retrieval in multiple classes to use Resources . getSystem ( ) to ensure consistency and correctness in handling display metrics across different platforms
[ java ] add cluster member id to service heartbeat .
added conditional logic to set total thread allocated bytes based on version to ensure compatibility with newer versions of the application
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 548 . add
updated debug and error logging statements in AjaxListener . java to improve logging clarity and enhance error handling clarity
added authentication routes to the AuthenticityController and created a new AuthenticityFormTest class to enhance authentication functionality in the application
added an assertion to check if the nextNode is alive in LoweringPhase . java and simplified the next node assignment in SnippetTemplate . java
updated logger reference from ConnectionManager to HttpClientRequestImpl in HttpClientRequestImpl . java to ensure proper logging context for the HttpClientRequestImpl class
refactor comparison logic in DefaultTrackSelector . java for improved clarity to enhance code readability and maintainability by reducing redundancy
updated serialization methods in RuntimeSerialization . java to improve performance and maintainability of the serialization process
ggb - 2323 cropbox : do n ' t resize the image if the image be not cropped
refactor UnitOfWorkFactory class to improve code readability to enhance maintainability and facilitate future updates
added a new variable ` allAppsCellWidthPx ` and updated related references in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
tika - 1188 -- add resource name to mailcontenthandler if content - type parameter be not present .
updated the URI format in ThumbnailsCacheManager . java to use the local ID instead of remote path to improve the clarity of the URL
added checks to set the input mark to Integer . MAX _ VALUE and reset the input stream if mark support to ensure input streams are properly managed
added @ Deprecated annotations to AsyncProcessor , AsyncSubject , and SerializedSubject classes to indicate that these classes are outdated and should no longer be used
added configuration properties to control server error stack visibility in the error page to enhance user experience by allowing users to control the visibility of error stack traces
cloudstack - 4892 : add log for cleanup failure in case of domain cleanup failure
removed redundant null checks for foreign calls in SPARCArithmeticLIRGenerator . java to streamline the code by eliminating unnecessary
[ drools - 5 ] add support for legacy drl 5 . x api in decisiontableconfigurationadapter
added a new boolean variable ` waitingForResult ` and modified the ` onRequestPurchaseResponse ` method in ` CodenameOneActivity .
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow for more time for tests
updated import statements and modified the style qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper formatting of the parent
deleted multiple files ` MrefStat . java . rej ` and ` MrefStat1 . java ` to streamline the codebase by
replaced direct usage of ` match . getRequested ( ) ` with a conditional check for ` StringUtils . isBlank ( ) ` in ` Dependency
added error handling constants for no trades and bad status in BTCETradeServiceRaw . java to improve code readability and maintainability
use hamcrest assertion instead of junit in tests / dependencies
added method to retrieve payment request URLs in BitcoinURI . java and corresponding tests in BitcoinURITest . java to enhance the functionality of the
planner - 383 add check for unsupported type argument in abstractfrompropertyvaluerangedescriptor
removed redundant line setting folder info in FolderPagedView . java to streamline code for better readability and maintainability
updated locking condition in JfrBufferNodeLinkedList . java and modified write success handling in JfrChunkWriter . java to improve lock ownership
refactor null handling in BasicAbstractTuple to use a for - loop for improved readability to enhance code clarity and maintainability by
refactor LintUtility to use InputResource for linter configuration loading to improve error handling and resource management for linter configurations
added a post to the updateBackgrounds ( ) and updatePaddings ( ) method in AppsContainerView . java to ensure background
fix inventory . oninventorytick not update correctly . close # 222
added a new case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these methods are marked as @ PublicEvolving for
added null check for the variable ' x ' in PreparedStatement and Array classes to ensure proper handling of null values to avoid potential NullPointerExceptions
[ hotfix ] [ table - planner - blink ] fix typo in archivetool description
replaced double quotes with single quotes in StringBuilder . java to improve code readability and maintainability
added a new test method for JSON serialization in SiteSnapshotVariationsTest . java to facilitate testing of JSON serialization and deserialization of
added JUnit imports and refactored the ` removeTheTxAndBlock ` method in ` BroadTest . java ` to improve code
added channel state checks for LensMaskOpen and LensMaskClose in AmcrestHandler and DahuaHandler to enable the camera
removed unnecessary ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify method signature
updated the ChangeLogIterator constructor to accept a List of ChangeSetFilter and changeSetFilters as parameters to enhance flexibility by allowing customizable change
do n ' t swallow guest exception in polyglotlauncher .
[ ec2 ] use system property ` ` opt _ out _ tweet ' ' instead of ` ` env _ out _ tweeting ' '
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for the class
refactor spacing logic in SpacesVisitor . java to use dropParentUntil for better clarity to improve code readability and maintainability by
# 827 - enh : add ` ` copy ' ' method to ebean - cache . copy ( boolean nearcache )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` to verify that the hidden border is not visible on flo
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and ` ProjectCommand . java ` to
updated KucoinExchange to use PROD _ URI instead of LIVE _ URI and improved exception handling logging to enhance clarity and
reformatted code for better readability and consistency in SpringResourceAccessor . java to improve code clarity and maintainability
updated unit assertions for MICROWATT _ PER _ SQUARE _ CubicMeter and MICROWATT _ PER _ S
updated the method for retrieving the vertex mask from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` to ensure
deleted the Tls12SocketFactory . java file to remove obsolete code to streamline the codebase
update texbibentriesresolver to use citations . distinct ( ) instead of filter
added a method to check if the runtime environment is in Robolectric legacy mode to ensure compatibility with Robolectric ' s legacy
added a condition to return a specific DoubleDataType for FirebirdDatabase to ensure proper handling of double precision in Firebird databases
added null checks for ` dataSource ` and ` transactionManager ` before initialization to avoid potential NullPointerExceptions when ` dataSource ` is null
add a new package - info . java file for the unit test stubs module to facilitate the usage of stubs in the
updated the timeout parameter from " www . google . com " to " 127.0 . 0.1 " in OutputStreamTest . java to
no effective change - code cleanup - use try - with - resources
updated TermScorer constructor to conditionally set score mode to NONE to ensure correct scoring behavior based on score mode requirements
[ dataflow ] fix npe in dataflowmetrics # setmetrics ( null )
cloudstack - 4892 : fix npe in uservmdaoimpl . getvirtualmachines ( ) .
updated DynamicPartitionPruner to find the target ObjectInspector using a specific column name instead of a generic field type to enhance flexibility by allowing
added a method to remove build artifacts and its associated tests to improve the management of build artifacts during execution
added checks for the selected row before setting the row selection interval in ThrustCurveMotorSelectionPanel . java to ensure that the table
update j2kt test to use assertthrowsarraystoreexception instead of assertthrows
refactor PropertySource class for improved clarity to enhance maintainability and readability of the code
added support for environment name and user agent in HttpClientBuilder and HttpClientConfiguration classes to enhance flexibility in user agent management by allowing customizable user
refactor session creation and creation logic in MemorySessionStore to use a computeIfAbsent method to improve code readability and maintainability by encapsulating
updated assertions in IssueTest . java and changed results type from Set to Object in Reporter . java to improve clarity of test results and enhance
updated ByteArrayDataSource initialization to handle null content type to ensure proper content type is set to " text / plain " when the file content type is
add activationrequestdenied event to allow character to send activation request .
fix checkstyle issue in graphapplet . java
added a new method ` updateTaskViewsSnapshotRadius ` to ` RecentsView ` and updated its implementation in ` TaskView ` to
added logging functionality and modified schema and revision setting in StaticMicroserviceVersions . java to improve traceability of Swagger generation for 3rd party services
changed return type of ` put ` and ` put ` methods from void to int in ` ArrayMap . java ` to allow for more flex
updated KafkaContainerCluster to use a startup timeout and improved brokers stream handling to enhance the configuration flexibility and maintainability of the Kafka container
http : / / issues . apache . org / jira / browse / amq - 4896 - add retry option to send back
refactor header addition logic in StaticServerHttpHeadersWriter to use a loop for better readability to improve code clarity and maintainability by
added package access check for EventListener in EventListenerList . java to ensure proper access control for EventListener classes
added a custom adapter class and modified the onCreateView method to utilize it to enhance the functionality of the ApplicationsFragment by providing a
added null checks for the task parameter in the applyIcon method to ensure proper handling of null values for iconView and task
refactor DownloadStateCursor to use try - with - resources for better resource management to improve resource management and prevent potential memory leaks
refactor insertStatement initialization and improve type safety in BaseSqmToSqlAstConverter . java to enhance code clarity and maintainability by
added JUnit test annotations and refactored execution context handling in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegration
added a Future for polling in DataInputStreamWithTimeout . java and modified variable types in DataInputStreamWithTimeout . java to improve concurrency handling and ensure proper
added a new constant ENABLED _ TS and implemented ToposortBasedDepsAwareExecutor in VersionTargetGraphMode and VersionedTargetGraphCache to enhance
refactor UpgradeCatalog150 . java to improve code structure to enhance maintainability and readability of the codebase
renamed ` testNet3 ` to ` testNet ` and ` oldTestNet ` across multiple files to clarify the purpose of
only update the selection of the first geos element when there be only one geos
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness
updated HdfsIndexOutput to extend BufferedIndexOutput and modified related methods to improve resource management and enhance error handling during index closure
pdfbox - 4892 : do n ' t set clip when there be no path
removed synchronization around local address assignment in SocketChannelImpl . java to simplify the code by eliminating unnecessary synchronization
refactor TemplateTransformer to use a new method ` addToRow ` for adding values to the row to improve code readability and maintainability by
added a method ` isWindows ( ) ` to check if the operating system is Windows and updated file renaming logic to improve code readability and
updated character encoding constants in Code39Reader and Code39Writer to use a constant value to improve code readability and maintainability by using a
added a boolean variable ` hasExecutedUnexpected ` and modified the logic for handling unexpected return types in ` NodeGenFactory . java ` to improve
removed unnecessary check for stored fields in IndexingChain . java to streamline the code for better readability and maintainability
fix ( sql ) : fix parsing of nanoseconds in where clause
remove redundant conditional check for postedRunnableStacktraces in LwjglCanvas . java to streamline code by eliminating unnecessary conditional
updated the description of the AbstractGCSProcessor class to improve clarity to enhance readability and maintainability of the documentation
replaced ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity and consistency in
changed directory parameters from ` null ` to ` " single " in ` CachingDirectoryFactoryTest ` and ` RAMDirectoryFactoryTest ` to
refactor FaultTolerantChunkProcessor to streamline data handling and add filter count increment functionality to improve code clarity and maintainability by
updated method visibility and added tab initialization logic in FileWithTabs . java and T4994049 . java to improve code clarity and
replaced multiple conditional checks with a single call to assumeTrue ( TerminalFactory . get ( ) ) in ConsoleReaderTest . java to improve
reformatted code for better readability and maintainability to improve code clarity and maintainability
updated calculations for newSelection and adjusted velocity calculation in AllAppsView . java to improve accuracy of selection calculations and ensure correct velocity calculation
do n ' t notify client on result availability when initialize threadinfo
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog . java and modified connection handling in DbConnectionDialog . java
replaced a hardcoded buffer size with a static final constant WRITE _ BUFFER _ SIZE and updated related method calls to improve code readability and
refactor SegmentInfo handling in DocumentsWriter and add a test for no docs index in TestIndexWriter to improve code clarity and ensure
fix armaturemodifier validation for dvert = deformVERTices
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
replace direct instantiation of UnsupportedOperationException with a custom implementation to avoid filling in stack trace to improve error handling by avoiding unnecessary stack trace filling
replaced the calculation of label height with a stream - based approach using getLineHeight ( ) to improve performance by reducing the number of lines
refactor RotationTouchHelper to accept a DisplayHolder parameter to improve flexibility by allowing dynamic display management
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 576 : avoid
refactor ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ` instead of ` Long . valueOf ` and update state current trace
added a new test method ` testSmall ` and ` testBig ` in ` ServerDatagramConnectorTest . java ` to validate the functionality
updated the method call in TestSqlEntityProcessorDelta . java to correctly handle the last occurrence of the country code to ensure accurate validation of the
refactor Cache class to improve cache management to enhance performance and maintainability of cache operations
replaced instances of ` e ` with ` ev ` in ` ResourceSetRegistrationEndpoint . java ` and updated scopes in ` reqired `
removed unnecessary imports and modified IndexSearcher initialization in TestUnifiedHighlighterTermVec . java to improve code clarity and maintainability by
added a new JFrame and JScrollPane to display the number of rows in a GcodeTable to facilitate the functionality of the
updated WEBAPP _ CONNECT _ TIMEOUT to use configuration ' s connect timeout instead of a hardcoded value to improve flexibility in connection timeout handling
updated multiple Java files for consistency and clarity to improve code readability and maintainability
refactor TestMediaService to improve code readability to enhance maintainability and facilitate future updates
added a new constant for the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in the Messages . java file to
add a new file marketsprinttool . java for printing market information from bisq to facilitate debugging and reporting of currency information
improve error message in endpointaddressinterceptor for invalid hostname character
added registerSecurityKeyStart and registerSecurityKeyComplete methods in AccountProxy , HttpAccount , and HttpAccount classes to enhance security key registration functionality
refactor ServerSpanThreadBinder class to improve code readability to enhance maintainability and facilitate future updates
updated user pointer retrieval from ` getUserPointer ( ) ` to ` userData ( ) ` in ` BulletPhysics . java ` and
added a new property " the _ geom " and " number " to the Csv2Shape builder to enhance the documentation for geogebra
replaced callGasWord . longValueSafe ( ) with gasCost . longValueSafe ( ) in VM . java and removed unused imports in Program
refactor Parameters class to improve code readability to enhance maintainability and facilitate future updates
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to ensure piePlot does not ignore null values
refactor bundle loading logic to simplify loading logic to improve code readability and maintainability
updated the character assignment from ' _ ' to ' - ' in TaggedPdfReaderTool . java to ensure proper formatting of the character
add ` ` allowduringediting ' ' property to executescriptaction and a freeplaneaction
added a userModified variable to the LoginSamlAuthenticationProvider class to ensure the user is modified after authentication
added a new file TestSealedObjectNull . java that tests SealedObject equality with null encryption to ensure that SealedObject objects are
renamed the method ` onOpen ` to ` setResponse ` and ` succeeded ` in ` ConnectPromise ` to improve clarity and consistency in
added a static set for SNOW in the BlockEventListener class to support compatibility with server versions 1.17 and above
added a lastTradeId field and modified Trade creation in CryptsyAdapters , CryptsyPublicTrade , and CryptsyAdapter
added error handling for closing the HMS connection to ensure proper resource management and avoid potential memory leaks
fix ( griffin ) : use random seed for glowserver
added a new device profile for the Nexus 5 in the DynamicGrid class to enhance the functionality of the Nexus 5 device
2 . x : fix flowable . refcount ( ) . disconnectionif ( ) throw npe
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve compatibility with ReflectUtil ' s newInstance method
added support for WHITESPACE _ AROUND _ TEXTUAL _ OP in formatting tokens and updated related logic to enhance text formatting capabilities and improve code
added checks for non - empty and non - empty project files in SaveTask . java and updated test cases in SaveAndLoadTaskTest .
added synchronized keyword to several method declarations in MLogWriter . java to ensure thread safety during method execution
updated the ` add ` method in ` SmtpManager ` to handle ` MutableLogEvent ` to ensure proper serialization of ` LogEvent `
replaced LengthLike with NonNegativeLengthLike in the PADDING constant to ensure proper handling of negative lengths in property builders
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` in multiple resource classes to streamline
improve exception handling in methodirbuilder . buildexceptionentries ( ) for jimple catch
updated string concatenation for build tools in AndroidPlatformTarget and improved error message formatting in JUnitRunner and AndroidPlatformTarget to enhance readability
increased cacheSize from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
added a condition to check if ' start ' is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory .
added a null check for the keystore before loading it to avoid potential NullPointerException when loading the keystore
updated the serverSocket initialization and assertions in UpstreamCheckUtilsTest . java to use a local port instead of a hardcoded value to improve
ggb - 2323 fix panel dim in dockmanagerw . close ( )
added conditional checks for ARB compute , geometry , and tessellation shader extensions in GLRenderer . java to ensure compatibility with OpenGL
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future updates
do n ' t trigger save all notification if project do n ' t exist
updated ZQLJobManager to use UTF - 8 encoding for JSON output to ensure proper handling of file encoding in JSON output
added a check to ensure args length is non - empty before checking if it is an instance of Table to avoid potential ArrayIndexOutOfBoundsException
refactor header decoding to use a constant for header values to improve code readability and maintainability by reducing hard - coded values
mark multiple @ Deprecated annotations in GenerateJavaSources . java and Config . java to indicate that these classes are outdated and should no longer be used
removed debug log statements from DerbyDatabase . java to clean up the code and improve readability
( chore ) camel - cep : add timeout to cep test
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance and readability of the code
updated the handling of the " ROLLBACK " operation in HubUpdater . java to check if the Liquibase hub mode is already
added new constants for versioning success and failure keys in Constants . java and a corresponding test in TestDDRExtensionGeneral . java to enhance
updated the logging mechanism for adding fonts in FontFamily . java and added a new DebugFonts . java file to improve clarity of error
updated import statements in ALPNNegotiationTest . java and added HTTP _ 1 _ 1 handling in NegotiatingServerConnectionFactory . java
added RateControl import and set NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to enable HTTP / 2 rate control for
added a new Java file ` Test6741426 . java ` that implements a JComboBox and JTextField to demonstrate the
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest from " Could not verify the CSRF token because no token was found to
added null checks for dbMgdPath and dbExtPath in multiple conditional statements to prevent potential NullPointerExceptions when dbMgdPath and db
added package declaration for S3CopyObjectRequest . java to enhance code organization and maintainability
refactor setup methods in SettingsActivity to remove accentColor parameter and use viewThemeUtils for setting preferences to simplify code and improve maintainability by
updated error message in TemporaryFolderUsageTest to include ' fileAtRoot ' instead of ' temp1 ' to improve clarity of error reporting
replaced instances of ` ClassTypeInformation . from ( Object . class ) ` with ` ClassTypeInformation . MAP ` and ` ClassType
add check for empty or null address in clientnetworkconfig . addaddress ( string , null )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to ensure compliance with the latest certificate requirements
change return type of compute methods from void to int in multiple Java files to provide a consistent way to return the number of output batches instead of
added a check to ensure the menu is only set when the popup is clicked or showing to improve user experience by preventing unintended actions
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added two new test classes , FinalizerInfoTest . java and HeapInfoTest . java to test the initialization and execution of the MyObject
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
refactor the handling of compensation proposals to use Optional for custom addresses to improve clarity and maintainability of the code by reducing
refactor StringSubject class for improved readability to enhance maintainability and clarity of the code
added JUnit Ignore annotation to byte array initialization in BatchValidateSignContractTest . java to temporarily disable tests that are not ready for execution
updated method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
replaced occurrences of " @ " with " from : " in the saveRecentQuery method call to ensure the query matches the " from :
removed conditional check for rebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary complexity
added a new post mapping for importing accounts in YubiKeyAccountRegistryEndpoint to enable users to import an account from the YubiKey registry
updated shader parameter names and improved asset retrieval logic in multiple classes to enhance clarity and maintainability of material data handling
added null checks for ` cnt ` in ` paintOnTopLoop ` and adjusted padding logic in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future updates
added a null check for subName before setting the caption in HierarchyBase . java to ensure the caption is set only when subName is
changed data flag from IMMOBILE to GRAVITY in EntityItem . java to align data flag with the correct gameplay behavior
added a null check for the ' sim ' variable and modified conditional checks in CustomExpression . java to enhance robustness by preventing potential NullPointerException
replaced the requestBlindVoteListFromNetwork method with a call to sendRepublishRequest in VoteResultService . java to streamline
added a new test case in PostgresTest . java to verify the functionality of the Postgres data source with multiple threads to ensure that the
replaced string literals with single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintainability by using
refactor line splitting logic to use a constant for improved readability to enhance maintainability and maintainability of the code
truffle : make singleimplementor snapshot thread - safe .
added null checks for query and filter before adding them to the list to prevent potential NullPointerExceptions when excluding main queries
fix ( core ) : add support for merged bridge ( # 1748 )
replaced ` printHelp ( ) ` with ` error ( " A command must be provided " ) ` in ` Ktab . java `
added a check to return the output file if it exists in ANGLELoader . java to ensure that the output file exists before proceeding
added date parsing logic for ` T ` , ` plus ` , and ` minus ` in ` DateConverter ` to ensure correct parsing of date
added assertions and query functionality to retrieve a Post by its slug in SpringDataJPALockTest and PostRepository classes to ensure that the Post
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added validation for ` dba
added a static block to set a SimpleClientHttpRequestFactory for HTTP requests to facilitate the use of the SimpleClientHttpRequestFactory for
added assertions to verify the existence and name of a source file in SourceTest . java to ensure correct file existence checks and correctness in file
remove hard - coded ` ` graalvm . version ' ' system property
added checks for access and refresh token validity in NewAdminBootstrap . java to ensure that the validity values are set to null if they are not
updated the return statement to conditionally return the Android API version if it is greater than zero to ensure compatibility with Android API versioning based on
replaced instances of ` this . placeholderPrefix ` and ` this . valueSeparator ` with ` placeholderPrefix ` and ` placeholderSuffix ` to
updated string formatting in Resources . java for clarity to improve readability and maintainability of the code
replaced ` Thread . sleep ` with ` CountDownLatch ` and ` CountDownLatch ` for managing collections in ` ZkSolrClient
added BigInteger import and added BigInteger class to simpleTypes in MongoMappingContext . java to enable BigInteger conversion functionality in the application
added a condition to check if the button text equals the current view in the toast display condition to ensure that toast is displayed only when the button
added a condition to check if MEncoder does not exceed sync settings to ensure compatibility with MEncoder settings that do not exceed the buffer limits
increased the maximum event loop count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more than 15
changed access modifiers of several classes from package - private to protected and refactored feedback handling in the AdaptiveWindowTinyLfuPolicy
refactor ExternalFileField to use a sorted field retrieval method and add a new ExternalFileFieldSortTest class to enhance file sorting functionality and
update error message from " Invalid URL " to " Connection error " in FetcherException to improve clarity of error reporting for connection issues
added handling for event source in OpenRocketSaver , DocumentConfig , and RocketComponentSaver classes , and updated FlightData
changed the visibility of the check method from private to protected to allow subclass access to the check method for better encapsulation
added handling for SynchronizeFileOperation in FileActivity to improve user experience by providing feedback when a sync file is aborted
updated the URI construction in ThumbnailsCacheManager to use URLEncoder for PNG files to ensure proper URL encoding for image files in the application
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions when the client
updated the total variable from 0 to 1 and modified the calculation of value in IntHashSet . java to ensure the total value accurately reflects
added conditional handling for lock timeout in FeedRefreshUpdater to improve error logging for lock timeout scenarios
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve code readability and maintainability by
refactor edge creation logic in LatLonTree . java to use an array for improved clarity to enhance code readability and maintainability
added import for IOUtils and improved resource management in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix a bug in the bibtex parser that cause the comment to be corrupt .
added strict parameter handling and corresponding tests in Main and MainTest classes to ensure proper parsing behavior when strict mode is set to false
[ micronaut ] always invalid constraint on @ constraint annotation .
camel - 14263 : camel - http - should use http4 instead of http
added a call to waitForThingsToLevelOut with a timeout of 30 seconds to ensure that the test has sufficient time to complete before proceed
removed unnecessary check for Integer . MAX _ VALUE in UBJsonWriter . java to streamline code by eliminating unnecessary complexity
refactor ApplicationTest class to improve code readability to enhance maintainability and facilitate future development
replaced String concatenation with StringBuffer for storing connection details to improve performance and readability of the code
changed method signatures from Type to RoboType across multiple files to align with the new naming conventions and improve code clarity
[ java ] return action . abort when a recording be complete .
added checks for ' cacheKey ' and ' cacheLookup ' in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor .
added a new file PutfieldError . java that demonstrates the use of IncompatibleClassChangeError to demonstrate the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5587 , do n
fix ( memtable ) : enqueue memtable after memtable _ flush _ after _ min / memtable _ flush _ after _ mill
replace usage of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files to
added a new method ` encodedLength ( ) ` to the Flyweight class to ensure proper handling of encoded length in the Flyweight
refactor TestMethodResultMapBuilder class to improve code readability to enhance maintainability and facilitate future development
add check for java . lang . integer in findnullderef .
[ hotfix ] [ runtime ] fix nullpointerexception in tasklocalstatesnapshotimpl
updated string return values in Utils . java for consistency and clarity to improve readability and maintainability of the code
refactor conditional checks in Utilities . java and FloatingIconView . java to ensure proper handling of DeepShortcutView instances to improve code cl
changed the type of the ` validator ` variable from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use it to improve code organization and maintainability by centralizing
added a check for registered events before registering sticky in ThumbnailView . java to ensure that sticky events are only registered if they are not registered
added a check for ASCII - only normalization in NormalizerBase . java to ensure correct normalization behavior based on character length and length limits
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added error handling for update statistics SQL execution in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the SQL execution fails and
( chore ) camel - core : use junit4 for camel - cometd test
updated method references from ` USE _ CSS ` to ` OK ` in multiple files to clarify that CSS attributes are not allowed in 5
added a line to write a newline in HtmlCoreReport . java to enhance the readability of the HTML output within the report
updated the calculation of ramBytesUsed to handle null scores case to improve robustness by avoiding potential NullPointerException when scores are null
added a new class ` StringHolder ` and modified ` CustomTypeAdaptersTest ` to utilize it for custom serialization and deserialization of ` String
added extra data setting in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure that extra data is correctly utilized from mining parameters
added a static final variable ` numArgs ` and modified the argument handling in ` DependencyParser . java ` to include the number of arguments to
camel - 14263 : camel - jbang - add miss license header .
updated variable name from ` configedThreshold ` to ` configuredThreshold ` and introduced a constant for default delay in ` MigrationRuleListener ` to
change parameter name from ' part ' to ' partOrList ' in multiple classes to improve clarity and consistency in naming conventions
updated the resource namespace from " / org / drools / planner / core / statistic / twitterbootstrap / " to " twitterbootstrap / "
removed the basicCategory method implementation from SpanishTreebankLanguagePack . java to simplify the code and improve readability by eliminating unnecessary
hhh - 14263 - deprecate entityloader . loadbyuniquekey ( ) in favor of entityloader . load ( ) .
hbase - 25836 fix concurrentmodificationexception in regionserverflushtableproceduremanager and regionserversnapshotmanager
fix for issue # 249 : setsize ( ) do n ' t call super . setsize ( w , h )
fix typo in hikaripool . fillpool ( )
removed multiple calls to assureMatchVersion ( ) in various filter factory classes to ensure that the ' luceneMatchVersion ' parameter is correctly
http : / / code . google . com / p / mybatis / issues / detail ? id = 576 : executablemethodwriter
danielwagnerhall : do n ' t try to parse comma in drl
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
add a check for negative payload length in WsFrameBase . java to ensure proper error handling when payload length is invalid
move publishsubscriptionchannel from ' channel ' to ' dispatcher ' , not ' channel '
updated executionId type from String to Long across multiple classes to allow for more flexible execution ID handling
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 558 .
removed log statement for overlay version logging in SolrConfig . java and added import statements in SolrConfigHandler . java to improve logging clarity and
updated the delayUntil calculation in FileSyncAdapter . java to increase synchronization delay based on current time to avoid too many automatic synchronizations
[ hotfix ] [ test ] fix typo in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` method to use ` Path ` instead of ` String ` for measurementId to improve code clarity and
updated URL handling in DefaultPackageScanClassResolver and added a new test case in DefaultPackageScanClassResolverTest to improve URL resolution accuracy and
[ flink - 11919 ] [ table - planner - blink ] [ table - planner - blink ] add utility to extract
added a new file SpringSecurityAuthenticationSource . java to implement security context handling to provide a way to retrieve principal and credentials from LDAP user details
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer SDK versions
replace auto suggest dialog with SimpleFormDialog for custom filename selection to improve user experience by providing a clearer suggestion for custom file names
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure
removed the ' collection . getName ( ) ' parameter from the ` stream ` method in ` MongoTemplate . java ` to simplify the method signature
updated zoom factor and scaling logic in MapOverviewImageMouseHandler . java to improve accuracy of zoom calculations and ensure proper type casting
added DefaultSimilarity and LMDirichletSimilarity to the KNearestNeighborClassifier constructor and updated related tests to utilize it to
replaced SolrQueryParser with a new ConstantScoreRangeQuery in LukeRequestHandler . java to improve query handling by utilizing a new
replaced ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity by using a
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated mtu request handling in ShadowBluetoothGattTest and modified mtu request method in ShadowBluetoothGatt to ensure correct mt
refactored the servlet input stream creation into a separate method ` createServletOutputStream ( ) ` to improve code readability and maintainability by
added logging for unsatisfied link errors in VoskSTTService to improve error handling and provide clearer logging for unsatisfied
replace HashMap with ConcurrentHashMap for processing chains in ChannelProcessingManager to improve thread safety for concurrent access
updated Japanese and Chinese resource strings in Japanese and Chinese resource files to improve clarity and usability of the user
updated condition from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and modified test assertions in ` JDBCType
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety when accessing shared resources
replaced the ` isScreenReaderActive ( ) ` method with ` AccessibilityStateTester ` for managing screen reader status checks to improve
added a new command behavior check for scrolling in the MenuBar and updated the SideMenuBar to remove the closeButton in SideMenuBar to
added handling for WampClient disconnect status and error handling in PoloniexManualExample . java and WampStreamingService . java to
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java to ensure energy limit is greater than or equal to zero
renamed variable ` url1 ` to ` javaUrl ` and updated related logic in ` PostmanJsonBuilder . java ` and ` Url
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to provide access and setter for the namespace prefix reference
added a new static final constant ` ONE _ MINUTE _ MILLIS ` and refactored the date comparison logic in ` TestRange ` to
added a check for the presence of Jetty Solr runners in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader
added pricefeed field to tradeschartsviewmodel to allow customization of trade currency code
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to set default values to -
refactor variable names and logic in NativeString . java to improve clarity and functionality to enhance code readability and maintainability by using a
added file download functionality to FileDownloader to enable downloading and saving files in the application
rename the variable ` logChannel ` to ` raf ` and update its length in ` MappedRawLog . java ` to improve code clarity
added a method ` checkIfRegistryRunning ` in ` TestLibrary ` and a retry mechanism in ` FileUtils ` to check if a registry is running
removed unused imports and added startLoading ( ) method call in Quick3dMain . java and TextureTest . java to streamline code and
removed multiple private fields and added multiple @ SuppressWarnings annotations in multiple Java files to improve code clarity and suppress unchecked warnings
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerException when instances are null
phoenix - 1084 , phoenixdatabasemetadata . settransactionisolationlevel ( ) should throw an exception if transaction
added transaction attribute handling in AbstractStepFactoryBean and improved error handling in ItemOrientedStep and SkipLimitStepFactoryBean to enhance
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and refactored CasManagementSecurityInterceptor to enhance security interceptor
removed the visibility of the add category menu item in ListFragment and updated the list addition method in NavigationDrawerFragment to improve user experience by allowing
renamed the method ` cancel ` to ` cancelMatchingOperation ` and updated its usage in ` FileDisplayActivity ` to improve clarity and
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve clarity and consistency in text size management
added validation for the fact before updating the temporary fact in ConstantAnalysis . java to ensure that the fact is valid before processing to avoid potential errors
refactor multiple Java files related to DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser to improve code organization and
replace direct return of spans with a new ArrayList instance to ensure that the spans list is immutable before use
refactor lock handling in Liquibase . java for improved readability to enhance code clarity and maintainability by eliminating
added a method to set the revision in MicroserviceVersions and modified instance cache checker to set the revision to null to ensure proper handling of micro
updated foreign key and index handling in TableRetriever and AbstractRetriever to improve clarity of foreign key and index assignments to enhance readability and maintain
( chore ) camel - aws2 - s3 : add unit test base on user forum issue
removed currency pair handling from getBitstampUserTransactions method in BitstampAccountService and added exception handling in BitstampAccountServiceRaw to streamline
added error handling for retrieving component instances in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
do n ' t push a request if the remote setting be enable .
refactor LegacyAddress comparison logic to use BufferedReader for reading data to improve performance and readability of test cases
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor notification handling in NotificationsActivity and DrawerActivity to improve code readability and maintainability by encapsulating push notification setup logic
added debug logging for channel closure and improved error handling in NettyAsyncHttpProvider . java to enhance debugging capabilities and ensure proper resource management
refactor LDAP password policy checks to use ` StringUtils . isEmpty ( ) ` for better readability to enhance code clarity and maintainability by
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to PHOENIX - 2840
nifi - 1744 : add timezone support to the aboutdto to be able to specify the timezone of the NiFi
refactor boundaries handling in Splitter and StorageService classes to improve clarity and functionality to enhance code readability and maintainability by reducing
simplified the assignment of child and bscc variables in BeanContextSupport . java to improve code readability and reduce unnecessary exception handling
added synchronization around the addition of a circuit to activeCircuits in CircuitManagerImpl . java to ensure thread safety when adding a circuit to the
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to simplify error handling by using IllegalStateException instead of GdxRuntimeException
[ hotfix ] [ runtime ] move sink to sourcerunner and pollablesourcerunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy for improved clarity to enhance maintainability and readability of the code
implement geofunctionfreehand , geofunction , geofunction , geofunction , geofunction , and geofunction
removed unnecessary whitespace in CasRiskBasedAuthenticationEvaluationStartedEvent constructor to improve code readability and maintain consistency
refactor database connection handling in ` SchemaCrawlerMain . java ` and introduce a ` execute ` method in ` Executable . java ` to
fix default tl version for jdk16 and jdk18
corrected the spelling of " values " and " labels " in IllegalStateException messages to improve clarity and consistency in error reporting
modified audio stop logic in MediaManager . java to handle cases where mCurrentAudioQueuePosition is zero to ensure correct audio stop behavior when no audio
removed conditional check for debug logging in HttpConnection . java to simplify logging output by eliminating unnecessary conditional checks
added support for recognizing JPA transient fields in JpaPersistentPropertyImpl to ensure the proper handling of transient properties when determining persistence behavior
added assertions to verify the correct version of HDP - 2.2 . 0 in UpgradeResourceProviderTest to ensure compatibility with the latest version
truffle : make eval method return object instead of symbol
made the ` isBinaryType ` method public and updated logging statements in ` Proxy . java ` and ` SampleResult . java ` to
updated the configuration key for TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from " hive . te
refactor JavaProblem and related classes to improve error handling and priority management to enhance code clarity and maintainability by reducing redundancy
replaced ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` , ` BloomFilterHandler ` , and
replaced hardcoded newline characters with a dynamic line separator in TableWriterTest . java to improve code readability and maintainability by using a
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added a boolean variable ` ownsTexture ` to ` ParticleEffect ` and updated its usage in ` ParticleEffect ` and ` Particle
added LDAP configuration options to HiveConf . java to enhance security by allowing custom LDAP queries
datacatalog : update license year for new datacatalog api
refactor InputMethodManager usage in DetailActivity . java for improved readability and maintainability to enhance code clarity and maintainability by
added a test for converting primitive data type to a map of primitive data type to a object in the DataTableTypeRegistryTableConverterTest . java
updated the size calculation from 100 , 500 to 10 , 50 in TestFileSystem . java to adjust the file system ' s size for better resource
updated error messages in ContentTypeManager . java for clarity to improve user understanding of error reporting for better debugging
modified the ` dropSequences ` method implementation across multiple database classes to implement the ` MigrationFailedException ` interface to ensure proper exception handling for database operations
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions when the status is null
added a variable ` f ` to the ` createField ` method call in ` DocumentBuilder . java ` to ensure the variable is properly initialized
fixed npe in hierarchicalicon when the map be not active
added a test method to verify the upsert functionality for non - existing objects to ensure that the upsert function correctly handles non - existing objects and returns
refactor calculations in RowIndexSeekerV1 , ByteBuff , Bytes , and BoundedPriorityBlockingQueue to use ( ( - low )
added ` recordLaunch ` method to ` Launcher ` and ` Stats ` classes and modified intent handling in ` AppsCustomizePaged
refactor drawing and disposal of the graphics in JavaSEPort . java to improve rendering efficiency and resource management
update instructorfeedbackresultspagedata to add current team to the receive team list
added a check for zero player ' s inventory ID in the Inventory class and implemented a test for ID generation to ensure the player ' s inventory
added a conditional check for ` found ` before breaking the loop in ` ConfigDescriptionRegistry . java ` to ensure that the loop only terminates if
updated return type handling in multiple parser visitor classes to ensure consistent handling of return type annotations across different parser visitors
added null check for the " blended tiles " property in TileMapRenderer . java and initialized it in TiledLoader . java to
removed unnecessary sunClasses list from the @ Classes annotation to streamline the class definition for improved readability and maintainability
refactor getArea method to include a null check and adjust calculation for the last and first coordinates to improve accuracy in calculating the average of
updated lockOnSync initialization and assignment logic in Throttler . java to improve clarity and maintainability of the code
pipe : fix pipeeventbus . registerhandler ( ) and pipeeventbus . modifyspeed ( ) to extend pipeeventitem . modifyspeed
increased the timeout duration in ZkController initialization from 1000 milliseconds to 1000 milliseconds to allow for more time for the ZkController initialization
added a new test method to verify the passcode functionality with client parameters in TokenMvcMockTests . java to ensure correct handling of OAuth2
added LengthFilter and KeepWordFilter constructors to brokenOffsetsConstructors in TestRandomChains . java to ensure correct initialization of broken offsets for different token
remove unused import from RandomPlaneTest . java to clean up the code and improve readability
use integer . tounsignedlong ( ) instead of integer . putint ( ) in llvmx86 _ 64bitVAstart
replaced the implementation of ` btCollisionObject ` and ` upcast ` with a call to ` btCollisionObject . getInstance `
added a new constant BUILD _ COPYRIGHT and updated the OPENROCKET _ URL in AboutDialog . java and updated the copyright year in
add getdistributedobjects ( ) method to jetclientinstanceimpl and add test
added debug print statements in FinSet . java and updated variable values in MassCalculatorTest . java to improve visibility into fin and inertia
updated memory semaphore initialization from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to align memory management with
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified method signature in CreateAlignedTimeSeriesPlan . java to
improve error message when delayed payout tx be not active
updated JsonLoaderTest to use a new JSON method and added exception handling for big integer values to improve JSON parsing accuracy and ensure proper exception handling
updated the required capacity check in ObjectSet . java from 1 to 0x40000000 to ensure that the required capacity is within a valid range
added specific imports for CachedRow , DatabaseSnapshot , and JdbcDatabaseSnapshot , and modified data scale handling in ColumnSnapshotGenerator . java to enhance
removed the @ AddToRuleKey annotation from multiple fields in AppleTest . java to simplify the code by removing unnecessary annotations
added exception handling for SecurityException in FileHelper and TextHelper classes to improve robustness by handling potential security exceptions during query execution
added a new constant ` StyleWithMultipleAttributes ` and corresponding unit tests in ` ShadowThemeTest . java ` to support multiple attributes in the
update sheet name check in HSSFWorkbook to use sheets . size ( ) instead of a hardcoded value to improve accuracy in sheet name
changed the method from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct color is used for the account account
added a null check for replyHandler in DefaultEventBus . java and simplified the path resolution in DefaultPlatformManager . java to improve robustness
added binaryCollationName configuration to MariaDbDbmsType , DbmsType , and FilterSortedSkipOptimizer classes to enhance database collation
added a new method ` whenType ( Class < T > treeType ) ` to return an Optional < T extends Tree > to enhance type
refactor navigation repository handling by introducing a method to retrieve user view destination to improve code readability and maintainability by encapsulating navigation logic
updated the response to return a temporary redirect for the application settings service to improve user experience by providing a redirect to the application settings service
[ flink - 20663 ] [ kinesis ] improve error message when deserializer be non - serializable
updated multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor ZkStateReader initialization and shutdown logic in LeaderElectionTest . java to ensure proper resource management and prevent potential memory leaks
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
refactor the read method in ProxyHandler to use a dedicated read method to improve code readability and maintainability by reducing redundancy
replaced instances of ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to improve
modified the ` prepareStreamsToUpload ` method to return a boolean and updated its logic to handle cases where the action is not present to improve
updated order comparison logic in AbstractConfigLoader and modified configuration model values in TestMicroserviceConfigLoader to ensure consistent order comparison and improve default values
added a new file PicOfDayAppWidget . java to implement functionality for managing app widgets in the application
fix internal lb _ service _ offering _ id when uuid be specify in config .
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil and modified join condition handling to improve query optimization and
added @ Deprecated annotation to multiple transformation classes to indicate that these classes are outdated and should no longer be used
added user and password options to NodeToolCmd . java and updated JMXConnector initialization to use environment variables to enhance security by allowing users to access
removed redundant initialization of BytesRef in Stemmer . java to streamline code by eliminating unnecessary object creation
updated logic in AppsCustomizePagedView . java to adjust the logic for applying widget information based on the number of widgets to ensure
ggb - 1193 : do n ' t show 3d view in web
updated rotation positioning logic in GcodeRenderer . java to ensure proper rotation positioning to improve rendering accuracy by preventing out - of -
added a new option ` WORKSPACE ` and updated the ` DAEMON ` initialization in ` OptionEnum . java ` and ` Terminal
updated the file path from " apt " to " html " in CLIManagerTest . java to reflect the correct file structure for testing options
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test reliability and maintain compatibility with the
updated OAuthConfirmationController to remove the AuthorizationRequest attribute and modify the confimAccess method to use a Map instead of a single AuthorizationRequest attribute
refactor assertions in HibernateIT to use a lambda expression for clearing cache hit counts to improve code readability and ensure accurate cache hit
refactor EventBusHook class for improved clarity to enhance maintainability and readability of the code
refactor MultiPaintEventTest class for improved clarity to enhance maintainability and readability of the code
changed the declaration of mNewScale from final to non - final to simplify the code by eliminating unnecessary final modifier
refactor SyncFactory class to improve code readability to enhance maintainability and facilitate future updates
added uniqueKey field handling in LukeRequestHandler . java to ensure unique keys are added correctly based on the schema field name
added round border color handling in BorderEditor and updated EditableResources to utilize it to enhance the flexibility of border color management in the
add compilerassert . neverpartofcompilation ( ) to binaryParserException and fix assertion .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging statements to ` GatewayRSocket ` , ` GatewaySocketAcceptor ` , and ` PingPongApp ` , and modified return
added a toolbar menu item click listener to the RecentChatFragment to notify users when a menu item is clicked to enhance user experience by providing
changed ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
replaced occurrences of ` add ` with ` push ` and ` pop ` in multiple test classes to improve clarity and consistency in scope management
updated API and API URLs to use " commons . wikimedia " instead of " testwiki " and updated EVENTLOG _ WI
refactor index initialization into a separate method ` setIndex ` to improve code readability and maintainability
replaced usage of ` Collections . sort ` with direct calls to ` Collections . sort ` across multiple classes to improve code readability and reduce
added DateTimePatterns to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for better user experience
added a call to clear the focus on the clicked view in DetailFragment . java to ensure the focus is properly cleared when the clicked view is
updated spinner selection logic in DescriptionsAdapter and improved null checks in SpinnerLanguagesAdapter to enhance user experience by ensuring the spinner reflects
updated time zone identifiers from " WSST " to " WSDT " across multiple language files to ensure consistency and accuracy in time zone identification
added native methods for managing global and weak access fields in FastGetField to enhance flexibility in field access handling based on the user ' s
added null handling for UNION and NULL types in ReflectData . java and updated corresponding tests in TestReflect . java to ensure correct handling of null
increase the timeout value for blocking bar in SedaBlockWhenFullTest . java from 300 to 1000 to allow for more time for
added a null check before setting the remapping R class in ResourceMerger . java to avoid potential NullPointerException when accessing resourceRemapper
hhh - 14663 add default constructor to hapifhirddialect ( ) and hapifhirdb
camel - 1774 : httpproducer should set the http connection close header when the endpoint be close . thanks to david
increased the socket timeout from 60000 ms to 120000 ms in BasicDistributedZkTest . java to allow more time for
added an assertion to verify the count for the final price cts of a ticket in BaseReservationFlowTest . java to ensure that the count
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class for improved clarity to enhance maintainability and readability of the code
fix nestablenode cast to thymeleaf . dom . nestablenode
planner - 1341 add enum check to the look - up strategy resolver and remove it from the shiftassignmentlist
[ java ] wait for cluster node to be shut down before shut down it .
change log level from warn to info in ELContextCleaner . java to provide more detailed logging for the removal of cached beans
set the content type of the webdav entry to application / octet - stream
added a method to get the queue size in LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure correct behavior of the ThreadPoolTask
fix distanceop to skip envelope that do n ' t match min distance
rename the variable ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity by using a more descriptive
removed the next ( ) method from PurgingPartitionIterator to streamline the code by eliminating unnecessary logic
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this method
added methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access to
added validation to ensure polygons have at least three points and updated localVertices assignment logic to ensure that localVertices does not contain at least three points
replace ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to utilize the new ObjectMappers class for improved
added null check for coeff in GeoImplicitCurve . java to prevent potential NullPointerException when coeff is null
updated ExternalNameRecord to handle Unicode names correctly and added a new test case for bug 47384 to improve handling of Unicode names and ensure
updated the description of the JMS destination message in AbstractJMSProcessor . java to improve clarity of the description regarding the destination type
added a boolean flag to control login prompts in LoginInfoEndpoint and updated related tests to ensure proper handling of login prompts based on identity
updated listener removal logic to use removeIf for improved clarity to enhance readability and maintainability of the code
added a switch case for the actionToggleSpin action in PieChartActivity to enable the chart ' s spin functionality to enhance user interaction
kvm : kill copy process if vdi uuid be not specify
hbase - 26969 skip table that have a namespace have quota
updated import statements in AndroidInput . java and added a resize method in AndroidInput . java to improve code clarity and facilitate
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the instantiation of ` JavaBeanDescriptor ` to enhance
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable tests that are always failing and blocking PRs
fix hopperhock # getentitieswithinaabb not work correctly . close # 489
added a new authentication dialog for SAML authentication in SsoWebViewClient . java to enhance user experience by providing users with detailed authentication information
refactor TestStressIndexing2 to improve document deletion and query handling to enhance code readability and maintainability while ensuring proper handling of term
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase in flink - 22559
replaced the use of ` get ( j ) ` with ` computeIfAbsent ( j - > new ArrayList < > ( j ) ) `
added serialization configuration for single - value as an array in DefaultEntityMapper to ensure proper handling of single - value values in JSON serialization
updated localization messages in VersionChangeLogs . java to include additional localization options
[ netbeans - 4892 ] add miss configuration logic . app . categories
feel : add support for ` ` instance of string ' ' and ` ` instance of string ' ' expression
nifi - 1776 : add mime . type attribute to gethttp response , add header to flowfile to the response
fix nullpointerexception when delete a resource with conditional update on the same resource
renamed ` exitButton ` to ` doneButton ` and updated related listener references in ` HelpActivity . java ` and ` SearchBookContents
refactor NatsConfiguration class to improve code readability to enhance maintainability and facilitate future updates
refactor invalidateStalePartition method to accept a MetastoreContext parameter and streamline partition invalidation logic to enhance flexibility in managing stale partitions
viewresultsfullvisualizer now use circular and unbounded fifo buffer when max _ results = 500
updated icon references from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to improve clarity and consistency in the
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java ` to ensure
updated test method names in MocksCreationTest . java for consistency and clarity to improve readability and maintainability of the test code
added a constant for data source name in CSVThirdEyeDataSource and changed the visibility of generateDetectionConfig method in YamlDetectionConfigTranslator to
increased timeout duration from 10 seconds to 30 seconds in awaiter calls to improve responsiveness by allowing more time for the phaser
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated listener from the ` DistBuildRunCommand ` and ` DistBuildSlaveEvent
vmware : fix bug when create vmware template with non - utf - 8 encoding
added a test for deposit workspace items without a workflow test and implemented a method to create a submitter group for workflow items to ensure that
added distinct ( ) method to classLoaderSupport to improve performance by avoiding unnecessary processing of classpath files
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unnecessary complexity
refactor argument handling in SpecificCompilerTool to use indexOf for better readability and maintainability to improve code clarity and ensure correct ordering of
added a null check before deleting the directory in HiveMetaStore . java and updated test cases in TestHiveMetaStore . java to ensure
updated asynchronous execution thread configurations and improved exception messages in multiple classes to enhance thread management and provide clearer context for asynchronous operations
added a try - catch block around the dismissDialog method call to handle potential exceptions to improve stability by preventing application crashes due to
refactor UpgradeResourceProvider to use a constant for task roles and update service retrieval logic to improve code readability and maintainability by centralizing
added a new variable ` diff ` to store the current configuration info in ` OperationSetTelephonyConferencingSipImpl . java `
reload the logmodel after update the logmodel . ( # 1748 )
added additional conditions to return statements in ChannelEndPoint . java to ensure proper handling of socket shutdown states
refactor SetNullableGenerator class for improved readability to enhance maintainability and clarity of the code
camel - 1641 : added option to reportincident to use cxf : / / example - reportincident / webservices
replaced multiple specific imports with a wildcard import and modified form handling logic in NettyRoutingFilter . java and FormIntegrationTests . java to
added @ ApiOperation annotations for " hello " and " helloWithValue " in multiple service classes to enhance API documentation for better clarity and
modified the ` update ` method in ` Lwjgl3Application ` and ` Lwjgl3Window ` to remove the lifecycle
updated FG _ FK color from 90 to 200 in UIUtil . java to improve the visual appearance of the FG _ FK color
set mp3 . required to false to disable mp3 audio support in the application
fix test failure in secondaryindexmanagertest
pmd : add ` ` unknown ' ' and ` ` eclipse version ' ' option for pmd plugin
[ hotfix ] [ test ] make customserializationitcase more robust
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future updates
added a method ` isCellEditable ` to the ` GeneralTab ` class that always returns false to provide a way to determine if a cell
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified message formatting to conditionally display unused dependencies
updated the vscales array from 2.0 to 0.85 in VocalTractModifier . java and VocalTractScalingProcessor
updated import statements for BaseScalarUdfTest in TestUDFRound . java and TestGenericUDFConcat . java to ensure consistency in
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing functionality
update testskeletoncontrolrefresh to use the new animComposer class instead of the old one
rename nodefilter to nodecountfilter to improve clarity and consistency in naming
updated the condition to check if the sync block size is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure correct
updated DebugExpressionParser to set the state of 366 and modified local variable types in DebugExpressionParser . java to improve clarity and correct
replaced the use of ` isEmpty ( ) ` with ` stream . anyMatch ( ) ` for finding dependencies in ` ExcludeDependency . java
replaced the ` tmp ( ) ` method with ` dst2 ( v ) ` and updated the ` lerp ( target , alpha
initialize ` args ` with a default value of ` null ` in ` GridHubConfiguration . java ` to ensure that the ` args ` array
updated the ` getLinkerArgs ` method to accept an ` ImmutableList < String > ` parameter and changed ` rustcFlags ` to `
[ 3.0 ] add support for travis and appveyor in test .
added configuration for DAG and external ID in TaskExecutorService and updated logging format in GenericUDTFGetSplits to enhance configuration flexibility and
removed unused import of java . io . File in TileAtlas . java to streamline code by eliminating unnecessary dependencies
refactor EscapeProcessingOutputStream to use AtomicBoolean for closed state management and improve error handling in GradleDaemonExecutor to enhance thread safety and
updated the ` validateQuery ` method to include additional parameters for error handling to improve error reporting by providing more context on validation failures
updated INDEX _ VERSION from 1 to 2 and refactored repository retrieval logic in LuceneExecutor . java to optimize index version and improve code
[ hotfix ] [ runtime ] add unit test for default kryo serializers
added null check before removing configuration properties and updated assertions in ` BlueprintConfigurationProcessorTest ` to enhance robustness by preventing potential NullPointerExceptions
refactor Boolean handling in MetaStoreDirectSql to use BooleanUtils for better compatibility to improve compatibility with MySQL ' Y ' / ' N '
added hideCustomizationDrawer ( ) method to mmm Launcher . java and ppp Launcher . java to improve user experience by dis
refactor TermVectorComponent and TermVectorComponentDistributedTest to use a constant for warning handling to improve code readability and maintainability by
added conditional logging for optimistic types and modified log level for compile job logging to enhance flexibility in logging based on user - defined optimistic
refactor Expect class for improved readability to enhance maintainability and clarity of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enhance Docker client configuration for unix socket access
added JUnit 5 @ Test annotations to CloseableDoSFilterTest and CloseableDoSFilterTest classes to indicate that these tests are flaky
camel - 1641 : reactivestreamsnofactivesubscribers should not throw illegalstateexception when stream have no active subscription
refactor vectorization logic to use ` convertMapWork ` instead of ` validateMRTask ` for better type handling to improve flexibility and
updated the superclass constructor calls in StringAppender and LogDivertAppender to include a new boolean parameter to enhance functionality by allowing additional parameters to be
fix npe in jmetertreemodel when guipackage be null
add linkage . isweak ( ) to allow linkage . isweak ( ) to be enable .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
add unit test for defaulttransactionthreadlocal . get ( )
added a check for invalid operation handles and improved error logging in HiveStatement . java to enhance error handling and provide clearer logging for invalid
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
camel - 15836 - camel - aws - secretsmanager : add unit test base on user forum issue
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed the exception message from the return statement in UserREST . java to simplify the error message formatting for better readability
added a boolean parameter to the ` fromContent ` method and modified the constructor to include a ` subTree ` parameter to enhance functionality by allowing
updated column width calculations in Sheet . java and added a new test method in TestHSSFSheet . java to ensure correct column width calculations
added configPath parameter to the Commands . less method call to enhance functionality by providing additional configuration options
changed the type of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter ` and ` Graph
updated the default SSHD image version from @ sha256 to 1.0 . 0 in TestcontainersConfiguration . java to ensure compatibility with the
added an assertion to check if hostId is not null in AgentManagerImpl . java to ensure that the assertion verifies that the hostId is
refactor GroupBy key generation logic to use BlockSingleValIterator for better clarity to improve code readability and maintainability by reducing
refactor test methods in TestMultiMMap to improve handling of EOFException during seek operations to enhance robustness and clarity of error handling in
refactor BCSiliconRecipes to use a more descriptive variable name and improve code readability to enhance code clarity and
fix typo in graphhopperconfigmixin . put ( )
updated visibility logic for child in CellLayout and refactored onDragExit method in Workspace to improve code readability and encapsulate drag exit
updated the rewrite function handling in ModifyRequestBodyGatewayFilterFactory and added a test for handling empty upstream requests in ModifyRequestBodyGatewayFilterFactoryTests to
updated visibility checks in ConstructorFinder , FieldFinder , and MethodFinder to include package accessibility checks to enhance security by ensuring only accessible fields are
changed logging level from warn to trace in LoggingHandler . java to improve logging granularity for better debugging
fix # 348 whitelistjars ( ` ` * . jar ' ' ) . scan ( # 348 )
added menu functionality for gallery images in GalleryActivity to enhance user experience by allowing users to open gallery images in the application
refactor MongoDBServiceFactory to use a singleton instance for local and remote services to improve flexibility and maintainability of the service configuration
added tests to prevent code formatting with final boolean values in InlineConstantMutatorTest . java to ensure correct behavior of code formatting with boolean values
added a Blackhole parameter to the decode method in RecordTest . java to enhance the decode method ' s functionality by allowing the blackhole to
fix : update gapic - generator - java with mock service generation fix ( # 489 )
( chore ) camel - knx : fix npe in dpt unit parsing
remove unnecessary call to dbManager . getWitnesses ( ) in ManagerTest . java to streamline the code by eliminating unnecessary operations
do n ' t throw prestoexception when jdbc be abort
removed the " stack " property from the script object and replaced it with getter and setter methods in NativeError . java to streamline stack management
added a check to return false if the path name starts with " . " in DrillPathFilter . java to ensure that the path is
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before running tests
change the NORMAL constant from 190 to 0x190 in HSSFFont . java to increase the border weight for better visual representation
changed ` fThreadGroup ` to be ` volatile ` and modified ` fLookForStuckThread ` to be ` fThreadGroup `
changed the return type of the getValue ( ) and setValue ( ) methods from final to non - final in ValueResultData . java to ensure
updated hash code and equality check in FuzzyQuery . java to ensure proper comparison of hash code and comparison logic
removed debug print statements from PushedResourcesTest . java to clean up the code and improve readability
changed return type of removeFile and removeDirectory methods from List < SharedRandomAccessFile > to void in SharedOpenFilesCache . java to simplify
updated the database Engine Driver version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest
updated the ` retrievePersonAttributes ` method to use a new ` HashMap < > ( 0 ) ` parameter and modified the principal creation logic to
change log level from info to warn in OpenWebNetBridgeHandler . java to improve logging granularity for better error handling
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple hash classes to improve clarity and consistency in
added null checks for ` storageManager ` and ` account ` in ` ThumbnailGenerationTask ` to ensure that ` ThumbnailGenerationTask `
updated condition in GroupSelectionQuery to check for count and tries instead of zero to ensure that the loop does not exceed the defined limit and prevent
added a new file Bug1933922 . java that implements a program program and program loading mechanism to demonstrate the use of
simplified comparison logic by removing unnecessary parentheses in multiple classes to improve code readability and maintainability
updated character range check from 33 to 32 in FileResolver . java to ensure proper character validation for control characters 0 - 31
added a call to requestFocus ( ) in mmm Display . java and ppp Display . java to ensure proper focus handling in the application
update test data for new instructor and ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
refactor confirmation handling in DetailFragment and implement onPause method in MainActivity to improve user experience by providing feedback when a confirmation message is not
added a new test method to validate schema query and fetch with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
refactor Process initialization to use ProcessBuilder instead of direct execution to improve flexibility and maintainability of the code
updated the method for incrementing the past window from getLocalHost ( ) to getByName ( " 127.0 . 0.1 " ) to
refactor subsystem assignment logic in Metrics . java to use a dedicated helper method to improve code readability and maintainability by reducing redundancy
added assumptions to skip tests on macOS in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on macOS
refactor jvmciversioncheck to use getrequiredproperty ( ) instead of getallproperties ( )
refactor Mockito class to improve code structure to enhance maintainability and readability of the codebase
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage functionality
updated method calls in BinaryParser , PlainTextParser , and ParsingExecutionContextView to improve code clarity and ensure correct source retrieval
added support for setting and getting the MultiPartFormDataCompliance enum in HttpConfiguration . java and created a new MultiPartFormDataCompliance enum in Request
added JDK - 17 support for GradleDistributionManager to ensure compatibility with JDK 7 and above
refactor type addition logic into a separate method ` addType ` in ` SnapshotControl ` to improve code readability and maintainability by encapsulating
refactor Term class to improve code structure to enhance maintainability and readability of the code
added null and empty checks for runWith in ChangeSet . java to prevent potential NullPointerExceptions when runWith is null or empty
http : / / issues . apache . org / jira / browse / amq - 4896 - add test case to verify that
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
danielwagnerhall : do n ' t set luminances [ x ] to 255 in localblockbinarizer
added a new variable ` mTintAmount ` to the ` setDimAlpha ` and ` setBannerColorTint ` methods in ` Task
added a new file ` SumZeroAggr . java ` to implement aggregation function for sum zero operations to facilitate aggregation functionality in
updated SQL query syntax in FirstValueFunctionIT . java and NthValueFunctionIT . java to ensure correct syntax for page _ id in
hbase - 2267 bucketcache . getallocationfailwarningmessage ( ) should provide more detailed error message
added a null check for propName before putting them into roleObject to avoid potential NullPointerException when propName is null
added @ VisibleForTesting annotation to several fields and modified event handling logic in StatusBarTouchController , RecentsView , and FeatureFlags to
added methods to log container streams in DockerClient . java to improve container logging functionality for better debugging and monitoring
add unit test for mvstore cache performance
updated the LONG type from " L " to " J " in PrimitiveType . java to align with Java naming conventions
changed the visibility of the ` delegatingApplicationListener ` method from instance to static to allow the method to be called without needing a static
set the body of the message to null in RestBindingAdvice . java to ensure that the message body is set to null before proceeding
added two new files , FileDeletingTasklet . java , TaskletJobFunctionalTests . java , and TaskletJobFunctionalTests
update size keep drawables in companion only when necessary
updated calculations in BitUtil , Int2IntCounterMap , and Int2IntHashMap to use index - out - of - bounds instead of
updated the ` sendEventToTest ` method to ` sendStateEventToTest ` and introduced a ` stateOrdinal ` parameter to enhance state
added conditional checks for video thumbnail requests in multiple classes to ensure proper handling of video requests based on request headers
updated error handling and logging in ErrorCheckerService . java to improve clarity of error messages and ensure proper highlighting and scrolling behavior based on
added conditional logic to add a BorderLayout based on the theme constant for the " menuButtonTopBool " and " menuButtonBottomBool " buttons
added preload and link properties to Skia . java to enable loading of libraries in the application
added a constant for ID _ UNITTESTNET and implemented unit tests in NetworkParameters . java to improve code readability and maintainability by using
added error handling for format arguments in QueryCommand and corresponding tests in QueryCommandIntegrationTest to improve robustness of query execution by providing clearer
refactor capacity and isPositionValid variables in IntIterator . java to improve clarity and consistency to enhance code readability and maintainability by
updated walkRuleAndAdd method to include a sourceRule parameter and added a condition to visit dependencies based on the source rule ' s source rule
feat ( patchmodulefilemanager ) : add support for override module location
[ java ] remove unnecessary version check from election .
added conditional logic to set the default policy based on SAML authentication to ensure proper client management based on authentication status
add null check for mappedtableresource ( table ) in readbatch and writebatch
refactor : remove unnecessary try - catch block and use utils . close ( )
refactor ` AnonymousAuthenticationFilter ` to utilize a ` Supplier < SecurityContext > ` for managing anonymous security context to improve flexibility and maintain
modified the ` removeActor ` method to accept a boolean parameter for unfocusing to enhance actor removal functionality by allowing optional unfocusing behavior
refactor cloudConfig assignment to use a variable for clarity to improve readability and maintainability of the code
added logging level support in NettyHttpServer and NettyHttpServerConfiguration classes to enhance monitoring capabilities for HTTP connections
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replace direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ( ) ) to ensure that the update ( )
camel - 14263 : fix the issue that groovyparser do n ' t work with camel - groovy
remove dependency on maven dependency in defaultpluginmanager . resolve ( )
[ hotfix ] [ cli ] make clifrontendparser public
renamed the ShadowSharedPreferencesEditor class to TestSharedPreferencesEditor and added a commit method in TestSharedPreferencesTest to improve clarity and
removed the storageAlias variable and updated certificate chain retrieval logic in HttpsMessenger . java to streamline the code for better readability and maintain
improve error message when response body be null
changed method visibility from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the updateImage method
add dropx ( ) method to drop block from server level . close # 6240
added native method definitions for SpatialLocationCalculatorConfig in DataOutputQueue and depthai classes to enable retrieval and retrieval of spatial and depthai location
refactor multiple Java files related to community detection , GSA connected components , GSAPageRank , and SingleSourceShortestPaths to improve
refactor the ` isEmpty ` method in ` TreeTrie ` to use a dedicated method ` isEmpty ` to improve code readability and maintainability
refactor foreground and background method calls in AttributedStringBuilder . java to improve code readability and maintainability
updated the doFingerprint assignment logic to exclude the " true " system property to ensure fingerprint is only used when " true " is set to true
changed the access modifier of the ` moveFunds ` method from private to public to allow access to the ` moveFunds ` method from
updated the BeforeConvertEvent handling in MongoTemplate and added a new test for UUID property in MongoTemplateTests to ensure proper event emission and
fix collectionitem . writedata ( ) and collectionitem . writeobject ( ) to avoid memory leak
( chore ) camel - tika - api : fix resource leak in tika - cli
updated the exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling and
removed unnecessary whitespace in the configuration loading process to improve code readability and maintainability
fix typo in instructorfeedbackcopyactiontest
[ hotfix ] fix checkstyle violation in externalworkerservice
removed the step variable from HmDatapoint and updated related methods in HomematicTypeGeneratorImpl and DisplayTextVirtualDatapoint to
updated logging messages for shared and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of log messages and ensure
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to improve code clarity and maintainability
simonstewart : fix the lameness test for ie
refactor Logger class to use ThreadLocal for logger management to improve thread safety and maintainability of logger management
added @ VisibleForTesting annotation to the convertToCompilationUnit method and refactored Mockito usage in FunctionInitializerTest to improve test clarity and
added a new method ` boxedTypeOrType ` in ` Types . java ` and modified type checking in ` Infer . java `
updated the handling of focused task views in RecentsView and removed the initialization of DigitalWellBeingToast in TaskView
hbase - 25836 fix flakiness in testflushfromclient . testflushfromclient
added logic to clone the repository and delete the new contract address in TransactionExecutor . java to ensure the original repository is removed when the contract details
updated balance calculation in TokenIssueProcessor to use dynamic properties instead of a hardcoded value to improve flexibility in balance calculations by allowing dynamic properties
updated cache management in RealisticRenderStrategy to use URI and Texture objects instead of RocketComponent , and added clearCaches functionality to improve texture
refactor raster creation and compose logic in Blit . java and add a new Bug7049339 . java file to improve code
added functionality to manage the unselected style in the component and updated label width calculations to improve UI responsiveness by allowing dynamic adjustment of string
updated ArrayList initialization to initialize with a size of 3 instead of using a lambda expression to improve performance and flexibility in managing various data structures
removed unused flags parameter from multiple methods in ShadowApplicationPackageManager and added FLAG _ PRIMARY constant in ShadowUserManager to simplify method signatures and improve
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
add mp4 _ asset _ with _ increasing _ timestamps . mp4 to androidtestutil .
refactor firmware handling logic in TradfriGatewayHandler . java to improve readability and maintainability to enhance code clarity and maintainability
refactor AjaxElementLocator class for improved readability to enhance maintainability and clarity of the code
updated the condition in BoxLayout to include " table - cell " in DefaultLayout . java to ensure proper handling of table cell display in layout
refactor JsonDecoder ' s level calculation logic in JsonDecoder . java and add a new test for reordering fields in TestJsonDecoder .
fix blockcache . releaselocation ( ) not call on notification . getkey ( )
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added multiple @ Test annotations in DroolsMvelParserTest . java to enhance test coverage for the Mvel parser functionality
[ type : refactor ] fix checkstyle issue in contextregisterlistener
refactor ObjectHashSet to improve iterator initialization and cache handling to enhance flexibility and maintainability of iterator management
added a BATCH _ BYTES constant and modified row index validation logic in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch
replaced occurrences of ` MODE _ WORLD _ READABLE ` and ` MODE _ WORLD _ WRITEABLE ` with ` MODE _ PRIVATE
updated logging messages for connection abort handling in JdbcProxyGenerator . java to improve clarity of log messages and enhance error handling
updated the method for retrieving the animation state in Workspace . java to enhance accessibility support for different state states
change log level from warn to debug in ProtobufLogReader . java to reduce log verbosity for better debugging
updated scope handling in UaaTokenServices and added unit tests in UaaTokenServicesTests to ensure that the persistRevocableToken method
removed unused imports and added a toString method for AvailableJDBCDrivers to streamline code and enhance logging functionality
[ drools - 4892 ] add executablecommand interface for kie - api ( # 4892 )
( chore ) camel - itest : remove unused jdbctableservice
added padding methods for left , top , and bottom padding in CellLayout . java and modified bitmap creation in Launcher . java to improve layout
added a conditional check for non - empty string before setting the cands list to avoid potential ArrayIndexOutOfBoundsException when the string is empty
updated ` SamlMetadataUIParserAction ` to return ` Action ` instead of ` SamlMetadataUIParserAction ` and added null check
added a method to check the existence of LDAP ports in LdapMockMvcTests . java to ensure that LDAP ports are available before proceeding with
[ log4j2 - 1341 ] fix log4j2 - 1341 log4j2 - 1341
updated URL handling and logging in Fetcher . java and HTMLMetaProcessor . java to improve URL filtering logic and enhance logging clarity
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
refactor Console initialization to use reflection for better type safety to ensure compatibility with old and new console API
fix a bug where mloopcol be n ' t initialize when mloopcol be n ' t set .
added a file filter to exclude timestamped reports sub directories and updated the copyDirectory method to include it to enhance the functionality of the HTML report
refactored datavalidatortest to use parameterizedtest instead of junit 5
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added null check for bindStatus in FieldUtils and FieldUtils to ensure proper error handling when binding form errors are used in adequate
removed debug print statement from JoglInput . java to clean up the code and improve readability
added a flag to allow extracting private fields in FieldSupport and updated related test cases to enhance flexibility in handling private fields during field retrieval
added a replacement for the device name in WebDataHandler . java to ensure the device name is correctly formatted in the application
refactor constructor retrieval logic in Platform . java to use MethodHandles . lookup ( ) to improve flexibility and maintainability of the code by
deprecated the ` weights ` method and added a new method ` weightsByDouble ` in ` ZParams ` and ` SortedSetCommandsTest ` to
added Database parameter to several writeCustomHTML methods across multiple writer classes to enhance functionality by allowing database - specific operations
added an assertion to ensure the value is not null in BTreeMap . java and updated the key retrieval logic in BTreeMap . java
added handling for BalanceInsufficientException and InvalidProtocolBufferException in CancelDeferredTransactionActuator and UpdateDeferredTransactionActuator to improve error handling
added a conditional check for the " org . netbeans . lib . profiler . heap . zerofile " system property in AbstractLongMap
replaced stream print statements with UI messages for Liquibase Pro license handling to improve readability and maintainability of the code
increased the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and removed generic record handling in Horton
added import statements for ItemProcessListener and SkipListener in multiple Java files to enhance event handling capabilities in the batch processing framework
refactor code for improved readability and maintainability to enhance maintainability and clarity of the code
removed the use of ` doc . get ( " title " ) ` from the print statement in ` SearchFiles . java ` and updated the
refactor Test7005594 class for improved readability to enhance maintainability and facilitate future development
updated error message formatting in ResourcesValidationProcess . java to improve clarity and consistency in error reporting
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
cloudstack - 4892 : do n ' t throw an exception if vm be not find in vmid
add mc option to speed up gui size change
refactor methods in IterableSubject and IterableTest for improved clarity and consistency to enhance code readability and maintainability by using more d
camel - 14263 : camel - aws2 - http : allow to configure header with multiple value . thanks to michael
added assertions in ` ActivityHistorySQLServerStoredProcedureTest . java ` to validate SQL query counts for various data types to ensure correctness of
added a new ` LargeValueFormatter ` class and updated random number generation in chart components to improve text formatting for better readability and maintain
refactor character handling in CommentsParser to utilize a constant for INNOCUOS _ CHAR to improve code readability and maintainability by
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to incompatible argument types
modified the formatting of the printLir statement in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency
added a TODO comment to the NullAssertionValidator class to improve code clarity and maintainability
added support for appending rules in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in the build process
add system profile directory creation and modify test setup and teardown methods to improve directory management and ensure proper setup and teardown behavior
replaced the instantiation of ` DefaultThreadFactory ` with a direct call to ` createThreadFactory ( ) ` in ` TestcontainersDockerCmd
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method for retrieving messages to improve code readability and maintainability by
added a " accept " attribute to the image input dialog in ImageFileInputDialog . java to allow users to specify the accept parameter for image
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient instead of NodeBuilder to improve code clarity and maintainability by
added detailed logging for witness class and class names in ForkController . java to improve traceability of witness information for debugging purposes
added a new test class ` NullPointerAndEmptyArrayTest ` to test the behavior of ` CustomURLClassLoader ` to verify the behavior of
added a method to find configured generated source paths using a target node in BaseIjModuleRule . java and deleted the test class in I
refactor UaaStringUtils to use a new method for construct simple wildcard patterns and replace them with a character delimiter to improve pattern construction flex
added validation for aliasToWork and tableScanOperator in Vectorizer . java to ensure that map work has more than one alias to work with
replaced Mockito runners with JUnit ' s MockitoJUnitRunner in WeatherQueryTest . java to ensure compatibility with the
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting values fails
replaced specific imports with a wildcard import and refactored the getLangs method to return a Set < String > instead of a List to
reformatted assertions in LazyTraceScheduledThreadPoolExecutorTests . java for improved readability to enhance code clarity and maintainability
hbase - 25820 fix concurrentmodificationexception in snapshotmanager . takesnapshot ( )
[ j2kt ] use runtimemethods . createplatformisnullcall instead of runtimemethods . createstaticisnullcall
added a test for verifying the modified HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the HTTP RPC endpoint is correctly updated
added suspension check and exception handling in Thread . java and updated version check in Test _ Thread . java to improve thread safety and ensure
refactor JavadocVisitor and ReloadableJava8JavadocVisitor to use Hidden and Serial classes instead of Since to improve clarity and functionality of Javadoc
camel - 1774 : fix camel - remoting - two - camel context test and add test case
removed multiple redundant @ Override annotations across multiple security classes to streamline code for better readability and maintainability
added module import handling and updated test assertions in Java2TypeScriptAdapter , EnumTests , and MyComplexEnumsAccess classes to enhance module
use http : / / www . w3 . org / 2001 / xmlschema instead of xmlconstants . w3c _ xml _
added handling for badged app descriptions in BubbleTextView to improve user experience by providing more descriptive translations for badged app items
added mouse wheel movement functionality in TestMouseWheelScroll . java to enable proper scrolling behavior based on the direction of the mouse wheel
pdfbox - 4892 : fix potential resource leak , a suggest by valerybokov
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
[ vacuum ] use string instead of object in vacuumcontroller and vacuumframe
removed redundant currency checks for DASH , QTM , and QTUM in BitfinexAdapters . java to simplify code and improve readability
replaced ` Sets ` with ` ImmutableSet ` and refactored field printing logic in ` JsonFormat . java ` to improve code readability
updated JacksonXmlFormatMapper to handle array and enum types correctly to ensure proper serialization of byte arrays in JSON output
updated thread handling in VirtualThread . java for improved clarity and consistency to enhance code readability and maintainability by standardizing thread management
updated DirectoryTaxonomyWriter to include a new termTerm parameter and modified termDocsEnum and termDocsEnum methods to enhance cache management and improve cache
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
adjusted the calculation for the vertical height in BrowserContentPane to correctly account for the last element ' s height
pdfbox - 4892 : remove invalidpasswordexception from method , a suggest by valerybokov
added unit tests for setShortSupportMessage and setLongSupportMessage methods in ShadowDevicePolicyManagerTest . java to ensure proper exception handling for
ggb - 1358 make sure help button be open when the menu be close
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
refactor sleep logic in BackendInitializerHelper and TerminalClient to use ThreadHelper for controller state checks to improve responsiveness and maintainability of
updated condition for setting the last update version in SwingStartup . java to improve clarity and correctness of release status handling
added a new configuration option ` includeGeneratedFileComment ` in ` DbMigrationConfig ` and modified migration logic in ` DbMigration ` to allow
updated usage strings in multiple Java files to include additional characters to enhance user experience by providing more descriptive URLs for player operations
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused filter classes to streamline the codebase
updated method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to improve clarity by using a more d
added support for parallel classes in TestNGContentHandler to enhance test coverage for parallel classes
http : / / issues . apache . org / jira / browse / amq - 4896 - fix npe in routeinfo
refactor : remove static import of enums in ctmethodimpl . java ( # 1748 )
added serialVersionUID fields to multiple Java files to ensure proper serialization compatibility during serialization
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to include CONST _ SEPARATOR parameter and modified the shaBase64 method to accept a separator parameter to
updated parameter handling in Parameters . java and modified the condition in TestAction . java to improve null safety and ensure proper validation of system actions
added a new file ` Person . java ` with a private field ` name ` in the ` org . apache . maven . it0074
remove unnecessary dependency on flyutilities . getlocaladdress ( )
updated string comparison in AbstractClient . java to ensure consistent case handling to improve code readability and maintainability
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImpl to ensure accurate validation of time column and time unit metadata in the
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` in ` SimulationPlot
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure disconnectEmitters are
changed the type of ` scopeHierarchy ` from ` String ` to ` Class < ? extends Annotation > ` in ` DefaultBeanContext . java
danielwagnerhall : fix double overflow bug in scroll test
added a try - catch block around the dismissDialog method call to handle potential exceptions to improve stability by preventing application crashes due to
added support for custom JTA TransactionSynchronizationRegistry in JtaTransactionManager to enhance flexibility by allowing custom JNDI location configuration
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unnecessary functionality
replace variable ` enabledCiphers ` with ` result ` in ` JSSESocketFactory . java ` to improve clarity and consistency in variable
fix bigquery timestamp conversion for bigquery ( # 1748 )
replaced ` IllegalArgumentException ` with ` requireNonNull ` for buffer and user credentials in ` Identifiers . java ` and ` DatabaseConnector . java `
fix valueresolver . getordefault ( ) to use inputmap . getordefault ( )
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure data integrity by preventing out - of - bounds errors
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by
[ java ] unnecessarylocalbeforereturn no longer fail if there be no memberselector
renamed the variable ` scriptEngineManager ` to ` scriptEngine ` and updated its initialization to improve clarity and consistency in variable naming
simplified calculations in EuclideanDistanceSimilarity and updated corresponding test cases in EuclideanDistanceSimilarityTest to improve code clarity and
simplify datatracker . maybeincrementallybackup ( sstablereader sstables )
refactor the ` relativize ` method to accept two ` Path ` parameters for better path normalization to ensure that the ` relativize
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of decimal values in column size and decimal
added a filter to skip the current writer head file " . tmp " in DeadLetterQueueWriterTest to ensure the current writer head file is
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistency in
renamed ErrorHandlerController to Error403Controller and created new controllers for error handling to improve clarity and organization of controller classes
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in ` UnixTerminal .
updated Tiny . java to include new array tree and modified trigger patterns for collection toArray to enhance functionality and ensure compatibility with newer Java versions and
refactor connection acquisition logic to use an iterator for entries to improve performance and readability of the connection acquisition process
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to improve clarity and consistency
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve readability of error messages
added readerException and writerException fields and updated thread join logic in LargeStreamletTest . java to improve exception handling and ensure proper thread
added logic to increment extra pages based on user settings in HomeFragment to ensure proper handling of extra pages based on user preferences
added error handling for broken Gaussian image processing in AndroidImplementation . java to improve robustness by preventing image processing on broken Gaussian scenarios
added @ SuppressSubnodes annotation and modified return statements in BaseParser . java and ImplicitActionsConverter . java to improve code clarity and ensure
pdfbox - 4892 : use try - with - resources to avoid resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added a shell command for input key event 82 in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to
added JSON serialization for the filenameToUrl map in FileDumper . java to facilitate JSON serialization of output paths in the output directory
bugfix # 20632 , reset the flag of profilerserver . resultsnotified
refactor texturehelper . loadtexturefromimage ( ) to loadimage ( ) and add loadfeatures ( )
updated the context ID assertion in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests from " application :
updated the version of the Randomizers class from " 9781797745008 " to " 9781797845005 "
refactor notification sound handling to use Uri for parsing to improve code readability and maintainability by centralizing sound setting logic
added a method to report loop counts in the RootNode class to enable reporting of loop counts based on call target type
added a condition to generate a version for a specific repository type in FinalizeUpgradeAction . java and modified the merge method in ClusterImpl . java
fix wrong rangeid in portableipdaoimpl . findbyregionidandstatesearch ( )
removed duplicate line opening the streamManager in ItemOrientedStep . java to improve code readability and maintainability
added a new file CountedLoopProblem . java that implements a random number generation algorithm to test the behavior of the CountedLoopProblem class
[ hotspot ] fix the usage of hotspotgraalruntime . getcompiledmethod * method in hotspotgraalruntime .
fix jvmci error when speculation can not be set
refactor KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier for span creation to improve code clarity and maintainability
added a method to convert a list of points to a string array and updated related test cases to enhance readability and maintainability of the code
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline the code by eliminating
added a method to dump all stack traces and improved thread handling in CloseRace . java to enhance debugging capabilities and ensure proper termination of
updated return statement to use intValue ( ) instead of val . intValue ( ) in IntPointField . java and added tests in TestPointFields
updated arcSize variable to use a fraction of width instead of a hardcoded value to improve flexibility in calculating arc size based on screen dimensions
reduced the size of veryHighWidth from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard
rename the method ` setMinifySqlEnabled ` to ` setShrinkWhitespacesInSql ` in multiple files to improve clarity and consistency in
refactor waitForStateTransitionToEnd method in AbstractLauncherUiTest and WorkProfileTest to streamline state transition handling to improve code clarity
replaced ` CasCookieConfiguration ` and ` CasCoreConfiguration ` classes with ` CasCoreConfiguration ` and ` CasCoreHttpConfiguration ` in
replace usage of raf . readLong ( ) with DataIO . readFully for reading long values to improve performance by avoiding unnecessary reading of long values
camel - 16463 : camel - http - http : do n ' t log httpresponsecode when debug be enable . thanks to
refactor the creation of the ClassPath in DeclarativeHintsParser to use a builder pattern to improve code readability and maintainability by
autodetect scope provider for audio and voice manager .
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to utilize this new method to improve layer management
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks for mapOp and mapWork in MapRecordProcessor . java and improved exception handling in TezProcessor . java to enhance
refactor center and center2D variables in CylinderRegion . java for consistency and clarity to improve code readability and maintainability
replaced manual exception handling in TestBadUseCases with JUnit ' s ExpectedException rule to improve test clarity and maintainability by using
modified the ` sendOneQuery ` method to handle null parameters and added a new test for multi - execution in ` QueryExecutorTest ` to
do n ' t log the visualvm - security environment if it be not configure .
added ` rctag = android% 20app% 20edit ` to the ` @ GET ` annotation in ` ReviewInterface . java `
refactor Test . java for improved readability to enhance maintainability and facilitate future development
updated PBEKeySpec parameters to use keyLength instead of blkSize to ensure compatibility with the new key length specification
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added writeSectionDefinition ( ) method to RtfDocumentHeader . java to enhance section definition management in the document header
added logging for large jump detection and improved accuracy checks in GpsLoggingService . java to enhance error handling and provide clearer logging for
removed debug print statements from TableCellLayout and TableLayout2 classes to improve code readability and maintainability
doc : generate sample code in the java microgenerator ( # 44 )
updated ` InsightFilter ` class to use ` Reference < Object > ` instead of ` boolean ` for rootNameFn and sourceFilterFn
removed unnecessary binarySearch checks in AllAppsList . java to streamline code for better readability and performance
updated ` SettingsActivity ` to extend ` PreferenceActivity ` instead of ` ThemedPreferenceActivity ` and removed the ` ThemedPreference
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assertRootArcs ( ) method to remove unnecessary whitespace to improve code readability and maintainability
added an assertion to verify that the security policy does not exist or not a file to ensure that the security policy is correctly validated before proceeding
camel - 14263 : camel - olingo2 - allow to configure olingo2 configuration
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow for more time for recovery operations to complete
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output by eliminating unnecessary parameters
added action to publish an image by http
camel - 16462 : camel - netty - make the producer final and remove the channel local from the pool .
updated URL _ TEMPLATE regex to allow additional characters in the host name format to improve URL parsing accuracy and ensure proper exception handling
remove system . setProperty ( " org . apache . jasper . compiler . disablejsr199 " ) from FragmentActivator . java
added support for null string values in CSVRecordReader and related classes to enhance flexibility in handling null values in CSV format
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to ensure that only relevant connection services are processed
updated the method signature of ` addImportedStaticFieldNames ` to use ` JavaSourceFile ` instead of ` J . CompilationUnit ` to improve type
fix item command and state trigger topic not match ( # 1748 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error
updated SolrXmlConfig to replace deprecated case " zkCredientialsProvider " with " zkCredentialsProvider " and added corresponding assertions in Test
fix mana tablet ' s damage and creative ' s damage . close # 489
set the identifier collection to the current call event in P25P2DecoderState . java to ensure the correct identifier collection is used for processing
removed unused imports for DictionaryCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter in TestRandomChains . java to streamline code by
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
added an additional parameter to the assertNotNull method in TypeDefinitionRegistry . java to ensure that a null definition is passed to the method
added visibility of share with me icon in LocalFileListAdapter to improve user interface by disabling sharing functionality
updated CSS links from HTTP to HTTPS in DefaultLogoutPageGeneratingFilter , LogoutPageGeneratingFilter , and DefaultLogoutPageGeneratingFilterTests to ensure
updated the ` RouterFilter ` and ` RouterServerListFilter ` classes to use ` @ NotNull ` and ` getOrLoadSortedService ` to
enhanced assertion message in TestIndexWriterMergePolicy . java to include additional context for document count and segment count to improve debugging by providing context
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used
modified the context awareness check in CrawlerSessionManagerValve and added a new test for multiple contexts in TestCrawlerSessionManagerValve to
modified the getJspApplicationContext method to include a security check before retrieving the JspApplicationContext to enhance security by ensuring proper access control when the servlet context is
updated the calculation of ` length ` and added bounds checking for ` FinSet ` in ` RocketComponentConfig . java ` to improve accuracy
replaced ` @ Singleton ` with ` @ Singleton ` and added dependency injection for ` NonceService ` in ` OpenIDAuthenticationProviderModule ` to
updated the method call to update child links in FileWrapper . java to ensure that child links are updated correctly based on user context
refactor method signatures and parameters in SpringCloudPlugin . java for consistency and clarity to improve code readability and maintainability
increased the timeout duration for publishing messages from 100ms to 500ms in RetrievalBlockingMessageStoreTests . java to allow more time
added a boolean flag ` mShiftCodesAlwaysOverride ` to control the behavior of shift code overrides in ` AnyKeyboard . java ` to ensure
updated heartbeat interval checks and added leader election logic in multiple classes to improve robustness of leader election logic and ensure accurate tracking of leader status in
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintainability
updated the filter condition in AbstractKerberosDescriptorContainer . java to use isReference ( ) instead of getName ( ) to improve clarity and
updated method signatures to remove the ` AbstractCommandOptions ` parameter and added a ` noop ` parameter in the ` newInstance ` method across multiple classes
added a sleep delay of 3000 milliseconds in TestListenTCPRecord . java to ensure proper handling of IOException and interrupt scenarios
update argument assignment logic in PatchExtensionMethod . java to ensure original arguments are properly assigned to the methodCall object
replaced ` Map ` with ` Set ` for ` RawNativeLibraryImpl ` and updated related methods to enhance concurrency handling and improve error messaging
added support for " ignore - send - failures " and " ignore - send - failures " attribute in DefaultRouterParser and AbstractChannelNameResol
removed unused x509 publish URL and view names from ClientKeyPublisherMapping and JwkViewResolver to streamline code by eliminating unnecessary
modified the initialization of the reader variable in QueryComponent . java to ensure that the first reader is set to null when there is only one reader
replaced the existing ` ValueSourceParser ` with a new ` Double2Parser ` for ` max ` and ` min ` parsing to enhance
removed conditional check for focusable and pointer events in the Container class to simplify the return logic for better readability and performance
removed unused variables in Highlighter , SpanGradientFormatter , and TokenSources classes , and modified method signature in TokenSources to improve code clarity
cloudstack - 4892 : fix issue with add uuid to the ` ` user ' ' table
added conditional configuration for flowBuilderServices in CasMultifactorAuthenticationWebflowConfiguration and updated CompositeProviderSelectionMultifactorWebflowConfigurer
updated WriteJdbcPTest to include maximum connection settings and refactored table counter management to improve database connection management and enhance database connection management
simplified the handling of the " editor . laf " preference in DefaultPlatform . java to improve code readability and maintainability by
updated method calls to use ` stateEntity ` instead of ` getDesiredStateEntity ( ) ` for consistency to improve code clarity and
simplified the calculation of ` dX ` and ` leftMargin ` in ` FloatingTaskView . java ` to improve code read
added a condition to break the loop in RootFolder . java and updated status line handling in NavigationShareTab . java to improve user experience by
removed the increment of threadId in CPUCallGraphBuilder . java to simplify the code by eliminating unnecessary increments
ggb - 1187 fix for ` ` no toolbar ' ' in the default perspective layout
added NetworkAddressChangeListener to HomekitImpl class and improved logging messages to enhance address handling and enhance logging clarity for better debugging
updated leaseRenewalTime retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use NameNodeAdapter ' s get
changed the type of ` prefixHeader ` and ` linkStyle ` from ` Optional . absent ( ) ` to ` Optional . absent ( )
added null check for exception message in ExceptionHandlerRegistryFactory . java and created a test for handling null messages in ExceptionHandlerRegistryTest . java
changed the ` nextID ` variable to be ` volatile ` and modified its getter and setter methods to ensure thread safety and improve error handling for
http : / / issues . apache . org / jira / browse / amq - 4896 - fix jmsqueuecompositesendreceive
refactor AbstractThinArchiveArg , FileListableLinkerInputArg , SourcePath , and SourcePath classes to implement HasSourcePath
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify code and improve readability
added support for custom index field name in OrdinalMappingAtomicReader and updated test cases accordingly to enhance functionality and ensure proper handling of facet
added validation for negative seconds and nanos in Instant . java and created corresponding test cases in TestInstant . java to ensure correct conversion of epoch milliseconds
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use the name ( ) method instead of the name (
added block update scripts configuration in CopyPaste . java to ensure that scripts are only updated when the app is in a blocked state
added a new file TestCMoveLimitType . java with methods for testing character movement limit handling to ensure proper functionality and performance of character movement
refactor audio packet handling in multiple classes to improve clarity and efficiency to enhance code readability and maintainability while ensuring accurate tracking of audio
fix issue with scale token in ssptparser and ssptparser
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor color handling in Main . java and add printVersion method in VersionCommand . java to improve code readability and maintainability by encaps
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to improve code readability and maintainability by reducing redundancy
improve error message when iib . eof . error be throw
added unit tests for group deletion and non - existent groups in DefaultGroupProviderTest . java to ensure correct functionality and error handling for group deletion
removed unnecessary ` new Object [ ] ` instances from multiple Java files to simplify code and improve readability
deleted the V2ReplicationProtocol . java file to the protocol is no longer needed in the project
updated references from ` compileTimeClasspathDeps ` to ` compileTimeClasspathSourcePaths ` and ` compileTimeClasspathSourcePaths ` across multiple classes
added two new files , ConstructorArgsDemo . java , StupidFinal . java , and StrictDemo . java , and modified Stup
[ geot - 4892 ] make directtemplatefeaturecollectionfactory thread - safe to close featureiterator
updated the assertion condition in WriteResponseHandler . java to accommodate a larger response count to ensure that the assertion accurately reflects the
added a null check for item . getIndexNumber ( ) in ItemRowAdapter . java to prevent potential NullPointerException when item . getIndexNumber ( )
rename parameter ` areAnchestorsShown ` to ` areAncestorsShown ` across multiple classes to improve clarity and consistency in naming con
added a check to return early if the app width is less than 12 to optimize performance by avoiding unnecessary processing when the app ' s width
updated the comparison method in ChangeLogParameters to use ` . equals ( ) ` instead of ` = = ` to ensure proper comparison of change
changed the ` loggers ` variable from static to final in ` LogFactory . java ` to enforce immutability of the ` loggers ` map
modified the return statement to call getBasePlot ( false ) with a parameter to ensure that the return value is consistent with the current plot ' s
added an initial creation parameter to the createUploadDir method to control the creation of uploads based on the initial creation status
added a ` sendStatus200 ` parameter to multiple constructors and methods in ` ServerGenerator ` , ` ServerFCGIConnection ` , and `
added a condition to check if the comment length is greater than zero in multi - line comments to ensure that comments are only processed when there are
added imports and implemented file type associations in BuckModule . java to ensure proper handling of file type associations in the application
replaced specific imports with wildcard imports and changed the return type of the ` multiply ` method from ` ToLong ` to ` ToInt `
added support for unsupported RTM OS in ` RTMGenericCommandLineOptionTest ` and modified error messages in ` TestUseRTMLocking
updated formatting and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code organization to enhance maintainability and readability of the Player class
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to enable mocking of ChannelTypeUID
fix checkstyle issue in polyglotexceptionimpl . java ( )
reset the system context in AndroidTestEnvironment and implement reset method in ShadowFontsContract to ensure proper context management and prevent potential null pointer exceptions
added milliseconds and milliseconds methods for time granularity in TimeGranularity . java and modified SQL query construction in PinotDataSourceMaxTime . java to
added null checks and improved control flow handling in ControlFlow . java and Guard . java to enhance robustness and clarity of control flow
updated assertions in Assert . java and ArrayEqualityAssertTest . java to improve error handling and provide clearer error messages to enhance clarity of
added default cases for handling cases in WindowClickLogic . java to improve code clarity and ensure proper handling of default cases
corrected the calculation of the index method in MeshBuilder . java to ensure proper handling of index values in the mesh processing logic
nifi - 1746 : remove unused controllerserviceprovider from standardprocessscheduler
added support for specifying Java annotation processor arguments in KotlincToJarStepFactory to enhance flexibility in processing Java annotation processors
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION and simplified page snapping logic to
added permission checks for shortcut management in LauncherModel and DeepShortcutManager classes to enhance user experience by ensuring shortcuts are refreshed only if they have
added handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance search navigation functionality
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to enhance robustness
added marker selection functionality in NearbyMapFragment to manage bottom sheet details behavior to improve user experience by ensuring the bottom sheet is hidden when
added error handling to print stack trace in FileSyncAdapter . java to improve debugging by providing more informative error messages
replaced direct usage of ` DockerRunJava ` with ` OutputAnalyzer ` for better error handling to improve code readability and maintainability by
updated FeedQueues . java to filter out Urgent feeds based on application settings to ensure proper handling of heavy load scenarios based on application
log warn if defaultdrmsessionmanager be access on wrong thread
updated AndroidBinaryDescription to use Locale . US for case sensitivity and added a method to set packageType in AndroidBinaryBuilder to ensure consistent
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with the application XML file
updated variable declarations in Args . java for consistency to improve code readability and maintainability
updated the timeout message from " sleep 5 " to " exit 1 " in HostPortWaitStrategyTest . java to improve test reliability by
replaced int math with long math in HiveExpandDistinctAggregatesRule . java and updated the getGroupingIdValue method to use long literals to
added multiple checks for headless and headless environments in the Toolkit class to ensure proper exception handling for different graphics environments
added a condition to check if the current recipe matches the furnace ' s world in the ExoflameFurnaceHandler to
add ` ` move thread count ' ' option to solver
[ fhirirresourceloader ] fix indexoutofboundsexception when use revinclude
added a new test class ` Issue582Test ` for testing the ` Pair < String , Integer > ` functionality to verify the functionality of
added tests for decimal overflow and division by zero in AbstractTestNativeGeneralQueries to ensure correct handling of decimal overflow scenarios in SQL queries
refactor LoadingCache class to improve code readability to enhance maintainability and facilitate future updates
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest class to ensure proper handling of non - constructor methods in
added error handling for StaleElementReferenceException in ExpectedConditions . java to improve stability by catching StaleElementReferenceException during element
refactor ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator to improve view existence checks to enhance error handling and provide clearer feedback when views do
refactor DOMUtil class for improved readability to enhance maintainability and clarity of the code
added translation calculations and logging functionality in TaskViewUtils and Utilities classes to improve UI responsiveness during task view animations
changed FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a new method ` walk ` to ` TempFSTTermsReader ` and modified the handling of document frequency in ` TempTermOutputs `
added SolrQueryRequest parameter to the create methods across multiple classes to enhance request handling capabilities in the augmenters
added checks for null content and announcement in SingleTableMySQLTriggerTest . java to ensure proper handling of null values for Post and Announcement
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code clarity and maintainability
updated query prefix formatting in PhoenixQueryBuilderTest . java to use double quotes to improve readability and maintainability of the test code
added Spark initialization in RequesterTest . java to ensure proper resource management during Spark initialization
added methods to save total storage pool , limit , and fee in DynamicPropertiesStore . java to enhance flexibility in managing storage data and improve
added support for streaming files from the specified source directory in AssetsController . java and updated related tests in AssetsControllerTest . java to enhance file
updated the condition to check for map mark keys in MapMarksManager . java to ensure correct identification of map mark keys
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance functionality by allowing token rewriting
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavaCompiler ` , and ` JavacProcessingEnvironment ` to
updated variable name from ` fileName ` to ` fullPath ` in ` JxBrowserManager . java ` and added error handling in ` FileUtils .
replaced ` = = ` with ` equals ` for string comparison in ` IOSImplementation . java ` to improve code readability and maintain
updated the method call from ` getBridgeUID ( ) . getId ( ) ` to ` getUID ( ) ` in ` Somf
test : disable flaky test on github
removed the DefaultTrustManager class and updated SSL configuration settings in OpenWireConnectionTimeoutTest . java to streamline SSL connection handling by elimin
improve error message when meter return NaN
remove a session from the sessionIdToSessionInfo map to ensure proper session cleanup on user logout
added hostname setting for alerts in HeartBeatHandler . java and improved formatting in AlertReceivedListener . java to ensure proper handling of
simplified the return statement for buffer processing in ChannelEndPoint . java to improve code readability and maintainability
( chore ) camel - kie - api : move kmodule . xsd to kie - api
added a test for seekTo mode in ShadowMediaPlayerTest . java and modified seekTo method in ShadowMediaPlayer . java to ensure correct
rename method ` createTask ` to ` createThrowingTask ` across multiple executor classes to improve clarity and consistency in naming conventions
added border settings for the close button in AQUA _ LAF mode to enhance the visual appearance of the close button in Aqu
added POST request methods and timeout settings in TSPTimeStampService . java and refactored test assertions in TestSignatureInfo . java to improve
[ zeppelin - 4892 ] add default security to xstreamutils . createxstream ( )
added error logging for unsupported diamond types and created a new DiamondRaw class to improve error handling for non - generic diam
[ calcite - 4892 ] fix checkstyle violation in reloptutil
updated validation for setting ID and value in Http2Settings . java to ensure that setting ID and value must be unsigned 16 - bit and 32
deleted the MapInterfaceTest . java file to remove unused test files to streamline the codebase
added exception handling for session insertion in SessionsPoolTest to ensure robustness by preventing operations on disposed sessions
added start and end methods for the ` FeatureCollection ` object in ` GeoJsonWMSBuilder . java ` to ensure that the ` Feature
replaced the method ` setIndex ` with ` intValue ( ) ` for setting the selected index in ` PopupMenuButton . java ` to
added a method to check if the app is managed in the TaskbarStashController to ensure that unstashing is only performed when the
camel - 14263 : camel - core - do n ' t use customid attribute when generate route coverage . thanks to dav
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting for expected events to enhance flexibility in event mismatch handling by allowing
added a new file ` HeaderFixer . java ` that implements the ` HeaderFileProcessor ` for processing headers to facilitate the
added a new constant ` FIRST _ LOAD _ COMPLETE ` and a method to send a broadcast for the first load broadcast in ` Launcher `
deleted the SuperJumperAndroid . java file to the functionality was no longer needed in the project
updated the return value in SystemTableScan . java to check if the table is distributed and modified the query construction in TestStarQueries . java
renamed KeyValuesProviderAware and ObservationConventionAware interfaces to improve clarity and consistency in naming conventions
remove the remapping in the processIdRematches method signature and update the list of missing blocks and items to improve the handling of resource
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast ' i ' to long type to ensure correct handling of
added caching logic for the last format string in HSSFCellStyle . java to improve performance by avoiding unnecessary retrieval of the cached format
updated the query parameter in RemoteAuthenticationEndpointTests to include username in the request to ensure that users are filtered based on the user ' s username
replaced ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java `
added container info and page index to the logging of the launcher all apps exit to enhance logging clarity by providing additional workspace information and page index
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused code related to deadlock functionality
added null checks for newInput and improved debug messages in BugContentProvider , BugGroup , and DeltaInfo classes to enhance robustness and
added a " Reopen in Browser " menu item and modified server state handling in JavaScriptEditor . java to improve user experience by allowing users to
added OUTPUT _ SPECIFIED _ MULTIPLE _ TIMES error handling and improved formatting in SemanticAnalyzer . java and SemanticAnalyzer . java to
added null checks for the ` addEntryListener ` method in ` BasicTest . java ` to ensure that the ` addEntryListener ` method
fix coordinatearray . reverse ( ) to return early if coord . length < 1
removed unnecessary whitespace in the setOpen method call to improve code readability and maintain consistency
added a new boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper handling of
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to streamline
set the destination of the message dispatch to the destination of the message to ensure the correct destination is used for message processing
updated the return value from MIN _ VALUE to MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the correct value is returned for maximum
refactor variable assignments in NestedArithmeticTest . java and add @ Override annotation in AMD64FloatConvertNode . java to improve code
updated the ` addComponent ` method to include a ` true ` parameter for ` pendingChunks ` and ` buff ` in ` HttpClientRequestImpl `
updated the regex in GetMavenDependenciesTask . java to replace " analysis - " with " analyzers - " in the artifact to
pdfbox - 4892 : use getcosdictionary instead of getdictionaryobject , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to clean up code and improve readability
fix visibility of field in schema transform ( # 1748 )
added configuration options for solidity JSON RPC and HTTP JSON RPC port in multiple classes to enable or disable JSON RPC based on configuration for improved
added a check for ` folder ` before removing a drop target in ` mDragController ` to avoid potential ` ClassCastException ` when removing a drop
refactor stubJar creation logic into a separate method for clarity to improve code readability and maintainability by encapsulating the creation of stub
updated feature descriptions in StartPageTopComponent . java for better clarity and guidance to enhance user understanding of wizard and workflow helper features
remove redundant call to scheduleWithFixedDelay in CassandraDaemon . java to streamline the code by eliminating redundancy
simplified the null check for the ' available ' variable in OnlineTestCase . java to improve code readability and maintainability by
updated return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to reflect the correct return value from ALL _ USER
added null checks for onIdleTimeout and onFailure in HttpChannelState . java and updated failure handling in HttpChannelTest . java to improve robust
modified the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to improve performance by avoiding unnecessary blocking operations
added support for column header separators in TableBlockParser and created corresponding test cases in TablesTest to enhance header parsing functionality and ensure correct parsing of
updated the camera ' s return value from 32.0 f to 31.5 f to improve camera rendering accuracy
added a preference to disable the startonbootup feature in GpsSettingsActivity and updated URLs in Utilities and Utilities to ensure compatibility with the
update client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger secret values for improved
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include a ' name ' parameter to clarify that null parameters are
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to Race condition issues
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return an instance of ` PinotFS ` instead of
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting based on the user ' s language
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the visual appearance of the UI
added synchronization and refactored ping task handling in Bot . java to improve thread safety and ensure proper shutdown of the executor service
removed the exception message from the error message in the ShenyuResultWrap . error method call to simplify error handling by directly using the
renamed the parameter ` module ` to ` from ` in multiple methods across multiple classes to improve clarity and consistency in method naming
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added an exception for unsupported equals ( ) and
removed unnecessary comments and improved code formatting in CustomPlaybackOverlayFragment , ImageButton , and ImageButton classes to enhance code readability and maintain
updated zoom level settings for mapView and mvp in BasicMapViewer . java to improve user interface responsiveness by adjusting zoom level
refactor user and group retrieval to use process user names instead of admin users to improve code clarity and maintainability by centralizing process user
replaced calls to ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in multiple files to streamline permission
added argument extraction functionality to DelegatedClientAuthenticationAction and related classes to enhance service resolution by allowing more flexible argument extraction
changed the ` defaultGroup ` variable from ` private ` to ` private final ` in ` NacosServerRegisterRepository . java ` to
fix tile size changer not clear the cache
removed redundant ` removeAllViews ( ) ` calls in ` InfoLayoutHelper . java ` to streamline the code by eliminating unnecessary complexity
refactor ` cleanEntriesForFeedsWithoutSubscriptions ( ) ` method to ` cleanFeedsWithoutSubscriptions ( List < Feed > ) `
removed redundant calls to CoreAuthenticationTestUtils . getAuthentication ( ) in ImmutableAssertionTests . java to streamline code by eliminating unnecessary dependency
nifi - 1745 : use temporaryfolder instead of temporaryfile for firewall test
fix conic five point for non - zero
reformatted conditional statements in RandomAccessReader . java for improved readability to enhance code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress
refactor CImage and CPlatformWindow classes to improve image handling and buffer creation to enhance code readability and maintainability by centralizing image
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to standardize the
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in multiple files to improve clarity and consistency in
replaced manual null comparison with java . util . Objects for null checks to improve code readability and reduce boilerplate code
corrected the spelling of " canonical " to " binary " in multiple files and added null checks in the resolveClassFromCanonicalName method
added multiple verification checks for location configuration in NinjaDefaultTest . java to ensure proper handling of location configurations in tests
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated padding calculations in DetailFragment and adjusted listViewPositionOffset values in ListFragment to improve layout responsiveness and ensure proper layout adjustments
updated exception handling in ZkStateReader . java to use Thread . currentThread ( ) . interrupt ( ) instead of Exception to improve error handling
added null checks for field values in HttpFields . java and created a new test for handling empty headers in RequestTest . java to ensure that
fix npe in ipaddressmanagerimpl when staticnat service be not support in the specified network id
added multiple calls to resetHeaderScrollingState ( ) and resetFabVisible ( ) in OCFileListFragment . java to ensure proper
added a method to remove extra empty screen from the workspace to improve user experience by preventing unnecessary screen updates
added a fixedWidth flag and modified glyph positioning logic in BitmapFont . java to allow for dynamic adjustment of glyph widths based on the fixed
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored argument handling in ` ChangeLogFragment ` to simplify
added preEvent , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state management capabilities for improved event handling
refactor ConfigDescriptionProvider class for improved clarity to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase to include clientHiveConf to
refactor facet sorting logic to use a boolean variable for clarity to improve readability and maintainability of the code
updated the cache file path in CheckstyleReport . java to use the model directory instead of the target directory to ensure the cache file is correctly
added logic to stop the Jetty server if it does not exist in the test collection to improve test reliability by ensuring that the Jetty
added a fileName parameter to the FileActionsDialogFragment and updated the FileActionsDialogFragment to accept it to enhance user experience by allowing users to
update reorder direction handling in CellLayout . java to include INVALID _ DIRECTION to ensure proper handling of external mode during reordering
updated API endpoint paths from " v1 / accounts " to " v2 / accounts " in AccountAPI . java and InnerTransferRequest .
add jobexecutionservice # getexecutionidforjobid ( ) method that return the job execution id
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and added new visitIdentifier methods in FindTypes . java to improve code readability and maintainability by
set the action text color to primary dark in AuthenticatorActivity to enhance the visual appearance of the user interface
added support for a new ` find ` method in multiple classes and updated imports in the ` StreamSupplierComponent ` and ` MockManagerImpl `
renamed methods from ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleSteps ` and ` addTestSteps
renamed method ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests . java ` to
added a ` cancelClient ` method to the ` RpcServer ` class and updated the ` startDriver ` method in ` SparkClientImpl `
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` and ` ReflectionParamInfo `
initialize lastDisplayedUser with Optional . empty ( ) to ensure lastDisplayedUser is not null to avoid potential null pointer exceptions
added an ` findAll ` method to ` QueryDslMongoRepository ` and updated its usage in ` AbstractPersonRepositoryIntegrationTests ` to enhance
added null checks before calling stop ( ) on SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions during stop operations
planner - 1187 : fix benchmark benchmark to exit warm - up loop in case of failure
added xread methods to MultiKeyPipelineBase , MultiKeyBinaryRedisPipeline , and MultiKeyCommandsPipeline classes to enable better handling of stream
removed redundant calls to ` this . incrReadByteCount ` in ` LinkedBufferInput ` and ` StreamInput ` classes to streamline the
added support for WebSecurity customizer in CasWebAppSecurityConfiguration and updated method names in CasWebSecurityConfigurerAdapter to enhance security configuration
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to include
added ` registerProviderInternal ` method to ` ShadowContentResolver ` and refactored ` ContentProviderController ` to use it to improve provider
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to ensure compatibility with the latest Java API changes
added keep - alive configuration to SingleConnectionManager to ensure proper connection management based on configuration settings
[ java ] rename unicastsenderflowcontrol to unicastsenderflowcontrolsupplier to avoid confusion .
ggb - 1193 fix npe for locus with no point in 2d
added exception handling and improved buffer flushing in WebSocket - related classes to enhance robustness and ensure proper resource management during WebSocket operations
simonstewart : add a configuration option to take screenshot .
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and maintainability of the test code
remove deprecate method in trufflelanguage # getcontextreference ( )
modified exception handling in StubberImpl . java and added StubbingWithBadThrowablesTest . java and UninstantiableThrowableTest .
refactor error handling in Actor . java and Group . java to improve clarity of error messages to enhance code readability and maintainability by
added location permission handling in LocationPickerActivity and updated ContributionController to use LocationPermissionsHelper to enhance user experience by allowing access to location permissions
http : / / issues . apache . org / jira / browse / amq - 4891 - add a simple example for the
added import for CookieSpecs and set the request configuration to STANDARD to ensure proper cookie settings for HTTP requests
simplified the intersection check to use the ` overlaps ` method to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio handling in Airspy
added support for monitoring URL in ScrollingPanel and SystemInformationsButtonsPanel to enhance user experience by allowing users to specify a monitoring URL for
[ hotfix ] [ k8s ] remove kubernetes . service . create - timeout config option
added case handling for landmark , city , and empty photo in NearbyListFragment . java to enhance user interface by providing appropriate icons
added a null check for the package before accessing its properties in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when the package is
added a new file ` PrintInlining . java ` containing a main method that prints " Passed " to demonstrate the
fix ( javadoc ) : fix parsing of nested brace in javadoc tag
[ java ] remove unused variable in archivetest . java
updated EdgeDataTableModel to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) to ensure correct handling of edges and meta edges
removed unused imports from SpringResourceProperties . java and PasswordManagementConfiguration . java to clean up the code and improve readability
updated logging format from % d to % f in VideoManager . java to improve logging clarity for invalid playback speed settings
add a check to make sure we do n ' t crash when a room be remove from the cluster
updated the minimize option from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure the test uses the correct number of cores
added flipY , mips , and key settings to TextureHelper . java to enhance texture rendering options for better visual representation
refactor PythonDslProjectBuildFileParser to use EventReportingProjectBuildFileParserDecorator for improved event handling to enhance event reporting and
add a new abstract class ` LibraryNormalizationPass ` and modify ` J2clTranspiler ` to handle ` LibraryNormalizationPass ` to
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactoryTest
[ hotfix ] [ runtime ] remove redundant check forreed segment in memorymanager
added Temporal annotations for TIMESTAMP type in ConsoleSessionVO . java to enable proper handling of timestamps in session management
added Hbs and HbsTest classes to implement TemplateEngine for handlebars to facilitate the handling of template templates in the handle
added null and empty check for hint in ChatMessageAdapter and refactored setUpMessage method for better readability to improve code clarity and
pdfbox - 4892 : use value instead of keyset , a suggest by valerybokov
danielwagnerhall : add test for alert and confirm dialog
added a check to return null if the number of distinct column indices is less than 2 in ReduceSinkDeDuplication . java to prevent
refactor class path handling and improve error reporting in MiscUtils . java to enhance code clarity and ensure proper handling of file paths and
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated groupId from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " websocket - client
replaced ` Collectors . toUnmodifiableMap ` with ` Collections . unmodifiableMap ` in ` SAMLAuthenticatedUser . java ` to improve code
update the ` ` modified ' ' state of sketch code in the ` ` setmodified ' ' method to ensure that the ` ` modified '
replaced instances of ` new Double ( ) ` and ` new Float ( ) ` with ` getDeclaredConstructor ( ) ` in multiple Java files
updated the method from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource . java ` to ensure the correct timestamp is used for data retrieval
added a condition to check if the class name is " javax . naming . Context " in the HtmlJndiTreeReport class to ensure proper
refactor database options handling in StorageUtils to use a switch statement to improve code readability and maintainability by using a switch statement for database
changed edge type from " double " to " mutual " in ImporterGEXF . java to correct edge type handling for mutual
replaced the static final integer FLAG _ SLIPPERY with an import for WindowManager . LayoutParams . FLAG _ SLIPPER
truffle : fix array dimension calculation for array field .
added functionality to retrieve and set the Google Drive folder path in the Google Drive configuration to enhance user experience by allowing users to specify the
simonstewart : add the ability to shuffle the suggestion popup in the web
added @ Nullable annotation to multiple method signatures in Truth . java to improve null safety by indicating that the target parameter may be null
updated bitwise operations in ArrayUtil . java to correct new size calculations to ensure proper handling of new sizes for improved performance
added a new test class ApiExceptionTest and modified ClassInstrumentor to check if the constructor can be instrumented to ensure proper error handling and instrument
[ hotfix ] [ runtime ] fix intermittent test failure in anticompaction
added keyguard security checks in ShadowKeyguardManager and corresponding tests in ShadowKeyguardManagerTest to enhance keyguard management capabilities for API level
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the StringDialog class
replaced single quotes with single quotes in status parsing and added a conditional check for the length of overrideParts to ensure proper parsing of the status
corrected a typo in the method name from assertEmptyThrowsMutipleFailureExceptionForManyThrowables to assertEmptyThrowsMultipleFailureExceptionForMany
added a condition to check if ` checkDrained ( ) ` is not called after ` close ( ) ` in ` AsyncFileImpl
updated LIGHTS _ NUM and LIGHT _ INTESITY values and adjusted light parameters in HybridLightTest . java to improve light
replaced instances of ` TestProjectFilesystems ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test classes to simplify filesystem initialization
changed the type of ` loadRerunFile ` and ` loadRerunFile ` from ` List < String > ` to ` List <
refactor Gson , JsonArray , and JsonObject classes to improve code organization to enhance maintainability and readability of the codebase
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to indicate that the TEST _ DIRS array is not
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` Shadow
added a method to reset the prefix index in ` Stylesheet ` and refactored ` BasisLibrary ` to use a thread - local
added logging for HTTP connection in TestDistributedStatsComponentCardinality to improve debugging capabilities for HTTP connections
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that ` throwIfImmutable ( ) `
added @ NotNull annotation to method parameters in GrpcServerRunner and updated URI creation in GrpcClientBuilder to enforce non - null annotations and
refactor ` Graal . java ` to use a ` Supplier < Path > ` for improved readability and maintainability to enhance code
invalidate insightassumptionsarray and insightpercontext when key change .
added platform - specific handling for writing manifest files in GenerateManifestStep . java to ensure compatibility with different operating systems and improve error handling
fix for rcn _ redUNDANT _ NULLCHECK _ OF _ NONNULL _ VALUE and add a new class RFE3531161
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and updated ThingResource to handle null values to improve code safety and prevent potential null
use runtimeexception instead of throwable in masterjobcontext # createcancellationexception
pdfbox - 4892 : initialize the cropbox when there be no cropbox
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the codebase
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access of All Ap
replaced the initialization of FragmentActivity with Robolectric ' s buildActivity method to improve compatibility with Robolectric ' s activity
renamed ` getFileCoordinates ` to ` processFileCoordinates ` and introduced ` getDecimalCoords ` method in ` ShareActivity ` to improve cl
rename ABCase classes from ABCase to TestABCase across multiple files to improve clarity and consistency in naming conventions
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added null check for getBlackholeAddress
added a new variable ` handler ` and invoked ` doSimsChanged ( ) ` in ` OpenRocketViewer . java ` to ensure
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe to change Maven dependency groupId and artifactId to facil
refactor FileSystem initialization and segment addition logic in IndexingJob . java and add validation in SegmentChecker . java to improve code clarity and
updated equality check from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor PreprocessorDelegate to use a Supplier for managing replacement paths and pathToSourcePathMap to improve code efficiency and maintainability by reducing
rename JsonExamples class to Examples and update package - info . java files to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java to improve visibility into the extraction process and stream operations
refactor FindsByLinkText class to improve code organization to enhance maintainability and readability of the code
added a new Main class in the com . facebook . buck . oop _ javac package to demonstrate the usage of
fix thread safety issue in sip account registration wizard
removed duplicate continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unused
refactor ` AndroidLibraryDescription ` to use ` Supplier < ImmutableList < BuildRule > > ` instead of ` ImmutableSet . Builder ` to improve
updated the method call from ` stream ( ) . count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl .
added content encoding handling in ExtractingDocumentLoader to ensure correct content encoding is used for metadata
cloudstack - 4892 : fix databaseconfig . insertsql ( ) to use ?
added a condition to return early if the slot is - 1 in WindowListener . java to prevent unnecessary processing when the slot is - 1
added support for ignore - transitive - repositories in Maven execution requests to enhance flexibility in managing remote repositories during execution
removed the dependency on BackgroundJobManager in ContactsPreferenceActivity . java to streamline the code by eliminating unnecessary dependencies
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and improve compatibility
added null check before closing selection in NIOTransport to prevent potential NullPointerException when selection is null
added a condition to break the loop if the index matches the length of the string to ensure that the regex pattern does not match the end of
added a value of " server . port = 0 " to the IntegrationTest annotation to specify the server port configuration for integration tests
added a new class ` UDFReverse ` and modified ` FunctionRegistry ` to register the " reverse " function to enhance functionality by allowing users to
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` for context path retrieval to improve clarity and
refactor Tracer class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] ignore rocksdb state backend test in rocksdbstatebackendreaderkeyedstateitcase
replaced specific JUnit assertions with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve readability
added synchronization around buffer clearing in StarTreeRecordStoreCircularBufferImpl . java and a corresponding test in TestStarTreeRecordStoreCircularBuffer
updated forecastMinutes , forecastHours , and forecastDays values in OpenWeatherMapOneCallHandler . java to improve the accuracy of forecast data
updated ` AbstractPageOperationTemplateTest ` to include ` timeout ` and introduced ` getPreviousFetchRequestTime ` method in ` AbstractPageOperationTemplate
updated RemoteTargetGluer and FloatingHeaderView to improve handling of remote target handles and added suggestion mode functionality to enhance user experience by providing
updated CucumberPropertiesParser to return a flat map instead of a single map and modified parseRerunFile method to return Stream to improve
added new livingwood , glimmering , glimmering , and biome chiseled brick , and
updated assertions in TestRadioButtons to compare size of optItem and retrievedOptions to ensure correctness of expected values in assertions
added support for file size handling in RCFileCat . java and implemented getNumberRows method in RCFile . java to improve file size management and
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
[ jna ] add sanity check for ndarray in jnautils
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
fixed bug 1244443 - unusedprivatemethod no longer report a false positive when an initializer be declare .
renamed ` lexicalScope ` to ` lexScope ` in multiple files to improve clarity and consistency in variable naming
added a new test method ` testAutoStartup ` in ` InboundChannelAdapterParserTests . java ` to verify the functionality of the `
added methods to retrieve and set child and item boundables in the STRtree class to enhance the structure and flexibility of the structure of the
modified version parsing logic to handle minor version numbers more accurately to ensure compatibility with different version formats
added a check for non - empty tags before adding to activeItem and updated logging level from warn to debug to ensure that tags are only added
added methods to parse and convert date - time strings to epoch milliseconds in DateTimePatternHandler and DateTimeFunctions to enhance date parsing capabilities for better date
refactor the ` disassemble ` method to use a dedicated ` disassembleForCache ` method to improve code readability and maintainability by
refactor Log4j2ConfiguratorServlet for improved logging functionality to enhance code readability and maintainability
removed redundant initialization of HiveException and AuthorizationException in StorageBasedAuthorizationProvider . java to streamline exception handling by eliminating unnecessary initialization
updated CGoCompileStep to use String . join for command prefix and added a new test for prebuilt dependencies in GoBinaryIntegrationTest to
make io . fabric8 . kubernetes . api . builder non - editable by default
removed the @ Override annotation from the Only class to streamline the code by eliminating unnecessary overrides
added TIMEOUT _ THREE _ HOURS constant and updated HttpConnectionParams to use it to improve readability and maintainability of the code
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
simonstewart : add support for the ` ` trace ' ' option to the selenium server
added the @ Singleton annotation to the ApplicationController class to ensure that only one instance of ApplicationController is created throughout the application
updated username retrieval logic to handle OwnCloudAccount instances to improve robustness by providing a fallback if the display name is not null or empty
added BatchStatus import and a test for resuming a paused job in SimpleJobLauncherTests . java to ensure proper job execution handling and validation
added null check for cacheConfig before retrieving the last modify time in HttpSyncDataService . java to avoid potential NullPointerException when cacheConfig is null
simonstewart : make the DockerSession class public and update the LocalNode class to enhance accessibility of the DockerSession class and
fix : use ` ` java . lang ' ' instead of ` ` java . lang ' ' in compilationunitcontext
pdfbox - 4892 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
testdistributedlanczossololvercli : fix checkstyle violation
refactor HttpServerTestBase class to improve code readability to enhance maintainability and facilitate future development
refactor assertions in PortletApplicationMapTest to improve clarity and functionality to enhance code readability and maintainability by using more descriptive assertions
added unit tests for NestedBeanIgnoreNulls in BeanTableSchemaTest . java and nestedBeanIgnoreNulls . java to ensure correct handling of null
fixed - spring . starter . spring . starter . spring . config . redissonautoconfiguration do n ' t work correctly
fix ( core ) : indicator . todouble ( ) do n ' t throw indexoutofboundsexception
added a new method ` execInContainerWithUser ` to ` ContainerState ` and ` ExecInContainerPattern ` to handle command execution with
updated condition checks for ` interestedInByteMessages ` and ` interestedInTextMessages ` to include both ` WebSocketByteListener ` and ` WebSocket
added multiple test cases for Semgrex pattern handling in SemgrexTest . java to ensure proper functionality and validation of semgrex attributes
added a broadcast intent for CLEAR _ PULL _ UNREAD in HomeFragment . java to enhance user experience by allowing broadcasting to
simplified the initialization of scroller and overScroller in TouchImageView . java to improve code readability and maintainability
added flush method to the DefaultProfileValidationSupport bean in multiple classes to ensure proper resource management and cleanup of the DefaultProfileValidationSupport instance
( chore ) camel - core : fix npe in camelcontext . start ( )
added a FloatingActionButton for displaying and closing the FAB menu in ShareActivity to enhance user experience by providing quick access to the F
added a new ` InlineParslet ` class and modified the ` J ` instantiation in ` ToDateTokenizer ` to handle inline parsing to
refactor TestAnonymousClassUnloading class to improve code organization to enhance maintainability and readability of the test code
updated error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java to use " toppniviv " instead
added a check for server status before binding operations service to ensure operations service is only bind when it is checked to improve user experience by preventing
updated position parameters in Position . java to include line and column positions to ensure accurate position position representation in the code
added waitFor method to manage process wait states in CxxPreprocessAndCompileStep and ManagedThread classes to ensure proper handling of process termination and
added a new property ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` and ` CasPersonDirectory
fix ( map ) : fix max size check in defaultrecordstore
added support for enabling SSL protocols in the NettyWebServer and SocketConfiguration classes to enhance security by allowing dynamic configuration of SSL protocols based
replaced ` AtomicBoolean ` with ` AtomicReference ` and refactored the handling of ` AtomicBoolean ` to use a wrapper class to
updated the return statement in QueryDslMongoRepository to handle null properties and added a test for empty string handling in SpringDataMongodbSerializer
updated assertion messages in RoundRectBorderTest . java for clarity and consistency to enhance test readability and maintainability by using more descriptive
added checks for empty genesis configurations and updated parameters in multiple classes to improve error handling and enhance clarity of bft validation logic
simonstewart : remove parallel test that be no longer need
updated CountDownLatch initialization to use min instead of cnt and added a length check in PrecompiledContracts . java to ensure correct handling of sign
changed the condition from checking if ` windows ` to ` ! windows ` in ` ProcessInformationsPanel . java ` to ensure that the condition
refactor methods in MoreCollectors for improved readability and consistency to enhance code clarity and maintainability by reducing redundancy
added null checks and improved WebSocket client handling in BitmexStreamingMarketDataService and BitmexManualExample classes to enhance robust
added validation for ` lat ` and ` lon ` in ` GeoPointField ` and corresponding tests in ` TestGeoPointField ` to ensure
refactor methods in OozieProxyImpersonator and WorkflowFilesService for improved clarity and consistency to enhance code readability and
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated ` getTableDocument ` method to include a ` withDependents ` parameter to enhance flexibility in handling dependent tables during table creation
added support for count of consecutive uploads without coordinates in UploadActivity and UploadPresenter to enhance user experience by providing feedback when the number of consecutive uploads
added caching functionality and a new endpoint for viewing profiles in ProfileResources . java to improve performance by caching profile data and improving user experience
refactor property handling in JpaMetamodelEntityInformation to improve clarity and functionality to enhance code readability and maintainability while ensuring proper
phoenix - 2321 add index to last ddl timestamp for table and view
add option to configure jersey exception mappers ( # 1748 )
added a new boolean parameter ` false ` to the ` storeFieldAction ` method in ` EntryEditor . java ` to control the behavior of
updated the ` nativeCreateNSWindow ` method to include a ` ownerPtr ` parameter and adjusted its usage accordingly to enhance functionality by allowing the
updated SQL command in FileContentProvider to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to improve clarity and consistency in
added a new StockSkin feature and modified the CIRCULAR _ PROGRESS event handling to enhance the visual appearance and visual appearance
fixed - commandasyncservice . readasync ( ) and writeasync ( ) method do n ' t throw illegalargumentexception
do n ' t log complex generic signature error in typeframemodelingvisitor
refactor back animation handling to utilize BackProgressAnimator for improved animation performance to enhance the responsiveness and responsiveness of back
changed the visibility of the ` _ initialPageNo ` variable from final to non - final and added a check for ` pageNo ` to
fix crc computation in jedisclustercrc16 .
added a comment pattern matching in FormattedSqlChangeLogParser and created a corresponding test case in FormattedSqlChangeLogParserTest to enhance
removed initialization of JarArchiver in MavenArchiver and added JarArchiver setup in AbstractJarMojo to simplify the code by elimin
replace ` HumanReadableException ` with ` BuckUncheckedExecutionException ` in ` DefaultClassUsageFileReader . java ` to improve error
removed unnecessary condition checking for aggregations in TSServiceImpl . java and added multiAggregationTest method in DaemonTest . java to improve code readability
added input validation for pixel formats and types in GwtGL20 . java to ensure compatibility with different buffer types and improve error handling
added a new test method ` testDebugInfo ` and modified method calls in ` PrintR ` , ` VarDump ` , and ` Var
improve error message when byte buddy can not instrument all class within the mock type hierarchy
[ gr - 25946 ] report class initialization trace for class ( es )
http : / / issues . apache . org / jira / browse / amq - 4892 - fix typo in brokerrequest
updated TopicRouteService to use Caffeine caching instead of Google Commons Cache to improve performance and maintainability by utilizing Caff
mbtilesfile : do n ' t allow read - only data source to be read - only
updated INVALID _ SOURCE _ TARGET _ RELEASE regex to allow for both 1 and 1 characters to improve error handling for invalid target release patterns
added a check for availability before constructing the URI string in DetailFragment . java to ensure the location intent is handled correctly when the location is not
added a null check for inheritedParameterContexts in StandardParameterContextDAO . java to avoid potential NullPointerException when inheritedParameterContexts is null
refactor ClassLoader class to improve code readability to enhance maintainability and ease of understanding
added a method to set origin response headers in ProxyRequestHelper and corresponding test in ProxyRequestHelperTests to ensure correct handling of HTTP headers in
removed the instantiation of ProfileSettingDrawerItem in GpsMainActivity . java to streamline the code by eliminating unnecessary functionality
add a new constant for XML validation in multiple classes to improve code readability and maintainability by centralizing XML validation logic
simonstewart : fix the issue that firefox driver do n ' t work as expected
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure fetch size does not exceed the defined maximum limit for
refactor ` isCountOptimizable ` to ` allActionsAreOptimizableFilters ` for clarity to improve code readability and maintainability
added event handling for node and mouse events in StandardVizEventManager to improve user interaction with node and mouse events in the visualization
refactor memory management in ManyToOneRingBuffer to use a dedicated zeroBuffer method to improve code readability and maintainability by encapsulating buffer
make the xorgroup field accessible from the terminalnodememory instance
removed redundant methods ` getHeight ( ) ` and ` getWidth ( ) ` from ` LCDUIImageMonochromeBitmapSource ` to stream
refactor SourcePathResolver to use a dedicated method for retrieving absolute paths to improve code readability and maintainability by reducing duplication
fix ( dstu2 ) : fix dstu2 parser error
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and updated the way the URL is encoded in ` WebsocketRoutingFilter
llvm / gcc / ncc / testcasefiles do n ' t work with llvm / gcc / ncc
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to use a dedicated method to improve code readability and maintainability
added imports for Lucene ' s IndexReader , Searchable , and Similarity classes in the Lucene library to enhance documentation clarity and
updated ConcurrentLinkedStack to handle null values and added new test cases in ConcurrentLinkedStackTest to improve robustness of concurrent linked stack operations and
added ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueue
added a null check for mDirectories before accessing its elements to avoid potential NullPointerException when mDirectories is null
updated condition to check for overview state and first layout in RecentsView . java to ensure proper handling of gesture states based on overview state
added package - info . java files for various Lucene packages to provide package - level documentation for various Lucene packages
added a text to the visibleAutoLeveler panel in AutoLevelerTopComponent to enhance user experience by providing a clearer visibility label
added post - optimize callback functionality to DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler classes to enhance event handling during post - optimize
updated decompressor initialization to use padded length and adjusted input buffer initialization to ensure proper handling of dummy byte values during compression
removed a check for user data in Shaderc . java to streamline the shader validation process by eliminating unnecessary checks
added a check for local meta store in RetryingMetaStoreClient . java to ensure retries are only attempted if the base is not local to
added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to ensure logging only occurs when the root cause is
refactor methods in Subject class for improved clarity to enhance maintainability and readability of the code
added referencetype . weak and referencetype . STRONG to the map in abstractserializationservice
fix color distance calculation in hssfpalette . findsimilarcolor ( )
chore ( regen ) : update license year for generated file
added unit tests for the ` findElement ` method to handle numeric IDs and return lists to ensure correct functionality of the ` findElements ` method
added a flags parameter to the registerReceiver method across multiple classes to enhance functionality by allowing customizable flags during receiver registration
refactor FFmpegTest to use Mockito ' s Answer for better mock handling to improve code readability and maintainability by leveraging
modified Ogg and OpenALMusic classes to include a previous input stream handling mechanism to ensure proper resource management and prevent memory leaks during
added a new constant RESPONSE _ WAS _ NULL and updated the failureMessage assignment to use this constant to improve code readability and maintainability
[ te ] do n ' t fail migration if anomalyfailurecount = = 0 and anomalywarningcount = = 0
refactor ` BaseActivity ` and ` DetailActivity ` to use a dedicated ` showToast ` method to improve code readability and maintain
updated method calls in TracingFeignClient to use requestTemplate ( ) instead of method to improve clarity and consistency in request handling
added name validation and referral handling in LDAPCertStore . java to ensure proper handling of LDAP names and improve error management
refactor retain logic in GatewayRSocket to use a dedicated retain method to improve code readability and maintainability by reducing duplication
rename ` AdapterViewTest ` to ` ListViewTest ` and add a test for item click functionality in ` AdapterViewTest ` to improve
[ hotfix ] [ test ] use @ classrule instead of @ before
deleted the GenericItemUIProvider . java file to the project is no longer needed in the project
added getter and setter for the ` selectedObject ` field in ` SIPCommSelectorBox ` to enhance the functionality of the ` setSelected `
added JUnit Jupiter ' s @ Isolated annotation to MetaInfConfigurationTest . java to indicate that the FileSystemPool access method is
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to HttpServer . java to configure the server ' s host for the HTTP
updated token validity and refresh token settings in DynamicClientRegistrationEndpoint . java to differentiate between different grant types and their configurations based on configuration settings
added a new ` CloverInstrumentationFilter ` class and modified the ` SplitLogCounters ` class to include a check for synthetic interfaces to
added ZHIMI _ HUMIDIFIER _ CB2 to MiIoDevices . java and updated newline in ReadmeHelper .
mineprocess : fix movement not break when movement time be below cost _ inf
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that Ambari may not be
updated the return condition in IntHashSet . java to simplify the logic to enhance readability and maintainability of the code
added serializable to the RuleAdministratorImpl class to enable serialization of the RuleAdministrator instance
replaced List < String > with Set < Pattern > for allowed origin and timing origin patterns in CrossOriginFilter . java to enhance flexibility
updated g3d file paths from " g3d / cube _ anim . g3dj " to " g3d / knight
added a null check for solidifiedPosition in the numHashCache putData method and improved error logging if solidifiedPosition is negative to
hbase - 2590 fix npe in execresult . getvalue ( ) when value be null
added a method ` hasAccess ` to check if a user is authorized and improved error handling in ` HttpServer . java ` to enhance security by
refactor ClassMirror and StubJar classes to utilize ByteSource for handling Jar entries to improve code readability and maintainability by encapsulating
added a TextView to display the internal link text based on the file ' s folder status to enhance user experience by providing clearer context for sharing
updated assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
updated the condition for checking the SATURDAY value in ModelZooTest . java to ensure the correct validation of the SATUR
removed the hideInput ( ) method and its implementation in AllAppsContainerView and LauncherAllAppsContainerView to streamline input handling and
[ java ] add inmemoryeventstorageengine to unit test
refactor file handling methods in BsdFileStore , BsdNativeDispatcher , and UnixNativeDispatcher to improve code readability and maintainability
add test case for issue # 1599 resolve issue # 1599
added a new command parameter ` x ` and ` z ` to the ` spawn ` command and implemented error handling for invalid arguments to enhance command
refactor height and content area width calculations to use a constant for minimum dimensions to improve code readability and maintainability by reducing redundancy
do n ' t print stack trace when code installation fail
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to relies on
added plugin check classes to the upgrade table in UpgradeCheckRegistry and modified the addColumnsToUpgradeTable method signature in UpgradeCatalog280 to
refactor Environment class to improve code organization to enhance maintainability and readability of the codebase
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with a BadApple annotation to address issue SOLR -
updated the home assignment logic in CodenameOneImplementation . java and removed a warning in HashtableContent . java to ensure the home path does
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific resource imports with a wildcard import and updated resourceAccessor initialization in LiquibaseEntityResolver and XMLChangeLogSAXParser
added security property settings for disabled algorithms in ComHostnameVerifier and JavaxHostnameVerifier to ensure proper handling of TLS algorithms during testing
updated the ` @ Value . Immutable ` annotation to be non - singleton and modified the instantiation of ` CxxDeps . EMPTY ` to improve
renamed ` expectedDirectory ` and ` actualDirectory ` variables to ` expectedStubDirectory ` and ` actualFullDirectory ` , and updated related
corrected the formatting of the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to improve code readability and maintain consistency
update folder name hint logic to handle empty title cases to improve user experience by providing clearer guidance when the folder name title is empty
updated the ` loadClientByClientId ` method to include an additional parameter " uaa " to ensure that the client is loaded with the correct
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to methods for better encapsulation
updated method calls in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to use " ( isClosed ? - 1 ) " instead of "
refactor MimetypeIconUtil class for improved readability to enhance maintainability and clarity of the code
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test for negated parentheses in UnnecessaryParenthesesTest . java and modified the condition in UnwrapParentheses . java to
added a teleportation method to the Location class and modified the constructor to use it to enhance functionality by allowing teleportation of the Bukkit
replaced direct usage of ` Base64 ` with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint ` and
updated import statements and added ProjectComponent dependency in TranslatorManagerHelper . java to enhance project component management and improve statistics reporting
rename the interface ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and consistency in naming conventions
added a null check for the result in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value to
refactor setUpRevampedTweet method to use isMuffled method for better clarity to improve code readability and maintainability by
added conditional logic to retrieve the verified text based on the user ' s theme settings to enhance user experience by allowing users to choose the verified text
changed the visibility of the AbucoinsDigest constructor from static to private and modified the timeDiffFromServer variable to enhance encapsulation and ensure
camel - 14263 : camel - mongo - enable autowired = true for camel - mongo component .
added a sourceIndex field and related methods to the AttributeMapping class and updated related classes to utilize it to improve attribute mapping functionality by allowing
log warn if hive _ corrupted _ column _ statistics be find when alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks during authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
do n ' t escape email in contact email in geoserverhomepage
move the subsystem reflection from modulemanagerimpl to modulemanagerimpl so that it can be use by the modulemanagerimpl
updated the feature count in JoinModeller . java to use a variable for improved clarity to enhance code readability and maintainability by
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 576 :
added conditional checks for debug and trace logging before logging messages in SingleNodeKafkaResumeStrategy . java to ensure logging is only enabled when debug
replaced hardcoded value of ACTION _ SET _ PLAYBACK _ SPEED with a constant from PlaybackStateCompat to improve code
added support for automatic separation in MotorMountHandler and improved event handling in various classes to enhance the functionality and clarity of
tika - 1187 -- allow ascii name length to be the same as the unicode length , and add a test for this .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored on JDK 1.8
refactor lock file creation into a separate method ` createLockFile ( ) ` in ` MavenDependencyResolver ` to improve code readability and
updated preference keys from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " in UpdateUtils . java to enhance
added a check to return null if the username equals the FEDERATION _ USER to prevent potential null pointer exceptions when the user is not
truffle : fix executemethodnode . isinstance check for truffleobject .
refactor filter logic in JakartaClientShutdownWithServerWebAppTest and JakartaClientShutdownWithServerWebAppTest
logbackvalve : do n ' t throw an error if the filterchaindecision be disabled
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version in CreateIndexTask . java to streamline code by eliminating unnecessary dependencies
added schema handling for missing primary key changes in OracleDatabase and AbstractDb2Database to ensure proper schema management for missing primary keys in the database
added ` MetastoreException ` to ` execute ` and ` repair ` methods in ` MsckOperation ` and ` TestMSCK
[ hotfix ] [ kafka ] retry kafka transaction before commit
updated the ` ForwardMessageToDLQActivity ` and ` ForwardMessageToDLQActivity ` to include ` ReceiptHandleProcessor ` to enhance
added a service list to the DockerComposeContainer and modified the DockerComposeServiceTest class to handle empty services to improve flexibility in DockerCompose
fix bug in export and structcontextdecorator that cause a concurrentmodificationexception .
removed unnecessary imports and simplified XML processing in FeedParser . java to streamline code and improve readability by eliminating unnecessary cleaner functionality
removed conditional check for DISABLE _ ALL _ APPS in Launcher . java and updated child index retrieval in Workspace . java to streamline
change energy data type from int to double in MeterRealtimeBodyDataDTO . java to improve precision in data representation for energy calculations
added a new file ` bug4150029 . java ` that implements a JApplet with file chooser functionality to demonstrate
added ` isSparkConfigUpdated ` property and its getter / setter methods in ` HiveConf ` , and implemented resource management in ` SparkClient
added ` getLongPressIndicator ( ) ` method to ` AppIcon ` and ` AppIconMenuItem ` classes and modified ` Launchable ` to
added checks for empty polygons and srid in WKBWriter and corresponding test cases in WKBWriterTest to ensure correct handling of empty polygons and
refactor UnflavoredBuildTarget builder implementation to use Interner for improved memory management to enhance code readability and maintainability by
added a new file MultiplyByMaxInt . java that implements a test for multiplication by a maximum integer to facilitate testing of
added drawer indicator enablement for root file display in OCFileListFragment to enhance user experience by enabling the drawer indicator when the current file
removed unused imports from TestRAMDirectory . java to clean up the code and improve readability
replaced instances of ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to
drools - 1341 dmn : fix error message for no expression define for a node ( # 1341 )
replaced ` @ ContainerFor ( A ) @ ContainerFor ( D ) ` with ` @ Repeatable ( AC . class ) ` in
added a duration string to the console message in AbstractController . java to include the duration of the file sending process
updated class name handling in OpenMBeanAttributeInfoSupport . java to use safeGetClassName ( ) instead of safeGetClassName ( ) to improve
refactor quorum response handler to accept a responsecount parameter to allow for more flexible response handling
added calculation of freeSize by roundTo16 ( s ) to ensure freeSize does not exceed available space limits
updated touch event handling in AnyKeyboardView and AnyKeyboardViewBase classes to include a new method to determine if touch events are disabled to improve
replaced the instantiation of SslContextFactory with SslContextFactory . Server in multiple server classes to ensure compatibility with the latest SslContextFactory standards
simplified the instantiation of the socket in PG _ Stream . java to improve code readability and maintainability by eliminating unnecessary security
refactor InputTest class to improve code readability to enhance maintainability and facilitate future updates
updated the ` finishRecentsAnimationOnTasksAppeared ` method to accept an ` Runnable ` parameter and modified animation handling in ` Abs
added a null check for curLatLng before adding the current location marker to avoid potential NullPointerException when curLatLng is null
updated the method to retrieve client IDs in ClientAdminEndpoints and added corresponding test cases in ClientAdminEndpointsTests to ensure correct handling of client details
updated SQL query formatting in SqlSourceBuilderTest . java to use newline characters to enhance readability and maintain consistency in SQL query formatting
http : / / issues . apache . org / jira / browse / amq - 4896 - fix for http : / /
added unit tests for UnknownKeyException and UnknownKeyException in SlidingGanttCategoryDatasetTest . java to ensure correct handling of unknown keys in
updated filterConditions initialization to handle null values and added return statements in ZookeeperSyncDataService to improve robustness by preventing potential NullPointerExceptions
[ lightcontrol ] add clonefields ( ) method to lightcontrol .
updated the logic for determining the hide stack trace in StdErrLog . java to improve clarity and correctness of stack trace handling
refactor HttpSessionEventPublisher to use a dedicated method for context publishing and add null context checks to improve code clarity and ensure context is not
added a check for the syntax of CREATE CQ statement change from v0.14 to ensure proper semantic error handling for syntax changes in CREATE
[ hotfix ] fix typo in flinkiottdbsink
added counter key for custom simplifying nodes in CanonicalizerPhase . java to improve clarity and maintainability of the code
updated the method call to include the context parameter when setting the fileIcon drawable to ensure proper context is used for file type icons
updated indexOrConstraintName retrieval to use schema . getName ( ) instead of a direct call to readIdentifierWithSchema ( ) to ensure the
fix bigqueryio . parsetablespec ( ) for timestamp field ( # 2321 )
added ` findViewWithTag ` methods to ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ViewTest ` to
updated enumeration type declarations to use generics across multiple classes to improve type safety and eliminate unchecked warnings
updated imports in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants , updated enum value retrieval logic , and improved annotation handling in JavaClassUtil to enhance JSON
svm : fix handling of jar file in resource feature
updated CUDA _ R _ 32F and CUDA _ C _ 32U constants in CUDA . java and modified CUDADNN
refactor ResourceLoader and ResourceLoader classes to improve resource loading logic to enhance readability and maintainability of the code
refactor getAttachedFace method to use SimpleAttachableMaterialData for better type safety to improve code clarity and maintainability by avoiding
added a case for VARBINARY in RelToStageConverter . java to support binary data handling in the RelToStageConverter
added import statement for DateHelper in NoteAdapter . java to utilize date utility methods for improved date handling
updated backup message handling and error messaging in the Backup . java and Captions . java files to improve clarity and specificity of backup loading
ggb - 1353 fix the position of the simple panel in the web
simplified file deletion logic in ShadowParcelFileDescriptor . java to improve code readability and maintainability
updated method calls from ` offer ` to ` removeFirst ` and ` addFirst ` in ` StackBasedSecurityContextHolderStrategy . java ` to
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
added unit tests for XorNeutral references in IntegerEqualsCanonicalizerTest . java and modified conditional checks in IntegerEqualsNode . java
added a static final constant for STRING _ ARRAY in TypeFactory . java to facilitate the use of string array types in the Type
refactor ` hideIme ( ) ` method to use a dedicated ` hideIme ( ) ` method across multiple classes to improve code
force bit density to fix network issue in blockstatecontainer
updated assertions in TimelineMetricCacheSizingTest and modified cache handling in TimelineMetricCacheTest to improve clarity of assertions and ensure
add max texture size optimization to minecraft .
[ java ] fix typo in trystoplogrecording ( ) call
added a conditional check for ` isInTransform ` in ` SemanticAnalyzer . java ` to initialize ` startPosn ` based on the ` isInTransform
replaced the ` isStarTreeDisabled ` method with a ` isSkipStarTree ` method across multiple classes to enhance query handling by allowing
added a boolean flag ` lockNearbyView ` to control the visibility of progress bar and refactored related methods in ` Nearby
add maptransformer . of ( map ) and inverse ( map < k , v , k , v > ) method to maptransformer ( #
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for a new ` launcherWidgetSpanInfo ` parameter and modified ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` to support
replaced ` ChangeListener ` and ` ChangeListener ` implementations with ` EventObject ` and ` StateChangeListener ` in ` StageSelector ` to
added methods to manage the retrieval and setting of the calling process ID and UID in ShadowBinder to enhance the functionality of the Robolectric
refactor ExpectationFailure class to use nullable message and cause fields instead of AutoValue to improve flexibility in handling ExpectationFailure by allowing
added a warning log statement for unsupported support for deserializing messages to improve error handling and provide clearer feedback during message deserialization
refactor calculations for ` newW ` and ` newH ` in ` ImageReplacedElement . java ` to handle cases where ` new
updated HTML escaping logic in CoreMarkdownNodeRenderer and modified test cases in MarkdownWriter to ensure proper handling of Unicode characters and improve test coverage for
added a new alert dialog button and refactored password sharing logic into a separate method to improve code readability and maintainability by encapsulating
refactor MAP _ ADDRESS , UNMAP _ BUFFER , and UNMAP _ BUFFER to use a static class MappingMethods for reflection to improve
updated method visibility from public to alphanumeric in AbstractAssert _ described _ as _ printed _ to _ console _ Test . java to enhance security by
added new options for Slider AM keytab in LlapOptionsProcessor . java and updated existing options in LlapOptionsProcessor . java to
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation control registration to enhance animation control
added a new boolean flag ` mHasLoaderCompletedOnce ` and modified shortcut binding logic in ` LauncherModel . java ` to ensure that
updated the ` data ` and ` isFinished ` variables to be ` final ` and modified the logic in ` NodeManageMemoryMergeOperator `
updated the ` add ` methods in ` IssueInterface ` to include ` messageType ` as a parameter and added validation checks in ` ValidationReport `
added a method to safely retrieve the cipher provider name and improved exception handling in RSAClientKeyExchange . java to enhance security by ensuring the
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to improve clarity by using a more descriptive variable name
change log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging during execution
updated output formatting in AggregateLifeCycle . java to improve readability and maintain consistency in output formatting
changed access modifiers of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow external access to these constants in the application
removed the @ Ignore annotation from CovariantOverrideTest . java to temporarily disable the test due to the implementation of covariant override
refactor curly methods to use a dedicated qtype method to improve code readability and maintainability
camel - 1774 : camel - core - optimize modelhelper and reloadstrategysupport to avoid npe
added space minimum and maximum settings for the X - axis in ScatterChart to improve the visual appearance of the ScatterChart
standardized spacing in ExpressionStringBuilder . java for consistency to improve code readability and maintainability
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check for the presence of " UTF8 " property in CheckEncodingPropertiesFile . java to ensure that the UTF8 key is present
updated TestReproduceMessage and LuceneTestCase to use @ SeedDecorators instead of @ RunWith for randomized testing to improve
added logging for long - press events on AllApps items in StatsLogManager to enhance user interaction by logging long - press events on AllApps
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null
added a condition to check if the sector preset is null or a value of showSectorLandInfo to ensure that land info display only occurs
updated type casting for ` getTypeAt ` and ` getFlatFields ` methods to use generics to improve type safety and eliminate unchecked warnings
refactor Enum class to improve code readability to enhance maintainability and ease of understanding
updated ` buildNearbyRandom ` method to accept a boolean parameter for random selection validation to enhance flexibility in nearby random number generation based
remove temporarycache . expireafterwrite ( ) and use java . common . cache . cachebuilder instead .
replaced ` layersContainer ` with ` createSQLViewContainer ` and ` createWMSLayerImportContainer ` in ` NewLayerPage .
set the default value of ` Availability _ availability ` from ` Availability . UNAVAILABLE ` to ` Availability . UNAVAILABLE ` to ensure that the
updated conditions and method signatures in FetchInvDataMsgHandler , PbftDataSyncHandler , and SyncService classes to improve synchronization handling and
chore : update gapic - generator - java version to 2.1 . 0 ( # 489 )
updated the ` _ freeSpaceReclaimDisabled ` variable to ` _ freeSpaceReclaimQ ` and modified related methods to improve clarity
changed access modifiers of KDC options from public to private static in KDCOptions . java and added a new KDCDefaultOptions . java
updated the initialization of the writer variable and set the output type to null to ensure proper handling of the writer object and prevent potential null pointer exceptions
reformatted code for consistency and clarity in ProfilePager . java to improve code readability and maintainability
rename the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in method
added a method to retrieve object value constant values from a class constant to enhance configuration flexibility for object value constants
added error handling to the initialize method in KafkaService . java to improve robustness by logging exceptions during service initialization
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Sets to improve clarity and maintainability of the resource management
updated channel name handling in MessageBus and MessageEndpointParser to improve clarity and ensure proper configuration of the ' auto - createChannels ' option
added keywords support in HTMLDocument and implemented a test for index keywords in TestDemo to enhance document functionality and ensure correct handling of document keywords in
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added an else block around the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to improve code readability and maintainability by
updated the instantiation of CorrespondenceSubclassToFactoryCall in CorrespondenceSubclassToFactoryCallTest . java to streamline the
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
updated ISBNtoBibTeXFetcher to use " www . ebook . de " instead of " manas . tungare
improve exception handling and increase keep - alive timeout to 10 second .
added null check for text before calling fireDataChanged and setCursorPosition to prevent potential NullPointerException when text is null
add a simplified model to the SentimentModel and update the binaryTransform and vectorToParams methods to use RNNUtils . vectorToParams
trim whitespace from the input string in SuffixURLFilter . java to ensure consistent formatting of input lines
added a conditional check to return early if the session is in Godmode to optimize performance by avoiding unnecessary processing when the player is in
ggb - 2338 fix : text input dialog be not register when keyboard be hide
updated constructors in LinkedHashMapCache and TCache to use a consistent parameter order to improve code readability and maintainability by standardizing constructor parameters
removed redundant calls to ` _ channel . close ( ) ` and adjusted variable assignments in ` ChannelEndPoint . java ` to improve code clarity
added null check for keyIndex and refactored KeyIndexBuilder initialization across multiple classes to improve code robustness and maintainability by preventing
added Locale . ROOT to the exception handling in DirectUpdateHandler2 . java to ensure consistent error reporting across different locales
add new input type for storecheckguard to writenode .
fix infinite loop in case of exception dispatch block .
bugfix : add get classificationdisagreement ( ) method to the dbcloud interface
replaced instances of BuildTarget . copyOf with direct assignment in multiple Java files to simplify code and improve readability by eliminating unnecessary method
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future development
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
renamed ` knownApis ` to ` knownSdks ` and updated related logic in ` DefaultSdkProvider ` to improve clarity and
use confidenceprogressindicator instead of progress indicator in createofferview
updated user agent header from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 , and modified UPNPService
fix a bug in the builder and blockindex . iteratebpt ( ) . close # 113
added new constant VIEW _ TYPE _ MESSAGE and VIEW _ TYPE _ MESSAGE _ NOFLEX , and modified the onCreateViewHolder method to
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
fix a bug in the EnglishGrammaticalRelations . java file where the conj expression do n ' t match the pattern .
removed the canvas parameter from the insert method and related calls in TexturePacker . java to simplify method signatures and improve code readability
added a default method ` apply ` in ` RefactorModule ` and refactored stream processing in ` AddGradleEnterpriseToMaven
added methods ` getChildByName ` and ` getChildByNameRecursive ` to retrieve child elements from a specified name to enhance XML processing capabilities by allowing recursive
set the Content - Charset header to " UTF - 8 " in HttpSolrServer . java and corresponding tests in BasicHttpSolrServerTest .
replaced static UI _ STATE _ ALLAPPS with @ SystemUiControllerFlags and updated related methods in SystemUiController and AllAppsTransition
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to streamline the code by eliminating unnecessary dependencies
enhanced exception message in RuntimeException for better clarity to improve debugging information during Hive split operations
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` to clarify the purpose of the configuration
added score calculation to the merge method in TextFragment to ensure that the score does not exceed the defined threshold
removed the private Digester field from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added a validation check for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that maximumUnim
added a check to prevent processing of empty editors in EditGcodeFile . java to avoid unnecessary processing when no currently opened editors are
replaced direct calls to ` mock . verify ( ) ` with ` Mockito . verify ( ) ` in ` BDDMockito `
updated ClassLoader initialization in PathScanner . java to use PathScanner . class instead of Thread . currentThread ( ) to improve clarity and consistency in
refactor sayHi2 method to return a Future < String > instead of a single string to enable asynchronous execution of the sayHi2 method
initialize logger in abstractsplitbraintransfertest . testsplitbraintablereadertest . testsplitbraint
added null checks for logoutConfigurer and updated logout filtering logic in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure logoutConfigurer is
[ giac ] use degree ( ) instead of degree ( ) for idealvar
refactor DockerComposeContainer to utilize a log consumer map for logging logs and introduce a new method for logging logs to improve logging efficiency
updated the type parameter for the testMapping method in StandardJavaTypeMappingTest . java to ensure correct type handling for ResultSetMapping operations
removed unused imports from AmbariMetaInfoTest . java to streamline the code by eliminating unnecessary dependencies
added a static method ` fromSupplier ( supplier < T , E > ) ` to ` ThrowingSupplier ` class to provide a way to
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 16836 : camel - platform - http - post should end the buffer body if the body be a text content type ( #
added methods to handle platform - specific path separators in MorePaths . java and updated argument handling in CopyStep . java and AarWithLib
added a null check for authorizationContext parameters before processing to avoid potential NullPointerException when parameters are null
replaced the method ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` and added a new method ` throwExceptionIfFail ` to
updated SDK version from " 4611349 " to " 4514284 " and added new tests for textSpeech ' s speak functionality
queuetransactionlog : add a new transactionlogkey class to facilitate the creation of transaction log key
added a ` enableSqlWithoutProfile ` property and its getter / setter methods to ` JdbcEnvironmentProperties ` and ` JdbcEnvironmentRepository ` to
added a try - finally block around the write method in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
use eventgenerator . fromfunction ( ) instead of ( supplier ) in modloadingstage
updated date formatting in DateUtils and removed an assertion in FontParsersTest to ensure accurate date formatting by using the correct calendar context
updated method signatures in ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSetTest ` to use a constant for stack trace depth to
added a new ` prevTlogOnPrecommit ` method to ` UpdateLog ` and modified sleep duration in ` LeaderTragicEvent
updated file path from " . net / job / FastAsyncWorldEdit - P2 - V6 / " to " . net / job
refactor file existence check and add null check for input path in SegmentGeneratorConfig . java to improve code robustness and prevent potential NullPointerExceptions
added methods to calculate normal vectors in ObjUtils and updated TriangulationHelper to use this new method to improve code readability and maintainability
updated the ` find ` method to use ` IdentityZoneId ` instead of ` principal ` to ensure the correct identity zone ID is used for
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future updates
added a null check for SESSION _ MANAGER before accessing its session info to prevent potential NullPointerException when accessing session information
refactor TransactionIsolationLevel class to improve code readability to enhance maintainability and facilitate future updates
updated method names from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java
added thread naming to the TestSession class to improve clarity of thread management in the application
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
simplified the return statement in LauncherExtension . java to improve code readability and maintainability
added a new OverviewToAllAppsTouchController to the list to enhance user interaction with the all apps touch controller
refactor ` scaleHotseatWithWorkspace ( ) ` method to ` getHotseatScaleAndTranslation ( Launcher launcher ) `
added a check for JUnitRule in the DefaultStackTraceCleaner and created a new test for filtering elements above the Mockito JUnitRule
replaced direct references to ` dstnull ` with ` dstByteArray ` and ` srcByteArray ` in ` MappedResizeableBuffer . java `
refactor balance listener management in DepositListItem . java to use a local variable to improve code readability and maintainability by encapsulating
modified the color conversion logic to handle both STICKER and STICKER edges to ensure correct color representation based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor . java to prevent potential NullPointerException when httpClientResponse is null
fix gl200 decoder ( remove unused import )
updated playback timing logic in FullDetailsActivity . java to include logging of the last refresh time to improve visibility into playback events for better debugging and
added a method to check for elliptic nodes in SpanishXMLTreeReader and improved token matching logic to enhance the handling of el
added a check for empty dc values in the InstallItem class to ensure proper handling of empty dc values in the application
updated the logic for overriding the scheme based on the secure status of the ReactiveLoadBalancer client to ensure that the override scheme is only used when secure
[ issue # 1188 ] fix bug in defaultmessagestore ( # 1188 )
[ gr - 25946 ] remove the final modifier from the fullfilepathfromclassname method in nativeimagedebuginfoprovider
refactor the return statement in ShadowBackupManagerTest to use a lambda expression to improve code readability and reduce boilerplate code
corrected the spelling of " isNonENLangSupported " to " isNonENENLangSupported " in multiple files to ensure accurate
simplified the null check for redeemData in LocalTransactionSigner . java to improve code readability and maintainability
add minecraftforgeclient . java file to allow client to load texture from the forge .
added a return statement in TxCacheDB . java to prevent unnecessary execution of the method
updated import statements from com . sun . xml to jdk . internal in BoundMethodHandle . java and InvokerBytecodeGenerator . java
refactor FastDictionary class to improve code readability to enhance maintainability and facilitate future updates
close the nio session if it ' s already close .
updated FlightEvent parameters for GROUND _ HIT and TUMBLE and SIMULATION _ END in FlightEventsTest . java
[ beam - 1740 ] update protobuf import to match new version of beam - grpc - v1p26p0
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper handling of namespace declarations
update instructorfeedbackresultspagedata to include courseid in profile picture link
added a short rule list to the DefaultPasswordValidator to allow additional password rules to be allowed in long passwords
simonstewart : add a new command class to provide a way to retrieve the last remote control logs and capture screenshots from the
removed the JUnit test annotation from ProxyClassSerializationTest . java to clean up the code and improve readability
updated the ` scale ` and ` pad ` arguments in the ` DLNAMediaInfo . java ` file to include the ` format
do n ' t replace speculativeguardmovementphase during compilation .
added a condition to exclude the AUTHENTICATION _ MANAGER bean definition in the AuthenticationManagerBeanDefinitionParser to ensure proper handling of bean definitions
updated the handling of the X - Forwarded - Server header and authority in the ForwardedRequestCustomizer . java file to ensure proper authority
added a call to sb . setLength ( 0 ) in ConsoleReader . java to reset the buffer to prevent potential memory leaks
changed access modifiers of allowedRoles and disallowedRoles lists from private to protected to allow subclasses to access these lists
updated OpenIDE - Module - Specification - Version numbers across multiple files to reflect the latest version changes to ensure compatibility with the latest features and improve
hbase - 14819 add support for tl wrap size in netty
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactored FixedLengthTokenizerTests to use JUnit 4 annotations and added new test cases for tokenization to improve test readability and ensure
added protocol binding validation in OpenSamlAuthenticationRequestFactory and created corresponding tests in OpenSamlAuthenticationRequestFactoryTests to ensure proper handling of SAML2
refactor DepthController to use AttachedSurfaceControl for applying SurfaceControl operations to improve code clarity and ensure proper handling of root surface control
update version string from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility
replaced ` WRITE ` action with ` CREATE ` action in the ` hasSomeAccess ` method calls for bulk load and cleanup operations to ensure
updated subList method calls and measurement schemas in TsFileManagement . java and MergeMultiChunkTask . java to improve code clarity and ensure correct
camel - 14263 : camel - core - support fileinputstream in camel - file - converter
added login functionality to DefaultShardManager and ShardManagerBuilder classes to enhance security by allowing the manager to login based on the login flag
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
corrected the column name in the JoinTable annotation from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to
added a check for ` completion . isMarked ( ) ` before calling ` terminateResponse ( ) ` in ` HttpSender . java ` to
added a condition to check if ` isUserStudent ` is not ` isUserStudent ` before comparing the response giver to ensure that the
added security checks for profile access and improved color space handling in BMPImageReader . java to enhance security by preventing access
updated the calculation of ` setSimpleCuboid ` in ` ClassicPlotManager . java ` to correct the positioning of ` PlotBlock
added a wait message to the PMD status in the package and modified the actionPerformed method to run in a runnable to ensure that the PMD
refactor grid presenter initialization to use a separate method for size setting to improve code readability and maintainability by encapsulating size setting logic
changed return values from false to true in ContributionsListFragment . java to reflect the correct functionality of the code
added a new test method ` testSkipRange ` in ` DistinctPrefixFilterIT ` and modified conditions in ` BaseResultIterators `
pdfbox - 4892 : add test case for acrobat checkbox group property
added a method ` getFileLastModified ` to retrieve the last modified timestamp of a file to provide functionality for retrieving the last modified timestamp of a file
added a condition to check if the " metaTable " property is valid in HiveIcebergStorageHandler . java to ensure that the metadata
use a combobox instead of a text field for the default currency
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified animation handling logic in ` IconRecentsView . java ` to improve animation
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide a way to retrieve the active key ID associated with
updated action labels and method names in SendMailActions . java for better clarity and consistency to enhance readability and maintainability of the code
changed the ` isActive ` variable to be volatile in ` SocketServer . java ` to ensure thread - safe access to the ` isActive ` variable
[ flink - 11934 ] [ table - planner - blink ] fix isasc ( ) method name in order by expression context
make sure we do n ' t cast to charsequence when append a conic line
added a check for the ownCloud app name in the Calendar validation logic to ensure compatibility with the ownCloud app ' s application context
hbase - 13780 default to 700 for hdfs root dir permission for secure deployment ( enis soztutar )
change return value from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class to improve code organization to enhance maintainability and readability of the code
changed the return type of getStateFormat from int to String and updated related methods to ensure consistent state format handling across different test cases
removed the " type " variable from the log message in CentralAuthenticationServiceImpl . java and updated the condition in AbstractTicket . java to
added IllegalArgumentException to the exception check in PDICCBased . java to enhance error handling for invalid input scenarios
removed unnecessary whitespace in AbstractFileResourceSet . java to improve code readability and maintain consistency
make pluginparameterexpressionevaluator consistent with file path translation .
[ beam - 1745 ] fix protobufcoder registration for bigtable iotest
updated JpaQueryParsingToken instantiation to include a false parameter and added a new test for signed numeric literals in HqlQueryRendererTests to
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` generateRailButtonFromRASAeroRailGuide
removed the implementation of the getNonceFactory method in BitmexStreamingExchange to simplify the code by eliminating unnecessary method implementation
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] set default timeout for driver conductor test .
changed the default value of initializeLoadedClasses from true to false to disable loading of loaded classes by default
added a call to ` searchField . grabFocus ( ) ` in ` FullTextSearchPanel . java ` to ensure the search field is
refactor NioParams initialization to use a local variable to improve code readability and maintainability
updated the assertion comment in StatementTest . java for clarity to enhance readability and maintainability of the test code
updated the assertion message in TestSolrConfigHandler to include the server base URL to improve clarity of error messages for better debugging
updated CsrfWebFilterTests to use ServerHttpRequest and ServerWebExchange instead of HttpMethod to improve test reliability and clarity by using
added import for Density and modified drawable pattern formatting in FilterResourcesStep . java to improve code readability and maintainability by using a more
refactor UIID handling in ComponentGroup . java to use a variable for component prefix to improve code readability and maintainability by centralizing
removed unnecessary density check for rotation in RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
added two new Java files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , and
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to indicate that
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
simplified the condition for updating credential in FileDownloader and FileUploader to improve code readability and maintainability
refactor scanner handling to ensure proper closure of resources when the scanner is null to improve resource management and prevent potential NullPointerExceptions
updated method calls from ` get ( ) ` to ` getOrDefault ( iface , 0L ) ` in ` NetMetrics . java ` to
added a nonce parameter to the token claims retrieval in TokenMvcMockTests . java to ensure that the nonce is correctly retrieved from the claims map
refactor ChartEditor and DefaultChartEditor classes to improve code organization to enhance maintainability and readability of the codebase
added width and height settings for the formLayeredPane in the Form . java file to ensure the form layered pane displays correctly based on
updated the maxY method to return the maximum height based on the owner ' s height to ensure accurate height adjustment based on the owner ' s height
modified database connection handling in SharedDatabaseLoginDialogView and SharedDatabaseLoginDialogViewModel to return a boolean indicating success to ensure the database connection
replaced hardcoded ` DOCKER _ COMMAND ` with a constant ` Platform . DOCKER _ COMMAND ` in ` DockerTestUtils
added a null check for the input file before reading the parameters in TestIsartorValidationFromClasspath . java to avoid potential NullPointerExceptions when
updated the ` drawLeaveBehind ` method to accept a color parameter for folder leave behind to enhance flexibility by allowing customization of the
add error dialog for unsupported canary version of android studio
cloudstack - 4892 : fix npe in listresponsetooserialization when identityproxy table name be null
added support for " -- enable - module = " and " -- disable - module = " arguments in StartArgs . java to enable and disable
updated argument validation from " Extra argument # 1 " to " Argument 0 " in GeminiMarketDataService . java to ensure correct
replaced HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to enhance insertion order for questions
http : / / issues . apache . org / jira / browse / amq - 4892 - add unit test for the realm
updated the AuthCheckFilter to exclude various setup JSP files in AuthCheckFilter . java to enhance security by ensuring relevant JSP files are
refactor scheduling logic to introduce a new method ` queueRunnableAndSort ` to improve code readability and maintainability by encapsulating scheduled
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to improve type safety and
added checks for end - of - stream before reading characters in XMLParser . java to ensure proper handling of end - of - stream in XML
added a new test method ` testHorizPageOverflowHidden ` in ` TextVisualRegressionTest . java ` to verify that overflow pages
added arrow pivot positioning logic in DeepShortcutsContainer . java to ensure proper arrow positioning based on icon state
do n ' t print stacktraces on interruptedexception
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter and modified related logic in ` AbsSwipeUpHandler ` to
pdfbox - 4071 : use class name instead of package name , a suggest by valerybokov
added a new parameter ` true ` to the ` InternetAddress ` constructor and updated the validation check in ` HostnameFormatSpecifier ` to ensure that
updated references from ' this ' to ' this ' across multiple activities to improve code clarity and consistency by using ' this ' instead of '
refactor SizeBasedDocIdSet and related classes to improve clarity and functionality to enhance code readability and maintainability by using a consistent
updated the ` promptToOpenFile ` method to accept an additional ` existingFileName ` parameter to enhance file chooser functionality by allowing users to
updated widget and page count calculations in AppsCustomizePagedView . java and refactored methods in AppsCustomizeTabHost
updated FlightConfiguration . java and FlightConfigurationTest . java to update component coordinates and transformations based on active states to improve accuracy of spatial
micrometer : use direct : foo instead of ' seda : foo ' in test
updated DateTimeFormatter to use Locale . ROOT for default date time formatting to ensure consistent locale handling across different locales
[ ds - 4892 ] remove hidden metadata from the list of metadata in dspaceobjectconverter
added a new test method ` testMissingRequired ` to the ` StarTreeConfig ` class to ensure that the ` StarTreeConfig
camel - 14263 : camel - spring - dsl - add support for dynamic recipient list .
refactor InlineLayoutBox and HoverListener to improve repaint logic to enhance layout handling and control over repaint behavior based on PaintingInfo
refactor ` DetectAuthenticationMethodOperation ` to use ` ServiceConnection ` and ` OperationsServiceBinder ` for managing operations to improve service management and
