replaced the constructor of SocketAppender with a constructor that sets remote host and port to enhance flexibility by allowing configuration of the socketappender
refactor code to use a new method for setting prompt headers to improve code readability and maintainability by reducing duplication
removed the call to RecordDescriptor . msgLengthOffset ( recordIndex ) in ManyToOneRingBuffer . java to simplify the code by directly accessing
cloudstack - 4892 : fix vm detail cpu and ram overcommit ratio when vmdetailram be null
added an ` flags ` field and its getter method in ` ShadowPaint ` , and updated tests in ` PaintTest ` to use it to
updated the title of the dialog from " Set / clear / append / rename / fields " to " Manage field names & content " to enhance
added error handling for missing bugs in DetectorsTest . java to provide clearer feedback when no bugs are reported to the project
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 545 . add
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor to utilize it to enable the handling of connection events
reformatted conditional statements in OrcEncodedDataReader . java to improve code readability and maintainability
added a check for the enabled status of the thing in HomeConnectBridgeHandler to ensure that only enabled thing is considered in the filter logic
added null check for ` bs ` before calling ` removeAllPolicy ` and ` addPolicies ` methods in ` AuthorizeAdminServlet . java ` to
replaced ` isEqualTo ` calls with ` matches ` in ` DefaultTypeAdaptersTest ` , ` ObjectTest ` , and ` DefaultDate
added JSON serialization and logging for DAG information in TezTask . java to improve data handling and facilitate debugging by providing detailed
updated time calculation in ComputedSummary . java and added a method to get heap time in HprofHeap . java to improve accuracy of heap
updated ` ContributionsActivity ` to use ` CommonsApplication . getInstance ( ) . getMWApi ( ) ` instead of ` RxJava2
do n ' t force lock even in mvcc for multi - threaded mode
[ issue # 5373 ] fix offset size in commitlog and defaultmessagestore ( # 5373 )
added a check to ensure the folder is marked as open before attempting to access it to avoid potential null pointer exceptions when the associated folder is not
added a test method ` testSortOrder ` to verify that PGProperty names are sorted in descending order to ensure that PGProperty names are sorted correctly
added a constant for the HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN message in Common . java to
changed the parameter type of ` supportsDrop ` and ` getUninstallTarget ` methods from ` Object ` to ` ItemInfo ` to improve type
updated assertion in RequestBuilderTest to use isIn instead of hasMessage to improve clarity of error message validation
refactor NearbyActivity to use NearbyListFragment instead of a hardcoded string to improve code clarity and maintainability by
[ hotfix ] fix typo in flatprofilecontainerfree constructor
added a new boolean field ` sendZeroAnomalyEmail ` to ` EmailConfiguration ` and implemented its getter and setter methods in ` EmailReport
[ hotfix ] [ kafka ] fix flinkkafkaproducerbase do n ' t call open method when restore state
added user and geofence methods to the DataManager class to enable retrieval of user and geofence information from the database
added a constructor to BlockingResponseListener that accepts a maximum length of 2MB to improve flexibility in response handling by allowing more than 2MB
refactor McastService to use byte array instead of XByteBuffer and update memberBroadcastsReceived method to improve flexibility in handling byte arrays
updated logging for snapshot paths and improved resource management in MultiLeaderServerImpl . java to enhance logging clarity and ensure reader is closed properly
updated URL format in test assertions in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistency in URI formatting
refactor ConfigMetadataProviderTest . java for improved test coverage to enhance reliability of metadata provider tests
updated import statements in ListFragment . java and SnoozeActivity . java for clarity and consistency to improve code readability and maintain
refactor DirectoryStream . Filter implementation to use a static final AcceptAllFilter class to improve code readability and maintainability by centralizing the
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future development
added exception handling to the ` lookupType ` method in ` CompilerToVM ` and ` HotSpotJVMCIRuntime ` classes to
refactor Docker image name validation to use a utility class for validation to improve code clarity and maintainability by centralizing validation logic
updated error messages in LoginActivity to use " wrong credentials " instead of " username " to improve user experience by providing clearer error messages for
added ` setAutofocus ( " autofocus " ) ` method calls across multiple form classes to set the " autofocus " attribute
added unit tests for SAML properties in SamlIDPRefreshMockMvcTests to ensure correct configuration and metadata generation for identity zones
added checks for empty and isDigit lists in ComparableVersion . java and created a new test for Mng 7644 in ComparableVersionTest . java
replaced ` topLeftMode ( ) ` and ` topLeftMode ( ) ` methods with ` bottomRightMode ( ) ` and `
updated package and import statements in RobolectricTestRunner , ParallelUniverse , ParallelUniverseTest , and ParallelUniverseTest classes
replaced direct instantiation of ` BoundedLocalCache ` with a constant ` FACTORY _ CALL ` in ` LocalCacheFactory . java `
change the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve the
added functionality to draw self loops in the ProcessingPreview class to enhance the visual representation of self loops in the graph
renamed the constant ALLOW _ TVM _ SOLIDITY _ 0 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity of the method ' s purpose
set the drag handle indicator ' s translation Y to zero in AllAppsTransitionController . java to ensure the drag handle indicator ' s position is
removed logging statements for collection , community , and dso in CollectionViewer , CommunityViewer , and ItemViewer to streamline logging for better
updated error messages in HiveConf . java to clarify optimization conditions to improve understanding of query optimization and filter behavior in the operator tree
added an assumption to the ScanningAppProviderRuntimeUpdatesTest class to ensure the test only runs on unsupported operating systems
added Maven bundle options to TestJettyOSGiAnnotationParser and invoked diagnoseBundles in TestOSGiUtil if debugging is
fix for act - 1181 : when execute async job , do n ' t retry the job
refactor Transaction class to improve transaction handling logic to enhance performance and maintainability of transaction processing
replaced ` @ CustomFieldBehavior ` with ` @ ExcludeFromRuleKey ` and added additional fields to ` GenruleBuildable ` to
added a new method ` whichExec ` to ` AsyncExecute ` and refactored ` FirefoxCustomProfileLauncher ` to utilize it to
replaced ` putIfAbsent ` with ` put ` for ` fam ` in ` colFamToDynamicColumnsMapping ` to ensure that ` fam
[ hotfix ] [ runtime ] remove rawtypes warning in hadoopoutputcollector and hadooptupleunwrappingiterator
added a check to ensure the table is not mapped before adding derived columns and indexes to the table to ensure proper handling of mapped views in the
fix a bug where delete a student do n ' t update the orphan
updated import statement for TestCellReference in AllXSSFTests . java to ensure compatibility with the latest Apache POI library structure
added a condition to check if the block is a hardness block in the LensPiston class to ensure that the block is not
added a new file LongPointerPressTest3049 . java to implement a network error listener for network errors in the Codename One
truffle : fix inlining inlining for function inlining .
refactor null checks in BaseBuilder and XMLConfigBuilder to use a more concise ? operator to improve code readability and reduce redundancy
simplified the condition in ListBlockParser and added a new test for deeply indentation lists in SpecialInputTest to improve code readability
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to improve code organization and reus
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue 1070
simonstewart : remove the global dependency from testcaselogger
camel - 16462 : camel - route - startup - last - test should use camel - route - start - start - start - start
added a condition to check if the video format is not a video in the web subtitle configuration to ensure that video formats are only processed when the
added security properties to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms in hostname verification
cloudstack - 4892 : do n ' t check if the vm have a local storage pool before create a new storage pool .
updated logging statements in Driver and QueryResultsCache classes to use a local variable for cache entries to improve code readability and maintainability by redu
added a new option ` skipModelUpdate ( ) ` to the ` ManageDependencies ` class and updated related logic in ` AddManagedDependency `
added a test for sending a PendingIntent with a request code in ShadowActivityTest . java and implemented send method in ShadowActivity . java to
replaced GLJPanel and GLCanvas with GL - enabling and GL - disabling in RocketFigure3d . java to
modified the ` controllerListeners ` initialization and synchronization in ` HydrawiseAccountHandler ` and ` HydrawiseControllerHandler ` to ensure thread
added JUnit @ BeforeClass annotation to TestCoreAdminApis to ensure EasyMock does not work with Java 9 to avoid compatibility issues with
updated year calculation to use ` get ( ChronoField . YEAR _ OF _ ERA ) ` instead of ` Math . abs ` for BC
fix npe in jabber connection when jabber be stop .
updated the string concatenation in TxnHandler . java to include a new variable ' cur _ ws _ commit _ id ' to improve clarity and
replaced ` ByteChunk ` with ` ByteBuffer ` and updated related methods to improve performance and handle ` BufferOverflowException ` to improve memory management
added a new method ` toSync ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to facilit
added ActionGraphBuilder to multiple compiler factory classes and updated related method signatures to utilize it to enhance functionality by integrating ActionGraphBuilder for
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to ensure that the upload functionality works
removed unnecessary import of java . util . Date and streamlined error handling in SQLManager . java to improve code clarity and maintainability by
added a check to return the local Maven directory if the file does not exist to ensure that the correct Maven directory is used when the file is
make sure algebra label be visible when the new label be hidden
fix ( core ) : fix npe in ctelementimpl . getmetadata ( )
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG
added a condition to check if the cached is sorted by ID in the reordering condition to ensure that the cache is not sorted before proceeding
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call here " to clarify the reason
added null check for backupFolder before logging to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` containing a test method for ` Array . newInstance ` to demonstrate
added ` @ AddToRuleKey ` annotation to ` toolType ` in ` ClangCompiler ` and ` GccCompiler ` classes to
added a constant for the pin timeout value in PinCheck . java to improve code readability and maintainability by using a constant for the time
enable sample sample for prometheus ( fixes # 1193 )
added @ Ignore annotations to multiple test classes to temporarily disable tests that require the MongoDB server
fix checkstyle violation in consumeuncompressedcompressedmessagetest
updated the condition to check if the table is an artifical instead of checking if it starts with an empty string to ensure that the table
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session attribute handling in MongoSessionManager . java to improve clarity and correctness to enhance code readability and ensure session attributes are
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
refactor stopping logic in AbstractConnector . java to use CountDownLatch for better clarity to improve code readability and maintainability by redu
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 15836 : use system . currenttimemillis ( ) instead of thread . sleep ( ) in defaultmessagelog
[ hotfix ] [ test ] fix delayedmonopublishertest failure
replace assertTrue with fail for WebSocketHandshakeException in WebsocketTest . java to improve error handling by providing a more descriptive failure message
refactor AllAppsTransitionController to use the current View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintain
rename variable ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability by using a more descriptive variable name
int - 1181 add support for the ' default - output - channel ' attribute in xpath - router
updated ` cacheSeconds ` from ` int ` to ` String ` and added support for ` DurationCapable ` in ` MessageBundleProperties `
updated the OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files
removed the call to append ( buffer , true ) in ByteBufferPool . java to streamline the code by eliminating unnecessary complexity
added a warning check for alt - rt . jar detection in Main . java to inform users about the detection of the alt - rt . jar
updated user deletion statements and test cases in JdbcScimUserProvisioningTests . java to replace " jo " with " jonah "
updated FlightRecorderProfiler . java to use a list instead of an array for flight recording options to ensure compatibility with Java 1.7 and
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and conditional logic in ` WebcamInputDialog `
added a condition to check if the content view has content in HttpParser and implemented a test for chunked put functionality in ProxyServletTest to ensure
camel - 14284 : fix typo in AtmosEndpoint . java file
updated condition checks for " println " and " print " in Java2TypeScriptAdapter . java to include " printf " and " print "
added a new file TestCapacityUntilGCWrapAround . java with native methods for managing metaspace capacity in WhiteBox . java to ensure that
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the timestamp calculation logic in SamplingStatCalculator . java to ensure accurate timestamp tracking for sampling results
added unit test base on user forum issue
tmi - jpeg : do n ' t throw an exception if icc _ profile be invalid .
fix the terra reequip animation when the item be the same a the terra pick
replaced instances of Config . class with Environment . class in SpringModule and added a check for entry types before registering them in SpringModule to
use container . getparentclassloader ( ) instead of thread . getcontextclassloader ( ) . getcontextclassloader ( )
bug 60619 - nameupdater now load property from classpath
added a flag to track the starting state of the ellipsoid region selector to ensure that the ellipsoid region selector starts from the correct state
updated URIs from " http " to " https " in JavaSEPort . java to enhance security by using secure connections
[ geos - 10767 ] wfs : validate sort by attribute in getfeature
replaced ` equals ( null ) ` with ` null ` for ` grantTuple [ 0 ] ` in ` AbstractJdbc2DatabaseMetaData .
added graphics configuration handling and modified image processing logic in DiagramGenerationTest . java to improve image compatibility checks and ensure correct image processing
added a null check for sidedDelegate in FMLCommonHandler . java to ensure proper error handling when attempting to install Minecraft .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
increase timeout for locktest . islocked ( ) to avoid flaky test
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for improved tokenization and joining functionality to enhance string
simonstewart : do n ' t log a 404 error when request be not find
refactor command handling in SystemHighlighter to use a variable for command index to improve code readability and maintainability by using a more d
updated VERSION and VERSION _ DATE constants to " 1.0 . 1 - SNAPSHOT " and set the version date to " PENDING " to
updated buffer position setting from ` idx ` to ` dimensionSize ` in ` StarTreeRecordStoreCircularBufferImpl . java ` to ensure
added support for handling drag - and - drop functionality in Quickstep and SystemUiProxy classes to enhance drag - and - drop functionality in the
[ java ] add assumption for socketappendersocketoptions . getTrafficClass ( )
added AES256 - GCM - SHA256 - GCM - SHA384 + TLSv1.2 to TestCipher . java to enable
replaced ` getDescription ( ) . getText ( ) ` with ` getLongDescription ( ) ` in ` NearbyMapFragment . java `
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the ScimGroupMember class
updated HqlQueryRenderer to handle reserved words and added a new test for schema scoping in HqlQueryRendererTests to enhance query accuracy
corrected a typo in the null check message from " d " to " s " to improve code clarity by using a more d
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
modified the ` offsetStreamIndex ` method to include an additional parameter ` indexStartsAtOne ` to enhance the functionality of the ` offsetStream
tika - 697 -- fix tika - 697 mime detection for cpio
[ hotfix ] [ table - planner - blink ] remove redundant getmonotonicity method from flinksqloperatortable
added equals and hashCode methods to OneTimeTokenAccount and OneTimeToken classes to ensure proper object comparison and string representation for OneTimeTokenAccount
added a condition to check if the assistant has been launched during a fling event to ensure the assistant is only launched if it has not already been
added a new file SolarisShortDSA . java that implements a algorithm to generate and verify a SHA1 with DSA key to
added a method to toggle the search label in ListFragment to improve user experience by disabling search label functionality
cloudstack - 4892 : add lock to create a snapshot if it fail to create a snapshot .
added a new DetailsServiceConnection class and modified the service unbinding logic to ensure proper resource management and prevent potential null pointer exceptions during service un
refactor exception handling in HttpClientTLSTest to use AtomicReference for better clarity to improve code readability and maintainability by using a
removed the equals method from ConjunctionScorer to simplify the code by eliminating unnecessary complexity
added a null check for the variable ' v ' in Launcher . java to log a warning when bindItems fails to remove colliding items
fix race condition in getRaftgroupmanagertest
refactor cache size calculations to use a local variable for clarity to improve readability and maintainability of the code
updated API endpoint from " / api / v2 " to " / api / v3 " across multiple files to reflect the new API version
added an empty ( ) method to the freenect2 class to check if the size is zero to provide a way to check if the
added null checks for page data in AsyncPageReader and updated test annotations in TestDrillParquet and TestDrillParquetReader to
updated the ` buildChannelName ` method to accept an additional ` args ` parameter and improved input validation for the subscription type to enhance flex
added a configuration option to disable the charging animation when an item is charging on top of a mana pool
[ java ] use egress subscription when connect to aeron cluster .
added error logging for InterruptedException in WaitForHelper . java to improve error handling by logging exceptions instead of ignoring them
replaced conditional checks with assumptions for directory creation in DefaultServletTest . java to ensure tests are only executed on non - Windows operating systems
reformatted the injection of styles in ResourcesInjectorFull . java to improve code readability and maintainability
refactor ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` to
use getx ( ) and getz ( ) instead of getx ( ) in blockworldvector
changed the visibility of the ` CacheEntry ` class and its fields from ` private static ` to ` final ` to ensure immutability of the
added regex handling to resource configuration in ReflectionProcessor . java to ensure proper parsing of literal strings in resource configuration
refactor cache retrieval logic in FileCredentialsCache . java and add argument validation in EmptyCC . java to improve cache handling and ensure proper initialization
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure the
[ pantheon - 2842 ] fix fast sync timeout when there be no available peer
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 358 .
added a condition to return false for EQUAL _ BOOLEAN operations in ExpressionNode . java to ensure that the expression does not expand " AreEqual [
added a check to clear pending rendering operations if it is minimized to ensure that pending rendering operations are only cleared when they are minimized
do n ' t call sleepmillis ( ) in hazelcasttestsupport # waitfordeadlines ( )
fix write - behind - queue . put ( ) for continuously update key
set the icon of the JLabel to null in GroupTreeCellRenderer . java to reset the icon for better visual clarity
updated test methods in TestBlacklistAwareRedirectResolver to set strict match to false to ensure proper handling of strict match scenarios in redirect resolution
added IO resource management and refactored test methods in ShutdownMonitor and ShutdownMonitorTest classes to improve resource management and enhance test coverage for shutdown
updated the calculation of ` moveSize ` and ` fillRateToCompare ` in ` RandomAccessStore . java ` to improve memory handling and
refactor field retrieval logic and add readFields method for improved error handling to enhance code readability and maintainability by reducing redundancy
[ hotfix ] [ runtime ] move componentclosingutils to coordination
cloudstack - 4892 : destroy volume when vm fail to create snapshot ( # 4892 )
cloudstack - 4892 : fix ipv6 range issue when ip6 range be empty ( # 4892 )
corrected a typo in the class name from ` userDetailsBeanManagerConfigurer ` to ` initializeAuthenticationAuthenticationProviderManagerConfigurer `
increased the timeout value from 15000 to 30000 in the getLeaderRetry method to allow more time for leader retrieval from the cloud
replaced the ` input ` parameter with a single ` Exception ` parameter in the ` errorMessage ` method across multiple classes to simplify the method signature
updated drawing parameters in URLImage . java to use negative coordinates instead of x and y to improve rendering accuracy by adjusting the dimensions of the
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
refactor code to use a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by reducing duplication
added the exception parameter to the StreamTaskException constructor to improve error handling by providing the original exception context
refactor the handling of expanded tags in Preprocess . java to improve clarity and efficiency of tag processing to enhance code readability and maintain
reformatted the read method in MessagePack . java for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a structured way to
fix jsonparser to properly encode empty extension list
updated regex patterns and added null checks for child and meta entries in LibraryManager . java to ensure compatibility with external meta names and improve dependency management
added an alias for " node _ popup / node _ popup _ scripting " in the entryNavigator to enhance the functionality of the scripting
removed ` HIDDEN _ FOCUSED _ SCROLL ` and ` HIDDEN _ SPLIT _ SCREEN ` constants from ` Over
camel - 16462 : jmsproducer should not cast to jmsmessage to jmsmessage
[ hotfix ] fix checkstyle violation in java . base
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` to remove obsolete code to streamline the codebase
updated GzipHandlerTest to enforce immutability and added a new MicroServlet for handling HTTP headers to ensure immutability of content and content
use BackpressureUtils for getAndAddRequest in OnSubscribeRedo . java and add a new test for repeat and distinct in OperatorRepeatTest
added logging functionality and improved formatting in SpeedmentImpl . java to enhance debugging capabilities and enhance code readability
add dspace - config to load dspace oai
hbase - 24410 make sure we do n ' t reset the matcher row if it ' s null
camel - 16462 : camel - test - add support for jmx to enable / disable jmx for camel - test
updated package separator handling in SourceLineAnnotation and SourceCodeDisplay to use a constant to improve code readability and maintainability by centralizing the
added YARN binary retrieval methods and app ID logging in HiveConf , RemoteSparkJobMonitor , and LocalSparkJobStatus classes to enhance
added support for " maria " database in the database check to ensure compatibility with both MySQL and Maria databases
updated log message formatting and adjusted time calculation logic in SplitLogManager . java to improve readability and correctness of log message formatting
added a new file ` ExecuteAndReturnStringTest . java ` to implement UI tests for network errors in the Codename One application
added a new file ` InvokespecialInterface . java ` containing interfaces and methods to demonstrate the use of invokespecial and
rename EvictingBoundedList . java file to improve clarity and consistency in naming conventions
use setencodingmanager instead of check for turncosts = true
added validation to ensure selection is non - negative in SelectBox . java to prevent illegal argument exceptions when background disabled is disabled
added a null check for the ' md ' parameter in RpcServer . java to prevent NullPointerException when ' md ' is null
updated hotseat icon center calculation to include border spacing to improve layout responsiveness and visual consistency in the hotseat UI
refactor keyEqual and partitionColumnIndex handling in ExpressionTree . java to improve clarity and functionality to enhance code readability and maintainability by
make ` namedtaskdecorator ` implement ` versioned ` and ` taskdefinition ` implement ` versioned `
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ReplicationHandler . java to ensure the correct
changed the default value of the ` equal ` variable from ` false ` to ` true ` and updated the conditional check for display mode equality to
updated UnicodeToLatexFormatter to handle non - polynomial Unicode characters and added a test for it in HTMLConversionMaps to ensure proper formatting of
added null check and ISO control handling in OAIDCCrosswalk . java and modified dcv . value assignment logic in Item . java
simonstewart : do n ' t select the last frame when the window handle be empty
added a clear button and functionality to the StringSearchPanel and BookmarksPanel classes to enhance user experience by allowing users to clear all tables in
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building the base URL to improve code readability and maintainability by utilizing
updated date assertions in SoftAssertionsTest to use a parseDatetime method instead of a hardcoded date to improve code readability and maintainability
updated the ` adaptOrders ` method to include a ` reverse ` parameter and adjusted the handling of limit orders in ` BitmexAdapters `
added null and pos checks for the tree ' s vartype in PrettyPrinter . java and created a new class Java11Var . java with a
simonstewart : remove unused import , no functional change
updated Configuration initialization to set a false parameter and removed a debug log statement to streamline configuration handling and improve logging clarity
replaced the call to ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha )
added unit test base on user forum issue
replace usage of ` System . getProperty ( Globals ) ` with ` context . getCatalinaBase ( ) ` in multiple Java files to
added tests for the " jmm " date and " h : mm " locale handling in ShadowICUTest and ShadowICU classes to
update the PlotSquared object to include additional color information to enhance the visual appearance of the PlotSquared object for better user experience
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration flexibility by allowing
tika - 1343 -- add test case for TimeZone . getdefault ( ) .
added two new files , SampleApplication . java and BuildInfoMojo . java , and modified BuildInfoMojo . java to include a
updated the calculation of xDist in PagedView . java to ensure xDist does not exceed the scroller ' s position to improve accuracy
remove GUIRWTester . java file that be no longer use
removed nullable annotations from the ` countPlaceholders ` method signature in ` LazyMessage ` and ` StandardSubjectBuilder ` classes to simplify the method signature
[ hotfix ] [ test ] fix typo in teststream
move thymeleaf / thymeleaf template parser to markup package
added a new test method ` testXPathString ` in ` XPathTest . java ` and modified the ` evaluate ` method in ` XPathTest
added @ Nullable annotation to FutureUtils . java to indicate that the nullable field may be null
add warning when invokedynamic be not resolve during call - graph construction
change email format from " gmail . com " to " example . com " in ContextTest . java to ensure tests use the correct email
updated HTTP response format from " badMessage " to " HTTP / 1.1 200 " in HttpConnectionTest . java and modified URIUtil
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a consistent
change default method of serviceclientconfiguration to throw unsupportedoperationexception .
refactor HSSFPictureData class to improve code readability to enhance maintainability and facilitate future updates
replaced ` long ` with ` Instant ` for time handling in ` Statistics . java ` to improve precision and consistency in time representation
refactor version handling in LibMediaInfoParser to utilize Matcher for matching media information to improve flexibility and maintainability of version management in
added methods to reflect ` IdeaDependency ` and ` IdeaDependencyMethodInvocationHandler ` in ` ProjectReader . java ` to enhance proxy
added a new class ` SerialHeap ` and updated ` CollectedHeapName ` to use it instead of ` GenCollectedHeap ` to
added @ SuppressWarnings ( " serial " ) annotations to Gson classes to suppress warnings related to serialization in the class
refactor mouse wheel event to use vector2i instead of vector2i
datamongo - 1608 - fix npe in findbyfirstnamecase ( null )
[ hotfix ] [ table - common ] add multisettypeinfo interface
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to ensure
update CMapParser to handle delimiters correctly and add a new test for parsing with poor whitespace to ensure correct parsing of CMap files with
added a new ` OperationsServiceConnection ` class and refactored service handling in ` ContactsBackupJob . java ` to improve service management
refactor type constraint handling in ` mmm Attr . java ` and introduce new classes ` T6938454a . java ` and
added a new method ` isConfigHidden ( ) ` to ` AccountID ` and updated conditional checks in ` AccountList . java ` to
added a warning log for inconsistent display state and supported bounds in DisplayController . java to improve debugging by providing clearer insights into display state
replaced ` SchemaUtil . getSchemaKey ( ) ` with ` getSchemaKey ( ) ` in ` PMetaDataImpl . java ` and added
ggb - 2852 : fire passive login event when login fail
added a new ` Box2DTest ` class and updated ` GDXTester ` and ` GDXTester ` to support the ` Box
patch by jbellis ; review by brandonwilliams for cassandra - 113
increased the default buffer request timeout from milliseconds to minutes in HybridShuffleConfiguration . java to allow more time for buffer requests to
doc ( regen ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a help button to OpenOfficePanel and updated its usage in OpenOfficeIntegration . html to enhance the user interface by allowing users to access
fix ( netty ) : use child option instead of option in netty acceptor and decoder channel .
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceFundingHistoryParams
cache result of ` classinfo # loadclass ( ) ` for speed across repeat call
refactor connection handling in DecodeServlet . java to improve code readability and maintainability to enhance maintainability and reduce redundancy in error handling
added null handling logic to the Querydsl class and created a new integration test class for Querydsl functionality to ensure proper handling of null values and
added a null check for the actor in the ParallelAction and modified condition checks in SequenceAction to ensure that actions are only processed when the actor
fix ( test ) : fix checkstyle violation in cttypetest
added synchronization to ensure thread safety when accessing shared resources in HDFSEventSink . java
added a new interface ` Issue888 _ JavaI ` and a corresponding test class ` JJ ` and ` JK ` to implement
added functionality to revoke an existing agent certificate in the CertificateManager class to enhance certificate management by allowing users to revoke an existing agent certificate
added a check for response codes in AbstractHttpTest and implemented a test for writing body after no body response to ensure that the server correctly handles
refactor script handling in ScriptTransformer . java to improve error messages to enhance clarity of error messages for better debugging
added support for Hikari DBCP connection pooling type in HiveConf and updated related imports and assertions in TxnHandler and TestTxnHandler
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added functionality to manage file lock events in the FileMenuFilter and OCFileListFragment to improve user experience by allowing users to toggle locked files
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
clear endpoint cache when update keyspace . patch by jbellis ; review by brandonwilliams for cassandra - 113
replaced direct calls to ` waitForSignal ( ) ` with a new method ` waitForState ( Thread . State . BLOCKED ) ` to
refactor methods in Skylark classes to use SkylarkRuleContextAttr instead of separate parameters to improve code clarity and
simonstewart : refactored storage interface to extend the new storage interface
fix npe in createorreplaceview ( ) when replace view option
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by catching a broader range of exceptions
updated parameter retrieval logic in SpellCheckComponent . java to ensure q is retrieved only if it is null to avoid potential null pointer exceptions
added error handling for illegal characters and whitespace in header values to ensure header values are properly validated and prevent runtime errors
replace instanceSize with arrayBaseOffset in HybridLayout and HostedInstanceClass classes to improve clarity and functionality by accurately reflecting
add @ experimental annotation to astcommentcontainer so that it can be use by abstractapexcommentcontainernode
hhh - 15836 - add miss fetch . join and fetchtype . lazy
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions for database and table names in TestCompactionTxnHandler . java and set database and table names in TxnHandler . java to ensure
camel - 16462 : camel - timer now support graceful shutdown of the timer component .
added a condition to check if the block is processed before adding traces to ensure trace is only added when the block is processed before adding it to
updated ProviderManager to use CollectionUtils for null checks and added corresponding unit tests in ProviderManagerTests to improve code readability and ensure proper handling of
simplified the check for PostgresDatabase type in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability
added local index limit assertions and modified query handling in multiple classes to improve test coverage and manage local index limits effectively
added a check to prevent adding a collection with the same name and a different type in AlterTableStatement to ensure that collections with the same
updated cursor positioning logic in VDUBuffer . java and adjusted cursor position handling in vt320 . java to improve accuracy of cursor positioning
removed the static final string USE _ RETRIES from HttpShardHandlerFactory to streamline the code by eliminating unused constants
updated the VERSION _ NUMBER string format in JavaVersion . java and added a test for the new JavaVersion in TestJavaVersion . java to
added a check to return early if all input groups are empty to optimize performance by avoiding unnecessary processing when no input groups are available
added a test method to the TestReceivingMessageSourceParserTests class to facilitate unit testing of message source parsing functionality
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties is null
updated IOException handling in FileSystemBlobStrategy to include the cause of the IOException to improve error reporting by providing the original exception context
ambari - 20619 . add miss license header and fix typo .
added a txConfidenceListener instance and removed it from the walletService to streamline the transaction confidence update process by consolidating the listener logic
[ netbeans - 4892 ] add support for g1 perm gen
removed unused imports and simplified the return statement in NearbyController . java to streamline code and improve readability by eliminating unnecessary
pdfbox - 4071 : make clonefornewdocument public , a suggest by valerybokov
updated the condition to check for non - home activities in BaseSwipeUpHandlerV2 . java to ensure that only home activities are processed
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related references to improve clarity and consistency in the
updated method names and assertions in ShadowTelephonyManagerTest . java and ShadowTelephonyManager . java to improve clarity and consistency
updated the method to set unfreeze balance in UnfreezeBalanceV2Actuator . java to ensure proper handling of unfreeze balances during
[ bugfix ] [ doc ] correct spelling of ` ` per match ' '
simonstewart : replace google . common . io . files with common . io . fileutils in firefoxprofile
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
refactor Observable class for improved readability to enhance maintainability and ease of understanding for future developers
refactor MongoDB update operations to use a dedicated method for pushing multiple fields to improve code readability and maintainability by utilizing a dedicated
added a null check for ` randomUUID ` before setting it in ` MockHubService . java ` to ensure that ` hubChangeLog `
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve hover event processing for better user experience
added a sleep mechanism for the bootstrap configuration in CoreContainer . java to ensure proper initialization of the bootstrap configuration based on the server ' s server
camel - 20297 camel - netty - http : fix default value of maxheaderssize in camel - netty - http
updated the client retry count from 5 to 15 in HBaseTestingClusterAutoStarter and HBaseTestingClusterAutoStarter to improve client stability
updated file path construction in SourceSnippetHelper . java to use File . separator for better readability to improve code clarity and maintainability by
improve test coverage for encodedgraphcachetest
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added currency mapping functionality for Kraken assets in KrakenAdapters . java to enhance asset management by adapting currency metadata dynamically
added a custom ` toString ( ) ` method to ` AnyOf ` and created a corresponding test class ` AnyOf _ toString _ Test `
refactor email name assignment to use a dimension map for improved clarity to enhance code readability and maintainability by using a consistent variable
[ beam - 10614 ] fix npe in influxdbpublisher when metric be not available
rename the ` doTransform ` method to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming
added filtering logic for unique local addresses in NetUtils . java to enhance address validation by ensuring only valid local addresses are processed
added a method to convert column names to quoted names in DataTextFormatter to improve clarity and maintainability of column name handling
added methods for setting system properties and methods in WrapSystem , StrUtils , CompileMethodEntity , and ClassWrapper classes to enhance property management and
added a constructor to the UpdateRequest class that accepts a URL to initialize the constructor with a specific HTTP method
changed the enum declaration from static to instance in EnumTypeAdapter . java to allow for instance - level access to enhance flexibility and maintainability
solr - 13411 : remove experimental format warning from dataimporthandler and replicationhandler
added a method to format a list of string representations in JpmsUtil . java to improve readability of debug logs by providing clearer
improve row height calculation by use the default label font .
[ hotfix ] [ network ] fix npe in defaultbrokerheartbeatmanager
added variables for mean _ partition _ size , partitionCount , and splitCount in CqlInputFormat . java to calculate the mean partition size
simplify the conditional check in JUnitTestsShouldIncludeAssertRule . java to improve readability and maintainability of the code
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper comparison and hashing functionality for instances of RuleTerminalNodeLeftTuple
added a new import for StageIDsRearranger and invoked it if it is not set to " none " in TezCompiler . java
change the mbean name from " org . apache . cassandra . concurrent " to " org . apache . cassandra . net "
updated memory consumption logic in LotsOfOutput . java to use a variable for totalMemory to improve readability and maintainability of memory management
added import statements for ` Document ` , ` DocValuesFormat ` , and ` NumericDocValuesFormat ` in multiple Java files to enhance documentation
updated the ` anonymousReadOnly ` field and related methods in ` LdapProperties ` , ` LdapProperties ` , and ` LdapAutoConfigurationTests `
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the visibility of the EchoInputDoFn class from public to private to restrict access to the EchoInputDoFn class for better encapsulation
added an ` finishMocking ` method to ` MockitoSession ` and implemented it in ` DefaultMockitoSession ` and ` Stubb
removed the extraDeps parameter from the method calls in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to
refactor SPDYAsyncConnection , HTTPSPDYAsyncConnection , and HTTPSPDYAsyncConnection classes to improve buffer management and
changed the method from staticBlock to getFlowingBlock in BlockLiquidWrapper . java to improve block handling by using a lowing
updated ` AndroidLocationPlayServiceManager ` to use ` Uri ` for setting the background class and modified ` BackgroundLocationHandler ` to use `
[ java ] fix typo in apr unit test
[ hotfix ] [ flink - core ] fix json dump generation for streaming plan
update CraftingManager . java to adjust item hash calculations and simplify map operations to improve performance and readability of the code
[ hotfix ] [ test ] fix flakiness in testutils
removed redundant checks for newline characters in TabsAndIndentsVisitor . java to simplify code logic for better readability and maintainability
added a regex pattern for matching pg _ temp _ files in NeuteredLinesFilter . java to enhance filtering capabilities for temporary files
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added conditional logic to handle " INTERVAL " data type in DataTypeFactory and updated type checks in UnknownType to ensure proper handling of data types
add metrics only if the metric be publish in the wavefront registry ( # 1193 )
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to include a warmup timestamp
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to facilitate the registration of a ` SensorEventListener
added multiple test methods for full method , URI , and test full header in ` SelectChannelServerSslTest . java ` to handle ` Socket
camel - 16465 : camel - ignite should n ' t close the ignite if it ' s not in use .
added conditional checks for zero and empty line numbers in AbstractClient . java to improve error reporting for empty set scenarios
pdfbox - 4071 : catch more specific exception , a suggest by valerybokov
added unit tests for handling HDR capabilities in ShadowDisplayTest . java to ensure proper functionality and error handling for unsupported display capabilities in Android N
set classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer for clarity and added a toString method in SemiJoinHint to improve debugging and provide more context for
added a default constructor to the Message class to prevent instantiation of the Message class
updated priority logic in SerializableIdiom to handle GUI classes to ensure correct priority settings based on serialization type
updated PhoenixDecimalObjectInspector and PhoenixObjectInspectorFactory to use PrimitiveTypeInfo instead of byteValue to improve precision handling
updated compression response handling to check if the response is already committed before setting the " Content - Encoding " header to ensure proper output stream is used
updated method parameters and regex patterns in Authenticator . java for consistency and clarity to improve code readability and maintainability by using more descriptive
removed unnecessary checks for " EJS " and " org \ omg \ \ " paths in DCD . java to streamline path validation
replaced direct calls to ` getThreadGroup ( ) ` with a new method ` getThreadGroupName ` to improve code readability and maintainability by
added logging functionality to MethodInvocationPrivilegeEvaluator and modified the afterPropertiesSet method to enhance debugging capabilities and improve code clarity
updated package and logger references from ' org . apache . nutch . crawl ' to ' org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
cloudstack - 4892 : add iso path to user vm if it ' s in the storage pool
refactor signal handling logic in SigInt . java and update test method names in SigIntTest . java to improve code clarity and ensure
replaced static import of ArrayUtils with direct usage of ArrayUtils in NodeTool . java to improve code clarity and maintainability by using a more
updated Spring Cloud test configuration to use Spring Boot and Web classes instead of ContextConfiguration to ensure compatibility with Spring Boot ' s testing framework and improve
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
remove deprecate planningentityselector . resetinitializedplanningentities ( )
updated the ` TwoLevelArtifactCacheDecorator ` , ` ManifestRuleKeyManager ` , ` CachingBuildRuleBuilder ` , and ` Cach
replaced ` getFields ( ) ` with ` getDeclaredFields ( ) ` and added a check for ` numEntriesHashTable ` in ` GroupBy
added null check before adding block appearance in Wallet . java to avoid potential NullPointerExceptions when the block is null
added support for the CNC currency pair in the BTCEUtils and updated the BTCEUtils and TickerDemo classes to support
updated skewAllowance from 5 to 15 and modified related classes to conditionally use the service ' s skewAllowance to improve flexibility in
added sorting functionality to SongListActivity and updated query sorting in Utils to improve sorting accuracy and ensure consistent sorting behavior
removed unused imports and added a method to read body bytes from a request to streamline code by eliminating unnecessary dependencies
refactored ` LegacyBaseBlockWrapper ` to extend ` LegacyBaseBlockWrapper ` instead of ` BaseBlock ` across multiple block classes to
refactor Iceberg branch creation logic to check for non - existent tags before retrieving the snapshot ID to improve error handling for non - existent
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest
PhotonMappingDemo : remove bounce count and frame number calculation from PhotonMappingDemo to improve code readability and maintainability
updated password change validation logic in IdentityProviderEndpoints . java and added logging for unsupported operations in IdentityProviderEndpointsMockMvcTests . java to ensure
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that only non - initialized fields are processed in the
updated error handling in JdbcExecutor to differentiate between closed and closed connections to improve clarity in error reporting for SQL execution failures
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate the functionality of the ` RestTemplate
updated regex patterns to match " . user " and " . password " in CredentialInjector . java to ensure correct pattern matching for user and password
added " Item4 " to the menu items in ActionListenerCalledTwiceTest . java to support additional menu options in the application
updated print statements in TestCoreParser . java to include class name and modified assertions in TestCoreParser . java to improve clarity of output
corrected the order of equality checks in SimpleNode . java to ensure correct comparison of child nodes
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class within its package
updated document count handling in MoreLikeThis . java and added a test for small sample from corpus in TestMoreLikeThis . java to
reformatted code for improved readability to enhance maintainability and clarity of the code
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
replaced direct calls to append with a call to append method in MongoSessionDataStore . java to improve code readability and maintainability by redu
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to facilitate unsafe retrieval of long values
updated time zone data for " Asia / Amman " from ARAST to EET across multiple language files to reflect the correct time
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the log message
hhh - 10663 - fix jdbcexception handling in sessionimpl . gettransaction ( )
improve downloadexternalfile . download ( ) to return empty string instead of null .
set apple . laf . usescreenmenubar to true for macosx
[ giac ] add piecewise integration test for ca ( x ^ 2 , 1 )
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a new method ` modWhiteListPattern ` in ` HiveConf . java ` and a corresponding test in ` TestJdbcWithSQLAuthorization
added a call to ` invalidClasses . put ( entryName , value ) ` in ` EntryLoader . java ` to ensure invalid classes are
updated the target target calculation in MobileInput . java to use the player ' s team instead of the sharded team to ensure the target is
updated the domain configuration in CookieImplementationTest to use the domainHelper ' s host name instead of a hardcoded value to improve flexibility by
added nullable validation logic to MissingColumnChangeGenerator , MissingTableChangeGenerator , and Column classes to ensure proper handling of nullable validation based on user
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a query for a specific document in CustomCollectionTest . java and made several fields static final in CompositeIdRouter . java to improve query
added snapshot handling for PostgreSQL in ExecutablePreparedStatementBase . java and created a test for blob types change logs in PostgreSQLIntegrationTest . java to improve
updated conditional checks for max _ cached _ files and max _ cached _ file _ size in DefaultServlet . java to ensure proper handling of cache
fix drag - and - drop issue in jabrefframe
updated description generation in ExecutionUnitRunner and modified assertions in CucumberTest to include scenario names in step descriptions to improve clarity and accuracy
replaced ` isEmpty ( ) ` with ` StringUtils . isNotEmpty ( ) ` for checking ` myVersion ` and ` buildTimeString ` to
removed the ` public ` access modifier from several methods in ` TimeUtils ` , ` GitBlitSuite ` , and ` TimeUtilsTest
added a new method ` isSecurityFrameOrInjectedInvoker ` and refactored its logic in ` RefectionMHTests ` to
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with file naming conventions
updated method return logic in NativeImageDebugInfoProvider to handle HostedMethod instances to ensure correct Java name retrieval for HostedMethod instances
added ` getIcon ( ) ` method to ` Data . java ` and updated ` DataTableTopComponent . java ` and ` DataTableDataTable . java
added a check for ` lastIndexOf ` before returning the name in ` CounterRequestAggregation . java ` to avoid potential ` StringIndexOutOfBoundsException ` when the
modify the replacement logic in FindAndReplace . java and add a new test for dollar signsTolerated in FindAndReplaceTest .
do n ' t use xmppconnection in smackpacketdebugger . getconnection ( ) so that we do n ' t need to
refactor SchemaExtractionProcessor class to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to handle directory copying in ` IO . java ` and refactored the ` SpecWebAppTest
added error handling for unknown datum class in JacksonUtils to improve error reporting for unknown datum types
replaced direct calls to ` buildRuleResolver . addToIndex ` with ` buildRuleResolver . requireRule ( buildTarget ) ` for AB
updated the calculation of itemHeight and background padding in SelectBox . java to simplify height adjustment logic for better readability and maintainability
added normalization of database and table identifiers in ObjectStore . java to ensure identifiers are consistently formatted for database and table
added schema handling for Oracle databases in DbSqlSession . java to ensure correct database schema is used when using Oracle
simplified the logout process by directly calling the activity finish method to improve code readability and avoid unnecessary logging
updated ` MockStreamingRuntimeContext ` initialization from ` 0 , 0 , 0 ` to ` 1 , 0 ` across multiple test files to ensure
added null check for candidates before retrieving types in FastImportAction . java to ensure robustness by preventing potential NullPointerExceptions
refactor conditional checks in ContainerLifeCycle to use a boolean variable for better readability to improve code clarity and maintainability by reducing
rename iexecutionattributesdialect to iexecutionattributedialect for good naming consistence
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
added null checks for loc in CmdGetTime . java to avoid potential NullPointerExceptions when loc is null
added null checks for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to use a new DisruptorQueueExceptionHandler class
deleted the Session2Token . java file to the class was no longer needed in the project
cloudstack - 4892 : destroy / expunge volume when create a new volume ( # 4892 )
added support for instant app installation in SystemShortcut and InstantAppResolver to enhance functionality for managing instant apps in the launcher
added a constructor to ` LdapAuthenticationProvider ` that returns a role from a ` GrantedAuthority ` array to ensure that null authorities are
updated the method for obtaining the retrolambda jar in Executor . java and added a fallback mechanism in CN1BuildMojo . java
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the code by removing unnecessary
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` MutableBitSet ` to improve performance by using a more efficient
added a call to handleNullResult in JMESPathExtractor . java to ensure proper handling of null results in the extraction process
updated import statements in AuthorizeTag . java and added null and empty check for currentUser to improve code clarity and prevent potential null pointer exceptions
removed redundant assertions in tests for consistency and clarity to improve code readability and maintainability
cloudstack - 4892 : fix typo in vm snapshot error message
updated annotation handling in RobolectricTestRunner and modified shadows collection type in Config to improve configuration merging accuracy and ensure proper handling of
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to improve performance by using a more efficient socket connector
updated partition key comparison logic in HiveAlterHandler . java and added tests in TestHiveMetaStore . java to ensure accurate comparison of partition
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to control the visibility of the icon
corrected formatting of the if statement in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback in StandardDeployer , StandardUndeployer , and ContextHandlerCollection classes to improve code readability and
added workspace listener functionality to the PreviewControllerImpl class to enable dynamic updates to the preview graph based on workspace changes
added checks for anonymous classes in ReflectionFactory and modified class name checks in ReflectUtil to ensure correct handling of anonymous classes and improve clarity in
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
added import for ResourceLoader and modified the file path format in CatalinaAcegiUserRealm . java to ensure proper resource loading and
updated server and manager startup log messages in AmbariServer . java to improve clarity of server and manager initialization logs
added null checks for forNode initialization and modify in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions
modified the ` run ` method to accept a ` FileSystem ` parameter and adjusted user creation logic accordingly to enhance flexibility and correctness in user
added a check to ensure the backgroundManager is not attached before attaching it to avoid potential null pointer exceptions when the backgroundManager is not attached
set the current tab to 1 in AllAppsTabbed , Launcher , and PagedView classes , and modified vertical positioning in Workspace
added a null check for the URL in BaseDataSource and created a test for it in SimpleDataSourceTest to ensure that a valid URL is provided
added JRE compatibility annotations to ` PebbleModuleTest . java ` to ensure compatibility with different Java versions for testing purposes
added ` EditNameDialogListener ` to handle directory creation and deletion in ` FileDisplayActivity ` to improve user experience by providing a clearer
added functionality to toggle bar border width in multiple chart activities to enhance the user interface by allowing toggling of bar borders in the chart
updated the API endpoint from " okcoin . com " to " okex . com " in OkCoinExchange . java to reflect the new
add deider score comparator to acceptedforagertest . testpickmovemaxscoreofall ( )
replaced ` FileChannel . open ` with ` SeekableByteChannel ` in ` Files . java ` and modified file reading logic in `
refactor ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and update related logic to improve code clarity and
rename MockHandler to MockHandlerImpl and update related references to improve clarity and consistency in the codebase
[ java ] fix checkstyle violation in serializationconfigurationparser
added functionality to set the watch heap limit for debug devices in QuickstepProcessInitializer to improve performance on debug devices by allowing a configurable heap limit
refactor sumWithCompensation calls to use a variable for clarity to improve readability and maintainability of the code
log4j2 - 1349 remove @ ignore annotation from abstractloadbundletest
added a try - catch block around the serialization logic for the top level deletion in PrecompactedRow . java to ensure proper handling of deletion
modified the rendering intent return logic in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid rendering intents
added meter registry lifecycle management to MetricsAutoConfiguration and its tests to ensure MeterRegistryLifecycle is properly managed during shutdown to improve resource management and ensure
changed log level from warn to info in ConfigurationUtils . java to change log level from warn to info for configuration center failure
added exception handling for certificate generation in CertificateFactoryTest . java to ensure the test correctly verifies the expected certificate format
camel - 16462 : camel - simple - allow simple expression with ambiguous binary operator
refactor onTabUnselected method in EditorActivity and update onFocusChanged method in IDEEditor to ensure windows are dismissed correctly
add user . name to error log message when accesslogvalve fail
updated file names in SkeletonModelGpuSkinningTest and added null check for meshnames in OgreXmlLoader and SkeletonModel
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that the methods are outdated and should no longer be used
added support for specifying the output directory for generated d . ts files in the JSweet transpilation process to enhance flexibility in generating generated
[ hotfix ] [ stream ] add default fetch timeout for kinesis consumer factory
[ flink - 21934 ] [ streaming ] fix timestamp format in streamingdataflowworker
updated the maximum number of metastore server threads from 100 to 1000 to allow more time for metastore server operations
changed the return type of the onTaskSnapshotChanged method from void to boolean to indicate whether the snapshot was changed
updated shadowRadius assignment in SwipeUpAnimationLogic . java to use shadowRadius instead of mMaxShadowRadius to ensure the correct shadow radius
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to validate the functionality of the ` aggregatorInput `
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure the loop
fix polyglot context . isinternal ( ) return false for interactive source .
updated null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper handling of null values to avoid potential NullPointerExceptions
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by integrating DisplayController functionality
added a check for root directory in MetalFileChooserUI and SynthFileChooserUIImpl to display the name of the home directory to
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize (
updated the return type of the recognise method in TensorflowRESTCaptioner and TensorflowRESTRecogniser to use CaptionObject instead of Rec
added unit tests for entity insertion and removal methods in JPASQLBase . java to enhance test coverage and ensure correct behavior of query results
removed drag index check and adjusted drag index logic in FreeformFinSetConfig . java to streamline point removal process by eliminating unnecessary
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to ensure compatibility with the latest features and
updated runtimeError message to use program . spendAllGas ( ) instead of program . spendAllGas ( ) to ensure accurate error reporting and
updated error formatting in multiple classes to use line breaks instead of line breaks to improve readability and consistency in error reporting
mark the Weights class as deprecated to indicate that the class is outdated and should not be used in new code
[ gr - 26464 ] fix unsafe registration for java . internal . misc
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented blacklisted module tests in AndroidBinaryModular
changed the default value of mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable the center
added a call to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure that the migration process is
updated variable names from HOST to BASE _ URL in KonnectedBindingConstants and KonnectedUPnPServer to improve cl
changed the type of attributeValue and related variables from Object to List < Object > in WSFederationClaimsReleasePolicy . java to improve flexibility
updated test table creation methods and query parameters in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to improve
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure SQL parsing correctly handles cases containing brackets
refactor the copy mode handling in ConsoleActivity to use a dedicated method to improve code readability and maintainability by encapsulating the copy mode
refactor ` writeXmlOutput ` method to use a ` Writer ` instead of a string for XML output generation to improve XML output handling and
camel - 16462 : fixed npe in camel - list aggregation strategy when exchange be null
camel - 16463 : camel - log should use exchangehelper instead of exchangehelper . createexceptionmessage
[ java ] move basicconfigurator to the classic package
[ hotfix ] [ dataflow ] do n ' t check if target vn have a PHI _ NODE flag
added import statement for SharedStringSource in TestXSSFRichTextString . java to enable the use of SharedStringSource for improved
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate the invocation of a method with specified parameters
refactor several classes related to BoxAndWhisker and Histogram datasets to improve code structure and maintainability for statistical analysis functionalities
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed class NormUpdate to static and updated field equality checks to use ` . equals ( ) ` instead of ` = = ` to improve performance
changed the visibility of the IndexFileNameFilter constructor from public to private to restrict access to the singleton instance for better encapsulation
[ dsl ] add test case for ifstatementtest .
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactor TypeAdapter to simplify null - checking methods and improve readability to enhance code clarity and maintainability by reducing redundancy
updated the expected size in BundledDistributionTest from 12 to 13 to correct the expected value in the test
added a new EXIFReader class and modified ImageProcessingService to use it to improve image processing capabilities by reading metadata from metadata files
change return value of tostandardunit from unknown _ to _ sdk _ version to none to ensure that it returns a default value when the unit
resolve issue with pmml model creation ( # 113 )
updated message formatting in FluentProtocol . java to improve readability to enhance clarity of error messages for easier debugging
added a check to return early if the bubble bar visibility is not visible to improve performance by avoiding unnecessary processing when the bar is not visible
[ gr - 26464 ] do n ' t swallow branchtargetoutofboundsexception in substrateaarch64backend
added a try - finally block around the initialization of the JDKLogManager in JDKXRLogger . java to ensure proper resource management and prevent
added a new method ` find ` to ` TicketCatalog ` and updated logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry
refactor SSL connection handling in TestSSL . java for improved readability to enhance code clarity and maintainability by standardizing string concatenation
[ hotfix ] [ runtime ] fix race condition in sort merging result partition
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 558 - jmsio should
updated ` PluginHandleController ` , ` PluginHandleDTO ` , ` PluginHandleService ` , ` PluginHandleDTO ` , ` PluginHandle
updated method calls from ` start ( ) ` to ` start ( ) ` in ` DefaultSpanCreator . java ` and ` Sleuth
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableStencilFormat to IOSApplicationConfiguration
add a test to verify that the user lock out after a login attempt fails
refactor PtNDArray return statements to use a variable for handle variable to improve code readability and enforce unsupported operations for real and complex
refactor lockName assignment to use a do - while loop for better readability to improve code clarity and maintainability by using a do
refactor Implements and ShadowPicker classes to improve code organization to enhance maintainability and readability of the codebase
[ scb - 2636 ] add support for http / 2 connection pool size and multiplexing limit
added a check for ` DynamicArray . class ` in ` DynamicStruct . java ` and improved error handling in ` SolidityFunction
added a ` true ` parameter to ` getStringProperty ` and ` getFloatProperty ` methods in ` InlineLayout ` and ` FontUtil ` to
added a constructor to ` CopyStep ` that accepts a ` Path ` parameter and a corresponding test in ` CopyStepTest ` to enable recursive
fixed - rsemaphore . acquire ( ) and rsemaphore . addpermits ( ) method do n ' t
camel - 16462 : camel - core - optimize test to work with jdk 1.5
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` and ` BuildTargetParserTest ` to utilize
changed list types of witnesses and related methods from String to ByteString in WitnessScheduleStore . java to support more data types in witnesses
added a check for empty resultsMeta before printing it in TestElementsAnnotatedWith . java to avoid printing empty results when resultsMeta is not empty
refactor ConcurrentLinkedQueue to improve queue removal logic and add a new RemoveLeak class to improve memory management and prevent potential memory leaks
add support for skip special token in huggingfacetokenizer
[ hotfix ] [ runtime ] use collections . nCopies instead of manual list creation
refactor chunk data handling in LoadSingleTsFileNode . java to use a variable for alignedChunkData to improve code readability and maintain
added a session storage context constant and updated the DuoSecurityMultifactorWebflowConfigurer to utilize it to enhance session management
add a test to verify the schema validation of the jspx document
added a default constructor to TypeAdapter and modified Ignore annotations in Java17RecordTest and ReflectionAccessTest to ensure proper instantiation of TypeAdapter and
do n ' t call kill ( ) on resume event , throw an ioexception instead
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
refactor createresourcepolicy method to remove unused null parameter
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor to prevent potential NullPointerExceptions when _ deflaterEntry is
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
added normalization to the checksum calculation in CheckSum . java to ensure consistent handling of special characters in checksum values
refactor command handling and add null checks for completer and tailtip widgets to improve code robustness and prevent potential NullPointerExceptions
bugfix # 205251 - make keylistener final in basicprofilerstate
updated the type of ` objectToSave ` from ` T ` to ` DBObject ` in ` MongoTemplate . java ` and added a
added a method to check for multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to ensure correct handling of multiple remote
updated the return type of getJobArgs and related methods from String to ObjectBuilder in JsLibrary . java to enhance flexibility in job argument handling
replaced direct calls to InetAddress . getLocalHost ( ) with a static method getAddr ( ) in CookieManagerTest . java to improve code
updated glyph rendering logic in GlyphLayout . java and added a test in BitmapFontTest . java to ensure proper resource management and test coverage for
added a method ` pauseOrResumeSplits ` to ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReader
added support for the HIVESCRIPTID ENVVAR configuration in HiveConf and ScriptOperator classes to enable dynamic configuration of the Hive script operator ID
refactor ` getListedTermCounts ` method to use ` SimpleImmutableEntry ` and streamline term count retrieval to improve code readability and
added a new action class ` UseSeparateStepSizeAction ` to manage the functionality of the jog to enable users to easily use a
added final modifiers to several fields and refactored unlock filtering logic in FileMenuFilter . java to enhance immutability of fields and enhance
hbase - 26462 fix a bug in roundrobintableinputformat when regionserver be empty
updated header values for BraveHttpHeaders from " false " to " 1 " in HttpClientRequestAdapter . java and its test to ensure
pdfbox - 4071 : use ioutils . closeall ( ) instead of manual close ( )
added fullscreen functionality and updated viewport handling in GwtGraphics and GwtApplication classes to improve user experience by allowing fullscreen mode to manage
changed the type of ` issuers ` and ` normalizeResource ` from ` String ` to ` URI ` in ` WebfingerIssuerService
added a new test class ` SoulApacheDubboClientConfigurationTest ` for the ` SoulApacheDubboClient
replaced calls to ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` for texture path resolution to improve
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK
updated package declaration for java . lang in Compiler . java to improve organization and readability of the code
refactor nullerefandredundantComparisonFinder to improve code readability and handle specific code exceptions more effectively
simonstewart : use defaulthttpdatasource instead of hardcoded string
added a configuration property for maximum prepared statements per database connection to allow configuration of the maximum number of prepared statements per database connection
changed return type of ` set ` methods from ` WritableConfig ` to ` Configuration ` across multiple configuration classes to improve clarity and consistency in
added error handling for command payload errors in AutoScalingHandler . java to improve error reporting for better debugging
refactor CombinedDataset class to improve code readability to enhance maintainability and reduce complexity
updated variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code clarity
add a method to remove cryptography restrictions from security settings in Utilities . java and BitsquareApp . java to ensure security restrictions are properly removed
added a check for cancellation before teleportating a chunk in the entity to ensure that the entity is not canceled before proceeding to improve stability
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify the functionality of
added a null check for vContext before creating it to avoid potential NullPointerExceptions when vContext is null
fix ( wialon ) : fix speed calculation in wialon protocol
hbase - 25819 change default value of metricsuseraggregatefactory . default _ metric _ user _ enabled _ conf from true to false
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
updated variable names from ` mUserPresent ` and ` mVisible ` to ` mAttached ` and added a conditional check before unregistering the
refactor multiple HTTP - related classes to improve code organization to enhance maintainability and readability of the codebase
added parameters to the zadd method call in PipelineBase . java to enhance functionality by allowing parameters to be passed during the zadd operation
[ hotfix ] fix checkstyle violation in test
change the test class name from TestAsyncMessages to TestAsyncMessagesPerformance to indicate that the test passes but GC delays can be introduce
refactor VersionedTargetGraphBuilder and VersionPropagatorBuilder to improve null handling and test parameter references to enhance code clarity and maintainability by
updated time zone constants to use constants instead of hardcoded values to improve code readability and maintainability
updated the return statement in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to improve
removed redundant assignment of row and column variables in JSONParser . java to streamline the code by eliminating redundancy
replaced ` JavaType . ShallowClass . build ` with ` Pattern . compile ` for pattern compilation in ` FindTypes . java `
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added support for playback trailers in BaseItemDetailsFragment to improve
replaced direct calls to ` StrikeCache . freeLongPointer ` with ` removeGlyphInfoFromCache ` in ` CStrike . java
act - 113 : introduce terminateallbehaviour and refactored executionentity deletion in executionentitymanagerimpl
camel - 16462 : camel - xml - dsl - add support for xmlrootelement annotation in camel - core
updated the valid endpoint from " http : / / scottb . html " to " https : / / www . abc1234 . org
add prdef option to reset all preference to default value
changed access modifiers of several fields and methods from private to protected in ThriftMetrics and ThriftServer classes to allow subclasses to access and utilize these
removed deprecated channels related to manual fan speed in the DanfossAirUnitHandler to streamline the codebase by eliminating obsolete functionality
use hamcrest assertion instead of junit in tests / integration / camel - core
removed duplicate code for stopping expansionHelper in TweetActivity . java to improve code readability and maintainability
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to improve robustness by preventing null pointer exceptions and
cloudstack - 4892 : add root disk size to custom params when create vm
updated PredictionRowView to conditionally display predictions based on user preferences to enhance user experience by allowing customizable visibility based on user preferences
[ geos - 8014 ] fix npe when parse invalid bbox in feature service
added valid validation methods for value , position , and ivk shoud parameters in LibrustzcashParam . java to ensure
mark ithrowableentity a deprecate and mark it a deprecate
added calculations for x and y in NodeDataImpl . java to ensure proper positioning of nodes in the graphical representation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to improve
refactor JavacStep to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
updated the version number from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release of the software
added a check for DEEP _ SHORTCUT item type in LoaderCursor . java to ensure proper handling of deep shortcuts in the cursor
added hashCode ( ) method to TimeGranularitySpec class to ensure consistent hash code generation for instances of TimeGranularitySpec
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes for better extensibility
added a boolean flag ` useProxyResponseCode ` to control the use of the NTLM proxy based on the response code to improve proxy
[ gr - 43232 ] add aarch64 scratch register to the move .
server : use capacity . capacity _ type _ memory instead of vm . listup by host id
added a null check for the maximum score in JSONResponseWriter . java and included a query in TestDistributedSearch . java to ensure that
updated the audio recoder version from 22050 to 44100 in AudioRecorderTest . java to ensure compatibility with the latest audio features and
updated the calculation of newOriginX in RocketFigure . java to account for scale to ensure correct positioning of subject bounds based on
[ calcite - 4892 ] fix druid query by set default interval to default _ interval
added a new property ORIGINAL _ TYPE and updated regex pattern in CustomProperty . java and corresponding tests in CustomPropertyTest . java to
added a static method create ( Table parent , Map < String , Object > data ) to the Index class to facilitate the creation
simplified the return statement by removing the variable ` isBetweenGivenPeriod ` to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java and SchemaCompatibilityTestSchemaCompatibility . java
added support for entity paths in QueryUtils and updated related tests in EclipseLinkNamespaceUserRepositoryTests to improve entity path handling and ensure correct
added synchronized blocks to synchronize spans in TestSpanHandler . java to ensure thread safety during concurrent access to the spans list
changed the parameter type of the ` getText ` method from ` List < Object > ` to ` List < ? > ` across multiple classes to
updated exception handling in ViewContextImpl . java to provide more detailed logging for authentication failures to improve error handling clarity and provide more informative
refactor OAuth2AccessTokenEntity class for improved access token handling to enhance security and maintainability of the code
updated error messages to clarify that the service cannot process requests due to the status to improve error handling and provide clearer guidance on
added new file paths for iOS data and moe resources in the GdxSetup . java file to facilitate the use of iOS
updated imports in TestSearcherManager . java and added a merge scheduler to TestSearcherManager . java to improve merge performance by utilizing
updated conditional checks in QTestUtil . java and improved list handling in GenericUDTFInline . java to enhance code clarity and
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
jasonleyba : fix for npe when click on a spreadsheet key
added persistence and session factory services to HibernateBundleActivator and updated tests in OsgiTestCase to improve service management and ensure proper cleanup
fix timeout calculation in hikaripool and hikaripool
refactor voicecompilation to use a non - packaged - resources directory instead of create a separate file .
updated file name handling and improved directory checks in Compat . java and FileOpener . java to ensure compatibility with different operating systems and
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to simplify the method signature
improve error message when port be specify multiple time
added a null mask feature to WebSocketClient and modified WebSocketConnectionD12 constructor to use it to improve flexibility in WebSocket connection handling by allowing
changed the return type of the genUDTFPlan method from ` RelNode ` to ` Pair < RowResolver > ` to allow for
added node selection stats tracking for preferred and non - preferred nodes in NodeScheduler and related classes to enhance node selection tracking for better tracking of node
added a new file ` Person . java ` containing a class ` Person ` with getter and setter methods to facilitate the management of
refactor owner pointer handling in CPlatformWindow . java to improve clarity and functionality to enhance code readability and maintainability by using a
updated PlaybackOverlayFragment to utilize a Handler for timing updates to improve responsiveness and control over clock updates to enhance user experience by
move updatecomparatoroutputlevel call to world . updatecomparatoroutputlevel instead of world . updatecomparatoroutputlevel
updated the IMPL variable declaration and improved exception handling in SegmentReader . java to enhance class loading reliability and provide clearer error messages
refactor Sudoku event firing to run on the Event Dispatch Thread to ensure that event firing is executed on the Event Dispatch Thread to improve
removed unused ` DefaultInetAddressAdapter ` and ` DefaultInetAddressAdapter ` from several classes to simplify the code and improve readability
added methods to retrieve double , long , boolean , and string values in the Series class and corresponding test cases in DataFrameTest to improve error handling
updated the audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure
updated boundary conditions in GeoRelationUtils and GeoRect calculations in GeoUtils , and added new test cases in TestGeoPointQuery to improve accuracy
fix nullpointerexception when retrieve the disk offering from the service offering
added cleanup method to HazelcastTest to ensure proper cleanup of resources after tests are executed
added checks for AES algorithm " NoPadding " and " NoSuchProviderException " in BlockCipherTest . java to ensure proper handling of NoSuchProvider
added filters to print operations logs in QFileClient . java to improve visibility into operations logs for better debugging
fix issue with @ beandefinition inject parent interface ( # 4891 )
initialize currentconnectionaddress if it be null to avoid npe
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to simplify the code
refactor image output stream handling to use try - with - resources for better resource management to improve code readability and ensure proper resource management
replaced ` TvApp . getApplication ( ) . showSearch ( activity , boolean musicOnly ) ` with ` Intent ` in multiple activities
removed unnecessary ' this ' keyword from SchemaCrawlerCommandLine and GrepOptions classes to improve code readability and maintainability
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - add osgi
added a @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to facilitate dependency injection for the PersonRepository instance
changed the exception type from Exception to InterruptedException in the stop method and updated log message formatting in TestVertxUIManual . java to
refactor case statements in BlockCactus . java for improved clarity and organization to enhance code readability and maintainability
refactor mouse event handling into a separate method ` handleMouseMotionListener ` to improve code readability and maintainability by encapsulating mouse event
introduced a new class ` AbstractMinMulticastFlowControlRhsPadding ` and updated ` AbstractMinMulticastFlowControlFields `
added alignment and vertical alignment parameters to the editStringAt method in IOSNative . java and IOSImplementation . java to enhance text editing
updated exception handling in StatTokSentAnnotator to throw IllegalArgumentException instead of Exception to improve error handling and provide clearer feedback when modelFile is
added a check for distinct queries in ClusterIntegrationTestUtils and refactored grouping and grouping logic in QueryGenerator to improve handling of distinct queries
improve error message in jnifunction . findcloselylinkage ( ) .
fix a typo in the javadoc of jsyntaxtextarea
added null check for children in PartitionPruner . java to prevent potential NullPointerException when children is null
added token and currentPosition fields and updated JsonLocation handling in MessagePackParser . java and corresponding tests in MessagePackParserTest . java to enhance
added locale management to AbstractSolrMorphlineTestBase to ensure consistent locale settings in tests
removed unnecessary conditional checks for setting size in LauncherFragment . java to streamline code for better readability and maintainability
added a new file ` MetricsReporterTest . java ` to implement unit tests for the ` MetricsReporter ` class to ensure proper registration and registration
camel - 16462 : camel - osgi - remove unused import in camel - mock
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for instances of the Rectangle class
[ hotfix ] [ test ] fix sinkkafkaptest # test _ nonexistenttopic and sinkkafkaptest
refactor DSAParameterGenerator to use BigInteger . ONE instead of a static final BigInteger instance to improve clarity and maintainability of the code
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated related classes to utilize it to improve host name
fix clientoutofmemoryhandlertest fail on slow machine
added a new method ` getCmoObjectId ( ) ` to multiple shape classes and introduced a new test class ` TestShapes ` to ensure shape
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of the ` distinct
refactor Driver , SearchTravRetLoadFieldSelectorTask , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes
remove unused bindextensionadapter and unbindextensionadapter from managedk8sclient
updated subtitle display to use ` Utils . getInfoRow ( baseItem ) ` instead of ` baseItem . getOfficialRating ( ) `
updated JUnit imports and annotations from JUnit 5 to JUnit 5 in TestAuthHandlerBoot , TestRSAProviderTokenManager , and Test
added exception handling for IOException and TransformerException in BugCollectionBugReporter . java to improve robustness by logging errors when summary HTML generation fails
removed unused parameters from intPool and bytePool reset methods in TermsHash . java to simplify code and improve readability
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated API level check from S _ V2 to TIRAMISU and introduced a new window session delegate class to enhance compatibility with T
refactor URL handling logic in UrlHelper . java for improved clarity and correctness to enhance the logic for adding scheme host and port
added support for MSSQLDatabase in foreign key constraint generation logic to enhance compatibility with MSSQL database interactions
hbase - 20615 addendum fix checkstyle violation in replicationsource
add a filtereventhandler to make sure we do n ' t have a color
simonstewart : make htmlidentifier logging configurable
updated HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema ( ) and modified
add a setthrowswhenusingWrongThread ( ) method to the listenerset , and deprecate the setthrowswhenusingWrongthread ( )
added CatalogAndSchema import and modified SCHEMANAME query construction in SequenceSnapshotGenerator . java to enhance schema handling by incorporating
updated color calculations in SpriteBatch , SpriteCache , and AlphaTest classes to improve color handling and enhance texture rendering capabilities
fixed - redissonconnection . tocompletablefuture ( ) . join ( ) method throw classcastexception . # 3396
added logic to add the base core to statisticYearCores based on the Solr client ' s base URL to ensure that the statistic year cores are
renamed the method ` launchTask ` to ` launchTaskFromView ` and introduced a new method ` launchTaskFromView ` to improve
updated MorfologikFilter to use dictionary resources instead of hardcoded strings to improve flexibility and maintainability of the Morf
updated sorting options from " stars " and " critic " to " community " and " critic " in GridFragment . java to ensure
added imports for ViewKt and ListRow , and modified visibility logic for ListRow in CustomListRowPresenter . java to ensure visibility of
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ( DB2Database ) ` in multiple classes to improve type safety and
added support for java _ time _ module in standardjavascriptserializer for jackson
updated import statement from org . apache . log4j . MDC to org . slf4j . MDC to align with the
updated type handling in PhiTypeResolver to use Type instead of TypeBearer to improve type safety and clarity in type merging
updated import statements and formatting in CoinbaseTransaction . java to improve code readability and maintain consistency in formatting
added ` getBuildTargetList ` method to ` BuckConfig ` and modified ` ProjectCommand ` to include a new ` shouldForceBuildingWith
updated the initialization of the idle strategy in Ping . java to ensure proper garbage collection and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and related classes to use ` ContentResolver ` instead of
removed unnecessary conditional checks for state change in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot
add a new recipe class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime .
removed redundant super ( ) calls from multiple exception classes to improve code clarity and maintain consistency across exception handling classes
added an override for setting the UIID in the ScaleImageLabel class to ensure proper handling of the UIID in the component
updated variable name from ' foundEntry ' to ' update ' in FeedUpdateService . java to improve clarity and consistency in variable naming
updated argument handling in Main . java to include " - cp " alongside " - classpath " in addition to " - classpath " to
updated the link from " options " to " compiler " in avutil . java to ensure compatibility with the latest compiler requirements
set the initialized variable to true in StorageService . java to ensure proper initialization of the storage service
updated Test7196045 . java file to improve test coverage and ensure compatibility with recent changes
updated density and decay values in ShaderParametersLightShaft . java from 1.5 f to 1.0 f and 0.95
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated related methods in ` OidcRedirectActionBuilder
ddl : fix unique constraint for non - nullable column
added federated permission checks in UsersAndGroupsSearchProvider and EditShareFragment to ensure correct handling of federated sharing based on user capabilities
added a method ` needsDocValues ( ) ` that returns true to the ` TestBBoxStrategy ` class to ensure that document values are correctly
refactor BufferAlignment and StringWriterOutputManager classes for improved error handling and clarity to enhance code readability and maintainability while ensuring proper
added an ` intForEach ` method to ` Int2ObjectHashMap ` and updated the ` IntObjConsumer ` interface to handle null values
do n ' t associate the save data with the worldscoreboards early to prevent the global map storage
changed the return type of the count ( ) method from Long to long in QueryDslMongoRepository and SimpleMongoPredicateExecutor classes to improve
updated time comparison logic for MTree snapshot creation in MManager . java to improve clarity and consistency in logging messages
refactor the dot product calculation in VectorUtil to use a variable for denom to improve readability and maintainability of the code
added a constant for the IRREVERSIBLE _ THRESHOLD and updated related methods in DynamicPropertiesStore and Manager classes to enhance the configuration management
replaced the ` setLocale ( ) ` method with a ` Systems . setLocale ( ) ` method in ` GpsMainActivity ` and `
added a check for ` wasNewDbCreated ` in ` LauncherClings ` and implemented it in ` LauncherProvider ` to ensure
refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve readability and maintainability of the code
refactor conditional logic in Constants . java to improve readability to enhance maintainability and clarity of the code
added a check to prevent processing of the same thread in TestIndexWriterDelete . java to improve performance by avoiding unnecessary operations on the same
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the closeDatabase method
updated imports from org . jellyfin . apiclient . model . dto to org . jellyfin . sdk . model
added import handling for SVG elements in BatikSVGDrawer . java to ensure proper attribute management for SVG elements in the document
added a try - catch block around the exception handling in ConsoleKeys . java to improve error logging for user configuration parsing failures
added logic to set ` waitingForResult ` based on ` intentExtras ` in ` AndroidImplementation ` and ` CodenameOneActivity `
refactor constructors in HitQueue , SpanPositionQueue , PriorityQueue , TopOrdAndIntQueue , and TermAutomatonScorer to
added functionality to display widget descriptions in WidgetCell . java to improve user experience by providing a clearer display of widget descriptions
added a maximum registered attribute count check in Attribute . java to ensure that the attribute count does not exceed a defined maximum value to prevent runtime errors
move predicatestest to impl . predicates package
camel - 16462 : camel - core - add option to set case - insensitive header name in defaultheaderfilterstrategy
refactor inline layout handling in InlineLayout and Breaker classes to improve clarity and functionality to enhance code readability and maintainability while ensuring
added nullable imports and refactored view initialization in ShareUserListAdapter . java to improve code robustness and prevent potential NullPointerExceptions
refactor the ` shouldInstrument ` method to include an additional check for ` isFromAndroidSdk ` to streamline instrumentation logic for Android SDK
added a check to return the last column in the table if the association is insert destination before source to ensure that the table correctly reflects the
updated the method to retrieve the memory limit file path in CmdModifierTest . java to improve flexibility by allowing dynamic configuration of the memory limit
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` and added a check for
added a null check for the source under test in JavaTestRule . java to improve error handling by providing clearer feedback when the source under
make minecraft 1.9 . x compatible with 1.10 . x
added a check to ensure atIndex is non - negative to prevent potential index out - of - bounds errors
increased timeout duration from 100 milliseconds to 500 milliseconds in BuckBlockJUnit4ClassRunner and adjusted sleep duration from 1000 milliseconds to
refactor TaskOverlayFactoryGo constructor to use a new AssistContentRequester instance to improve dependency injection and encapsulation of AssistContentRequester
replaced ` StringUtil . createReadableString ( witnessAddress ) ` with ` StringUtil . encode58Check ( witnessAddress ) ` for witness address
refactor DefaultMethodRegressionTests for improved test coverage to enhance reliability of method regression tests
refactor WorkloadManagerMxBean class for improved clarity to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to align with the correct exception
added a call to close the loader in the DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a ` clear ` method to ` ExceptionThrowingTaskletStub ` and corresponding unit tests in ` FaultTolerantExceptionClassesTests
improve error message when config be not find
added a new parameter ` extraProperties ` to multiple method signatures in ` TableConfigTunerUtils ` and ` TableConfigsRestletResource `
added handling for in - progress segments in PinotRealtimeSegmentsManager to ensure only valid instance names are added to the list of segments to
added a check to return null if the touchable is disabled to ensure proper handling of touch events when touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a RetryableHazelcastException if the cache config be null to ensure that a valid cache configuration is created before proceeding to avoid potential
refactor JSweetTranspiler to utilize a new method for checking installation of node packages to improve code readability and maintainability by
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance management capabilities for MBeans in the application
added a comment to the condition in LongClickableSpan . java to improve code readability and maintainability
refactor equality checks in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` equals ( " 0
updated conditional check in ` Types . java ` and added new classes ` T6558559a ` and ` T6558
added position and size information to player output in WorldEditListener . java to improve user experience by providing clearer position and size information
camel - 16462 : camel - kafka - do not wait for consumer to shutdown
removed the default implementation of the examples ( ) method in Schema . java to simplify the code by eliminating unnecessary default implementation
modified the condition for thread interruption and added a break statement in AgentRunner . java to ensure proper handling of thread interruption and
remove the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure that the dataset ' s time column is
updated conditional check for shards in FacetComponent . java to ensure proper validation of shards length to avoid potential NullPointerExceptions
replaced direct linker provider retrieval with CxxPlatforms dependency retrieval in RustBinaryDescription . java and RustLibraryDescription . java to
added ` name ` and its getter / setter methods in ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` Ntlm
do n ' t swallow runtime exception in igv dump handler
added small scan threshold configuration and a test for it in QueryCompilerTest to enhance query performance by allowing dynamic adjustment of scan thresholds based on point
updated the ` filterToStringCreator ` method to include ` routeId ` in the ` RetryGatewayFilterFactory ` to enhance the clarity of
replaced multiple calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java
refactor ` onOverviewShown ` methods to use ` showForOverviewIfNeeded ` instead of ` onOverviewShown ` across multiple classes to improve
refactor conditional checks for minPackedValue and maxPackedValue in CheckIndex . java and add a test for deleting all point documents
updated the publish method call to use ` updateLastState ` instead of ` true ` to improve clarity by using a more descriptive parameter
added a quote for the SKEWED _ STRING _ LIST _ ID in the MetastoreDirectSqlUtils . java file to ensure
added a null value to the exp list in SpliteratorCollisions . java to ensure that null values are not added to the list
simonstewart : add text case - sensitive test to the condition
replaced ` do ( ) ` with ` while ( while ( true ) ) ` in ` ManyToManyConcurrentArrayQueue . java ` to
no effective change - add ` ` forwardonlyfetchsize ( ) ' ' method to ebeanqueryengine and cquery
refactor exception handling in HttpServerMultiplexChannelHandler to check for closed channels before proceeding to improve robustness by avoiding unnecessary logging for
pdfbox - 4892 : optimize initialization of list , a suggest by valerybokov
added support for rounded corners on windows in QuickstepAppTransitionManagerImpl to ensure proper scaling of window radius based on resource support
replaced ` ShapeDrawable ` with ` View ` and updated background handling in ` DesktopTaskView . java ` to improve flexibility and
[ type : refactor ] fix upstreamcheckservicetest to use upstreamcheckservice
changed log level from warn to debug for session immortal messages in AbstractSession and AbstractSessionManager to improve logging granularity for better debugging
removed error logging and returned locks in ZooKeeperHiveLockManager . java to streamline lock retrieval process and improve error handling
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a boolean flag ` containsCustomData ` and modified the mipmap generation logic in ` FileTextureArrayData . java ` to ensure
updated secret key format in DefaultMaskingFormatterTest to use a single quote for consistency to improve readability and maintainability of the test code
added methods to manage the selection state of the list in the List class to improve user interaction by allowing touch events to be selectable in the list
removed the check for empty vector values in LlapArrowBatchRecordReader . java to simplify the code by eliminating unnecessary checks
added file separator handling in PolicyContext and updated test cases in TestPolicyContext to ensure consistent file path formatting across different operating systems
changed the type of ` flatQueries ` and ` expandQueries ` from ` Set ` to ` List ` in ` FieldQuery . java `
refactor TLSRestrictions class for improved security to enhance security and maintainability of the code
added a Runnable to ensure producer is closed only if it is not null to prevent potential NullPointerExceptions when producer is not initialized
updated the assertNodeStateProvider method to include an additional parameter for ignorableNodeValues to enhance the functionality of the assertNodeStateProvider to
added a lock file deletion check in RocksdbMavenPomCache . java to ensure that the lock file is deleted if it exists
updated MiniZooKeeperCluster to use InetSocketAddress for NIOServerCnxn factory initialization to ensure proper handling of the client port to avoid potential
refactor the ` getResponse ` method in ` RestClient ` to streamline error handling and logging to improve code readability and maintainability by
updated the method call from ` segmentTarURIs . toString ( ) ` to ` segmentTarURIStrs . toArray ( ) ` in `
updated loginStudent method to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure the
added null checks for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions during activity finishing
increased the number of strings from 500 to 100 in TestSpecialOperations . java to accommodate longer string counts during testing
updated ByteArrayInStream initialization and removed the hexToBytes method from WKBAttributeIO . java to simplify the code and improve performance by elimin
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if a state is a direct submachine before proceeding to improve state management by preventing unnecessary processing of submachine
added handling for ListMultimap and SetMultimap types in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality
added the JoinOperation interface to the PostJoinOperation class to enable the implementation of JoinOperation in the PostJoinOperation class
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify that the PostgreSQL executable execution
added exception handling for the destroyDurableSubscriber method in amq5035Test . java to ensure graceful shutdown of the broker when an inactive reason
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
replaced int fields with String representations for lifeTime , idleTime , idleTime , and maxWaitTime in MongoDbConnectionPoolProperties . java
do n ' t cast null to mediumformatfactory in siputils to avoid npe
refactor filter handling methods in FacetProcessor to return boolean values instead of void to improve clarity and functionality of filter and block join processing
added a configurable timeout handler to the ShuffleHandler to enhance flexibility by allowing customizable timeout settings
replaced hardcoded value of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED
camel - 16462 : camel - xquery - add more log to debug level
refactored resource loading in NNDataSet . java to use DataResource to improve code readability and maintainability by using a consistent class reference
add unit test for edge case tokenization ( # 1751 )
added a validation check for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that the ' atlas ' property is present
camel - 16462 : remove propertyplaceholderhelper from camel - support
added database connection closure in BlockchainTest . java and removed redundant ReceiveSource in KafkaTest . java to ensure proper resource management and simplify the
refactor code to use a new method ` getLines ( ) ` for handling lines to improve code readability and maintainability by centralizing
int - 1186 fix the build error in webserviceinboundgatewayparsertests
replaced ` ImmutableList . Builder ` with ` List < Object > ` for ` args ` in ` ProjectableSQLQuery ` , ` SQL
added support for OpenJDK VMs in the VirtualMachine class to ensure compatibility with OpenJDK environments
added a keepAlive ( true ) method call to ReactorClient . java to ensure the client keep - alive state for better resource management
replaced string literals for vertex attributes with constants from ShaderProgram in MD5Renderer . java and ObjLoader . java to improve code read
camel - 16462 : camel - jbang - add support for ` ` properties ' ' component in camel context .
updated null check for account capsule retrieval in UnfreezeBalanceActuator . java to improve code clarity and prevent potential null pointer exceptions
update the version number from 3.8 . 0 to 3.8 . Alpha in XMPPServer . java to reflect the new release status for
updated return statements to use ` t . unannotatedType ( ) ` instead of ` t ` for type annotations to ensure correct handling of
refactor assertions in StorageGroupProcessorTest for clarity and consistency to improve code readability and maintainability
added a new ` DumpableCollection ` to the ` Server ` class and modified class loading logic to utilize the ` Environment ` class to
added a new parameter ` params . waitbeforestart ` to ` FFMpegVideo . java ` to set the wait before starting the video
removed the ` skipCorrupt ` parameter from the constructor of ` OrcEncodedDataConsumer ` and related classes to simplify the constructor and eliminate unnecessary
updated import statements and added a new test method for list index bounds in AccessorsTest . java to improve code clarity and maintainability by
added method to compile a method in GraalCompiler and a frame map in LIRGenerator to enhance method compilation capabilities and provide a way to
replaced JUnit Ignore annotations with ConditionalIgnore annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to improve test
fix boat ' s y - coordinate calculation to account for block water
updated toString ( ) method calls in Directory . java and added getLockID ( ) method in RAMDirectory . java to improve readability and provide
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the code by eliminating unnecessary method
added utility methods for asserting paths and assertions in BDDAssertions . java to enhance functionality for asserting paths and assertions in the B
refactor variable names from ' hp ' to ' hostField ' for clarity and consistency to improve code readability and maintainability by using
updated logging level from debug to warn for missing Kubernetes config files and updated KUBECONFIG path to provide clearer guidance on configuration export
added OCFile handling and upload status management in UploadListActivity and FileStorageUtils to enhance file management capabilities and improve error handling during upload
added a new ` ProviderLoader ` interface and updated ` TerminalManager ` and ` ProviderLoaderListener ` to implement a new ` ProviderLoaderListener
updated imports and references from Span to TraceMessageHeaders in StreamEnvironmentPostProcessor and StreamEnvironmentPostProcessorTests to utilize TraceMessageHeaders instead
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig instead of a hardcoded string to improve readability and maintainability of the code by
hhh - 14719 - fix schema update test for postgresql 2.2
do n ' t calculate partition per member if datamembersize be non - positive
updated ExecutionScheduler and ExecutionSchedulerImpl to check if the scheduler is started before starting a new delay and added error handling for scheduler state checks to
refactor InlineBox initialization and conditional check in BoxBuilder . java to improve code readability and maintainability
updated argument formatting in StatisticMap . java for consistency to improve readability and maintainability of the code
updated the staged rectangle slide end value from 383 to 500 in the TabletSplitToConfirmTimings class to reflect the current state of
updated button labels in WaveInfoDialog and PlacementFragment to use dynamic bundle keys instead of hardcoded strings to improve localization support and maintainability of
updated the condition to check for both road ITEMS and plot area in BukkitMain . java to ensure proper handling of plot
added a test for ` setTouchExplorationEnabled ` method in ` ShadowAccessibilityManagerTest ` and modified ` ShadowAccessibilityManager
pdfbox - 5328 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
use getname ( ) instead of getpropertyasstring ( ) . getname ( ) .
replaced the instantiation of NPOIFSFileSystem with POIFSFileSystem . create ( big ) in TestNPOIFSFileSystem .
added imports for PlotArea and PlotArea , and modified return logic to check if the plot area is valid to ensure proper handling of plot areas
updated regex pattern in TestWebHCatE2e . java to ensure correct matching of the version number format
updated the condition for ` count ` from ` 0 ` to ` 1 ` in ` Filters . java ` to ensure that ` count ` is
fix kafkaproducer processor to include clientid
added error handling for javac execution failure in JavacCompiler . java to improve robustness by throwing an exception when the execution fails
ggb - 1352 repaint view only if there be no repaint
camel - 16462 : camel - spring - batch - addendum fix checkstyle violation in camel - spring
added a method ` isAnimationFinished ` to check if the animation is finished to provide a way to determine if the animation is finished based on
updated import statements and added a test for custom shortcut icons in LoginMockMvcTests . java to ensure proper handling of line breaks in shortcut icons
added null check for otherUrl before checking its value to prevent potential NullPointerException when otherUrl is null
ggb - 1565 fix for space in the text field in web
refactor ObjectHashSet class for improved performance to enhance efficiency and maintainability of the code
refactor null and array comparison logic in DataUtilities . java to improve code readability and maintainability by using Java ' s built - in
allow deletion of enchanted books ( mc - 12770 )
[ microprofile ] add test case for asyncresource . get ( ) and asyncresource . put ( ) . get ( )
updated header mappings from " target - flat - headers . hmap " to " target - user - headers . hmap " in ProjectGenerator
added error handling for SendFailedException in MailService . java to improve logging clarity and provide more informative messages when sending emails
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` and updated
added unit tests for retrieving partitions by name with multiple equal and unequal batches in TestHiveMetaStoreClientApiArgumentsChecker . java to
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter
adjusted the index in the removeViewInLayout method from ` getChildCount ( 1 ) ` to ` getChildAt ( child - 2 ) `
removed " org . eclipse . jetty . websocket . util . server . internal " and " org . eclipse . jetty .
fix ( s3 ) : s3request . policy should not be set to true .
refactor jfxRadioButtonSkin to remove parameter from initializeComponents method to simplify method signature and improve code readability
updated condition checks for splits in DeweyNumber . java and added a new test for zero splits in DeweyNumberTest . java
added a private static variable ` categorySetString ` and modified the string representation of the category set to improve code readability and maintainability by
corrected the spelling of " close " in the WebSocketClientTest . java file to ensure the test accurately reflects the expected close
added a null check for the classLoader in WebappLoader . java and updated the expected length in TestVirtualWebappLoader . java to ensure
refactor persistent field collection logic in PersistentAttributeTransformer . java to improve clarity and maintainability of the code
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` for the ` PorterStemFilter ` to validate the functionality of the ` P
added a success parameter to the postBatchMutate method and updated its logic accordingly to ensure that index updates are only written when the miniBatch
rename ` org . springframework . batch . core . exlore ` to ` org . springframework . batch . core . explore
fix a concurrency issue in the chat window manager .
removed redundant ` Sys . touch ( ) ` calls from multiple Java files to streamline the code by eliminating unnecessary static block
updated HgCmdLineInterface and related classes to use " - mardu " instead of " -- unknown " and modified untrackedFiles
camel - 7037 : camel - netty - add a timer to the channel pipeline so it can be use by camel - netty
changed access modifiers of variables from public to final in DirectionalLight , PointLight , and SpotLight classes to enhance immutability and cl
updated X11GraphicsConfig and WGLGraphicsConfig to use Math . max ( 1 ) instead of target . getWidth ( ) and target .
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and corresponding unit tests to enhance
added an AnnoFilterTreeSet class to handle annotation classes and updated findClassesThatExtend methods to improve annotation handling for inner classes and enhance
updated the overflow check for newLength in BytesColumnVector . java to handle integer overflow more gracefully to improve robustness by ensuring newLength is
replace assertEquals with assertTrueEventually in WriteBehindMapStoreWithEvictionsTest . java to improve test reliability by ensuring
changed the parameter type of the uninstallListeners method from JScrollPane to JComponent in MotifScrollPaneUI and XTextAreaPeer classes to improve
ggb - 2852 fix for [ 2 , 3 , 3 , 3 , 3 , 3 ] : make sure poly function be equal
added a null check for the table before setting the column class to avoid potential NullPointerException when table is not initialized
added error handling for customChange instantiation in CustomChangeWrapper . java to improve robustness by catching ClassCastException during class loading
refactor ` DistBuildConfig ` to use ` BuckConfig ` instead of ` ConfigPathGetter ` and update related methods accordingly to improve
update export dialog to show warning and exit when use double entry .
added JUnit Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to known issues
changed the return type of ` doJoin ` and ` doCopyLeft ` methods from ` void ` to ` boolean ` in multiple classes to
removed the method ` getAutodeps ( ) ` from ` JavaLibraryDescription . java ` to streamline the code by eliminating
updated intent flags in LauncherTimelineCursorAdapter . java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure proper handling of task
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance pagination capabilities in the query
updated repository retrieval logic in RepositoryConventionPluginTests . java to use the correct number of repositories instead of the first one to ensure the correct repository
add a new nodeaffiliate task to make it easy to write the affiliate of a node .
improve error message when taglib directive uri be invalid .
changed the access modifier of the ` buildUserProfileByClassCompleteName ` method from private to public to allow access to the method from other classes
added array handling in CacheKey . java and refactored doUpdate method in CacheKeyTest . java to improve performance and readability by
added FileTypeDetector implementation to various file system classes to enhance file type detection capabilities in the application
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
replaced ` ShadowVirtualDeviceParams ` with ` VirtualSensorCallback ` in ` ShadowVirtualDeviceManagerTest . java ` and removed ` Virtual
added a condition to exclude the context before execution in the HttpSessionSecurityContextRepository to ensure that the session is not removed from the session when the context
refactor loopback address handling in NetUtil . java to improve clarity and functionality to differentiate between loopback and link local addresses
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and modified buffer initialization logic in Zlib . java to improve clarity and
updated validation logic in KeyInfoReferenceResolver and improved exception handling in XMLSignatureInput and ResolverLocalFilesystem to enhance security checks and improve error
added a boolean flag to track if the icon listener is installed and updated action listener handling accordingly to ensure that the icon listener is only added when
added support for Russian language in the Language class to enhance language support for Russian users
hhh - 15836 - fix the time unit for sqm to sql
disable frame state verification in substrategraphkit . java
added system property handling in RobolectricTestRunnerTest and TestUtil to ensure proper restoration of system properties during
added a system class for " org . slf4j . " in the web application context to ensure proper loading of SLF4J
added a null check for the packaging parameter in ChangePackaging . java and implemented a new toString method in ChangePackagingTest . java
added ` withextension ( " txt " ) ` method to ` FileDownloadViaHttpGetTest ` and ` FileDownloadViaProxyTest `
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer for
replaced instances of ` defaultUnits ` with ` preferredUnits ` and updated related methods to use it to improve clarity and consistency in unit
updated the expected date format in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different time zones
[ hotfix ] [ runtime ] fix checkstyle violation in terminator
enhanced error messages for file URIs in FileSystem , LocalFileSystem , and DistributedFileSystem classes to improve clarity of error messages for better debugging and
fix showtrackingnotification not run in one minute
increased the maximum reconnect attempts in FtpReconnectAttemptServerStoppedIT and added a method to count active sessions in FtpEmbeddedService
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to utilize ` ConcurrentSkipListMap
added the ` ignore ` method to multiple log classes to enable logging of ignored exceptions based on the log level
added a null check for runningTaskView before proceeding to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for item and contents in BukkitWorld . java to simplify code by eliminating unnecessary casting
replaced the call to GraphicsUtil . cleanImage ( img ) with a call to GraphicsUtil . cleanImage ( img ) to improve image
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to implement directory creation functionality for MMapDirectory and SimpleFSDirectory
added null check for ` ic ` before creating ` cleanUpColor ` to avoid potential NullPointerException when ` ic ` is null
updated query equality test to use field1 _ s instead of field1 to ensure correctness in query comparisons
refactor ExtendedOperatingSystemMXBeanImpl class to improve code structure to enhance maintainability and readability of the code
added a new method ` installLeftCommands ( ) ` to manage left and right commands in ` SideMenuBar . java ` to enable users
added a new boolean field ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity `
added SybaseDatabase to the conditional check for DropPrimaryKeyGenerator to ensure compatibility with SybaseDatabase in primary key generation logic
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] reset last recording position when the leader be ready .
replace ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java ` and
added a return statement to the NearCachedClientMapProxy class to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to shutdown the HTTP server and improved error handling in ListenHTTP . java to ensure graceful shutdown of the server and handle potential
camel - 15836 - camel - aws2 - s3 : fix the build error of camel - aws2s3
[ hotfix ] [ runtime ] rename parameter to taskmanagershandler . taskmanager _ id _ key
bug cs - 14284 : drop unique _ name and network _ offerings from 2.2 . 7 to 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` and modified password handling in ` TOpenSessionReq . java ` to improve test
updated energy limit assignment logic in VMActuator . java to use maxEnergyLimit instead of maxEnergyLimit to ensure accurate energy fee
added maxInMemorySize property and its getter / setter methods to HttpClientProperties and updated webClientPlugin to accept it to enhance flexibility in
refactor Cache class implementation to improve performance and maintainability of cache operations
added new Cucumber test classes for Cucumber execution and step definitions to facilitate testing of Cucumber functionalities in
added error handling for parsing double values in TypeJsonUtils and corresponding tests in TestArrayOperators to improve robustness of double value writing and ensure
removed duplicate byte array assignments in Utf8StringBuilderTest . java to streamline the code for better readability and maintainability
added checks to ensure parameters are only processed if they are set to improve code robustness by avoiding potential null pointer exceptions
camel - 16462 : circuit breaker should allow to specify maximum number of output for circuit breaker
updated the maximum buffered documents configuration in TestIndexWriterExceptions . java to ensure that the test accurately reflects the expected behavior of document frequency
replaced ` hasher . putUnencodedChars ( ) ` with ` hasher . update ( hasher ) ` for resource APK , primaryD
added methods to retrieve enum values and long values from EnumMapper in AsmRuntime . java to enhance the functionality of the AsmRuntime class
fix forge biome not be able to add new biome tag ( # 6791 )
refactor image loading to use a fixed thread pool instead of a fixed thread pool to improve performance and reduce resource usage during image loading
changed access modifiers of several fields and methods in BaseTableUpsertMetadataManager to protected and refactored segment preloading logic to improve accessibility
corrected the spelling of " … … … … …
replaced calls to ` getImage ( ) . equals ( varName ) ` with ` hasImageEqualTo ( varName ) ` and ` hasImage
camel - 16462 : camel - jbang - add -- repos option to camel - jbang - run and camel - jbang -
added handling for NaN score in CrawlDbReader and updated tdigest creation logic to handle NaN values to improve robustness by preventing errors
added a cleanup method in OnStartupTriggeringPolicyTest to clean up temporary files after tests to ensure proper resource management and avoid potential memory leak
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and modified focus
[ hotfix ] [ runtime ] implement autocloseableasync in checkpointscleaner
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema creation and validation to facilitate validation of XML schema files
[ bonsai ] do n ' t override trie log layer when rollback be not override
refactor FilledNewArrayInstruction class for improved clarity to enhance maintainability and readability of the code
increased test timeout duration from 60 seconds to 60 seconds in SimpleNetworkTest . java to allow for longer test execution times
updated the method to check if parentPath ends with " / " instead of substring in OCFile . java to improve clarity and correctness
added a print statement to indicate failure when loading the skin file to facilitate troubleshooting and debugging of skin file loading
added ` markDirty ( ) ` and ` isValid ( ) ` methods to ` LgoLevel2BatchSubscription ` and ` LgoGrouped
added a static final Result constant UNDEFINED in Result . java and updated its usage in TestStep . java to improve code clarity and maintainability
replaced ` PersistenceException ` with ` NullPointerException ` in ` TestTransactionCallback . java ` to ensure that ` MyCallback ` is properly registered
fix uploadjobmultpartoperation to work with jet service
[ hotfix ] [ runtime ] do n ' t corrupt recovery location when recovery fails .
bug fix : do n ' t show summary level when there be no child
replaced the ` pos ` variable with a ` sizeMask ` and modified the ` ensureAvail ` method to utilize a more efficient
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to temporarily disable tests
replaced the variable ` targets ` with ` endpoints ` in ` StorageProxy . java ` to simplify the code and improve clarity by using
updated the declaration of the parameters in FileManager . java to improve code readability and maintain consistency
updated TransformFunctionType and TransformFunctionFactory to include additional transformation types to enhance code readability and maintainability by reducing redundancy
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and ` PackageInfo ` classes to enhance
updated RFC3280 from " RFC3280 " to " RFC5280 " in multiple Java files to reflect the correct RFC standards for
fix classcastexception in searchannotationvisitor and fix typo
replaced HashMap with SparseBooleanArray for selected items in NoteAdapter and ListActivity to improve memory management and optimize item selection handling
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to improve code readability and maintainability by utilizing ResourceUtils for
updated ` TaskViewSimulator ` and ` TaskThumbnailView ` to accept a ` Context ` parameter and adjusted clipping insets based on multi -
[ java ] do n ' t publish newleadershipterm if it ' s already in the recording log .
( chore ) camel - pmdcoveragetest : fix test failure
refactor byte skipping logic in ByteArrayInputStream and introduce a new Skip class with methods to improve byte skipping functionality and facilitate testing of
simplified the condition for promptUpdate in UpdaterTask . java to improve code readability and maintainability
added a check to ensure the maximum number of headers is available before proceeding with the download process
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to support additional JAR files in the application
refactor the connection handling logic in AbstractHandshakeHandler . java to improve readability and streamline message processing to enhance code clarity and maintain
updated GranuleDescriptor , RasterManager , GTDataStoreGranuleCatalog , GranuleDescriptor , and GTDataStoreGranuleCatalog
added a check for already committed before sending error messages in HttpChannel . java to ensure that errors are only sent when the response is already committed
updated condition checks for ` hold ` and ` lastPoll ` in ` HttpSession . java ` to ensure proper handling of ` hold ` and `
updated fadeOutFakeTaskView behavior and added feature flags for gesture navigation tutorial in multiple classes to improve UI responsiveness and ensure proper
change log level from info to warn in prefabformat . deserialize ( ) and prefabserializer . deserialize ( )
replaced multiple direct creation of ScimGroup with a single addition method for external group sets to improve code readability and maintainability by consolid
updated thirtyDays calculation in FreezeBalanceActuator . java and added validation in TransferActuator . java to ensure proper handling of account
updated the method to use ` File . separator ` instead of ` String . separator ` to ensure compatibility with different operating systems in file path handling
ggb - 1188 fix keyboard button not show when enter ( ) be call
updated GpsMainActivity to use session description instead of an empty string and modified AnnotationViewFragment to use EventBus for event handling to improve
added PDF file handling in JsoupNonVisualRegressionTest . java to check the number of pages before asserting it to ensure that
rename androidbufferallocator from androidbufferallocator to androidnativebufferallocator
added checks to strip the " ! " prefix from flag names and flags in Main . java and Util . java to ensure correct handling of flag
added a comment to the executeQuery method in JDBCHistoryCache . java to clarify that the method does not require NOPMD
updated equality check for item use operation in BattlePassManager . java to improve readability and maintainability of the code
updated QueuePriorityTest to use a List for item count and added a toString method in PriorityElement to improve test accuracy and provide a clearer
refactor tests in AffinityApiUnitTest to streamline affinity group creation and deletion to improve code clarity and maintainability by reducing
added a null check for the main command and modified the argument check to include OPTIONS . HELP to ensure proper handling of command - line arguments
updated LightOutputStream initialization in PropertyTypes , ByteIterableBase , and LongBinding classes to specify the number of output streams to improve performance by redu
changed the visibility of the Scanned class from static to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and modified conditional checks in ` ClassWriter . java ` , and created a new class ` T8032
removed an assertion from the Person class to simplify the code by eliminating unnecessary validation
added null check for file extension in VirtualFile . java to prevent potential NullPointerException when checking file extensions
changed return statement from ' return ' to ' continue ' in ContactRightButtonMenu . java to ensure proper flow control in the code
[ hotfix ] fix checkstyle issue in simpleslot and slotsharinggroupassignment
modified the calculation of the screen index in InstallShortcutReceiver . java to simplify the loop logic for better readability and maintainability
refactor socket binding and closing logic in PlainSocketImpl . java to improve code clarity and ensure proper resource management
added functionality to manage and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve item management for bookmarks in the
updated log message to include ' in - view center point ' in the W3C Action commands to provide clearer context about the location of
added a new file ` bug4865918 . java ` that tests the scrollbar block increment functionality to ensure that the scrollbar block increment is
replaced ` VelocityEngine ` initialization with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by removing unnecessary
updated import statements in QuestCommand . java to use wildcard imports and added a new command for group triggers to streamline import statements and enhance
fix crash when select gnucash account file
added ` @ ToString ` annotation to ` PartitionChangeEvent ` , ` TbApplicationEvent ` , and ` TbApplicationEvent ` classes to improve cl
updated the configuration URI for the OpenHAB Cloud service to use a constant for the configuration URI to improve maintainability by centralizing configuration URI
replaced view . setViewportComponent ( scroll ) and view . setJScrollPane ( scroll ) with view . setJScrollPane ( scroll )
replaced ` KEYCODE _ DEL ` with ` KEYCODE _ FORWARD _ DEL ` in ` LwjglInput .
added a conditional check for indexMimeTypeParts before retrieving parts in MoreIndexingFilter . java to improve flexibility in handling media type parts based on
added a regex pattern for matching author comments in JSDoc . java to enhance comment formatting by including author information
rename ` DELTA _ TOTAL _ DATABASES ` and ` DELTA _ TOTAL _ TABLES ` constants to ` CREATE
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for improved schema management to enhance
added ` queryParams ` parameter to ` oauth2LoginLinks ` and implemented error handling in ` oauth2LoginLinks ` method to enhance functionality by
updated date format in TCKChronology from " Hijrah - umalqura " to " Islamic Umm al
added support for non - Firefox browser in WebAudioWrapper to ensure compatibility with non - Firefox environments
added a method ` appendInterceptor ` to the ` GrpcServerBuilder ` class and removed the ` private ` constructor in ` InterceptorConstants `
added a default charset option to the database schema in TestCompatibility . java and updated the CREATE TABLE statement in TestCompatibility . java to ensure compatibility
removed redundant calls to ` allocateOutgoing ( ) ` in ` StreamingAggTemplate . java ` and adjusted return statements in ` WriterRecordBatch .
replaced allocationTimeout with timeout in ExecutionGraph . java to improve clarity by using a more descriptive variable name
added a ` hasFrom ` boolean and related getter / setter methods to the ` Delete ` class , and modified the ` DeleteDeParser `
renamed methods and variables related to multi - status handling in SynchronizeFolderOperation . java to improve clarity and consistency in handling multi -
refactor test applicable checks into a separate method ` applicableListTests ` to improve code readability and maintainability by reducing duplication
updated regex pattern in LogAnalyser . java to allow additional whitespace characters to enhance the accuracy of log formatting for better readability
rename integrationtest to googlecloudit so it can be run in a separate environment
fixed - rsearch . value ( ) method do n ' t work if exclusive = true . # 2370
refactor CCLicenseStep to use generics for better type safety and clarity to enhance code readability and maintainability by reducing casting
added null check for getGlobalId ( ) before adding to guidIndex to avoid potential NullPointerException when getGlobalId ( ) is null
updated comparison logic in OptionalAssert to use objects ' s comparison strategy to improve accuracy of value comparison logic
added conditional logic to update LAST _ MARGIN _ BOTTOM and LAST _ MARGIN _ BOTTOM in NoNewLineParagraphCssApplier and
added a new file ` TestArrayCopyToFromObject . java ` that tests the ` arraycopy ` method to ensure that ` ArrayStoreException ` is
replaced ` Escaper . escapeAsBashString ( ) ` with ` Escaper . escapeAsPythonString ( ) `
do n ' t call isasync ( ) if the socket state be not close .
add ` ` visitallfiles ' ' parameter to craftinghelper . findfiles ( ) .
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to unstable test cases
added a null check before asserting the response400 assertion in TestInternalInputBuffer . java to ensure that the client correctly handles cases where the
modify the ` autoloadCall ` method to include a ` lowerName ` parameter and modify its logic in ` ClassEntity autoloadCall ` to improve
removed unused imports and updated server version comparison logic in CustomPlaybackOverlayFragment . java and PlaybackController . java to streamline code and improve
updated localhost handling in KDC and BasicKrb5Test classes to ensure correct resolution of localhost to improve reliability and correctness in principal
added a new boolean flag ` jsr250AttributeFound ` and modified return logic in ` Jsr250Voter . java ` , and
updated import statements in MP4Parser . java for better clarity and organization to improve code readability and maintainability by using more descriptive
added a new constant for HS2 proxy user and modified session parameter formatting to enhance security by including the user ' s username in the session
added snappy compression support to HdfsCompressionCodec and corresponding tests in HdfsProducerTest to enhance compression capabilities and ensure correctness through testing
added a delay of 1000 milliseconds in HttpClientTest . java to ensure proper synchronization during test execution
patch from bug # 49966 - fix for bug # 49966 - fix for bug # 49966
updated glyph width and height calculations in GlyphLayout . java and modified text in BitmapFontTest . java to improve text formatting and clarify
refactor Istio integration to use Commons . ISTIO _ VERSION and Commons . ISTIO _ VERSION constants to improve
replaced calls to ` ReportPlaybackStartAsync ` with ` reportPlaybackStart ` and ` reportPlaybackProgress ` in ` PlaybackController `
patch by jbellis ; review by brandonwilliams for cassandra - 113
putfromloadallbackupoperation , putfromloadalloperation , putfromloadalloperation and putfromloadalloperation do n ' t
corrected the bitwise operation from LENGTH _ BIT & ERROR _ BIT to LENGTH _ BIT in ResponseFlag . java to ensure correct bit manipulation for
add read policy if no read policy find
refactor CompositeFont initialization to use a SoftReference for concurrent access to improve performance by avoiding repeated instantiation of CompositeFont instances
set prefHeight to 0 instead of getHeight ( ) and adjust spacing accordingly to ensure proper height adjustment for nodes in the tree
dmnfeel : provide more detailed error message when dmn error occur
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public to allow external access to ` finishRunningRecentsAnimation `
added null checks for node ID and edge type in ElementFactoryImpl , ImportContainerImpl , and ImporterGDF classes to ensure robustness
drop unknown state response in FnApiControlClient and BeamFnStateGrpcClientCache to improve robustness by preventing null pointer exceptions
updated Bin initialization to use sessionFactory for creating Bin and added a new test for flowfile larger than the bin limit to ensure proper session management
refactor the way the closest CoreBuild is retrieved by using a loop to improve code readability and maintainability by using a more concise
added a check for the CONTENT _ LENGTH header in RestTemplateCopyHeaderFilter and implemented a test for it in TestRestTemplateCopyHeaderFilter
updated Java2TypeScriptTranslator to handle String literals and modified SyntaxTests to use eval instead of transpiled to improve code clarity and
updated FilterFactory , ChannelizerViewer , PolyphaseChannelManager , twoChannelOutputProcessor , and TwoChannelOutputProcessor to adjust filter dimensions and
hbase - 23278 canary should only run all region on a regionserver mode , not only in regionserver mode
[ hotfix ] remove unused node module from cassandra connector factory
added resetCursorPosition ( ) method call in KahaDBStore . java to ensure the order index reflects the correct cursor position after
added minimum size constraints to CallDialog and adjusted frame dimensions in OneToOneCallPanel to ensure that the frame size does not exceed the defined minimum
fix miss state information during world gen . close # 4893
refactored test setup and teardown methods in TestHTTPSamplersAgainstHttpMirrorServer . java to utilize JUnit framework for testing
added null checks and removal logic for KerberosPrincipalEntity in KerberosPrincipalDAO and removed them from KerberosPrincipalHostEntity to ensure proper
removed the boolean parameter from the getTableSnapshot method call to simplify the method signature for better readability
improve error handling in aprendpoint . poll ( )
updated the error message in AndroidGradleBuilder to provide clearer guidance on the configuration of the android . licenseKey to provide clearer
updated the file folder name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java ` and removed
[ zeppelin - 4891 ] fix kie - inf - classes in kie - plugin ( # 2891
added an assumption to check if the runtime version is 19 in CheckIndexTest . java to ensure compatibility with versions 19 and above
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method and updated related logic in ` RemoteTargetGluer ` to
refactor LeaderLatch class implementation to improve code readability and maintainability
added methods to initialize Zksnark parameters in SolidityNodeHttpApiService to ensure proper initialization of Zksnark parameters for
refactor transaction confidence handling in Transaction and TransactionConfidence classes to use ListenableFuture for thread safety to improve performance and responsiveness during
added a new method ` createMediaRecorder ` to ` CodenameOneImplementation ` , modified ` Location ` , ` MapComponent ` ,
set platformName to " ios " in JavaSEPort . java to ensure platformName defaults to " ios " for consistency
refactor PageEditClient class for improved readability to enhance maintainability and facilitate future development
added braces to conditional statements in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class for improved clarity to enhance maintainability and readability of the code
added error handling for outgoing frame processing in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing
replaced direct caller class creation with privileged access in ContextHandler . java to improve security by using a privileged action to enhance security by
added logic to update the parent of child categories in CategoryREST . java to ensure that all child categories are removed from the database when they are
added title text for contributions in ContributionManagerDialog to enhance user experience by providing clearer context for contributions
added a ` vwap ` field and corresponding getter and setter methods to the ` Ticker ` class to enhance the ` Ticker `
added ` mNoWidgetsView ` and ` mBottomInset ` to ` SearchAndRecommendationsScrollController ` and modified ` Widget
add a new api for render graph and tint node in worldrendererimpl .
added a method to set the primary color in NCFirebaseMessagingService to enhance the visual appearance by using the primary theme color
updated ShadowUsbManagerTest . java file to improve test coverage for USB manager functionality
updated calculations in AbstractDifferenceRecommenderEvaluator and added logging in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to improve accuracy of
added a call to update the selected configuration in the Rocket class to ensure the selected configuration updates correctly
replaced direct calculations with Math . max for width and height in AndroidGraphics . java to ensure that bounds are non - negative to prevent potential
replaced HashMap with LinkedHashMap in multiple classes to ensure predictable iteration order for better performance and readability
replaced the ` nativeClosureManager ` instance with a ` ClosurePool ` instance and updated the method for creating closures to improve closure management
( chore ) camel - route : migrate camel - test - junit5 to junit5
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java for testing WebSocket functionality to enhance testing capabilities for the
dspace : remove unused code from abstractimportmetadatasourceservice . getservicebyname
refactor authentication equality checks in AbstractCasWebflowEventResolver to use a new equals method to improve code readability and maintainability by
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
replaced calls to ` callNode . getType ( ) ` with a single variable ` callNodeType ` to improve code readability and maintainability
added a new annotation ` Insecure ` to the ` MessageBuffer ` class and modified the constructor in ` MessageBuffer ` to introduce an `
added new Hive configuration variables in HiveConf . java to enhance configuration options for Hive operations
initialize scopes and policies in ResourceSet . java and add null check for policies in DefaultResourceSetService . java to ensure that scopes and policies
made the ` decrefOnClose ` variable final and modified the constructor of ` MultiReader ` to include ` readerFinishedListeners ` as
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and
simonstewart : fix flaky test in selenide
replaced instances of ` $ Gson $ Types ` with ` ParameterizedType ` in ` getFirstTypeArgument ` method across multiple files to improve type safety
changed return types of keySet ( ) , keySet ( ) , and values ( ) methods from Set < Integer > to KeySet and Values (
added support for a duration parameter in the FlipTransition class to allow customization of the background color in the FlipTransition class
removed logging statement for non - enabled subsAreValidForStreaming in DLNAResource . java to streamline logging by eliminating unnecessary
update majorVersion and minorVersion from 8 to 9 in ForgeVersion . java to reflect the latest version of the Forge library
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages in ` StackLocator . java `
add support for java 16 and java 14 in the parser .
updated padding settings for background elements in ExpansionViewHelper . java to ensure consistent padding for background elements based on the number of replies
[ hotfix ] [ network ] do n ' t call onresponse ( ) on empty versionmap
added metadata management functionality to SeedUrl , SeedResource , and SeedUrl classes to enhance serialization and deserialization of seed metadata in the application
added a null check for the declaration before creating a new Pattern instance to avoid potential NullPointerExceptions when declaration is null
updated TestCoprocessorWhitelistMasterObserver . java file to improve test coverage for coprocessor functionality
ww - 4892 add package name to annotation action validator ( # 4892 )
updated ` containsAllOf ` and ` containsExactly ` methods to use ` Arrays . < Object > ` instead of ` asList ` to
added Stream and Spliterators methods to MapIterable , PrimitiveObjectMap , and MapIterableTestCase to enhance functionality to support stream operations and
clone the notifInfo object before returning it to ensure that the returned notifInfo is not modified
make sure command key be set in order to avoid concurrentmodificationexception
refactor AEADBlockCipher class for improved readability to enhance maintainability and facilitate future updates
added methods ` isVariableLocal ` and ` isVariableLocal ` to ` ILocalVariableAwareVariablesMap ` , ` WebVariablesMap `
added a null check for ` id ` in ` PackageResourceTable ` and changed the default value in ` RobolectricTestRunner `
added a condition to check if ` ulSize ` is zero and ` ulPos ` is zero in ` TrueTypeFont . java ` to
refactor SignPlugin constructor to accept a List of HttpMessageReader instead of a static list to improve flexibility in configuring message readers for
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added validation check for MavenDeployer instance in StandardMavenAuthenticationProvider . java to ensure that validation is applied only when the remote repository is
refactor AudioNode class for improved performance to enhance audio processing efficiency
added SSL support and improved exception handling in LinkyHandlerFactory and EnedisHttpApi classes to enhance security and ensure proper SSL context initialization
refactor HiveFunctionRegistry to use streams for string manipulation instead of arrays to improve code readability and maintainability by leveraging Java Streams
resolve http : / / issues . apache . org / activemq / browse / amq - 4892 - fix the jmx
updated the method ` getBuildTargetForAlias ` to use ` possiblyFlavoredAlias ` instead of ` alias ` and added logic to handle
camel - 18131 : camel - olingo2 - do n ' t try to process empty odata feed if there be no feed
added a map to retrieve the equivalent version of " 0.13 . 1 " and updated the return logic in MetaStoreSchemaInfo . java
server : do n ' t expunge the vm if the user do n ' t expunge the vm
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in future development
refactor ONDashClockExtension and AlarmReceiver to use a new method for title extraction to improve code clarity and maintainability by
updated ` GoogleAuthUserConfigTable ` and ` GoogleAuthUserConfigTableTest ` classes to use " nvarchar / varchar " instead of
replaced ` commit ( ) ` with ` apply ( ) ` in multiple Java files to simplify the code and improve performance by eliminating
added a new ` TestIdleListener ` class and modified the ` StandardSession ` instantiation to utilize it to enhance session management by allowing idle
updated the construction of ` testBigQueryTable ` to include the test ID to enhance readability of the test output by including the ID in
set the predicted icon background in HotseatPredictionController and reset the icon in BubbleTextView to improve the visual appearance and
mondrian : rename getflushafterquery to flushafterquery
[ native ] add test case for native query runner
added a check for the existence of active features in LIMEExplanation . java and updated test assertions in LIMEColumnarTest . java
added command - line argument handling to AppleSimulatorController and InstallCommand classes to enhance command execution flexibility for Apple targets
replaced calls to ` getArea ( ) . getCurrentLineStartInParargraph ( ) ` with ` GenericStyledArea `
added a check for the presence of the lifecycle state in ContainerBase and StandardContext classes to ensure that lifecycle state checks are only performed when the
added clipping to the background in QsbWidgetHostView to improve the visual appearance of the QSB background
added flag conversion logic and improved flag handling in SQLManager , BlockTypeListFlag , and PlotArea classes to enhance flag processing and improve
replaced specific GL _ DEPTH _ TEST imports with a wildcard import and modified the rendering logic to conditionally enable or disable depth functions based
rename ` libfficontextLinux ` to ` libfficontext _ linux ` in ` posixtruffletraffifeature `
refactor JdbcAggregationRepository to use a single propagationBehavior variable instead of a single value to improve code readability and maintainability by centralizing
fix layer validation for l1 and l2
added exception handling to readWrite and write methods in AbstractChecker . java to improve robustness by handling potential exceptions during read and write operations
changed the visibility of the colorStack array from static to instance variable to allow instance - specific access to the colorStack variable
updated method calls from ` false ` to ` true ` in ` getMappedStatement ` and ` hasStatement ` to ensure that the statement is
convert tradableIdentifier to lowercase in BTCEDepth retrieval to ensure consistent depth retrieval regardless of input case
updated channel state assertions from " 0.312716 " to " 0.322700 " in ChannelStateTests . java to reflect
remove versionedhashes from enginepayloadparameter and remove it from enginepayloadparameter
set trigger price to an empty string in MutableOfferView . java to ensure that the trigger price is reset when the text field changes
refactor code for better readability and maintainability to improve code clarity and ensure proper handling of student registration status
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2591 addendum fix checkstyle violation in hstore
# 1188 - enh : fix for # 1188 - beanstate . getchangedproperties ( ) and getchangedproperties (
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods to the ` FormAuthenticator ` class , and updated the session
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for
updated import statements in LWChoicePeer . java to use wildcard imports and added event handling for popup menu visibility to improve code readability and
added a null check for the ' insert ' variable before creating a new HashMap to ensure that the ' insert ' variable is properly initialized before use
replaced instances of ` asScalaIterable ( ) ` with ` collectionAsScalaIterable ( ) ` in multiple classes to
added null check for requests in MockServerEventLog and improved logging in HttpForwardObjectCallbackActionHandler and CallbackWebSocketServerHandler to enhance
added warning log for properties file loading failure in DefaultEnvironment . java to improve visibility into properties file loading failures
refactor SessionDataSet initialization to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added checks for multicast support in the loopback condition to ensure proper handling of network connections based on network capabilities
updated the constructor of sqlCommand to include an additional parameter to ensure proper initialization of the SQL command with a specified length
removed redundant calls to set latestConsumeTime and setLatestConsumeTimeForEnergy in multiple classes to streamline code by eliminating redundant
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and updated its usage to improve clarity and ensure
improve error message in ProtobufAnnotationSerializer to provide more detailed information about the token being found
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the presence of keys in a map to ensure the correctness
updated JdbcProxyGenerator to use a new DelegatorGenerator and added a new interface for handling JDBC4 temporary PreparedStatement and CallableStatement methods to improve
added a new method ` ensure ` to ` ServerWebSocketContainer ` and refactored ` DirectUpgradeTest ` to improve WebSocket container initialization and
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` and ` CxxFlags . java ` to
pdfbox - 4892 : use point2d instead of float , a suggest by valerybokov
replaced the initialization of MethodHook array with a static final EMPTY array in MethodHook . java and removed redundant checks in Method . java to
added a boolean field ` grantAccess ` to the ` MockAuthenticationManager ` constructor and modified the return logic to handle access denial more effectively
updated the ` afterJob ` method to accept a ` JobExecution ` parameter to enhance the functionality of the ` afterJob ` method by allowing the
added a check for file ' s canExecute ( ) method in SharedLibraryLoader . java to ensure that write operations are only performed when the
chore ( regen ) : update protoc to v3.15 . 3 ( # 438 )
change parameter name from ` ` result ' ' to ` ` event ' ' in saveservice
added constants for battery level , annotation , time , and profilename in the BundleConstants and updated CustomUrlManager to use these constants to
change the parameter type of the applyRule method from Hashtable to Map to improve flexibility in handling different search types
use absolutescreenlocatable instead of geo geo for move
updated JoglGraphics and ProjectiveTextureTest to use RGB565 format and changed texture filter settings to improve texture rendering quality and enhance
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to enhance functionality by allowing the file to be created
camel - 16462 : camel - properties - add support for property placeholder in route definition .
updated the condition from ` currentTime ` to ` currentTime ` in ` ActionScheduler . java ` and changed the expected expected value in ` TestAction
updated debug _ zip path to use a temporary directory and added null check for debug _ log before replacing it to ensure that debug _ log is
make notification overlay visible by default
replaced the direct assignment of gate with a method call to resetGate in BlockGenericPipe . java and added a resetGate method in Pipe
added locale management to the TestSupplementary class to ensure the default locale is reset before running tests
updated the randomness factor in the Team class from 0.8 f to 0.4 f in the Team constructor to allow for a longer
replaced Set with ArrayList for activeMatchedStates and added conditional logging for state removal to improve performance and ensure proper handling of states and hash code
updated the condition to check for null or empty annotation in SoftAsserts . java to ensure that the method correctly handles cases where the annotation is not
updated error messages in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve error reporting and provide clearer context
refactor CSV file reporting in CallTreePrinter . java to use a new utility method to improve code readability and maintainability by reducing
added null checks for note and note in DetailFragment . java and updated references in WidgetProvider . java to ensure proper handling of null values and
added a peakTasks variable and updated the loading logic in AssetManager . java to accurately calculate the loaded value based on task count to ensure
simonstewart : set default _ enable _ native _ events to true on window
added new names and metadata handling for nutch score and fetch interval in Injector . java to improve clarity and functionality of score and fetch
updated import statements from org . apache . commons . collections to org . apache . commons . collections4 in ScimExternalGroupsTypeResolving
added a method to check if the zkController is null and implemented the shareSchema functionality in the CoreContainer class to ensure proper handling of schema
updated size calculations to include ` sizeInBytes ( true ) ` parameter across multiple classes to ensure accurate representation of segment sizes for improved performance
replaced assertions in VersioningTest . java with assertNull for version1 _ 2 to improve test clarity and ensure version1 _ 2
updated SQL query to include type type information and added a test for non - null columns in DatabaseMetaDataTest and AbstractJdbc2DatabaseMetaDataTest
[ java ] do n ' t call appendnewleadershiptermevent when append new leadershiptermevent
removed the import of MediaType and updated the buildMediaType method in WebClientPlugin . java to streamline media type handling by eliminating unnecessary
replaced method names from ` fillUsingLengthPrefix ` to ` fillAndGetIndex ` across multiple classes to improve clarity and consistency in the
added a new boolean variable ` isCompactedBase ` and modified conditional checks in ` AcidUtils . java ` to improve code readability
fix nullpointerexception in ptableimpl . getcolumnfamily ( ) and getcolumnfamily ( )
added new classes PojoProducersCustomized , RestProducersCutomized , and RestProducers to provide a structured approach for custom
updated method calls from " cache " to " CACHE _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to improve clarity and
removed duplicate calls to AesGcmSivProtoSerialization . register ( ) in AesGcmSivKeyManager . java to
added support for the slab wood in the OreDictionary to enable the usage of the wooden slab in the dictionary
refactor multiple session - related classes for improved consistency and clarity to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` UndefinedSymbolsLinkerScript ` class to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 15836 - fix test failure on mysql due to constraint name uniqueness
updated the drawing logic in HelloWorld . java to correct the positioning of the sprite batch to ensure proper rendering of the sprite with the correct
updated loop logic in PlayerFunctions . java and modified string representation in PlotId . java to improve clarity and consistency in plot permission checks
added a deprecated static final version constant for Lucene 8.5 . 0 to indicate that this version is outdated and should not be used in
updated print statement in SSLSocketImpl . java to include the self - initiated thread name to improve clarity of the output message for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing for signed
refactor dependency type handling in CoNLLUOutputter and introduce a new enum DependenciesType in SemanticGraphCoreAnnotations to improve
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods to ` makeTargetDescription ` in ` ParseContext `
updated MyChild initialization method from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to
replaced the array size of ` configBlocks ` from ` Block . blocksList . length ` to ` 256 ` to optimize memory usage by
added version check for " git - Spigot " feature in BukkitMain . java to ensure compatibility with Git - Spigot
added support for escaping PostgreSQL question mark operators in SQL statements to ensure proper handling of special characters in SQL statements
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and corresponding tests in ` MutableBagFactoryImpl ` to
updated formatting and error handling for file names in BuildNavAndPDFBody . java to improve code readability and ensure proper handling of file names
modified the constructor of MqttBrokerConnection to include an additional parameter to enhance connection configuration flexibility
replace direct calls to getChangeLog ( ) with a call to DatabaseChangeLog . getRootChangeLog ( ) in ChangeSet . java to
updated method result handling in StaticMethodInterceptor and refactored response body assignment in RocketMQGlobalPluginHandler and PrometheusPluginBootService
added database dropping functionality in TestHiveMetaStorePartitionSpecs and logging in TestObjectStore to improve database management and facilitate
added a new parameter " order _ currency " to the BithumbAuthenticated and updated the BithumbAccountServiceRaw to include it to
deleted the SSEFluxWebConfig . java file to remove unused configuration properties to streamline the codebase
updated method calls to use ` getReturns ( ) . isVoid ( ) ` instead of ` getFullyQualifiedName ( ) . getFullyQualifiedName
renamed ` YAML _ READER ` to ` YAML ` and added a new method ` listYamls ` in ` YamlResource .
removed the ` public ` access modifier from several methods in the ` Marker ` class to restrict access to the methods for better encapsulation
refactor thread factory implementation to use lambda expressions and introduce a new method for await termination to improve code readability and maintainability by redu
added unit tests for adding a list in MongoTemplateTests and created a new PersonWithAList class to validate the functionality of adding a list
mow - 1353 sync applet panel size to account for the coordinate space
replaced direct toolbar visibility setting with a delayed execution using a Handler to improve UI responsiveness by adding a delay
refactor the initialization of the first page reader and introduce a new method ` isExistOverlappedPage ( ) ` to improve code organization
server : do n ' t save password if vm do n ' t have password
added new variables usingOutputStream , usingWriter , and isCharacterEncodingSet to the Response class to ensure proper handling of output stream and character encoding
added a warning check for side effects in GroupDialog . java to ensure proper handling of side effects during group assignment
refactor JSON and JSONObjectConvertor classes to improve code organization to enhance maintainability and readability of the codebase
updated icon width and height checks in FileUploadApiController . java to use maxWidthWithMargin instead of maxHeightWithMargin to ensure proper handling of
updated service property and JwtTokenCipherSigningPublicKeyEndpoint to use JcaPEMWriter and StringUtils instead of EncodingUtils to improve data handling and ensure
added MIME type checks for user and file contents in Basic . java to ensure correct MIME type handling across different operating systems
fix ( netty ) : add decoder and encoder to the channel pipeline
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and refactored the ` Class ` and ` MethodHandles
removed the ` doConnect ` method signature from ` ChannelProvider ` and ` ProxyChannelProvider ` to streamline the connection process by elimin
added functionality to start a field in TextReader and created a test for empty final columns in TestCsvHeader to ensure proper handling of empty final
added compass gravity and margins in NearbyMapFragment . java to improve layout flexibility for the nearby map
added unit tests for the ` Interpolation ` function in ` GeoPathTest . java ` to ensure correctness of the ` computeDistance `
updated methods in LeafFilterFactory and ParquetFilterPredicateConverter to throw HiveException instead of returning null to improve error handling and provide clearer
added a check to set the current audio track ' s language if it is blank to ensure that the current audio track ' s language is correctly
added a warning log when schemas in the old version exceeds the old version to inform users about compatibility issues
replaced manual array copying with a new ` addAll ` method across multiple array classes to improve code readability and maintainability by reducing duplication
reformatted code in DataSourceProxy . java for consistency to improve readability and maintainability of the code
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a Map < String , ClientRegistration > instead of a
added a method to reset the UI state in SchemaUpgradeHelper to ensure that the UI state is properly reset during schema upgrades
refactor junitreporter to handle pending and non - pending exceptions more effectively to improve error handling and ensure accurate reporting of failures
add playerselector class to allow custom player selection ( # 82386 )
added the Closeable interface to the Selector class to implement the Closeable interface for better resource management
refactor MaxConcurrentStreamsTest to utilize MultiplexConnectionPool for connection pooling to improve performance and resource management during concurrent stream operations
added stringType ( ) method to CoreOptions . java to enhance the functionality of string type handling in the application
updated HqlQueryRenderer to handle special characters and parameters more effectively to ensure correct parsing of query tokens based on the presence of characters and parameters
updated HTTP status checks to use constants instead of hardcoded values to improve code readability and maintainability by using named constants instead of magic numbers
pdfbox - 4892 : simplify code , a suggest by valerybokov
replaced JDBC URL configuration with data source class configuration in HikariCPCollectorTest . java to ensure compatibility with the latest Hikari
refactor ParquetFormatPlugin and ParquetGroupScan to improve file selection handling and cache management to enhance code clarity and maintainability by
changed the ` isSuccess ` variable from ` false ` to ` true ` and modified the compilation logic in ` Jsr199Javac .
added a baseModelListener to the DefaultSortedTableModel class and implemented its listener for table changes to enhance the model ' s responsiveness
updated the condition from ` number < 49152 ` to ` number < = 65535 ` in ` ServerConfig . java ` to accommodate
added support for document provider authority in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running Android KitKat and above
removed logging functionality from MainApp . java to streamline logging process and improve performance
added ThrowableAnalyzer for handling RequestRejectedException in FilterChainProxy to ensure proper handling of wrapped RequestRejectedException to improve robustness by ensuring only
updated the array copying logic in StringBuilder . java to use ' this . length ' instead of ' length ' to ensure correct positioning of the
pdfbox - 4071 : add check for empty filterlist in filter . decode ( )
add a new class Tbstopwatch to facilitate time - related operations in the application
updated initialization state in PListStore . java to ensure proper initialization of the PListStore instance
added @ Deprecated annotations to multiple Continuation classes to indicate that these classes are outdated and should no longer be used in future development
[ zeppelin - 4892 ] set the current thread ' s contextclassloader in remoteinterpreterserver
remove unnecessary call to getentity ( ) in forgehooks
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
updated the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to
# 1188 - add simplename ( ) and getelementdescriptor ( ) and getelementdescriptor ( ) . getname ( ) to
updated URLs from " wro / all . js " and " wro / all . css " to " static / all . js "
added a new test method ` showLatestTimeseriesTest ( ) ` to ` IoTDBMetadataFetchIT ` to verify the functionality of retrieving
corrected the spelling of " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency and accuracy in the configuration
modify exception handling in OCSPChecker to check for instance of CertPathValidatorException before throwing it to ensure proper exception propagation for invalid OCSP
benchmark : add ability to disable write output solution by default
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to validate the functionality of ` sliceSize _ reopen ` in the map database to ensure
added a shapeless recipe to the game registry in BuildCraftTransport . java to enhance gameplay mechanics by allowing users to
[ mahout - 1342 ] fix arrayindexoutofboundsexception when iterate non - zero vector
added support for ownerplot and shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to enhance entity
added getDebugLogger ( ) method to DIHWriter and SolrWriter classes to provide access to the debug logger for better debugging capabilities
updated imports and added methods for maximum file name length in IOHelper and MultiKahaDBPersistenceAdapter to improve code clarity and ensure
added a check for tag matching in UpToTagChangeSetFilter and integrated it into the Liquibase class to improve error handling and provide
updated generic types from ` < T > ` to ` < T2 > ` in multiple classes and replaced ` LinkedList ` with ` ArrayList `
refactor BrokerRoutingManager to improve code structure to enhance maintainability and readability of the code
updated volumePaint and upPaint properties in CandlestickRenderer . java to improve the visual appearance of the Candlest
refactor layout parameter handling in InsettableFrameLayout to use ' lp ' instead of ' flp ' to improve clarity and functionality
added support for the " duration " field in BuildTargetDurationListener and corresponding test cases to enhance functionality by allowing users to specify the duration of
replaced ` @ Profile ` annotation imports with ` assumeTrue ` method in multiple test files to streamline profile checks by using ` assumeTrue
added a null check for the user object before processing claims to avoid potential NullPointerException when user is null
camel - 4892 : camel - test - infra - camel - add support for replace from endpoint in camel - test - infra
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` for ` statements ` in ` CassandraConnection . java ` to improve performance
api : listpublicipaddresses api : add sourcenetworkid parameter to listpublicipaddresses api
added a test for ignoring battery optimization in ShadowPowerManagerTest and implemented isIgnoringBatteryOptimizations method in ShadowPowerManager to ensure
updated the version retrieval to use a dynamic build property instead of a hardcoded value to improve flexibility by allowing dynamic configuration of the Jetty
added unit tests for verifying invocation order in NumberOfInvocationsInOrderVerifier to ensure proper verification behavior for various scenarios in the verification process
refactor debug evaluation logic in TRegexExecNode . java to improve clarity and maintainability of the code
added a " - foreground " option to the startProfile method in NewProfileExtensionConnection . java to ensure the process starts with the correct profile
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve resource management
replaced ` Map < String , String > ` with ` String [ ] ` for ` parseFieldnames ` in ` MetadataIndexer . java
updated logging statement in CodeEditorView . java and added null checks in EditorTextActionWindow . java to improve logging clarity and ensure proper
updated log message formatting in ClassFileReader . java and modified warning message in JdepsTask . java to improve clarity of skipped entries and enhance
refactor Fetcher and FetcherMain to use LuceneStorage for document storage and document storage to improve code organization and facilitate
updated the populateBubble method to include an existing BubbleBarBubble parameter and added a null check for existingBubble to improve bubble
[ hotfix ] [ scheduler ] remove unnecessary warn log for schedule route policy
refactor buildRpcExt methods to accept a single Method object instead of an array to simplify the method signature and improve code readability
[ java ] use a specific delay generator for aeron . conductor . nak _ multicast .
replaced GsonBuilder with JsonObject for client details and added error handling for JSON serialization to improve code readability and maintainability while ensuring proper JSON
added a condition to check if the field amount is non - zero before setting average price in HuobiAdapters . java to avoid division by
replaced the rawExecutionReports method with a direct call to binanceUserDataStreamingService to simplify the code and improve readability by elimin
added a new method ` fail ( Exception e ) ` to ` LdapTimeoutTest ` and modified the conditional check in ` ReadServerTimeoutTest
improve error message when user dictionary / folder do n ' t exist
added password file or credential store alias retrieval in AmbariServerConfigurationHandler . java and updated tests in RootServiceComponentConfigurationResourceProviderTest
added a check to skip parsing segments in ParseSegment . java and implemented the isParsed method in SegmentChecker . java to improve robustness by
[ hotfix ] [ yarn ] add yarn . application - attempt - failures - validity - interval config option
added error handling for ClassNotFoundException in GeoserverInitStartupListener to improve robustness by logging warnings when the H2 driver is not included
hbase - 15836 snapshot - based inputformat should set readtype for snapshot - based inputformat
added fixedHeight and fixedWidth fields with their respective getter and setter methods to the LoginInstanceRequest class to enhance the login process by allowing configuration of
added corner radius parameter to several update methods in ActivityControlHelper , WindowTransformSwipeHandler , and LauncherLayoutListener classes to enhance corner
updated the COMMANDS _ TO _ REMOVE string to include additional " SHOW " and " INDEXES " filters to enhance the functionality by allowing
added a retry mechanism for connection creation in TxnHandler . java to improve reliability by allowing retries to work around BONECP bug
renamed ` txnEnsureReserve ` to ` txnCheckReserve ` and added a new method ` txnEnsureBackupReserve ` to
added a new private char array ` strings ` to the ` FirstOfStringsMatcher ` class to facilitate the storage and retrieval of
updated DELETE statements in ` CostBasedDecisionIT ` and ` DeleteCompiler ` to use " CLIENT SELECT " instead of " DELETE ROWS "
added retryable exception handling in BaseServiceException and corresponding tests in BaseServiceExceptionTest to improve error handling by allowing retries for insufficient data written exceptions
added support for a new parameter ` rapidInstallTypes ` in multiple classes and updated related methods to include it to enhance the functionality by allowing
updated the regex pattern in SeedTest . java to include an additional hyphen to ensure that the seed pattern matches the expected input format
refactor MultimapSubject to use a factory pattern for improved readability and readability to enhance code clarity and maintainability by central
simplified the return statement in Workspace . java to improve readability and maintainability of the code
added support for transmuxing in the Transformer and TransformerInternal classes to enhance audio processing flexibility by allowing transmuxing of trans
added a loop to localize strings and values in the Picker class to enhance localization functionality for better user experience
camel - 234 - camel - cxfrs : fix npe in camel - cxf and camel - cxfrs component
hhh - 14719 - fix bug in postgresql81dialect that do n ' t support lock / pessimisticlock
added assertions and modified query ID retrieval in TestJdbcDriver2 . java and modified import statements in HiveStatement . java to improve test reliability
[ beam - 10614 ] add ` ` usesunboundedpcollections ' ' category to pardofortest . java ( #
removed the ` ` gpsLoggerFolder ' ' attribute from the text output in ` ` GpsSimpleViewFragment . java ' ' to
[ java ] remove unused leadershiptermid parameter from joinlogasfollower ( ) .
refactor HttpExchange initialization to use ' this ' keyword to improve code readability and maintainability by avoiding repeated calls to getHttpExchange (
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
updated method names from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter . java ` to
added null check for ` tree ` in ` Recipe ` and modified marker handling in ` Markers ` and ` NamedStyles ` classes to
change xwpfrun . getfontsizeasfloat and xwpfdefaultrunstyle . getfontsizeasdouble return double instead of
changed the type of email from String to String [ ] in AddressBookDoCoMoResultParser . java to allow multiple emails to be processed
refactor exclusion handling in RawMavenResolver . java to improve clarity and efficiency to enhance code readability and maintainability by reducing
updated DSXAdapters , DSXPairInfo , and DSXBaseService to include quotedCurrency and baseCurrency properties to enhance error handling and
updated test classes for blocking , parsing , and validating functionality to improve test coverage and ensure reliability of I / O operations
[ drools - 90 ] fix incremental build failure when kmodule pom be invalid
adjusted the initialization of the copy object and added a check for the existence of the array index before calling defineOwnProperty to ensure that the copy
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
hostfielddesc : do not use methodhandles . publiclookup ( ) . unreflectGetter ( ) and methodhandles . unreflect
added a new method parameter " java . util . concurrent . CompletableFuture " to the DefaultNullnessAnnotations class to enhance the documentation of the CompletableFuture
updated the calculation of mFreezeCheckPoint in PlaybackController . java to adjust the time for the freezing check point to improve
added internal state setting for annotations in AbstractCommonPowerMockRunner and removed it from PowerMockRunner to streamline the execution process by elimin
updated the parameter from ` typeCode ` to ` realType ( ) ` in ` unmarshalIn ` method to ensure the correct type is used
refactor indentation handling in TabsAndIndentsVisitor . java to improve clarity and functionality to enhance code readability and maintainability by
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter . java to align with the latest testing framework standards
updated the HTML output format in HtmlProcessInformationsReport . java to include a class attribute for wrapped text to improve the readability of the
refactor JdbcStepExecutionDao , MapStepExecutionDao , SimpleJobRepository , and MockStepExecutionDao to improve execution context management and ensure
added a conditional check to hide new media folders only when the configuration is not hiding a new media folder to improve performance by avoiding unnecessary
added null checks for actor input in SplitPane . java to ensure proper handling of null widgets to prevent runtime exceptions
added handling for JavaType . Parameterized in RemoveUnusedImports . java to ensure correct retrieval of unused Java types from the package
updated debug logging to use ` this . getVersion ( ) ` and added a null check for ` modInfos ` in ` UniqueModListBuilder
updated logger initialization in TicketGrantingTicketImpl . java to use a class reference instead of a class reference to improve clarity and ensure proper
updated SQL string format for timeseries creation in PhysicalPlanTest . java to ensure compatibility with the latest timeseries specifications
added a method ` isValue ` in ` AttrData ` and modified conditions in ` Converter ` to handle value checks to improve value validation and error handling when no value is found for a given
added functionality to check for locale and character modifier keys in CPlatformResponder . java and introduced utility methods in LWCToolkit . java
[ java ] set aeron _ publication _ connection _ timeout to aeron _ publication _ connection _ timeout for c medium driver .
added a condition to check if the request URI starts with " / css " , " / images " , and " / favicon " to
added an assertion to verify the installation failure of the APK in TestUtil . java to ensure that the device is rooted before proceeding
no effective change - add @ ignoreplatform ( platform . oracle )
updated test assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to reflect new requirements for enabled secure transport protocols to ensure tests reflect the correct
updated Java library paths from e3506ff7c1 to fc76b5 in DiffRuleKeysScriptIntegrationTest . java to
added a new boolean variable ` mIsDismissHapticRunning ` and modified the conditional logic in ` TaskViewTouchController . java
include projectile source in explosion error message
removed unused imports and modified the getItemId method in SymbolInputAdapter . java to improve code clarity and maintainability by eliminating unnecessary
updated API endpoint parameters from ` limit _ bids ` to ` limit _ asks ` in ` Bitfinex ` and ` BitfinexPollingMark
added a check to replace single quotes in the result string to ensure proper handling of single quotes in the result
[ hotfix ] [ runtime ] add tostring ( ) for kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean class for improved session management to enhance performance and maintainability of session management
fix ( core ) : do n ' t use reflectutils . isgenericcall ( )
replace Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing a runtime exception instead of
added a method ` isStarted ( ) ` to check if a thread - local deadline is active and implemented timer registration in ` RawStoreProxy `
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages when a closed channel is encountered
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ hotfix ] [ runtime ] fix checkpointcoordinator reset hook not call in region recovery
add a mappedcontainercomponent to the prefab so it can be use with a collection of mapped container .
[ iotdb - 4892 ] fix npe in walnode . getoldestunpinnedmemtableinfo ( ) ( #
added a new test for retrying the same host on callback failure in HttpTest . java to ensure that the client correctly retries the same host
truffle - tutorial : fix typo in javadoc .
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL Server escape functionality to ensure proper handling of special characters in SQL queries
added nullability annotations to constructors and methods in CamelModule and JoobyBeanRepository to improve code robustness and prevent potential NullPointerExceptions
replaced synchronized block with a utility method for waiting in JavaFXSEPort . java to improve code readability and leverage utility for waiting
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
fix [ cropper ] : fix crash during load on the funny huawei phone
removed the appName parameter from the configure methods in InputRC and related classes to simplify the configuration process by eliminating unnecessary parameters
[ gr - 3566 ] add test for ignore and broken dependency
replaced calls to ` setHeadless ( true ) ` with ` addArguments ( " -- headless = = chrome " ) ` in
replaced direct assignment of value with value . intern ( ) to ensure value is immutable and avoid potential memory leaks
added " MOVE " status check to the status check in Connection . java to enhance functionality by allowing the application to receive a MOVE status
updated the formatting of US _ MONTH _ YEAR2 _ TIME and US _ MONTH _ DAY _ MICROS in FixedDateFormat . java
updated import statements from ` org . apache . curator . shaded . com ` to ` com . google . common . Lists ` to
[ hotfix ] [ network ] fix race condition in startspillingbuffer
updated permission checks in Visit . java to include untrusted visit flags to ensure only authorized users can visit untrusted visits
do n ' t send jabber message if there be no jabber service
updated the condition in BasicURLNormalizer to include additional character checks and added a new test forCurlyBraces in TestBasicURLNormalizer to
changed method visibility from protected to private in QuickstepTransitionManager . java to restrict access to these methods for better encapsulation
added a check to compare the clock rate when zero is zero in EncodingConfiguration . java to ensure that the correct lock rate is returned when the
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified return types in ` SeparatedProjectsGenerator ` and ` Project
removed unnecessary conditional check for native calendar ID in HostLocaleProviderAdapterImpl . java to streamline code for better readability and maintainability
added a new file ` MSwingUtilities . java ` that implements utility methods for handling exceptions and image dimensions to provide a structured way to
camel - 1776 : camel - mail - make it easy to send message to the mail server . thanks to daniel for
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic refresh of configuration properties
added unit test for onexception handle and throw new exception
added new files Main . java and ScriptRenderer . java to implement scripting functionality to facilitate the rendering of JavaScript templates in the
added a check for ` _ inputState = __ NONE ` in ` Request . java ` and implemented a new test for query after read to
modified BitmapFont , Group , FlickScrollPane , SelectBox , and SelectBox classes to ensure glyph dimensions are only calculated when they are within
replaced ` reportFailure ` and ` reportFailure ` calls with ` runCloseHooks ` in ` DeploymentManager . java ` and added a
updated the stackToString method to include a forceIgnore parameter to enhance flexibility in handling item damage in recipe mappings
replaced hardcoded sleep duration with a constant TIMEOUT _ AFTER _ INTERUPT in ConstantTimeBackoffTest . java to improve code readability
replaced ` StringUtils . isNotBlank ` with ` StringUtils . * ` and added a check for non - blank display to improve code readability and
remove dependency on urlstreamhandler ( submit by user dzelemba
added a new file ` FieldUtils . java ` that implements utility methods for reflection and field access to improve code maintainability and facilit
simplified the assertion in DeferredAttr . java and added a new class DoubleStaticImport . java with static imports to improve code readability
updated layout inflation from custom _ content to workspace _ screen and added default padding for widgets to improve the user interface ' s appearance and
update xabber account sync state when token be invalid
added a method to set a variable in the line reader using a command - line argument to enhance usability by allowing users to set a variable
fix catentity not fire animal tame event . close # 7343
added handling for ` ValueNull ` and improved error messages in ` WindowFrame . java ` to enhance error reporting for invalid range values and
added a test to verify the presence of the HELV font in the APpearance stream to ensure the correctness of font handling in the application
set the app ' s mode to the current mode to ensure the app displays the correct mode for better user experience
added support for specifying build arguments and file path in ImageFromDockerfile . java and created a new DockerfileBuildTest . java file to
added a null check for threadInfos [ threadId ] before creating new ThreadInfo instances to ensure threadInfos [ threadId ] is only added if it
updated the condition for sweepAngleOuter in PieChartRenderer . java to use a constant from Utils . FLOAT _ EPSILON instead of a
[ hotfix ] [ checkpointing ] add more log to singleinputgate and singlecheckpointbarrierhandler
added new schema constants in Schema . java to enhance the functionality of the Schema class
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes and updated related methods to enhance FuzzyQuery and FuzzyTerm
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
[ java ] add an option to set the ` ` immediateflush ' ' property on the enclosing appender .
added multiple AutoConfigureAfter annotations to the ZipkinAutoConfiguration class to enable auto - configuration of additional auto - configuration classes
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to
replaced the import of ` avro . shaded . com ` with ` com . google . common . base ` in multiple Java files to
refactor BciBlockMapping and GraphBuilderPhase to use new block methods for return and unwind block management to improve code clarity and
added getter and setter methods for legacyRenderer in Label . java to enable customizable rendering behavior for icons and masks
replaced the ` intToFourBytes ` method with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is not initialized
changed the return type of the thenComparing method from Comparable < U extends Comparable < ? super U > > to a generic Comparator < T
refactor DocIdSet class for improved clarity to enhance maintainability and readability of the code
updated the end time Utc parameter from null to currentKey in UserRuleAnomalyFunction . java to ensure the anomaly result reflects the
added error handling for parsing integer values in VisualScoreTagTest . java to ensure robustness by catching NumberFormatException during parsing
set the class loader for the mock enhancer in MockFactory . java to ensure the correct class loader is used for mocking scenarios
added a new ` OriginalFormat ` class to handle enum formatting in ` ConverterWithEnumFormat . java ` to facilitate conversion of
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM " in FileStorageUtils . java to improve
refactor JAWTRenderer class for improved rendering performance to enhance performance and maintainability of the rendering process
camel - 15836 - camel - aws2 - lambda : add autowire option to all the component - aws2 - lambda component
vm : replace mac address in user vm if the network have a valid mac address
removed the condition checking for " Authorization " in the ProxyServlet class to simplify the logic for handling authorization headers
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to improve execution flow by using ` execute `
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes ,
updated the randomness of randUsePoints to use a positive value instead of a hardcoded value to improve test reliability by allowing for more
replaced the method ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to improve clarity and consistency in method
updated ` formatForConsole ` methods to include ` Locale . US ` as a parameter to enhance locale - specific output formatting for better user experience
added support for named argument parsing in GroovyParserVisitor and GroovyPrinter to enhance the parser ' s functionality to handle specific line number and column number
adjusted bounds checking for bottom and right insets in Border . java to ensure proper adjustment of insets when they are within bounds
refactor GestureState initialization to use a static final instance instead of a new instance to improve code readability and maintainability by centralizing
replaced ` org . joda . time . DateTime ` with ` java . time . Instant ` and updated version formatting to use ` DateTimeFormatter
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
replaced ` IOUtils . closeQuietly ` with ` java . io . close ( ) ` in ` TorrentsStorage . java ` to improve
added synchronized keyword to the initTxnMgr method to ensure thread safety when accessing the HiveTxnManager
increased the timeout duration from 120 seconds to 480 seconds in ` AbstractDistribZkTestBase . java ` and ` Abstract
added a new file ` SearchResults . java ` to manage and retrieve search results from a given document to facilitate the retrieval of
do n ' t restart threadcpusampler if threadcpufeference be not null
added a null check for the ` primitivesTemp ` variable and initialized it if it is already initialized to avoid potential null pointer exceptions and ensure proper
added new versions " 8.10 . 0 - cfs " and " sorted . 8.10 . 0 - nocfs " to Test
updated feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified AppIcon class
added a new endpoint to retrieve tenant pools for current instances and implemented a method to retrieve instance pools from the configuration
added methods to check for early termination on document IDs in TopFieldCollector to improve efficiency by avoiding unnecessary checks when dealing with document IDs
added ` isToString ( ) ` method to ` InlineBytecodeGenerator ` and updated test cases in ` InlineByteBuddyMockMakerTest
added logging statements for compilation and preprocessing steps in CxxCompileStep and CxxPreprocessStep classes to improve visibility into compilation and pre
add removecharacter ( string ) method to remove character from a string
[ 3.0 ] fix metadata service export ( # 8039 )
added a new interface DataTransformer in the org . kie . api . runtime . process package to provide a standardized way to transform data
changed the type of ` values ` from ` Object [ ] ` to ` Number [ ] [ ] ` in the ` DistributionGraph ` class
simplified conditional checks in FormatStringChecker . java to enhance readability and maintainability of the code
added a null check for SolrCore in ElectionContext . java to ensure proper initialization of SolrCore
refactor ITestDbTxnManager class for improved readability to enhance maintainability and facilitate future development
refactor connection handling in DatabasePlatformFactory to use try - with - resources for better resource management to ensure proper resource management and automatic closure of
added testMapModel method to CodeFirstPojoClient and its implementation in CodeFirstPojo and CodeFirstPojoIntf classes to
pdfbox - 4892 : remove null check , a suggest by valerybokov
refactor item listener logic in ScaleDialog . java for improved clarity and functionality to enhance code readability and maintainability by reducing
renamed the method ` updatePlayerStepStatus ` to ` tickBelt ` and updated its logic to handle null values to improve clarity
pdfbox - 4071 : do n ' t throw an exception if there be no appearance stream create
replaced SortedSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to improve performance and maintain insertion order
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 and added an @ Override annotation in multiple classes to
updated the preload library from " libdc1394 - 22 " to " libusb - 1.0 " to ensure compatibility with the latest
added a conditional check for agentSupport before setting all constructors in MainMockTransformer and created new test classes for static methods with private constructors to ensure
pdfbox - 4071 : do n ' t add object to the object list , a suggest by valerybokov
pdfbox - 4071 : add support for set window title for awt . x11 . awt
updated depth calculation based on pixel size in XRSurfaceData . java to ensure correct depth is applied based on the color model ' s pixel
added error handling for reading response body in OkHttpDataSource to improve robustness by providing clearer error messages for unsuccessful responses
added a static method ` exit ` to ` TopLogging ` and modified the ` TopThreadGroup ` to use it to improve error handling by
updated the initialization of the ` start ` variable in ` NativeRegExp . java ` to ensure the correct starting index is used based on the regexp
[ planner - 468 ] ignore flaky optaplanner test ( # 468 )
corrected the variable name from ` lowIndex ` to ` highIndex ` in ` DefaultAllocator . java ` to improve code readability and
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to facilitate deletion of entries without feeds in the
changed the return type of the appendToLabel method from void to AtomicCounter to enable method chaining for better usability
[ java ] add ` ` noop ' ' idle strategy to the driver .
added status code checks for NOT _ MODIFIED in multiple classes to ensure headers are only written when the response is not modified
renamed ` constantValueInertSpliceInstrumentListener ` to ` constantValueInertToolEvalNodeFactory ` and updated related methods to
updated the paintTabArea method to use insets for tab area dimensions to ensure proper rendering of the tab area in the SynthTabbedPane
modified the ` getKrakenDepth ` and ` KrakenMarketDataServiceRaw ` methods to accept an ` Object ... ` parameter
added file separator and isAbsolute methods to FileEndpoint , GenericFile , and RemoteFile classes to improve file path handling and ensure consistent file path formatting
added a new method ` build ` to ` JavaProvenance ` and updated ` MavenProjectParser ` to include dependencies in the ` JavaPro
added trace logging for registered Hive functions and UDFs in HiveFunctionRegistry . java to improve traceability of Hive functions and UDFs in Hive
increased loop iterations from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for the cloud state updates
rename unserializablecolumnfamilyexception to unknowncolumnfamilyexception in hintedhandoffmanager
updated error handling in NativeErrors . java to check if the output file is writable before executing the write operation to provide clearer error messages when
added error handling for package retrieval in LauncherModel . java to improve robustness by logging errors when package information is not found
cloudstack - 4207 : do n ' t try to upgrade the database if it fail to upgrade
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test for non - skippable exceptions in Fault
replaced ` startsWith ( completed ) ` with ` regionMatches ( ) ` in ` LineReaderImpl . java ` to improve readability and
added import statements for SourcesFileResults and SourcesFileErrors , and modified data table handling to include global data tables to improve code clarity and
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar to ensure that all tasks are dismissed when
add dbupgraderemysystemvmtemplate interface to make it possible to upgrade system vm template
removed unnecessary null checks for the connection variable in LdapClient . java to simplify code and improve readability by eliminating unnecessary null checks
refactor index handling in SequenceAction to use a variable for clarity to improve readability and maintainability of the code
patch by jbellis ; review by gdusbabek for cassandra - 113
added a check to skip synthetic fields in ReflectUtils . java to ensure proper handling of synthetic fields during reflection operations
added a LoggerProvider class and integrated it into ApplicationController to facilitate logging functionality in the application
changed the type of ` builder ` and ` value ` from ` String ` to ` Object ` in ` ServerStatusCommand . java ` and
added deprecation warning for multiple glue classes in SpringFactory to inform users about the deprecation of the Spring context configuration
added a new method ` deepStart ` to the ` Startables ` class to provide a convenient way to convert a list of ` Startables
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and its implementation in ` ShapeImpl ` to clean up the
fix the laser table not be able to use itelasertargetblock instead of blockbuildcraft .
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the expiration period setting in MemoryLimitTest . java to ensure that the test behaves correctly when the expiration period is set to 2 *
removed null checks for handlerName and handlerName in RequestHandlers . java to simplify code and improve readability by eliminating unnecessary null checks
replaced the single hyphen with a single hyphen in the servlet name to ensure the logger name is consistently formatted for better readability
updated Python path handling in ProjectBuildFileParser to exclude the " PYTHONPATH " environment variable from the environment builder to improve clarity and
updated audio frame size calculations and error handling in DirectAudioDevice and Toolkit classes to improve robustness by ensuring valid frame sizes and preventing
added null check for enums in ElasticSearchStringLookupService to handle potential null values gracefully to improve robustness by avoiding potential NullPointerExceptions
updated the error message format in CommitLogReader . java to include additional context to improve clarity of error messages for better debugging
added policy assignment from containerScope to WebSocketSession to ensure proper policy management for WebSocket connections
simplified static field initialization logic in Java2TypeScriptTranslator . java to enhance readability and maintainability of the code
added a webroot parameter to the createContext method in UserService . java to allow dynamic configuration of the web root for improved flexibility
( chore ) camel - spring - dsl : migrate test to junit 5 ( # 4449 )
[ netbeans - 4892 ] fix profilingpointaction to use editorregistry instead of registry
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
simplified import statements in VircurexTradeService . java and added a placeholder method for placing stop orders to streamline
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView . java to avoid potential NullPointerExceptions when mOriginalForeground or mOriginal
updated conditional checks for ` decExp ` in ` FloatingDecimal . java ` and added a new ` ToString ` class to ensure correct validation
updated propertyType check in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper type checking and validate property
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to simplify the retrieval of recent updates by elimin
added a check to ensure the ORIGIN header is set only if it is not already present in the URI to ensure that the origin is set
refactor task visibility and animation logic in RecentsView , TaskView , and TaskUtils classes to improve animation responsiveness and maintain
updated error messages in ORCRecordReader and refactored the extractSingleValue method to include the field parameter to improve error reporting and ensure correct
updated video sample URLs in DemoUtil . java to use devstreaming - cdning - cdn . apple . com to ensure compatibility
removed the READ _ ONLY _ METHOD constant from multiple array declarations in PersistenceProvider . java to simplify the code and improve readability by elimin
updated log initialization to include " org . apache . hadoop . ipc . ExecRPCInvoker " and " org . apache . hadoop . ip
added diagnostic logging and a new test case for union and fixed fields in TestSpecificCompiler . java and Position . java to enhance error handling and
refactor WebSocket session handling in WebSocketEndpoint and add a new test for session closure in WebSocketIT to improve session management and ensure proper cleanup of
updated delay values and method names in multiple services for consistency and clarity to improve code readability and maintainability by using a more descriptive
replaced occurrences of OpenSymphony Group with Apache Struts in XmlConfigurationProvider . java and LocationAttributes . java to ensure compatibility with the
modified the stream stop logic to conditionally stop video tracks based on the ` stream . stop ( ) ` method to ensure proper handling of video
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse . java `
updated import statements in GMLExamples . java for consistency and clarity to improve code maintainability and align with the latest geotools standard
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` g ` method call to improve clarity and
added a method to retrieve the identifier generator and modified the AbstractEntityTuplizer to accept an identifier and handle potential null values to improve
rename ` ` findfulltext ' ' to ` ` downloadfulltext ' '
replaced ` registerURIDefault ` method with ` registerURI ` in ` URIRegisterExecutorSubscriber ` and removed it from ` Sh
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a check for non - blank OSDb hash before calling getInfoFromOSDbHash and replaced List with ArrayList in OpenSubtitle . java
added token transfer logic in mmm RuntimeImpl . java and implemented transferToken method in MUtil . java to facilitate token transfer for
camel - 16462 : camel - ftp - add support for stepwise file path in ftp operation
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 - use the
added validation for empty join results in MapJoinOperator and introduced BloomFilter in HybridHashTableContainer to ensure proper handling of join results
updated the constructor of HTTPSPDYAsyncEndPoint to include an AsyncEndPoint parameter and added getter methods to enhance encapsulation and provide access to
added ` intent . putExtra ( " id " ) ` to ` TimeLineCursorAdapter ` , ` TimelineArrayAdapter ` , and
added handling for proxy authentication in HttpURLConnection to ensure proper disconnecting of web responses based on user authentication status
updated the ` _ numChildren ` variable to use ` AtomicInteger ` and modified the return statement in ` TraceContext . java ` to improve thread
updated the definition and usage of JWT and RESPONSE constants across multiple classes to ensure consistency and correct usage of these constants in the codebase
updated the test annotation to disable the test in ValueTypeTests . java to disable the test since it is not ready for execution
resolve split - packages : move everything from kie - api under org . kie . api . kie . api . kieresources
updated predicate types from " IN " to " NOT _ IN " across multiple predicate classes to improve clarity and consistency in predicate types
updated exception handling in FileActivity , Preferences , ReceiveExternalFilesActivity , and ReceiveExternalFilesActivity to catch a broader range of exceptions and
added null check for witnessService before validating permissions to avoid potential NullPointerException when witnessService is null
updated the way the taggedCol string is constructed in JoinDesc . java to improve clarity and maintainability of the code
added a check to ensure that the item ' s Javadoc is not present before setting the JavaDoc to avoid unnecessary setting of the item ' s
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add a new class ` RedefineInterface
removed swipe activation check and replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) in Tabs . java to streamline
[ hotfix ] [ kafka ] remove unsupported metricgroup from serializationschemaadapter
updated the calculation of the y position in the Polygon class to correctly account for the old x value to ensure proper positioning of the polygon '
updated CacheConfigTest to use a Configuration type for cache creation to ensure type safety and avoid potential ClassCastExceptions
added a null and length check for stringConstant in InheritanceUnsafeGetResource . java and created a new class Bug2974855 .
refactor ShadowCookieManager class for improved cookie handling to enhance performance and maintainability of cookie management
added storage - based authorization checks for external tables in HiveConf . java and updated related tests in TestMetastoreAuthorizationProvider . java to
added a semicolon to the conditional statement in Stage . java and modified the drawing logic in ProgressBar . java to improve code readability and correct the
llvmlanguage : use native byte order for platform capability .
updated the property name from " namedpipesocketprovider . timeout " to " windowsprovider . windowsprovider . timeout " to align the property
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and adjusted the URL loading logic to enhance flexibility by allowing
corrected a typo in the exception message from " paramter " to " Parameter " in CallableStatementHandler . java to improve clarity
[ scb - 2636 ] fix auditeventmvcendpoint . invokefilter without date after parameter
rename ExponentialTimer classes to PreciseThroughputTimer and update related references to improve clarity and consistency in naming conventions
removed and deleted softBody instances from the softBody object in SoftBodyTest . java to ensure proper resource management and prevent memory leaks
changed interfaces from package - private to public in multiple files to allow access to these interfaces from other packages
updated logging statements in ZeppelinhubClient , ZeppelinWebsocket , and ZeppelinHubWebsocket to
add jingle test for no redundant namespace
fix npe in buildcraftenergy and add a null check for redplasma .
added support for x - http2 header in bareresponseimpl ( # 4891 )
refactor conditional statements in Remove . java for consistency to improve code readability and maintainability
updated delimiter parameters and formatting in SimpleReport . java to improve clarity and consistency in output formatting
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to improve clarity and consistency
refactor contract validation logic in Runtime . java to improve error handling and provide clearer error messages for invalid contract types
ggb - 2852 : do n ' t create input3d when there be no applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
removed ParserException from the parsePayload method signature in ScriptTagPayloadReader . java to simplify the method signature and eliminate unnecessary exception handling
changed the method name from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName in JpaRepositoryConfigExtension . java to clarify that the method
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple rule classes to enhance
replaced instances of ' this ' with ' this ' for setting attributes in IOSGLES20 class to improve code readability and maintainability
deleted the UploadPathActivity class and removed its implementation from ComponentsModule . java to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to handle DOCS _ ONLY index options to ensure correct frequency calculation based on index options
test : add implicit constructor to parentexiter and add test for implicit constructor
added the ` Database ` parameter to multiple ` populateValidateNullableIfNeeded ` , ` populateValidatePrimaryKeyIfNeeded ` , and ` populateValidateUniqueIfNeeded
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
removed the ` indexOptions ` variable from ` DefaultIndexingChain . java ` and updated the iterator assignment in ` PointInSetQuery . java
removed the substring operation from rawName in SchematicHandler . java to simplify the mapping process for better readability and maintainability
added support for emptylist , emptynavigableset , and singletonset in AbstractCollectionAssert and CollectionAssert _ isUnmodifiable _ Test to
changed the access modifier of the Option enum from static to non - static to allow instance - level access to the Option enum
updated the ` Compose . java ` and ` ComposeActivity . java ` to use ` AlertDialog ` and ` DialogInterface ` to
replaced the method ` toggleKeepInSync ( ) ` with a call to ` getFileOperationsHelper ( ) ` in ` FileDetailFragment
replaced DatatypeConverter with Java ' s built - in Base64 decoding in ImageUtil . java and added unit tests in ImageUtilTest .
added new files ` ControllerCounter . java ` and ` DBCallback . java ` for managing controller and MongoDB operations to provide a structured way to
added ' final ' keyword to the parameter of the deleteTicket method in EhCacheTicketRegistry . java to enforce immutability of the
added a new file FlywayMigrationRunner . java to demonstrate Flyway migration with XML files to facilitate
replaced ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap . java ` and added a new class ` NotEmpty
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
added @ Nullable annotation to the modify method in CompressionCodec and ZlibCodec classes , and added a warning log for missing ORC compression modifiers
added null check for mainValue and refactored jar creation logic in LauncherHelper , Arrrghs , TestHelper , and TestHelper
updated test class names from " Test " to " Test " across multiple test files to improve clarity and consistency in naming conventions
rename methoddata : : _ jvmci _ ir _ size to methoddata : : _ jvmci _ ir _ size in hotspotvm
refactor CellCopyPolicy to remove the Cloneable interface and update the createBuilder method to accept an instance of CellCopyPolicy to simplify the
added a method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and updated its usage in ` Launcher ` to
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated the handling of layout dimensions for landscape orientation in IconRecentsView . java to improve layout responsiveness for landscape and por
deleted the AddAdapter . java file to remove unused adapter classes to streamline the codebase
do n ' t call get ( x ) . get ( x ) . get ( x ) . get ( x ) . get ( x
refactor the handling of parentColNames and bucketColNames in OpTraitsRulesProcFactory . java to improve code readability and maintainability
refactor LogWatcher handling to use a looper method for message registration to improve clarity and reliability of message registration checks during the watcher
added a print statement for " < any > " in Java2TypeScriptTranslator . java to improve output formatting for better readability
updated the SDK version number from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the latest release
added a check to set the value of SPRING _ AOP _ PROXY _ TARGET _ CLASS in the environment to ensure that the proxy
removed the singletonLock variable and updated its usage in TypeCachingBytecodeGenerator . java to streamline the locking mechanism by eliminating unnecessary
updated method names and added new test cases for responseClassCallback , forwardClassCallback , and forwardClassCallback to improve clarity and organization of
refactor writeFile methods to include an additional parameter for appending output to enhance flexibility in writing files by allowing optional appending options
updated MavenExecutionContextView to check for non - null settings and modified MavenRepositoryMirror logic in MavenExecutionContextView and MavenRepositoryMirrorTest
added a ` name ` field to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer
updated the redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController and added a new test for operation clients with the same redirect URI to improve
refactor annotation handling to use a unified ` AnnotationParser . toArray ` method across multiple classes to improve code readability and maintainability by central
updated method calls from ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` to ` getBadgedIconForUser ` and
updated the default line separator in GlobalConfiguration . java to specify the default line separator to improve clarity of the output format for better readability
fix : add test to check if the device be a derived class .
[ thymeleaf - 489 ] sanitize the input in the model to ensure that the input be in the correct format
chore : update java and python dependency ( # 174 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added functionality to retrieve file contents from the
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
updated container type assignment in AllAppsRecyclerView and refactored logDeepShortcutsOpen method in UserEventDispatcher to improve clarity and
hbase - 20615 deprecate config key in bytebufferallocator and add deprecation warning
improve native native test for user - specific query
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types and updated references in the ` Parameter ` class to improve
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future development
[ web ] fix label height calculation for latex text
hbase - 20614 add initialsize to increasetoupperboundregionsplitpolicy . maxsplitsize ( )
removed redundant model reset and start loader functionality in LauncherClings . java to streamline the loading process by eliminating unnecessary state management
refactored the initialization of keys , updates , and timestamps in ManagedSelector . java to improve code clarity and ensure consistent date formatting for
added support for exclusion of Spring datasource in SpringDataSourceBeanPostProcessor to enhance flexibility in managing excluded datasource configurations
added undo info functionality to TableValuesView and removed unnecessary null check for the cb parameter in TableValuesPanel to improve user experience by ensuring undo
camel - 18131 - camel - aws : allow access to kinesis client from other aws sdk v2 client
refactor channel handling logic in VelbusSensorHandler to use a for - each loop to improve flexibility in triggering channel events based on
added comments to disable tests due to unfavorable benchmarks and modified delayable logic in BoundedLocalCache to improve code clarity and
added a test for illegal database names in IoTDBSessionSimpleIT and implemented a validation check in PartialPath to ensure that illegal database names are
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before processing
renamed ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx `
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 6022 )
api : fix typo in the constant name ` ` xenservernetworklabel ' '
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 6
removed the metricNames field and its getter method from SolrCore . java to simplify the code by eliminating unnecessary fields
replaced ` URI ` with ` Path ` for ` workingDirectory ` and ` absolutePath ` in ` MavenManifestFactory . java ` to improve
replaced direct string comparison with a static final boolean variable to improve code readability and maintainability by reducing duplication
refactor JdbcAggregationRepository class to improve code readability to enhance maintainability and facilitate future updates
clear the slotList before adding it to the slotList to ensure that the slotList is properly added to the slotList
set m _ predCount to - 1 in PredicatedNodeTest . java to reset the value of m _ predCount to - 1
added imports and overridden the mergeProperties method in ConfigurationSpringInitializer . java to handle configuration properties to improve configuration management by ensuring all keys are
refactor setupLogging method to use a conditional check for the logger type instead of a switch statement to improve code readability and maintainability by
replaced HashMap with LinkedHashMap in multiple Java files to improve insertion order and maintain insertion order in collections
added a check to retrieve the superclass of the JDBC handler map if it is null to ensure proper retrieval of the class hierarchy when the type is
added debug logging statements to HibernateItemWriter , JPAItemWriter , FlatFileItemWriter , and JmsItemWriter to enhance visibility into
updated the parsing of the language range by removing the ' ; ' character from the wellformed string to improve accuracy of language range parsing by removing
updated the handler handling in Http2ServerResponseImpl and VertxHttp2Handler to use the handlerContext to ensure proper execution of the close
pdfbox - 4071 : improve performance of xssf evaluationworkbook . gettable ( )
updated schema text detail type checks and simplified symbol assignment logic in BaseSchemaTextFormatter . java to improve clarity and maintainability of schema text
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure uniqueness of elements in the set
updated the logic for cloned table scan operators in SkewJoinOptimizer . java to ensure the operator tree is properly cloned before proceeding to avoid
added a null check for the client ID before returning it in DynamicRegistrationClientConfigurationService . java and updated JsonFileRegisteredClientService . java
clear achievementlist . field _ 187981 _ e in statlist . clear ( ) . close # 47981
initialize userName , productName , driverVersion , and connectionUrl fields in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are
rename " link _ share _ read _ only " to " link _ share _ view _ only " in QuickSharingPermissionsBottomSheetDialog and
added support for reading long buffers in ByteBuffersDataInput and ByteBuffersIndexInput classes to improve performance and memory usage during long data reading
refactor UnixFileAttributes to use a new method for creating FileTime objects to improve clarity and maintainability of time conversion logic
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` to test garbage collection of humongous
added a condition to hide the search bar based on user preferences to improve user experience by controlling search visibility based on user preferences
updated the method call from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java `
added a null check for ' cur ' and ' next ' in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class to allow users to reload the selected page in the menu to enhance user experience by allowing users to
changed log level from info to warn for entries in SQLManager . java to reduce log verbosity for non - existent entries
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to throw an AmbariException when the configuration type does not
use serviceloader to load extension in geoserverextensions instead of use factoryregistry
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and avoid potential memory leaks
added a method to stop the statement executor in JdbcConnector and updated logging in HiveViewImpl to ensure proper resource cleanup and improve logging for instance settings updates
updated feature settings in DocumentFactory and XMLSAXHandler classes to ensure compliance with XML features and improve type safety
replaced ` JdbCommand . cont ` with ` jdb . contToExit ` and added an import for ` OutputAnalyzer ` to
added a method to retrieve the type of a URI in ShadowContentResolver and a corresponding test in ContentResolverTest to ensure proper handling of null
updated variable name from ' runnable ' to ' entry ' in ExpressionThreadPoolManager . java to improve code readability and maintain consistency in variable naming
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure compatibility with the
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable . addCaptureListener ` to improve clarity and consistency in listener
updated the default batch size from 10 to 3 to accommodate dynamic resource allocation based on available processors
[ hotfix ] [ coordination ] log if taskexecutor # establishresourcemanagerconnection fails
refactor ClassFile initialization and return a new LambdaExpressionFallback if classFile is null to improve error handling and provide a fallback mechanism when classFile is null
updated IllegalArgumentException message format in ProgressBar . java to include min and max parameters to improve clarity of error messages for better debugging
updated onMessage method signatures to include ' owner ' and ' telegram ' parameters across multiple classes to enhance message handling by including the owner and t
added new interfaces Cursor , Database , and Row in the com . codename1 . db package to provide a structured way to manage database operations
refactor assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
# 1188 - enh : add setbeanid ( ) method to ebeanserver and thirdeye - server to set
updated the transformation method to use the method ` getAddToSiteDescriptorXsl ( ) ` instead of a hardcoded string to improve code
replaced direct instantiation of ` OrRequestMatcher ` with a list of matchers to enhance flexibility by allowing multiple matchers to be processed
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for ContactResource instances
move request and response from processor to abstractprocessor so it can be use by other processor
updated logging messages in FileManager . java for improved clarity and error handling to enhance readability and provide more informative logging for saving
added a call to ` mockControl . reset ( ) ` in ` TestJdbcDataSource ` and implemented a teardown method in ` TestIndexSearch
added import for LambdasWithInterfaces and updated formatting in SyntaxTests . java to improve code readability and maintain consistency in formatting
refactor ConnectionModel and ModeledConnection classes to improve code organization and readability
tika - 1343 -- use mediatyperegistry instead of temporaryresources to simplify parserdecorator
make fml security manager more flexible
simplified variable declarations in AccountUtils , IndexedForest , and CustomPopup classes to improve readability and maintainability of the code
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a new test method ` testJsxComment ` in ` JsLexerTest . java ` and modified parsing logic in ` Parser . java
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for testing purposes
added error handling for missing Buck configuration in BuildEndToEndTest and CxxEndToEndTest classes to improve test clarity and
added physical memory handling and resource limit validation in TestStringBufferAndBuilderGrowth . java to ensure the test only runs if the machine has
replaced instances of ` ConversionService . SHARED ` with ` conversionService ` in ` MapToLocalDateConverter ` to streamline conversion
added a success flag to HiveMetaStoreClient . java to track the success of the operation
updated condition checks for include values in ResourceReferenceInfo . java and improved string conversion in Dstu2BundleFactoryTest . java to
updated conditions in TimeLineCursorAdapter and TweetActivity to include support for " amp . twimg . com / v / v / "
mark the AreaReference class as deprecated to indicate that the class is outdated and should not be used in new code
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the code
updated assertions and reference handling in MemberName . java to improve clarity of assertion messages and handle abstract method references
changed the default value of ` __ submitKeyUpdates ` from ` false ` to ` true ` and added synchronization around the runChange method to
added an else clause to the mouse event check in EditNodeTextField . java to ensure proper handling of mouse events
camel - 16462 : camel - spring - dsl - add support for static method in bean expression .
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the benchmarking framework
added a final modifier to the exception block in AgentRunnerTest . java to improve code readability and maintainability
updated descriptions for various Maven - related classes to provide clearer guidance for users regarding Maven project property changes and properties
refactor the addition of activeGroup ' s faces to use a variable for better readability to improve code readability and maintainability by redu
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future development
rename variable ` reentrantLock ` to ` lock ` across multiple files to improve clarity and consistency in variable naming
added a new parameter ` mavenPackaging ` to the ` getBomReference ` method in ` PrintMavenAsCycloneDxBom
replace back ( ) method call with back ( evt . getComponent ( ) ) in UIBuilder . java to ensure the back action reflects the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 . addend
changed parameter types from @ Nullable to @ Nullable in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to allow for more flexible
replaced ` NutchConf ` with ` getConf ( ) ` in ` Fetcher . java ` and ` Generator . java ` to
replaced OMR . gui . removeBoardsPane ( ) with tab . deselected ( ) in SheetAssembly . java and added
added a method to retrieve the session ID to provide access to the session ID for external use
added null checks for time interval before setting it in ImportContainerImpl . java to avoid potential NullPointerExceptions when setting time intervals
changed the command line argument from " - logLevel INFO - serverPort " to " - serverPort " in MockServerContainer . java to ensure
updated error logging to include the exception message in the error message to improve error reporting by providing more context about resource loading failures
replace robotshonoringpolicy with crawlingmetadata in dispositionprocessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
[ ci ] fix test failure on window
added alternativePath ( ) method to ExpectNewDemo . java to provide an alternative path input stream to provide an alternative way to access the alternative
log4j2 - 1343 : fix logentryparsertest to properly initialize the first filter
added a protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by allowing access control for the buffer alignment process
added dispose method for mesh , batch , and texture in WaterRipples . java to ensure proper resource management and prevent memory leaks
added a configuration option to disable certain optimizations and operations on external tables in HiveConf . java and updated DynamicPartitionPruningOptimization .
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
removed the FLAG _ SHOW _ WALLPAPER flag and adjusted the wallpaper offsets in Workspace . java to ensure the wallpaper is
modified the return value in SybaseASADatabase and modified SQL query logic in SequenceSnapshotGenerator and CreateSequenceGenerator to handle additional database types
nifi - 1566 : fix npe in putsql when autocommit mode be set to false
added directory creation checks in SnapPuller . java and assertions in TestReplicationHandler . java to ensure that the parent directory exists and validate
updated the target identifier from " id : launcher " to " launcher : launcher " in AppEventProducer . java to clarify the purpose
refactor frame method to accept an additional output ByteBuf parameter in multiple classes to improve code clarity and maintainability by consolidating frame processing logic
refactor constructor parameters in OAuth2LoginConfigurer , OAuth2LoginConfigurer , OAuth2LoginConfigurer , and OAuth2AuthorizationRequest
updated error messages in GenericUDFStringToMap . java for improved clarity and usability to enhance user understanding of text parsing options
replaced the use of ` INSTANT _ STAMPLE ` with ` ChronoUnit ` in ` PlainFormatter ` and removed the ` formatInstance
updated timeout duration from 1000ms to 3000ms and refactored the close ( ) method in AgentRunner . java to improve responsiveness
replaced reflection - based access with direct calls to ClassHandles . Lookup in ClassLoadingStrategyHelper . java to simplify code and improve readability
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
updated debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify that the event file
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that are not ready for execution
updated the exception message in GridLayout . java to clarify that rows and columns must be greater than zero to improve error handling by providing
[ wagon ] make sure we do n ' t crash if we do n ' t have a value
added sorting functionality for BoundSheetRecord instances in XLS2CSVmra . java and created corresponding test cases in BoundSheetRecord . java to
refactor calculations for ` avgImpulse ` and ` endThrust ` in ` ThrustCurveMotor . java ` to
updated InputSystemJme instantiation to accept inputManager as a parameter to ensure proper initialization of InputSystemJme instances
refactor hash code field offset handling in UniverseBuilder . java to improve code clarity and ensure offset is non - negative to enhance code
remove block . getmesh ( ) , deprecate in favor of tessellator . getmesh ( )
corrected the variable name from ` keytabPath ` to ` localKeytabPath ` in ` YarnTaskManagerRunner . java `
added EMPTY _ WORD _ OPTIONS option to LineReader and modified matchers in LineReaderImpl to handle cases where EMPTY _ WORD _ OPTIONS is set
updated pushViewReplicaUpdates method to include writeCommitLog condition to ensure that commit logs are only processed when not in clReplay mode
added preference handling for auto - opening web button in CaptureActivity and updated related classes to improve user experience by allowing customizable button press behavior
added a new test method ` testBatching ` to ` JoinedTableTest ` for batching to ensure that batching functionality works correctly
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamps during item persistence
replaced the deprecated ` format ` option with ` plugin ` in CucumberOptions and related classes to encourage the use of the
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary operations
simplified the back key event handling logic in ExtendedEditText . java to improve readability and maintainability of the code
modified the calculation of newCapacity in AbstractStringBuilder and added a new Capacity class with a test method to verify the behavior of StringBuffer ' s ensureCapacity
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to streamline
added support for handling endnote relationships in XWPFDocument and related classes to enhance functionality to support endnote relationships in XML documents
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent and updated its usage in CasEventsReportEndpointTests to include clientInfo as a parameter to
added a test method for verifying GDALVersionInfo in BridjOGRDataStoreTest . java to verify the functionality of GDALVersionInfo
added a new file ` Lifecycle . java ` that implements network error handling in the system to provide a structured way to manage network errors in the
added logging and error handling for 404 URLs in DeviantartRipper . java to improve debugging capabilities and ensure proper handling of 404
removed unused imports from BodyTubeShapes . java and RocketFigure . java to clean up the code and improve readability by elimin
added support for retina and req surface scale in PJOGL . java to optimize rendering performance by avoiding unnecessary drawable calls
add the initial value to the settings step ( # 4321 )
replaced ` PackedInts . Writer ` with ` BlockPackedWriter ` in ` DiskDocValuesConsumer . java ` and updated related
camel - 16462 : fix bug in defaultrouter . getroutesbystatus ( ) .
removed redundant data handling logic in GoAwayTest . java to simplify the code and improve readability by eliminating unnecessary complexity
added support for setting properties using FluentSetterBean and DefaultBeanIntrospector in ReflectionUtils and EasyRandomTest classes to enhance the flexibility of
updated ` BlockingHttpEndpoint ` , ` HttpEndpoint ` , and ` HttpEndpoint ` to use ` HttpResponse ` instead of ` ByteStreams `
camel - 1112 : fixed unit test that could fail on run full
updated the logging statement to use ` getLastAppearedTaskTargetId ( ) ` instead of ` mLastAppearedTaskTarget `
pdfbox - 4892 : add option to enable / disable image scaling in rtfdocumentsettings
updated aggregate function handling in TSServiceImpl . java to conditionally include the aggregate function name based on the execution parameter to improve flexibility in
replaced LuceneTestCase with WithNestedTests and added cleanup method in test classes to improve test structure and ensure proper cleanup of system properties
added functionality to select and set the x - cap server URI in the presence panel to enhance user experience by allowing dynamic configuration of the X -
ww - 4357 add ability to handle exception in dispatcher .
added a ` stopEditing ` method to ` CodenameOneImplementation ` , ` Display ` , and ` AndroidImplementation ` classes to manage
nifi - 1394 : fix npe in controlrate when group attribute be not set
renamed the parameter from ` includeUndoModify ` to ` isNewComponent ` and updated related logic in ` ComponentConfigDialog ` and ` R
added error logging and synchronization to the sendText method in ChatAnnotation . java to improve error handling and ensure thread safety during message sending
added a check for Windows OS type in HTMLDataFlavorTest . java to ensure that the test is only executed for MS Windows to prevent
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel . java to enhance transaction management capabilities
replaced direct addition of newRecids with a condition that checks if the newRecid is not already present to ensure that the newRec
use java . util . zip . zipfile instead of jrecompat . getinstance ( )
added a null check for the command class before creating a new service in RegisteredServiceSimpleFormController . java to ensure that the command class is
change default disk failure policy from best _ effort to ignore and add ignore to cassandra daemon .
removed the ` public ` access modifier from several methods in ` RipperInterface ` and ` RipStatusHandler ` classes to encapsulate
added a check to ensure the address is not equal to " 127.0 . 0.1 " before filtering out localhost addresses to avoid potential
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the code by eliminating unnecessary method
updated import statements in PinotSegmentRebalancer . java and added ClusterDataCache to computePartitionAssignment method to ensure compatibility with the latest re
simonstewart : remove container . delete ( ) from containerconfig and remove it from v140docker
simonstewart : make sure we do n ' t try to parse a pipe - separated command
added multiple attempts rule to CreateGlossaryTests to improve test reliability by allowing multiple attempts
updated schema references to use Components . COMPONENTS _ SCHEMAS _ REF instead of Components . COMPONENTS _ SCHEMAS _
replaced the ` deleted ` field with a direct type conversion in ` EntityDeletedEvent ` and updated audit record creation to use ` JsonUtils
added GOP support handling in FormatConfiguration and updated DLNAMediaInfo and LibMediaInfoParser to support GOP format support to
added a new file TestProfileReturnTypePrinting . java with methods for testing profile return type printing to facilitate performance testing of method
added a locking mechanism for concurrent access in ParseConfigUtils . java to ensure thread safety during configuration updates
refactor operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to utilize AcquireReleaseColumnsSegmentOperator for acquiring and releasing
danielwagnerhall : remove @ ignore from firefoxprofiletest
updated method signatures and return types in HasAndroidDeviceDetails . java to improve type safety and clarity to enhance code readability and maintainability
remove checkfornull from projectstats . addbug ( )
bugfix # 209381 - disable shadow on gtk / gtk
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a date in the future and created a test for weekly actions without a weekday set to ensure that the scheduled execution
replaced the upload button functionality with a menu item for enabling or disabling to simplify the code and improve maintainability by using a dedicated
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added loadMetaData method to MeXBTExchange and RippleExchange classes to enable loading of exchange metadata from an input stream
added a custom WritableSerializer for serializing Writable objects in CrawlDbReader to enhance JSON serialization capabilities for various Writable types
remove the test class that be no longer need
added a service configurationPid attribute to the MDNSDiscoveryService component to provide a specific service for the MDNS discovery service
added null check for messageItem before scrolling to the position to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer . java to use ForkJoinWorkerThread to improve concurrency handling by providing a random
removed duplicate assertions for DATANODE and NAMENODE in RoleCommandOrderTest . java to streamline test cases by eliminating unnecessary assertions
added methods ` restoreLocalInfoFromTableInfo ( ) ` and ` dedupWithTableInfo ( ) ` to ` PartInfo . java `
reformatted code for consistency across multiple Java files to improve code readability and maintainability
added a transform matrix and modified the logo sprite transformation in BitmapFontTest . java to improve rendering quality and visual consistency in the bitmap font rendering
[ flink - 20613 ] [ python ] [ table - planner - blink ] ignore built - in aggregate in python group window
removed the ` hasPendingEcho ` field and updated related methods in ` EndpointState ` , ` Gossiper ` , and ` Server
added method to get unreachable token owners from gossiper and updated method name from isAnyHostDown to isAnyStorageHostDown to improve clarity
[ geosymbolic ] do n ' t change ` ` x ^ 2 ' ' to ` ` x ^ 3 ' '
updated content type handling in FormAuthenticator and added getter and setter methods in SavedRequest to improve flexibility in content type management and allow for
changed variable access modifiers from ` _ ` to ` private static final ` and added null checks for ` localEnv ` in ` XToolkit
refactor RecommenderJob , RecommenderJob , and AbstractJob classes to improve code organization and maintainability
replaced ` synchronized ` with ` ReentrantReadWriteLock ` and ` ReentrantReadWriteLock ` in ` EnvironmentImpl .
added a new test method for reading identity providers in the identity provider endpoints to ensure correct handling of identity providers in different zones
updated scheduleJob method to use ExpireJob instead of JobHandle and added null check for timestamp in PointInTimeTrigger to improve job handling
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ rocketmq - 4892 ] send heartbeat to all broker when rebalance change
[ cairo ] add ` ` cairo . detached . mkdir . mode ' ' configuration property ( # 509 )
[ java ] add a test to check if there be a slow follower .
change default label pattern from authors3 to auth in JabRefPreferences . java to improve clarity and consistency in label handling
refactor dependencies handling in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for dependency resolution to
refactor OAuth service handling in GoogleCloudAPI and add disposal method in GoogleTTSService to improve resource management and ensure proper cleanup of
camel - 16462 : camel - file - consumer - do n ' t delete dynamic done file if the file name do n ' t
added a new boolean field ` reopenReaders ` to ` SolrConfig ` and modified the conditional check in ` SolrCore ` to conditionally reopen
add dialect to mapwriter for freeplane version
added methods for retrieving current date and timestamp in the Update class and corresponding tests in UpdateTests to enhance functionality for updating dates and timestamps in MongoDB
added a duplicate method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition and related classes to use a lambda expression instead of an anonymous class to improve code readability and reduce boilerplate
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to improve search performance by using a
removed multiple unused classes from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added methods for direct nearby upload preferences in CommonsApplicationModule to enhance functionality by allowing direct access to shared preferences
added support for the " SYSIBM " mode in the database connection and created tests for it to ensure compatibility with MySQL , MySQL , and
added conditional property annotations and modified logging statements in TraceGatewayEnvironmentPostProcessor , SamplerAutoConfiguration , and SamplerAutoConfigurationTests to enhance
added lastPid field and its getter method in POIXMLProperties and a corresponding test in TestHPSFPropertiesExtractor to track and retrieve the
[ geotiff ] fix npe in geotiffreader when no data be nan
added error handling and refactored command and file process status retrieval in CliDriver . java and SessionState . java to improve robustness and
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated related methods to utilize ` Schedulers ` for
added a default method ` selectByRuleIdSet ` to partition a list of ` ruleIdSet ` to improve flexibility in selecting rule IDs
added a method ` addExitDescription ` to the ` ExitStatus ` class and refactored the ` AbstractJob ` and ` AbstractStep
fix multiblock render handler not work on the player .
renamed ` columnFamily ` to ` columnFamilyColumn ` and updated related references in ` SliceReadCommand . java ` to improve clarity and consistency
removed unnecessary import of Collections and simplified range length calculation in PlotConfiguration . java to improve code readability and maintainability
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` to improve UI responsiveness and
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method and updated its references accordingly to improve clarity
added a null check for the service message in AdvServiceTest . java to ensure that the service message is not null before proceeding
updated key handling in MappingMongoConverter to use potentiallyEscapeMapKey instead of potentiallyConvertMapKey to improve clarity and correctness in key
updated Timber logging format in NearbyMapFragment . java to improve readability of log output for better debugging
camel - 16462 : camel - core - do not use java . lang . type in defaultcamelcontext to avoid reflection .
added null check for field names in FuzzyLikeThisQuery and created a test for non - existing fields in FuzzyLikeThisQueryTest
modified the ` writeApplicationsLinks ` method to accept a ` boolean tabularList ` parameter to enhance the functionality of the ` writeApplicationsLinks `
refactor createmissingidentifiers to use log4j instead of slf4j
replaced direct calls to ` bytes . length ` with ` bw . getLength ( ) ` in ` VectorColumnAssignFactory . java ` to
removed the abstract modifier from the getDisplayScript method in LocaleNameProvider . java to provide a default implementation of the method that returns null
replaced instances of ` keyToPress ` and ` keyToRelease ` with a new ` sequence ` in ` RemoteWebDriver . java
pdfbox - 4071 : initialize arraylist with size of list , a suggest by valerybokov
added synchronization for empty active interfaces in NetworkConfigurationWatcher . java and improved null safety in NetworkManagerListenerImpl . java to ensure thread safety
added a method to retrieve embedded objects from a HSSFShapeContainer in HSSFWorkbook . java and corresponding tests in TestEmbeddedObjects
removed import of Shdr from ShaderNodeLoaderDelegate . java to streamline dependencies by eliminating unnecessary dependencies
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity
added a check to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbol fonts
remove call to GlStateManager . popAttrib ( ) in ModelHourglass . java to improve code readability and maintainability by using
replaced instances of ` start ` with ` mCurrentGuideStart ` and updated related logic in ` LiveTvGuideActivity ` and ` Program
updated method invocation in MockGateway and added new classes ChildA , ChildB , ChildB , and Parent in MainMockTransformer to improve method
[ jvm launch ] pre - load libfreetype . so and libfontmanager . so , maybe fix rlcraft crash
refactored the logic for handling multi - variable functions in FunctionParser . java to improve code readability and maintainability by reducing duplication
loopsafepointelimination : add guardingnode . allowsfloatguards to allow floating guard
refactor the isInstance method handling in TypeFrameModelingVisitor . java to improve clarity and structure to enhance code readability and maintainability
added a new ` LocalizedString ` class and updated ` Attr ` , ` Attr ` , and ` T6758789a `
added a new configuration property ` disableClasspathSearch ` and its getter / setter methods to ` ServerConfig ` and updated ` DefaultContainer ` to
replaced the initialization of AudioFormat arrays with a new array copying method to improve code clarity and ensure immutability of audio format fields
change default value of retry ( ) from 0 to 1 in Reference . java and Reference . java , and update corresponding test in AnnotationPropertyValues
updated TexturePacker to use a settings file instead of a hardcoded value to improve flexibility by allowing dynamic configuration of the settings file
updated UI components in AchievementsFragment . java to use AppCompatTextView for uploaded images and wiki text to improve UI consistency and
added mock logger start and end methods for annotation processing in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing
added ` categoryinfo ` and ` categoryinfo ` fields to ` MwQueryPage ` and updated the generator in ` CategoryInterface ` to
removed redundant " " prefix from assertion messages in AuthzAuthenticationRequest . java to improve code readability and maintainability
added accessibility support for the taskbar timeout in TaskbarStashController to enhance accessibility support for the taskbar ' s respons
added a check for the ' ^ ' character in the signature parsing logic and introduced a new case for handling the ' ^ ' character to ensure
modified access flags handling in ClassVisitorDriverFromElement and added tests for stubbing of interfaces , enums , and abstract enums in StubJarTest
added null checks for input variable in IntervalFilter and added null check in LowpassIntervalsSource to ensure input is not null to prevent potential NullPointerException
added tests for ` MapEntrySetIteratorLastHashNext ` and ` NoSuchElementException ` in ` MapInterfaceTest . java ` to ensure correct iteration
added a serialVersionUID field to TreeMap class to ensure proper serialization compatibility for the TreeMap class
updated the creation time from epochMilli to seconds in ImageData . java to align with the expected time for image creation
[ ca ] use f2m instead of grobcov for singularws . directcommand ( ) .
added import for EncryptionUtils and removed PRIVATE _ KEY and PUBLIC _ KEY in AccountRemovalJob . java to ensure the correct storage key is deleted
do n ' t hardcode keep - alive header in jdkasynchttpprovider
fix npe in postjoinmapoperation when there be no interceptor and lite member join
douniaberrada : remove redundant inlining for text and comment
removed the ` spillEnabled ` parameter from multiple constructors and methods in ` BaseHybridHashTable ` , ` BinaryHashTable ` ,
refactor environment variable retrieval methods to use Optional for better null safety to enhance code robustness by avoiding potential NullPointerExceptions
workaround for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5453
added SerializableMode import to Mockito and modified spacing in PluginSwitch . java to improve code readability and maintain consistency in formatting
added instrumentation for field injection point and updated error handling in AbstractBeanDefinition . java to ensure field injection points are properly set to null to improve
added isolation level handling for SQL statements in the parser and introduced a new method to parse isolation level in select statements to enhance database compatibility checks and
refactor HiveConnection to use constants for transport and HTTP paths instead of hardcoded values to improve code readability and maintainability by reducing
added a method ` isCacheable ( LeafReaderContext ctx ) ` to the ` GlobalOrdinalsWithScoreQuery ` class to indicate
added a new file TestStrangeControl . java that implements a multi - threaded test for StrangeControl functionality to facilitate
updated file paths in JsFile and JsLibrary classes to use " . jsfile " instead of " . json " to improve clarity and
added selection start and end properties with their respective getter and setter methods to ShadowEditText . java to enhance the functionality of the ShadowEditText
refactor grpc server initialization to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added a new method ` use ( String path , Class < ? > ) ` to the ` Jooby ` class and updated the
added a null check for fst in FreeTextSuggester . java to throw an IllegalStateException when lookups are not supported at this time
updated output formatting and error handling in T4975569 and T6729471 classes to ensure consistent line endings across different operating systems
added support for loading ABIWriter classes in JavacInMemoryStep . java to ensure that the ABI writer class is properly instantiated
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethodIsAlways
added a check for the shutdown status before executing the scheduled task to ensure that the scheduled task is only executed when the service is not stopped to
refactor EnergyEndpointer class for improved clarity to enhance maintainability and readability of the code
refactor preset retrieval logic in ComponentPresetChooserDialog . java to use a list of displayed column keys instead of an array to improve code read
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to improve code clarity and reduce unnecessary dependencies
camel - 14540 fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated related classes to utilize it to
deleted the file Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
refactor disk delimiter handling in RandomPartitioner . java to improve readability and maintainability of the code
fix native image generation for jdk . internal . foreign . abi . fallback
fix ( kubernetes - client ) : add test for create inline rolebinding
added debug logging statements to UaaSessionCookieConfig for session cookie configuration to improve visibility into the session cookie configuration process
updated the calculation of the file name in HotseatFileLog . java to use the current calendar ' s day of the year to
updated condition from ' o ' to ' v ' in ObservableBlockingSubscribe . java to ensure proper handling of blocking observer states
added error handling for invalid options in JavapTask . java and created a new class T8033711 . java for testing to
replaced ` Collectors . toList ( ) ` with ` . toList ( ) ` in multiple Java files to simplify the code and improve readability
[ hotfix ] [ runtime ] do n ' t log error in taskdriver
[ hotfix ] [ network ] [ network ] disable tier storage for hybrid result partition
refactor code to use a new method ` isNotSuccessStatus ` to improve code readability and maintainability by centralizing the status check logic
added support for OpenGL 2.0 configuration in Cuboc and CubocDesktop classes to enable OpenGL support in the application
remove unnecessary check for voidtype in jimplebody
replaced ` DefaultSourcePathResolver ` with ` SourcePathResolver ` and introduced a new ` appendToCommandLine ` method in ` OutputMacroExpand
fix intermittent test failure on light job
added a condition to check for additional characters in the file path in MergeWordsListTask . java to ensure that duplicate words are not processed correctly
update instructorfeedbackresponsecomment and instructorsessionresultsbundle and instructorfeedbackresourceloadpagedata to use string key instead of
reformatted code for better readability to improve code clarity and maintainability
added a new file TestEscapeThroughInvoke . java containing a class for testing object escaping to demonstrate the use of escape - through
replaced ` stream . skip ( start , 0 , length ) ` with ` IOUtils . skip ( start , start ) ` for reading bytes
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 399 . add
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
lru : fix npe in blockcache . getcurrentsize ( )
removed unnecessary check for taskCount in RecentsView . java to simplify code by eliminating unnecessary return statement
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to improve responsiveness by allowing
added ` CoinmateExchange ` , ` CoinmateStatic ` , and ` CoinmateMetadataServiceRaw ` classes for fetching exchange
defaultmodelvalidator : add support for ` ` basedir - system - path . xml ' ' and ` ` $ { project . basedir } '
pdfbox - 4892 : avoid duplicate key in coswriter . getobject ( )
add ptransform . setdisplaydata ( list < itemspec > ) to allow displaydata to be set .
replaced instances of ` DefaultSubject ` with ` assertThat ( Object ) null ` for null checks and ignoreCheck ( ) calls to ensure
removed security property setting for disabled algorithms in ClientJSSEServerJSSE . java to simplify security configuration by eliminating unnecessary algorithms
updated check messages in OptionData . java for clarity and consistency to improve readability and maintainability of the code
updated module - info . java files for mmm and ppp modules to improve module dependencies and functionality
added error handling in the ensureConnection method and updated error handling in IOSImplementation . java to improve robustness by throwing IOException for unknown server
updated sCheckingEvents initialization in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper cleanup of
refactor error handling in FileSinkOperator and SortedDynPartitionOptimizer to properly close writer and record writers to improve resource management and error logging during
added diagnostic output to the return statement in SchemaGenerator . java to include diagnostic information for debugging purposes
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a
refactor DataSourceMonitorTests for improved test coverage to enhance reliability of data source monitoring
added a HashSet to track loaded resource paths and modified the scanning logic to ensure only one loaded resource paths are processed to improve performance by avoiding
refactor test instance retrieval and error logging in TestServiceUtil . java to improve null safety and provide clearer error messages for service initialization failures
added null check for ` o ` in ` RoutingInBoundHandler ` and modified response handling in ` RoutingInBoundHandler . java ` to
added natIp field to EkeyConfiguration and updated logging messages in EkeyUdpPacketReceiver and EkeyUdpPacketReceiver to enhance
updated ArrowByteBufAllocator imports and modified buffer allocation in multiple Java files to ensure compatibility with the latest arrow memory framework
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for header buffer and body length in HttpConnection . java and created a new test case in RFC2616BaseTest . java to
refactor the subscription handling in MultiTimeout . java to use AtomicReference for upstream and requestedInitial to improve code clarity and maintainability by
add compaction counter to leveledmanifest . getOverlappingstarvedsstable ( ) .
added a test annotation to TestOrcTimezone1 . java to ensure proper testing of the OrcTimezone1 functionality
replaced the ` contains ` method with a ` findMatch ` method for matching metrics and timer system properties to improve the accuracy of metrics and
added error handling for JSON processing in PinotSegmentRestletResource and modified return statements in TraceContext and TraceContextTest to improve robustness
added null check for the superclass of the column class in JTable . java and created a new test class Test6888156 . java
added a conditional check for the existence of the shell directory before adding it to the command line arguments to ensure that the shell command is only executed
updated the number of deleted feed from 10 to 1 in DatabaseCleaningService . java to improve data deletion efficiency by removing unnecessary subscriptions
replaced List with Set for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
replaced deleteFilesAfterClose ( ) with fileMmapEnableIfSupported ( ) in BTreeMapTest . java to streamline file
modified the iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java to improve iterator management and
added JMXHelper to unregister the object name and simplified exception handling in JMXHelper to improve code clarity and reduce unnecessary stack trace printing
[ hotfix ] [ rocksdb ] set default writebuffer size of rocksdb to 64mb
removed the ` true ` parameter from the ` this ` constructor in the ` Style ` class to simplify the constructor by eliminating unnecessary parameters
replaced ` addArgument ` method with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of encoded messages without encoding
[ samza ] remove unused json graph from samza runner
use mouseinput . button _ left instead of vector3f . zero in helloaudio
refactor LoopRotateBadNodeBudget class for improved clarity to enhance maintainability and readability of the code
added a new parameter ` TypeInformation < ? > ` to the ` convertToMongoType ` method across multiple classes to enhance type conversion functionality and improve
improve inputbox and inputbox renderer to use imagename instead of iscomplex
simonstewart : fix the copyright year in ` ` sendkeytoactivelement . java ' '
added methods to get a scaled image and reduce dimensions in AddAndScaleMultiImage . java to improve performance by reducing unnecessary image resizing
removed the extendArgumentCheck ( ) and extendWrapStore ( engine ) methods from DBMaker . java to streamline the code by elimin
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to enhance the keyboard ' s state management functionality
removed the DETECTED _ ACTIVITY constant and its associated getter and setter methods from multiple classes to streamline the code by eliminating
updated import statements from ` org . eclipse . websocket . extensions ` to ` org . eclipse . jetty . websocket . protocol `
removed the import of Buildable from AaptPackageResources . java to streamline dependencies by eliminating unnecessary dependencies
added comments to file . readUnsignedByte ( ) in multiple Java files to clarify the purpose of the unused fields in multiple Java files
improve error message for invalid upgrade protocol
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
removed redundant conditional checks for plot ownership in Merge . java to streamline code for better readability and maintainability
deprecated the ` getConversationID ( ) ` method in multiple classes to indicate that the ` getConversationID ( ) ` method is no longer
updated imports in DummyFreeTTSVoice and DummyFreeTTSVoice to use de . dfki . unitselection instead of com .
refactor ` stripQuotes ` method in ` BaseSemanticAnalyzer ` , ` PartitionSpec ` , and ` PartitionSpec ` classes to use
refactor rendering handling in DLNAResource and Request classes to improve clarity and efficiency of rendering context updates to enhance code readability and
added resolution and remote artifact repositories to the DefaultPluginManager to enhance plugin management by including resolution and remote artifacts
camel - 15836 : camel - cxfrsproducerclientfactorycachetest should close the applicationcontext if it ' s not
doc : generate sample code in PhysicsClient . java ( # 6022 )
added JUnit Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failures
added a new File instance with a specified name in ZipFile . java to facilitate the creation of a file using a specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
fix ( core ) : make channeluid non - final
added stack trace logging functionality and utility methods in GenericDAOImpl , ForumServiceImpl , and ReflectionUtils classes to enhance stack trace visibility and improve
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test coverage for form login functionality
refactor unparse logic in FunDefBase , ParenthesesFunDef , and BasicQueryTest to handle cases where no arguments are
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to include cluster name and c . cluster _
rename ` supressWarnings ` to ` suppressWarnings ` for clarity and consistency to improve code readability and maintainability by using a more
updated JsonTreeReader to handle both NAME , END _ ARRAY , END _ OBJECT , and END _ DOCUMENT to improve error handling for unexpected JSON
added argument handling for the internal runner in TestCommand . java and a corresponding test in ExternalTestRunnerIntegrationTest . java to improve command execution
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enable deduplication and indexing of Solr URLs with specified segments
[ hotfix ] [ doc ] add support for flink planner in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is reset before running tests
updated progress handling in ` Progress . java ` and ` RSSReader . java ` to use ` showPercentage ` and added disposal logic to
added a check to ensure the parent file exists before proceeding with operations to avoid potential errors when the parent file does not exist
added write and close methods for POIDocument in IOUtils . java to ensure proper resource management and prevent potential memory leaks
replace line breaks with newline characters in output statements in JavaBuild . java to improve readability and consistency in output formatting
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for root and dots per point to
added custom query handling for LDAP users in CustomQueryFilterFactory . java and updated test cases in TestLdapAtnProviderWithMiniDS
added default port handling in NettyHttpServer , DefaultRouteBuilder , and FilteredRouter classes to enable dynamic port application for routes based on
refactor SnmpTargetHandler and related tests to use a new method for verifying ThingStatus to improve code clarity and ensure proper status
add check for instructors with submit privileges in the instructor edit page
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should not be used in new code
refactor path extraction logic in FileResolverImpl . java and introduce WarFileResolverTest . java for testing jar and zip files to
updated the format of newFlushedSize in DocumentsWriterPerThread . java to include docstores to improve clarity of log output by
updated the method call from ` func _ 149739 _ a ( ) ` to ` getUnlocalizedName ( ) ` in ` Example
corrected the spelling of " stripWhitespaceX " and " stripWhitespaceY " in ImageProcessor . java to ensure proper handling of whitespace
updated the lazyWeakLock initialization to use milliseconds instead of milliseconds to improve thread management by allowing more time for concurrent access
updated the ` deserializeFrom ` method to include ` exactSearch ` parameter in ` TsFileSequenceReader . java ` and added a test for
fix checkstyle issue in csvsaveservice
added import for Dimension and set preferred size of the pane in NavigationShareTab . java to ensure the pane ' s preferred size reflects the
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for custom attributes in TestBeiderMorseFilter to improve
refactor UpnpAudioSinkReg , UpnpHandler , and UpnpEntryQueue classes to improve code organization and maintainability
fix lenswarp . setcollidedat ( position , y , z ) . close # 1353
added a new test method ` toJson ` to the ` JsonTest ` class and modified imports for better readability and functionality to enhance test coverage
refactor MutableContextDataSupplier class for improved clarity to enhance maintainability and readability of the code
changed catch block from Exception to Throwable and added a warning log for loading LogWatcher to improve error handling by logging a warning instead of throwing an
updated KubernetesMockServer constructor to include HTTPS as a parameter to enhance security by using secure connections
[ gr - 23232 ] fix a bug in the defaultjavalingprovider . java file
updated HTTP status codes from " GET , HEAD , OPTIONS " to " GET , HEAD , OPTIONS " and " GET , HEAD , OPTIONS "
tika - 3757 -- use locale . us for decimalformat in tika - tiff
replaced ` throw ` statements with ` rsp . setException ( ) ` for error handling in ` ShowFileRequestHandler . java ` to improve error
added exception handling methods in ReflectorClassWriter and implemented try - catch block handling in ReflectorTest to improve error management and ensure proper exception
added a ` clamp ` method to the ` Vector ` class and its implementation in ` Vector2 ` to provide a way to clamp the vector
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure requested scopes are set based on the incoming token ' s user
refactor BC _ instanceof class for improved readability to enhance maintainability and clarity of the code
replaced direct call to setSaveFlags with a static final Logger instance to improve logging clarity and maintainability of the code
updated JUnit imports and annotations in UaaUrlUtilsTest . java to use Jupiter ' s PollutionPreventionExtension to improve
hhh - 10619 - fix typecastexception in nativequery and nativequeryimpl
added a weak hash map for font data retrieval in SunLayoutEngine . java to improve memory management and prevent potential memory leaks
make typedset use intarraylist instance size instead of bigarray
simonstewart : use sessionid instead of html _ unit _ js for window switch test
refactor BrokerRequestUtils class for improved readability to enhance maintainability and clarity of the code
refactor instance management in InjectorBuilderImpl to use a map for improved ordering to enhance clarity and maintainability of instance management in the
updated method calls to use ` buildTarget . getBasePath ( ) ` instead of ` cell . getBuckConfigView ( ) . getAbsolutePathTo
added null check for the input parameter before parsing to prevent potential NullPointerException when the input is null
add a keep - alive manager to the jabber connection to avoid a deadlock .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to adjust the default load factor for improved performance
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` and updated related methods in ` Vectorizer ` and ` Vectorizer
change package name from ` com . google . zxing ` to ` com . google . zxing . client . j2se
refactor conditional checks for overview actions in OverviewState . java to improve clarity and maintainability of the code
added JPA entity annotation to BaseActivityEventEntity to enable entity management within the application
added detailed tracing information to NavBarSwipeInteractionHandler , TouchInteractionService , and TouchInteractionService to improve traceability and debugging capabilities
added a new file InvalidOptions . java to demonstrate usage of Java h program with option validation to facilitate testing of
added a warning log for inconsistent display state and supported bounds in DisplayController . java to improve debugging by providing clearer insights into display state
refactor ` getClientIdAndClientSecret ` method to use ` OAuth20Utils . getClientIdAndClientSecret ` to improve code reusability and
set the _ unwrapServletException flag to true in ErrorPageErrorHandler and ErrorPageErrorHandler classes to enable unwrapping of servlet exceptions by default
added logic to set status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure that the status is set correctly based on the
camel - 16462 : seda endpoint should use a default size of 1000 instead of a hardcoded value .
make sure batch update do n ' t fail if we do n ' t need to
added a new HttpClient configuration to ThirdEyeApplication to enable HTTP client configuration in the application
added a sort parameter to the JobInstanceFetchRequest and updated JpaJobPersistenceImpl to include it to enhance functionality by allowing sorting based on
updated CryptoFacilitiesTradeService to utilize CurrencyPair for canceling cryptocurrency orders instead of throwing an exception to improve order cancellation
ggb - 1181 : hide keyboard when click in web ( ggb - 1181 )
refactor memmove to use native function handle instead of byte array
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve code readability and maintainability
do n ' t block tool tooltip if it ' s not in the desktop
added support for customizable date formatting in DefaultTypeAdapters and GsonBuilder classes to enhance flexibility in date formatting by allowing customizable formatting options
updated playerSet string formatting in ListCommand . java to improve clarity of player selection output
added a check to return a List < Z > if the list is empty to ensure proper type handling when no elements are provided
added error handling for InvocationTargetException in ParametricCallable . java to ensure proper exception propagation for CommandException
updated the getLikeExpression method to include a boolean parameter for handling LIKE expressions to improve flexibility in handling regular expressions based on user - defined
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide methods for starting and
added locale management to the runChild method in LuceneTestCase to ensure the correct locale is set for child tests
refactor multiple Java classes related to connection handling to improve code organization and maintainability across the project
refactor context handler initialization to use a separate method to improve code readability and maintainability by encapsulating context handler initialization logic
added a new test method for route builder reference in OSGiBlueprintTestSupport . java to ensure proper handling of route builders in the OS
nifi - 1566 : fix testexecutestreamcommand to work with jdk 1.6
refactor returnTypeSubstitutable method to include Warner parameter and streamline type checks to enhance clarity and maintainability of the return type
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5453 - add throttle
removed unnecessary variable assignment for pixel in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to streamline
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the code
added a new interface ` Model ` to the ` org . apache . poi . hssf . model ` package and modified ` Sheet `
replaced repeated calls to setOutFilterPattern and setInFilterPattern with a constant across multiple filter strategy classes to improve code readability and
added a ` clearEntityManager ` property to ` JpaItemWriter ` , ` JpaItemWriterBuilder ` , and ` JpaItem
added null checks for shortcut information in multiple classes to ensure stability by preventing potential NullPointerExceptions
updated TwoDimensionalCollectionValuedMap instantiation to include a new parameter to enhance functionality by allowing multiple instances of TwoDimensionalCollectionValuedMap to
updated exchange specifications from " btc - e . nz " to " wex . nz " and " btc - e " in WexExchange
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and modified buffer setting in EncodedTreeReaderFactory . java to
added null check for files in the SegmentInfos class and implemented a test for opening a reader after deletion to ensure that a FileNotFoundException is thrown when
updated date parameters in HSearchSortHelperImpl . java and modified FhirResourceDaoR4SearchWithElasticSearchIT . java to
refactor the calculation of the percent value to use a variable for better readability to improve code clarity and ensure that the return value is
updated condition checks in RangeInputStream and RangeReader to return - 1 if the limit is less than or equal to 0 to ensure proper handling of
[ camel - 16462 ] add debug log to route configurer .
[ playback / playback ] fix position of playlist in playback
updated test classes to extend LuceneTestCase instead of TestCase to align with the latest Lucene library structure
[ hotfix ] [ runtime ] fix flakiness in statefuloperatortest
removed null check for fill before setting bitmap shader shift in Area and Line classes to simplify code and improve readability by eliminating unnecessary null
added dbExists method to Blockchain class and updated imports in BlockchainTest to enhance database existence checks and improve code clarity
trim whitespace from the matcher group value in SQLPlusSupport . java to ensure leading and trailing whitespace is removed before processing
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1394 .
do n ' t set divider location when there be no slider
add healthcheck metric to pinotcontrollerhealth ( # 4394 )
hide shared avatars in the item view to improve user experience by reducing unnecessary UI elements
[ geogebra ] remove clientbundle . source from mebis resource
[ java ] use less than = = instead of less than = =
added logging support for command execution in LogInterceptor to improve performance by avoiding unnecessary execution when logging is not enabled
replaced CountDownLatch with assertWaitUntil for span validation in EventBusTracingTestBase . java to improve test reliability and clarity
refactor QueryParser to use Locale for locale initialization and add getter / setter methods to improve code readability and maintainability by centralizing locale
refactor : use linkedhashset instead of hashset in entrycustomizationdialog and fieldsetcomponent
jbrules - 2635 : fix build for beta node constraint
added a new class ` OCSPUnauthorized ` and modified ` OCSPResponse ` to include it in the ` OCSPResponse ` case handling
replaced a fixed sleep duration with a dynamic server state and added a retry mechanism for server failure to improve responsiveness and prevent premature
added methods to track and manage the number of active connections in the SourceCounter and SourceCounterMBean classes to enhance connection management capabilities in the source
make executionstrategy . execute ( ) public and add field definition to interface type .
refactor ` createDefaultJavaPackageFinder ` method to return a ` Set < String > ` instead of a ` ImmutableSet < String > ` to
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve output handling by using ` PrintWriter `
[ hotfix ] [ test ] fix filesourcetextlinesitcase failure on window
added support for ` DataTable ` type in ` JRubyStepDefinition . java ` to enable conversion from ` DataTable ` to ` JRuby `
updated author visibility settings in SearchImagesRenderer . java and modified image processing in ApacheHttpClientMediaWikiApi . java to enhance user experience by providing
refactor ReadSentimentDataset class for improved readability to enhance maintainability and readability of the code
updated error handling in FormulaParser to provide clearer error messages to improve debugging by providing clearer context for parsing errors
added getter and setter methods for ` _ bindAddress ` in ` WebSocketClient ` and modified the ` WebSocketFuture ` class to enhance WebSocket connection
[ java ] do n ' t delete aeron directory when close the clustered medium driver .
refactor width and height assignment logic in WidgetGroup . java to use a unified setSize method to improve code readability and maintainability by redu
sec - 689 : fix 1.4 compatibility issue ( overlooked autoboxing of boolean
refactor ` startOneChannelLA ` method to use ` edgeOption ` instead of ` params [ 1 ] ` to improve clarity and
added linearBackoffCoefficient constant and resetBackoff methods to ChromeBinary . java and integrated it in ChromeDriver . java to improve performance by redu
added ` HttpMethod ` and ` httpRoute ` attributes to ` ClientResponseWrapper ` and updated its usage in ` TraceExchangeFilterFunction ` and `
patch by jbellis ; review by brandonwilliams for cassandra - 1186
modified the rendering intent return logic in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid rendering intents
add ` ` not deny ' ' parameter to contribution question form ( # 9692 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
added SuppressFBWarnings annotation to KafkaExactlyOnceSink and removed Serializable interface from KafkaRecord to improve code clarity and suppress warnings related to
added PGConnection to the connection proxy in PooledConnectionImpl . java and created a test for it in BaseDataSourceTest . java to ensure
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info in TokenAuthenticationHandler . java and changed log level from warn to trace for missing token encryption secret configuration to
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should not be used in new code
added topology update event handling and improved command reporting in AmbariManagementControllerImpl , AbstractServerAction , and FinalizeKerberosServerAction
refactor NamedListCodec to enhance iterator handling and improve readability to enhance performance and maintainability of the code
fix npe in assigncompletelylostpartitions when there be no exception
added schema inclusion rule to ApiExample . java to allow access to public schema in the API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test verifies the correct
refactor ring creation to ensure valid coord sequences before creating a linear ring to improve robustness of geometric calculations by ensuring valid coord sequences are
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to provide access to the base
added setDebugEvaluationOutputForNextEval method to HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to enable
test : migrate testmodule to junit 5 ( # 4449 )
do n ' t set live tv direct play mode for live tv
added a return statement in DynamicStyleBar . java to ensure proper termination of the method
added logging statements for property setting and resetting in Utils . java to improve traceability and debugging of repl dump operations
refactor ReactiveAuthorizationManager class to improve authorization handling to enhance security and maintainability of the authorization process
added a check for both object and boolean types in MethodEmitter . java to ensure proper handling of boolean types in type promotion logic
rename llvmobjectnuller and llvmobjectnuller to llvmaddressnuller
updated multiple Java files including OperationLocator , Transport , DynamicSchemaLoader , testConfig , YAMLConfigurationSource , and ServiceRegistryClient to improve code
add unit test for caffeine cache configuration
added a method ` calculateBoundingBox ( ) ` to calculate bounding box based on vertex attributes to enhance the mesh ' s functionality to accommodate
added a new target hash function and updated its usage throughout the TargetsCommand class to enhance flexibility in hashing by allowing users to choose between
refactor DefaultConfigurationProperties class for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings for graphical elements in ListViewMultiChartActivity and modified highlight drawing logic in BarChart to improve visual
[ hotfix ] [ table - planner - blink ] remove unused key from pgsgpathplanmap
camel - 16465 - camel - infinispan : fix test failure in camel - infinispan
updated MavenArtifactFetcher and MavenDependencyResolver to use FileChannel for locking to improve thread safety and prevent potential resource leaks during artifact fetching
updated fragmentShader initialization in SpriteBatch . java to include a conditional check for GL _ ES to ensure compatibility with GL _ ES environment for
changed the return type of ` RSGroupInfo ` and related methods from ` SortedSet ` to ` Set ` to improve flexibility and consistency in
added a try - catch block to load the JspPage class and changed log level from warn to debug for TLD processing to improve error handling
updated CustomAnalyzer and TestCustomAnalyzer to utilize LowerCaseFilter for version aware token filtering to ensure compatibility with LUCENE _ 8
added a test method ` getApplicationInfo _ readsValuesFromSetPackageArchiveInfo ` to ` ShadowPackageManagerTest ` and modified ` ShadowPackage
replaced direct method invocation with MethodUtil . invoke for improved package access checks to enhance security by ensuring proper package access validation during method invocation
added progress updates for project configuration and task events in GradleBuildService and Main classes to enhance the progress tracking capabilities for project configuration and
removed synchronized block from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
do n ' t throw poolinitializationexception when initializationfailfast be set to 0 .
removed the ` timeOut ` parameter from the ` getResult ( ) ` method and added a new ` error ( HttpResponse ) ` method to simplify
modified the ` isNative ` field to be transient and updated its value from ` in . readBoolean ( ) ` to ` false ` to
updated error message formatting in CEntryPointCallStubMethod . java to improve code readability and maintain consistency
renamed ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` in ` CoreModuleHandlerFactory . java ` and ` RuleEnable
no effective change - code cleanup - cleanup
updated logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of debug messages to enhance debugging by providing more informative
[ hotfix ] [ kafka ] fix flaky test in kafkadynamictablefactorytest
added null check for repository retrieval in UsersPanel . java to handle potential null repository cases to improve error handling and provide clearer feedback when the
added support for additional font formats in SunFontManager . java to ensure compatibility with additional font formats
refactor type handling in AnnotationMatcher to improve clarity and correctness to enhance code readability and maintainability by using a more descriptive
replace " OFF " with " SEVERE " in Grep . java to correct the spelling of " SEVERE "
added conditional checks before logging debug messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when debug logging
simonstewart : fix nullpointerexception in surefireplugin . java
added conditions to check if the home intent should move to the default screen on the home intent to ensure proper handling of the home intent when the
increased the maximum bitrate from " 110 " to " 30 " in PMS . java to increase the maximum bitrate for better
replaced the method ` getOptions ( ) ` with a call to ` optionsMap . values ( ) ` in ` CommandLineParser . java `
trim the description before returning it in MutableDatabaseProperty . java to ensure consistent formatting by removing leading and trailing whitespace
removed the filePath parameter from the outFilename assignment in XOMParserTest . java to simplify the output filename generation for better readability
removed the process ID from the error log message in ProcessBesuNodeRunner . java to simplify the error message for clarity
added ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` methods to ` MusicLoader ` and ` Sound
removed unnecessary imports and simplified type assignment in OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecordRule import and annotation to RequestPinItemTest . java to enable screen recording for testing purposes
bugfix # 220313 , set lr / cpu / memory / lr / cpu pause button to false if it be n ' t
refactor preference handling in Preferences . java to use a dedicated method for adding accounts and add accounts to improve code readability and maintainability by
do n ' t send the available presence if it ' s available
modified the initialization of StringBuilder to include initial capacity based on utflen to ensure proper initialization of StringBuilder based on input stream length
set spring . metrics . export . statsd . enabled to false in webendpointautoconfigurationintegrationtests
refactor InterruptedException class to improve error handling logic to enhance reliability and maintainability of exception handling
refactor ServiceTicket class for improved clarity to enhance maintainability and readability of the code
refactor connection check logic in ConnectionCheckOperation . java to improve readability and maintainability of the code
updated the conversion logic to handle both String and Map types in ArgumentArrayMessageMapper to ensure correct conversion for Map types during conversion
solr - 1566 : fix test case and test case
modify PasscodeManager to use FLAG _ ACTIVITY _ REORDER _ TO _ FRONT instead of adding a new AuthenticatorActivity to ensure
refactor ( template ) : remove deprecate annotation from patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check for the drawable before calling ` beginDrag
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for the root variable and collect components in DynamicStyle . java to prevent potential NullPointerExceptions when the root is null
add confusionmatrix to the maxenttagger so that it do n ' t interfere with test
improve code readability and maintainability of jmeterthread
added unit tests for ` getConnectedDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest . java ` to ensure
corrected a typo in the test method name from " # autowire " to " # autowired " in the PropertyBinding
added a new method " clone " to the set of object methods and introduced a new finalization method in ResultObjectProxy . java to enhance
[ hotfix ] [ test ] fix npe in integrationtestbiglinkedlist
added support forFERRING _ OBJECTS in DebuggerConnection and refactored instance info reply logic in JDWP to improve handling of
updated the variable name from ' service ' to ' serviceId ' and added a matching check for SamlRegisteredService to improve clarity and ensure
added null check for getActivity ( ) before running the UI thread to avoid potential NullPointerException when getActivity ( ) is null
corrected the spelling of " Logger " to " logger " across multiple files to improve code readability and maintain consistency in naming conventions
added ` _ stringType ` and ` getStringType ` methods to ` DatabaseAdaptor ` and modified ` JDBCSessionDataStore ` to use it to
updated test cases from " language : english " to " suggested _ category : * " in UIMAUpdateRequestProcessorTest . java to
refactor thread name handling to use a dedicated ` updateThreadName ( ) ` method across multiple classes to improve code readability and maintainability
refactor TaskletAdapter class to improve code readability to enhance maintainability and facilitate future updates
[ drools - 22200 ] fix npe in dmnevaluator when dmn be null
fix texture map creation on mac
added tooltip text to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing context - sensitive information
replaced calls to ` getTypes ( ) . add ( e ) ` and ` add ( i ) ` with ` addType ( e ) `
add ` ` text ' ' and ` ` description ' ' parameter to the ` ` reload . action . text ' ' and ` ` restart
ggb - 2852 : use ` ` hasspreadsheetlabel ( ) ' ' instead of ` ` isspreadsheetlabel ( )
changed the type of the BRIGHTNESS _ FACTOR constant from ` intValue ( ) ` to ` doubleValue ( ) ` to ensure consistency
[ opengrok ] use context instead of branch when parse the history entry
added an ` isAdmin ` parameter to the ` createUser ` method and implemented listUsers ( ) and admin ( ) methods in ` HomekitAuth
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor to ensure proper handling of void return
fix log format anchor in dynatraceexporterv2 ( # 3056 )
updated method signatures in Context . java and Response . java for consistency and clarity to improve code readability and maintainability
added a method to set capabilitiesFromSpongeBuilder in MixinItemStack to support deserialization of NBTTagCompound capabilities
[ hotfix ] [ test ] fix test failure
added validation for CreateSmartContract and improved contract creation logic in Wallet and GetContractServlet classes to ensure that only valid smart contracts are created
added multiple package - info . java files for various packages in the org . ibm . dtfj package to provide package - level documentation for
removed synchronization from the add method in DocumentsWriterDeleteQueue . java to improve performance by avoiding unnecessary synchronization when adding a new node
added a HashSet to track duplicate JavaFileObject instances and modified command - line arguments in T7091528 . java to improve handling of file
updated the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPv6
added support for adding a new user parameter in the LoginServerTokenEndpointFilter to enhance the flexibility of the login process by allowing users to
added a check for the C _ KEY language in LanguageFactoryTest and updated language comparison logic in CPPParserTokenManager to support additional language
replaced instances of ` MoreFutures ` with ` MoreExecutors ` and created a new ` MoreExecutors ` class to improve code organization
added cache control headers and expiration handling in FormAuthenticator and ConstraintTest classes to enhance security and ensure proper handling of HTTP requests in the application
updated error logging to include the exception message in the error message to improve error reporting by providing more context about the error
updated test class names and assertions in HSSFTests . java and TestEmptyDocument . java to improve clarity and consistency to enhance test
refactor FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTPTest classes to improve code organization and maintainability
added a null check for the output file before retrieving its absolute path to avoid potential NullPointerExceptions during execution
added import for ExternalResourceControlPriority and set access controller settings in Java2DRenderer . java to enhance access control management during rendering
added error handling for graphics drawing in TestTriggerCoverage . java to ensure the build fails gracefully on non - Windows systems
modified the ` main ` method to include a ` throws Exception ` and modified CPU time validation logic to improve error handling and ensure proper CPU time
added a check for empty comments in the TabsAndIndentsVisitor class to ensure whitespace handling only occurs when comments are present in the space
updated assertions in TestTriggerIntegration from 5.0 to 100.0 and modified logging statements in SimDistribStateManager . java to improve
replaced ` equals ` with ` equalsIgnoreCase ` for ` changeSet ` , ` RanChangeSet ` , and ` NotRanChangeSetFilter `
removed the ` getString ` method from the ` ShadowBundle ` class to simplify the code by eliminating unnecessary complexity
updated date formatting in TweetActivity to use a custom DateFormat based on the user ' s locale to ensure consistent date formatting across different locales and
added a check for empty connections in StandardProcessSession . java to return an empty list if no connections are available
refactor focus request logic in DetailFragment to improve code readability and maintainability by encapsulating focus request logic
replace hardcoded file path with a variable for the canonical path to improve readability and maintainability of the code
[ geogebra ] fix a bug in coordmatrix . solve ( )
added import statement for Message in GenericMessage . java to enable integration with Spring ' s Message class in integration tests
updated SQL queries in PostgresConnector . java and added a join method in TaskAttempt . java to improve code readability and maintainability by
updated the selection logic in AquaFileChooserUI to check for file filter presence before setting the file filter to ensure that the filter is
fix thread safety issue in p2ptransportmanager
updated the return statement in ArrayPtg . java and added a test for the toFormulaString method in TestArrayPtg . java to
refactor import statements in PGtokenizerTest . java for consistency to improve readability and maintainability of the test code
refactor Java2TypeScriptTranslator to improve variable handling and add a new test for nested anonymous classes to enhance code clarity and ensure correct
replace unsupported change exception with SQL statement creation for auto - increment columns to ensure compatibility with PostgreSQL ' s auto - increment functionality
updated byte reading logic in DataInput . java for consistency and correctness to ensure proper handling of negative values and prevent potential errors
removed duplicate assertions for vertical and horizontal pixel spacing in ImageParserTest . java to streamline test coverage for image parsing functionality
updated the call to ` getParent ( ) ` to use ` parent . getParent ( ) ` instead of ` getParent ( ) ` to ensure proper
updated import statements and formatting in multiple Java files to improve code readability and maintain consistency across the codebase
[ java ] use engine _ free instead of engine _ finish .
added a ` start ` variable and updated ` fireIterEventAsNeeded ` method to ` fireIterEvents ` and ` fireIterEvents `
added resource cleanup for HttpContent in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added deleteLogs ( ) method to TestRecovery . java to facilitate logging management during recovery tests
added a conditional check for URLs containing " twitter : / / " in the BrowserActivity to start the activity directly from the URL to ensure that
[ hotfix ] [ test ] wait for host status in deploymentgrouptest
updated the logResult parameter from false to true in VisibilityController . java to reflect the current state of the list labels feature
updated logging level from 0 to 25 for badClients . ribbon . MaxAutoRetries in RestTemplateRetryTests . java to improve logging
removed System . out . println ( result ) from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java
added support for a " fraction " resource type in PackageResourceLoader and updated related classes to utilize it to enhance resource loading capabilities for fraction
removed file confirming logic in BasicFrame . java to streamline file writing process by eliminating unnecessary checks
added assertions for groupId and artifactId in findNewerDependencyVersion method to ensure that tagGroupId and tagArtifactId are correctly retrieved from the resolution
hbase - 20615 addendum throw quotaexcecededexception instead of donotretryioexception in namespacestatemanager
refactor multiple Java classes related to token filtering and attribute handling to improve code organization and maintainability
updated TestFuzzPreLoop . java file to improve test coverage for fuzz functionality
added a check to ensure f0 is non - negative to prevent negative values in HTSVocoder . java
updated logging messages in SchemaRetriever . java and added null check for pkColumn in TableRetriever . java to improve logging clarity and prevent potential
improve performance of request . clearencoders ( )
added SharedPreferences support for empty page handling in Lawnchair to enhance user experience by allowing users to disable empty pages based on preferences
added a warning log for deprecated cucumber - needle usage to inform users that cucumber - needle has been deprecated
replaced ` TestActivityWithAnotherTheme ` with ` Resources . Theme ` and updated theme resolution methods in ` ShadowThemeTest ` ,
updated assertions in VerifyFast . java to use Arrays . toString ( ) instead of string concatenation to improve clarity of error messages for better debugging
no effective change - no effective change - no effective change
added checks for IdentNode properties in CodeGenerator and made PROTO _ PROPERTY _ NAME public in ScriptObject and ScriptObject classes public to enhance
added a random parameter to the shuffle method call in TestFilterDirectoryReader . java to ensure consistent randomness of readers by using a specified random
updated displayName assignment logic in UsersAndGroupsSearchProvider to handle both shareWith and known remote clarification to improve user experience by providing clear
added a default value of " / " to the path string in CookieRetrievingCookieGenerator . java to ensure that the path is not blank
reformatted closing braces in Jvm and JvmJvmstatModel classes to improve code readability and maintainability
changed the variable declaration from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated comparison logic in ValidationResult . java to ensure pageNumber is not equal to ve . pageNumber to improve comparison accuracy for page number validation
added a condition to check if the focused widget equals the current instance in UIDropdown . java to ensure that the highlighted widget is only highlighted
reformatted method signatures in SoundUtil . java for consistency to improve code readability and maintainability
refactor ApplePackageDescription and AbstractKnownBuildRuleTypes to use getAppleCxxPlatformFlavorDomain ( ) method instead of
added a test to verify the functionality of the clickhousify SQL syntax in ClickHouseStatementTest . java to ensure correct functionality of
renamed ` onConnect ` to ` onAccept ` in ` ServerSessionListener . java ` and ` AbstractHTTP2ServerConnectionFactory . java
refactor EnglishPTBTreebankCorrector class for improved clarity to enhance maintainability and readability of the code
added a new file ` TestGetLoggerNPE . java ` to test logging behavior to ensure that the ` getLogger ` method behaves correctly
added a ` getData ( ) ` method to ` PathSharingContext ` and modified ` ActionDirectory ` and ` ScriptedDecideRule `
truffle : fix java . lang . classcastexception to java . lang . object
added regex pattern matching for " NEXT VALUE FOR " in NextValExpression and modified related methods to enhance flexibility in handling multi - row values
improve error message for resource bundle not pre - cached
added a threshold check for pending writes in BoundedLocalCache and implemented a test for clearing pending writes to ensure that pending writes do not exceed
added order direction support in QuoineExchange and QuoineNewMarginOrderRequest classes to enhance order management capabilities in the application
added a method ` boundInitialization ` to ` PropertyDescriptor ` and created a new class ` Test7192955 ` for testing property binding to
replaced the ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwj
added null check for buttonsAwatingRelease before setting it to null to prevent potential NullPointerExceptions when the component form is not initialized
update wrap width calculation in LineCell . java and set region . USE _ COMPUTED _ SIZE in StyledTextAreaSkin .
updated string formatting in XSLTErrorResources _ it . java to improve code readability and maintain consistency
changed the type of paramValues from HashMap to LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to ensure predictable iteration order for better
refactor string concatenation to use String . format for consistency across multiple Java files to improve readability and maintainability of string formatting
replaced the method ` getNamespaceContext ( ) ` with ` getNamespace ( ) ` in ` StaxXmlPullParser . java ` to simplify
added a configuration option for nested joins in multiple test classes to allow configuration of nested joins in tests
server : do n ' t allow admin only for root admin only
added support for JavacFileManager in SourceFileManager and modified CompletionTaskProcesor constructor to accept a cursor parameter to improve file
added configuration variables for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to enable
replaced JUnit assertions with Hamcrest matchers in KuduIOIT . java and XmlIOTest . java to improve
[ android ] fix nullness warning in util and metadatarenderer
fix offset calculation in SymbolMapReaderImpl . java and add a new test for symbol file mapping in LineTcpConnectionContextTest . java to
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and its associated methods from ` jooby . internal ` to streamline the codebase by eliminating
refactor ThreadlessExecutor to remove the dependency on the shared executor to simplify the code and improve readability by eliminating unnecessary dependencies
refactor DateTimeFormatter to improve error handling and add unit tests for date formatting in TestDateTimeParsing to enhance robustness and ensure proper handling of null
rename CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and update method names from CHUNK _ LENGTH to CHUNK _ LENGTH _ KB to CHUNK _ LENGTH
added a new case WILDCARD in Types . java and created a new class T7034495 . java with generic interfaces to prevent cr
refactor loop structure in LotsOfEvents . java to improve readability to enhance code clarity and maintainability
refactor conditional statements in TransclusionDecideRule . java for clarity to improve readability and maintainability of the code
remove versionutils . getmicronautversion ( ) and use versionutils . getmicronautversion ( )
added tests for handling Area3DPtg name definitions in HSSFWorkbook to ensure correct retrieval and representation of the " Print _ Area
updated MindIconFactory to handle cases where the name string does not start with a slash to ensure that the icon description is consistently formatted
added an internalStateHandled parameter to the onHomeIntent method in LauncherCallbacks . java and LauncherCallbacks . java to enable handling of
refactor dependency tree preference handling in CxxBuckConfig . java to improve code readability and maintainability
added showDetails method to multiple activities and modified the FileDetailFragment to accept an activeTab parameter to enhance the functionality of the FileDetailFragment
changed method names from " $ apply " to " apply " across multiple files to improve clarity and consistency in method naming conventions
added a capacity check and a randomized state calculation for bytesAL in MinimalEncoder . java and updated sizes assertions in HighLevelEncodeTest
updated the ` SourceBuilder ` class to include additional fields and modified the output format to include additional fields to enhance output formatting for better readability
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter updates correctly after data changes
removed the method ` setDefaultWALSyncMode ` from the ` ShadowSQLiteConnection ` class to streamline the code by eliminating
updated type checking in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correct type handling in the
remove unused method in defaults3crtasyncclient
updated password error messages in ParserTest . java to reflect the correct length requirements for corrupted streams
improve test failure message in hazelcasttestsupport
replace bailout with an exception in GraalCompiler . java and modify ifNode handling in GraphBuilderPhase . java to improve error handling and
[ geogebra ] fix nullpointerexception when create penimage ( )
refactor SQLXML class for improved readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method in YoBit and updated related classes to include it to enhance functionality by allowing users to specify
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in multiple files to standardize exception handling for heap operations
added StreamReadConstraints to StandardDataFlow with maxStringLength configuration to ensure proper handling of string length limits in JSON serialization
updated engine retrieval to use an empty string instead of a hardcoded value to improve robustness by avoiding potential null pointer exceptions
rename ` FullIterator ` to ` WheelIterator ` for clarity and consistency to improve code readability and maintainability by using a more
improve error message when a custom bug pattern be miss .
increased the timeout duration from 3 seconds to 10 seconds in LocalChunkProviderTest . java to improve code readability and maintainability by
changed the visibility of the uncomplete check lists menu from true to false to hide the uncomplete check lists menu item to improve user experience by
refactor DefaultResultSetHandler to use resolveDiscriminatedResultMap and introduce Contract class for handling contract data to improve code clarity and
added null check for defaultHome and unregistering the receiver if it is null to improve robustness by preventing potential NullPointerExceptions when defaultHome
added @ VertxGen annotation to PumpImpl . java to enable compatibility with Vert . x code generation framework
removed unnecessary casting in FileDetailFragment and OCFileListFragment to improve code readability and maintainability
added trimming of leading and trailing spaces in ConfigAttributeEditor . java and created a test for it in ConfigAttributeEditorTests . java to
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux classes to improve code organization and maintainability
[ svm ] make dynamichub . singlemodulereference public and add getunnamedmodule ( ) method .
updated the relKind assignment logic in DatabaseMetaData . java to set " SYSTEM TABLE " based on the presence of " pg _ " to ensure
[ java ] deprecate agent . tier _ ENTERPRISE _ PLUS _ VALUE in favor of deprecate
updated the default value of RQST _ FIELD _ DESC from ' - 1 ' to ' 1 ' in ThriftHiveMetastore
added a new module - info . java file for the core runtime module to define exports and dependencies for better modularity and
added flush state handling and fill state checks in SslConnection . java to ensure proper flushing and fill interception behavior during SSL connection processing
log4j2 - 1343 add logmanager . getlogger ( ) to log4j2logdelegatefactory . createdelegate (
refactor ExecutionEnvironment , TestHelper , Test7029048 , TestHelper , and TestHelper classes to improve code clarity and
refactor ExecutableFindOperation , MongoOperations , ReactiveFindOperation , and ReactiveMongoOperations classes to improve code organization and maintainability
updated the default value of " org . postgresql . ssl . LibPQFactory " from null to " org . postgresql . ssl .
added a failing test annotation to the TestInterProcessSemaphoreEdges class to temporarily disable the test until it is currently failing
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names for better readability
added OSvTerminal class and updated TerminalFactory to handle OSV and OSV _ CPUS environment variables to enhance compatibility and support for OS
added support for additional file types in the ClassType class to ensure compatibility with multiple file types in the application
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to improve performance and maintain insertion order
added a condition to the for loop in XPathEntityProcessor . java to ensure all elements are processed in the same order as names and values are
refactor WebSocketPolicy class for improved readability to enhance maintainability and facilitate future updates
changed access and access permission methods from static to instance variables in ShadowTelephonyManager and ShadowWifiManager classes to allow multiple instances of
standardmessageresolver : add resolvemessage ( ) method to support resolution of template and default message
updated class declarations in AsmUtil . java to use Class < ? extends ClassVisitor > instead of ClassVisitor to enhance type safety and prevent
added new ` LoggingAuditService ` and ` UaaAuditService ` interfaces for logging user authentication success , failure , and non - existent users
added nullability annotations and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robustness
fix issue with @ abstract method in @ beandefinitioninject ( # 4891 )
camel - 16462 : camel - http - make it easy to configure the http proxy via system property
updated the maximum encoding version from " 1.1 " to " 1.2 " to ensure compatibility with the latest encoding standards
added a call to ` jdk . internal . util . StaticProperty . jdkSerialFilter ( ) ` in ` System . java `
improve log message when pool size be enable .
replaced ` getScroller ( ) . forceFinished ( true ) ` with ` getOverviewPanel ( ) . forceFinishScroller ( )
updated the method parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` and added an import for ` ConfigUtils
added ` isError ( ) ` and ` error ( ) ` methods to ` ValidationReport ` and updated ` DisallowValidator ` and ` Ref
refactor inlineQsb initialization to use closestProfile instead of displayOption to improve clarity and maintainability of the code
updated the ` createClassPath ` method to throw exceptions and modified URL decoding to ensure proper handling of special characters in the path to improve robustness
updated regex patterns in TransformSteps . java for parameter validation to enhance flexibility in parameter validation
added null checks for ` prop ` and ` image ` before setting ` retinaProp ` in ` PGraphicsJava2D . java `
replaced hardcoded value ` 60 _ 000 ` with a variable ` timeoutMs ` in ` FaultToleranceTest . java ` to improve code
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments . java to ensure the correct Docker image is used for the application
[ java ] use system . gc ( ) instead of system . gc ( ) in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced the ` createHardLink ` method with a ` copyFile ` method for copying files to improve code organization and error handling when copying files
rename method ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in method naming
[ pytorch ] make sure all the device be in the desired device ( # 1193 )
added a conditional check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in ` NotesHelperTest ` and ` GeocodeHelperTest `
added new GasLimitRule and ParentGasLimitRule to CommonConfig . java to enhance rule management for frontier configurations
changed the visibility of ` setupData ( ) ` from public to private in ` BaseAssumptionsRunnerTest . java ` to restrict access
rename ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and update related references to clarify the purpose
added a null check for the endStream before closing the deframer in TripleServerStream . java to ensure proper resource management and prevent potential
[ hotfix ] [ doc ] add site . baseurl to documentation for restart strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to ensure SQL parsing and deparsing functionality works correctly for
refactor Common class to improve code readability to enhance maintainability and facilitate future updates
refactor LauncherInstrumentation to use a context layer for better context management to improve code readability and ensure proper context layer management during app
refactor StreamExecDeduplicate class implementation to improve performance and maintainability of the code
added a warning log for Kafka message sending errors in KafkaSubscriber . java to improve error handling and logging for better debugging
dataes - 663 - add support for persistentpropertyaccessorfactory in simpleelasticsearchentity and simpleelasticsearchpersistentproperty
geos1d and geosegment3d : fix setcoord ( ) to return true if point be undefined
fix issue with swipe up on right and left in the space bar .
nramestimator : do n ' t compare the value of the same key so that it do n ' t have to be compare by
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . ScenarioScoped ` across multiple files
updated the parameters for getFolderIcon in StatsLogCompatManager . java to include more detailed information about the folder icon
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file TestSkeletonPredicates . java to implement a testing framework for skeleton predicates in the compiler
refactor SelectionHighlighter to improve object comparison and hashing functionality to enhance code clarity and maintainability while ensuring proper comparison and hashing behavior
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmUtil ` to use it to
replaced the ` @ DisabledIfSystemProperty ` annotation with the ` @ Disabled ` annotation in multiple test files to simplify the test configuration by
updated the condition in JansiWinSysTerminal from ` ! = 0 ` to ` = = 0 ` to ensure that the console is
added null checks for the buffer object in the setInBuffer method and updated method names for consistency to improve robustness by ensuring buffer capacity is
solr - 1343 : fix test to work on window
updated operating system checks in AutoUpdaterServerProperties . java to differentiate between Windows and MacOS versions to ensure compatibility with different operating systems and
replaced the ` lockFile ` variable with ` lockName ` in the ` Lock ` class to improve clarity by using a more d
replaced the variable ` appIcon ` with ` allApps ` for better clarity to improve code readability and maintainability by using a
refactor ` ClientDatagramEndPoint ` to use ` ClientDatagramEndPoint . this ` instead of ` Invocable . InvocationType `
updated the GET _ STEP _ EXECUTIONS string to use " order by " instead of " oreder " and " order by "
updated button handling in LwjglInput . java to ignore unknown buttons to improve input processing by ignoring unknown buttons
added tests for approve and reject functionality in TaskRestRepositoriesIT . java to ensure proper handling of authorization for claimed tasks
replaced instances of ` logger ` with ` logger ` across multiple classes to standardize logging practices and improve code readability
updated the expiration time parsing logic in SsoAccessTokenProvider and modified method visibility in SsoAccessTokenProviderTest to improve code clarity and ensure
[ geos - 8470 ] fix test failure on macos - github
add miss test case for camel - cdi
reformatted conditional statements in JFrame . java for consistency to improve code readability and maintainability
added a null check for the database connection before executing the " ANALYZE SAMPLE _ SIZE 0 " statement in LibraryScanner . java to prevent
replaced the metricsContext variable with a call to initializeMetrics in SuggestComponent . java to streamline metrics initialization and improve code clarity
refactor file and folder handling logic in OCFileListFragment . java to improve readability and maintainability to enhance code clarity and ensure
updated configuration value from " yes " to " no " in ScpServerTestSupport and modified loadKeys method in FileKeyPairProvider and Resource
refactor SourceVersion class for improved readability to enhance maintainability and clarity of the code
added a new test class ` ThreadFactoryTest ` for testing the ` MyThreadFactory ` functionality to ensure that the ` ThreadGroup ` class
refactor lock period retrieval to use a new method to improve code readability and maintainability by centralizing lock period logic
added a new TicketModel instance to EditTicketPage to enhance ticket management functionality
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature for dimiss apps
updated constructors in various assertion classes to include a selfType parameter to ensure proper type casting for better type safety in assertions
updated MENU _ QUOTE constants and added menu item handling in TweetActivity . java to enhance user experience by allowing users to quote twe
fix a bug in the jmeterthread ' s interrupt lock to prevent another start .
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and update related logic to improve clarity and specificity regarding playback
added a conditional check for the result before offering failure in ServerHTTP2StreamEndPoint to ensure that failure is only sent when the result is
updated terminology from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and "
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during concurrent execution
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` MockRestAdapterTest ` , and ` RestAdapterTest
reformatted code for better readability to improve code maintainability and clarity
added support for using unique column names in Hive result set configurations to ensure that unique column names are correctly retrieved from the database
refactored code to make it easy to update the example text when voice change .
added validation for invalid sessions in Session . java and a corresponding test in SessionHandlerTest . java to ensure that invalid sessions are properly handled and
hhh - 15108 - tweak to not ignore exception in aggregateclassloader . findclass ( )
change the key pair generator from 256 to 255 in JceX25519Domain . java to accommodate a wider range of cryptographic
added codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41 postings
[ hotfix ] [ runtime ] add debug log for empty header list
added a new algorithm identifier " RSA / ECB / OAEPPadding " and modified the initialization of AlgorithmParameters to check for null to
update platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple Java files to ensure compatibility with the latest
updated exception handling in DebugSourcesResolver . java to include SecurityException to improve error handling and provide clearer diagnostics during source resolution failures
modified the condition for returning UNIX _ SOCKET in AbstractTest . java to ensure proper handling of Unix - like transport configurations
updated error handling in FileUploadUtils and modified return values in ControllerConf and UploadRefreshDeleteIntegrationTest to improve clarity of error reporting and
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple files to improve memory management by using ` newUnsafeByteBuffer `
changed the USE _ PIPELINE _ DOWNLOADER constant from false to true to enable streaming functionality by default
replaced ZONE _ OFFSET setting with DST _ OFFSET setting in SimpleDateFormat and added a new class Bug7130335 for testing date
replaced direct access to ` mRollo . mState . iconCount ` with a local variable ` iconCount ` for better readability
server : fix npe in case the vm do n ' t have default hypervisor
refactor StringBuffer class for improved performance to enhance efficiency in string manipulation operations
added a new variable ` ruleUID ` to the ` RuleResource ` class to store the rule ' s UID in the resource
added a null check for the listener before unsubscribing to prevent potential NullPointerException when listener is null
added a property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and updated the ` toJsonString ` method to
make access _ table public so that it ' s accessible from other package .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to reflect the absence of resources at a location to improve clarity and accuracy of
improve error handling in xmpptransport . dorun ( )
refactor multiple Java classes related to control functionality to improve code organization and maintainability
refactor AmbariManagementControllerImpl to include additional parameters for cluster suspension to improve code readability and maintainability by reducing
updated copyright year from 2007 - 2009 to 2009 in FindsByCssSelector . java to update the copyright year to reflect the
removed the declaration of wfields from the writer to streamline the code by eliminating unnecessary variable assignment
added encryption and signing key size settings to OAuthProperties to enhance security by allowing dynamic configuration of encryption and signing keys
hbase - 20614 add getcolumnfamilycount ( ) method to htabledescriptor . getcolumnfamiliarcount ( )
replaced the usage of ` AllowedResourceAliasChecker ` with a lambda expression for better readability to simplify the alias check logic by using a
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , serialization , and package - info classes to improve code organization and maintainability
[ java ] add reset method to cluster so that it can be use by the service agent .
updated the increment operation for the currentChunkID in ChunkedWriter . java to ensure the currentChunkID is correctly reflected in the sequence file
added a new abstract class ` AbstractJobExecutor ` that implements ` JobExecutor ` to facilitate the execution of batch jobs in a
replaced the return statement with a break statement in the replay method to ensure proper flow control during the replay process
rename ` hugeStaticBase ` to ` staticBase ` and update references accordingly to improve clarity and consistency in naming conventions
added a method to retrieve service IDs based on the discovery status of the Consul client to ensure that service IDs are returned only when discovery is enabled
replaced ` Float . floatToIntBits ( ) ` with ` new SecureRandom ( ) . nextInt ( ) ` in ` DB . java
add option to verify runtime compilation framestates during bytecode parsing
added new variables ` currentStart ` and ` baselineStart ` to ` TimeOnTimeComparisonHandler . java ` to ensure proper handling of time
added methods to handle abstract methods in ` CallsRealMethods ` and created a new test for abstract methods in ` CreatingMocksWithConstructorTest
updated ` NashornScriptEngine ` and ` Context ` classes to use ` Class ` instead of ` String ` for package access checks to
refactor ContextPathPluginTest to extend AbstractPluginDataInit and add error configuration setup methods to improve test structure and ensure proper initialization of context
renamed variable ` dtm ` to ` model ` for clarity to improve code readability and maintainability by using a more descriptive variable
added support for handling a new test protocol request related to touch interaction service ( TIS ) to improve device testing capabilities by accurately reflecting the presence of TIS in related functionalities
refactor connection handling in ConnectAction . java to improve readability and maintainability of the code
replaced instances of ` String ` and ` ShowOptions ` with ` BuildTarget ` and ` BuildTarget ` in ` TargetsCommand . java
added new classes ` ArrayHelper ` , ` Comparables ` , ` Enums ` , ` Objects ` , and ` NativeRegExp ` to
added additional input handling for HOME and END operations in the Less . java file to enhance functionality to support additional input types for home and end operations
removed synchronization around setting plots in PlotHandler . java to simplify the code by eliminating unnecessary synchronization
replaced the sharing implementation with a chooser intent for improved user experience to allow users to select from available applications to handle the shared resource more effectively
changed the constructor visibility of the Roster class from public to package - private to restrict access to the constructor for better encapsulation
added basic constraints to certificate generation in TestUtils . java to enhance certificate generation flexibility by allowing basic constraints
added a new test method ` testFixedNestedTransform ` in ` TextVisualRegressionTest . java ` to ` TextVisualRegressionTest
updated the assignment of ` ps ` in ` TrieDateField ` and ` TrieField ` to use ` precisionStep ` instead of ` Integer
removed the TaskbarStateHandler class and its associated getter and setter methods from BaseQuickstepLauncher to streamline the codebase by eliminating
added a new file ArrayLength . java to test reflection behavior for array types to ensure that array types return a zero length array and reflective
wait for hazelcast process to be destroy before shut down the hzstartit
replaced ` @ Singleton ` with ` @ PostConstruct ` and introduced ` @ ApplicationScoped ` annotation in ` ApplicationSettingsService . java `
fix issue with negative value in safepoint .
updated threadNameField to use " Ljava / lang / String " instead of " [ C " and changed the return type from charArray
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
added a protected Stroke variable and updated stroke handling in PGraphicsJava2D . java to improve flexibility by allowing customization of stroke
[ calcite - 4892 ] add test for window and groupby with dynamic star
added a new method ` findInterestingChildren ( ) ` in ` Comment2000 . java ` to handle child comments in the ` Comment2000
added import for Messages and set the status code to a warning icon in HTTPServer . java to improve user experience by providing a visual indication
remove deprecate method from pgraphicsopengl . getmodifiers ( )
[ graal - 464 ] fix node cost for amd64 count leading / trailing zero node .
fix npe in entityparser when content - transfer - encoding be not set
refactor Locale class to improve code readability to enhance maintainability and ease of understanding for future developers
added a ` clearLog ` button and its getter method to ` ErrorConsoleController ` and implemented the ` clearLog ` method in ` Error
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated Debug , CaptionMap , DummyCaptionMap , LocalizedCaptionMap , LocalizedCaptionMap , and LocalizedCaptionMap to use Locale
added connection pooling functionality to multiple test classes to ensure proper resource management and avoid potential memory leaks
[ java ] add opera blink support to the defaultdriversession
do n ' t print stacktraces to the user when download fails
added new product definitions for LIFX Mini White to Warm in LifxProduct . java to enhance the functionality of the LIFX
added async support to the OverseerCollectionProcessor and updated related classes to utilize this feature to enhance the system ' s ability to manage
refactor PGSQL _ PK _ BYTES _ LIMIT and PGSQL _ PK _ BYTES _ LIMIT to PGSQL _ DEFAULT _ TCP _ PORT
updated LogPanel initialization to use the repository reference ID if it is empty to ensure the log panel uses the correct repository model when no referenceid
corrected the unit type from UNIT _ Y to UNIT _ XYZ in the SkeletonInterBoneWire . java file to ensure the correct
added a ` browserDestroy ` method to ` AndroidImplementation ` and refactored the ` destroy ` method in ` AndroidImplementation ` to improve
added a method call to wait for an active collection in AutoScalingHandlerTest to improve test reliability by ensuring the collection is ready before proceeding
refactor loop structure in ScreenTerminal . java and update Tmux . java imports in Tmux . java to improve readability and
updated the condition to check if the controller is active or paused to ensure proper handling of controller states in SoftResetAction . java
disable texture pack reloading on - disc stream cache
updated parentFolder assignment logic in Request . java and RequestV2 . java to ensure proper resource retrieval based on media renderer conditions
fix wrong variable name in networkofferingvo . ispersistent
added a close method to the FileOutputStream in AndroidImplementation . java to ensure proper resource management and avoid potential memory leaks
added error handling for HTTP 403 responses in StandardGitHubRepository . java to improve robustness by catching Forbidden exceptions and providing clearer error messages
log4j2 - 1343 add getoriginal ( ) to messagefactory2adapter and fix unit test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated the regex pattern in Version . java from " 1 , 2 " to " 3 " to ensure accurate matching of version numbers in the application
updated tooltip delay settings in ExtractionModelFrame . java to improve user experience by allowing more time for tooltip display
refactor ProjectCommand to use passedInTargetsSet instead of fullGraph and targetGraphAndTargets to improve code clarity and maintainability by
added timezone setting and assertion in TimeTest . java to ensure correct formatting of time values in the test
refactor MediaSessionConnector class to improve code readability to enhance maintainability and facilitate future updates
simonstewart : use the endpoint handler instead of the jssefactory
updated the accuracy display string from ` getAltitude ( ) ` to ` getAccuracy ( ) ` in GpsLoggingService . java to
added a method to check if futures is enabled in BinanceExchange and updated BinanceAccountService to use it to ensure proper handling of futures
update adminaccountmanagementservlet and adminaccountmanagementhelper to use instructor course and instructors table
set accept queue size to max worker thread in ThriftHttpCLIService to improve resource management by limiting the number of worker threads
replaced direct calls to ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to
added a check for SSL scheme in JmsFactory to ensure proper handling of SSL connections
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test cases in ` TestWindow
updated the calculation of the duration in GCInspector . java to ensure that the duration accurately reflects the absence of previousTotal instead of
fix npe when parse javadoc on method with line comment .
replaced the deprecated ` getUnsafe ` method with a new method ` isOsx ` for checking operating system architecture to simplify memory management and
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing or
hbase - 2591 add procid and procid to hbaseadmin # getdescription ( ) to help debug
[ java ] allow cxf to configure the service class for the cxf component .
refactor YamlChangeLogSerializer to use a container map for database change logs instead of a hardcoded string to improve code readability and maintain
updated print statements in SchemaPrinter . java to include a newline character to improve readability of the output for better debugging
refactor ` DebugRoadRegen ` and ` SchematicHandler ` to use ` C . NOT _ IN _ PLOT
updated context usage from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure proper context usage for
updated the @ GeneratedValue annotation to include a name attribute for the generated generator in multiple classes to ensure compatibility with Hibernate ' s generated generation
removed the ` country ` parameter from the ` getSystemTimeZoneID ` method in the ` TimeZone ` class to simplify the method signature by elimin
updated write method to include position and remaining values in BZip2Codec . java and adjusted ByteBuffer allocation in TestBZip2Codec . java
move logging to html5 . util . debug . geogebralogger
added a new constant VALUE _ TYPE _ EMPTY and modified the type initialization logic in the Value class to improve clarity and maintainability of the
replaced ` = = ` with ` . equals ( ) ` for string comparison in ` GroupManager . java ` to improve code readability
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class for improved clarity to enhance maintainability and readability of the code
added a new method ` newInstanceExact ` to the ` TargetGraphFactory ` class and updated its usage in ` VersionedTargetGraphBuilderTest `
patch by jbellis ; review by brandonwilliams for cassandra - 113
added a new ArtifactVersionAdapter class and updated Gson initialization in MetadataCollection . java , modified ModMetadata . java and ModMetadata . java to
refactor the handling of previous and previous elements in NativeArray . java to improve clarity and maintainability of the code by using a boolean
updated file handling logic in FileUploader . java to use remote parent file IDs instead of local files to improve clarity and functionality of file management
added a new file UTF8ReaderBug . java to handle supplementary characters in XML input to ensure proper parsing of supplementary characters in XML
added unit test base on user forum issue
updated test cases from " btcusd @ ticker @ depth " to " btcusd @ depth20 @ depth " in BinanceIntegration
added a resetAllocation method to the Wrapper class and invoked it in SimpleParallelizer to reset allocation states for better resource management
removed import of AssertTree from AmbariManagementControllerTest . java to streamline dependencies by eliminating unnecessary dependencies
refactor property handling in mmm Agent . java and add a new class AgentCMETest . java for testing to improve thread safety and
refactor ModelUtils class for improved readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert class for improved clarity to enhance maintainability and readability of the code
updated width and height calculations in Legend . java to ensure index index is within bounds to prevent potential index out - of - bounds errors
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` and `
replaced ` get ( fieldName ) ` with ` getValues ( fieldName ) ` in ` MoreLikeThis . java ` and added a loop for
replaced CxxLink rule resolver with BuildTargetSourcePath in Omnibus . java to improve code clarity and maintainability by
added a disabled status message for versioning in CommandDownloadLatest . java to enhance user experience by providing feedback when versioning is disabled
changed the data type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` field in ` Media
updated argument formatting in AidlStep . java and GenAidlTest . java to improve clarity and consistency in command - line
[ findbugs ] add test case for issue79 and issue79
added a todo comment to the FakeHttpLayer class to improve code clarity and maintainability
replaced error handling with revocation of leaders in EmbeddedLeaderService to improve clarity and functionality of leadership revocation
refactor compositediscoveryclient to use reactive list instead of stream
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ doc ] add description for job computation recovers from task failure
renamed methods and variables from ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` for clarity to improve code readability and
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 2.2 .
refactor test setup in AuditAliasCommandIntegrationTest to use a setup method to improve test isolation by ensuring the workspace is setup before each test
added logging statements for recommendation table max height and widget down scale in WidgetsFullSheet and WidgetsRecommendationTableLayout to improve visibility
( chore ) camel - cxf : disable some test that fail on ci
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging exceptions during periodical refresh operations
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to utilize a new method for adding providers to improve code clarity and
added a method to check the default background color in HSSFCellStyle and refactored background fill logic in HSSFPalette to
refactor ZonedDateTimeFormatterBenchmark class for improved readability to enhance maintainability and ease of understanding for future developers
refactor DistributedUpdateProcessor to use a new method for determining buffer updates to improve code readability and maintainability by reducing duplication
updated null check for motor and stageNr in SimulationListHandler . java to ensure proper handling of null rocket stages
updated the command ' / editreplace ' and ' / editscript ' to include ' ToReplaceID ' and modified the ` getItem ` method
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
changed the declaration of the processor variable from non - final to final to enforce immutability of the processor variable
added a listener to handle write failures in WritableKeyProcessor to ensure proper handling of end - of - stream during write operations
added " CUBE " to the MySQLDatabase class to support CUBE functionality in database operations
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the rm operation
renamed the class ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related
refactor DefaultOkHttpClientFactoryTest to use httpClient ' s getter methods instead of reflection to improve code readability and maintainability by reducing
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the operating system in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 1353 fix for [ web ] draw indexed string with non - vertical split pane
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the exception handling to include a conditional check for
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a shared preference for pull unread status in TalonPullNotificationService to track the number of unread pull notifications
added a check for object kind before processing the object stamp in IsNullNode . java to ensure correct handling of object types in IsNullNode . java
updated ` Box2DTest ` , ` Pong ` , ` OrthographicCamera ` , and ` OrthographicCamera ` classes
refactor layout management for comments RecyclerView in ViewPostDetailFragment . java to improve code readability and maintainability by reducing redundancy
changed log level from trace to warn in CLIService . java to improve logging severity for background operation abortal events
fix a bug where methodinstance . flags ( ) and methodinstance . flags ( ) do n ' t exist .
ggb - 10 + touch gestures now work on ie10plus
updated the ` getNotificationUsers ` method to include ` deviceId ` as a parameter to enhance functionality by allowing users to access specific notifications based on
updated the baseUrl in CGIARProvider . java from version 4.1 / 6.5 _ TIFs to SRTM _
refactor MotifFileChooserUI to remove property listeners and add a new class bug6520101 for testing the Motif look
change the return type of the handle method from void to boolean and update its implementation to indicate success or failure to enhance functionality by indicating success or
refactor methods in BuildRuleResolver for improved clarity and error handling to enhance code readability and provide more informative error messages for
added visibility control for transportSpinner based on makingShortcut flag to improve user interface responsiveness based on shortcut status
added null check for ` attributes _ field ` in ` Attr . java ` and created new classes ` T7043371 . java `
modified backPressed methods to return boolean values instead of void in multiple fragments to improve user experience by preventing accidental back presses
added support for the LONG _ VIEW _ INDEX _ ENABLED attribute in QueryServices and QueryServicesOptions , and updated data type retrieval in MetaDataClient
corrected the string concatenation syntax in SDRTrunk . java to ensure consistency in formatting
replaced direct path handling with StringUtils . cleanPath in PrivateKeyParserTests . java to ensure the path is properly cleaned before processing
removed the columnPosition parameter from the diffDropColumn method in MTable . java to simplify the method signature and improve code readability
updated IndexWriter and IndexWriterConfig instantiation to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the
added functionality to disable column family checks in ImportTsv . java to enhance flexibility by allowing users to choose whether to disable column family checks
[ java ] rename logrecordingchannel to logsubscriptionid to avoid npe
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) ` and added voice
added a condition to skip processing for a single JSON node in PoloniexStreamingService to improve performance by avoiding unnecessary processing for single
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
updated resource bundle application to include locale and system class loader to enhance resource loading flexibility by incorporating default locale and class loader
[ wasm ] normalize array creations kotlin for kotlin
updated PerSegmentSingleValuedFaceting . java to include a check for zero count before incrementing to ensure that the term enum forward does not
refactor authorList assignment to use Objects . firstNonNull for improved null safety to enhance code readability and maintainability by using a more
added OSGiTest . java and modified module - info . java to include static jdk . unsupported and added OSGiTest .
refactor the controller service enabling logic into a separate method ` isDependentServiceEnableable ` to improve code readability and maintainability by
hbase - 20660 hbase . hbase . testasyncprocess . testasyncflush ( ) should not call setAutoflush ( )
fix ( test ) : add test for annotation with any element in a class
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and its implementation in ` SimpleFeatureImplTest ` and ` Property `
removed ` HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method signatures
refactor RelyingPartyRegistration class for improved clarity to enhance maintainability and readability of the code
removed the ` enableLogging ` method from the ` JavaCompiler ` class to simplify the code by eliminating unnecessary logging functionality
added a new class ` InJavaSourceSet ` and modified ` UsesJavaVersion ` to use ` Optional ` instead of ` Nullable ` to
updated resource loading logic in TestGDALParser . java to use a variable for the fits command to improve code readability and maintainability by
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter with specified attributes
removed the check for useExtStorage in the SDK version check to simplify the condition for better readability and maintainability
added INDEXER _ NO _ COMMIT constant to IndexerMapReduce and modified IndexerOutputFormat and ObjectCache to use Nutch
api : do n ' t allow the disk offering id to be pass whilst create volume
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy notes to improve clarity and correctness of
added checks for ` amountToAdd ` and ` amountToSubtract ` types in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to test error handling for specific error types in the Jooby framework to ensure
replaced ` RuntimeException ` with ` Integer . signum ` and removed the ` signum ` method from the ` PositionUtils ` class to simplify the
added a condition to hide the text in the holder if the condition is met to ensure the text is hidden when certain conditions are met
fix ( ast ) : check for ctreference in import
simonstewart : remove unnecessary method reference in xpidriverservice
added a new class ` LiquidBlock ` that extends ` BlockPickup ` and modified access modifiers for ` flowingFluid `
http : / / issues . apache . org / jira / browse / amq - 2902 - add check for exception in log
updated time zone value from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate
renamed variable ` existingObservation ` to ` distinctObservation ` and updated related logic in ` DistinctErrorLog . java ` to
updated the system property checks for Nightly , weekly , weekly , and BadApple to include the TestGroup annotation to enhance
renamed the method ` createLogger ` to ` getOrCreateLogger ` and added a null check for the logger before creating it to improve clarity
do n ' t deny access to reflection in graalcontext . getcontext ( )
replaced direct calls to ` getRGB ` with ` getDataElements ` and ` setDataElements ` in ` PGraphics2 . java ` to
updated HiveAbstractReader to include partition details in verifyAndAddTransactionalProperties calls to ensure accurate transaction properties are added for the table and partition
updated the logic for determining the shouldScrollOverlay variable and added a check for the last overlay ' s scroll state to ensure proper handling of overlay
hhh - 10660 - add hibernate support for unmodifiable batch builder
improve error message when an unexpected input be reach during analysis .
added a new test class ` MockWithStaticStateDemo ` and implemented the ` spyingOnAClassRetainsState ` test to verify
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL parsing and deparsing functionality
added null check for ' ugi ' before calling ' doAs ' in SecurityUtil . java to handle potential exceptions when ' ugi '
refactor error handling in OpenALMusic and OpenALMusic classes to use a local variable to improve code readability and maintainability
camel - 14284 : fixed endpointhelper . reslovestringparameter so it can be use in camel - quartz .
updated precision and scale handling in RexNodeConverter . java to ensure accurate SQL type creation based on the actual precision and scale values
added null checks for vendor and device properties in WebAuthnMultifactorDeviceProviderAction . java to avoid potential NullPointerExceptions when device properties
updated the method call to use ` Long . toString ( ) ` instead of ` String . toString ( ) ` for the account update to ensure
refactor selection handling in BasicFrame and DesignPanel to use a dedicated method for highlighting assembly children to improve code readability and maintainability
added parameters and configuration for the long running time in the Args class to allow dynamic configuration of the JVM ' s long running time
corrected the spelling of " AT _ MOST _ LOW " in FindRefComparison . java and added a new class Ideas
updated import statements and modified ServiceConfigurationError throwing in HttpServerProvider , HttpsServer , ScriptEngineManager , and FtpClientProvider classes to
( chore ) camel - geogebra - xssdecimalbinding : use toplainstring ( ) instead of tostring ( ) to
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
added a condition to check if the reference database is equal in the MissingUniqueConstraintChangeGenerator class to ensure correct handling of unique constraints based on
refactor Android property handling in IjProjectTemplateDataPreparer . java to streamline code and improve readability to enhance maintainability and
replace assertEquals ( 0 , 0 , 0 ) with await ( ) . until ( 0 , ... ) . until ( 0 , ... )
added user _ args and is _ daemon in ChromeTraceBuildListener and its corresponding test to ChromeTraceBuildListenerTest to enhance the build process
svm : use modulesupport . getresourcebundle ( ) to avoid concurrentmodificationexception .
updated log message from " match limit " to " match order " in HepPlanner . java to improve clarity of log output regarding
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata from the TheRockExchange class
renamed ` FloatingDecimal ` to ` FormattedFloatingDecimal ` and added a ` strictfp ` class in ` ParseDouble ` to
removed unparseIdentifier from columnNamesBuilder in ColumnStatsSemanticAnalyzer . java to simplify column name handling by eliminating unnecessary unparseing
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified method signatures in ` BlockStatementTemplateGenerator `
added a check for non - synthetic methods in the ` InstantiateStaticClass ` class and implemented a new test method in ` Bug1282 `
removed the method call to projectFilesystem . getPathForRelativePath in WorkspaceAndProjectGenerator . java to simplify the code by eliminating unnecessary method
added pending reservation and condition handling in IkStepDefinition . java to improve resource management and error handling during message processing
changed ` equals ` and ` hashCode ` methods in multiple type classes to allow for subclassing of ` VarbinaryType ` and ` AbstractType
added a new method ` getSyncLevel ` to retrieve the ` SyncLevel ` enum and modified the ` defaultSyncLevel ` enum to improve
[ java ] use try - with - resources in controlcommandstest . testpause
added a condition to check if the slice state is not RECOVERY in RecoveryStrategy . java to ensure that recovery logic only proceeds when
fix checkstyle issue in opencv / opencv / opencv _ core . java
added a sdkPath field and modified the makeProcessExecutorParams method to accept ExecutionContext as a parameter to enable dynamic SDK path resolution based on
[ hotfix ] [ blob ] remove write lock from transientblobcleanuptask
server : fix typo in log message for static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of
refactor BetterBlockPos class for improved clarity to enhance maintainability and readability of the code
updated the method to retrieve the proxy using the class loader to ensure the correct class loader is used for proxying
refactor version handling to use a dedicated method for displaying nightly warnings to improve code readability and maintainability by centralizing version string
added handling for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper formatting of SQL statements for Oracle database compatibility
added a new boolean constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to provide a
updated the server port in the HTTP request to use a dynamic port instead of a hardcoded value to improve flexibility by allowing dynamic port configuration
updated BLOB _ SIZE , PLAY _ MARGIN , PLAY _ MARGIN , and SLIDER _ MARGIN
added support for multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by enabling mult
reformatted method signatures in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ drools - 5352 ] fix checkstyle violation in java . lang . model
added methods to set and get the help page in PMS and refactored help page handling in HelpTab and LooksFrame to improve
added new files GeocodeProviderFactory . java and Constants . java to implement GeocodeProviderFactory and Constants interfaces to facilitate the
updated import statement from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache . lucene
[ hotfix ] [ test ] remove expectexception from optiontest and resourcemanagerimpltest
updated GATEWAY _ SERVER _ ID to use a constant from Protocol . GATEWAY _ SERVER _ ID and added conditional checks for object
updated condition checks in SegmentsInfoRequestHandler . java and modified collection creation in CollectionsAPISolrJTest . java to improve code readability and
updated the calculation of numPredictiveAppCols to account for phone mode to ensure correct number of app columns based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related logic in ` DrillJoinRelBase `
add a blockcontainer to remove a block from the build craft block . close # 399
updated layout parameters for drag target bar in DeviceProfile . java to improve layout flexibility for drag - and - drop functionality
changed the method call from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure the
updated HiveMetaStore and HiveMetaStoreClient to use null for standAloneClient and improved error handling in the local metastore
updated the ` getDisplayScript ` method to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` in ` Locale ` and added a
updated references from ` BASE _ URL _ PROP ` to ` ZkStateReader . CORE _ NAME _ PROP ` in ` Replica .
replaced ThreadLocalRandom with Random for random number generation to improve performance and reduce dependency on ThreadLocalRandom
added a check for launcher is ready before accessing backup properties to ensure backup operations are only performed when the launcher is ready
updated exception messages in Cell . java to include additional context to improve error reporting for better debugging and monitoring
added unit test for resilience in camel - resilience4j
renamed ` mBodySpace ` to ` setBarSpace ` and updated related getter and setter methods in multiple classes to improve clarity and
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated imports and modified file creation logic in FileMessageHistoryTest . java to utilize Hamcrest ' s TemporaryFolder to improve test
added multiple logger configurations for " express " , " quartz " , " reflections " , and " mongodb driver " in Grass
changed the ` highlightCnstScrRngQuery ` field to static and updated its setter and setter methods accordingly to improve performance by redu
updated the condition to check for the current workspace state in Launcher . java and added a getState method in Workspace . java to ensure proper handling
refactor multiple array assertion classes for consistency and clarity to improve code maintainability and readability across the assertion framework
added a cacheable check before notifying new templates in SnippetTemplate . java to ensure notifications are only notified when caching is enabled
added a new scope session variable and updated related classes to utilize it to improve scope management and enhance data import functionality
updated the SQL measurement table creation to include a primary key and added a test for primary key retrieval to ensure the correct data retrieval from the database
[ java ] rename ` -- permissions - config - path ` to ` -- permissions - config - file `
refactor session creation logic in HttpSessionContextIntegrationFilter . java for improved readability to enhance maintainability and clarity of debug log messages
added a new file ` TestIfWithDeadRegion . java ` that implements a ` Supplier < String > ` to test string manipulation with a
rename ` ` englishudd ' ' to ` ` englishusd ' '
replace concurrent access test with high resolution timer enabling and disabling in SnowflakeIdGeneratorTest to improve performance and reliability of concurrent access
added a static UI feature to the AppSettings and modified MainFragment to conditionally hide toast bar based on user settings to improve user experience by
refactor the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to improve code readability and ensure proper
replaced ` setParameter ` with ` setParameterIfAbsent ` and added null check for ` clientId ` in ` SamlRedirectLogoutHandler . java `
updated dialog messages in MEncoderVideo . java , NavigationShareTab . java , and PluginTab . java to use Messages . getString ( "
tika - 1343 add tika - ooxml and vnd . openxmlformats - officedocument . spreadsheet . sheet
added logging statements for glue and feature loading in Runner and updated related classes to improve logging clarity and enhance type safety to enhance debugging capabilities and
camel - 13556 : camel - eip - documentation - enricher - make it easy to configure the xml output in the maven plugin
add a synchronized method to remove version information for endpoints in MigrationCoordinator and update related tests accordingly to ensure that only known versions are processed during migration
added debug logging statements to DeviceConfiguration . java and refactored audio capture device handling in PortAudioAuto . java to improve traceability and
added ` WebsocketConfig ` class and modified ` ReactorNettyWebSocketClient ` to accept ` ShenyuConfig ` and `
refactor CacheValidationListener to implement the IuiteListener interface and introduce resultQueues for better management of invoked methods and test listeners to enhance
added a check for non - empty content length before adding it to the document to ensure that the content length is only added if it is not
refactored the solvingstatus logic into a separate method to improve code readability and maintainability
refactor time series creation logic into a separate method ` internalCreateTimeseries ` to handle potential ` PathAlreadyExistException ` to improve error
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean value is
changed access modifiers of methods in multiple classes from public to protected to restrict access to these methods for better encapsulation
cloudstack - 4892 : add isAllocatedorreserved flag to listvirtualnetwork command ( # 4892 )
removed compliance check for RFC2616 in HttpParser and updated test cases in HttpParserTest to simplify the parsing logic and ensure proper handling of
refactor thread initialization method to streamline error and output handling to improve code readability and maintainability by reducing duplication
added the ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created a corresponding test class ` EnvironmentTest ` to facilit
[ drools - 4892 ] add test for mvel type coercion after mvel 2.1 . 0
updated import statements and formatting in LoggingConfig . java and DbgPacker . java to improve code readability and maintainability
added exception message to the log message in ActionNode . java to improve error reporting by providing more context about the exception encountered during the construct process
do n ' t use ` ` tel : ' ' if it ' s ` ` tel : ' '
refactor visibility logic for sharedWithMeIcon in FileListListAdapter . java to improve readability and maintainability of the code
removed deprecated configuration for the HIVEOPTOPTSORTDYNAMICPARTITION in HiveConf . java and updated TestTxnCommands3 . java to
refactor ExecuteStatementOperation , Operation , SQLOperation , SQLOperation , SQLOperation , SQLOperation to
refactor BTCMarketsStreamingAdapters and BTCMarketsWebSocketSubscriptionMessage to use ` Arrays . asList ( ) ` instead of `
updated the assertion from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java ` to ensure the test
removed the onErrorInStep method from StepListenerSupport . java to simplify the code by eliminating unnecessary complexity
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 7554 fixed the issue of camel - netty - http do n ' t set the charset in the content - type header
replaced ` System . out . println ` with ` Log ` for logging in ` TestNonBlockingAPI . java ` to improve logging consistency
added a check to prevent index out of bounds errors when accessing the database connection list
add a new class ` MethodWithSameNameAsEnclosingClass ` that checks if a method name matches an enclosing class to ensure that the rule
added a new class ` ExtendedPlatformComponent ` and modified ` ManagementFactory ` to utilize it for managing platform managed objects to improve the management
replace single quotes in SQL strings in BasicQueryTest . java to ensure proper handling of single quotes in SQL queries
updated Bleutrade resource paths to include " org / knowm / xchange / bleutrade / dto / " in multiple test
refactor TextEscapeUtils for improved readability to enhance maintainability and ease of understanding for future developers
added a filter parameter to the FilteredQuery instantiation in AbstractSpatialFieldType . java and updated its usage in TestSolr4Spatial . java to
updated progress display logic in GpsLoggingService and added email sending in AutoEmailHelper to improve user feedback during email sending and ensure results are
replace ArrayList with HashSet in Inlinks and update related methods to improve performance and readability of the code
[ tradfri ] remove older result when stop scan
updated HiveMetaStoreClient and TestFilterHooks to include a filterAtServer parameter and modified testFilterForPartition method to accept a boolean parameter
added ` ` Abandoned ' ' status to the workflow lists in ` ` TicketModel . java ' ' and updated related lists in ` `
removed the default value of columnAliasPrefix in multiple platform classes to simplify the code by eliminating unnecessary assignment
updated LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer classes to use BytesWritable instead of Text to improve data handling
add a warning when run on a 32 - bit jvm on a 64 - bit jvm
pdfbox - 4892 : use copyobject ( value ) instead of copyobject ( value ) in copyobject ( )
added a new option ` DAEMON ` to the ` OptionEnum ` and implemented daemon mode handling in ` TerminalClient ` to enable
added a new file ` FlushIndexTask . java ` that implements a performance task that flushes the index buffer to improve performance by reducing
patch by jbellis ; review by gdusbabek , review by brandonwilliams for cassandra - 113
added support for the SEASONS output in MediaLibraryFolder . java to ensure compatibility with the new output requirements
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket to check for IPv6 availability to ensure that the socket is
updated grid size points in GridSizeMigrationTask . java to ensure correct grid size points are added to grid size steps
updated method references from ` getName ( ) ` to ` name ` in ` SerializerPojo . java ` to improve clarity and consistency in
added read - only checks and initialization methods in Context . java to ensure transactions and operations are only performed when the context is read - only to
refactor LookAndFeelCommand class for improved clarity to enhance maintainability and readability of the code
adjusted the calculation for ` lastRunEnd ` from ` floor ` to ` ceiling ` in ` BlockBoxing . java ` to
added specific exception assertions for EOFException in GracefulStopTest to ensure proper exception handling for EOFException scenarios
replaced the use of ` lock . lock ( ) ` with a synchronized method ` put ( httpRequest ) ` and ` remove ( httpRequest )
refactor NetworkParameters class for improved clarity to enhance maintainability and readability of the code
updated account asset optimization setting logic in DynamicPropertiesStore . java to ensure account asset optimization is set based on the current configuration
added a new constant J9 _ GC _ POLICY _ NOGC to the VM class to manage garbage collection policies effectively
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to improve robustness by throwing a P2pException for invalid contract
[ java ] remove strictexception checking for instanceof and instanceof
updated resource path in HelpContent . java and improved logging messages in HelpContent . java to enhance localization support and provide clearer error messages
added a new file ` ProcessorInfo . java ` to manage CPU processor settings to enhance performance monitoring capabilities for Linux environments
add a stylesheet option to the PrintingBugReporter class to allow users to specify a custom stylesheet for HTML output generation
refactor logbackloggingsystem to use a non - null value for the logbackxmllocation property
refactor ` handleUpdate ` and ` handleUpdate ` methods in ` HostLevelParamsHolder ` and ` ServiceComponentRecoveryChangedEvent ` classes to
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to ensure handlers are created by default based on user configuration
refactor the handling of RustDepType to use a switch statement to improve code readability and maintainability by using a switch statement for
added ` queryParams ` parameter to ` oauth2LoginLinks ` and implemented error handling in ` oauth2LoginLinks ` method to enhance functionality by
hbase - 23273 halfstorefilereader do n ' t seek to the first key before seek to the first kv in the file
hhh - 10616 - introduce new generationtiming . always ( ) and deprecate it .
[ scene2d ] add test for layerNormNan ( )
replaced the method ` seeShareFile ( OCFile ) ` with ` getFileOperationsHelper ( ) . showShareFile ( ) `
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of LiquibaseUpdate Mojo
convert the " proxyType " value to uppercase when retrieving it from the raw string to ensure consistency in the proxy type representation
add mod _ minecraftforge . getversion ( ) and mod _ minecraftforge . load ( ) to make it
refactor JdbcDatabaseSnapshot to improve cache handling for column retrieval based on case sensitivity to enhance performance and maintainability of column retrieval logic
added a new Container with a custom border image and a label to the Container in CSSBorderTest . java to enhance the visual appearance of
added conditional configuration for RetryAutoConfiguration and a new RetryInterceptorAutoConfiguration class to enhance the configurability of the RetryAutoConfiguration class and
replaced LayoutParams . FILL _ PARENT with LayoutParams . MATCH _ PARENT in CellLayout . java to improve layout flexibility by allowing matching of
updated the calculation of parentTaskName to use the current time instead of the current time to ensure the task name accurately reflects the current
added error handling for invalid Add Service request in ServiceResourceProvider . java to improve robustness by throwing a detailed exception for invalid input
refactor conditional checks in IndexDatabase . java for clarity to improve readability and maintainability of the code
fix for [ giac ] [ giac ] do n ' t use real ( x ) for round ( x )
refactor AnonCipherWithWantClientAuth class for improved clarity to enhance maintainability and readability of the code
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these methods are outdated and should not be used in future development
refactor JLayer class for improved performance to enhance performance and maintainability of the code
simonstewart : use assertiontask instead of sleep
renamed the method ` encodeInternal ` to ` saltedPass ` for clarity and consistency to improve code readability and maintainability by
replaced direct assignment of ` viewTreeObserver ` with direct access to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to simplify
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum timestamp from Long . MIN _ VALUE to Long . MAX _ VALUE in SSTableMetadata . java to ensure the maximum timestamp
set the preferred size of the callparticipantpanel to 200 , 60 , 60
added a condition to check if replies are not null or empty before processing replies in TweetActivity , TimeLineCursorAdapter , and Timeline
replaced Apache Commons Lang ' s ToStringBuilder with Java ' s Objects utility methods in HitbtcBalance class to improve object comparison
fix ( sql ) : fix order by query with in statement
updated return statement to use ` addrs . toString ( ) ` instead of ` s ` to improve clarity by using ` addrs . toString (
refactor code to use openCookie . open ( ) instead of DataObject . find ( ) to simplify code and improve readability by elimin
updated imports from org . apache . http . conn to org . apache . http . core5 in JsonToGrpcApplicationTests . java
pipewood : do n ' t set energy when there be no energy available
added a check to delete the temporary output file if it exists in SessionState . java to ensure the temporary output file is deleted if it exists
updated the JSON property name from " id " to " id " in BitstampWebSocketTransaction . java and added new test cases in Bitstamp
added expiration checks for state time and size in ReplayProcessor and ReplaySubject classes to ensure stability by preventing out - of -
corrected a spacing in the expectedCitation string in CitationStyleGeneratorTest . java to improve code readability and maintain consistency
added SQL insert columns and updated video format handling in MediaTableFiles . java to improve code readability and maintainability by centralizing column column
g3d - 317 : show only definition for exam in exam , not in exam
added a null check for the component in SIPCommTextFieldUI to prevent potential NullPointerExceptions when the component is not initialized
added caching configuration for meta scan when startrow is null and scanRoot is null to improve performance by avoiding unnecessary scanning when startrow is
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable transient taskbar functionality in the application
[ hotfix ] fix typo in accessexecution , archivedexecutionvertex , and archivedexecutionvertex
added a conditional check for density in IOSGraphics . java to ensure proper density adjustment when scaling is zero
rename the ` optional ` variable to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 26465 regionstatestore . getstate ( ) should log the exception
replace assertTrueEventually with a lambda expression in TestClusterUpgradeUtils . java to improve readability and simplify the assertion logic
updated logging messages and refactored AsyncHttpConnection and AsyncContextTest classes to improve logging clarity and enhance async context handling
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` class to control the visibility of the arrow in the search functionality
added a break statement in Database . java and modified lock mode handling in TestRowLocks . java to ensure proper locking behavior during database operations and
skip amd64 test on linux / amd64
added checks for Integer and IntValue types in Scalars . java to ensure proper handling of different input types to improve type safety and prevent potential
improve error message when no / multiple primary key be specify
added conditional logic to set drawable resources based on the LMP status in CellLayout , Hotseat , and Launcher classes to ensure
improve error message when no isolate to query for flutter view
added methods to create header writers for content type options , cache control , and frame options in HeadersConfigurer . java to enhance header management capabilities
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and facilitate future development
simonstewart : rename smoketest to distributedcdptest
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to ensure that the AggregateRoot annotation includes the
added support for prebuilt libraries in PythonBinaryDescription and PythonInPlaceBinary classes to support prebuilt dependencies in the build process
added handling for clientAuth in NetServerOptionsConverter and updated default clientAuth in HttpServerOptions and NetServerOptions to ensure consistent handling of client
updated REPLDIR and MetastoreConf to use user . name instead of " hive / user / hive / repl / " to ensure
refactor task view management logic in RecentsView . java to improve clarity and efficiency to enhance code readability and maintainability by
increased test timeout duration from 60 seconds to 60 seconds in AmqpTransformerTest . java to allow for longer test execution time
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary operations
rename variable ` controller ` to ` flowController ` in multiple processable classes to improve clarity and consistency in naming conventions
[ zeppelin - 4892 ] fix the order of exchange sum in the pipeline builder
added import statement for io . github . classgraph . ClassLoaderHandler in module - info . java to facilitate the use of ClassLoader
refactor solve method to use a planning solution instead of a single solution to improve clarity and maintainability of the solution business logic
added Jackson @ JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive data in JSON output
changed the condition from checking if throwable is not null to checking if throwable is not null to ensure that the throwable is not null before proceeding
refactor null check for queryInfo in QueryTimeManager . java to improve code readability and prevent potential NullPointerExceptions
make auto workbench progress a GUI _ ONLY and add a check for empty stack in the recipe result
fix gl200 text decoder ( fix # 1193 )
renamed ` timeColumnName ` to ` incomingTimeColumnName ` and updated related logic in ` AvroRecordToPinotRowGenerator . java `
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
ww - 4357 add initializable factory to containercontainer so that it can be use by the application .
refactor TimerObservationHandler and MeterRegistryCompatibilityKit to use a single method for creating error tags and tags to improve code readability and
changed the data type of SYNC _ DELTA _ RATE from float to double and adjusted fetch time calculations to improve precision in time
add warn log for deprecate unwrapped fragment expression
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when reading attributes from the input stream
http : / / issues . apache . org / activemq / browse / amq - 4892 - add debug output for ack
added constants for main color hints and updated return statements in ColorExtractionAlgorithm . java to enhance color extraction functionality and improve handling of dark text hints
added check for accessible data folder before adding it to src folder list to ensure that only accessible data folders are included in the list
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified its logic in ` NotesHelper ` to include a `
removed unnecessary instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify session management by eliminating unnecessary instantiation
added logging for reconnection completion and error handling in NettyStreamingService to improve debugging and error reporting during reconnection processes
updated proxyFactory to use JavassistProxyFactory instead of Factory in multiple test files to ensure compatibility with the internal Javassist
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance by using a more efficient
refactor SocketExceptions to simplify message formatting and improve address validation in ExceptionText to enhance readability and maintainability of the code
added a check to check if the view directory is under the repository directory to ensure that the view path is within the specified repository directory to prevent
remove tab header area drag - and - drop functionality from jabrefframe
8274868 : [ testbug ] test / jdk / jfr / test / testdumper / testdumper /
removed error logging for invalid update log states in PeerSync . java to streamline logging by eliminating unnecessary error messages
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
removed the ` waitForInSync ` method and its associated references from multiple test classes to simplify the code and improve readability by eliminating
camel - 15836 : camel - spring - xml - dsl - dsl should use ` ` int ' ' instead of ` ` string '
updated ApexLanguageModule to use the current external version instead of a hardcoded value to ensure compatibility with the current version of ApexHandler
refactor multiple Java files related to CORSFilter , TregexPoweredTreebankParserParams , TregexPoweredTreebankParserParams ,
refactor ` AggregateEngine ` to use ` IoTDBThreadPoolFactory ` for thread pool management to improve performance by reusing ` AggregateEngine `
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management by utilizing a more efficient buffer
added scrollToPositionWithOffset method to adjust scroll position based on index range to improve user experience by ensuring proper scrolling behavior when the thumbnail is
fix ( sql ) : fix timestamp override by other column alias ( # 2329 )
added @ Override annotation to mStarted in LauncherAnimUtils . java and refactored animation handling in LauncherStateTransitionAnimation . java
added a check to disable the default user agent if the HttpClient configuration is enabled to enhance security by preventing user agent from being used
added a conditional check for pubsubhubbub in FeedRefreshUpdater and updated ApplicationSettings to utilize it to improve flexibility in handling pubsub
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method for better error handling
corrected the method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` and added a check
add dspacewebapp to make it easy to configure the web app
added a method to retrieve the table alias containing a column in the CalcitePlanner class and improved error handling in RowResolver to ensure
updated the identity key format in JobGenerator . java to include the trigger name to improve clarity of the trigger key for better debugging
updated logging statements in Wallet . java to include transaction ID in log messages to improve clarity and provide more informative logging for transaction failures
increase timeout for basicmaptest . testmap ( )
updated the default values for rcfileOptimizedWriterEnabled and rcfileWriterValidate in HiveClientConfig . java and TestHiveClientConfig . java
added a new enum TlsClientCertPolicy and updated its usage in GitBlitServer to allow dynamic configuration of client certificate policies based on
simplified the subscription process by removing a separate thread to improve code readability and maintainability
added support for the Sec - WebSocket - Protocol header in the WebsocketRoutingFilter class to enhance the WebSocket handler to support more flexible WebSocket
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of fetch requests for debugging purposes
updated formatting of dimensions and label in HolidayEventFormatter . java to improve readability and consistency of log output
refactor ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFields ` to improve inner class field handling to enhance clarity and functionality of inner
refactor UnexpectedJobExecutionException class to improve error handling to enhance reliability of job execution failures
deleted the file ` mmm module - info . java ` and removed the ` shouldUseOpaqueButtons ` method from ` Aqua
refactor maxFreq and docsEnum handling in DrillSidewaysQuery and DrillSidewaysScorer to use long maxCost instead of
added a new key for the GeoDegeneratePath class in the classRegsitry map to ensure the GeoDegeneratePath class is
removed the ` preFill ` parameter from constructors in multiple pool classes to simplify constructor parameters for better usability
added a condition to update and apply state for the taskbar stash in TaskbarLauncherStateController to ensure the taskbar state updates correctly when
added null check for default style in CascadeDeleteVisitor . java to prevent potential NullPointerException when comparing styles
refactor size and width management in GuiUtil and StatusTab classes to improve code clarity and maintainability by centralizing size and width
refactor icon retrieval logic in FileTreeViewHolder . java for improved clarity to enhance code readability and maintainability by reducing
replaced ` isEqualTo ` with ` contains ` for resource presence checks in ` ParallelUniverseTest . java ` to improve readability and
added synchronization to the iteration over test results in XMLReporter . java to ensure thread safety when accessing shared resources
[ nativeworker ] add test for native probability function
added ShutdownThread . deregister ( this ) method call to ClientContainer . java to ensure proper resource management and prevent memory leaks
added a method ` dropTemporaryTableAfterUse ` to the ` SybaseASE15Dialect ` class to provide a way to drop temporary tables
simonstewart : remove unnecessary color conversion from htmlunit webelement
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve indexing logic to enhance performance and maintainability of the code
updated the hexadecimal string format for reserve size in VirtualAllocCommitUncommitRecommit . java to improve clarity of memory usage for testing purposes
add check to ad playback state when there be no ad group
refactor the equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability by reducing
updated the wave frequency property from deg _ text to unit _ hz in WaveGeneratorActivity . java to ensure accurate representation of the wave frequency
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the initialization of the TreeMap with a direct initialization of includedLabelSets to simplify the code and improve readability
refactor vertex format handling in VertexLighterFlat . java to use a static final vertex format element to improve code readability and maintainability
added tracing tagging for received messages in multiple interceptor classes to enhance message visibility tracking for better debugging and monitoring
replaced the use of ` ZoneId . of ( ) ` with ` TimeZone . getTimeZone ( ) ` in ` ScheduledTrigger . java `
added AsyncBucket , InMemoryExtension , and InMemoryExtension classes , and modified LocalBucketBuilder to throw UnsupportedOperationException for unsupported operations to enhance functionality
updated the class path handling in resexhausted003 . java to use dynamic classpath and class paths based on system properties to improve flexibility
added exception handling for InterruptedException in AbstractConnector . java to improve robustness by catching InterruptedException during host processing
refactor OngoingStubbing class for improved clarity to enhance maintainability and readability of the code
modified the ` getValidWebServerPort ` method to include an ` Optional < WebServer > ` parameter and added logic to reuse the web server
renamed ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and updated its usage in ` SolrTestCaseJ4
added a check to clear the thread allowlist if it is utilized to ensure that the thread allowlist is properly cleared before use to prevent
updated the method call from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity
[ drools - 4892 ] fix the bug of the hit policy not be able to find out of range ( # 4892
add a new test method ` testSlidingWindowsCombine ` to ` CombineTest . java ` to verify the functionality of the ` Combine `
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to improve performance by avoiding
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to streamline the test by eliminating unnecessary
reformatted code for improved readability to enhance maintainability and adherence to coding standards
refactor AquaMenuBarUI to utilize LWCToolkit for retrieving the " useScreenMenuBar " system property to
glowplayer . setrawlocation ( location ) now respect fall distance
refactor query logic in SimpleJpaRepository to use a new CriteriaQuery and applyRepositoryMethodMetadata method to improve query efficiency and clarity
added new block parameters for timestamp , parent hash , nonce , and number in BlockUtil . java to enhance the blockchain ' s configuration by including
simplify safepoint insertion phase in graalcompiler and amd64hotspotbackend
hbase - 26462 fix npe in rsgroupinfomanagermanagerimpl and rpcs ( hbase - 2
changed access modifiers of methods in ArtifactResolver and related classes from package - private to public to allow access to these methods from other packages
added calls to ` Thread . currentThread ( ) . stop ( ) ` and ` Thread . currentThread ( ) . stop ( ) ` in `
added a validation check for maxBufferedDocs in IndexWriter . java to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions
added state management for the login state in LoginActivity to ensure proper handling of the login state during configuration changes
added null checks for source and value values in Pump . java and created a new test for sorting UUIDs in PumpTest . java
updated access modifiers of methods in HttpShardHandlerFactory and LBHttpSolrServer from private to protected to allow subclasses to access and utilize
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and added new
added server and handler list configurations in TestJNDI . java to enable proper handling of server requests in the JNDI application
refactor SortedDynPartitionOptimizer . java for improved readability and consistency to enhance maintainability and clarity of the code structure
changed the return value of the loop check from NioEventLoop to true to ensure that the method returns true when the loop is an instance
updated the calculation of newNumNulls to account for newNumRows to ensure that newNumNulls does not exceed newNumRows to prevent potential
camel - 16462 : camel - jbang - camel - camel - jbang - camel - jbang - camel - jbang -
replaced OkHttpOAuthConsumer with an AuthorizationService for managing OpenStreetMap access token upload to enhance security by ensuring the OpenStreetMap is
removed debug print statements from multiple test classes and refactored the test method to return CompilationResult to improve code readability and maintainability by
added a clientAuth property and its getter / setter methods to IoTDBRestServiceConfig to control authentication behavior in the REST service configuration
replaced ` mocksToBeInjected ` with ` mockCandidates ` in ` PropertyAndSetterInjection . java ` and added a new test
update bloomfilter64bit and bloomuriuniqfilter to use initializingbean instead of hardcoded value .
updated getCursorAdapter from false to true in HomeFragment . java and added shared preferences refresh in TweetPager . java to enable the refresh
updated theIntermediateHeaderHeightRatio from 1f to 75f in ProfilePager . java to improve the responsiveness of the scroller
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple Java files and added a new ` RecompilationEvent ` class
added a new constant ` HOST _ SYS _ PREPPED ` and a method to retrieve its value in configuration and updated related classes to
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified related logic in ` DatabaseChangeLog . java
added a loop to remove the trailing slash from the location string to ensure that the location starts with a slash to avoid potential issues with trailing slashes
added entity and scores property handling to the StaticPipeline class to enable dynamic retrieval of entities , urns , and scores based on specified properties
updated file path handling in Frame . java and added configuration handling in WhoopsModule . java to improve flexibility in file path processing and
[ geos - 8470 ] fix npe in catalogrepository . getstorebyname ( )
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new tests for multi - line text functionality to improve
camel - 16462 : fix test failure in camel - jms
removed the ` writeMeasurementScheams ` list from multiple methods in ` TsFileWriteAlignedWithTSRecord ` and ` TsFile
updated memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate memory usage tracking during
updated log4j library path from " slf4j12 " to " slf4j - reload4j - . jar "
[ HueBridgeHandlerOSGiTest ] wait for the bridge ' s status details before asserting it to ensure that the bridge '
updated package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple activities
[ drools - 1276 ] ignore kiesolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that takes a ` schemaFile ` , ` topicName ` , ` personalAccessToken ` , and
refactor AbstractExpressionPart class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ runtime ] fix typo in taskslot javadoc
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Netty
added error handling for lock release in MoveTask . java to improve robustness by catching LockException during lock release operations
replaced properties loading with ResourceBundle for retrieving GEM _ PATH and GEM _ PATH to improve code readability and maintainability by using a
replaced ` ZERO _ ADDRESS ` with ` ByteUtil . EMPTY _ BYTE _ ARRAY ` in the ` Transaction ` class to simplify the
refactor class loading logic in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix flaky test jobmanagerstartuptest
chore ( regen ) : fix typo in ruby resource file ( # 119 )
added a Bundle to the FileDisplayActivity to include additional extras to enhance the functionality of the FileDisplayActivity by allowing users to specify additional extras
changed the loop from ` break ` to ` continue ` in ` ParticleEmitter . java ` to ensure that the loop does not continue instead
updated cluster expectation values from 2 to 1 in AmbariManagementControllerImplTest and AmbariManagementControllerTest to reflect changes in cluster
removed nullable nullable parameter from the " SERVICE " column in TransientSessionTicketImpl and added handling for NoResultException in JpaTicketRegistry to
updated Bug4823811 . java file to address issues related to Bug4823811
replaced the direct addition of patternToDelete with a pathRelativizer using the project ' s filesystem ' s pathRelativizer
[ deactivemq bridge ] request full state on deactivemq ( # 11818 )
added attribute property and updated related methods in ShibbolethCompatiblePersistentIdGenerator . java to enhance the persistence of persistent IDs based on the
refactor @ Inject annotation in RequestValidationService . java to improve code clarity and maintainability
refactor keyboard hiding logic to use a Bundle for logging messages to improve code readability and maintainability by encapsulating logging functionality
removed redundant calls to clear ( ) in FileNodeProcessor . java and added necessary imports in MManagerBasicTest . java and MTreeTest
renamed NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add test for slurp file in ioutilstest
added @ FunctionalInterface annotation to multiple classes and made the client variable private to enhance encapsulation and indicate that the wrap method is intended to
refactor span comparison logic into a separate method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for converting date types to DateWritable in Hive schema to enhance date handling capabilities in the Hive framework
replaced string splitting with Patterns . COMMA _ SEPARATOR in StyleConverter . java to improve readability and maintainability of the code
ggb - 1565 : make sure input dialog show the bottom message for invalid input
refactor column count comparison logic in SemanticAnalyzer . java to improve readability and maintainability to enhance code clarity and maintainability by redu
refactor assertions and logic in WANDScorer . java for better clarity and correctness to improve code readability and maintainability while
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific Java classes for event handling to improve code clarity and maintainability by
modified curPixVal initialization in XRSolidSrcPict . java and added a new test class WhiteTextColorTest . java for image rendering
refactor biomedictionary to use supertypes instead of subtypes to improve performance
corrected the variable name from ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to improve clarity
updated test stability annotations in TaplTestsLauncher3 . java to use LOCAL and PLATFORM _ POSTSUBMIT flavors to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check for non - empty log file suffix before processing to ensure that log file suffixes are not empty before processing
updated PythonBuckConfig . java file to improve configuration handling to enhance performance and maintainability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager and ShadowApplicationPackageManager to ensure correct functionality of shared library management
fix meiligao time format ( fix # 1193 )
added null check for tile before calculating power capacity in PowerDiode . java to prevent potential NullPointerException when tile is null
added a new ` TrimCache ` class and modified cache deletion logic in ` PrefFragment . java ` to enhance cache management and provide user feedback
[ scene2d ] update dependency to use google common instead of client
replaced return statements with exceptions in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and BasicAuthAccessControlFactory classes to improve error handling
added a new abstract method ` schedulePeriodically ` and modified the ` schedulePeriodically ` method signatures to accept a ` State ` parameter to
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java `
added logging for file matching in StreamUtil . java and improved exception handling in StreamUtil . java to enhance debugging capabilities by providing clearer
refactor table creation methods in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to improve
added a volatile boolean flag ` aborted ` and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker `
updated indentation calculations in multiple parser classes to account for a minimum number of indentation to ensure correct parsing behavior based on indentation levels
added two new classes , NetworkWifiStatusReceiver , and ChangeWifiStatusEvent , for managing Wi - Fi status events to
removed redundant check for control frames in FrameGenerator . java to streamline the code for better readability and maintainability
added visibility control for collapse handle in WidgetsBottomSheet to improve user interface by disabling the collapse handle feature
added new files Issue475 . java and XSS . java for handling HTML and JavaScript requests in the Jooby framework to enhance
added a condition to return early if the unitsToScroll ( ) is zero in StandardGraphIO . java to improve performance by avoiding unnecessary
changed the condition from checking if the contract list size is greater than 1 to checking if it is a single contract to ensure that the contract list
added methods ` add ` and ` put ` to ` JsonArray ` , ` JsonObject ` , and corresponding tests in ` JsonArrayTest ` , `
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class to ensure consistent hashing behavior for PrintService instances
refactor db2idialect to use getversion ( ) instead of getversion ( )
added a check for platform fee before verifying if the connection is enabled to ensure that connectivity is only enabled when the platform fee is greater than
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
update adaptive reconfiguration buffer when encryption be enable .
removed the ' public ' access modifier from several classes and interfaces in their respective classes to simplify access modifiers for better encapsulation
added import statement for Retrofit in Part and PartMap classes to enable Retrofit functionality in the code
refactor JSON handling logic in JsonBuildHelper and ParamsBuildHelper for improved clarity and functionality to enhance code readability and maintainability
added a new constant ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the ` AbstractFloatingView ` class to enhance functionality by allowing
fix : update gapic - generator - java with mock service generation fix ( # 119 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the ` true ` parameter from the ` createRenderScript ` method call in ` AllAppsView . java ` to simplify the ` create
no effective change - code cleanup - no functional change
move system - bundle property check into pluginmanageractivator . issystembundle ( )
updated import statements and formatting in IntegrationTestSparkBulkLoad . java for consistency to improve code readability and maintainability
use a constant for bloom filter element count , not 0.001
refactor configuration handling in Overview . java to improve clarity and maintainability to enhance code readability and ensure correct selection of default configurations
added a final variable for agentAttache in AgentManagerImpl . java to improve code readability and maintainability
added null check for value before processing data in DefaultRecordStore . java to avoid potential NullPointerException when accessing values
cloudstack - 4892 : throw discoveryexception instead of return null when kvm be not enable
updated error messages to include attribute names and values in ParamAction . java to improve clarity of error messages for better debugging
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a Object parameter instead of a InvocationContainer
added a method ` stripMethodParams ` to strip method parameters in ` LocationOpener . java ` to improve method name handling by removing unnecessary
updated VERSION _ NAME and VERSION _ CODE from " 15578 " to " 15584 " to reflect the latest release of the G
mondrian : use hashset instead of list in outputfilter
[ geot - 4892 ] fix symbolmblayer to use labelcacheitem . name ( ) instead of string literal
ggb - 1188 fix for ggb - 1188 ( overlap feature )
updated error messages from " Function : " to " Function - " in ValidationSuite . java to improve clarity and consistency in error reporting
refactor StartingWindowListener to use a dedicated class for handling task launching to improve code readability and maintainability by centralizing transition manager
added documentation to MBeanServer . java to clarify the visibility of the documentation for MBeanServerConnection
updated exception messages in CheckPackageAccess . java to include " PackageAccess SecurityException " instead of " SecurityException " to improve clarity and accuracy of
increased the timeout duration from 30 seconds to 90 seconds in ThreadSafetyTest . java to allow more time for the executor service to
changed the type of the loggingEnabled variable from boolean to Boolean and added a null check before setting it to ensure logging is enabled only when it
added @ JsonIgnore ( true ) annotations to the Schema class to ensure these fields are serialized in JSON format
increased test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete successfully
simplified the train method and updated scoring calculations in SimpleNaiveBayesClassifier . java to improve code readability and maintainability
renamed CheckHelperModule to CheckHelperControllerModule and added AuditLoggerModule to enhance functionality by integrating audit logging capabilities
refactor Prototype classes to improve code organization to enhance maintainability and readability of the codebase
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure proper retrieval of the table ' s transactional property from the
[ java ] replace recordingwriter . writeregion with recordingwriter . onblock ( ) .
[ android ] fix ceatubtitle return empty list instead of 0
[ kairos ] add miss alias to datastoremetricqueryimpl ( # 2327 )
replaced multiple currency pairs from " CAD " to " USD " in VaultOfSatoshiBaseService . java to reflect the
added EntityManagerFactory and SessionFactory instances to multiple test classes to ensure proper resource management and prevent memory leaks
updated import statements in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to use KafkaSender instead of Kafka11 to ensure compatibility with
added new files GwtBinaryIntegrationTest . java and A . java to implement integration tests for GWT binary building to ensure proper integration and
updated loadingCauseLabel visibility logic in BrowserContentPane . java and refactored ResultSetRenderer in SQLConsole . java to improve mouse event handling
reformatted code in EnhancedRandomImpl . java and EnhancedRandomImplTest . java for consistency to improve code readability and maintainability
added XML security property management to DTDConfiguration , NonValidatingConfiguration , and XMLSecurityPropertyManager classes to enhance security configuration flexibility and maintain
added a new file ` InlineDefaultMethod . java ` implementing interfaces with default methods to demonstrate the behavior of default methods in interfaces
updated SQL query conditions from LIKE to GLOB for pattern matching to enhance performance and improve matching capabilities using GLOB
dmnassemblerservice : change access modifier of getDMNProfiles method from private to protected to allow subclasses to access the method for
fixed - script . load ( ) method do n ' t work with slave node
move setwordfieldvolatile method to staticobject and remove it
updated debug log messages to use the size of targets instead of just the number of targets to improve log clarity by providing more detailed information about
[ java ] retain and release the packet in the sendproxy method , so we do n ' t need to cast the packet .
added a new constant for HTTP Jetty server handler and updated the thread pool configuration to allow dynamic adjustment of thread pool size based on configuration
replaced ` idsToShortcuts ` and ` updatedShortcutInfos ` with ` removedShortcutInfos ` and modified shortcut management logic to improve shortcut
remove unnecessary check for non - string in defaulthttpclientbinderregistry
added a case to navigate up the home button in DetailFragment to enhance user experience by allowing navigation to the home screen
added a condition to check if AndroidMarket is present before including play services to ensure that services are only included when the Android market is present
refactor TableBlockParser to improve handling of space characters and enhance test coverage for edge cases in TableBlockParser and TablesTest classes to improve
added a bridgingHeader field and its getter method in NewNativeTargetProjectMutator , AbstractAppleNativeTargetBuilder , and AbstractAp
refactor the handling of Java methods in PotentiallyDeadCode . java to improve clarity and functionality to enhance code readability and maintainability
added functionality to find diamonds in the attribute processing and created new classes for handling diamond - related functionality to enhance type safety and
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed unused imports and logging statement in SolrCacheHolder . java to streamline code and improve readability by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper exception management during LDAP authentication
updated the comparison logic in Test6796786 . java to use negative values instead of a fixed value to ensure correct handling of zero values
added " logback . dev . xml " to the file paths in JoobyMojo . java and Main . java to ensure
added a new file ` JaasEventCheck . java ` that implements ` ApplicationListener ` for handling Jaas authentication events to facilit
refactor animation logic in QuickstepTransitionManager to use a list for managing visible pages to improve code readability and maintainability by reducing
updated string distance comparison in ` ConjunctionSolrSpellChecker ` and added a new test class ` ConjunctionSolrSpellCheckerTest `
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type
added constants for single and all leader information changes in DefaultLeaderElectionService to improve clarity and consistency in logging for leader information changes
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
add agent . script . timeout property to wait for ready command to return
updated parameter handling for JDBC table and schema in AbstractJDBCConnectorProvider . java to improve clarity and consistency in parameter management
renamed ` sqlUpdateAUP ` to ` sqlUpdate ` across multiple files to improve clarity and consistency in naming conventions
refactor schemaTypeCache to use Collections . synchronizedMap for synchronization to improve thread safety and performance when accessing the schema type
refactor header addition logic in StaticServerHttpHeadersWriter to handle cases where headers are already added to ensure headers are only added when they are
ignore lattice demo test due to file availability only from cmu
added a directory creation for the TEST parameter in TestCollector . java to ensure the directory exists for testing purposes
added HTTP . setChunkedStreamingMode ( 1024 * 1024 ) to StarTreeJobUtils . java to improve performance by enabling chunk
add basicsyntaxchecker , multipletypesyntaxcheckertest , singletypesyntaxcheckertest , and basictypeSyntaxcheckertest
hbase - 16462 update hbase - protobuf to v3.20 . 0 ( # 1348 )
added a test for ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` in ` BeanPopulatorTest . java ` and created a
added IOException to the getRemoteName method in AccountingTransceiver . java to ensure proper error handling when retrieving the remote name
updated exception handling in UserAccountManagerImpl and added HttpClient implementation in ClientFactoryImpl and ConnectivityServiceImpl to improve error handling and provide a
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added AspectJ support and updated registration logic in GlobalMethodSecurityBeanDefinitionParser . java to enhance security aspect - related functionality and ensure proper
updated import statements and added hostname verification logic in Connection . java to enhance security by enabling endpoint identification when hostname verification is disabled
removed the ' final ' modifier from the ' remove ' method in OHLCSeries and added a test for it in OHLCSeriesTests to
updated invocation method from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . invokeUrgent (
removed redundant joint removal logic from the world ' s joint list to streamline the joint management process and improve code clarity
fix npe in searchfilter when filter string be null
[ hotfix ] [ test ] move sourcereadertestbase to the testutils package
added error handling for missing documents in DocumentsStorageProvider . java to ensure proper resource management and prevent application crashes
added new classes ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookTest ` to handle before and after hooks in C
refactor buffer synchronization logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing
added a boolean parameter ` allowTs ` to the ` setExoOptions ` method in ` ProfileHelper ` and updated its usage in `
removed user identifier from the identifier collection in DMRDecoderState . java to simplify the code by eliminating unnecessary entries
added a static INVISIBLE color and refactored the toString method in RailButtonShapes class to improve code readability and maintainability by
updated the null handling logic in CountAggregationFunction and added a new test for count with null handling options in NullHandlingIntegrationTest to ensure correct
initialize deep property to - 1 in InternalTransaction to ensure deep state is maintained during transaction processing
added XML escaping to the name string in StreamInitiation . java to ensure proper handling of special characters in the name string
updated File initialization to use a configurable work directory instead of a hardcoded value to improve flexibility by allowing dynamic configuration of the work directory
added a check for the " deprecated " attribute in RuleSetFactory and corresponding test in RuleSetFactoryTest to ensure that deprecated rules are properly
fix amd64directcallop to use the codebuffer position instead of the dummy label .
added static final long variables for minStamp and maxStamp in TimeRange . java and updated allTime assignment logic in TestTimeRangeTracker .
refactor BitDocIdSet class for improved clarity to enhance maintainability and readability of the code
refactor metric emission logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
refactor DetailFragment and GalleryActivity to improve code readability and maintainability to enhance maintainability and clarity of the code structure
fix tank . drain ( ) for non - remote player .
added support for handling RuleAnalysisLegacyBuildRuleView in CsharpLibrary . java to ensure proper resolution of paths for both Csharp
[ amq - 4892 ] handle iq . type . get packet in the process of the pep service . jm - 489
added a null check for the runtime variable in the intrinsicGraph null check to ensure that the runtime is not null before proceeding
updated condition in MetricTrackingWindmillServerStub and StreamingDataflowWorker to check if active is not empty before calling refreshActiveWork
pdfbox - 4892 : do n ' t create object key if eof marker be less than long . max _ value
added constructors and canvas handling in LwjglApplet to manage application lifecycle events to enhance the application ' s responsiveness and respons
updated the string representation of DockerHost in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig correctly to improve robustness by
refactor LdapAuthenticationHandler to utilize AccountStateHandler for password policy handling to improve code clarity and maintainability by consolidating authentication logic
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated the ` resolver ` in ` LdapUtils ` to
refactor Readable class for improved readability to enhance maintainability and readability of the code
removed unused imports and simplified PDF document creation in JsoupNonVisualRegressionTest . java to improve code clarity and maintainability by
updated the menu icon from ` share _ menu _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java ` to
updated the Java version check logic in Constants . java to use JVM _ MAJOR _ VERSION instead of a hardcoded boolean to improve compatibility
updated the assignment of ` IS _ JDBC41 ` to ` false ` and added exception handling for ` NoSuchMethodError ` in ` PoolUtilities
refactor GenericContainer class for improved clarity to enhance maintainability and readability of the code
replaced ` HashSet ` with ` List ` for ` filteredList ` in ` Enclosed . java ` to improve performance by using a more
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasView classes to ensure proper method overriding and improve
removed unnecessary whitespace in ChartProvider . java to improve code readability and maintain consistency
fix # 1803 working directory be set to full path include filename ( # 1812 )
simplified the return statement in JavacParser and added a new ExtraSemiTest class for testing Java compilation to improve code read
added a new date field ` createdAt ` and updated ` User ` and ` UserRepositoryTests ` classes to track the creation time of a user
refactor Test15FloatJNIArgs class for improved readability to enhance maintainability and facilitate future updates
updated version and URL formatting in the plugin . java file to improve clarity and consistency in version handling
corrected the substring length in MockProcessContext and added a test for encryption and decryption in TestMockProcessContext to ensure correct decryption of encrypted
[ java ] ensure not reentrant call during archive callback .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
increased test timeout duration from 10000 milliseconds to 10000 milliseconds in SslBytesServerTest . java to allow more time for tests to complete successfully
refactor Peer class to improve code organization to enhance maintainability and readability of the code
added ` getRealtimeSegment ( ) ` and ` toHistoricalIndexSegment ( ) ` methods in ` RealtimeIndexingCoordinator ` , modified
added null check for exportedData before writing to the output to avoid potential NullPointerException when exporting data
updated the ` updatePopupY ` method to use ` getScrollThumbRadius ( ) ` instead of ` mMaxWidth ` and adjusted the
updated command execution instructions in BuckWSServerPortUtils and added a check for tool window instantiation in BuckEventsConsumer to improve clarity
added a condition to check if the platform is Windows before setting the " preventsSleep " checkbox to ensure proper functionality for Windows - specific settings
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the latest J
updated cropping logic in QuickstepAppTransitionManagerImpl . java and FloatingIconView . java to accommodate vertical bar layout to
added methods to manage the full - screen mode state across multiple window peer classes to improve user experience by allowing toggling of full - screen
fix stringutil . playeddurationstr ( string ) to work with jdk 1.8
added credentials handling methods for MapWork and DAG in DagUtils . java and updated TezTask . java to utilize them to
( chore ) camel - core : use entryset ( ) instead of keyset ( )
trim whitespace from the current thread name in SessionState . java to ensure proper handling of thread names by removing leading and trailing spaces
updated the message in GpsMainActivity from " next point has been logged " to " next point has been logged to a file " to
refactor Job class to improve code readability to enhance maintainability and facilitate future development
added a new abstract class ` Unused ` with methods to check if the main field is an instance of ` AutoValue _ Main _ Un
updated the key from " hbase _ master _ host " to " hbase _ master _ hosts " in StageUtils and DummyHeartbeatConstants
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused code to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` instances instead of a single ` GenericRecord ` to support multiple
updated MAX _ DELEGATE _ LOCK _ PERIOD logic and improved validation in ProposalUtil , CommonParameter , and WalletTest classes to
server : fix npe when network rate be 0 .
removed initialization of the CmcExchange class and updated the applySpecification method to ensure proper initialization and configuration of the exchange specification
updated gossipLocalNode to check for the presence of the " seed . node . ip . list " configuration instead of a generic configuration object to
set the default value of ` hazelcast . client . tpc . enabled ` to ` false ` in ` ClientTpcConfig . java
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application classes to align with the latest
refactor MutableBigInteger logic and introduce ModInvTime class for mathematical operations to improve accuracy of mathematical operations and
modified the handling of the ` key ` variable in ` NamedObjectList . java ` to ensure a default value is used when ` name ` is
updated the cleanupEmptyDir method to use the new cleanupEmptyTableDir method and improved error handling in QueryCompactor and MinorQueryComp
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it in SerializationUtilities to enable support for RCFile input format in serialization processes
added default methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java types in ` TypeMapperComponent ` to
added error handling for parsing host headers in Request . java and created a test for invalid host headers in RequestTest . java to improve robustness
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` for retrieving time zones to improve compatibility with Rob
modified the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve the handling of outgoing values
changed variable declarations from ` segment ` to ` cfsDir ` and updated its assignment in ` SegmentCoreReaders . java ` to improve encaps
added ` hasMainThreadProfile ` method to ` AggregateDao ` and ` AggregateRepository ` classes and implemented it in ` AggregateDao ` to
added validation to ensure annotation definitions are not required for source ABI in BuckRule with required _ for _ source _ abi = true to
updated NAME constants in GreekLowerCaseFilterFactory , IrishLowerCaseFilterFactory , IrishLowerCaseFilterFactory , UAX29
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the codebase
use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor since dspace 4.0
added a list to store and remove specific data entries from the list to streamline the process by eliminating duplicate entries
updated SurfaceSyncGroup instantiation to include a specific name " TaskBarController " to improve clarity by specifying the controller context
updated GridFsTemplate and GridfsTemplateIntegrationTests to use getId ( ) instead of getObjectId ( ) for file deletion and retrieval to improve
added tests for DownloadManager ' s total size and bytesSoFar fields in ShadowDownloadManager to ensure correct retrieval and retrieval of total size and bytes
refactor enter character handling in TextField . java to use a boolean variable for better readability to improve code clarity and maintainability by redu
added a null check for the target object in GroupNodeViewModel to avoid unnecessary processing when the target is the same instance
refactor ` afterSetStatements ` method in ` Lower . java ` and ` BlockLexicalContext . java ` to improve statement handling and
added hashCode ( ) methods to IntervalXYDelegate and HashUtilities for hash code generation and equality checks in XYSeriesCollection to ensure consistent hash code
refactor clientqueuedisruptiontest to use junit 4 . x instead of junit 4 . x
reformatted code for consistency and clarity in CloudWatchAppender and RegisteredServiceScriptedAttributeFilterTests to improve code readability and maintainability
updated serialization method from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java `
added calls to ` PublicMethed . waitProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in `
added checks for empty subtags before canonicalizing language tags in Locale . java and LanguageTag . java to ensure proper handling of empty languages and
add kvm . ssh . to . agent config to allow kvm . ssh . to . agent to kvm agent .
removed the ` public ` access modifier from several constructors and methods in ` SchedulerWhen . java ` to enhance encapsulation by restricting access to
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline the code by eliminating unnecessary dependencies
added a condition to check if the string does not contain a hyphen to ensure that only valid characters are processed in the filter
updated sortColumnsLabel text from " natural order " to " Natural column order " and replaced UISettings . s1 with UISettings
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java
replace direct call to ` write ( remoteAddr ) ` with ` htmlEncodeButNotSpace ( remoteAddr ) ` in ` HtmlSessionInformationsReport
updated topic name from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to improve clarity and
remove unnecessary synchronization block in FastHttpDateFormat . java to improve code readability and maintainability
refactor file moving logic to use a multi - threaded executor for better resource management to improve performance and responsiveness during file operations
added a new method ` trigger ` to the ` WrapTimer ` class for triggering a timer with a specified period to enhance timer functionality by allowing
added support for both SQL _ DATE , LOCAL _ DATE , and SQL _ TIME types in TypeUtils and corresponding tests to enhance type handling capabilities
added a verbose option to the error logging in AbstractStatusReporter to enhance error reporting by providing more detailed logging information when verbose errors are enabled
added menu toggle functionality to ClickStartHandler initialization to ensure the menu is only shown when the application is in a menu state to improve user experience
do n ' t allow vpn connection to be esitablished between account s VPN gateway and customer gateway
updated error handling logic in CursorReadingTask and added new test cases in CursorReadingTaskUnitTests to improve clarity and functionality of error handling
added logging for encrypted PDF items in PDFBoxThumbnail and PDFFilter classes to improve error handling and debugging for encrypted PDF documents
fix race condition in zk zk watcher ( # 9396 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated the method to use ` id ` instead of ` getSelectedItemId ( ) ` in ` HostsList . java ` to ensure the correct ID
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of the replaceOrderBulk method from List < ReplaceOrderCommand > to String < BitmexPrivateOrder > and updated
refactor the ` enterDefault ` method to ` enterIdentNode ` and implement the ` enterFunctionNode ` method in ` FindScopeDepth
added a new class ` J9ConstantHelper ` and refactored ` ObjectHash ` to utilize it for retrieving long values to improve
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to validate concurrent invocation behavior in Mockito to ensure that concurrent
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 545 . add a method
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and ` PartitionDesc .
reformatted code in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerExceptions when extTypeCustomDesers is
remove system . setProperty ( " mockserver . logLevel " , " WARN " ) from main . java to reduce log verbosity for improved performance
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution for better readability and maintainability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
updated scoreMap and termScoreMap to use String and Map < Float , Float > instead of Float and Map < Float , Float > to
updated bitwise operations in U64 . java to use less than 0 instead of bitwise and added a new equals method in U64 . java to
added headline style for error messages in MainViewModel . java to improve the visual appearance of error messages in the user interface
added a boolean variable ` didSupportDarkText ` to the notifyChange method to ensure notifications are only notified when dark text support is supported
[ hotfix ] [ runtime ] remove redundant check in checkpointrequestdecider
updated the maximum number of available processors and adjusted KEEP _ ALIVE _ TIME _ MILLISECONDS and KEEP _ ALIVE _ TIME
updated filter method from ` filter ` to ` anyMatch ` in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to improve
added testRequirements . notArm ( ) calls in OpenCVImageFactoryTest . java to ensure compatibility with Windows ServerCore container requirements
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - setPrefetch (
[ py4j ] do n ' t throw exception if an exception be throw by the python proxy .
added a new annotation ` Issues ` to the ` Issue ` class and its associated annotations to enhance the functionality of the ` Issue ` class
updated user property key from " hcat _ user " to " webhcat _ user " and modified import statements in BlueprintConfigurationProcessorTest
updated socket connection logic to use an unresolved address if the " socksProxyHost " system property is not set to improve flexibility by allowing
[ hotfix ] fix typo in slotstatus javadoc
replace import statement for ClassUtils from Apache Commons Lang to streamline dependencies to avoid unnecessary overhead
replaced HashSet with LinkedHashSet for excludeProtocols , includeCipherSuites , and selected protocols to ensure uniqueness of elements in the set
added a static variable ` systemResource ` and updated its usage in ` Resources . java ` to improve resource management by caching the system resource when
updated ByteBuffer allocation to use a constant for EXTRA _ SIZE to improve code readability and maintainability by avoiding magic numbers
added a test for invalid circuit breaker fallback URI in ServerMvcIntegrationTests . java to ensure that the circuit breaker correctly throws an exception
added SSL connection socket factory and configured SSL context in AppPage . java to enhance security by enforcing hostname verification for SSL connections
replaced resetBytesReadCounter ( ) method with setSizeLimit ( 0x7FFFFFFF ) in PerformanceTest . java to improve memory
added ` preferAES ` property and its getter / setter methods in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to
camel - opentelemetry : use logging instead of system . out . println
[ ec2 ] remove deprecate elbintegrationtest . testloadbalancerinstanceoperations
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the
added error handling for invalid path exceptions during file creation in DiacriticTest . java to improve robustness by preventing real test failures
hhh - 10663 - fix incorrect sql syntax for followonlockingtest on oracle 11
updated file handling and error handling in TextureUnpacker . java to improve robustness and provide clearer error messages when the atlas file is not
refactor AmbariManagementControllerImpl to use a locking mechanism for multi - threaded operations to improve concurrency handling and ensure thread safety during
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the ResultSet does not close a statement and modified the result set closing logic to ensure that the result set is
simplify the ` InputStreamBodyGenerator ` logic and add new test cases for buffer and small than a file to improve code clarity and
added logic to remove pre - deleted database entries from the schema map to ensure that deleted databases are properly removed from the schema map
updated the handling of the " chunkedWriter " pipeline in Http1xUpgradeToH2CHandler . java to ensure proper cleanup of the
updated item deletion logic in EnhancedBrowseFragment and added a new deleteItem method in FullDetailsFragment to enhance item deletion functionality and improve user
added a new ` RuleBank ` interface and refactored the ` RuleFinder ` class to implement a new interface ` RuleBank ` and
added error handling to the doFinal method in JcaTlsCrypto . java to improve robustness by throwing a fatal alert if an exception occurs
added two new Java files , TestMonomorphicObjectCall . java and Object . java to implement and test monomorphic object call functionality
replaced ` removeMetaDataSource ( session ) ` method calls with ` toFront ( ) ` in ` DataBrowser . java ` and `
hbase - 26462 fix npe in defaultmemstore . shouldSeek ( scan )
[ hotfix ] [ state ] remove the localstate root directory from taskmanagersconfiguration
[ java ] make alter _ log _ view and alter _ timeSERIES final so that it do n ' t need to be set
simonstewart : fix pattern matching in condition . matchtext ( ) .
added a try - catch block around the retrieval of the routing table builder in HelixBrokerStarter . java to handle potential exceptions when retrieving
refactor HttpClientIntroductionAdvice to use ` putIfAbsent ` for adding values to ` paramMap ` to improve code readability and
http : / / issues . apache . org / activemq / browse / amq - 4892 - use char [ ] instead
server : search for domain child only if the domain do n ' t have a recursive path
refactor ` toSortedListWithCounts ` and ` equals ` methods in ` Counters ` and ` CountersTest ` classes to improve
modified the ` initialize ` method in ` BasicTumbleStepper ` to create a ` BasicTumbleStatus ` object with warnings
[ gr - 26464 ] fix memory leak in llvmamd64syscallclockgettimenode
refactor object deserialization to use a variable for better readability to improve code clarity and maintainability by reducing redundancy
added a null check for indexToNode [ currSize ] in LRUDictionary . java to ensure indexToNode [ currSize ] is only initialized
refactor DatagramSocket to encapsulate filtering logic into a separate method to improve code readability and maintainability by reducing duplication
testquerydns : migrate to junit 5 ( # 4449 )
added a new file NutchServerInfo . java with methods for starting date , configuration , and running jobs to provide a structured way to
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource and updated attributes handling in EdgeNGramTokenFilter . java to streamline attribute management
added a timestamp option to the CqlInserter , ThriftInserter , and SettingsColumn classes to allow users to specify a timestamp
refactor DSAParameterGenerator to use BigInteger . ONE instead of a static final BigInteger instance to improve clarity and maintainability of the code
updated NumberUtils and Numbers classes to use float and double bit conversions instead of hardcoded values to improve performance and clarity by utilizing
updated masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking of IP addresses
added constraint violation checks for SQLException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to constraint violations
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5453 - do not
added new methods ` addTab ` and ` insertTab ` to the ` Tabs ` class and refactored the ` createTab `
replaced instances of ` files . size ( ) ` with ` files . toArray ( new String [ 0 ] ) ` in multiple Java files
[ hotfix ] [ test ] expose taskmanagermanagerruntimeinfo in mockenvironment
refactor conditional statements in MavenVisitor . java for clarity to improve readability and maintainability of the code
updated test cases in ZookeeperDataChangedListenerTest to use " MOCK _ APP _ SECRET2 " and " MOCK _ NAME
added a new file FormatCheckingTest . java to test Java class format validation to ensure that the Java process correctly handles illegal class names to ensure
updated the line number assignment logic in CodeGenerator . java to ensure correct line number is used for method execution
added a try - catch block around the retrieval of service properties in ConfigHelper . java to handle potential exceptions during the retrieval process
added methods to create RadioButton instances with parameters for text , icon , and command groups to improve usability by providing direct instantiation of RadioButton
updated the initialization of the cache in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to
int - 1186 fix the default cap value in simplechannel and messagebusparser
added null check for symbolicName in OsgiManagementNameStrategy . java to ensure symbolicName is set to an empty string if symbolicName is
add usemode system property to load contrib mode
[ hotfix ] [ yarn ] fix race condition in yarnsessionfifoitcase
renamed the variable ` projectRoot ` to ` androidManifestPath ` and updated related methods in ` RobolectricTestRunner ` to improve
added a check for non - existent not propagation headers in AbstractMessageProducingHandler and updated selectiveHeaderPropagation logic in AbstractReplyProducing
refactor CompareMode class for improved readability to enhance maintainability and facilitate future modifications
added HasTests interface to RustBinaryDescription and RustLibraryDescription classes to implement HasTests functionality to enable testing capabilities in the Rust
updated placeholder and error resources in FileMessageVH . java to use a more descriptive placeholder resource to improve code readability and maintainability
refactor OnExitTest class for improved readability to enhance maintainability and facilitate future development
added a method to recreate the taskbar when user preference changes to ensure the taskbar is recreated when user preference changes
added reflection - based method invocation for heap dump in HeapDump . java to ensure compatibility with IBM virtual machines and improve error handling
camel - 16463 : camel - MyBatis should use a try - finally block for session . commit ( ) and session .
updated driver variable from FIREFOX to IE and added new methods for handling window switching to enhance compatibility with IE and improve window management functionality
updated ` DN _ IteratorToFor ` to use ` Java 5 for - loop ` instead of ` JDK 5 for - loop ` and modified
set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure the application is properly marked as unavailable
updated position and limit calculations in ByteBufferAs - X - Buffer , Heap - X - Buffer , and StringCharBuffer classes to improve clarity
replaced ` toUri ( ) . toString ( ) . split ( i ) . toUri ( ) . toString ( ) ` with `
refactor setEmpty method implementations across multiple array data classes to improve clarity and consistency to enhance code readability and maintainability by standardizing
changed enum access modifiers from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enum values from other packages
added a new Document instance and updated the document addition logic in TestMultiPhraseQuery . java to ensure the document is correctly added to the document
updated the assignment of tickets in ReservationController and modified the filter condition in TicketHelper to include OFFLINE _ PAYMENT status to ensure that
added synchronization and error handling for the onTimeout method in HttpChannelState . java to ensure thread safety during timeout operations
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use debug logging instead of
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
patch by jbellis ; review by brandonwilliams for cassandra - 1186
added support for " Home " device model in HeosDiscoveryParticipant and included serial number handling in HeosPlayerHandler to enhance functionality to support
added a new ` Wait ` class and integrated it into the ` PlainSelect ` and ` SelectDeParser ` classes to manage and parse SQL
added AttributeController and AttributeController for node and edge data handling in Neo4j to improve attribute management and streamline node and edge data
added a null check for the ` from ` variable in the ` SessionManager ` class to ensure that ` from ` and ` serverName ` is
nifi - 10663 : move rocksdb metronome to controller . repository and mark it a deprecate
updated the method to retrieve the " IS _ GRANTABLE " boolean from results to improve flexibility by allowing dynamic retrieval of the " IS
replaced System . out . println ( " In shouldNavigate " ) with Log . p ( " About " ) and modified URL
added a check for Mac OS in the CxfMtomConsumerTest . java condition to ensure compatibility with macOS environments
hbase - 26467 loadtesttool : do n ' t modify a column if it be a new cf
added the Disposable interface to the Texture class to implement the Disposable interface for better resource management
added null checks for ` tldBundleLocation ` and modified ` FragmentActivator ` , ` OSGiAppProvider ` , and ` Default
improve error message when goquorum be disable on mainnet
replace IOException with Throwable for error handling in HttpInput . java to improve error handling by using a more appropriate exception type
added a condition to skip Thailand and the change in era in LocaleTest . java to address potential issues related to the JP locale
updated API operation annotations from ` Wrapper ` to ` HostResponseWrapper ` in multiple files to improve clarity and consistency in response handling
updated equality and hash code calculation in FilteredQuery . java to include getBoost ( ) to ensure correct comparison and hashing behavior based on
reformatted the constructor in FileMenuFilter . java for consistency to improve code readability and maintainability
ggb - 1188 fix for geogebra warning , use scrollpanel instead of listbox
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that the CMS class un
added a check for empty entities before creating an ItemTossEvent instance to avoid potential null pointer exceptions when accessing entity data
renamed ` KeyMappingPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` across multiple files to improve clarity and consistency in naming conventions
update compaction test to use identityqueryfilter instead of range
added null check for ' type ' attribute in MiniAapt . java and created a test for it in MiniAaptTest . java to
added a new ` SpELJudge ` feature to the ` OperatorJudgeFactory ` and integrated it into the ` OperatorJudgeFactory
updated the condition from ` ifPresent ` to ` equals ` for ` ordinalityType ` in ` LocalExecutionPlanner . java ` to ensure
refactor Profiler class to use Lookup for retrieving the default Profiler instance to improve code readability and performance by using a more efficient lookup mechanism
refactor CertBlacklist , ConscryptHostnameVerifier , Java8EngineSocket , and ConscryptTest classes to improve code organization and maintain
updated variable names from ' l ' to ' l ' in AttributeResolution9 . java and ShadowArscAssetManager9 . java to improve
updated fullOptions list from " 1.5 " to " 6 " in SetupHid . java to support additional source and target options for
changed the visibility of the ` extractMetadataColumns ` method from private to public and refactored project handling in ` PushProjectIntoTableSource
added imports and sorted the localized names in AboutActivity . java to ensure consistent display of localized names in the spinner layout
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before updating shared preferences to ensure proper refresh behavior based on user settings
added the exception parameter to the MappingException in AuditConfiguration . java to improve error reporting by including the original exception cause
[ hotfix ] [ test ] fix flaky test fileconsumerpollstrategystoponrollbacktest
updated generic types in CompositeType and DynamicCompositeTypeTest to use wildcard generics to improve type safety and eliminate unchecked warnings
added a new method ` supportsTransport ` to ` GitClientApplication ` and refactored the ` RepositoryUrlPanel ` to use it to
updated various input consumer classes to include a new getDelegatorName method to provide clearer identification of input consumers for better debugging and monitoring
added null check for mavenMetadata and modified version filtering logic in ChangeParentPom . java to handle cases where mavenMetadata is null and improve
added a check for " Large Page Support : ( 1 ) " and modified log formatting in TestLargePageUseForHeap . java to
cloudstack - 4892 : do n ' t migrate event if the db do n ' t exist
[ http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5952 ] fix
added a new test class ` TestObjectStreamClass ` and modified the ` requireInitialized ( ) ` method in ` ObjectStreamClass . java
removed unnecessary null checks for data center info in ZoneAwareDiscoveryFilter . java to simplify the code logic for better readability and maintainability
changed log level from error to warn in OpenTracingTracer . java to improve the severity of tracing data capture failures
added a toString ( ) method to the Generator class to provide a readable string representation of the generator ' s state
updated the handling of the ` dontquote ` variable and added new test cases in ` Test . java ` to improve URI parsing logic and ensure
added a check for non - existent resources in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure
refactor response extraction logic in AccepttoApiUtils . java to improve error handling and logging to enhance robustness and clarity of API response
updated vertex buffer allocation logic in VertexBufferObject . java to ensure compatibility with Android version 5 and above
refactor SybaseASADatabase class for improved readability to enhance maintainability and facilitate future updates
added a forceProjection parameter to the HashJoinInfo constructor and updated related methods to support projections in the join process
added a method to retrieve the string distance from the SpellChecker class to provide access to the variable ' s distance
added FLAG _ ONE _ SHOT , FLAG _ MUTABLE , and FLAG _ IMMUTABLE constants to AndroidImplementation . java and
added methods to handle read column IDs in HiveFileFormatUtils and updated HiveInputFormat to use it to improve code organization and maintainability by
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added temporary toast functionality to the SavedExperiments class to provide user feedback when a temporary file is saved
added logic to set the service version if it is null in ServiceModule . java and created a test for it in ServiceModuleTest . java
added a new test class ` RawSerializationTest ` for Gson serialization tests to ensure correctness of Gson serialization methods for various collection types
simonstewart : use sslcertgenerator instead of seleniumserver
refactor the iteration over replies in ExpansionViewHelper to use an index - based approach to improve readability and maintainability of the code
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow more time for resource access failures
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to validate the decoding of payload data
refactor AclImpl class to improve code structure to enhance maintainability and readability of the code
refactor EasyRandomTest to improve test coverage for different array sizes to ensure correct functionality of randomized arrays with different sizes
add exception handle to reboot and stop command in citrixresourcebase
added a thread - local variable ` _ tryWriteAgain ` and modified the execution logic in ` SslConnection . java ` to improve thread safety
refactor actor visibility checks and add ancestorsVisible method to improve clarity and functionality of actor visibility checks
added logging for failed rolling updates in RollingUpdateOpFactory . java to improve visibility into deployment failure during rolling updates
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in sinkprovider
added error handling for user retrieval in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve user authentication logging and provide
refactor AtMostXVerificationTest class to improve test coverage to enhance reliability of the verification process
updated references to ` DEFAULT _ QTYPE ` to use ` QParserPlugin . NAME ` instead of ` OldLuceneQParserPlugin . NAME
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added an @ Override annotation to the isInitialized method in ILanguageServer and created a new file LocalsCompletionTest _ template . java with a
updated the parameter name from ' idToken ' to ' shouldHaveIdToken ' in ClientAPITokenIntegrationTest . java to improve clarity
added transaction management methods to DatabaseAdapter and updated GncXmlHandler to use it to improve transaction management and ensure proper handling of accounts in the
replaced byte array handling with ByteArrayOutputStream for reading and writing to improve performance and memory efficiency when reading file contents
refactor message handling logic in MessagingTemplate . java for clarity to improve readability and maintainability of the code
added a method ` isAcceptable ` to check if a source file is an instance of ` J . CompilationUnit ` to ensure compatibility with
added maxBufferedDocs and RAMBufferSizeMB settings to TestIndexWriterMergePolicy . java to optimize memory usage for index writing operations
added functionality to update witnesses in the Manager and ManagerTest classes to enhance witness management functionality and ensure correctness through unit testing
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing potential NoSuchElementException during iteration
[ hotfix ] [ runtime ] remove log4j level from flumenode
added authentication credentials and modified authentication metrics assertions in BasicAuthIntegrationTest . java , modified DaemonStream . java and BasicAuthIntegrationTest . java
replaced HashMap with LinkedHashMap for nodes in DependencyUtil . java to ensure predictable iteration order for graph nodes
add an internal error mapper to jerseysupport ( # 4891 )
refactor header validation logic to use a helper method to improve code readability and maintainability by reducing duplication
updated system property handling to handle specific Java property keys to improve compatibility with different Java versions and enhance property management
changed method parameters from String to CharSequence in StringSubject . java and added corresponding unit tests in StringTest . java to enhance flexibility in string
add jfr . internal . countertime ( ) and jfr . eventwriter ( ) to checkgraalintrinsics
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
update connection factory property to use the appropriate DataSource based on compactor status to ensure correct DataSource is used for better configuration management
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
updated the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable . ConstantState d ` to ` Drawable d ` and adjusted the
refactor input stream handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve code readability and ensure proper resource management
added support for the " COALESCE " function in the RexNodeConverter and SqlFunctionConverter classes to enhance the functionality to support
camel - 16462 : camel - hls7 should use mockendpoint instead of mockendpoint in unit test
updated context class loader management in JavassistProxyFactoryFactory to ensure proper context class loader is used during proxy factory generation
updated constructors in DefaultDateTypeAdapter to use ' final ' keyword for consistency to improve thread safety and readability of the constructors
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor URI handling in HttpClientRequestBase to use setURI ( ) instead of a boolean flag to simplify the code and improve clarity by
added a filterOldEntries ( ) method to filter entries based on the number of entries to ensure that only valid feed entries are processed in the
change log level from fatal to warn in FSHLog . java to improve logging severity for append failures
refactor ` NodeMap ` class to implement ` Iterable < T > ` instead of ` Iterable < T > ` to improve code structure and
renamed the predicate variable from ` predicate ` to ` subPredicate ` in ` DiscoveryClientRouteDefinitionLocator . java ` to improve clarity
added a check for non - empty fields before adding the project operation in MongoRecordReader and modified the return logic in RexToMongoTranslator
add the admin list to the admin list if it ' s empty
replaced the usage of MultiFields with SolrIndexSearcher for term retrieval in multiple classes to ensure compatibility with SolrIndexSearcher and improve
updated the method to return a string representation of the bean to include the identity hash code to improve clarity and debugging by providing more context in
added null check for classNode ' s getLineNumber in GroovyParserVisitor . java to improve robustness by ensuring primitiveType is not null before building the
svm : remove unused hashcode ( ) method from frameinfoqueryresult and javakindubstitutions
[ hotfix ] [ test ] increase timeout for seda block when full test
added a new file ` package - info . java ` to the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure correct length calculation based on the buffer size
updated import statement from ` io . micrometer . common . lang ` to ` io . micrometer . core . lang
updated SQL query to include user serial information in IconCache . java to enhance data retrieval by including user - specific information
fix issue with defaultmqproducerimpl # getbackpressureforasyncsendsize ( ) and # getbackpressureforasyncsendnum
added a boolean parameter for classfileOnly and modified resource addition logic in ClasspathElement , ClasspathElementDir , and ClasspathElementModule
added a method ` fixBaremetalForeignKeys ` to ` Upgrade410to420 . java ` to ensure foreign key references are properly
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to simplify the class structure by eliminating unnecessary
added onTearDown method to DefaultAudioSink to call onOffloadBufferEmptying when the audio track is closed to ensure that off
refactor UpstreamCacheManager to use a ScheduledThreadPoolExecutor for scheduling upstream tasks to improve task management and performance by utilizing a scheduled thread pool
refactor StreamType class for improved readability to enhance maintainability and clarity of the code
updated assertion message in Recording . java to include the expected output to improve clarity of the assertion failure message for better debugging
updated FilestorePage and RootPage to use RequiresAdminRole and modified user authentication logic to enhance security by ensuring only authorized users can access
camel - 16462 : camel - elasticsearch - ignore camel - rest - tests / camel - rest - tests / camel - elasticsearch - rest
added a check for the declaring class of the method in ExpressionControlBusFactoryBean to ensure that the method is only processed if it is a
updated button references from " leftButtonAltcoin " and " rightButtonFiat " to " buyAltcoin " and "
camel - 16462 : camel - restlet - do n ' t allow to route with invalid url . thanks to daniel
refactor createNextBlock and createNextBlock methods to remove unnecessary ' final ' keyword to improve code readability and maintainability by reducing
removed Serializable interface from BTreeMapJava and updated test annotations in ConcurrentSkipListMapTest and JSR166Test to improve serialization handling and
added null check for getCause ( ) before logging error messages in RuleEngineImpl . java to avoid potential NullPointerException when getCause ( ) is null
reformatted conditional statement for clarity in Main . java to improve code readability and maintainability
updated the method call from ` mFilesAll . indexOf ` to ` mFiles . indexOf ` in ` LocalFileListAdapter . java ` to
deleted the PlainVerifier . java file to remove unused JWSVerifier class to streamline the codebase
added a conditional check to close system windows based on the triggeredFromAltTab state to ensure proper handling of system windows when the alt tab is
updated DialogFragmentIT and OCFileListBottomSheetDialog to utilize BottomSheetDialog and adjusted dialog state management to enhance dialog functionality and improve
updated MimeUtil . parseCharset method to include UTF - 8 encoding to ensure proper handling of character encoding for better compatibility
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization of the TextField component
refactor testSerialization method to use TestUtilities for serialization to improve code readability and reduce boilerplate code
updated calculation of preRange and fill type in GroupByFillDataSet and added a new test for it in PhysicalPlanTest to ensure correct handling
added validation for negative array sizes and improved argument handling in JAXWSExceptionBase . java to ensure proper exception handling for negative array sizes and
test : migrate unresolved import test to junit 5 ( # 4394 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for tasks to complete
[ hotfix ] [ test ] change default value of jobmanageroptions from legacy to region
added i18nSafe annotation to the ShadowActivity and ShadowAlertDialog classes , and updated related methods to support i18nSafe annotation to
replaced Apache Commons Logging with POILogger in POIFSFileSystem . java to improve logging consistency and maintainability
refactor alarm code handling in InstarHandler . java to improve clarity and functionality to enhance code readability and maintainability by reducing
add remove operation count to localmap stats for delete operation
refactor status checking logic in Response . java to use a switch statement to improve readability and maintainability of the code
added a method to find the javac location in CheckResourceKeys . java to improve the handling of javac files to enhance functionality by allowing
add ` ` project - name ' ' option to flutter create additional setting ( # 4891 )
added a new file ` DeprecatedStubbingTest . java ` to test the behavior of deprecated stubbing methods in Mockito to ensure correct behavior
updated import statement from org . eclipse . jetty . server . DispatcherType to javax . servlet . DispatcherType to ensure compatibility with the
add more test case to make sure we do n ' t try to parse the treebank error
added a conditional check to allow RSA key exchange configuration based on system properties to enhance security by controlling key exchange behavior based on system properties
replaced ` output _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent potential memory leaks
added methods to manage service and access token deletion in PubSubAPI and SDMAPI classes to improve resource management and ensure proper cleanup of OAuth services
replaced AGGRESSIVE _ EASE with EMPHASIZED interpolator in TaskbarEduView . java to improve
added UpdateRegionLocationPlan to ConfigPhysicalPlan and updated logging levels from debug to info in multiple classes to enhance logging detail for region migration processes
added a new file FileDialogLeakTest . java to test the behavior of FileDialog ' s finalize method to ensure proper resource cleanup and
hbase - 13434 addendum move testopentableincoprocessor to hbase - commons - hbase - common
trufflefeature : do n ' t throw an exception if the implementation method be uninterruptible .
[ hotfix ] [ protobuf ] [ table - common ] remove redundant split method call in pdcodegenrowdeserializer and pdcodegen
updated conditional check from ` disi = = null ` to ` disi ! = null ` in ` DrillSidewaysScorer .
add synchronization to fakemediasource . preparesource ( ) and hasreadstreamtoend ( ) .
added Java version checks and constants for minimum Java version in Constants . java and Helper . java to enhance compatibility checks for Java 9 and later versions
updated FileReporter instantiation to explicitly cast null to String and File to ensure proper type casting for File objects
changed the method from ` isFalse ( ) ` to ` isTrue ( ) ` for checking end - to - end encryption keys to ensure the
added back navigation functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing navigation to the home button in the action
added support for the GET _ USER request in the RpcServlet and RpcUtils classes to enhance user management capabilities by allowing users to access specific users
added the @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to conditionally check for ARM architecture to ensure
replaced direct assignment of ` startClass ` with a temporary variable ` originalStartClass ` to improve code clarity and maintainability by using
updated exception message and improved local handling in DexBody . java to enhance clarity of error messages and enhance local variable management functionality
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` event . getSuppliedResponse ( ) ` in TestAsyncContext
kristianrosenvold : fix nurse look and feel in commonapp
corrected the regex pattern in AppPage . java to ensure proper formatting of version strings in the application
refactor animation listener implementations in LauncherAppTransitionManagerImpl to improve clarity and maintainability to enhance code readability and maintainability by
updated AddressFormatException to use the correct version instead of base58 to improve clarity and accuracy of the error message
replaced ` getExtraDataMap ( ) ` with ` newOfferPayload . getExtraDataMap ( ) ` in ` EditOfferDataModel . java ` to
updated milestoneParameters initialization to conditionally create OpenTickets and repository parameters based on milestone status to ensure correct milestone parameters are used based on the
updated the RFBattery value from 640 , 0 , 0 to 80 in PipeItemsWood . java to accommodate a larger
refactor getClusterKey and getStateMachineClusterInstance methods to include blueprint name and revision parameters to improve clarity and maintainability of cluster key retrieval
set the default value of the downgradeAllowed variable to true in UpgradePack . java and added a test for it in UpgradePackTest .
updated XML parsing methods to use NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE and added a check for node count in XMLStream
add system . lwjgl . system . emulatesystemloadlibrary configuration .
replaced instances of ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePaged
refactor file handling in DefaultPlatformManager and FatJarStarter to improve directory creation and resource management to ensure that the output stream is
updated the debug message format in the doTest method to include additional parameters to improve clarity of test output for easier debugging
camel - 1771 : fix the bug of camel - spring - xml - dsl and camel - spring - xml - dsl . thanks
[ hotfix ] [ doc ] fix typo in metric option description
hbase - 24414 add dfs . support . append and dfs . heartbeat . interval to testfulllogreconstruction . testfull
added reuseAddress property to DatagramSocketOptions to allow configuration of network buffer sizes and traffic class
updated player kicking logic to use the shutdown message method instead of a hardcoded string to improve clarity and maintainability of the shutdown message
deleted the Locatable interface from the internal package to remove obsolete code to streamline the codebase
updated error messages in VersionInfo . java for clarity to improve readability and maintainability of error messages
renamed ` equalityPredicateColumns ` to ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to improve
reformatted code in HandshakeHandler . java for consistency to improve code readability and maintainability
fix a syntax error in the Navigator class to improve code readability and maintainability
updated access modifiers of constants in RecordReaderFactory . java and added a new test class in RecordReaderFactoryTest . java to improve encapsulation
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and corresponding unit tests to enhance query
refactor grouping logic in CalciteSqlParser to use a new method for expression outside the grouping list to improve code readability and maintainability
refactor MappedByteBuffer and FileChannelLinesSpliterator to utilize AtomicInteger for buffer reference counting and unmapping to improve memory management and ensure proper
refactor LdapUtils to use a local validator variable instead of directly accessing the validator object to improve code readability and maintainability by reducing
added a method ` schedule ( ) ` to ` CircuitBreakerImpl ` and modified the ` circuit breakerTest ` to utilize ` Scheduled
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags setting in Launcher . java to streamline intent
updated the property name from " ajax " to " progressbar " in SubmissionController . java and FileUploadRequest . java to improve clarity
updated the display name in TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to
added synchronized keyword to addExportedCount and getExportedCount methods to ensure thread safety during concurrent access
updated the import statement for IntRangeUtil from IntRangeUtil1 to IntRangeUtil to ensure compatibility with the latest version of the library
updated HttpParser to handle encoded HTTP headers more robustly and added a test for encoded headers to improve error handling and ensure correct encoding of HTTP
updated layout resource from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to ensure the correct layout is used for configuration
updated print statement in SLWTTextListing . java to include position in the document to improve clarity of log messages for better debugging
replaced the ` onlyLeaderIndexes ` variable with a ` useTlogReplicas ` method in ` ForceLeaderTest . java ` and added
rename Thread . java files to improve clarity to enhance code readability and maintainability
refactor template suffix handling in AbstractConfigurableTemplateResolver to improve code readability and maintainability to enhance maintainability and facilitate easier
camel - 16462 : camel - cxf - add support for the soap : body namespace in camel - cxf
reformatted spacing in YamlRepresenter . java for consistency to improve code readability and maintainability
updated output formatting in ToChar . java and added new test cases in TestFunctions . java to improve readability and ensure correct functionality of SQL
added configuration checks for valid transactions and write IDs in GenericUDTFGetSplits . java to ensure valid transactions and write IDs are correctly set
replaced ` length ( ) = = 0 ` with ` isEmpty ( ) ` for ` columnNameProperty ` and ` columnTypeProperty ` and `
added a check for a book path before loading it in DataHolder . java and introduced a new method hasNoInitialImage in Picture . java
added a new test case for handling non - continuation records in SSTDeserializer to ensure proper handling of non - continuation records in the manufact
replaced the default value of ` mScale ` with a constant ` DEFAULT _ GRID _ COLUMN ` in ` AppPreferencesImpl ` and
updated the " empty - differences in line breaks " message to " ( line contents match , but line break characters differ ) " to improve cl
added a ` waitingForKeys ` flag to ` DecoderInputBuffer ` and modified conditions in ` ClippingMediaPeriod ` and ` Sample
removed the " / api " prefix from the API path annotations in OkexV3 . java to streamline the API path structure for better
updated comparison logic in LineUtilitiesTests . java for x1 , y2 , and epsilon to ensure accurate detection of line coordinates based on epsilon
added error logging for varargs and old array syntax in JavacParser . java and created new classes for varargs and old array syntax to improve
log a warning if defaultdrmsessionmanager be not access on the wrong thread .
added support for the METHOD type in the VariableContext class and corresponding unit tests in TestVariableContext to enhance functionality and ensure correct handling of METHOD
added unit tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure proper error handling for invalid compilation units and
refactor buffer limit logic in Piece and SharingPeer classes to use a local variable for position to improve code readability and maintainability
updated GatewayAutoConfiguration to include HttpClientProperties parameter and added response timeout handling in NettyRoutingFilter and RetryGatewayFilter to enhance configuration flexibility
updated ` NativeLinkTargetGroup ` and ` CxxLibraryFactory ` to use ` getTargetForPlatform ( ) ` instead of ` getNativeLink
added unit test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and RexNodeConverter to enhance the functionality of the RexNodeConverter to support
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final instance of ` QUERY _ LOG _ ENTRY _ VALUES `
[ http : / / code . google . com / p / mybatis / issues / detail ? id = 353 ] add a
updated certificate chain handling in PKCS12KeyStore . java and added a new certificate loading method in StoreSecretKeyTest . java to improve clarity and
refactor reflection access checks in NativeObject and ReflectionCheckLinker classes to improve clarity and maintainability to enhance security by ensuring reflection access
removed the ' public ' access modifier from constructors in CollisionMap . java to restrict access to the constructor for better encapsulation
updated the ` getRawInputFromTransactionInput ` method to use ` @ Deprecated ` and added a null check for the input parameter to indicate that
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement for better readability to improve code maintainability and reduce
cloudstack - 4892 : remove region _ id from the list of user / region table ( # 4892 )
added support for encryption in OldExcelExtractor and a corresponding test case to enhance error handling for unsupported encryption formats in the extraction process
add extra _ image _ build _ argument to mx _ java _ benchmarks to build native image
simplified the visibility setting for the image in TimeLineCursorAdapter to improve code readability and maintainability
[ hotfix ] [ test ] increase wait time in batchStateChangeuploadschedulertest
refactor directory creation logic in ShadowContext and improve directory deletion logic in ContextTest to enhance code clarity and maintainability by encapsulating directory
refactor exception handling to use Class . forName ( " junit . framework . ComparisonFailureError " ) instead of anonymous inner class to improve
increased WAIT _ TIME _ MS from 10000ms to 60000ms in LauncherInstrumentation . java to increase wait time for better
updated import statements and added AUD extension handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance JWT claims management by in
remove default value for breakonfirsterror in camel - kafka
added a new constant ` selectableItemBackground ` to the R class to provide a visual representation of the selected item ' s background
replaced specific imports with a wildcard import for trade DTOs and added a placeholder method for placing stop orders to streamline import statements
updated the assignment of eventType in TxnSetOperation . java to ensure the correct event type is assigned when the record is null
added a new ` ResumableRandomAccessFileListener ` class and updated the ` ResumableExternalDownload ` class to use it to enhance
updated the class name in SecurityClassLoad from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to
added logic to set the size and format of format records in HSSFDataFormat . java and updated test assertions in TestWorkbook . java
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer in favor of flinkkafkapro
updated the calculation of compressedChunkLength in CompressedInputStream . java to use maxCompressedLength ( ) instead of chunkLength ( ) to ensure
add idempotentrepository class to make it easy to use in a redis environment
fix a bug where vanilla do n ' t use metadata here instead of damage .
added a check for ` realLocalRepo ` before retrieving the artifact path in ` LegacyLocalRepositoryManager ` to ensure compatibility with local repository layouts
added checks for the initialization of the TaskManager in LocalInstanceManager and JobManager classes to ensure that the TaskManager is only started if it
added additional configuration options to AbstractArtifactResolutionException for deploying files to improve error handling and provide clearer information about the deployment process
replaced ` getTemporalPath ( ) ` with ` getInternalTemporalPath ( ) ` in ` UploadFileOperation . java ` and added a
added a new method ` findByEntries ` to ` FeedEntryStatusDAO ` for querying FeedEntryStatus objects based on a list of entries to
added execution of ` executeStart ( ) ` and ` executeEnd ( ) ` methods in ` ContextImpl . java ` and refactored
updated the ` instantiate ` and ` convert ` methods in ` FormatterConverter ` to include a ` formatterString ` parameter and added a null check
added conditional logic to handle file input streams based on SDK version to ensure compatibility with devices running Android O and above
replaced instances of ` setRemoteAddress ` and ` setRemoteHostname ` with direct assignment of ` getRemoteAddress ` and ` getRemoteHost `
added a null check for ` realClass ` in ` Robolectric . java ` to ensure that ` shadowClass ` is annotated with
added a new configuration option ` tlsMutualAuthenticationRequired ( ) ` to ` NettySslContextFactory ` and ` ExampleNettySslContextFactory
updated import statements and added a test for handling SSL exceptions in BasicHttpTest . java to ensure proper handling of SSL - related exceptions to improve
added getter methods for consumer and producer in AbstractKafkaResumeStrategy . java to provide access to these consumer and producer in subclasses
refactor code structure to improve readability and maintainability to enhance maintainability and clarity of the code
updated warning message from " address / subject / text " to " SMS " in CommunicationsManager . java to clarify the reason for
add draftqueryoptimise ( query < t > query ) and draftqueryoptimise ( query < t > query ) method to ebean
added exception handling for IOException and improved logging in MultipartBody . java to enhance robustness by handling potential IO exceptions and providing clearer logging
fix ( zipfolder ) : fix typo
updated multiple Java files including EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters to improve code organization and maintainability
allow attach file to be add to the working directory if it ' s not set
added LoadOptionsBuilder to SchemaCrawler options in AccessTest . java to enhance schema crawling capabilities for improved performance
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
removed exception throwing for unknown operation name in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty . java to enhance the functionality of the ProjectProperty class
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for better resource management to ensure proper resource management and prevent
[ hotfix ] [ doc ] fix typo in datastreamjob javadoc
refactor file output stream handling in TestContentProvider . java to use try - with - resources for better resource management to improve code readability
camel - 16462 : camel - cxf should use getrealclass ( ) instead of getclass ( ) . getname ( )
added a condition to check if the HTTP / 2 protocol is " h2 - 14 " and modified the logic for determining if the HTTP /
updated variable handling in LambdaToMethod and added a new boolean variable mIsLambda in ClassFileVisitor and ReflectionVisitor to improve clarity and functionality
updated the regex pattern in CoordinationTransformer . java from " SBARQ < 2 " to " SBARQ < what < WP >
increased the timeout value from 5000 to 60000 in the copyURLToFile method to allow more time for file operations to complete
added a call to setSlop ( phraseSlop ) in QueryParser . java to set the slop of the mpq based on the phrase
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time
updated the port number from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
refactored screengrabber and screengrabber to use parallel task
updated visibility logic for the compound view in EditShareFragment to include both canEdit and areEditOptionsAvailable to ensure the compound is only visible
updated progress calculation in DepthController . java to ensure progress is non - negative to prevent potential issues with negative progress values
removed unused packetReceived methods from ClientSession and ComponentSession classes to streamline code by eliminating unused methods
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service object in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes to
[ pantheon ] add ` ` hidden ' ' flag to pantheon command
added doNotInstrumentClass for " CoroutinesRoom $ Companion " in AndroidConfigurer to prevent unnecessary instrumentation for specific room types
modified the access modifier of the isSupported method in NegotiateAuthentication . java from private to public to allow access to the class loader from the
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code by eliminating unnecessary initialization
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5452 . add a
refactor AuthenticationProvider and TargetObject classes for improved clarity to enhance code maintainability and readability
added handling for tagging in PdfDocument to ensure that lines are flushed and closed when a tag is present in the PDF document
log4j2 - 1343 add unit test for patternlayout . testpatternselector
do n ' t throw unsupportedoperationexception if hta mode do n ' t support selenium rc
added a new ` MwThankPostResponse ` class and modified the ` thank ` method in ` Service . java ` to implement
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` to use it to enhance socket handling capabilities and improve code clarity
updated the initialization and size settings of revokingStore in Manager . java to ensure proper handling of the revoking store state and improve
added unit tests for query execution in HQLTest . java to ensure correct handling of implicit joins in query results
updated the assertion to remove carriage return characters from expected and actual strings in NonVisualRegressionTest . java to ensure consistent line endings
replaced references to ` toSync ` with ` filesToCommit ` in ` IndexWriter . java ` and updated references in ` SegmentInfos
added @ Final annotation to several methods in BaseError . java to indicate that these methods are intended to be final for better code clarity and
added validation to ensure the consumption user resource percentage is within a valid range to prevent runtime errors due to invalid percentage values
added a condition to check if the old login is shown before showing the legacy login to ensure that legacy login is only shown when the user is
[ hotfix ] fix typo in streamnetworkthroughputbenchmarktests
refactor response page setting logic in EditTeamPage . java to improve code readability and maintainability
updated debug log message to include the exception to improve error reporting for plugin credentials initialization failures
refactor the server socket channel closing logic in ConnectionManager . java to ensure proper resource management and prevent potential resource leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
refactor the dynamic partition specification creation logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by encaps
refactor ROUND _ HALF _ UP _ FACTOR and StringTemplate methods for improved clarity and functionality to enhance code readability and
added a ` visitDirectory ` method to ` JarDirectoryStep ` and its implementation in ` DirectoryTraversal ` and ` JarDirectoryStepTest `
added a new file JWKSetEditor . java that extends PropertyEditorSupport to handle JWKSet parsing to facilitate the editing of JWK
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter to use new PendingTerm
do n ' t call method . getparameterklasses ( ) when invokeespressonode . getparameterklass
changed the default value of byIP from true to false in Fetcher . java to disable the fetcher threads per host by IP by default
simplified the conditional check for queryTimeout in StatementUtil . java to improve readability and maintainability of the code
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included target configuration hash in HaskellGhciRuleIntegrationTest
refactor ReplicaPosition class for improved clarity to enhance maintainability and readability of the code
bug 10614 : add initial delay check to network stats update task
replaced the variable ` t ` with a static final variable ` FINAL _ FRAME ` in multiple files to improve code readability and maintain
updated swipe length calculation in Background . java to improve UI responsiveness based on display density
added a new module - info . java file for the ` org . eclipse . jetty . http3 . server ` module and updated
updated JsonType and JsonTest to use constants MY _ JSON _ OBJ instead of string literals to improve code readability and maintainability by
removed unnecessary parentheses in the context assignment logic in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ checkpoint ] use configuration . get ( ) instead of option . nodefaultvalue ( )
updated ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` and added a new test for finding inner class references
added a space to the command string in TimestampCheck . java to improve readability of command output for easier debugging
replaced ` FluentIterable ` with ` MoreCollectors ` for file filtering in ` ChromeTraceBuildListenerTest . java ` to improve code
[ 3.0 . 0 ] add register config parameter to serviceconfig ( # 11386 )
added security otr mode to disable otr session
added outline size and transparency properties to NodeLabelRenderer and updated renderProcessing method to include outline size , transparency , and color to enhance the rendering
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean value from false to true in Win32FontManager . java to enable the functionality of the font manager
added null check for the variable ' v ' before visiting it to avoid potential NullPointerException when ' v ' is null
do n ' t use gethandlingpolicy ( ) in jdtbatchcompiler when there be no classpath
added alignment point and text anchor properties to LabelBlock class and updated its usage in LabelBlockTests to enhance label rendering by allowing customizable alignment
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
added Locale parameter to the ` fromRfc1123DateString ` method in multiple classes to ensure consistent date formatting across different locales
updated the download method to include the extension " . pdf " in the exception message to ensure the test correctly verifies the download functionality works as expected
nifi - 1566 : add outputno hits property to jsonqueryelasticsearch ( # 1749 )
[ iotdb - 4892 ] fix speed calculation in quotamanagerimpl ( # 4892 )
refactor switch - case statements in Election . java to use a try - catch block for better error handling to improve code readability and
douniaberrada : remove uncheckrun ( ) from readfilesp and streamfilesp
refactor widget handling logic in PageChangeListener . java to improve clarity and maintainability to enhance readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` RecordInputStream ` , and ` HSSFWorkbook ` classes
added a try - catch block around unregisterInvalidatedSessions ( ) in PluginMonitoringFilter . java to handle potential exceptions during session checking to improve
refactor CategorizationFragment class for improved clarity to enhance maintainability and readability of the code
updated the status update message from " false " to " not reachable " in HueLightHandler . java to clarify the status of
add fml . isloading ( ) method to allow fmlclienthandler to check if it ' s loading
added " unit . millions " and " unit . thousands " to return string representations in UI and BlockInventoryFragment to improve cl
refactor MessagePackParser to use a switch statement for type handling and add BinKeyPojo class to improve code readability and facil
added parameterized tests for querying reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure correct functionality of query
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps in JSON and deserialization processes
added offset calculations for x2 and y2 in GeometryUtils . java to ensure proper positioning of geometric elements within the specified offset
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to use SortingOrderDialogFragment for improved clarity to enhance
do n ' t throw an error if the testplan do n ' t exist
replaced instances of " DbmsType " and " schemaName " with " getDbmsName " , " schemaName " , and " getTableName "
modified the handling of argument identifiers in Parser . java to ensure that null values are not added to the parameters list to improve robustness by prevent
updated the default protocol setting in JettyHttpComponent9 to use the protocol from the scf object instead of a hardcoded value to improve
set displayVolume to true in VolumeVO . java to enable displayVolume by default for better user experience
refactor version method to accept a boolean parameter and update message retrieval logic to improve clarity in version handling and ensure correct message retrieval based on
updated condition checks in ChangeLogParameters . java for better handling of global change logs to improve clarity and correctness of the logic for determining
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for non - critical messages
hhh - 14663 skip test for oracle sql string formatting in basicformatterimpl
updated socket timeout handling in Connection . java to ensure proper handshake and timeout settings for the SSL socket
updated the calculation of ` size ` in multiple fragments to include ` MainActivity . isPopup ` to ensure that the status bar size is only
change the default value of the CHA option from false to true in EspressoOptions . java and update DefaultClassHierarchyOracle . java
http : / / issues . apache . org / activemq / browse / amq - 4892 - add more debug log to
refactor JodaTimeRangeRandomizersTest to use AssertJ assertions instead of manual data provider to improve code readability and maintainability by
updated WebDescriptor to handle different versions of Jakarta EE to ensure compatibility with newer JDK versions and enhance entity redirection functionality
fix race condition in readiness . isready ( )
replaced ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to streamline endpoint processing by using the correct
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig classes to reflect new versioning requirements
added a security manager check before accessing package access in ObjectStreamClass and ObjectStreamField to prevent potential NullPointerExceptions when the security manager is not
removed unused imports and modified return statements in Utils . java , and changed UGSCommandCount in XLCDCommunicator . java to
updated DefaultMetricsTagProvider to handle null host values and changed method visibility from private to protected to improve code clarity and ensure proper handling of
added a new test suite for MockBrowserTest in ClientDriverSuite . java to enhance test coverage for mock browser functionality
change default setting from Level . OFF to Level . ERROR in Launcher . java to change the default value from Level . OFF to Level .
changed instance variables to be final in IconNormalizer . java to ensure immutability and improve code clarity
added a boolean flag ` firstCallPrepareDo ` to control the execution of the ` prepare ` method based on the ` firstCallPrepareDo
refactor ` showWorkspaceAndExitOverviewMode ` and ` hideAppsCustomizeHelper ` methods to improve clarity and functionality to enhance user experience
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature . java ` and `
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method and updated its logic to conditionally handle invisible associations to
cloudstack - 4892 : remove private ip from capacity table when remove a private ip .
updated the URL format in ProfileServlet . java to include a description for empty diagram and linux 4.6 + to provide guidance on users
added a new class ` RequiredRefFieldModel ` and modified ` ModelResolver ` to handle the ` required ` property and ` propDef `
renamed configuration classes to include " Auto " in their names to standardize naming convention for auto - configuration classes
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
updated StringBuilder size and refactored unique assignment logic in ConfigStore and CommonSetup classes to improve performance and clarity of hue ID generation
added image loading logic to TimeLineCursorAdapter and TimelineArrayAdapter to ensure the picture is set only if it is present in the cache
updated error messages in HiveConf . java to clarify compaction behavior for insert - only tables to improve user understanding of compaction behavior and
added a null check for the storage path before verifying if the waitingToSend is down to avoid potential NullPointerExceptions when accessing storage paths
refactor resize threshold checks to use a new method ` checkResize ( ) ` to improve code readability and maintainability by centralizing resize
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connection management
camel - 16463 : camel - core - optimize : deprecate @ xmlattribute ( required = true )
added debug tracing logs to TouchInteractionService , RecentsAnimationDeviceState , and TouchInteractionService to enhance debugging capabilities for better tracking of
added a condition to check if the class name starts with " com . intellij . rt . junit . 37 " in Abstract
updated assertions in TestMultiSearcher to compare length of hits2 and hits3 to ensure accuracy of length assertions in tests
added a new file LucenePackage . java that defines a static method to obtain the Lucene package to provide a utility for obtaining the
adjusted the addition of sizeInBytes by subtracting the previous size to correct the logic for adding sizeInBytes to ensure correct handling of sizeInBytes
updated calculations in StatsRulesProcFactory and added estimate functionality in GenericUDAFBloomFilter to improve performance and ensure immutability of fields
added a null check for the drawable toggle before animating the drawer to avoid potential NullPointerExceptions during animations
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings related to unused code
added logic to determine if ` scanModules ` is set based on ` overrideClasspath ` , ` overrideClassLoaders ` , and ` enableSystem
[ msbib ] fix mssql test failure on non - corporate bib file
added a method to cancel core recoveryies and updated logging for clarity to improve code readability and maintainability by encapsulating recovery cancellation logic
replaced direct calls to ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` and introduced a new method ` currentTimeMillis ( ) `
removed debug print statements and simplified the conditional logic in RepoEditView . java to streamline code and enhance readability by eliminating unnecessary
[ hotfix ] fix typo in javadoc
added trust resolver , role hierarchy , and permission evaluator properties to SecurityEvaluationContextExtension and updated the return statement to include default fields to enhance security
added a check to set exponentSize to primeSize if it is zero to ensure exponentSize does not exceed primeSize
replaced direct calls to ` File ` with ` FileStorageUtils . getUsableSpace ` across multiple files to improve code readability and maintain
updated the ` DistinctSqlAggregation ` to handle both ` delegate . delegate ` and ` other . values ` in ` DistinctSqlAggregation
added a new test method ` calling _ login _ should _ execute _ post _ login _ activities _ for _ user _ on _ successful _
replaced static final ExtractorSpanishStrippedVerb with instance variable ExtractorSpanishVerbStripper and added null check for dictionaryPath
refactor CharArraySet to simplify code and improve readability to enhance code clarity and maintainability
updated track count validation logic in MuxerWrapper . java to improve clarity and correctness of track type validation
replaced ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule . java ` and updated related test methods to
set character encoding to UTF - 8 in PinotClientRequestServlet and refactor string processing logic in StringDictionary to ensure proper handling of UTF -
updated the case name from " Logical Analyzer " to " Logic Analyzer " and removed unnecessary applications array from InstrumentsFragment . java to
refactor the instantiation of the vector by introducing instanceClassName and instanceClass to improve performance by avoiding repeated instantiation of Vector instances
removed syncMetaLeader ( ) method call from CMManager . java to streamline the code by eliminating unnecessary synchronization
[ # 8796 ] feedback question detail ( # 8798 )
added TestLoggingExtension to DiagramRendererTest to enable logging functionality for testing purposes
camel - 4892 : fix camelcase mapping issue when use camel name
added support for the VIOMI Internet electric water heater 1A ( 60L ) device to MiIoDevices . java to
replaced direct calls to getSslSessionData ( ) with a local variable for SSL session data to improve code readability and maintainability by
added a new file CreateNewSpreadsheet . java to demonstrate the creation of a spreadsheet using Apache POI to facilit
refactor ` CacheProperties ` and related classes to replace ` Duration ` with ` long ` for time - to - live in ` Redis `
updated content URI references from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper and LauncherModel to ensure
updated the version number for the wiremock group from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to
updated synchronization from ` lucidaFontName ` to ` this ` in ` SunFontManager . java ` to ensure thread - safe
added a condition to check if ' < ' is a single character in DocClassUtil . java to ensure proper handling of empty characters in the
removed unnecessary String . format ( ) call in the return statement to simplify the code and improve readability
added a message to inform the user when no validation errors are found in ValidateCommandStep . java to inform users about the absence of validation
updated imports and refactored the configuration logic in IntegrationTestContextLoader . java to enhance resource management and improve context hierarchy handling
refactor code to replace ` getResponder ` with ` getComponent ` for better clarity to improve code readability and ensure proper handling of component
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures to use ` String ` instead of ` Long ` to improve clarity and consistency
replace occurrences of " $ 1 " with " $ \ n1 " in CellContentConverter . java to ensure compatibility with line endings in
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 ,
mondrian : fix typo in mondrianproperties javadoc
added stack printing functionality in ProcessTools and updated launcher permission handling in CustomLauncherTest to improve debugging capabilities and ensure proper permission management during testing
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the test process by eliminating unnecessary
added a condition to check if the symbol has a slot before converting the store type to ensure conversion only occurs when the symbol has a slot for
refactor data source initialization logic in ContainerMediaChunk . java and InitializationChunk . java to improve code readability and maintainability by consolidating
updated BaseLockFactoryTestCase to utilize PrintStream and PrintStreamInfoStream for improved output formatting to enhance readability and maintainability of the
tika - 3757 -- add support for dynamic service loader in tika config .
updated import statements and replaced generic types with diamond operator in DocLint . java and DocLintTester . java to improve code cl
added support for the IMPORT _ CMD command in DataImportHandler and DataImporter classes to enhance the functionality by allowing the import command to be processed
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest . java ` to ensure that inner
removed unused import of android . util . Log in JettyService . java to clean up the code and reduce unnecessary dependencies
updated the ` checkItemPlacement ` method to include a ` workspaceScreens ` parameter and adjusted related logic accordingly to enhance item placement checks
added a new servlet to kill the JVM in the Jetty7AppServer and created a new KillSwitchServlet class to facilitate
refactored the handling of transformed rows in LLRealtimeSegmentDataManager to use a list for transformed rows to improve code readability and
added a check to skip processing for Teredo devices on Windows to ensure compatibility with Teredo devices in the application
add a dialog to inform the user when a contact be not connect .
replaced ` registerBeanDefinition ` with ` registerBeanComponent ` in ` AuthenticationConfigBuilder . java ` to improve code readability and maintain
updated the drawBitmap method call to use null instead of r . left and r . top to simplify the bitmap drawing process by using a null
fix meitrack and totem time format ( fix # 1193 )
changed access modifiers of getFontPath and getPlatformFontPath methods in SunFontManager and X11FontManager classes to enhance encapsulation and clar
added @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should not be used in new code
fix clientmapstoretest . testreachedmaxsize ( ) test failure
added a ` ` keepEmptySentences ' ' option to the ` ` SentimentPipeline ' ' and ` ` MaxentTagger '
updated the ` createArtifactSubdirectory ` method to return a boolean and improved error handling in ` MavenArtifactFetcher . java ` to enhance
updated JavaCompilerService and ReusableCompiler to use NO _ MODULE _ COMPILER and modified return statements in JavaLanguageServer and JavaCompiler
add a null check for the answer in DirectAgentAttache . java to ensure proper handling of null resources to avoid potential NullPointerExceptions
removed exception handling from the sendEmail method in Emails . java to simplify the email sending process by eliminating unnecessary exception handling
fix nullpointerexception in pipeitemsobsidian . java and pipeitemsobsidian . java
dataimporter : fix test variable resolver to use locale . root
added a ` IncludeDecals ` option to ` StorageOptions ` and a corresponding checkbox in ` StorageOptionChooser ` to allow users to control
added a null parameter to the generateDocumentation method in Liquibase . java and renamed the getImplementedDatabases method in Liquibase
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to enhance performance tracking and improve assertions in TestHiveProtoLoggingHook to enhance
updated log messages from " Begining " to " Beginning " in multiple files to improve clarity and consistency in logging output
updated the class file version check in ignoreRecordAttribute . java to include the major version in the output to ensure accurate identification of the class file
added a new test class LdapPasswordAuthenticationTest for LDAP password authentication to ensure correct handling of LDAP attributes in the LDAP context
updated import statements and modified conditional logic in TaskCompiler . java to use BasicStatsNoJobTask for footer scan usage to improve code clarity
fix a nullpointerexception in the reloadmanager ( # 1193 )
refactor VisibleAdvance class implementation to improve code readability and maintainability
fix # 1193 : do n ' t wait for the informer to start ( # 1193 )
updated condition to check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure correct handling of dynamic number columns in Sparklines
added null checks for groupId , artifactId , and getVersion in RawPom . java to ensure that parameters are not null to prevent potential NullPointerExceptions
added a null check for ` apiInfo ` before assigning it to ` api ` to avoid potential NullPointerException when ` apiInfo ` is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes for improved consistency to enhance maintainability and readability of the codebase
added texture disposal and logging functionality in PhotoPanel and FlameRenderer classes to improve shader management and facilitate debugging during loading and
updated scene scene from 460 to 520 and modified max handling logic in FxWindow . java , InsnListEditor . java ,
added bounds checking for character characters in CSSParser . java to ensure proper handling of end - of - line characters and avoid index out - of
added functionality to enable or disable the look and feel for the JFrame and JDialog in the UIServiceImpl class to enhance user experience
removed the ' this ' keyword from the SQL query and simplified method calls in HostRoleCommandDAO . java to improve code readability and maintain
updated F2 _ TEST , F5 _ UNKNOWN , F6 _ TRANSPONDER _ TEST , and F6 _ TRANSPONDER _
refactor swipe handling logic in WindowTransformSwipeHandler . java for clarity to improve readability and maintainability of swipe detection logic
replaced HostDatabase with ColorStorage in ColorsActivity . java to enable color storage functionality in the application
refactor String class for improved readability to enhance maintainability and ease of understanding for future developers
removed unused SLF4J logger imports and added logger initialization in multiple classes to improve code cleanliness and maintainability by eliminating
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrievelobals from the
added assertions to verify the success of the sendcoin method in MultiSign34 . java to ensure that the sendcoin method behaves as expected
test : migrate cufiltertest to junit 5 ( # 4449 )
updated classpath separator handling in JavadocReport . java to use the system ' s path separator to ensure consistent path formatting across different operating systems
changed the access modifier of the augmentSuccessViewModelObjects method from static to non - static to allow multiple instances of AbstractServiceValidateController to
added assertions for presence of fields in the Metamodel for both AbstractEntity and Person classes to ensure that the presence of fields in the metamodel
removed the ` conf ` parameter from the ` Outlink ` constructor calls in multiple files to simplify the Outlink instantiation by eliminating unnecessary
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve
added imports and modified return statement in UseLambdaForFunctionalInterface . java and removed unused imports in TypesInUse . java to enhance code cl
replaced ` appendClassSelector ( ref ) ` with ` createFileSet ( ref ) ` in ` TestNGAntTask . java ` to
added a check for the root input type of Aggregate in HiveCardinalityPreservingJoinOptimization . java to ensure that only supported root inputs
added a pool parameter to the Mapping constructor and updated related references in RegistryEvent . java to enhance registry management by associating it with the pool
reformatted the assignment of x and y3 variables in Intersector . java to improve code readability and maintain consistency
added default methods ` sbeDecodedLength ( ) ` and ` sbeLimit ( int limit ) ` to ` MessageDecoderFlyweight
refactor ElasticsearchContainer initialization to use a constant version instead of a hardcoded value to improve maintainability and ensure compatibility with the latest elasticsearch version
use bytebuffer . wrap ( ) instead of array . copy ( ) in work receiver
updated ClusterDefinition and GSInstallerClusterProvider to use version identifiers instead of cluster names to enhance clarity and maintainability by centralizing version
camel - 14284 : remove unused setconfiguration method from ftpendpoint
[ zeppelin - 4892 ] set status to READY and set error reason to null in interpreter setting .
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` Gen . java ` to ensure
added a check for basic constraints in ` ForwardBuilder . java ` and created a new class ` BuildEEBasicConstraints . java ` to enhance
added initialization method to JdbcPostgresqlDAO for database connection initialization to ensure compatibility with PostgreSQL version 9.5 and above
updated WebSocket implementation to use a maximum message size and added buffer size validation in AbstractWebSocketConnection to ensure that the input buffer size does not exceed
lucene - 4892 : fix indexreader . undeleteall ( ) to prevent doublewrite
added null check for scopes in ClientRegistration and updated test cases in ClientRegistrationTests to ensure that scopes are not null and improve test coverage for
added null checks for orderBy before adding it to the expression and explanation to avoid potential NullPointerExceptions when orderBy is null
replaced JUnit assertions with Hamcrest matchers in ClusterEntrypointTest . java to ensure compatibility with Hamcrest ' s
cloudstack - 4892 : do n ' t delete back - up snapshot if the vm be in kvm or kvm ( #
replaced direct call to LogUtils . initHiveLog4j ( ) with a variable assignment for logging to improve code readability and
added a check for non - empty tasks before processing the first element in AssetManager to prevent potential NullPointerExceptions when the tasks list is empty
change the return type of ` deleteNode ` and ` deletePublicKeyNode ` methods from void to boolean in ` OpenPgpPubSubUtil `
fix bug in relationentity . gettimesearchpagespec ( ) and relationentity . gettimesearchpagespec ( ) in jparelation
added null checks for resultString length in Code128Reader and Code39Reader classes and overridden image handling inFalsePositivesBlackBoxTestCase
replaced TreeSet with LinkedHashSet for cipher suites in SSLContextImpl . java to ensure predictable iteration order of cipher suites
updated control character handling in Escaper . java and adjusted test cases in InternationalizationTest . java to improve character validation and ensure correct
added a check for CharSequence return type in ProviderSqlSource . java and modified return type handling in SqlProviderTest . java to improve type safety
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView . java and updated scrollDelta calculation in Workspace . java to
renamed variable ` synthetic ` to ` pruned ` and updated related logic in ` JavaTemplate . java ` to improve clarity and consistency in
added a call to ` method . setAccessible ( true ) ` in ` WidgetInterceptor . java ` to ensure that the method is accessible before use
updated ConnectorConfigGenerator to conditionally set literal initializer based on the presence of " database . server . id " to ensure that the default value
updated the Mozilla version in AbstractRipper . java from MacOS X 10.7 to Windows NT NT.0 to ensure compatibility
added a menu item for the web interface in BasicSystemUtils . java to enhance user experience by providing a direct access to the server ' s
replaced instances of ` new ValueType ( new ValueType ( ) ) ` with ` actualValue ` in ` HandleGetter . java ` and updated
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ checkpointing ] fix npe in filecheckpointio
added a comment to call the loadBattlePassManager ( ) before avatar postLoad to avoid null pointer when loading the battle
updated SSHD version in GenericContainer . java and added additional configuration options for TCP forwarding to ensure compatibility with the latest features and improvements
added a new array ` bigObject ` and a call to ` System . gc ( ) ` in ` ThresholdTest . java ` to ensure
updated logging conditions in StdErrLog . java and added new test cases in StdErrLogTest . java to ensure proper logging behavior and validate
fixed - rremoteservice . getremoteliverivce ( ) method do n ' t work with service name . #
added ` isSelected ( ) ` and ` setSelected ( boolean b ) ` methods to the ` MultiButton ` class and updated related methods to enhance
updated the activity from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to reflect the new next - up functionality in the
[ issue # 6021 ] fix the issue of brokercontroller not be able to start with a controller ( # 6022 )
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for better resource management to improve code clarity and ensure proper closure of Redis
refactor theme color handling in ProgramGridCell and Utils classes to improve code clarity and maintainability by centralizing theme color retrieval logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapters for AndroidArtifact , AndroidGradlePluginProjectFlags , AndroidGradlePluginProjectFlags , AndroidGradlePluginProjectFlags
removed duplicate entries in TestPayloadCheckQuery . java to streamline the code and improve readability
refactor ConsoleReader to improve output formatting and add a new test for reading strings with mask to enhance code readability and ensure correct output formatting
added user - specific command details in BaseCommand . java to improve user feedback during command execution
move modulesupport and classloaders from org . graalvm . compiler . test to org . graalvm . compiler . api .
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
added a check for the " one . util . streamex . emulateJava8 " property in StreamExInternals . java to ensure
updated texture paths in DecalTest , MusicTest , and SimpleDecalTest to use " sys . png " instead of " wheel
updated registerReceiver and unregisterReceiver calls in Launcher . java to ensure proper registration and unregistration of the system dialogs receiver
updated import statement for Cluster in HostsRemovedEvent . java to ensure correct usage of the Cluster class
added a new boolean field ` allowIntrospection ` and modified related logic in ` ClientDetailsEntity ` , ` ChainedTokenGranter
replaced direct calls to ` write ` with ` writer . write ` and added HTML encoding to enhance security by preventing XSS vulner
added a new link for PhrasePrefixQuery and SpanQuery in the Query . java file to improve the documentation and clarify the functionality
replace size ( ) = = 0 with isempty ( ) in commentinserter . java and commentparser . java
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve readability and maintainability to enhance code
updated method signatures in AbstractAssert , Assert , DateAssert , and ExtensionPoints interfaces to accept an Object instead of a generic type to improve type
updated the ThrowingFunction interface to use a generic type T instead of a generic type to improve type safety and clarity in the exception handling
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` , ` PreferenceManager ` , and
fix ( prettyprinter ) : fix npe in typefactory . getelements ( )
replaced direct instantiation of BitmapDrawable with Robolectric ' s newInstanceOf method to enhance compatibility with Robolectric ' s Rob
updated method name from isValidSEnding to isValidEnEnding in DutchStemmer . java to improve clarity of the method ' s
updated the page indicator resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current icon
added a new volatile integer variable ` reinvocations ` and updated log messages in ` BasicInvocation . java ` to track the number of backups
updated the calculation of topPadding in DefaultLookAndFeel . java to correctly account for the inner height of the element to ensure proper layout
added a break statement in the Recognize class to ensure proper flow control in the recipe processing logic
added preference handling for home screen visibility and haptic feedback in multiple Java files to enhance user experience by enabling haptic feedback based
updated ExcelBatchReader to handle different cell types and added corresponding unit tests in TestExcelFormat to improve formula handling and ensure correctness in Excel
fixed bug 138015 - immutablefield no longer report false positive for anonymous inner class .
added a private String field ` userAgent ` in ` CommaFeedConfiguration ` and modified the user agent assignment in ` HttpGetter ` to ensure
added a required attribute to the @ XmlAttribute annotation in AvroDataFormat and Base64DataFormat classes to ensure that the XML attribute is required
changed log level from info to debug for file not found logging to reduce log verbosity for non - critical messages
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use OfflinePlayer ' s getUniqueID method to ensure compatibility with OfflinePlayer ' s
camel - 16462 : camel - core - optimize defaultroutescollector to handle empty include pattern
added a vertexColor property and modified color handling logic in PShape3D . java to enable conditional rendering based on the vertex ' s color
updated ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` to include ` isPkColumnFiltered ` parameter and modified related logic to
removed unnecessary Shadow import and simplified matrix value retrieval in ShadowMotionEvent . java to simplify code and improve readability by eliminating unnecessary dependencies
changed package structure of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
simplified the handling of class definitions in GroovyEngine . java to improve code readability and maintainability by reducing redundancy
refactor brandingservlet into branding . plugin and add plugincontextlistener
removed redundant line breaks in NativeCodeGenerator . java to improve code readability and maintainability
replaced ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` Flight
added unit tests for the ` hasCause ` method in ` ThrowableAssert _ hasCause _ Test . java ` to ensure that the ` has
removed variable ` flattenName ` and ` pack ` from ` AutomaticDependencies . java ` to streamline the code by eliminating unnecessary
updated variable name from ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to clarify the purpose
simonstewart : add test for firefox profile and capability
camel - 16462 : camel - managed - add description to route to provide a way to configure the description of a route
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a call to set the weight of the edge in ImporterCSV . java to ensure that the edge ' s weight is set correctly for
fix tariffs cost per hour calculation ( # 4396 )
updated SQL query parameters in DatabaseMetaData . java and DatabaseMetaData . java to include additional column default values to ensure correct handling of column default values
added a null check for binarized sentences in SentimentAnnotator . java to ensure that Binarized sentences are not built by parser
updated the ` User ` class to return a string representation of the ` username ` to provide more detailed information about the user ' s state and
updated the body extraction logic in MessageHelper . java to handle null values to improve robustness by providing a clearer error message when the body
[ hotfix ] [ runtime ] replace executionvertex with execution in taskdeploymentdescriptorfactory
[ roster ] fix npe in roster access .
added a reference for " maven . test . classpath " in AbstractJRubyMojo and removed the unchecked suppression annotation in Cuc
updated method handle type comparison logic in MethodHandleImpl . java and added a new test for user method signature in MethodHandlesTest . java to
added imports for StopFilterFactory , NamedSPI , and HTMLStripCharFilterFactory in multiple files to enhance functionality and improve code clarity by
updated width and height checks from ' > ' to ' ! = ' in URLImage . java to ensure that both width and height are not
added a condition to check if the name does not start with " META - INF / " and modified the handling of package names to ensure that
added a ` final ` keyword to the ` createImageToFileSystem ` and ` createImageToStorage ` methods in ` ImageDownloadService . java `
updated assertions and log message formatting in StackWalkerTest . java to ensure compatibility with version checks and improve log message formatting
changed the visibility of the addViewportJob method from protected to public to allow external access to the addViewportJob method
removed the ` partitions ` parameter from the ` buildFlow ` method and related tests to simplify the flow building process by eliminating unnecessary parameters
removed server restart and no - argument checks from TestDatabase . java to streamline server shutdown process and improve test reliability
added null and empty checks in NodePathsConvertOperator and modified logic in SchemaQueryMergeOperator to improve robustness and prevent potential null pointer exceptions
added harvesting time retrieval and updated method signatures in multiple classes to improve clarity and functionality of harvesting time handling in the application
updated font dimensions for particle rendering in ParticleEditor . java to improve visual appearance and responsiveness of the particle editor
added configuration handling for the " keyserver _ port " property in UpgradeCatalog240 . java and corresponding tests in UpgradeCatalog240Test . java
added a transparent color to the SvgViewerFactory class to improve the visual appearance of the SVG viewer
updated import statements and annotations in ShadowKeyguardManagerTest and ShadowKeyguardManager classes to ensure compatibility with the latest Robolectric features
updated the ` containsExactly ` method to accept a ` asList ` parameter instead of an ` accumulate ` parameter to simplify the method signature and
updated Bandwidth builder to use refillGreedy instead of simple and added a null check for the key in AsyncBucketProxy to improve
refactor GermanAnalyzer , GermanStemmer , and WordlistLoader classes for improved clarity to enhance code readability and maintain
updated the Generator class to accept a set of hooks and modified transformations to include it to enhance transformation handling by allowing hooks to be evaluated based on
added error handling for NoClassDefFoundError in REngine . java to ensure compatibility with NoClassDefFoundError and set supported to Boolean
refactor TraceFilter and TraceWebFilter to use SpanAndScope instead of Span to improve code clarity and maintainability by encapsulating span
added null check for getCause ( ) in AbstractUpdateCommandStep . java to avoid potential NullPointerException when getCause ( ) is null
updated SolrServerException to include the base URL as a parameter to improve error handling by providing the base URL as the original exception
corrected the logic for setting landscape in HSSFPrintSetup . java to ensure correct handling of logical orientation in print setup
updated the return statement in JavaVoidObjectInspector to handle null values more gracefully to improve robustness by avoiding potential NullPointerExceptions
added validation to check for invalid argument names in ArgDesc . java to ensure that invalid argument names do not cause runtime errors
added memory handling for location updates in AndroidLocationPlayServiceManager to ensure location updates are requested and removed based on the presence of a background location
updated the condition to check for GL _ POINTS instead of checking for non - GL _ POINTS to ensure proper handling of primitive
trufflestring : fix arrayindexoutofboundsexception in trufflestring .
added a method to set the command list in ComboBox to ensure the command list is correctly displayed for better user experience
nifi - 4892 : escape alias filename with forward and back slash .
updated command line arguments in ZkCLI . java to use localhost addresses instead of hardcoded strings to improve flexibility in specifying the environment for
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler classes to improve code readability and maintain consistency
added a conditional check for the remoteGrpcStatus before posting the console event to ensure that the error message is only sent when the remote
reformatted method signatures in XYItemRenderer for consistency to improve code readability and maintainability
added a new entity ID to the tick entity check in ForgeChunkManager . java to ensure that the entity ID is added to the tick
added a static method ` getErrorString ` to handle various error codes in ` GLSurfaceViewAPI18 . java ` to improve error
added a method to retrieve supported locales in FeatureRegistry and updated InfoRequestHandler to use it to improve locale handling and provide clearer error messages for
updated the server URI format in RFC2616BaseTest to use " http : / / myhost : 1234 " instead of " serverURI
added a call to addToHelperList ( ce ) in Construction . java to enhance functionality by allowing dynamic addition of helper lists
added a condition to skip the first element of the " [ [ ] " escape sequence in GlyphLayout . java to ensure proper handling of specific
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by using privileged actions for context class
added null checks before calling populateDirectoryList ( ) and browseToRoot ( ) in ReceiveExternalFilesActivity . java to ensure that the folder
added a null check for m _ serviceLoaderClassLoader before loading the service loader to avoid potential NullPointerException when m _ serviceLoaderClassLoader is not initialized
removed debug log statement from BarrowmanCalculator . java and modified the deltap calculation in TubeCalc . java to improve logging clarity
updated column assignment logic in TimelineControllerImpl . java to check if the object is a Node instance before adding it to the column to ensure
added a method to register extra components in BaseBrokerStarter to enable the registration of additional components for the broker admin application
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to validate the behavior of SQL
peergroup : do n ' t use the preferred version of the peer if the client version be less than the preferred version .
fix a bug where the builder do n ' t update the tile when it ' s change .
updated configuration handling in multiple classes to utilize a Supplier for RatisConfig to improve flexibility and maintainability of the configuration management
updated multiple Java files for consistency and clarity to improve code readability and maintainability
added a check for ManagedService annotation before unregistering JMXHelper in DefaultRemoteProxy . java to ensure JMXHelper is only registered if it is
fix for tika - 1343 - fix for non - unicode entry name in packageparser
added a new file ` TestSplitThruPhiDivMod . java ` with methods for division and division operations to implement a test for division
added methods to lookup generic templates for interfaces and superclasses in TemplateRegistry . java to improve type safety and clarity in generic type resolution
updated the constructor parameter from 512 to 1028 in ByteArrayOutputStream . java to improve memory usage for better performance
added comments to the languagesExcluded array in PlayerSettingsScreen . java to clarify that various symbols are not available to improve code readability
refactor byte array initialization and length calculation in TransferCompletionHandler . java to improve performance by reducing the number of byte transfer operations
rename windowlostfocus to windowdeactivated so that it can be use in the popup menu
modified semantic exception handling in SemanticAnalyzer to check for null source before throwing a semantic exception to improve robustness by preventing potential null pointer exceptions
added scaling for skeletal mesh ' s extensions in SkeletonRenderer . java to ensure proper rendering of skeletal mesh ' s extensions
added getSolrHome method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes to provide a standardized way to retrieve the
added ComponentScan annotation to SpringWebConfig to enable component scan functionality in the Spring web configuration
removed the ` getAccount ( ) ` method from ` UserListItem ` to streamline the code by eliminating unnecessary complexity
added a test for installation of PackageInfo and updated related logic in ShadowPackageManager and ShadowPackageManager to ensure proper handling of package and activity
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added TransactionCapsule fields and methods to the TransactionTrace class to enhance transaction management capabilities in the application
add option to disable member connection order in cluster
changed the type of ` val ` from ` Text ` to ` CrawlDatum ` in ` SegmentReader . java ` to align with the
refactor JsonDeserializer class for improved readability to enhance maintainability and facilitate future updates
replaced integer fetchSize with ThreadLocal fetchSize in QueryProcessExecutor and OverflowQueryEngine classes to improve thread safety and reduce contention
updated the method name from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the
removed the import of ExecutionContext from TaskletStep . java to streamline dependencies by eliminating unnecessary dependencies
initialized the title variable to an empty string to ensure a default value is used for the title variable
added empty body handling in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response body is not null to prevent
[ runtime ] mark embeddedserverinstance a deprecated and deprecate
add support for macevent registration in jabrefframe
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
added a return statement to the ` toEnum ` method in ` HandlerLibrary . java ` to ensure that the method returns the correct enum type
changed the visibility of the ` hideUnprivilegedObjects ` variable from private to final to ensure that the ` hideUnprivilegedObjects `
change logging level from info to fine in ThreadedAcousticScorer . java and update ConcatAudioFileDataSource instantiation in AudioData
added a check for Android Q and saved Giphy video URL in IOUtils . java to ensure compatibility with Android Q and save Giphy
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 545 . add
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent for efficiency to improve code readability and reduce boilerplate code
hbase - 22958 remove unused dataoutputoutputstream from hbaseobjectwritablefor96migration
set the " hive . stats . column . autogather " configuration to false in TestAcidOnTez . java to ensure that the
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity and improve performance
added a new method ` getDefaultProviderName ( ) ` to ` Platform ` and updated its usage in ` OpenSSLProvider ` and ` StandardNames `
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to enhance the functionality of the MockitoBeforeTest
added checks to ensure class and method names are enabled in TestSuiteBuilder . java to improve error handling and provide feedback when no test cases are
refactor GroovyAutoComplete and GroovyLanguage classes for improved readability and maintainability to enhance code clarity and ensure proper handling of empty
fix import to use osm instead of osm
simonstewart : use default http client with retries
changed the visibility of mHideSysUiScrim from final to non - final and added preference management for showing the system UI scrim
modified the ` enqueue ` method to include a ` canceled ` flag and improved error handling in the ` OkHttpCall ` class to enhance
refactor swipe handling logic in WindowTransformSwipeHandler . java for clarity to improve readability and maintainability of swipe detection logic
updated RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to enhance security by leveraging
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr . java ` to include new
simonstewart : rename testboxedanddevirtualizedtypes to testBoxingConstructors and add testboxingvalueof
added unit tests for application display metrics in DeviceConfigTest . java and refactored setting of display metrics in DeviceConfig . java to ensure
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource from drawable to mipmap . ic _ launcher in RootCursor . java to align the icon with the new mip
added content text setting to errorBuilder in FileUploader . java to ensure error messages are properly formatted for better user experience
refactor ConcurrentHashMap class for improved performance to enhance thread safety and reduce contention
added methods to adapt user trades and trade data in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsDemo classes
updated method calls in PlotSquared , Claim , Delete , SetBlockFast _ 1 _ 8 , and SetBlockFast _ 1 _ 8 to
simonstewart : add support for firefox and internet explorer capability
added support for handling VARBINARY types in BlobType . java to ensure proper handling of VARBINARY data types in the database
updated variable names and conditions for cookie version handling in SetCookieSupport . java to improve code readability and maintainability by using descriptive variable
added synchronization around the cache type mappings in LibFFIContext . java to ensure thread safety when accessing shared resources
updated InboundBuffer to use ContextInternal instead of VertxContext and added thread validation in InboundBufferTest to improve context handling and ensure
refactor LdapTimeoutTest to accept a timeout parameter and introduce a new test method for handling server timeouts to improve test reliability by ensuring
updated the usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java to ensure
camel - cxf : set operation name to inout header for camel - cxf
refactor multiple UI classes for consistency and clarity to improve maintainability and readability of the codebase
added support for ` BoosterSet ` in ` ComponentAssemblySaver ` and modified ` BoosterSet ` return value in ` Booster
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 565 . add
removed the ` __ ` keyword from the metrics keys and updated the interval calculation logic in multiple classes to improve code readability and maintainability by
replaced an InternalError with a return false return in the code to indicate a successful compilation stub invocation for JEP 359 support
updated import statements in TestIPCUtil . java to use Apache Commons Logging instead of mortbay Log to improve logging consistency and
removed chunked transfer encoding handling from the NettyRoutingFilter to simplify the request flow by directly using the request object
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper attribute management during tokenization
refactor VerificationAfterDelayImpl to accept a polling period for improved error handling to enhance flexibility by allowing customizable polling period for verification
added compaction handling and session state management in the SemanticAnalyzer and QueryCompactor classes to enhance security checks and manage compaction state more effectively
[ zeppelin - 4892 ] add jar file to zeppelin container for zeppelin -
hbase - 26462 fix hbaseadmin . gettableregions ( byte [ ] ) and hbaseadmin . gettableregions (
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
removed the ` calcXBounds ` method from ` BarLineChartBase ` and ` CombinedChartRenderer ` classes to streamline the rendering process
added a try - finally block around reader . parse and reader . setContentHandler to null to ensure reader ' s content and error handlers are
added release of headerBuffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` and ` Java
added a null and closed check before closing the ResultSet in JdbcExecutor . java to avoid potential NullPointerExceptions and ensure the result set is closed before
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and driverVersionMinor in DerbyDatabase . java to reflect the latest driver
fixed bug 138045 - usestringbufferlength no literals = = true no longer report a false positive
removed error logging statement from RemoteSparkJobMonitor . java to simplify error handling by eliminating unnecessary logging
refactor createDb method to return a Connection object instead of void to improve resource management by ensuring the database connection is properly closed
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 20615 add option to disable compaction when there be too many file
added functionality to handle JSON deposit responses in BitstampDepositAddress . java and created corresponding unit tests in DepositAddressJSONTest
replaced IllegalStateException with response . abort in BufferingResponseListener . java to improve error handling by using a more appropriate abort method
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath . toAbsolutePath ( ) ` to ensure the
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and replaced ` operationType ` with ` invocationType ` in ` DefaultMetricsRegistry `
added a loop to check if the NetworkInterface supports multicast before returning it to improve robustness by ensuring only supported multicast interfaces are returned
added a loop to check for all valid CheckSum instances before returning true to improve code readability and maintainability by reducing redundancy
added a clone method to the BufferedChecksumIndexInput class to indicate that the clone method does not throw an unsupported operation
replaced Math . sqrt ( x * y + y ) with radius * radius * radius in Circle . java to improve accuracy of radius calculations
added a conditional check for the frequency band identifier before assignment in P25Channel . java and modified return statement in P25ExplicitChannel . java
replaced ` tapSquareSize ` and ` tapSquareCenterX ` with ` tapRectangleWidth ` and ` tapRectangleHeight ` in `
change default replicate on write from true to false to disable replication on write operations by default
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` and modified the ` Util ` and ` CryptoFacilities
added ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and corresponding tests in ` TraceCallableTests `
refactor error response handling in FileActivity and update synchronization actions in FileDisplayActivity to improve clarity and functionality to enhance user experience by providing
added a new method ` stream _ writable ` to ` ForeignIncubatorQuicheConnection ` and ` JnaQuicheConnection
added a new boolean parameter ` true ` to the ` JavascriptContext ` class to enhance the functionality of the JavascriptContext class
removed the ` Align . left ` parameter from the ` TableCell ` constructor calls in ` BaseTextFormattingHelper ` and ` TableCell `
added a new file ` TracingAutoConfiguration . java ` to enable auto - configuration of tracing in the UAA application to enhance tracing capabilities and
added a Para parameter to the addContent method in Submissions . java to ensure that the content is correctly added to the Para instance
refactor ` getPrunedQueryableSegments ` method to accept a list of segment names instead of a single list to improve code clarity
refactor VertxBufferTest class for improved test coverage to enhance reliability and maintainability of the code
refactor date extraction logic in MessageSubmissionChunk . java and add a new test class TestMessageSubmissionChunk . java to improve code readability
changed the visibility of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation classes to improve code clarity and reduce unnecessary dependencies
added a new class ` MongoDataIntegrityViolationException ` and modified ` MongoTemplate ` to include ` WriteResult ` and ` ActionOperation ` to
added a return statement to the jobCompletionFuture ( ) method in JobCoordinationService . java to ensure the method returns the job completion future
updated the ` bitsToHumanReadable ` method to include a new ` bytesToHumanReadable ` method and modified the initialization of ` mimeType2
removed conditional check for TieredMergePolicy in TestUpgradeIndexMergePolicy . java and added a test method in TestMergeOnFlushMerge
added a condition to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
updated error logging message in CpuNDArrayFactory . java to provide clearer guidance on performance issues related to hardware extensions
updated loadSettingModels method to accept an InputStream parameter for reference properties to enhance flexibility in loading settings by allowing different input sources
added null checks for input parameters in FilterLeafReader to ensure input parameters are not null to prevent potential NullPointerExceptions
added support for default key size in jcecrmfencryptorbuilder
updated IOException to include a message in IOException and removed unnecessary constructor parameters in SoftEndOfStreamException to improve error handling by providing a more descriptive
added @ Inject annotation to multiple Java classes to enable dependency injection for improved dependency management
updated the size of the BundledDistributionTest and added assertions in PostgreSQLTest to reflect the correct number of database users and their attributes to ensure
[ hotfix ] [ stream ] add pipeline . name config to streamexecutionenvironment
updated scaling logic to account for two - panel layouts to ensure correct scaling based on device profile dimensions
changed the IcePlainsBiome class from GrassyBiome to SnowyBiome and updated the populator setup to
refactor methods in DataUpdateManager and StorageUtils for improved clarity and consistency to enhance code readability and maintainability by reducing
[ wasm ] add ` ` isqualified ' ' flag to thisreference
updated regex pattern in XhamsterRipper . java from " wmde . " to " w \ w " to ensure compatibility with
fix an infinite loop in glowworld . getall ( ) .
hhh - 14713 - oracle dialect should use table name if schema be null or empty
fix ( console ) : do n ' t print ` ` path ' ' if part end with ` ` ( ' ) ' ' ( #
added a new parameter ` mNumberOfAllFiles ` to the ` FileMenuFilter ` class and updated related methods to handle file selection and des
[ java ] do n ' t use termwindowlength in networkpublication .
fix typo in guildupdateownerevent javadoc
update inPortalTicks based on creative status in Player . java and Entity . java to adjust inPortalTicks based on creative status to ensure that
added compression support to the ClusterMonitorTileSkin and updated chart spacing calculations to improve visual appearance and clarity of chart data display
refactor ResponseTemplate , TransactionalListCodecTemplate , TransactionalMapCodecTemplate , and TransactionalSetCodecTemplate classes to improve code organization and maintainability
updated variable types from ` int ` to ` long ` for ` lengthDataBits ` and ` numberTriplets ` in ` Base64 .
removed the header check from the renderer null check to simplify the condition for better readability and maintainability
fix : do not update the vm with custom service offering when the same disk offering be the same
replaced wildcard imports with specific imports in HitbtcAdapters . java and updated the Builder initialization in HitbtcAdapters . java
corrected the variable name from ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to
updated the category name from " automation " to " jrubyscripting " in JRubyScriptEngineFactory . java to clarify the
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in variable naming
updated the condition to check for preciseExchangeAmount in ParticipateAssetIssueActuator . java to ensure preciseExchangeAmount is either positive or
removed the loop condition from FeedUtils . java to streamline the code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify the functionality of HDF4 file parsing
[ calcite - 6092 ] add test case for invalid time value
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods to quiet close all AutoCloseable instances in CloseHelper . java to improve control over closing of AutoCloseable objects and enhance code
updated confirmation button references in RemoveFileDialogFragment . java to use common _ yes instead of hardcoded values to improve code readability and maintain
added null checks before drawing images in Pixmap . java to prevent potential NullPointerExceptions when source dimensions are non - zero
replaced ` ReflectionHelpers ` with ` java . security . ProtectionDomain ` for defining classes in ` UnsafeAccess . java ` to improve
updated regex pattern for hostname validation in GUIUtil . java and added corresponding unit tests in GUIUtilTest . java to improve regex accuracy and ensure
updated synchronization logic in CachedRowSetWriter . java to track the number of conflicts instead of a boolean flag to improve clarity and accuracy of
add support for pubspec . yaml and pubspec . yaml ( # 1187 )
added a conditional check for reference equality in ReferenceMemory . java to ensure proper handling of references to the same instance
added validation for seed files in the Injector class and improved error handling to enhance reliability and provide clearer error messages for missing seed files
added a condition to check if the original view is not hidden in FloatingIconView . java to ensure the original view is not hidden when
updated the calculation of maxNodes and maxTrips in DefaultLoopPolicies . java to ensure maxNodes does not exceed maxTrips to improve
added a check for texture coordinate types in CombinedTexture and introduced a method to check if texture coordinate types are supported in UVCoordinatesGenerator to
added error handling for file deletion and improved input validation in EncodeActivity , SupplementalInfoRetriever , and MatrixUtil classes to enhance robustness
added seek and close methods to TracingConsumer and TracingProducer classes to ensure proper delegation of seek and close methods in the tracing framework
updated SQL query to use substring instead of locate for handle and added oldPrefixLength to improve query accuracy and ensure proper handling of prefix values
simplified the initialization of convertedValsList in JSONSerializer . java to improve performance by eliminating unnecessary addition of collection to the converted
[ java ] deprecate abstracttimer constructor and deprecate it
added a nightly build warning message to inform users that the Universal Gcode Sender is a nightly build to inform users about potential
updated the ` getResponsesSortedByRecipient ` method to include a ` sortByTeam ` parameter and modified the ` getResponsesSortedByRecipient `
corrected a typo in the return statement in UnnecessaryThrows . java to improve clarity and accuracy of the returned message
deleted the CacheApplication class and refactored related classes to use CommonsApplication instead to streamline the codebase by eliminating unnecessary components
replaced calls to ` realObject . getApplicationContext ( ) . startService ( ) ` and ` realObject . getApplicationContext ( ) `
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated RuntimeEnvironment to conditionally update configuration based on SDK version to ensure compatibility with devices running KitKat and above
added a new constant ` VERSION _ DEF _ REPO _ UPDATE _ LINK _ EXISTS ` and a corresponding test in ` StackManagerTest `
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
add a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during indexing processing
added imports for internal resolver helpers and readers in CheckPackageAccess . java to ensure proper access control for XML processing
rename method ` save ` to ` add ` in ` JobRepository ` and update execution context methods to improve clarity and consistency in method naming
added handling for LoopExitNode instances in GraphUtil . java to ensure proper processing of loop exit nodes during graph processing
replaced ` RecyclerView ` with ` WidgetsRecyclerView ` in ` SearchAndRecommendationsScrollController . java ` and updated related
added a check to ensure the terminal is supported before proceeding with operations to avoid errors when the terminal is not supported
changed the data type of ` fiveSeconds ` and ` timeAllowed ` from ` long ` to ` Integer ` in ` CloudExitableDirectory
added a check for session validity in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that session validity checks are only performed when
refactor the handling of column names in ChangedIndexChangeGenerator to improve code readability and maintainability
changed the type of ` buttons ` from ` Vector ` to ` ArrayList ` and added methods for action listeners in ` ButtonGroup ` to improve
refactor UserManagerCompat classes to extend UserManagerVN , UserManagerCompatVL , and UserManagerCompatVNMr1
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods in ` MockDatabase ` , ` AbstractDatabase ` ,
updated the handling of mismatched rules in ActionGraphCache . java to improve clarity of mismatched rules and enhance error reporting for better debugging
added LockDatabaseDesc and UnlockDatabaseDesc classes to provide descriptions for lock and unlock database operations to enhance the clarity and usability of database
refactor RankingTopComponent and RankingUIModel to use setter methods for object properties to improve code readability and maintainability
added handling for disconnect messages in HandshakeHandler and NodeImpl classes to improve node statistics tracking for disconnect scenarios
added a test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT ` to verify the functionality of setting a system group to ensure
chore : update java microgenerator to 1.0 . 1 ( # 119 )
updated type validation logic in Assertions , FindMissingTypes , and TypeValidation classes to handle missing and unknown variable types to improve type validation accuracy
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to facilitate the handling
replaced specific buffer imports with a wildcard import and modified buffer size checks in CountersManager . java to improve code readability and maintainability
removed unnecessary ` toString ( ) ` methods from ` MultiSteps ` and ` SendEmail ` classes to simplify logging output for better readability and
added a check to clone the joinKeys array in JoinDesc . java to ensure that the joinKeys array remains unchanged to avoid unintended
added a default principal resolver to the authentication handler registration in WebAuthnConfiguration . java to ensure proper principal resolution for authentication handlers
added a searchPaths parameter to the addSettingsFromFile method and updated its usage in XcconfigParserTest to support additional search paths in the
changed fields to be final in Oracle . java to ensure immutability and thread safety of these fields
[ hotfix ] [ runtime ] exclude unaligned checkpoint from executioncheckpointingoptions .
add unsupportedoperationvisitor to queryparser . accept ( boolean ) to prevent unsupportedoperationvisitor .
add option to disable debug log in compiletheworld
added a check for LocalVariable type in LambdaRewriter . java to ensure proper exception handling for LocalVariable instances
added support for MySQLDatabase in CreateTableGenerator to ensure proper handling of NULL values for MySQL databases
added context class loader management and cleanup in EnvConfiguration . java to ensure proper context class loader management and prevent potential memory leaks
added a condition to set the ejection delay when stageNr is zero in SimulationListHandler . java to ensure correct motor configuration when stage
updated method names and class names from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class for improved transaction handling to enhance performance and maintainability of transaction processing
refactor ` validateIssuerClaim ` methods to accept an ` Optional < OAuthRegisteredService > ` instead of ` JWTClaimsSet ` to improve
added null check for DocCollection reference in ClusterState . java to improve robustness by providing a clearer error message when the collection is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added database name and schema name properties to ForeignKeyColumn , ForeignKeyColumnMutator , and ForeignKeyColumnProperty classes to allow configuration of foreign database and schema
[ java ] throw clusterexception when election fail to notify leader .
replaced static imports of ` shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice
refactor selection root handling in FileSelection . java and add a new test for DRILL - 4192 in TestBugFixes .
add @ deprecate oninventorytick to iforgeitem and iforgeitemstack
fix ( export ) : add war resource to file output
added a null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when getSherlockActivity ( )
updated widget binding logic in AppsCustomizePagedView , Launcher , PendingAddItemInfo , and PendingAddItemInfo classes to
[ ecobee ] add ` ` airPressure ' ' , ` ` co2ppm ' ' , and ` ` vocpp
fix npe in operationsetservercontactbookimpl . getprofilepage ( ) .
added support for " AAPT " and " AAPT2 " environment variables in Genrule . java and corresponding tests in GenruleTest .
only dump access table if trufflecompileroptions . truffleinstrument branches be set to true .
added null check before disposing of the message to avoid potential NullPointerException when the message is null
changed the ` db ` variable to be ` @ Getter ` and modified method visibility in ` TronStoreWithRevoking ` ,
updated warning messages in CoreContainer . java to indicate that LogWatcher is not yet implemented for log4j and will be disabled to improve cl
replaced stack trace printing with a failure message for cloning failures in CategoryPlotTests . java to improve error handling and provide clearer feedback
added a null check for the input stream and introduced a new class ` SmallByteArrayOutputStream ` for handling byte arrays to improve robustness and
feat ( shader ) : use intmap instead of hashmap to improve performance
replaced " territory = en _ US " with " shutdown : true " in the database connection to ensure proper resource management during database shutdown
added null checks for firstExchangeTimestamp and lastExchangeCompletedTimestamp in RouteInfo . java to ensure robust handling of null values to avoid potential NullPointerException
updated ` TestHtmlTag ` , ` TestUseOption ` , ` TestUseOption ` , ` C1 ` , and ` C1
updated the condition to check if the result is incomplete and the size of the items list is greater than 10 to ensure that the result is not
updated HybridClusterIntegrationTestCommandLineRunner to include a time column argument in usage and adjusted argument count accordingly to enhance functionality by allowing users to specify a time column for integration
updated output format handling in SiteSnapshotVariationsTest and OutputOptions to use " svg . html " instead of " svg . html " to
updated condition in DeviceProfile . java to check for non - QSB conditions to ensure proper handling of layout conditions when QSB is enabled
added equals and hashCode methods to AnimationList and replaced equality checks with Objects . equals in GltfModelKey and GltfModelKey
added a ` _ date ` field to the ` AbstractGenerator ` class and updated its usage in ` HttpGenerator ` and ` HttpConnection `
replaced instances of Adler32 with CRC32 in Store . java to improve performance by using a more efficient CRC32 implementation
cloudstack - 4892 : fix heartbeat interval default value for xenserver Self Fencing
added a new constant ` ZERO _ AREA _ FIN ` and modified warning handling in ` FinSetCalc . java ` to include ` fin
replaced Jackson annotations with Jackson ' s Jackson library and added a new DocumentMetadataSerializer for serialization to enhance JSON serialization support for
hhh - 14713 - add support for date _ trunc ( ) function in h2 and oracle dialect
added memory pool error handling in MetricUtils to improve robustness by throwing an InternalError when the memory pool is not found
updated UserTests , UserContext , FileAccess , FileTreeNode , FileTreeNode , and FileTreeNode classes to support JavaScript usage and improve error handling
updated error messages to use ` RUNTIME _ PROTOTYPE _ TYPE . classNameWithEnclosingNames ( ) ` instead of ` Configured
renamed the BACKFILL constant from " / generateAnomaliesInRange " to " / replay " to clarify the purpose of
updated the return statements in PrecompiledContracts . java to use DataWord ( 1 ) instead of DataWord ( ) . getData ( ) to
updated badge handling logic in AllAppsContainerView . java to use BubbleTextView instead of AlphabeticalAppsList . AdapterItem to
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService and ResourceHandlerTest to clarify the behavior of ContextHandlerCollection to improve code readability and maintainability by
removed conditional check for drawing identifier in Cling . java to streamline the code for better readability and maintainability
truffle : remove assertion that be n ' t need anymore .
updated the method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIsInstrument
updated import statements from ` ItBit . v1 ` to ` ItBit ` across multiple demo classes to ensure compatibility with the latest ItBit
do n ' t try to cast to string if the value be not a string array
changed class modifiers from ` class ` to ` final class ` and added a private constructor to prevent instantiation of these classes
add try - with - resources to prevent resource leak
updated class references from ` o . getClass ( ) . getName ( ) ` to ` java . util . Vector ` and ` Hashtable ` to
added ` tableNameWithType ` to the warning message in ` RetentionManager . java ` to provide more context about the retention time being logged
added trimming to the fragmentList length checks in QueryExecutorImpl . java to ensure that empty strings are not empty before processing
updated the method call to use ` modFile . getFilePath ( ) . toFile ( ) ` instead of ` path . toFile ( ) ` to
removed redundant references to ` nodeTransformerGroup ` and ` edgeTransformerGroup ` in ` PartitionToolbar . java ` to streamline code and improve
refactor conditional checks in RecentsView . java for better readability to improve code clarity and ensure proper handling of task view visibility
updated the ` calculate ` method signatures to return a ` BMIViewObject ` instead of a ` Map < String , String > ` to
removed the comparator from the thenComparing method call in QueryCommand . java to simplify the code by eliminating unnecessary comparator overhead
update damage calculation for hay bale block to ensure proper damage adjustment for hay bale blocks
refactor ` ProcessAddressSpace ` to use ` List ` instead of ` LinkedList ` and update environment variable handling in ` NewElfDump
added support for custom plugin properties in the OptionsParser and related tests to enhance configuration flexibility and ensure correct behavior of plugin configuration handling
updated condition in HashJoinBatch to check if hashTable is not empty to ensure proper handling of empty hashTable scenarios
updated timestamp validation logic and renamed test methods in TimestampTest for clarity and consistency to improve code readability and maintainability
[ java ] remove unused field from clusteredserviceagent
added a condition to check if the method is compiled before evaluating the compilation threshold to ensure that the method is not executed before proceeding with compilation
added new test cases for image2 and image joining functionality in multiple online test classes to enhance testing capabilities for different image scenarios
refactor TogglableFlag and related classes to introduce new methods for handling overridden default values to improve code clarity and maintainability
updated logging statements in DockerClientFactory . java to use parameterized logging instead of parameterized logging to improve logging clarity and maintain consistency in logging output
added a check to return early if the current platform is not ANDROID to optimize performance by avoiding unnecessary processing for non - Android platforms
replace assertEquals with assertThat in RoutesTest . java to improve readability and maintainability of the test code
added new functional interfaces ` BytePredicate ` , ` FloatPredicate ` , ` FloatToLongFunction ` , and ` ShortToLongFunction ` to the
changed the return type of getSubsColor ( ) method from int to String and updated its logic to set subtitle color to ensure subtitle color is
added a conditional check before deregistering the future in Invocation . java to ensure that the future is only removed if it is complete to avoid potential
refactor frame handling in AbstractWebSocketConnection to use output method to improve code readability and maintainability
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity and SignupActivity to ensure that the Welcome
added a new ShadowCheckedTextView class for testing CheckedTextView functionality to enable testing of CheckedTextView functionality in Robolectric
added Serializable interface to ParserState class and modified access modifiers in AccessorProperty and Property classes to ensure proper serialization of the ParserState class and
added a new entry for " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance certificate verification
removed redundant calls to ` context . setAttribute ( TEMPDIR _ CONFIGURED , null ) ` in ` WebInfConfiguration . java ` to
fix an issue with the occupant ' s nick be not correctly parse .
refactor QuicSession and related classes to use ' context ' instead of ' context ' across multiple files to improve clarity and consistency in
replaced instances of ` writer . setMergeScheduler ` and ` writer . getConfig ( ) ` with ` writer . getConfig ( ) ` and
replaced ` Character . getType ( ) ` with ` Character . getType ( ) ` in ICU4JImpl . java and TextPosition .
added support for ` ComputedDateValue ` , ` ComputedNumericValue ` , and ` ComputedDateValue ` in ` AddDefaultValue
refactor NbtScoreboardIoService class for improved readability to enhance maintainability and facilitate future updates
[ saml2 ] add check for exist classpath before resolve service provider metadata
changed the visibility of the ` printer ` variable from private to protected and added a ` createPrinter ` method in ` GraphPrinterDumpHandler `
added import for BigDecimal and updated order average price calculation in HuobiAdapters . java to improve precision and accuracy of order data representation
updated projection operations to use ` getTarget ( ) ` instead of ` getName ( ) ` and changed the type of ` fields ` from ` String
added a check for the existence of the player in the viewers list before adding a player to ensure that only one player is added to the
added constant state management for FolderAdaptiveIcon , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to enhance drawable state management and improve
refactor SPDYClient to use a separate connection setup for improved clarity to enhance code readability and maintainability by separating
fix npe in protostuffobjectoutput when serialize a null object ( # 10727 )
pdfbox - 4071 : remove unused space , a suggest by valerybokov
refactor BarrowmanCalculator class for improved clarity to enhance maintainability and readability of the code
added a condition to return early if the axis is not displayed to ensure that only valid axes are displayed in the current view
replaced direct calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` to improve
removed unnecessary whitespace in the returnToWorkspace method call to improve code readability and maintain consistency
added SSL context verification for HTTPS connections in CustomUrlJob . java and created CustomUrlTrustEverything . java for secure connections to enhance security
updated clock rate retrieval to use getRealUsedClockRateString ( ) instead of getClockRateString ( ) to improve clarity and consistency in
refactor TextureAtlas class to improve code readability to enhance maintainability and ease of understanding for future developers
updated ` getProductNameForBuildTargetNode ` to ` getModuleName ` in ` ProjectGenerator ` and added a method to set the module name
[ hotfix ] [ test ] fix deadlock in testslot
# 263 - enh : add test case for findidswithinheritance
updated WebSocketServletRFCTest to use ByteBuffer instead of a separate closeFrame variable to improve code readability and maintainability by using a more
[ wasm ] clear reference stack to avoid memory leak
[ clickhouse ] add ` ` ttl ' ' to log collection
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified serialization logic in CustomChangeWrapper and XMLChangeLogSerializer to
replaced the use of ` QueuedThreadPool ` with ` HandlerCollection ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java `
added error handling for Fresco initialization in CommonsApplication . java and modified VectorDrawableCompat initialization in NearbyController . java to
added null and empty check for objectName before trimming to ensure that objectName is not null or empty to avoid potential NullPointerExceptions
updated error messages in Command . java and TestPrint . java to improve clarity of error reporting for file access issues
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
updated variable names and added null checks for ` dname ` in ` KeyTool . java ` and ` Resources . java ` to improve code
added a @ Deprecated annotation to RuntimeOptions . java to indicate that the RuntimeOptions class is outdated and should be removed in future versions 23.
replaced byte array conversion with direct string encoding using UTF - 8 encoding to simplify code and improve performance by avoiding unnecessary byte array creation
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a standardized way to
added support for ERASE _ LINE _ ON _ FINISH option in LineReader and LineReaderImpl classes to manage prompt handling during line completion
[ hotfix ] [ master ] do n ' t check if the server name be not online
updated exception types from SIGN _ ERROR to BLOCK _ SIGN _ ERROR in multiple files to accurately reflect the purpose of the error handling related to
improve code readability and maintainability
fix ( netty ) : catch all throwable in defaulthttpclient
replaced center ( ) method with centerAbsolute ( ) for the wrapper container to ensure proper alignment of the spinner component
[ flink - 20660 ] [ runtime ] fix the issue of the networkbufferpool interruptable
testjmxintegration : fix memory leak in testjmxintegration . testjmxserver
replaced JUnit runner imports with JUnit ' s RetryTestRule for improved test reliability to enhance test reliability by allowing retries
updated the auto - commit check logic in CallTask and QueryStateMachine classes to use transactionManager instead of a boolean flag to improve transaction management
updated import statements in multiple Java files and added a new package - info . java file to improve code organization and clarify package structure
added support for the " javax . microedition . khronos . GL " extension in the DistinguishedNameParser configuration to
[ hotfix ] [ test ] remove unnecessary processingtimecallback from streamtasktest
refactor URI retrieval logic in Request . java and add a new test for connection URL handling in RequestTest . java to improve clarity and
updated access modifier of ` KEY _ LAST _ SEEN _ VERSION _ CODE ` to public and refactored the retrieval of available storage points
added methods to manage availability and availability of a client session in SessionManager . java to enhance session management functionality and improve code clarity
added a package to scan for " liquibase . pro " in ServiceLocator . java to enable scanning of Liquibase packages for
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` to simplify the
updated the ` loadWithNewGlobal ` method to accept an additional argument list to enhance functionality by allowing more flexible argument handling
refactor relative path handling logic in FastPathResolver . java to improve clarity and consistency to enhance code readability and maintainability by using
updated the weigher method to use ` toIntExact ( ) ` instead of ` length ( ) ` for length checks to ensure accurate handling of
rename ` hasRandomizedType ` methods and references from ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizationDepth ` across multiple
added support for " LEAD " and " LAG " function in UnsupportedOperatorsVisitor . java and corresponding test cases in TestWindowFrame .
added a call to clear the headers in AbstractProxyServlet to ensure that the proxy request headers are cleared before processing
added a check for the SA attach expected to work in CompressedClassSpaceSizeInJmapHeap . java to skip tests that are not
added null checks for bgColor and created TranslucentWindow class for fullscreen window translucency to ensure robustness by preventing potential
updated user info handling logic in UserInfoActivity to check for null values before proceeding to improve user experience by providing clear error messages when no information
added custom field serialization and deserialization methods for PrecompiledHeaderData to ensure that precompiled headers cannot be used on different machine to avoid runtime errors
[ hotfix ] [ kafka ] add update - mode property to kafkatablesourcesinkfactorybase and kafkavalidator
added a new file ` MultipleOutputsIntegrationTest . java ` to validate the functionality of multiple output groups in the project to ensure that named outputs
updated regex pattern in FileSettings . java and added content comparison logic in FileSettings . java to ensure proper formatting of content based on setting key
[ stateless ] fix npe in statelessflow when provide configuration via json
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added a @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for testing purposes
added new device status constants " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance user experience by
fix classcastexception in modelloader . loaditem ( )
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
fix ( gl ) : do n ' t call getcurrentsurfacescale ( ) on 2x
refactor RussianLowerCaseFilter class for improved clarity to enhance maintainability and readability of the code
updated server property handling in CsvBulkLoadToolIT . java and modified server port retrieval in QueryUtil . java to improve code clarity and ensure
replaced ` File . separatorChar ` with ` File . pathSeparatorChar ` for displayName in ` FileDisplayActivity . java ` to ensure
tweak wav loader to use seekablestream instead of littleendien
added a boolean flag ` repeatFirstLineIndent ` to control the indentation behavior in the ` ColumnText ` class to enhance flexibility in indentation
updated the type casting of the oid comparison in Oid . java to ensure proper type handling for OID comparison
refactor metrics and health registry initialization logic in HikariPool . java to improve code readability and maintainability by consolidating repetitive
replace controlflowanchornode with controlflowanchored in loopex . java
added a line to disable focus painting for buttons in WindowsPlacesBar to improve user interface clarity by reducing visual clutter
updated condition to check for UniqueConstraint and ForeignKey types in DatabaseSnapshot . java to ensure correct handling of backing index for unique constraints and foreign keys
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and implemented it in ` AccountAPI ` to
add dc . title to the community admin group to ensure that the dc . title be not included in the metadata
gapinsertiondetector : do n ' t throw an error if there be no word
added unit test base on user forum issue
updated the thread count from backgroundThreads to databaseUpdateThreads in FeedRefreshUpdater . java and added getter and setter methods in ApplicationSettings . java
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to improve scrolling performance
replaced ` MetaUtil . toInternalName ( System . class . getName ( ) ) ` with ` " Ljava / lang / System
hhh - 13644 - fix npe in procedurecallimpl . getresultstream ( )
added a null check for APIProperties in RestSwaggerSupport . java to avoid potential NullPointerException when getApiProperties ( ) is null
added new classes BinaryFrameGenerator and TextFrameGenerator to handle WebSocket frame data encoding to enhance WebSocket functionality by integrating binary and text frame handling
simonstewart : use webdriverwait instead of findelement to avoid test failure
simplified calculations for lat and lon in RandomGeo3dShapeGenerator . java to improve code readability and maintainability by reducing
added a keepAlive method to manage ClassLoader instances to ensure proper resource management by preventing premature loading of resources
change return value from false to true in SQLiteDatabase . java to indicate successful operation
added a check for ` isutilconcurrentSig ` in the ` findjsr166LockMonitorenter ` class to ensure
added MkdirStep to multiple classes and updated steps in FatBinaryTest to ensure proper directory handling and validation in the FatBinaryTest
updated error handling in MeshLeveler . java to include additional error messages and improved exception messages to enhance error reporting and provide clearer context
[ rhdmml ] do n ' t run applypmmlmodelcommand if jpmml module be not available to classpath ( #
updated the condition from ` locationMode ` to ` thermalStatus ` in ShadowPowerManager . java to ensure accurate validation of the power status
updated temporary directory creation to use a constant for macOS to ensure compatibility with macOS temporary directory naming
[ prj ] fix memory mapping on window
added a null check for the project ' s organization in the PluginManager to ensure that Plugis is required to have an organization in the
updated contributor license license information in SepPostingsWriterImpl . java to ensure compliance with the latest licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated executeChildProcess method to use system . getProperty ( " java . class . path " ) instead of a hardcoded string to improve flex
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added a test method to skip the ` @ ExpectedToFail ` annotation in ` AddLicenseHeaderTest . java ` to address issue # 3
changed LAUNCHER3 _ PHYSICS from false to true to enable the launching feature for improved user experience
added HTML elements for the ' noPrint ' class in HtmlThreadInformationsReport . java to enhance the visual representation of thread information in the
updated the main version from " 3.1 " to " 4.0 " and changed the TEST _ VERSION _ CURRENT from LUCEN
added symbolicator and task fields to BsdDebuggerLocal . java and updated platform detection in PlatformInfo . java to enhance debugging capabilities for mac
fix memory leak in fml indexedpackettomessagecodec .
log network dispatcher exception in case of connection reset by peer .
[ java ] initialize adminbuffers and adminbuffers in aeron . java to avoid npe .
added a break statement in TouchImageView . java to ensure proper flow control in the code execution
chore ( regen ) : fix typo in http : / / issues . apache . org / jira / browse / camel -
simplified the SSL flushing logic in FeedableBodyGenerator . java to improve code readability and maintainability by eliminating unnecessary SSL
added type variable handling for ` java . lang . Object ` and ` toBound ` in ` TypeUtils . java ` to ensure correct type
replace nonblockinghashset with concurrentskiplistset in memtablespendingflush
added null check for err codes in MemberEnter . java and modified error count logic in JavaCompiler . java , while introducing new classes for
replaced SWT . NO _ BACKGROUND with SWT . NONE in BugInfoView . java to simplify browser initialization by using NONE instead of
updated the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
added checks for negative lowerBound and upperBound in IntegerStamp . java and created corresponding tests in IntegerStampTest . java to ensure correct division behavior and
added a method to read an InputStream from an InputStream and updated image retrieval to use it to improve input stream handling and ensure the image is read
added locals management to CaseStmtToken and updated related classes to enhance variable handling and improve code clarity
added error handling for unsupported cryptographic provider initialization in RSAClientKeyExchange . java to improve robustness by catching potential InvalidKeyException and UnsupportedOperationException during
added " psapi . lib " to the list of additional dependencies in WinGammaPlatformVC10 . java to ensure compatibility with the latest library
updated string formatting in StringUtilsTest . java to use the system ' s line separator to ensure consistent line endings across different operating systems
added UTF - 8 encoding settings and updated alert message format in TemplateEngineFreemarker , ApplicationController , and ApplicationControllerTest to
replaced ByteArrayInputStream with a byte array for serialization in CRDGeneratorTest . java to improve performance by reducing unnecessary byte array creation
change access modifier of ` holdSamples ` and ` type ` from private to non - static final in ` SampleSenderFactory . java ` to
added a check for the system property " testngEmailableReporter " before adding it to the emailableReporter to avoid potential null pointer exceptions
modified the quoting logic in CommandLineBuilder and added a new test for quote quotation marks in CommandLineBuilderTest to ensure proper handling of quotes in
removed the ' public ' access modifier from interface declarations in multiple classes to simplify access modifiers for better encapsulation
added a method to set the number of reduce tasks in the job to ensure the job uses the correct number of fetchers for processing
fix ( core ) : fix schema generation for object field
updated FILEVERSION from " 505365 " to " 532077 " in SaveService . java to reflect the new version of the
added support for " GL _ ARB _ texture _ float " in FloatTextureData . java to ensure compatibility with OpenGL 3.0
pdfbox - 4071 : add fileserver . write ( ) and closefile ( ) method to make fileserver thread - safe
added a null check for outputDirectory and jarStream before setting the output directory in ClassDump . java to ensure outputDirectory is only set when jarStream
replaced direct call to ` getFuture ` with ` PerfStatsCollector ` in ` ShadowSQLiteConnection . java ` to measure the
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
[ geos - 8014 ] add resourceerrorhandling enum for ogc _ exception _ report and skip _ muxing _ layouters
added a conditional check for bufferPosition in RAMInputStream and created a new test for EOFException in TestRAMDirectory to ensure bufferPosition does not
updated error handling in DefaultServlet and JspServlet to include the request URI in error messages to improve error reporting by providing more context for missing resources
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and modified access control context handling to improve thread management and
updated the constant CHECK _ EVERY _ N from 10000 to 0xFFFF and added conditional logging for HardRefCache to improve memory management and
hbase - 25827 testsplittransaction fail because of hregion . openregion ( )
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added a new test method ` provideEnvironmentsToTest ` in ` DemoModulesTests . java ` to validate JAAS demo functionality to
added a condition to check if spanX and spanY are 1 before creating a folder in CellLayout . java to ensure proper layout behavior when
refactor CacheOffHeap class for improved performance to optimize memory usage and reduce memory usage
add a check to prevent the database from being re - opened if a table is dependent on another table to prevent the database from being re -
added a condition to check if the row does not exceed the current layer height and log a warning for corrupt XML gid values to improve error handling
fix thread safety issue in inmemorytilecache . setworkingset ( )
added a new Java class to calculate the number of steps starting from a specified starting stone to provide a solution for determining the minimum and maximum
added a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to utilize it to improve address validation logic by providing a
remove rendertype . getTranslucentmovingblock ( ) from multivelayermodel . getrendertype ( ) .
remove default tag from config entry ( fixes # 2276 )
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and updated its assignment
added a null check for ` recieptents ` before sending messages to avoid potential NullPointerExceptions when ` recieptents ` is null
refactor single route check logic into a separate method for clarity to improve code readability and maintainability
do n ' t execute ping command in dockerclientfactory if fail fast
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and corresponding methods in ` RobolectricTestRunner ` and `
replaced the use of ` DateUtils . truncate ` with ` Calendar . getInstance ( ) ` in the ` HistoricProcessInstanceQueryImpl
replaced ` importProject ( projectFile ) ` with ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule . java `
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve user feedback during command execution
refactor TreeMap class to improve code readability to enhance maintainability and facilitate future updates
added methods to enable and manage async stack traces in the Display class to enhance debugging capabilities by providing context - specific error handling
added a method to set the glow color in BubbleTextView and set it in Folder to enable customization of the glow color
added multiple styles for " file - row - text " in LinkedFilesEditor . java to ensure consistent styling for file - row - text
updated the return value of ` alltypes ` from " java . lang . Short " to " java . lang . Short " in ` Abstract
removed unnecessary exception handling for file writing in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify code by eliminating unnecessary
added a null check for _ info before comparing status codes to avoid potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a provider string to allow initialization of ShadowLocation with a specified provider
updated the condition for setting maxRAM in LauncherPreferenceJavaFragment . java to accommodate larger device RAM values to ensure that the
fix localmapstatsawareservice . getdistributedobjectnames ( ) when map have no stats
added logging functionality to FileProfileActivator for file existence and absence checks to enhance debugging capabilities by providing visibility into file existence and absence
updated the string in the addToBody method from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity
[ java ] use set instead of list to avoid concurrentmodificationexception
updated return value from - 1 to 1 in ExpandableUploadListAdapter . java and modified the array size check to use MAX _ NUM _
added unit tests for the ` delete ` method in ` DashboardUserMapperTest ` to ensure that the ` delete ` method behaves as expected
[ # 5338 ] instructor : fix npe in instructorfeedbackresultspagedata . getprimaryparticipantname ( # 5
[ gr - 32713 ] fix memory leak in llvm pointer store node .
added a method getBufferSize ( ) to the BufferedIndexOutput class to provide access to the buffer size for external use
[ java ] add help option to terasology to help
updated action bar title setting logic in DrawerActivity . java and added new interactions handling in DrawerActivity . java to improve user experience by
refactor CommandLineParserTest class to improve test coverage to enhance reliability of command line parsing functionality
added constants and modified interpolators for animation animations in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to enhance animation responsiveness
updated method call from ` toUnderscoreSeparated ` to ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to improve
added native methods for setting frame , frame , and release in CWrapper . java to facilitate frame management and object release functionality
added constant value validation in mmm Checker . java and created a new ValueTest . java class for testing to ensure that constant values are correctly
refactor test classes for improved clarity and consistency to enhance maintainability and readability of the codebase
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary null check
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
updated error and coverage failure messages in UploadBuild . java to improve clarity of error and coverage failure messages
updated bounds calculations in DeviceProfile . java to use getSearchBarTopOffset ( ) instead of availableWidthPx to ensure proper layout adjustments based
fix pulseaudioinputource and pulseaudiosimpleprotocolstream timeouts when idletimeout = 0
replace direct calls to ` getLauncher ( ) . runOnUiThread ( ) ` with ` getLauncher ( ) . runOn
added a method ` getSourceGroup ( ) ` to retrieve ` SourceGroup ` from an optional ` Pair < String , ImmutableList < AppleSource
increased timeout duration from 220000ms to 320000ms in TestSimTriggerIntegration . java to allow more time for the latch to
updated the parameter name from ` outputPositionCount ` to ` positionCount ` in ` FloatSelectiveStreamReader . java ` to improve clarity
added null checks and a square comparison for bestSoFar in AbstractNodeCostSearch . java to improve robustness by preventing potential null pointer exceptions
added a condition to skip processing for specific component types in ResourceEditorView to improve performance by avoiding unnecessary processing for specific UI components
replaced UiThreadHelper with LauncherModel for postAtFrontOfQueue in DragView and FloatingIconView to utilize the worker
added a null check for commitPoint and initialized it to ensure commitPoint is initialized to avoid potential null pointer exceptions
added unit tests for ` getImei ` and ` getMeid ` methods in ` ShadowTelephonyManagerTest . java ` and
refactor debug methods in SimpleHostRoutingFilter to improve debugging capabilities to enhance traceability and debugging capabilities for HTTP requests
added ` destory ( ) ` methods to ` IndexSegment ` , ` BitmapInvertedIndex ` , and ` IndexSegmentImpl ` classes
[ issue # 5892 ] fix test case for statictopicit . examinepublishmessages ( )
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer .
hbase - 26478 bulkloadhfiles should throw ioexception instead of bulkloadioexception
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` class and updated its usage in ` RippleWithdraw
removed the import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and reduce unnecessary dependencies
replaced multiple catch blocks for specific exceptions with multiple catch blocks in LoadSolrBuilder . java and SolrLocator . java to streamline exception handling
added null check for method body and interface scope in Java2TypeScriptTranslator . java to ensure that abstract overloaded methods do not throw an
added StacklessLogging to the sweepDisk method in TestFileSessions . java to enhance logging capabilities for better debugging during file operations
updated MutableColumnDataType and SqlDataType to set type to UNKNOWN and modified Entity class modifiers to enhance type safety and ensure proper serialization of data types
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added null check for claimRequestString before parsing to improve robustness by handling cases where claimRequestString is not provided
replaced ` FilterFactory ` with ` HiveRelFactories . HIVE _ BUILDER ` in ` HiveFilterSetOpTransposeRule
updated the ` processTypeHintForNestedDocuments ` method to handle null values correctly and added unit tests for null values in ` UpdateMapper `
replaced ` CoreAdminResponse ` with ` CoreStatus ` in the ` CollectionsAPIDistributedZkTest ` and ` CoreAdmin
initialize transformers and locators list in ModDirTransformerDiscoverer . java to ensure proper initialization of lists for transformers and locators
[ querydsl ] fix typo in exception message
[ gr - 3990 ] improve debug output for pegraphdecoder
rename methods and variables from ` setOf ` to ` copiedSetOf ` and ` listOf ` to improve clarity and consistency in naming con
camel - 16462 : camel - mail - do n ' t dump mail message if it be not null
http : / / issues . apache . org / activemq / browse / amq - 4892 - fix npe in the
replaced ` getIdentifierName ( ) ` with ` getIdentifierName ( ) . setIsPropertyName ( ) ` in ` Parser . java ` to ensure
add wavegeneratoractivity to make it easy to launch the wave generator .
added null checks for ` m ` and ` sheet ` in ` KeyedProperties . java ` and ` SheetOverlaysManager . java `
fix ( kubernetes - client ) : add integration test for pod
solr - 10615 : add test for no writer to testreplicationhandler
call super . dispatchmethodkernelokra ( ) instead of super . dispatchmethodkernelokra ( ) in graalkerneltester .
[ hotfix ] [ table - planner - blink ] fix the ordering of xrecords in dns client
refactor thread creation in XToolkit to use a privileged action for improved clarity to enhance code readability and maintainability by
added validation method to SelectBox and set a default value of " Linux6 " to " Linux6 " in UITest to ensure proper
replaced IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing stack trace information
added a new ` SplitState ` parameter to the ` createState ` method and updated related logic in ` FlowBuilder ` and ` SplitState
changed the connectionState variable to be volatile and updated its usage to ensure thread - safe access to the connectionState variable
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added a new endpoint ID in EnableIntegrationTests . java to
refactor memory allocation methods to use ` nmalloc ` and ` encodeUTF16 ` instead of ` ByteBuffer ` to improve memory allocation efficiency and
added error handling for ` DocletAbortException ` in ` HtmlDoclet ` and ` AbstractDoclet ` classes to improve error reporting and
[ java ] false positive for unusedmodifier on interface and enum
replace lambda expressions with method references in multiple Java files to improve code readability and maintainability
added ssl parameter name to AbstractHttpClientServerTest to improve clarity of test parameters for better debugging
updated error handling and logging in TransformationHelper . java to improve clarity and provide more informative error messages during transformation failures
updated variable name from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and
refactor equality check in Point class to use Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability by utilizing
added null check for outputRoot in FileProcessor . java to avoid potential NullPointerException when outputRoot is null
added a ` AnnotationFilter ` interface and modified the ` getAnnotations ` method in ` PDFPage ` , ` PDFRenderer ` , and ` PDF
refactor StackTraceCleaner class for improved clarity to enhance maintainability and readability of the code
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set for CSS and JavaScript files
hhh - 15836 - skip test for literal in select expression test for oracle8i and sybase
updated the parameter name from ' slot ' to ' slotSize ' and modified the logic for updating the stats array to improve clarity and ensure
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes , and
[ drools - 5357 ] add support for long polling in the kie client ( # 1187 )
replaced direct calls to ` overview . fling ( direction . FLING _ Sensitivity ) ` with ` mLauncher . scroll (
updated the unlocks dialog initialization and added a button in PausedDialog . java to enhance user experience by providing a confirmation dialog for unlocking
added a call to clear the dropping list in PlayerEventListener to ensure the event is cleared before proceeding with further actions
added a new constant DEFAULT _ PARAM in StreamResult . java to provide a default value for the inputName parameter
updated the exception type from MalformedURLException to IOException in the testNormalizeOrder method to improve error handling by using a more specific exception type
updated printlnBoth method to include chunk type and added a flip operation in LocalTsFileInput to enhance output clarity by including the chunk type
added headers to exclude Swift headers in UmbrellaHeader . java and updated assertions in ProjectGeneratorTest . java to ensure only relevant Swift
reformatted the method signature in GrizzlyAsyncHttpProvider . java for consistency to improve code readability and maintainability
added encode ( ) method to RequestPlugin . java to ensure proper encoding of request data
mondrian : fix for mondrian - 1342 , sqlquery . dialect = db2 , sqlquery . dialect
added validation for null or blank password in LdapAuthenticationProviderImpl . java and created a corresponding test class TestLdapAuthenticationProviderImpl . java to
pdfbox - 4892 : use long . tostring ( ) instead of long . tostring ( )
added a condition to clear complexWriters when a condition is met to ensure proper handling of complex writers during processing
added @ SuppressWarnings ( " serial " ) annotations to multiple cache - related classes to suppress warnings related to serialization in the codebase
removed the ` public ` modifier from the ` ClassGraphClassLoader ` class and modified the conditional check for ` classInfo ` to improve code clarity
added a check for " _ errors " in the ErrorResponseException class and modified the return statement to handle schema errors more gracefully to improve error reporting
added constructor to EventSourcingRepository that accepts additional parameters for eventStore , snapshotTriggerDefinition , and repositoryProvider to enhance flexibility in
refactor variable names and method calls for clarity in ` Attr . java ` to improve code readability and maintainability
updated the text setting logic in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle leading and trailing spaces to improve user experience by
refactor command handling in NuvoConnector and add standby mode check in NuvoHandler to improve clarity and functionality of command management in
tmi - tiff : use tiff baseline instead of tiff extension .
added close ( ) method call to ItemListTag . java to ensure proper resource management and prevent memory leaks
move recent energy calculation into a new utility class to reduce code duplication
added two new classes ` SigInt ` and ` SigIntBarrier ` to handle int signaling in a concurrent environment to facilit
refactor graph handling in ExporterGEXF . java to use hierarchical graph model to improve flexibility and maintainability of graph model management
replaced byte array with Text for null text handling in TCTLSeparatedProtocol . java to improve performance and handle character encoding errors
[ # 10663 ] add check for invalid index in response for rubric question ( # 10763 )
updated the condition to use ` CatalogAndSchemaCase . ORIGINAL _ CASE ` instead of ` DB2Database ` to improve compatibility with
simonstewart : allow browsermobproxy to be reset after test .
updated the formatting of criticalErrors to use Integer . toString ( ) instead of MessageFormat . format ( ) to improve readability of criticalErrors by
removed duplicate calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code readability and maintainability
improve javadoc for trufflestring and internalbytearray
[ hotfix ] [ graph ] fix typo in outedgesfunction and graph . foreachedge
refactor Java6 and Java6 soft assertion classes to improve consistency and clarity to enhance maintainability and readability of the assertion framework
deleted the ` ClassA \ 314 \ 201 . java ` file and created a new ` DiacriticTest . java ` file
[ java ] replace CountDownLatch with CyclicBarrier in ClusterMembershipTest . java to improve test reliability by utilizing a more
added error handling and improved workspace reader management in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness by ensuring that
updated SSL handling in ServiceRegistryConfig and improved test assertions in TestServiceRegistryConfig to enhance clarity and accuracy of SSL configuration validation
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
removed unnecessary whitespace in the constructor declaration of Jdbc3Connection to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure proper initialization of the servlet instance before proceeding
added deltaServerTime handling and logging in BinanceExchange and BinanceBaseService classes to improve time management and facilitate better debugging
added support for Servlets For JavaServer Pages ( tm ) v8.5 in Tomcat85ContainerAdapter and Tomcat90
added null check for the component form before deregistering animation to prevent potential NullPointerExceptions when the component form is not initialized
updated ` ShadowBitmapFactory ` and ` ShadowCanvas ` classes to include additional parameters for bitmap handling to enhance flexibility in bitmap processing by allowing
[ java ] use a configurable number of message instead of a hardcoded value .
added click and long click functionality for a tweet in TimelineArrayAdapter to enhance user interaction by allowing multiple clicks and long - click actions
added " text " to the list of database data types in PostgresDatabase and modified conditional checks in NumberType and ColumnSnapshotGenerator to support
fix flaky test entryprocessorbouncingnodetest ( # 3683 )
corrected the method name from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` Amb
updated bridge reconfiguration handling in CreateBridgeServlet and created corresponding test cases to improve error handling and provide clearer feedback on bridge reconfiguration failures
added synchronized keyword to several methods in CrawlServer and PreconditionEnforcer classes to ensure thread safety when updating robots
added null checks for the display name in multiple classes to avoid potential NullPointerExceptions when getDisplayName ( ) is null
updated SpriteBatch constructor to accept a ShaderProgram parameter and refactored shader creation logic to enhance flexibility in shader management by allowing
added configuration options for synchronous commit in TestUtil . java to enable synchronous commit functionality for improved performance
added elementTypeCoercer to the SortedSetTypeCoercer class and refactored the fillSortedSet method to improve type coercion
updated confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to differentiate between folder and local files to improve user experience by providing clear
added a boundary check for the character in the safe array to ensure that the character is within a valid range to prevent potential ArrayIndexOutOfBoundsException
updated the registration of fragment storage to use a dynamic port based on the current time instead of a hardcoded value to improve flexibility by allowing
removed the expect statement that returns an empty map in HostResourceProviderTest . java to simplify the test by eliminating unnecessary assertions
[ hotfix ] remove unused logger parameter from yarnentrypointutils # loadconfiguration
refactored the initialization process in SIPCommFrame to use init ( ) instead of final fields to improve code readability and maintainability
removed the ShadowHtml class from RobolectricBase and updated HtmlTest assertions in HtmlTest to streamline the codebase by eliminating
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated logger names from " logger " to " h3 " and " quic " in HttpClientLoadTest . java to improve clarity and
changed the access modifier of the addListeners method from private to package - private in MockSettingsImpl . java and added unit tests in MockSettings
[ hotfix ] [ doc ] fix typo in statehandlestore javadoc
updated import statements in HttpAuthMethodPriorityTest , HttpBasicAuthComponentConfiguredTest , and HttpBasicAuthComponentConfiguredTest to use the correct Jetty
[ 3.0 ] change section name from string to constant . default _ section in studentattributes
fix resource leak in jmeterutils
camel - 1145 : fixed the test failure of camel - core when the port be not available .
added ` buildTarget ` and ` libraryTarget ` to several classes and refactored jar parameter retrieval methods in ` JarBuildStepsFactory `
simonstewart : fix checkstyle issue in trusteverythingtrustmanager
api : remove unused method getpagesizeval ( ) from listcapacity api
added a case for CLOSED in IteratingCallback . java to return early if the callback is closed to ensure proper handling of closed states during callback
added a new boolean field ` isAuthorized ` and updated related methods in ` AccessControlContext ` , and implemented a method in ` AccessController ` to
refactor OSGiDeployer to check if the application is an instance of AbstractOSGiApp before sending the event to ensure proper
added handling for " tiff " codec in DLNAMediaInfo . java to ensure proper MIME type is set for tiff images
[ gr - 21935 ] optimizecalltarget : fix npe in optimizedcalltarget .
added a new file ` CubocDesktop . java ` and modified ` Map . java ` and ` MapRenderer . java ` to implement
updated file path retrieval in PolicyMonitorTest . java to include " test - classes / monitor - test - 3 " to ensure correct directory structure
added a call to removeAllFiles ( trashbinListAdapter ) in TrashbinActivity . java to ensure all files are removed from the trash
updated the method call from ` org . eclipse . jdi . virtualMachineManager ( ) . allConnectors ( ) ` to `
[ gr - 3565 ] fix checkglobalvariablestoragenode to be a boolean rather than an abstract method .
added intent handling and component information to createLauncherEvent method to enhance event dispatching with additional data for better user event
refactor burningmanpresentationservice to use a constant instead of a hardcoded value to improve maintainability and readability of the
replaced specific imports with a wildcard import and modified the ` snapshotObject ` method in ` UniqueConstraintSnapshotGeneratorSnowflake . java `
fix for mondrian - 1343 : do n ' t use namedvalues when there be no insert statement
updated import statements and changed test parameter from " insecurePgtUrl " to " https : / / www . github . com " to
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and adjusted the function name validation logic to enhance function name validation
refactor JarLauncher class to improve code structure to enhance maintainability and readability of the code
updated generic type declarations to use generics in multiple classes to improve type safety and eliminate unchecked warnings
do n ' t send hole punch packet if there be no jabber packet
added a new test method ` testUpdateWithPGobject ` to ` ResultSetTest ` for updating a ` pgobject ` in ` ResultSetTest
updated PasswordResetEndpoints to return UNPROCESSABLE _ ENTITY instead of BAD _ REQUEST and added a test for creating password reset when the user has
updated the way propertiesElement is retrieved from the XML document to improve code readability and maintainability by using a more descriptive method
refactor Cache class implementation to improve performance and maintainability of cache operations
changed variable names from ` timeInSec ` to ` timeMillis ` in ` Isochrone . java ` and ` SPTResource
add a check for invalid bind in the light relay . close # 1353
added a new ` Chainer ` class and modified ` CollectionSubject ` to return a new ` Chainer ` instance to facilitate
refactor Model class to improve code readability to enhance maintainability and facilitate future updates
updated the increment of recordedTime to include a new value of 619315200000L to ensure accurate tracking of the recorded time
added a check to resize the status if the terminal type starts with AbstractWindowsTerminal to ensure the status is properly resized when the terminal is
updated the host version setting logic in UpdateDesiredStackAction . java and adjusted the current state in RepositoryVersionState . java to ensure that only
[ java ] move javatests and jre _ bundle _ deploy . jar to integrationtestcase
maven - plugin : use linkedhashset instead of hashset to preserve order .
removed unnecessary try - catch block around operation creation to improve code readability and reduce unnecessary exception handling
refactor the method call in KnativeEnvironment . java for consistency to improve code readability and maintainability
updated the thread pool name in CommitLogArchiver from " commitlog _ archiver " to " CommitLogArchiver " to improve cl
added a connect ( ) method to CloudSolrClient and a test for upload configuration in TestCloudSolrClientConnections to ensure that the client correctly
fix concurrentmodificationexception in debuggersession and breakpoint
refactor RobolectricTestRunner and ShadowContext to use static final File instances for directory management to improve code readability and maintainability
added TreeMap to the list of styles in SecureXStream . java and updated related test cases in XStreamPersisterTest . java to ensure consistent
[ drools - 4892 ] add ` ` withkiemodulemodel ' ' to kiehelper . createkiemod
updated SoilDryFlag handling in BlockEventListener to check for Farmland instances to improve accuracy of soil dry behavior based on current
added a default implementation of the getLocalIp method in FinishedSpan . java to provide a default implementation of the method
updated serialization logic in JdbcStepExecutionDao and adjusted skip limit settings in AbstractStepExecutionDaoTests and StatefulRetryStepFactoryBeanTests to
refactor code to remove unused characters and improve readability to enhance code clarity and maintainability by using uniform naming conventions
added ` python37 ` and ` python - gpu ` to the resource list and preload resources in ` tensorflow . java ` to enhance compatibility with
refactor PluginTab to encapsulate plugin retrieval logic into a separate refresh method to improve code readability and maintainability by reducing duplication
change log level from info to warn for reloading and trimming history files to improve visibility of file loading and trimming errors
cloudstack - 4892 : fix npe when vmware be create with null vmware datacenter
camel - 16462 : camel - sftp - allow sshd to be stop by default in camel - sftp
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the code
updated serial handling in GpsSettingsActivity to use Utilities . GetBuildSerial ( ) instead of Build . SERIAL to ensure compatibility with older
refactor SwapGBuffers class for improved readability to enhance maintainability and facilitate future updates
added a null check for the spatial object before removing it from the AnimControl class to prevent potential NullPointerExceptions when the spatial is null
added a test for setting smart replies in ShadowRankingTest and modified ShadowRanking to use this new interface RankingReflector to
[ java ] do n ' t use lambda in archive . list ( ) .
updated the initialization of carrot2ResourcesDir in CarrotClusteringEngine . java to use initParams instead of resourceLoader . getConfigDir
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to address potential
updated ASM _ API _ VERSION from ASM7 to ASM9 in multiple files to ensure compatibility with the latest ASM API version
updated TasteException handling in RecommenderMapper and CacheTest classes to throw TasteException instead of returning null to improve error handling by providing
added a setup method for ClientInfo in SurrogateAuthenticationEventListenerTests to ensure proper initialization of ClientInfo in tests
set isUserView to false in CardPresenter . java to disable user view functionality for better user experience
updated imports and method names in GraphvizRenderer and GraphvizUtility classes to improve code clarity and maintain consistency in naming conventions
refactor the creation of metrics for constructBatchMetrics and syncLogTimePerRequest to improve code readability and maintainability by reducing red
added a new module - info . java file for the SQLite connector module to provide module dependencies and exports for the SQLite connector
added a delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " new " in permissionsManager initialization to streamline code by eliminating unnecessary conditional checks
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method to return the depth of the SpringLoadedState class to provide a standardized way to calculate the depth of the application
replaced manual array copying with a constant for the minimum size to improve code readability and maintainability by using a constant for the data size
[ hotfix ] fix typo in executiongraph javadoc
remove the bottom notification from the notification activity and remove it from the activity
added null check for invocation in DefaultExceptionConverter and updated exception messages in ExceptionsTest to ensure proper handling of exceptions and improve clarity in error
set lock to empty string instead of null to avoid nullpointerexception
replaced reflection - based reflection with reflection - based method access in ProxyMaker . java to improve code clarity and maintainability by using a
changed integer types from int to Integer for query parameters in MathTest . java to ensure proper handling of integer values in queries
improve email format ( # 1749 )
added a layoutProvidedPanel to manage the visibility and visibility of components in LayoutPanel . java to improve user interface responsiveness by ensuring properties
added a null check for the location variable in the ServerCallable class to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for key parameters in BasicChecker . java and simplified the return statement for usableKey to ensure that a valid key parameters are
refactor MediaTypeRequestMatcher to use a separate method for ignoring ignored media types to improve code readability and maintainability by encapsulating the logic
updated logging statements in LlapBaseInputFormat . java to use a variable for task number to improve clarity and maintainability of the logging
added a property to the @ SpringBootTest annotation in EventServiceTests . java to enable overriding of bean definitions in the Spring Boot test
added null check before closing indexReader to prevent potential NullPointerException when indexReader is null
refactor package declarations for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , and manualExample classes to improve organization and cl
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to ensure that the rendering logic correctly
added a new file ` CompatibilityTest . java ` with methods to load and verify properties and verify their properties to ensure proper handling of
added new files ` VariantComponentsModule . java ` , ` PushUtils . java ` , and ` SecurityUtils . java ` to implement utility
[ hotfix ] [ table ] fix npe in tablerebalancer . getnextsinglesegmentassignment ( )
update version and version number from 2.6 . 1 to 2.7 . 0 in ExoPlayerLibraryInfo . java to reflect the
log4j2 - 1343 fix line separator in test
fix fail org . apache . coyote . ajp . testabstractajpprocessor unit test . handle eagain result from non - blocking read .
updated default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are
updated method signatures and variable names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and
added a shell command for waiting for broadcast idle in LauncherInstrumentation . java to ensure proper handling of broadcast idle events during execution
added unit tests for font tag and link tag in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct
fix typo in guistatscomponent patch
added permission request handling for phone calls in Launcher . java and a new permission check in Utilities . java to ensure proper functionality and user experience
updated return value from 32 to 36 in SimulationPanel and added a StyledLabel label to enhance user experience by providing a visual ind
refactor GeoPoint and GeoEncodingUtils classes for improved readability and performance to enhance code clarity and maintainability by eliminating
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to provide a way to check if the Docker
removed the static final String VPX constant from CodecTypes . java to streamline code by eliminating unused constant
added coordinatorAddress property and its usage in DistBuildRunCommand and modified getCoordinatorAddress method to be abstract in AbstractDistBuildExecutorArgs
added a new method ` match ` in ` FsUtils ` and refactored timer creation in ` WrapTimer ` to improve path matching functionality
added a check for non - positive value before adding label values in TestTaxonomyFacetSumValueSource . java to ensure label values are only added
ggb - 1353 fix for npe in getboolean ( ) and getboolean ( )
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline test execution by eliminating unnecessary tests
added materialization time setting in ObjectStore and created a test for updating creation metadata in TestObjectStore to ensure that materialization time is correctly
added error handling for missing native dependencies in VoskSTTService . java to improve error logging for missing native dependencies
remove one - way property from the send queue and add response code to the output
updated break weight logic in GlyphView . java to use ' = = ' instead of ' > ' to improve clarity and correctness in
refactor sync check handling in RCFile . java to improve efficiency and readability to enhance performance and maintainability of the data reading process
removed the @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to address a known issue related to SOLR - 13
refactor ToePool to use LinkedList for processing steps and processors to improve clarity and organization of processing steps and processors
removed unnecessary parameters and simplified the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable ` and ` DataTransferer
hbase - 23211 add - infoport to testthriftservercmdline . java ( # 2327 )
added a condition to check if the end of the file is at the end of the file to ensure proper handling of end - of - file
added checks for enabled metrics and timer properties in Debug . java to ensure only valid metrics and timer properties are processed to avoid potential null pointer exceptions
fix potential npe in chatroomjabberimpl . equals ( )
improve error message when file be miss
refactor refresh token creation into a separate method ` createRefreshToken ` to improve code readability and maintainability by encapsulating refresh token creation logic
simplified error message by removing unnecessary string formatting to improve code readability and maintainability
[ hotfix ] [ yarn ] remove deadlock in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to the ` ShadowNativeImageReaderSurfaceImage ` class to provide a synchronized implementation for
updated BTCChinaExchange to set SSL URI for the polling market data service to enhance security by using a secure connection
pmd : use the project . getbasedir ( ) instead of the project . getbasedir ( ) . toString ( )
added new classes OauthController and Oauth2PluginTest for OAuth2 plugin integration to facilitate the integration of OAuth2 integration in the
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future development
refactor ` flatMap ` methods in ` AbstractStreamEx ` , ` StreamEx ` , ` EntryStream ` , and ` EntryStream `
updated error logging message format in RestCodec . java and added exception handling in ExceptionToProducerResponseConverters . java to improve clarity of error
updated the conditional check for ` shouldComeFromThisClassLoader ` in ` RobolectricTestRunner . java ` to include support for
added a condition to check if the sdp is not already transferred in transmittableAudioEncodings to ensure that the audio encoding is not processed
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator . java ` and
added new test methods ` checkStation3Gml31 ` and ` checkStation3Gml32 ` in ` NormalizedMultiValuesTest
added a volatile boolean field ` wasInvoked ` and updated test cases to include a new ` httpResponseHandler ` and ` httpResponseHandler ` to track
added a check for the processor ' s configuration before expanding regex mappings in ColumnarDataSource and modified return types in RowProcessor and BinaryResponse
refactor the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and introduce ` getPositionsArraySize
added new classes XLCDCommunicator and XLCDController for communication and controller functionalities to enhance the application ' s capability to
[ drools - 4892 ] use the system classloader for jaxp validation when load the kmodule xsd
added retry logic in multiple classes and modified condition checks in EventQuery001 , EventQuery002 , EventQuery003 , and EventQuery004 to
replaced thread state assertions with thread join methods in WorkerProcessPoolTest . java to improve code readability and maintainability by using a constant
updated ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest ` to
updated the values for FREEZE _ V2 , UNFREEZE _ V2 , and UNLEGATE _ RESOURCE from 20000 to
added exception handling to the command method in DownloadPlugins . java to ensure proper configuration management during command execution
deleted the SpringTransactionHooks . java file and replaced its usage with AbstractSpringTransactionHooks in SpringTransactionHooksTest . java to streamline
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValueTarg . java ` to demonstrate the usage of ` StringReference ` with `
added support for providedDepsQuery and providedDepsTargetsQuery in AndroidLibraryDescription . java and updated GraphEnhancementQueryEnvironment . java to
added a new device flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard transitions
replaced the system anomaly message handling with a static boolean flag to manage bug reporting state to improve performance by avoiding repeated system anomaly
added CINEPACK constant and condition for cinepack format in media info parser to support cinepack format handling in the
added camera bobbing support and adjusted translation calculations in Player . java to enhance gameplay experience by allowing customizable camera bobbing behavior
updated the key from ` b . data . describe ( ) ` to ` b . digest . toString ( ) ` in ` GrpcC
deleted the HSQLDBServerFilesFilter . java file and modified TestUtility . java to streamline the file listing process by eliminating
walletappkit : fix npe when restore from key be null
updated the retrieval of the latest version from API data video version to API data series version and added a logging statement when title is not found to
added a type existence check to the visitMethodInvocation method in HasTypes . java to ensure proper handling of method invocations based on their type existence
replaced hardcoded array size with a constant for better maintainability to improve code readability and maintainability by using a named constant instead of
[ netbeans - 4892 ] add user feedback when mode be not configure properly
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskShowFirstN classes to
refactor test to use temporaryfolder instead of file . deleteRecursively
added isitemstackdamageable ( ) and gethassubtypes ( ) method to itemstack . isitemstackdamage
fix mc - 167447 : render system ' s line width be set to 1.0 . 0 ( # 3566 )
simonstewart : set ` ` browser . startup . page ' ' to ` ` 0 ' ' for firefoxdriver
added a condition to check for HTTP CONNECT and GET requests in the Http1xClientConnection class to ensure proper handling of HTTP requests for connection
changed the task type from " compile " to " process - classes " in JoobyMojo . java to accurately reflect the
replaced ` shutdown ( ) ` method with ` closeIdleConnections ( 1L ) ` in ` HTTPHC4Impl . java ` to
added a check for aggregate function suffix before processing aggregate functions in AmbariMetaInfo . java to ensure metrics are only added when aggregation functions
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to use it to improve code clarity and maintainability
added a new Java class to calculate and print the frequency of a given number of integers to facilitate the counting of integers in a
set ch1 to null in ClusteredAgentManagerImpl . java to avoid potential null pointer exceptions
refactor MutisignOperationerGodicTest . java for improved clarity to enhance maintainability and readability of the test
added exception handling to readToStartFragment ( ) and readToEndFragment ( ) in StaxEventItemReader . java to improve robustness
replaced specific text imports with a wildcard import and added null check for qualifiedResourceName in ShadowTextView and TestAttributeSet to simplify import statements
updated import statements from ` com . nimbusds . jose . shaded . json ` to ` net . minidev .
updated OS . java to handle AIX architecture and set family to " AIX " to ensure compatibility with AIX architecture
server : fix access detail for domr / domr / domr / domr / domr / removevpn command
added a method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a way to invoke a RunnableWithResultSync
deleted the PresenceMessageComboTests . java file to the test was deemed unnecessary or redundant
replaced integer division with Math . round for right and bottom calculations in PortraitPagedViewHandler . java to improve clarity and
reformatted method calls in TestClusterDumper . java for consistency to improve code readability and maintainability
updated alignment calculations in KeyValue . java for improved memory management to enhance memory efficiency and prevent potential null pointer exceptions
camel - 16462 : camel - core - do n ' t swallow exception when add a service to camelcontext .
added support for handling ConditionalTask in SparkCrossProductCheck to enable processing of conditional tasks in the Spark framework
refactor action handling in Launcher , LauncherAppState , and LauncherModel to ensure proper reloading behavior when managed profile actions are
updated conditional logic in LoginInfoEndpoint and added unit tests for passcode prompt functionality in LoginInfoEndpointTests to ensure correct handling of JSON requests
added a method to descriptive string representation of the region ' s state and server information to provide insights into the region ' s state and
renamed ` message ` to ` msg ` and updated related methods in ` HuobiAccountInfo . java ` and ` Huobi
added support for " PERIOD " keyword in MariaDB and created a test for it in AddColumnGeneratorTest to ensure proper SQL generation
[ beam - 10660 ] add support for portable pipeline configuring the default environment of portable worker .
added documentation for Launcher shortcuts in VersionChangeLogs . java to clarify changes to the dictionary loading mechanism for Android 7.1 and
updated the visibility of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil . java to allow access to the NUM _
removed debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] do n ' t invoke aeron client in the archive and consensus module .
updated type validation logic in mmm Attr . java and added a new class NoWarnOnImplicitParams . java to improve type handling for implicit
refactor menu item visibility and enablement methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by centralizing
updated BTCETransHistoryResult and BTCETransHistoryJSONTest to use BTC _ deposit instead of withdrawal to
replaced ` List ` with ` Set ` for series and exceptions in ` RetryFilterFunctions . java ` to improve performance by avoiding duplicate
mark the PluginLoader class as deprecated to indicate that the class is outdated and should not be used in new code
added a condition to check if ` resultPair . getEndTime ( ) ` is greater than ` resultPair . getTimestamp ( ) ` in `
added a newline character to the request string in HttpResponse . java to ensure proper line endings in response handling
added a static block to set the system property " org . slf4j . simpleLogger . log . org . apache . http .
added safe area setting to titleBar in Sheet . java to ensure the title bar is visible in the user interface
updated the iteration method to iterate through TimeSeriesChunkMetaDataList instead of an iterator to improve performance by avoiding unnecessary iteration over the list
added a SQL statement to the ALTER TABLE command in AlterTest . java to ensure that the SQL command can be parsed and deparsed
changed the visibility of the copyState method from package - private to public to allow external access to the copyState method for better usability
fixed - redissonexecutorservice . executeasync ( ) method do n ' t return completablefuture
refactor file name to use constant to improve code readability and maintainability
[ hotfix ] [ table - common ] fix typo in license header
refactor conditional checks for valueArg and nameArg in CompareFunctionsProcessor . java to improve code readability and maintainability
updated the ` reduceScopeForLimitedSpace ` method to accept a ` expectedSize ` parameter and improved disk space validation logic to enhance
added ` toString ( IndexReader ir ) ` methods to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector
added state validation in AbsSwipeUpHandler and null check for mLastGestureState in TaskAnimationManager to ensure proper handling of invalid
refactor lock timestamp handling in AppPreferences and related classes to use instance methods instead of static context to improve code clarity and maintainability by
refactor artist retrieval in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerExceptions when remoteMessage is null
added null checks for ` splitInfo ` and ` headerFlowFile ` in ` SplitText ` and corresponding tests in ` TestSplitText `
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows - specific key store types
increased the default check timeout from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to improve test reliability
added a condition to check if the result code is FILE _ NOT _ FOUND before proceeding to ensure proper handling of non - existent files
added animation functionality to the Slider class to enhance user experience by allowing smoother transitions in the slider
updated line separator assertions in LineSeparatorProcessorTest . java to use the correct line separator to ensure consistency in test validation across different operating systems
updated maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to improve texture packing efficiency
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest . java ` and modified the condition
camel - 18131 : camel - hazelcast - add timeout support for camel - hazelcast
added TextFeedbackTest class and refactored TestRunner and TestRunner to improve test coverage and organization to enhance test coverage and facilit
replace Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve accuracy of score comparison logic
updated DENSITY cases in AddAndScaleMultiImage . java and ResourceEditorApp . java to use try - with - resources for FileOutputStream
added a method to retrieve the array class element offset in HotSpotReplacementsUtil . java and updated variable names in ArrayCopySnippets .
[ log4j2 - 1349 ] defaultlogpublisher : do n ' t log first stage if it ' s zero ( #
added support for remote SCM support in Configuration , RuntimeEnvironment , and Indexer classes to enable or disable remote SCM support for improved
added states _ END and STATE _ RINSE _ HOLD to the state condition in MieleApplianceHandler . java to enhance
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to improve logging
corrected a typo in the variable name from ' log ' to ' LOG ' in LocalZookeeper . java to improve code readability
added unit tests for ProjectGenerationEvent ' s finished and started states in EventSerializationTest . java to ensure correct serialization and deserialization of ProjectGeneration
ggb - 1181 fix for select _ tool _ point and select _ tool _ point for av
refactor JavaCompiler class to improve code structure to enhance maintainability and readability of the code
added a validation check for the remaining time before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that the
updated multiple Java files including DumpHeap , TimSortStackSize2 , and TestPollingInterval to improve code organization and maintainability
added " -- gc - sections " and " nocopyreloc " options to the LdfLags list in NdkCxxPlatform
updated the fallback URI handling in SpringCloudCircuitBreakerFilterFactory and added new test cases in SpringCloudCircuitBreakerTestConfig and HttpBinCompatible
updated multiple test files for consistency and clarity to improve maintainability and readability of the test suite
fix for bug # 54444 - avoid npe in read shared string table .
added a new method ` getAccountNet ` in ` HttpMethed ` and a corresponding test in ` HttpTestAccount001 ` to enable
added a null check for availTextWidth in SwingUtilities2 . java and improved error handling in Test6635110 . java to
refactor FlatteningIterator to use a boolean flag and simplify iterator handling to improve code readability and maintainability by reducing redundancy
added " < b > " and " < / b > " to the data entries in NotificationUtils . java to ensure that HTML elements are
doc : generate sample code in the java microgenerator ( # 241 )
update instructorfeedbackediteditionsuitest to check for existing question before test
hssfsheet . getfirstrownum ( ) and getlastrownum ( ) now return 0 instead of - 1 for first row
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being added
[ java ] : use cluster session . state . init instead of cluster session . state . init to avoid deadlock .
added hashCode ( ) and equals ( ) methods to AbstractParquetMapInspector and refactored equality checks in AbstractParquetMapInspector to
added a check to flush the QIC session if remotelyClosed to ensure that the QIC session is properly flushed when the connection is closed
updated the ` SplitReader ` interface to extend ` AutoCloseable ` and removed the ` close ( ) ` method from ` SplitReader `
removed the deepCopy method from GsonBuilder to streamline the object creation process by eliminating unnecessary properties
replace null return value with a static final NOT _ FOUND map in LLScanner . java and assert in LLSourceBuilder . java to improve
refactor file opening logic in RestClientRequestImpl . java for improved readability and efficiency to enhance code clarity and maintainability by
removed unnecessary whitespace in the dispatchStatusString method call to improve code readability and maintain consistency
refactor ClassLoader handling in MockFactory and introduce SearchingClassLoader class to improve classloader management to enhance flexibility and maintainability of class loading
add test for refresh flag bug
added LEFT _ SEMI _ JOIN condition to condition checks in ConstantPropagateProcFactory . java to ensure proper handling of LEFT _ SEMI
refactor response and response handling in HttpReceiver and HttpSender classes to improve clarity and correctness of response termination logic
update jvmci import : renames to be more consistent with jvmci - 9
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - set default policy
refactor multiple Kerberos - related classes to improve code organization to enhance maintainability and readability of the codebase
added a check for the application ' s running state before stopping the app context to prevent potential NullPointerExceptions when the app context is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the drawItem method to accept a GlyphLayout object instead of
refactor metrics handling in SpringmvcClient to use MetricsPublisher for better metrics management to improve code clarity and maintainability by utilizing
updated the usage of the SAFE _ ACCOUNT _ AGE _ DATE constant in AccountAgeWitnessService . java to improve code clarity
reformatted code for better readability and consistency in StructureHeader . java and StructureReader . java to improve code readability and maintainability
added a new ` ResourceUrlProviderExposingInterceptor ` to the ` CasWebflowContextConfiguration ` and updated related classes to utilize it
add a dexreturninliner to dexbody so that it do n ' t break inlining
refactor enrichrichedruledto to use getproperties ( ) instead of getconfiguration ( ) . getconfiguration ( )
removed the ` NOFOLLOW _ LINKS ` link option from the ` isDirectory ` method in ` PathResource . java ` and updated the corresponding
[ hotfix ] [ table - common ] remove sqldialect from executionentry and executioncontext
replaced instances of ` rDotJavaPackages ` with ` rDotJavaPackagesSupplier ` and ` hasRDotJavaPackages ` in multiple
add a new test class ` ASTPackageDeclarationTest ` to verify the behavior of package information in the AST package declaration
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to allow dynamic configuration of minimum cross compaction unseq file level
[ hotfix ] [ runtime ] move activeresourcemanager to the active package
updated the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestColumn _ WrongOrder ` to clarify that
updated URI creation logic in ZipResource . java and added unit tests in ZipResourceTest . java to handle spaces in jar file paths to improve
added thumbnail handling for file uploads in ExpandableUploadListAdapter . java to enhance user experience by allowing thumbnail updates based on upload status
refactor RobolectricTestRunner to handle class hierarchy and add tests for merging parent class and method configurations to improve flexibility in config
replaced direct calls to ` GameData . typeSafeIterable ( ) . typeSafeIterable ( ) ` with ` Iterables . filter ( )
refactor methods in AbstractDataChangedListener to be package - private and update WebsocketDataChangedListener to extend AbstractDataChangedListener to improve
added support for enum types in JSONPojoConvertor and updated test cases in JSONPojoConvertorTest to improve type handling and ensure
added deprecation warning for ` -- view ` option in ` IjProjectCommandHelper ` to inform users that the ` -- view ` option is
replaced ` String ` with ` byte [ ] ` for ` originalPayload ` in ` GWTRequestWrapper . java ` to improve memory efficiency
added orientation correction functionality to GyroControl to enhance user experience by providing visual feedback on device orientation changes
change biome _ list _ size from 256 to biomegenbase . getbiomegenarray ( ) . length ( ) . length
updated method calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and changed interface visibility from public to public to
[ hotfix ] [ file ] fix checkstyle violation in filecompileconfig
added a new interface ` ByteToLongCollector ` in the package com . speedment . common . function . collector ` to provide a collection of
added a default value for preload in MMapDirectoryFactory to control the default behavior of mapDirectory preload based on user - defined parameters
added custom metrics for worlds , economy , economy , and mysql in BukkitPlatform . java to enhance
refactor QuickConnectREST class to improve code structure to enhance maintainability and readability of the code
added aspect and default card image initialization in CardPresenter . java to enhance user experience by providing a visual representation of the default card image
update authenticationcountselector to use loginpageurl ( ) instead of isimplicit ( )
updated cloning logic to handle empty array cases for long , double , byte , and byte arrays to improve robustness by avoiding unnecessary array
added tests for ` System . nanoTime ( ) ` and ` System . nanoTimeJit ( ) ` in ` TimeChangeTest . java `
added trimming of line before processing in MultiPartFilter . java and improved error logging in MultipartFilterTest . java to ensure line is
add experience drop event to entitylivingbase . dropexperience ( # 8893 )
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use @ text / offline . config - error - invalid - apikey to
[ beam - 1749 ] remove unsupported operators from beam - dsls - sql - planner
added RdepsFunction to GraphEnhancementQueryEnvironment and corresponding tests in GraphEnhancementQueryEnvironmentTest to enhance dependency management and ensure
refactor Character class to improve code readability to enhance maintainability and ease of understanding for future developers
added a check for the entire rocket before setting the selected index in ScaleDialog . java to ensure that the selected index is only set for
replaced ` Arrays . toString ( ) ` with ` getBytes ( ) ` in ` UpdateableResultTest . java ` to simplify the assertion
replaced the method ` getOfflinePinotQuery ` with ` attachTimeBoundary ` and updated related logic for handling time boundary information to improve
simplify the poller addition logic in the apr processor
updated EightmusesRipper to replace " comix " with " comix / picture " and refactored album title handling
replaced direct calls to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to standard
added a condition to check if the device is a phone and not landscape in QuickstepLauncher . java to ensure proper layout behavior for phone
replaced calls to ` getValue ( query , PROPERTY ) ` with ` query . unwrap ( QueryImpl . class ) ` in ` PartTree
replaced direct calls to ` Files . readAllLines ` with a new method ` readMatchingLines ` in ` SubSystem . java ` to
added dynamic check for the " getResultStream " method in JpaQueryExecution to ensure proper invocation of the " getResultStream " method in the
added null check for entity in PhysicsProcess . java to ensure proper handling of null entities and prevent potential NullPointerExceptions
fix entry _ processor _ with _ predicate _ clears _ map _ when _ value _ attributes _ be _ indexed ( # 11818 )
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color assignment in Utils . java and modified HTMLMessage in UtilsTest . java to use the correct background color to ensure consistent color display across
fix ` ` disable ' ' for text input ( # 6371 )
updated the path in Aapt2Link . java to use " % s / link - tree " and added RmStep functionality to improve
replaced instances of ` newCapture ( ) ` with ` newInstance ( ) ` in ` ExternalJavacTest . java ` and updated
ggb - 289 update selection after geos change ( fix for ggb - 289 )
added handling for EmptyStackException in YsldValidator . java to improve error management for CQL expression parsing errors
added ` isCanceled ( ) ` method implementations across multiple classes to ensure consistent behavior of the ` isCanceled ` method across different call classes
refactored the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code consistency and reduce redundancy across multiple classes
added a default implementation of the removeAllWidgets method in UILayout . java to indicate that the method is not yet implemented
[ hotfix ] [ test ] fix log4j test failure in yarntestbase
opensslcipher : use maxoutputsizeforfinal instead of maxoutputsizeforfinal
updated video handling logic in PlaybackController . java to ensure proper transcoding of high - res content based on Fire TV Stick and
[ beam - 10614 ] fix test failure in spark - sql - execution - spark
replaced specific imports with a wildcard import and modified listener management in GpsLoggingService . java to improve code readability and maintainability by
changed the type of ` fullwidths ` from ` boolean [ ] ` to ` byte [ ] ` and updated related logic in ` vt320
added import for BaseItemDragListener and modified item creation logic in FolderIcon . java to enhance functionality for handling drag events in the launcher
added createEmptyArtifact methods to RepositoryConnector , FileSystemConnector , SignavioConnector , and TagConnector classes , and updated related classes to
remove unnecessary comments in RabbitMQPublisherImpl . java to improve code readability by eliminating unnecessary comments
simplified the condition for loading video links in VideoViewerActivity to improve code readability and maintainability by eliminating unnecessary complexity
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5457 . add a
[ java ] increase test timeout to 20 second
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability
added support for LARGE _ FERN in BlockDoublePlant . java and BlockType . java to ensure compatibility with LARGE _
replaced tree . setFocusable ( false ) with tree . setRequestFocusEnabled ( false ) in TranscodingTab . java to improve focus management
do n ' t swallow exception when vm fail to start
modified license acceptance logic in DB2TestSystem and adjusted imports in DockerDatabaseWrapper and TableIsEmptyGenerator to ensure proper handling of DB2
changed the ` units ` field from final to non - final and added a method to set the ` units ` in ` DoubleModel ` ,
added a new constant BTC _ ZMW to the CurrencyPair class to facilitate the use of ZMW currency pairs
added a check to set the number of samples in TestPBRLighting . java to ensure the fpp has a valid number of samples
updated TestTasklet assertions in StepWithSimpleTaskJobParserTests to remove unnecessary ' job . step ' prefix to streamline test execution by
made variables ` cred ` and ` svc ` final in ` CentralAuthenticationServiceImplTests . java ` to ensure immutability of
[ giac ] make sure ggbabs ( ) do n ' t throw exception
added multiple calls to ` addServiceOutput ( ) ` and refactored related output addition in ` DDLSemanticAnalyzer . java `
[ zeppelin - 4892 ] fix bigdecimal coercion for bigdecimal
added a line to hide the JDT used by Jetty to improve the application ' s compatibility and reduce unnecessary
removed the call to super . useAuthCache ( ) in NegotiateAuthentication . java to simplify the authentication logic by eliminating unnecessary
updated namespace assignment to use capitalized strings to ensure consistent casing for namespace names
camel - 16462 : camel - direct - do n ' t use exchange when consumer be not available
added null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is not initialized
updated progress bar message formatting in Loader . java to improve code readability and maintain consistency
replaced direct vibration cancellation with a method call to run on the UI helper thread to improve code readability and maintainability by centralizing
added a method to update the last remote stream ID in HTTP2Session . java to ensure the last remote stream ID is updated correctly
added text anti - aliasing attribute to the Graphics2D object in multiple files to ensure consistent text rendering behavior across the application
[ java ] : remove unused termwindowsize from driverconnection and driverpublication
refactor : remove static import of enums in ctannotationimpl
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
replaced the native method ` getRGBPixelImpl ` with a call to ` getRGBPixels ` in ` WRobotPeer . java
refactor output stream initialization by introducing a new method ` newPrintStream ` to handle character encoding to improve flexibility by allowing customizable
updated vibration duration from 1 to 25 in TouchableMovementMethod . java to improve visual feedback during movement movement
added import statements for various classes in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment
refactor WebSocketClient constructor parameters for improved clarity and consistency to enhance code readability and maintainability
simonstewart : fix the i18n test failure on window
replaced handleIllegalArgumentException and handleIncompatibleClassChangeError with handleLoadConstantException and updated related methods accordingly to improve error handling by distinguishing between
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper handling of authentication system state during tests
added a new class ` LowercaseComparator ` and modified the superclass constructor to use it to improve sorting functionality for features based on null values
refactor JavadocTool to handle duplicate source files more effectively and improve error handling to enhance code clarity and maintainability by consolidating file parsing
simonstewart : add test for toggle an option in a multi - select
removed the check for the length of keys in HighestKvno . java to streamline the code by eliminating unnecessary exception handling
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by logging a warning when the attribute retrieval fails
[ beam - 1749 ] use ` ` writeresult ' ' instead of ` ` pdone ' ' for expand ( ) ( #
corrected the name of the entity in CreateTemplateRequestEntity from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added
added a new file ` TestMultiANewArray . java ` that implements a test for multi - dimensional array creation in Java to verify that
added a new configuration option for managing secondary storage in the ManagementServer to enhance storage management capabilities for the management server
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve clarity and correctness of block ID handling
added theme setting to PreviewTabView to ensure the preview tab displays the correct theme based on the user ' s preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in ConnectorTimeoutTest . java and modified the connector ' s setIdleTimeout method in ServerConnectorTimeoutTest
add dcoref . dictlist , dcoref . signatures and dcoref . dictpmi , and dcoref . signatures
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method
removed unnecessary type casting in JpaPagingItemReaderIntegrationTests and updated parameter values in JobLaunchingGatewayParserTests to improve code cl
changed log level from warn to debug for child nodes in DistributedQueue . java to reduce log verbosity for non - critical issues
refactor ColorExtractionService to use getHotseatPallete method for updating hotseat colors to improve code readability and maintain
added default transformer methods for TableEntryByTypeTransformer and DefaultDataTableCellByTypeTransformer in TypeRegistry and TypeRegistry classes to enable customization of data
added assertion to check if newAvailableShared is less than initShared to ensure that newAvailableShared is not less than initShared to prevent potential
chore ( regen ) : update license year to match current month
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to
[ hotfix ] [ runtime ] fix checkstyle violation in driverutils
added contact form route to the application and created a new Contact class to enhance the application ' s ability to handle contact form requests effectively
guac - 1342 : use guac permission set instead of permission , a suggest by valerybokov
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release of the application
changed the parameter type from KnowledgeBase to KieBase in the setMode method to improve clarity and consistency in the code
updated method names and parameters from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` and ` find
replaced manual closing of per - document consumers with IOUtils . closeSafely to improve resource management and avoid potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
replace menu . show ( ) with an OnClickListener for overflowButton to enhance user interaction by allowing the overflow button to be displayed
updated error messages from " is null " to " is a non - null reference " across multiple classes to improve clarity and accuracy of error
ggb - 1365 : update line height for help button in web
move protobufferutilizertest to core . util package and add test for protobufferutilities .
fix divider position and side pane width in jabrefframe
add support for crossref in aux file generation
mondrian : replace map with metadatamap in geoserverfeaturesource and geoserverfeaturelocking
renamed ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the variable
[ contactlist ] update the contact list when the contact list be update .
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test method to clean up audit log table post parameters by position in AuditLogTest . java to ensure proper cleanup of audit log table
changed the return type of the inject method from a generic type to an Object type to ensure type safety and prevent unchecked cast warnings
added regex patterns for parsing comment lines in ACLFileParser . java and updated related tests in ACLFileParserTest . java to improve parsing accuracy
updated ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` to include ` FileSystemPlugin ` and ` userName ` parameters to
added a new HashMap < String , String > and updated ancestor dimension handling in StarTreeNodeImpl . java and TestStarTreeNodeImpl . java
added user unlock check before dumping PluginManagerWrapper and updated closeOpenViews method calls across multiple classes to improve user experience by preventing unnecessary
updated variable name from widthStr to positionStr in Photo . java to improve clarity by using a more descriptive variable name
refactor certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance code readability and maintainability
[ hotfix ] [ hadoop ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to `
cloudstack - 4892 : do n ' t skip project network if there be no associated network
updated the method of retrieving the label JSON element from ` jsonElement . getAsJsonObject ( ) ` to ` jsonElement . getAsJsonObject ( )
added a property to store undo information in the App class to control the storage of undo information for improved user experience
replaced direct retrieval of the " sun . java2d . xrgradcache " system property with a privileged action to ensure that the
refactor StreamCloseTest to use awaitility for stream size verification to improve test reliability and readability by leveraging awaitility for
removed unused ` doAfterFlush ( ) ` method and initialized ` perFields ` in ` TermVectorsConsumer ` and ` DocFieldProcessorPer
updated ConfigurationMetadataGenerator to handle non - deprecated properties and added support for case - insensitive enums to improve deprecation handling and enhance flexibility in property
updated capacity and mask calculations in BiInt2ObjectMap and Int2ObjectHashMap to use the correct length of the values array to ensure correct
updated the number of threads from 25 to 15 in HiveConf . java and refactored file renaming logic in Hive . java to improve performance
improve trace logging in parallelniosender . send ( )
added a null check for the context in SchemeAndroidIDE . java to avoid potential NullPointerExceptions when the context is null
fix detection of leaked static state on the image build server
modified the return type of ` modifyGrantedAuthorities ` from ` void ` to ` List ` in ` SwitchUserProcessingFilter ` and updated
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added new classes ` RawJaxrsIntegrationTest `
fix # 103 , add support for setquerytimeout ( ) and is _ jdbc4 ( )
added data providers for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest . java to enhance test coverage for various substring
replaced eventWriter . close ( ) with delegateEventWriter . close ( ) in StaxEventItemWriter and added close ( ) method
added support for MariaDB sequence handling in MariaDBDatabase and modified conditional checks in CreateSequenceGenerator to ensure compatibility with MariaDB
reformatted string concatenation for consistency across multiple Java files to improve code readability and maintainability
replace BrokerResponse imports with TableDataManagerProvider in test classes to enable offline table metrics management in the tests
updated the method to check for both " jsse . enableMFLNExtension " and " jsse . enableMFLExtension " to
replaced the generic type ` ObjectIterator < T > ` with ` ObjectHashSetIterator ` and removed unnecessary constructor parameters to improve type safety and
updated character count from 22 to 23 in Compose . java and TweetFragment . java to adjust character limit for shortened URLs to ensure
added datapoint _ ttl field to cassandrasdb . datastore . cassandra . datapoint . storage . cassandra . datapoint . ttl
updated ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and modified related logic to enhance user experience by
added a method ` getTerrainAtCell ` to the ` TerrainGrid ` class to retrieve a terraing at a specified cell
added default value printing in mmm Pretty . java and created a new class T6665791 . java with a Java compiler test to
added error handling for missing quest keys in ResourceLoader to improve user feedback when loading quest keys
added a condition to check if push is not supported in the request to ensure that push operations are only performed when not in push mode
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method call for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary signing
modified the return statement in FileSystemView . java to handle empty roots and added security checks in Win32ShellFolder2 . java to improve robust
updated method names and logic in ColumnText and PdfPRow classes to improve clarity and functionality to enhance code readability and maintainability by
added a SparseArray for undo notes and modified the removal logic in ListFragment . java to improve the management and insertion of selected notes in the
update uploadbackupdata to account for feedback question id ( # 5396 )
removed null check for data in getTransferData method to simplify error handling by throwing an exception for non - null transfer data
no effective change - remove deprecate pstmtdelegate
replace ` Launcher . Padding ` with ` AppWidgetHostView . getDefaultPaddingForWidget ` in ` AppWidgetResizeFrame . java
refactor method handles in NashornBeansLinker to use a static block for dynamic assignment to improve code readability and maintainability by
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
rename ` latch ` to ` goAwayLatch ` and update related assertions in ` IdleTimeoutTest . java ` to improve clarity and
replaced calls to ` getFailure ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest .
changed the initialization of ` currentBook ` from ` ThreadLocal ` to ` null ` across multiple classes to ensure that ` currentBook ` is
added support for MethodInvocation and implemented a supports method in ContactSecurityVoter to enhance flexibility in handling different object types during security voting
removed unused imports from DataLoader . java to clean up the code and improve readability
added an ` rowsAffected ` variable and modified the ` postUpdateLog ` method to accept it to track the number of rows affected to improve
ggb - 2892 scaler width and height should be set to 0 , not 0
set default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration . java to ensure consistent default values for foregroundFPS
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced ` DefaultWebSocketFrame ` with ` ChannelFutureListener ` in ` writeAndFlush ` to simplify the code and improve readability by
updated TestApplicationEventListener to use TestApplicationEventListener1 and TestApplicationEventListener2 instead of TestApplicationEventListener to enhance event handling capabilities for state machine
refactor SettingsActivity to use a dedicated setListBackground method to improve code readability and maintainability by centralizing background setting logic
updated import statement from org . apache . commons . lang3 to org . openhab . core . StringUtils and added null check for line
added a new method ` accumulate ` in ` JavaUserDefinedAggFunctions ` to calculate average accumulators based on a string string to enhance the
hbase - 22728 addendum fix checkstyle violation in replicationsink
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` for caching regex patterns to improve performance by reducing the need
added a static method ` reset ` to reset the ` gameThread ` variable to provide a way to reset the ` gameThread ` instance
added a login method to the DigestAuthenticator class to ensure the correct realm is used based on the login service ' s name to enhance security by
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and functionality to enhance parameter management and ensure proper handling of wrapped request parameters
updated InfoStatus messages to use ' lc ' instead of ' hiddenSingleton ' and improved string representation in LoggerContext to enhance clarity of
replaced multiple calls to ` hasNotified ` with ` this . wakeup ( ) ` in CommitLog . java and HAService .
added a check for Android O and modified user auto - completion adapter in PhotoViewerActivity and UserAutoCompleteHelper to ensure compatibility with Android O
updated schemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to enhance the flexibility of schema information configuration
replaced ` XMLStreamWriter ` with ` BufferedOutputStream ` in ` SaveTask . java ` and updated closing method in ` VizModel . java
replaced the usage of ` BytesRef . bytesToString ` with ` BytesRef . utf8 ` and updated the random byte generation method to
fix mc - 103516 not be able to use entity . get ( ) instead of entity . get ( )
removed " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " from the list to streamline the configuration by elim
[ drools - 5357 ] fix serialization of array . equals ( ) and array . hashcode ( ) in protobufinputmarshaller .
fix switch / cases indentation see camel - 14540
changed the visibility of PDFCloneUtility class from public to package - private to restrict access to the class for better encapsulation
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for endpoint URL resolution to improve flexibility in handling HTTP method and headers for
added a new method ` newResponseBuilder ` to create a ` ResponseBuilder ` instance using a list of ` SearchComponent ` to improve code
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start events
refactor ` computePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` before invoking it to improve null safety and
replaced ` SimpleOrderedMap < String , Object > ` with ` CharFilterFactory [ ] ` in ` LukeRequestHandler . java
replaced manual null argument checks with a utility method ` ParamChecks . nullNotPermitted ` to improve code readability and maintainability by using
updated the ` createSubContext ` method to accept an ` Optional < Verbosity > ` parameter and added conditional output based on verbosity to enhance
added a check to convert the schema to uppercase if it is not null and the database type is " Oracle " to ensure consistent schema formatting for
add logmanager . getcontext ( false ) . getcontext ( false ) . getcontext ( false ) . getcontext ( false ) .
added a new file TestShrinkToOneRegion . java that includes a main method for garbage collection to facilitate testing of shrinking functionality
replaced string splitting method with Splitter ' s on method for customPackages to improve code readability and leverage Google ' s Splitter
refactor AnalyzingInfixSuggester and AnalyzingInfixSuggesterTest to simplify context handling and improve test coverage
updated the handling of the local attachment in PushsaferMessageBuilder . java to improve clarity and correctness of the encoded string format
mondrian : remove unused method from modelexplorer . showlabelstats ( )
pdfbox - 4071 : remove unnecessary null check , a suggest by valerybokov
changed the access modifier of the FORMATTER functions from ` final static ` to ` static ` across multiple test classes to allow for more flexible
replaced Apache Commons Logging with Java ' s built - in rounding functions in UDFRound . java to improve compatibility with Java ' s built
[ jsscripting ] use config . valueasorElse instead of config . valueasorElse
changed the visibility of Test1 and Test2 classes from package - private to public to allow access to Test1 and Test2 classes from other
updated player event handling to use " deny . no _ enter " instead of " permission . no _ event " to improve clarity and consistency
updated the ` getAdditional ` method to include a ` session ` parameter in ` ConditionAndOr ` and ` ConditionInConstantSet ` classes to
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in
added new methods to create box , circle , and reset friction in Box2DCharacterControllerTest . java to enhance test coverage for
added tests for memory size limits in FLIGHT _ RECORDER _ OPTIONS to ensure correct handling of memory size limits in FLIGHT _ RE
removed unnecessary assertions for " must be power of 2 " and " must be a multiple of 8 " in ObjectAlignment . java and Options .
added ` target - package - name ` argument to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidManifestReader ` , and
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of acceptableThrowawayItems to initialize with an empty list instead of an empty list to ensure that the acceptableThrowawayItems is
8274888 : test / java / lang / reflect / jvmti / test6987555 . java fail with
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
refactor Inflection class for improved clarity to enhance maintainability and readability of the code
added methods to retrieve and set the locale in EvaluationContext to enhance locale management functionality in the EvaluationContext class
removed the import of Plugin from SummaryPrinter . java to streamline the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity . java to prevent fall - through behavior in a switch case
updated import statements in MongoQueryCreator . java to use wildcard imports and improved query object retrieval to enhance code readability and maintainability by
added support for the xwork . loggerfactory system property . xwork . loggerfactory
updated method names for clarity in AdminAddPeerWithP2PDisabledAcceptanceTest . java to improve readability and understanding of
polish ` ` remove @ conditionalonmissingbean ( name = ` ` livenessstatehealthindicator ' ' )
added concurrent mapping for PStore configuration in LocalPStoreProvider . java to improve concurrency handling for local storage operations
changed the visibility of the deleteFiles method from public to private to restrict access to the method for better encapsulation
refactor ServiceLoaderSpliterator to ServiceProvider and update related methods to improve clarity and consistency in service provider handling
refactor javainteropreflect . findfield and javainterop
added checks for toolchain creation in AbstractCell and implemented it in DefaultToolchainProvider and DaemonLifecycleManagerTest to ensure that the Android SDK
fix potential deadlock in polyglotengineimpl . removecontext ( context )
replaced ` indexOf ` with ` contains ` for ` fail ` checks in ` AbstractCheckDescriptor . java ` to improve code readability and
updated ` PrebuiltCxxLibraryDescription ` and ` PrebuiltCxxLibraryBuilder ` to use ` exportedLinkerFlags ` instead of
replaced ` onConfigurationChangedInternal ( ) ` with ` updateRecentsRotation ( ) ` in ` AbsSwipeUpHandler . java
updated type checks for ItemReadListener , ItemProcessListener , and SkipListener in multiple classes to use wildcard generics to improve type safety and cl
added the hashAsString ( ) method to the Object array in AbstractBlockChain . java to ensure the correct hash is used for the new block
defaultmessagestore : use getstorepathcommitlog ( ) instead of storepathcommitlog ( )
remove unnecessary try - with - resources statement in MicrometerMetricManager . java to ensure proper resource management and avoid potential memory leaks
added message count and statistics tracking for FOUND and FOUND status in CompactionLog . java to enhance message tracking and statistics tracking for better
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should no longer be used
added a method to check for the presence of a system UI object in AbstractLauncherUiTest to ensure that the system UI behaves correctly when
changed ` logger ` and ` principals ` fields to be ` final ` in ` SessionRegistryImpl . java ` to enforce immutability and
added a check for empty cookies in InMemoryCookieStore and a test for the removeAll method in NullUriCookieTest to ensure that the removeAll
[ bonsai ] fix npe in bonsai world state updater
changed the return type of getText methods from String to CharSequence in ITextRepository and LimitedSizeCacheTextRepository classes to allow for more flex
added an @ NotYetImplemented annotation to AlertsTest . java to indicate that the test is not yet implemented due to a specific bug
added a finally block to handle connection return in SocketConnector . java to ensure proper connection management and handle potential IOExceptions
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to clarify
added synchronization to the ` DbTxnManager ` class to ensure thread safety when accessing ` heartbeatExecutorService `
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
added a method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to fix drag - selecting text out of the
added temporary directory paths to configuration overlays in TestInformationSchemaWithPrivilege . java to ensure compatibility with different Hadoop file system configurations
refactor graphics configuration retrieval logic to use conditional checks to improve readability and maintainability of the code
tika - 1343 -- upgrade tika - server to 2.0 . 0 - rc1
refactored the ` doProcess ` method in ` Pipeline . java ` to streamline processing logic to enhance code readability and maintainability
refactor command - line argument handling in PrintTagList . java for improved clarity and functionality to enhance the flexibility of command -
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
improve test to check for end - of - file exception
[ java ] make startfromtruncatedrecordinglogtest more reliable .
updated the arc calculation in LineBorder . java and added a new test case in Test4252164 . java to improve the accuracy of
added null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to improve robustness by preventing null or empty
updated the handling of the deployment ID in the StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator classes to ensure the deployment ID is
pdfbox - 4071 : rename ` ` pdfbox . examples . fdf ' ' to ` ` pdfbox . examples . interactive .
removed the ` moreColumnOk ` parameter from the ` canUseIndex ` method and related calls to simplify method signatures and improve code readability
added provisional engine handling in QuickfixjComponent . java and updated corresponding tests in QuickfixjComponentTest . java to improve engine management
added displayZoomControls field and corresponding getter / setter methods in RoboWebSettings . java to enable dynamic control of zoom controls in the Rob
added corporea block , brick , and slab to the mod , and make it easy to register corporea block . close #
refactor ConnectionFactory class for improved readability to enhance maintainability and facilitate future updates
added a method ` EnableDisableMenuItems ( ) ` to manage menu item visibility based on user settings to improve user experience by providing visual feedback
updated the message in ExtendedListFragment to use a filter list instead of the headline server search message to improve user experience by providing clearer
removed the ServiceRegistry dependency from the Setting annotations in EntityTests . java to simplify the test setup by using the JUnit ' s Setting annotation
added automatic resizing and column creation settings in MotorMountConfigurationPanel and updated constructor parameters in MotorMountTableModel to improve
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and subject properties in POIXMLProperties . java and created corresponding test cases in TestPO
reformatted the doStop ( ) method call in HandlerWrapper . java to improve code readability and maintainability
[ java ] check if the cnc file be empty before try to read it .
replaced the ` NonMarkedFoo ` class with a ` FooCommand ` interface in the ` UnsatisfiedTypeBounds ` class to
added methods to check for JMOD files in ClassFileSourceImpl . java to ensure proper handling of classes and classes based on system properties
updated TreeBackedElement and TreeBackedPackageElement to remove the canonicalizer parameter and added null checks to enhance code clarity and prevent
replaced the method of setting the client ID in Saml2TokenGranterTest and UserTokenGranterTest to create a
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure the
added synchronization methods to ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper resources
added checks to ensure no current context is present in GlUtil . java to ensure that no current context is present in the OpenGL context
[ drools - 1188 ] do n ' t remove activation when activation be active in executionflowcontrol
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method
removed error handling for ` PipeNotExistException ` in ` DropPipeProcedure . java ` and added assertions in ` IoTDBPipeIT . java
refactor clientqueuedisruptiontest to use junit 4 . x instead of junit 4 . x
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl . tostring ( )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated imports in GeoPointField , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoPointPrefixTermsEnum classes to improve
added a new class ` FakeBuildable ` to facilitate testing of the ` OnDiskBuildInfoTest ` to facilit
remove null check for itemstack . getitem ( ) and itemstack . isempty ( )
updated variable names from " rule path " to " rule timeseries " in TSParser . java and SQLParserTest . java to improve clarity
added a check to return 0 if the value is less than the epsilon in TubeCalc . java to ensure that the computation does not exceed
replace calls to getBucket ( ) with getBucketName ( ) in GcsPinotFS . java to improve code clarity and maintainability by
removed duplicate calls to VertxUtils . blockCloseVertxByName ( " transport " ) in TestHighwayTransport . java to ensure proper
add support for postgres history view creation and drop
updated the clustering engine check from 2 to 3 in CarrotClusteringEngineTest . java to ensure the test accurately verifies the correct
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to indicate that the test needs to be rewritten to ensure the test
added a new class ` ParserStateObjectInputStream ` and modified ` ParserCacheCommand ` to utilize it to enhance the parser ' s ability
added null checks and initialization for objectQuotingStrategy in ChangeSet . java and DatabaseChangeLog . java to ensure objectQuotingStrategy is only set
changed the parsing method from parse to fromXmlStream in SliderAppsViewControllerImpl . java to improve compatibility with XML stream handling
deleted the CsrfControllerAdvice . java file to the functionality is no longer needed for the application
updated endorsed directory handling to quote paths in AntCompiler . java to ensure consistent path formatting across different operating systems
added drawable alpha animation to the Launcher and LauncherAnimUtils classes to enhance visual feedback during drag and drop operations
updated Long parsing from 2 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java to improve precision
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added path type checks for absolute , relative , and UNC paths in WindowsPathParser and PathOps classes to ensure correct handling of path prefixes
replaced InetSocketAddress instantiation with a direct instantiation of MulticastSocket to simplify socket creation and improve code readability
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
nBits . clone ( ) return nBits . clone ( ) instead of nBits . clone ( ) to ensure that the returned nBits
lucene - 4892 : improve profilercollector . derivecollectorname ( ) to allow subclass access
refactor type hint checks in MappingMongoConverter to use a dedicated method for better readability to improve code maintainability and clarity in type
added performance measurement for proxy factory creation in ProxyMaker . java to improve performance tracking during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection . java to include the original exception as a cause to improve error reporting and provide more context for connection issues
refactor reinflateWidgetsIfNecessary method to use Workspace instead of LauncherModel for widget management to improve code readability and maintainability
added a new file ` DeleteInsideFileDialogTest . java ` that tests the functionality of the ` FileDialog ` to demonstrate
lwjglabstractdisplay now call display . processmessages ( ) if autoflush be true .
add instructorstudentlistpageuitest . testshowphoto ( ) and instructorstudentlistpageuitest . testshowpicture ( )
added functionality to determine if a test is ignored based on the " onlyRun " and " only " properties to enhance the Ignorance
removed the ` pointer ` parameter from the ` fling ` method signature in ` ScrollPane . java ` to simplify the method signature and improve
added null check for pageable in QueryDslJpaRepository and created a test for it in QueryDslJpaRepositoryTests to
added a ` computeMemorySize ` method to ` MemoryManager ` and corresponding unit tests in ` MemoryManagerTest ` to improve memory size computation
increase timeout for jmsspublisherconsumertest from 2 second to 2 second
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
refactor the handling of the previous index in StreamingAggTemplate . java to improve clarity and maintainability of the code
add a static method ` pluginErrorMessage ` to encapsulate error messages in a separate method to improve code readability and maintainability by encapsulating
added a new method ` stream ( TableIdentifier < ENTITY > tableId , computeIntensityDefault ( ) ) ` to the ` StreamSupplierComponent
updated logging messages and added retry logic for file renaming in MediaMonitor . java to improve clarity of log messages and ensure proper handling of file
replaced the ` setAccessable ` method with ` newInstance ` in ` InjectorProxy ` and updated its implementation in ` StandardInjectorProxy `
[ hotfix ] [ stream ] remove unused close ( ) call in streamstreamingcreatefunction
added unit tests for various SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest classes to ensure correct parsing and handling of
replace return null with return ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
updated the list of Warehouses in NamedSetTest . java to use Quality Distribution and Inc instead of Deliberate errors
refactor WebSocket connection handling and logging in DeconzBridgeHandler and WebSocketConnection classes to improve clarity and maintainability of connection state management
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI
hbase - 11937 add retry for table creation in testregionreplicareplicationendpoint . testreplicabletable ( )
added calls to PMS . get ( ) and setConfiguration ( false ) in FormatRecognitionTest . java to ensure PMS configuration is
[ cloudstack - 4892 ] fix creation of ovm data disk template for image store
replaced SpringBootTest with SpringJUnit4Runner in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to ensure compatibility with JUnit4
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated SQL statements in AppendOnlySchemaIT . java for consistency and clarity to improve code readability and maintainability
added a check for document count mismatch in SegmentReader . java to ensure consistency between deleted and segment document counts to prevent errors during indexing
pdfbox - 4071 : add method to siplogger . getloggername ( ) and add logtrace ( string ) .
updated FilamentFactory to use shorter length for staves w / no starting barline to ensure staves w / no starting barline
set handleFileUploads to true in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatformHttpEngineTest . java to
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to the ` CsrfFilter ` class
[ jvmci ] remove static field from hotspotobjectconstantimpl . java
updated method names and parameters from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
updated the method call to use a local variable for the Instant instance to improve code readability and maintainability by using a local variable for the
hhh - 15836 - fix npe in sqmctesStatement when ctedefinition be null
added import statement for ResultSetMetaData in QueryCompilerTest . java to facilitate the use of ResultSetMetaData for database queries
updated the library output format in JsLibrary . java to use the project filesystem ' s root path to ensure the correct root path is used for
updated the angle value for the BasicSlider from - 180lp to Math . PI in RailButtonConfig . java to ensure consistency with the
corrected the y - coordinate in the drawEncloser method and modified the timing mechanism in Saves . java to improve rendering accuracy and
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable expression language functionality in the application
removed null checks for remoteMountPointComponent before setting translation and rotation angles to simplify code and improve readability by eliminating unnecessary null checks
updated setupViews method to accept a ScrimView parameter and adjusted animation animations accordingly to enhance the handling of scrim view transitions and improve
[ flink - 20660 ] [ state - backend - periodic ] add a configuration option to enable periodic materialization
added a ` value ` field and its getter / setter methods in ` ProtocolParameter ` and updated ` List ` and ` ParamTagHandler `
add a test to verify the behavior of the ` ` chunked ' ' header in the ` ` tomcat ' ' servlet .
added ability to check if a message be bumped and update the parseDetails method to return a boolean indicating success or failure to improve the
added Content - Type header to SwitchToPostInterceptor and updated SearchRequestUnitTest to include " application / x - www - form - urlencode
refactor EmbeddedClientConnector class for improved clarity to enhance maintainability and readability of the code
added logging for SQLFeatureNotSupportedException in PhoenixResultSet . java to inform users that setFetchSize is ignored instead of throwing an exception
added initialization of AndroidNet with null values in AndroidDaydream . java to ensure proper initialization of AndroidNet with null values
corrected the order of parameters in LLRealtimeSegmentDataManager . java to improve code readability and maintain consistency in formatting
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 26462 addendum remove hbase - prefix - tree from hbase - mapreduceutil
added a boolean flag to track inflation failure in DesignerActivity and made the root variable final in XMLLayoutInflater to ensure that the
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
loweringphase : use schedulephase instead of controlflowgraph to determine if a node be lowerable
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
[ java ] add new line separator to makefiles . makefile ( ) test
replaced ` getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` in ` ReadTask . java `
set refresh flags to RF _ TRANSFORM and setBoundRefresh ( ) in SimpleBatchNode . java to ensure proper refresh behavior during batch
make safepoints be uninterruptible instead of guava . isguaranteedsafepoint .
added support for framebuffer size change handling in LwjglWindow to ensure proper resource management and prevent memory leaks
updated translation calculations and animation logic in LauncherAppTransitionManagerImpl . java to use mRecentsTransX instead of mRecentsTrans
updated the ` LiteralNode ` class to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to improve type safety and clarity
added functionality to set file length in CompoundFileWriter and its implementations in FSDirectory and IndexOutput classes to ensure the file length is accurately
updated AndroidNdkScriptGenerator to handle manifest file paths and added new test classes in AntScriptGenerator and LwjglDebugStarter
camel - 15836 - camel - aws2 - s3 : use sourcebucket instead of copysource in camel - aws2 - s
added support for the " * " role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to enhance authorization handling and
refactor ZookeeperClientRegisterRepository to utilize new event types and improve path handling to enhance clarity and maintainability of the registration process
renamed methods and classes related to deep stub handling in ReturnsDeepStubs . java to improve clarity and consistency in naming conventions
added a null check for contract . getCallValue ( ) . size ( ) in Runtime . java to ensure that a zero byte is returned
updated debug log message format in BibEntry . java to improve readability of log messages
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and changed the PBE _ ALGO string to " P
tmi - tiff : fix arrayindexoutofboundsexception in tiffreader
added validation for job parameters in CommandLineJobRunner to ensure that only valid job parameters are accepted to improve error handling and provide clearer feedback for
updated the content assertion from " foo \ r \ n " to " foo " in SmtpTests . java and MailTests . java to
refactor case statements in ExtendedConnectionDataSourceProxy to use a more concise syntax to improve code readability and maintainability
replaced the ` lastSequenceId ` field with an ` AtomicLongFieldUpdater ` for thread - safe operations to improve performance by reducing
added a new file ` Test . java ` containing a static method ` sum ( ) ` and a main method ` main ( ) ` to
updated ` ShadowWifiManagerTest ` and ` WifiUsabilityStatsEntryBuilder ` to use ` maxSdk ` instead of ` min
added a new file ` Solution . java ` that implements a solution for sorting integers and returns " YES " to implement a solution for sorting
patch by jbellis ; review by brandonwilliams for cassandra - 113
refactor taskbar recreation logic in TaskbarManager . java to improve clarity and maintainability to enhance code readability and maintainability
refactor SyncFutureCache class implementation to improve performance and maintainability of the code
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and adjusted the LO
[ java ] uselessstringvalueof : fix false positive for string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest ` to validate the calculation of the
add targetmaxtypeshardsize to hollowproducer to allow customization of max type shard size
added new version strings " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBack
refactor CompilationTask class to improve code organization to enhance maintainability and readability of the code
updated assertion in TestSemanticAnalysis . java to check for " mydb . db " instead of " mydb . db " and modified
added a command to ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to enable database change log table management for Liquibase catalog and
refactor call path handling in RestClient and CallPath classes to improve versioning logic to enhance clarity and maintainability of version comparison logic
updated exception handling in PhoenixDriver . java and modified close method in PhoenixDriver . java to improve error messaging and
add ` ` measurement ' ' button to touch app , fixes # 2271
added unit tests for ` ConflictsResolveActivityIT ` and refactored ` FolderPickerActivityIT ` to extend ` AbstractIT ` and
[ gr - 33232 ] fix npe in nativeimagegenerator and compilequeue
added a check to return early if the length is less than 2 in StringHelper . java and implemented a test for removing leading and ending quotes in
refactor JpaQueryCreator to use a new type check for NOT _ CONTAINING in multiple classes to improve code readability and maintain
do n ' t try to push a branch if the account do n ' t have auth dur
added a new P25Message instance in P25MessageFramer . java to enable processing of P25 messages in the framer
added null checks before calling ` checkClosed ( ) ` in ` WebSocketImpl . java ` and created a test for clearing client handlers on end
[ ds - 3352 ] fix the bug of indexeventconsumer and discoveryit
updated padding calculations in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView classes to use default padding values to ensure consistent
added methods to hide all apps and close overlays in TaskbarUIController and BaseActivityInterface to improve user experience by ensuring all apps are
removed the synchronized modifier from the launch method and replaced a sleep delay with a join method to simplify the launch method and improve synchronization handling
updated the calculation of the Point position in JavaSEPort . java to account for the canvas ' s coordinates to ensure accurate positioning of the
replaced ` notificationManager . notify ` calls with ` startForeground ` calls in ` UploadService . java ` to streamline notification handling and
fixed bug 138045 - excessivepubliccount no longer report false positive for static final int .
hbase - 26462 fix testthirdeye testthirdeye testthirdeye testthirdeye -
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity and improve performance
added error handling for FileNotFoundException in ResourceUtils and changed log level from debug to trace in AbstractCipherExecutor to improve error logging for better debugging and
added a new ` BittrexTickersResponse ` class and integrated it into ` BittrexMarketDataServiceRaw ` to retrieve
fix entityentry . getenumconstants ( ) and getenumconstants ( ) . getenumconstants ( ) . getenumconstants ( )
refactor registersession method to accept an Object instead of Class for improved flexibility to enhance flexibility in handling different session types
added new character sets for clist in FileUtils . java to enhance readability and maintain consistency in character representation
added support for setting and retrieving the stylesheet in ResourceService , ResourceHandler , and DefaultServlet classes to enhance the flexibility and usability of
added clearIndex ( ) method to TestFiltering . java to ensure the index is cleared before processing
updated method call from ` ObjectParameterStrategy . class ` to ` PointerParameterStrategy . class ` in ` X86MethodGenerator . java `
updated database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the check for " isEnum " in ObjectStreamClass . java to simplify the name comparison logic
replace ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and add a new class ` SymbolNotFoundError .
refactor document handling in BinaryResponseWriter to conditionally create SolrDocument based on the presence of a pseudo field name to improve flexibility in
added a new case for PING and PONG in WebSocketImplBase and implemented a test for WebSocket pauseping functionality to ensure proper handling of
updated the NON _ IDENT _ ESCAPES string format in RegExpScanner . java to correct the regex pattern for non - identifier escape characters
refactor DnsResolverProvider to use wildcard imports and improve cache resolution logic to enhance code readability and maintainability by reducing redundancy in
added a conditional check for MessagingTracing class in TraceMessagingAutoConfiguration to ensure that messaging tracing functionality is only enabled when the class is available
mondrian : use getquotedidentifierstring ( ) instead of getquotedidentifierstring ( ) for mysql
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , and IDEEditor classes to reflect the
added a condition to handle the ' / ' character in XMLLightweightParser to set the status to VERIFY _ CLOSE _ TAG when parsing
removed the hide ( GONE ) method from TouchCharInput . java to simplify the code by eliminating unnecessary visibility settings
added a null check for the user ID before comparing it to avoid potential NullPointerException when the user ID is null
refactor index handling for JSObject assignment in JSObjectLinker . java to improve clarity and correctness of member assignment logic
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize randomStringGenerator and suffix with default values to improve code
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should not be used in new code
added @ Deprecated ( since = " TODO " ) annotations to multiple utility classes to mark these classes as deprecated to signal that these classes are outdated
deleted the JoglDebugAdaptor . java file and modified RocketFigure3d . java and GuiceStartup . java to stream
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` , ` AWSPropagation ` , and ` AWSPropagationTest ` classes , and
added import statement for PendingIntent in FileDownloader and FileUploader classes to ensure proper handling of PendingIntent updates in notifications
replaced the ` nextOrd ` method with a ` set ` method in ` Lucene80DocValuesProducer ` to improve clarity and
refactor DateTimeFormatter class for improved readability to enhance maintainability and facilitate future updates
removed unnecessary try - catch block around DnD property initialization in WToolkit . java to simplify code and improve readability by elimin
added null and empty checks for administrator credentials in KerberosOperationHandler . java and corresponding tests in KerberosOperationHandlerTest . java to ensure
added maximum width scaling for tablet and two - panel devices in BaseWidgetSheet . java to ensure proper sizing for widget sizing across different
fix ( opengl ) : do n ' t render the window color
refactor Hashing class for improved performance to enhance performance and maintainability of the hashing algorithm
updated the ` accept ` method to accept a ` folderPath ` instead of a ` File ` parameter to improve file path validation to enhance flexibility
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter and added a new ` contentDescriptionInt ` parameter to
removed null check for newType in JavaType . java to streamline code by eliminating unnecessary null checks
increased the ACTIVITY _ START _ DELAY from 500ms to 800ms to improve the responsiveness of the activity
added a constant WEBAPP _ HOME in SolrJettyTestBase and updated JettyWebappTest to use it to improve maintainability and
removed unnecessary determination of diameter and selectedMotorSet in ThrustCurveMotorSelectionPanel . java to simplify the code and ensure
added import for BufferUtil and called clearToFill ( buffer ) method in ByteBufferPool . java to ensure that the buffer is properly cleared before
fix entityactionservice . processnotificationrules to work with rest api ( # 233 )
replaced " authorization " with " authentication " in LDAP configuration keys to enhance security by using the correct authentication context
added deleteExchange ( " x " ) and queueDelete ( " q " ) method calls in DurableOnTransient . java to ensure proper
[ hotfix ] [ test ] fix bulkslotproviderimpltest . testbulkslotallocationFulfilledwithnewslots
refactor connection handling in PingService and ServerInfoService to use a listener for better error handling to improve reliability and clarity of connection
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class for improved performance to enhance performance and maintainability of the code
added error handling for the execute method in SulongLibrary . java to improve robustness by preventing application crashes due to IllegalStateException
update Spring Security version from 6.2 to 6.3 and update related schema references to ensure compatibility with the latest Spring Security features and impro
updated ` newNameResolver ` and ` DiscoveryClientNameResolver ` to accept ` Args ` as a parameter and improved synchronization context handling to enhance
added a check for non - empty ` newAnnotations ` before setting the ` annotations ` list in ` JavacParser . java ` to
added a new package name " com . sun . naming . internal . " to the CheckPackageAccess class to ensure proper access control for internal
changed the strict variable from false to true in StaxEventItemReader . java to enable strict functionality by default
refactor OfflineSorter to use a boolean array for excessive read operations to improve performance and clarity when reading partition data
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
added a check for the x - Y coordinate before returning theHSB type from the color mode to ensure that the color mode is only processed
refactor ` getFolderCreationRadius ` and ` getFolderCreationRadius ` methods to accept an integer array for the target cell to improve flexibility and
added import for FileDisplayActivity and removed duplicate showLoadingDialog calls in FileDetailFragment and OCFileListFragment to streamline the loading dialog
added a null and existence check for uigestureFile before loading logs in IdeSnapshot . java to prevent potential NullPointerExceptions when uigesture
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for name comparisons to ensure consistent behavior across different locales
added listener setting to result in XmlSuite . java to enhance listener management during XML processing
added a new method ` loadWithNewGlobal ` to the ` Global ` class and updated its usage in the ` Context ` class to enhance
added ` fromJsonString ` and ` toJsonString ` methods to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest `
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer , OAuth2LoginConfigurer , and ServerHttpSecurity classes to enhance security configuration
replaced hardcoded string replacements with single quotes in AndroidFileHandle , GwtFileHandle , and FileHandle classes to improve code readability
[ zeppelin - 4892 ] fix null pointer exception in inoperator . insert ( )
added import for FieldCache and invoked purgeFieldCache method in TestDistributedSearch . java to prevent FC insanity due to multiple segment
add unit test for message boundary event on a sub - instance sub - instance
add method resolvestaticcall ( target ) to resolve method for static method .
http : / / issues . apache . org / activemq / browse / amq - 4892 - use a small hash bucket
added constants for NETSCAPE _ SLOT _ ID , PRIVATE _ KEY _ SLOT _ ID , and FIPS _ S
added a alignment parameter to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to enable custom
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added sound sound imports and a condition to check for class types in JDK13Services . java to enhance functionality by preventing processing of unsupported data
added a check to prevent duplicate entries in the keywordToReference map to ensure that only relevant keywords are added to the map
camel - 16462 : camel - multicast - allow to set the size of the exchange pair if it ' s a collection
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline code by eliminating unused methods
fix miss quote in favorstatdlinebuilder ( # 644 )
[ java ] add udp port to memberimpl and memberserialization .
rename operatormulticast to operationmulticast to avoid confusion
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for message transmission to complete
added a try - finally block around the latch ' s countDown ( ) method in VertxTestBase . java to ensure latch is properly
added synchronization to the destroy method in SessionFactoryServiceRegistryImpl to ensure cachedEventListenerRegistry is cleared when the session is destroyed
simonstewart : fix unit test to work with local storage
[ ivalueutilstest ] add ivalueutilstest . testmapofTensor ( ) and ivalueutilstest . test
added a listener to clear the force invisible flag in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to ensure
add a test to verify the optimization of the checkdatepattern method
camel - 14284 : camel - cxf should use source code generate configurer to avoid reflection configuration
refactor animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added logging for playTime and updated playTime handling in LauncherAnimationRunner . java to improve debugging capabilities and ensure playTime accurately reflect
added a conditional check for BailoutOnException in C1XCompilation . java and defined it in C1XOptions . java to
initialize signup and passwd to null instead of hardcoded values to improve flexibility by allowing null values instead of hardcoded values
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations
change the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduce a new method ` getOnlyFormat ` to
geotiffreader : add miss gc _ nodata property to render image
llvm : do n ' t throw nullpointerexception if source section be null
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao .
replaced blockUntilConnected ( ) with a CountDownLatch for connection state management to improve responsiveness and ensure proper handling of connection state
updated ArrayTypeHandler to handle null values in setNonNullParameter , getNullableResult , and getNullableResult methods to ensure safe handling of null values
replaced RegexpTunnel with REProgram for prefix retrieval in JakartaRegexpCapabilities . java to utilize reflection for prefix retrieval to improve
changed the parameter type of the pick method from null to Application . class to ensure the application is retrieved correctly from the overlay configuration
[ drools - 4892 ] fix npe in phreakfromnode when use a global context
added validation checks for asset name , URL , and asset description in AssetIssueActuator . java and introduced valid methods in TransactionUtil . java
do n ' t copy paste if the parent algorithm do n ' t exist
updated label text for actionShowToastWithIconLabel and modified method calls in LGWebOSActions and LGWebOSHandler classes
replaced setSeedNodes , setActiveNodes , and setTrustNodes calls with addAll methods in TronNetService . java to streamline node
updated assertions in BaseTokenStreamTestCase to include detailed context and added failure handling in a finally block to improve test clarity and ensure thread
log4j2 - 1343 - improve performance of timebasedtriggeringpolicy and patternprocessor . getnexttime
added methods to perform item click and find index of containing text in ShadowAdapterView and ShadowListView to improve code organization and maintainability by
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
check for null loop scope in graphdecoder . aftermethodscope ( ) to avoid npe
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and add unit tests for security context handling to improve code clarity
added a test for changing the service name in the Zipkin span reporter to ensure that the service name changes correctly in the zipkin service name
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory for improved visibility into class exclusion logic to enhance debugging
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and updated related references to improve clarity and consistency in
increased the timeout duration for tryLock from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow more time for
added ` DEFAULT _ CACHE _ CAPACITY ` and ` DEFAULT _ CACHE _ CAPACITY ` parameters to the ` ConfluentSchemaRegistryDeserializer
replaced the ` remind ` checkbox with a ` checkAtStartup ` checkbox in ` UpdateInfoDialog . java ` to enhance user interface
added methods to the NodeGenerator class and modified the NodeFactory initialization to include additional parameters to enhance the flexibility and functionality of the NodeFactory
hhh - 14936 - fix checkstyle violation in cascadingactions
added methods to retrieve and set prototype properties in ScriptObject . java to enhance object extensibility checks for prototype properties
updated the default read mode from " heap " to " mmap " in CommonConstants . java and modified the initialization of ImmutableSegmentImpl in Immutable
added import for ByteArrayTemplate and implemented byte type handling in ArrayTemplateBuilder to enhance functionality for byte data processing
added Hipchat property and its getter / setter methods in SamlServiceProviderProperties . java and created CasSamlSPHipchatConfiguration .
replaced ` List < URL > commandRegistryUrls ` with ` Set < URL > commandRegistryUrls ` and updated resource retrieval from " tools
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve debugging clarity by providing more context
camel - 16462 : camel - sftp - add a login flag to the sftp repository connector so that it can be use in the
http : / / issues . apache . org / activemq / browse / amq - 4892 - use lazy createtransactionmanager
vmwareresource : fix checkstyle issue in vmwareresource . java
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
removed deprecated constructors from UAX29URLEmailTokenizer and updated TestUAX29URLEmailTokenizer to use Version . LUCEN
removed unnecessary ` Map < Object , Object > ` implementation from ` ScriptObject ` and updated related assertions in ` ContextTest ` to simplify the
[ hotfix ] [ doc ] fix typo in eventbusmetrics javadoc
refactor i18nutil to use the eperson ' s language instead of the user ' s language
updated JaversTransactionalDecorator to implement InitializingBean and modified ensureSchema method to override afterPropertiesSet method to improve schema initialization and ensure
removed null check for pgTypeName before adding it to the map to simplify code by eliminating unnecessary null check
added multiple instances of ` setServer ( handler0 , handler1 , handler2 ) ` to ` ScopedHandlerTest . java ` to
improve calltimeoutexception message when wait - notify phase be not available ( # 11818 )
reformatted the conditional statement in RestLoginProcessingFilter . java for consistency to improve code readability and maintainability
updated permission check from ` Objects . equals ( " " " ) ` to ` equals ( " * " ) ` to ensure proper handling of
renamed ` encoding ` to ` sourceCharset ` and updated related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity
changed the data type of postLogin from byte [ ] to String in HostBean . java and updated related methods in TerminalBridge . java to
refactor Simulation and FlightConfiguration handling in GeneralOptimizationDialog . java to improve code clarity and ensure immutability of simulation
camel - 15836 : camel - jbang - add option to enable / disable context reload by default .
updated logger properties in CommonTestUtils . java for consistency and clarity to enhance readability and maintainability of logging configuration
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a check to ensure nonCloseable is only invoked if it is supported in RequestBody . java to ensure proper handling of non - closed
added a check for embedded settings in ` EmbeddedNeo4jServer . java ` and modified filtering logic in ` DefaultBeanContext . java
update movementdebugcommands to save the player ' s speed value
refactor RandomLoadBalancer to include halfLengthTotalWeight parameter to enhance the random method ' s functionality to accommodate a wider range of
updated JSON resource names and assertions in GsonParser , MetricsResourceTest , and MetricsResourceTest classes to improve clarity and consistency to enhance code
added comments to the parameters for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to improve cl
replaced ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in multiple files to clarify the purpose
pipe : add lock and unlock method to pipetaskcoordinatorlock class ( # 11818 )
added a conditional check for the " robolectric . usePreinstrumentedJars " system property and modified the version construction logic to
updated conditional check from ' ! ' to ' ! ' in ExecDriver . java to ensure proper execution flow when silent mode is enabled
added validation for dynamic field defaults and requirements in IndexSchema . java and corresponding test cases in BadIndexSchemaTest . java to ensure compliance with
replaced a conditional check for randomlyReadRepair with a direct call to repairResponseHandlers in StorageProxy . java to streamline the repair
replaced ImmutableSortedSet with Iterables in PrebuiltCxxLibrary . java and added a new test for includeDirs in PrebuiltCxx
refactor ` AdaptableX509CertSelector ` to introduce ` isSKIDSensitive ` and ` isSSKIDSensitive ` flags to
log4j2 - 1349 use abstractappender . parseint ( ) instead of string . parseint ( )
added @ Deprecated annotation to GuiScreenEvent . java to indicate that the class is outdated and should not be used in 1.16
added methods to add and remove categories in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality in the RecyclerView
# 1343 - enh : add support for ` ` type ' ' and ` ` getloaded ( ) ' ' parameter to cache
replaced direct assignment of massOverriddenBy and CGOverriddenBy with a loop that initializes child components to ensure all child components are
improve error handling in javasynctask and javacompilerservice . java
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` for task creation to improve code readability and
refactor WanReplicationServiceImpl to improve executor management and synchronization to enhance thread safety and prevent potential race conditions during shutdown
added null checks for ` getSd ( ) ` and ` getTTable ( ) ` in ` Partition ` and ` DDLSemanticAnalyzer
refactor code to use lambda expressions for improved readability and conciseness to enhance code readability and reduce boilerplate
added a new test file ` FilesTest . java ` and implemented file deletion functionality in ` Files . java ` to ensure that the ` Files
removed unnecessary try - catch blocks around socket closure in ServerSocketAdaptor and SocketAdaptor to simplify code and improve readability by eliminating unnecessary
updated the class name check from " java . lang . System " to " Logger . class " in SSLLogger . java to ensure compatibility with
replace ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f ) ` for adding files to the working directory list
added a null check for the variable ' cn ' in ItemInfo . java and set insets in Workspace . java to ensure proper handling of null
changed the access modifier of the ` GeneratedEntityDecorator ` class from public to private to restrict access to the method for better encapsulation
updated Java - Durl and json - Dtype settings in SimplePostTool . java to ensure compatibility with different Java configurations for CSV and JSON
ggb - 2892 : add test to verify that max and min command have symbolic toggle
refactor the client container initialization logic in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer classes to ensure proper cleanup of
updated condition to check for null type and application presence in Linux . java to ensure proper handling of null types and prevent potential null pointer exceptions
close web application context after test
added search functionality to the RemoteBrowseHandler class to enhance user experience by allowing dynamic search based on query parameters
hide neutral button in SetupEncryptionDialogFragment to ensure the neutral button is visible when necessary
hhh - 10650 - add support for includearchived and includewithdrawn parameter to itemdaoimpl . countitems
updated SQL syntax to use single quotes for table and table creation statements to improve readability and maintain consistency in string concatenation
added error handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error reporting for OAuth2 - related issues
refactor multiple Java classes for consistency and clarity to improve code readability and maintainability
updated assertions in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized types instead of string literals to improve code clarity and
updated dismiss delay settings in ExtractionModelFrame and DataBrowser classes , and modified tooltip text in SQLConsole to improve user experience by providing more
added support for JUnit 5 in the single test method to enhance compatibility with Surefire 2.22 . 0 and improve error messaging
replaced ` HumanReadableException ` with ` RuntimeException ` in ` WorkerShellStep . java ` to improve error handling for external process communication
[ hotfix ] [ stream ] add @ experimental annotation to streamutils
[ hotfix ] [ stream ] fix typo in streamcepstrumsource javadoc
added a check to prevent index out - of - bounds errors in the List class to ensure that the index does not exceed the bounds of the
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure compatibility with the new parser ' s expression type
added confirmation and requiredType = RequiredType . NONE to the DebugPaste class to enhance security by allowing users to bypass confirmation during development
replaced ` . get ( ) ` with ` . orElseThrow ( ) ` in multiple configuration classes to handle cases where no endpoint is found
do n ' t focus mathemb when create a new radio button
replaced ` Arg ` with ` AbstractGoBinaryDescriptionArg ` and updated related imports in ` GoBinaryDescription . java ` to improve code
added null check for application . env in Jooby . java to ensure proper retrieval of the logback configuration if it exists
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduce ` SecondDummyRetryListener
fix bug in elasticmeterregistry . writecounter ( ) ( # 498 )
updated Contribution class to use final fields for email and author to improve immutability and ensure immutability of fields
replaced a loop with a do - while loop in JUnitFormatter . java to improve readability and maintainability of the code
refactor element assignment logic in Subject . java to ensure type safety and avoid potential ClassCastExceptions
enhanced error messages in StaxEventItemReader to include the URL of the input resource to improve debugging by providing more context in exception messages
fix testmultiregencetarget . testmultiregencetarget so that it do n ' t interfere with the
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction . java to avoid potential NullPointerException when the current client cannot be found
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
added BigInteger parameters for cryptographic operations in KeyStoreManager . java to enhance security measures for large key sets in the application
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set engine version to activiti - 5 for activiti - deployer
standardize property names in SpecificCompiler . java for consistency and clarity to improve code readability and maintainability
replaced ` isCurrentThread ` with ` verifyIsCurrentThread ` in ` CEntryPointSnippets . java ` and added new methods in
added null checks for the map in GenericUDFMapValues and created a corresponding test class TestGenericUDFMapValues to ensure robustness
corrected the spelling of " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency in naming conventions
add configuration for oil well generation rate and spouts to BCEnergyConfig . java and modify GenType enum in GenType . java
added a check for the existence of the " . clean - me " directory in ImportContext . java and updated conditions in JobQueue . java
improve error message when read xml from memoryrealm . xml
removed duplicate import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code by eliminating redundancy
added import statements for zip constants in ZipConstants64 . java and modified constants in ZipEntry . java to enhance code clarity and maintainability by
refactor ` newFileSystem ` methods to improve file validation and error handling to enhance robustness and provide clearer error management for file operations
replaced ` createHorizontalStrut ` with ` createHorizontalGlue ( ) ` in ` IfControllerPanel . java ` to improve layout
updated the connection initialization in FailoverUpdateURIsTest . java to ensure proper initialization of the connection object
added Gson annotations for base URL , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable JSON serialization for
add a test to verify that delete the database entry only if the file deletion be successful
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix incorrect offset calculation in abstractajpprocessor . getresponsemessage ( )
[ xmpp ] do n ' t stop the admin console server if it be stop .
replaced the unregisterHandlers ( ) method with a direct reference to MessageConsumer < ? > for binary and text handlers to improve thread safety and
added configuration properties for device ID transformation , table , and ID table log file in IoTDBDescriptor . java to enhance configuration flexibility by allowing
updated the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and added a new DelayingSearchComponent class to improve test performance
updated the condition in the ` mockTsp ` variable to check for ` ! = null ` instead of ` ! = null ` to ensure
refactor script handling in Transaction and TransactionTest classes to use witnessScript instead of scriptCode to improve code clarity and maintainability by redu
updated the expression to include " / schema / types / fieldType " alongside " / schema / types / fieldtype " to enhance the
added support for NullCompleter in the Completers class and created a new OptionCompleterTest class to enhance the functionality of the Com
reformatted code for improved readability to enhance maintainability and clarity of the code
[ iotdb - 5723 ] pipe progress index : fix numberformatexception when use iotconsensus in dataregion ( # 9965
added a new method ` UploadFile ` to handle zip files and refactored file upload logic in ` FtpHelper . java ` to
removed unused imports and added alpha values for the reply button in TweetFragment . java to streamline code and ensure the reply button reflects
added mocking for ` AccessLogContext ` and modified expected and expected timestamp formatting in ` AccessLogSupportTest . java ` to improve test
marycache : use tmp / testfiles - deleteme for test
removed null check for subscribers in property change logic to simplify code and improve readability by eliminating unnecessary null checks
replaced static initialization logic with a null check for the marshaller in AbstractSamlObjectBuilder . java and AbstractSaml10ResponseView . java to
replaced printStackTrace ( ) with LogUtil . warn ( t ) for logging warnings to improve error handling by logging warnings instead of printing stack traces
added a check for the existence of the asset directory in the development mode to ensure that the asset is only processed when the file does not exist
[ hotfix ] [ state ] add write option to rocksdbkeyedstatebackend
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to correct the format
fix : douglas . minprecision = 1 douglas . minprecision = 1 douglas . minprecision
updated wait time from 30 seconds to 60 seconds in BesuNodeRunner . java and set native native constants in BesuCommand .
rename ` DuclsSandboxTest ` to ` SandboxTest ` in ` DuclsSandboxTest . java ` to improve clarity
camel - 16462 : camel - cxf should set exception to exchange . setexception ( ) instead of log a warning
changed the access modifier of the forwardPropagateTree method from package - private to public to allow access to the method from other classes
updated the query parameter in JDBCExample . java from ' 0 , 0 , 100ms ' to ' 20ms ' to accommodate larger
updated the condition to check for the presence of " $ { project . basedir } " and added a warning for unsupported project expressions during profile activation
refactor Style class for improved readability to enhance maintainability and facilitate future modifications
added functionality to handle back key events in ShareActivity to improve user experience by allowing zoom functionality in the ShareActivity
added a condition to skip processing for deprecated fields in Json . java to improve performance by avoiding unnecessary processing of deprecated fields
added animations for displaying and hiding the send layout in LauncherFragment to enhance user experience by providing smoother transitions when the layout is
updated method declaration for readTokenStorageFile in Utils . java to improve code readability and maintainability
added a ` Progressable ` parameter to multiple methods across multiple classes to enhance functionality by allowing progress tracking during file operations
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
added functionality to remove contribution from the panel by contribution and update panel ordering and colors to enhance the user interface by ensuring contributions are updated correctly
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` in ` HyerMetalTemplateAdapter . java ` to improve cl
added a check for empty dPath and set it to the user ' s directory if it is empty to ensure that the user ' s directory
updated the calculation of the sampleRate in DefaultAudioSink . java to ensure the maximum supported channel count is based on the presence of the sample rate
log4j2 - 1349 add mapfilter . filter ( mapmessage ) method to check if a map match match
updated VerificationInOrderWithCallsTest . java file to improve test coverage for verification scenarios
updated the method call from ` axis . z ` to ` axis . x ` in ` setFromAxis ` to correctly reference the axis ' s
updated the constant name from " colelction . delim " to " collection . delim " to correct the spelling of " collection . delim
add a test to verify the behavior of the connection state listener in the background .
fix typo in documentation for # 5355 ( # 5355 )
replaced direct access to ` SystemProperties ` with a local variable ` mIsOneHandedModeSupported ` to improve code readability and
added onDetachedFromWindow method to cancel all running tasks in AppsCustomizePagedView to ensure proper resource management and prevent memory
added support for the ' dictionary - resource ' attribute in MorfologikAnalyzer and related classes to enhance the Morfologik
replaced the count variable with thrown variable for clarity to improve code readability and maintainability by using a more descriptive variable name
updated the initialization message from " debug " to " " " in GradleBuildService . java to improve clarity by using a more
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for lock timeout and MCC anomaly detection in ` AbstractPhen
refactor tooltip text setting logic into a separate method ` applyToolTipText ` to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server
updated DeviantartRipper to use configuration for username and password and set agegate _ state to 1 if no deviantart
refactor Google signing key constants in PackageUtils . java to improve clarity and maintainability to enhance code readability and maintainability by using
refactor solutionBusiness initialization in ImportDirSolveAllTurtleTest . java to use createSolutionBusiness ( ) method to improve code
added a method to notify window state changes in WWindowPeer . java to improve event tracking for window state changes
added email description to the template in EntityGroupKeyContentFormatter . java and set it in TestEntityGroupKeyEmailContentFormatter . java to
replaced ` remove ( sel ) ` with ` data . remove ( sel ) ` in ` UserData . java ` to ensure consistency in data
refactor language retrieval logic in Locale . java and add validation for language length in LocaleTest . java to improve code clarity and ensure correct
refactor Liquibase code to use a dedicated method for creating UpdateVisitor to improve code readability and maintainability by centralizing the
added a check to return early if screen pinning is active to optimize performance by avoiding unnecessary processing when the screen pinning is active
added ` mNoDataText ` and ` mNoDataTextDescription ` fields and updated the drawing logic in ` Chart . java ` to
added synchronization to check if the head is already written in Http1xServerResponse . java and Http2ServerResponseImpl . java to ensure
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 : http :
updated header values in Http2TestBase , TestHttp2Limits , TestHttp2Section _ 8 _ 1 , and TestHttp2Section
fixed - rlocalcachedmap . getall ( ) method throw npe if storemode = localcache . storemode . localcache =
camel - 16462 : camel - jpa should use the component ' s entity manager and transaction manager when start the endpoint .
replaced ` fallSpeed ` with ` jumpSpeed ` in ` PhysicsCharacter . java ` and ` PhysicsCharacter . java
added a condition to check if reparsedFunction is null before processing syntax extensions to ensure proper handling of cases where reparsedFunction is null
updated variable names from ` log ` to ` logger ` and improved error handling in ` BitstampPusherService . java ` to enhance
added deprecated methods for retrieving old segment URIs in FileUploadDownloadClient . java to signal that these methods are outdated and should no longer be used
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to
added a new method ` assertPredicateFails ` to ` LanguageTestSupport ` and implemented multiple assertions in ` JuelLanguageTest ` to enhance
added a bound to the alpha variable in RecentsView . java to ensure the alpha value is within the valid range of 0 to prevent
updated the regex pattern for importing the package in ManifestReversion . java to ensure correct formatting of the import package name
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to ensure the JavaSnippetRepository is properly initialized before use
added a loop to loop over all time buckets in StarTreeRecordStoreCircularBufferImpl . java to ensure that all time buckets are updated
[ chromedriver ] use ` ` chromedriver . storage . googleapis . com / index . html ' ' instead of ` `
camel - 16462 : fix issue with prepared statement in camel - pg
use rome ' s feed parser instead of sun ' s rome ' s feed
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 565 . add
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor of EnhancedRuntimeException from EnhancedRuntimeException to simplify the constructor by eliminating unnecessary parameters
[ java ] fix socketappendertest failure on slow ci server
( chore ) camel - core : remove unused code in endpointbuilders
added exception handling for ` Exception ` in ` ByteArray . java ` and modified method signatures in ` compare ` and ` compareFallback ` methods to
added a method to disable the input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unint
removed the @ Ignore annotation from RestletDomainServiceTest . java to address the issue identified in camel - 6770
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify method
added module - info . java and updated module - info . java to reflect the new module structure in the module - info . java file
added a new method ` getSourceDirs ( ) ` in ` JavaLanguageServer ` and modified the ` getCompiler ( ) ` method in `
updated menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve user
updated method names from ` nodeIsAncestorOfItself ` and ` nodeIsDescendantOfItself ` to ` nodeIsNotAncestorOfIt
fix worldeditplayer . getblocky ( ) return negative value .
refactor selfCheckDataTypes method to include PathNotExistException and update measurement validation logic to improve error handling for non - existent measurements
updated the closing brace in JavaCompiler . java to ensure proper formatting to improve code readability and maintainability
[ hotfix ] [ runtime ] move mailboxexecutor setter to abstractstreamoperatorfactory
hbase - 25819 add check for unauthorized table state in meta and fix meta
updated method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure the test class is
rename ` remoteItems ` to ` lastTimeData ` in the ` updateHandler ` method call to improve clarity by using a more descriptive
adjusted the calculation for allAppsCellWidthPx in DeviceProfile . java to improve layout consistency by adjusting cell width based on padding
[ hotfix ] [ core ] add internal annotation to coreoptions . java
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process by reducing unnecessary merges
modified the ` Session ` interface and related classes to return ` void ` instead of ` Connection ` to enhance functionality by allowing the ` close `
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
replaced ` exception . printStackTrace ( ) ` with ` exception = = null ` checks in ` SchemaValidatorTask . java ` to simplify error
changed exception handling from throwing UncheckedIOException to ignoring IOException to simplify error handling by eliminating unnecessary exception throwing
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and improve compatibility
ruby flavor : use stringbuilder instead of string for emit last term .
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove the usecaches flag from nio2endpoint and remove it from nio2endpoint
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties and update related methods to improve flexibility and maintainability of database
rename instructorfeedbackresultspageuitest . html to instructorfeedbackresultspageuitest . html
added a scan parameter to the useEncodedQualifierListOptimization method in BaseResultIterators and EncodedColumnsUtil classes to ensure that the use
removed the ' public ' access modifier from several methods in ApprovalStore , ApprovalControllerService , and ApprovalControllerService
added a delay and a notification for the download status in FileDownloader . java to ensure the notification is canceled when the download is in progress
updated method calls from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and ` AbstractFloatingView `
updated version number from 1.0 . 11 to 1.0 . 13 in JFreeChartResources . java to reflect the latest release and
replaced instances of ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future updates
added null check for centerGeo before adding it to circleCenters and added a null check for circleCenters before adding them to prevent potential
refactor espresso home path to use homefinder instead of path
doc ( doc ) : fix typo in javadoc ( # 2291 )
changed the visibility of the ` deleteSession ` class from protected to private and updated its initialization logic to enhance encapsulation and clarify session
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency in
initialized ` sz ` to 0 and modified ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and
added a new parameter to the triggerMediaScan method call in FileDownloader . java to enhance media scan triggering by associating the file with
removed conditional checks for printing test results and simplified result posting logic to simplify code and improve readability by eliminating unnecessary conditional checks
added multiple calls to setCustomGcode settings in MainWindow . java to set custom G - code settings based on user input
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 - use utf
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added imports for SolrTestCaseJ4 and added exception handling in TestBadConfig . java to improve test reliability by ignoring specific exceptions during
added a method to remove fragment and action bar in GpsMainActivity to improve fragment management by ensuring the action bar is properly removed from the
removed the ` = = ` operator from the ` spanishTokens ` list in ` TokenizerAnnotatorITest . java ` to simplify the
updated RemoteMediaHandler , RemoteRawHandler , and RemoteUtil to use Byte instead of Range . Byte for range handling to improve memory efficiency and
updated the G - code file path and adjusted the translation logic in VisualizerCanvas . java , and modified GcodeViewParse . java to
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
updated method calls in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve clarity and consistency in test assertions
added a condition to close the exchange client if the output stage is null and the result is completed to ensure proper resource management and prevent potential resource
fix ( gradle - gradle - plugin ) : improve integrity check
added import statement for SolrClient and declared shardToClient in ChaosMonkey . java to facilitate the handling of Solr
added null check for ` fas ` before accessing its properties in ` ConfigurationActivator . java ` to prevent potential NullPointerException when ` fas
reformatted code in NestedRepositoryTreePanel . java for consistency to improve code readability and maintainability
changed the constructor visibility of ` ExtensionTypeHeader ` from package - private to public and added a validation for the extension type to ensure that the
pdfbox - 4071 : remove unnecessary try / catch block , a suggest by valerybokov
change default values for deleteOnShutdown , pushOnShutdown , and pushOnShutdown in PrometheusProperties . java to improve clarity and consistency
added error handling for state machine trigger errors in ReactiveStateMachineExecutor to improve error management and provide clearer feedback on execution errors
added a test to verify that multiple Python executables on a path first is used in BuckConfigTest . java to ensure that the
added a default button for the signin button in the InitialAccountRegistrationFrame to enhance user experience by allowing users to sign in the account registration
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error log messages to include the exception as a parameter to improve error reporting for better debugging and traceability
remove package - info . java and move reflection - related class to util package
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed the ` center ` field from multiple Circle , Ellipse , Polygon , and Rectangle classes to clean up the code and improve readability
simplified the conditional check for ` pcollection ` in ` RegisterAndProcessBundleOperation . java ` to improve code readability and maintain
refactor SslContextFactory class for improved SSL context handling to enhance security and maintainability of SSL connections
updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations ( ) instead of hardcoded values to ensure tests reflect the correct default values for
change return value from " access _ confirmation " to " access _ confirmation _ error " to clarify the purpose of the return value
add consumerclassloaderfilter to handle contextclassloader in referenceconfig ( # 11386 )
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFS
rename ` setRolloverIcon ` and ` setRolloverPressedIcon ` to ` setRolloverPressedIcon ` and update related references to
refactor grid translation handling in TaskViewUtils and TaskViewSimulator to improve code clarity and maintainability by centralizing grid translation logic
refactor assertion methods in Assertions . java to improve code readability and maintainability
added a null check for ` currentDateTimeFunction ` in multiple database - related classes to prevent potential NullPointerExceptions when ` currentDateTimeFunction ` is
added a method ` anonymousPath ( String path ) ` to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve
updated the ` call ` method to include a ` contentDescription ` parameter and refactored its usage in ` TaskView ` to enhance the
added a timeout condition to the metaAvailable wait mechanism in CatalogTracker . java to ensure proper handling of meta availability when timeout is zero
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
change return value from null to a default conversion method in GenericItem . java to ensure proper conversion handling for state and type conversions
updated imports and added integration provider support in BidirectionalOneToOneNPlusOneTest . java to enhance compatibility with Hibernate ' s Integr
added functionality to remove extra empty screens and adjusted startSearchPageIndex based on workspaceScreens to ensure proper handling of search page
updated HashMap initialization and HashSet initialization in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve performance and prevent potential
updated string formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of single quotes to ensure consistency in string representation across
refactor the batch acquisition logic in SendingAccountor . java to improve handling of interruptions to ensure proper batch management and prevent
added a ` position ` field and its getter method in ` WALPrettyPrinter ` to track the total size of a cell and its heap size
updated the port number in the Transceiver initialization from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to
simonstewart : add sorting of event before generate a simple report
added a test method to verify CSV line handling with escaped quotes to ensure correct formatting of CSV lines with escaped quotes
[ coref ] make sure we do n ' t use the srparser for the chinese benchmark
do n ' t try to send to a remote server if we do n ' t have it
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary dependencies
updated configuration settings in Fetcher2 . java to use Protocol constants instead of hardcoded strings to improve code readability and maintainability by using
added a condition to exclude Dolbyvision video formats in FFMpegVideo . java and removed debug print statements in MediaInfoParser .
updated package names from " other _ package " to " other _ package2 " in AstTests . java to ensure compatibility with the new package
fix worldborder . setdiameters ( ) and setworldbordersize ( ) . setdiameters ( ) . setdiam
hbase - 25819 addendum addendum to hmaster . getwalgroupsreplicationstatus ( ) method to hmaster
added a new parameter ` caller ` to the ` checkOpen ` method and modified its logic in ` AppWFull . java ` to enhance
refactor ` markDataResourceOnline ` and ` markDataResourceOnline ` methods to use a new method ` generateInstanceConfigs ` to improve
changed the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
added a test to verify that a non - existent Maven project does not contain a reference to ensure proper handling of missing dependencies in the Maven project
removed null checks for protoGetSwitches and protoHistory in PropertyMap . java to simplify the conditional logic for better readability and maintainability
refactor ` getControllerId ` method to accept ` configId ` as a parameter and update related logic to improve code readability and maintainability
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the check for service . isGenerateRefreshToken ( ) in the condition to simplify the condition for prompts validation
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with a singleton pattern of NoopGetter in BaggagePropagation . java to improve code readability and maintainability
refactor conditionalOnEnabledResourceChain class for improved resource management to enhance performance and maintainability of resource chain management
added a condition to check if the tree ' s child count is greater than zero in BarrowmanCalculator . java to ensure that the B
updated the method call from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated logging messages and modified method signatures in FacebookImpl . java to improve clarity and functionality to enhance debugging capabilities and ensure proper handling of login
updated the ` getBestDateTimePattern ` method to return the skeleton value instead of a hardcoded " h : mm a " to ensure that the
removed the dependency on KeyguardManager for device locking in TouchInteractionService to simplify the condition for device lock status bar visibility
fix nullpointerexception when set default disk offering in volume api
replaced ` FileChannel ` with ` AsynchronousFileChannel ` in ` UtowBodyHandler . java ` to improve performance by utilizing asynchronous
refactor SigInt and SigIntTest classes for improved readability and consistency to enhance code clarity and maintainability by standardizing method
move bounding box resize method from updatebyboundingresize to prepareboundingbox resize
change return value from - 1 to 0 in Asset . java to correct the logic for returning the correct value
refactor ComputeBenchmark to use a customizable mapping function instead of a hardcoded size to improve code readability and maintainability by using a
added setOnRefreshListener and notifyDataSetChanged method to UploadListFragment to ensure the UI updates correctly when the data is refreshed
updated BibDatabaseContext to use Path instead of File for file handling to improve type safety and clarity in file handling
refactor ParticleEffect to use getter methods instead of direct array access to improve code readability and maintainability by reducing redundancy
refactor tomcat . getservice ( ) to use findservices ( ) . findservices ( ) . findchildren ( ) . length (
updated error messages to include a period in BuildRuleFactoryParams and Console classes to improve readability and consistency in error reporting
added a condition to return early if the playback state is not PLAYING to prevent further processing when the playback state is not playing
replaced the use of ` findByPK ` with ` findById ` for ` ServiceComponentDesiredStateEntityEntity ` to simplify the code by directly
refactor Java2TypeScriptTranslator and add InnerClassFieldClash class tests in StructuralTests and Java2TypeScriptTranslator to improve
added configuration options for logging and follow redirection filters in DockerClientFactory and DockerClientProfile classes to enhance flexibility in managing Docker settings based on
replaced direct call to displayChanged ( ) with awtLock ( ) in XToolkit . java to ensure thread safety during display changes
hhh - 10183 - use sqlserver2008dialect instead of db2 dialect in nationalizedScalarquerytest
added a try - finally block around the verifyZipHeader method call in ZipHelper . java to ensure the input stream is closed properly to prevent
changed the access modifier of the storeClassFile method from private to public to allow access to the storeClassFile method from other classes
updated the NO _ MORE _ ORDS assertion in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to
updated error messages in CGIHandler and added a JavaVM callback handler in JavaVM to improve error handling clarity and enhance the start method
added support for additional newline characters in the LineReaderImpl class to enhance functionality to accommodate additional input formats
replaced List with Set for multiple hashCodes and hashCodesToFetch in multiple classes to improve performance and ensure immutability of hash codes
added a check for empty vertex count in OGLESShaderRenderer . java to prevent rendering errors when no vertices are present
added verification error handling and improved test cases in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest
replaced ` FileUtil . createData ( root , menuPath ) ` with ` FileUtil . createFolder ( root , menuPath )
truffle - api : remove unused import
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if ` _ maxIdleTime ` is greater than zero in ` SelectChannelEndPoint . java ` and modified the logic
fix flmlandblock . cansustainplant ( ) not be call in the state . getplant ( ) method
added functionality to create a new TABLE SALTEDTABLE123 in QueryDatabaseMetaDataIT . java and modified database queries in ConnectionQueryServicesImpl
added Locale . US to date formatting in HttpCookie . java and created a new class B6791927 . java for cookie expiration validation
replaced multiple multiple calls to ` db . close ( ) ` with multiple calls to ` db . close ( ) ` in ` DbHelper
increased the timeout duration from 1 seconds to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow more time for processing messages
[ gr - 3994 ] add trace mode to allocation phase when trace be enable .
add save key binding to the code area ( # 10719 )
added a static block to initialize ObjectMapper with a system ' s line separator to ensure consistent line separator across different operating systems
updated path formatting in NativeEnvironmentRepository . java to ensure compatibility with Windows path formats in the application
replaced instances of ` appTest ` with ` appT ` in multiple test files to streamline the application setup process and improve code organization
[ java ] remove redundant validation of recordlog . validateexistinglog ( ) .
change the type of ` group ` from ` GroupName ` to ` ErrorGroupName ` in the ` ITSystemTest . java ` file to
added a sleep mechanism for memory usage in TestFuzzOptimizations . java to ensure accurate memory usage reporting during testing
added a private boolean variable ` reverseImage ` and updated its initialization to use it to streamline the code by eliminating unnecessary shared preferences
replaced ` equals ( ) ` with ` equals ( ) ` for string comparisons in multiple Java files to improve code readability and maintain consistency
added support for exclusion of IDs and field names in the TerserUtil class and updated the replaceFields method in MdmMatchLinkSvc
updated JUnit imports and method visibility from public to package - private in AuthenticationSuccessListenerTests . java to align with the latest JUnit 5
refactor settypes to use indexof ( ) instead of arraylist ( )
refactor TypeUtil class for improved readability to enhance maintainability and clarity of the code
updated the ` triggerTime ` variable to include the time zone ID in the ` triggerTime ` to ensure that the ` triggerTime ` is
added a new method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for creating ` AbstractMethodError ` exceptions to
camel - 16462 : camel - simple - add support for ognl syntax in simple function expression .
added a check for empty Iterables in AbstractParser to return TargetGraph . EMPTY when toExplore is empty to ensure proper handling of empty
camel - 16462 : camel - jclouds should use iohelper to copy the inputstream to the inputstream
camel - 16462 : camel - osgi - fix camel -Consul - do n ' t work on osgi bundle
added a new test class ` CheckACC _ STRICTFlagOnDefaultMethodTest ` and modified ` Check . java ` to check for
[ java ] set driver timeout to 2 second for channelvalidationtest .
added a new file ` FileExtensions . java ` that defines static ImmutableSet for file extensions to provide a centralized structure for file extensions in the
replaced the instantiation of ` ThreadLocalDateFormat ` with a new instance of ` ThreadLocal ` using ` withInitial ` for cloning to
removed deprecated options for " FastTLABRefill " , " DeferThrSuspendLoopCount " , and " UseCGroup
added a display name property to multiple client properties and updated related classes to utilize it to enhance client configuration flexibility by allowing customization of
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a more specific exception type
reformatted the return statement in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
replaced calls to ` getResponse ` with ` consumeResponse ` in ` HttpBindServlet ` and modified connection handling in ` HttpConnection ` to
fix npe in forgeeventfactory when parent be null
wallettool : remove keycrypterexception from catch blockstoreexception
added @ Deprecated annotation to AsyncCompletionService . java to indicate that the class is outdated and should not be used in new code
updated the Hyphenation constructor to use the original length of the length variable to ensure correct handling of the length of the Hyphenation object
added a delay of 200ms in the IQRegisterHandler . java file to ensure proper synchronization before proceeding with operations
move resource . getimage and getimage method to the same package , so it can be use in the same package .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to clarify the
added a new boolean variable ` providersChanged ` in ` ConfigurationManager . java ` to track changes in the configuration settings
added a method ` quoteIdentifierTokens ` to retrieve quoted tokens from a ` TokenRewriteStream ` to improve the handling of quoted identifiers in the token
pdfbox - 4892 : skip non - name entry for postscript name , a suggest by valerybokov
updated type casting for ` AnalysisSPILoader < ? extends T > ` in ` SolrResourceLoader . java ` to improve type safety and cl
modified the condition to check for the parent ' s cell in the hit check to ensure the correct parent is returned to avoid potential null pointer exceptions
added null check for appManifest before retrieving targetSdkVersion to prevent potential NullPointerException when appManifest is not initialized
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog for improved configuration handling and serialization to enhance code clarity and ensure proper serialization of configuration
added userName field and its getter / setter methods to Driver and HiveSemanticAnalyzerHookContextImpl , and updated SQLOperation to include
added setter methods for transformer file , URL , and input stream in XsltBuilder . java and updated instantiation in XsltComponent . java to
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TestFirstInFirstOutComparator , and TestFirstInFirstOutComparator
removed unnecessary variable assignments in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to simplify code and improve readability by
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 352 . add
[ log4j2 - 1343 ] fix performance issue in log4j2 - 1343
replaced hardcoded VM version checks with a platform - specific warning check in CompilerConfigFileWarning . java and ConfigFileWarning . java , and created
replaced instances of ` MeterStatisticsManager . statisticsOperationMap ` with ` MeterStatisticsMeterDetailStatisticsModel ` and updated related method calls to
replaced System . err . println with a conditional call to resolve the logback configuration file to improve code readability and ensure logback is
updated method parameters and class names from ` CasCookieValueManager ` to ` DefaultCasCookieValueManager ` and ` DefaultCasCookie
replaced BASH _ ESCAPER with SHELL _ ESCAPER in multiple files to standardize command handling across different operating
refactor ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to use try - with - resources for ` GenericContainer < ?
updated the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a ShieldAddress in RpcApiService to enable the generation of a Shield address in the RpcApiService
change return type of readConsoleInput ( ) methods from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal classes to improve data handling and align with the string - based processing of console
updated the regex pattern for platform and presubmit in TestStabilityRule . java to improve accuracy of platform and presubmit configurations
added a check for the best text fragment ' s score in DefaultSolrHighlighter . java and updated the HighlighterTest . java to ensure
modified the ` tryToLogin ` method to accept a ` Uri ` and ` username ` , and ` password ` as a parameter to enhance
updated entity handling in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to replace VisionTypeOuterClass with EntityMon
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5453 and id =
removed wrapCollection from the update method call in DefaultSqlSession . java to simplify the method signature for better readability
added logging for illegal currency exceptions in BTCEAdapters . java to improve error handling and logging for unknown currencies
refactor subscription name handling in DurableConduitBridge to use candidateSubName for clarity to improve code readability and maintainability
pdfbox - 4071 : set default value to 0.3 , a suggest by valerybokov
updated startController method to accept a boolean parameter for tenant isolation and modified related methods in multiple test classes to enhance flexibility in controller initialization and
simplified the return statement in HasSettings . java by directly casting the response value to Map < String , Object > to improve type safety
added a check to ensure the size of attrs is non - empty before validating its size to avoid potential NullPointerExceptions when checking if the size is
added methods ` getProjectJdkName ` , ` getProjectJdkType ` , ` getProjectLanguageLevel ` , and ` getProjectLanguageLevel `
updated " Experimenal " message to " Experimental " in HiveSessionProperties . java to clarify the purpose of the optimization
added a new UsernamePasswordAuthenticationToken and updated test methods in GrantedAuthorityEffectiveAclsResolverTests to improve test coverage and ensure correct handling
fix a bug in javaparsertypedeclarationadapter . solvemethodintype ( string . class , object . class , string . class
added a constant for the number of buttons and updated the return statement in XToolkit . java to ensure that the method does not return a
updated import statement from ` jdk . testlibrary . Asserts . assertEquals ` to ` com . oracle . java . testlibrary .
added a new ` MessagePackFactory ` class and refactored ` MessagePack ` to use it to improve code organization and facilit
add ` ` is _ desert ' ' and ` ` is _ cave ' ' tag to forge biome tag ( # 87
renamed the method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
added conditional logic to update UIID based on the horizontal state of the component group to ensure UIID is set correctly based on the presence of
replaced DOI _ URL _ PATTERN . matcher ( identifier ) with matcher . match ( identifier ) in DOIServiceImpl . java to
replaced instances of ` touchHandler instanceof ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLocklessInput `
[ java ] remove volatile from clusteredserviceagent # tryclaim ( ) .
add example to show how to insert a user - site
added error handling for malformed URLs in HttpConverterRegistrar . java to improve robustness by rejecting malformed URL formats
cloudstack - 4892 : add capacity _ type _ storage _ ALLOCATED and capacity _ type _ storage _ ALLOCATED to
replaced the method ` openInput ` with ` fileLength ` in ` NRTCachingDirectory . java ` to improve clarity by using
changed the class ` JavascriptCompiler ` to be ` final ` and refactored related methods to improve encapsulation and enhance class generation logic
added synchronization to the store method in UISettings . java to ensure thread safety when accessing shared resources
added a native text input check and changed the access modifier of the fireDataChanged method from private to public to ensure compatibility with native text input
[ beam - 13499 ] retry on an emulator that only support one transaction ( # 167 )
replaced explicit type declarations with diamond operator in CompilerTest , ReportedBugsTest , TestUtil , TestUtil , TestUtil ,
updated the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to ensure correct
replaced ` getClaim ( " nonce " ) ` with ` getStringClaim ( " nonce " ) ` in ` OIDCAuthenticationFilter .
added a condition to check if a field is a relationship field in DCInputSet to ensure correct handling of relationship fields in the input set
added server Slogan column and updated related methods in FileDataStorageManager , FileContentProvider , and ToolbarActivity to enhance user experience
refactor conditional logic in DrawerActivity . java for better readability to improve code clarity and maintainability
replaced fail ( ) with println ( ) and Assume . assumeNoException ( ex ) in SolrRequestParserTest . java to improve test
added a check to skip processing for empty symbol events in MissingSymbolsHandler . java to improve efficiency by avoiding unnecessary processing when no symbols are
added new data entries " Const . EOL " and " Const . EOL " to the StringHelperTest . java file to enhance test coverage for new
added warning logging for empty data providers in Parameters . java to inform users that the data provider returns an empty array or iterator to improve debugging by
camel - 15836 : use collections . emptylist instead of collections . empty _ list in camel - maven - plugin
fix for npe in mapstylemodel on freeplane 1.9 . 8
corrected the parameter name from mass to restitution in PhysicsRigidBody . java to ensure consistency with naming conventions for
added a new file AutoFtpActivity . java and modified FtpHelper . java to implement FTP testing functionality to enhance FTP testing capabilities and
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added getter and setter methods for component state in multiple classes and implemented component state management in GenericSpinner and UIBuilder to enhance functionality for managing component
added a new class RemoteExecutionEnabled to handle remote execution conditions to enable or disable remote execution in the build system
pdfbox - 4071 : fix typo , a suggest by valerybokov
updated file reading methods to use UTF - 8 encoding for improved compatibility to ensure proper handling of character encoding during file operations
added assertWorkingScoreFromScratch ( workingScore , expectedWorkingScore ) to AbstractScoreDirector . java to ensure that shadow variables are
updated the Hive configuration property from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to
add log to debug message content not an io . netty . buffer . ByteBuf
modified the ` removeFile ` method to ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related logic in ` File
added assertions to verify the presence and presence of a transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly present
[ iotdb - 4892 ] deprecate ischemaregion # constructschemablacklist in favor of delete timeseries
added a null check for sampleMimeType in MediaCodecRenderer . java to ensure that a valid sampleMimeType is provided before proceeding with rendering
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc
added @ JsonCreator annotations to the @ AllArgsConstructor annotation in J . java to ensure proper serialization of the @ AllArgsConstructor with properties
added a check for VIEW type in MetaDataClient . java to prevent creating an index on a view to ensure that creating an index on a view
added a new class Website to manage Java Net types in the populator to facilitate the population of Java Net types in the
added a setup method to set the default locale in BSFormatterTest to ensure consistent locale handling in tests
improve error message for badly downloaded jar file
replaced ` containsString ( expected . value ) ` with ` Matchers . equalToIgnoringCase ( expected . value ) ` in `
added conditional checks for single parameters in SimpleExprGenerator . java to ensure parameters are correctly processed and processed
added a volatile boolean variable ` createdVertx ` and modified conditional logic in ` VertxComponent . java ` to ensure that the vertx
updated writeAttributes method to accept a NodeModel parameter instead of null to improve type safety by ensuring the correct node model is used
updated log message format from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplay
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` FeedREST
updated resource path resolution in TestAnnotationConfiguration , TestAnnotationConfiguration , and WebAppContextTest to use MavenPaths for directory resolution to improve consistency and
refactor data validation logic in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber to improve code clarity and maintainability by utilizing utility methods
updated the condition for playing sound state in GwtMusic . java to ensure that playback state is only played when the sound is not
added PERMISSION _ SUDO _ AREA to the permission check in MainCommand . java and introduced a new permission _ SUDO _ AREA
replaced ImmutableMap with HashMap for query options in ServerRequestPlanVisitor . java and modified query options handling in QueryRunnerTestBase . java to
updated path comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to
refactor string assertions in ResourcesTest to use local variables for clarity to improve readability and maintainability of the test code
replaced the native method ` NMTWaitForDataMerge ` with a native method ` NMTOverflowHashBucket ` and added a
[ flink - 30650 ] [ serializer ] migrate to implement new typeutils api for either serializers
updated ` AddressResolverOptions ` to use ` DEFAULT _ NDOTS _ RESOLV _ OPTION ` and ` DEFAULT _ NDOTS
add a call to super . __ associate ( context ) in RequestRockerTemplate and implement a corresponding test in RequestRockerTemplateTest to
pdfbox - 4071 : avoid npe , a suggest by valerybokov
updated XML file paths from " liquibase / parser / xml / dbchangelog " to " www . liquibase .
move commonMIMEtypelocator from source to test
replaced instances of ` INIT ` with ` NOT _ REQUIRED ` in the ` ServiceComponentDesiredStateEntity ` and ` ServiceImpl ` classes
updated the CompareControl instantiation to include schema comparisons to enhance the comparison logic to accommodate new schema comparisons
replaced JUnit imports with TestNG annotations in TestBackwardAnoamlyFunctionUtils . java to ensure compatibility with the latest testing framework
added a new file ` ProgressiveJPEGTest . java ` that implements a GUI test for the ` ProgressiveJPEG ` class to implement and
updated MaterialLoader to use setAlphaDiscardThreshold and setAlphaFallOff instead of setAlphaTest and setAlphaFallOff , and
add support for x86 architecture in error message
added a null and empty check before setting the size of the text to avoid potential NullPointerExceptions when the text is empty
modify readVarInt ( ) to account for a % 1 _ 000 _ 000 to ensure that the readVarInt ( ) does not exceed
added private constructors to PushUtils and ThumbnailsCacheManager classes to enforce singleton pattern to prevent instantiation of utility classes
refactor length calculation to use curConfig ' s getLength ( ) method to simplify code and improve performance by eliminating unnecessary bounds checks
removed unnecessary type casting for MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code by removing unnecessary casting
updated the regex pattern for loading data files from " . * csv " to " ( ? i ) . * csv " to enhance flexibility
added a conditional check for ` duration ` before announceing for accessibility in ` TaskbarStashController ` and modified array usage in `
replaced direct calls to ` Args . getInstance ( ) . getMyKey ( ) . getMyKey ( ) ` with ` RefreshTask
add targetjdk1 _ 5 support for pmd . targetjdk15
replace PowerMockito with MockitoJUnitRunner and replace PowerMockito with Mockito in QuotaResponseBuilderImplTest . java to
added output stream and error stream configurations to TestSchemaToolCatalogOps . java to improve error handling and output stream management
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated related methods to include it to
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance query metadata handling in MongoDB queries
improve handling of entityresolver2 and entityresolver2 in unit test
updated import statements in MetaDataEndpointImpl . java for consistency and clarity to improve code readability and maintainability by standardizing import statements
increased the ALLOWED _ REPEATED _ DEADLOCKS constant from 5 to 10 and added a retry interval for deadlock
renamed variable ` xl ` to ` xAxis ` in ` BarChartActivity ` and updated the line offset calculation in ` LineChartActivity1
added methods to check if a character is printable and check for Windows systems in FsUtils . java to ensure that only valid Unicode characters are printed
rename ` selenide . in ` to ` selenide . using `
do n ' t add exception to the result if there be an exception that already exist .
[ java ] fix integer conversion issue in connection manager and traffic counter
[ hotfix ] [ test ] fix itsystemtest to work with google - cloud - vision
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Auth
added admin button to the request in CommunityListServlet to enhance security by restricting access to admin users
added ` AtomicInteger ` instances for long , short , and short compaction threads in ` CompactSplit . java ` to track the number of compaction threads
replaced ` getApplication ( ) . getPackageName ( ) ` with ` getResourcePackageName ( resource . getResourcePackageName ( R . array . wallpap
updated the method to retrieve players in the plot ' s visibility and added a filter for players in the plot to improve user experience by ensuring only
refactor AndroidManifest , ResName , ShadowActivity , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class for improved readability to enhance maintainability and facilitate future development
refactor code to use a constant for the operating system implementation to improve maintainability and readability by avoiding hardcoded string literals
corrected a typo in the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a
removed unnecessary null checks for key and iv in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary null checks
added @ Stability annotation to WorkProfileTest . java to mark the test as stable for stability tracking
added a condition to skip processing for bucketing version in TezCompiler . java to ensure only valid bucketing versions are processed in the compiler
replaced the method call to setCursorPosition with input . setCursorPosition in GwtTestWrapper . java to ensure the cursor position is
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and added new classes ` LockFreeBucket _ finalFields
print thread pool stats to system . out .
updated the method to retrieve the maximum bitrate based on user preferences to ensure that the maximum bitrate reflects the current user ' s preference
refactor ZipkinHttpSpanExtractor to improve code readability and maintainability by reducing duplication
move getuserpaymentaccounts ( ) to abstract method so that it can be refactored
remove reflection in dartcompletioncontributor . withtypeiconrightaligned ( ) ( # 4892 )
added a call to fs . setProject ( p ) in LauncherUtils . java to set the project for file operations
updated JsBundle , JsBundleBuilder , JsLibraryBuilder , JsLibraryBuilder , and JsTestScenario to include ProjectFilesystem as a parameter to
refactor multiple Java classes related to EnvelopeStyle , Databinding , Databinding , and MessageContext to improve code organization and
refactor MetricsDSLContext class to improve code readability to enhance maintainability and facilitate future updates
removed the VersionConfig interface and replaced it with an ImmutableSet in VersionBuckConfig . java to streamline the code by eliminating unnecessary
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException to
changed the visibility of the ` validateTypes ` method from static to public and updated the exception message from AST to LST to allow access to
fix : update gapic - generator - java with mock service generation fix ( # 119 )
added SLF4J logging functionality to SimulationStatus . java to facilitate logging of simulation status operations
updated the version number from 138 to 150 in Splash . java to improve the visual appearance and aesthetics of the Splash
added a runLater ( ) method to the notification addition in UserInterfaceComponentImpl . java to ensure notifications are added on the Event Dispatch Thread to
added a mock element to the ReturnsElementsOf class to enhance the functionality of the ReturnsElementsOf class
corrected a typo in the error message for clarity to improve code readability and maintainability
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the functionality of ` LineFile
added a method to retrieve the version code from the MainApp class and updated related classes to use it to improve code maintainability by centralizing
camel - 16462 : camel - spring - xml - dsl - fix ambiguous method invocation with thanks to sergey
updated method names from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java `
added buffer ownership checks and refactored buffer disposal logic in IndexBufferObject and VertexBufferObjectWithVAO classes to improve memory management
added a new transition for forgot password in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password change in the login form
refactor JerseyClientConfiguration class for improved clarity to enhance maintainability and readability of the code
int - 1369 remove the class from the console inbound channel adapter parser
updated variable names from ` s ` to ` o ` in ` InstanceOfPatternMatchTest ` and ` RemoveRedundantTypeCastTest `
added methods to check if columns and rows are empty in StringDict and Table classes to ensure proper handling of empty string arrays to improve data integrity
fixed - container . start ( ) and # setcustomizer ( ) do n ' t call getcontainercmd ( ) . getcontainercmd
changed logging level from info to error in MediaInfo . java and added exception handling in RendererConfigurationTest . java to improve error handling and ensure
added schemapattern option to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to allow configuration of schemapattern for database connections
[ java ] return an empty byte array when tlssession be null .
refactor calculations for bitmap creation in AndroidGraphics . java to improve readability and maintainability of bitmap creation logic
refactor Base64 implementation to improve performance and readability of the code
[ gr - 26464 ] fix fallback value in global container .
added IPHONE to the @ Ignore annotation in JavascriptEnabledDriverTest . java to ensure compatibility with both IPHONE and SELENE
refactor FlowBuilder and FlowJobBuilderTests for improved clarity to enhance maintainability and readability of the code
changed the ` resName ` field to ` resId ` in ` AttributeResource ` and related classes to improve clarity and consistency in resource
refactor TLS file resolution logic in DefaultDockerClientConfig and related classes to improve clarity and maintainability to enhance the handling of TLS file paths
simonstewart : use setup instead of teardown in simplereactivemongorepositorytests
modified type variable handling in ` mmm Attr . java ` and added a new class ` T6450290 . java ` with generic
added logging - level configuration and its usage in LoggingFlags . java and LoggingOptions . java to enable customizable logging levels for better debugging and
added logging statements to ` LauncherModel ` , ` SecondaryDropTarget ` , ` ModelWriter ` , and ` PackageUpdatedTask ` to
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added new methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` for future removal of deprecated methods to improve code cl
updated the calculation of numPredictiveAppCols to account for phone mode to ensure correct number of app columns based on device type
updated the initialization of the value variable to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added a new ` RequestMatchers ` class and its corresponding test class ` RequestMatchersTests ` and ` RequestMatchersTests ` to enhance request matching
do n ' t work on applet that do n ' t have input box
adjusted height and width calculations in the ProgressBar class to account for background height and width adjustments
[ native ] use external _ functions . json file instead of src / test / resources
updated ` BruteArgumentMoverHandle . java ` to be ` final ` and modified the ` permuteArgs ` method to use
added a condition to check if the handler is invalidated before proceeding to ensure proper handling of gestures when the state handler is invalidated
updated layout conditions and calculations in DynamicGrid and Workspace classes to improve layout responsiveness for landscape and portrait orientations
added a condition to check if the redir file is " / robots . txt " in HttpRobotRulesParser . java to ensure that the
[ netbeans - 4892 ] add ` ` warning . png ' ' and ` ` callhierarchytopcomponent . form ' '
change button from " continue " to " createWorld " and " close " in AdvancedGameSetupScreen . java to enhance user experience by providing
updated conditional checks in UDFOPDivide . java and added unit tests in TestUDFOPDivide . java to ensure correct
refactor code formatting and formatting in FlowJob . java and StopAndRestartFailedJobParserTests . java to improve code readability and maintain
updated filter URL configuration in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use a custom bean definition to enhance flexibility in handling logout
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper resource cleanup to prevent memory leaks during activity destruction
updated variable names from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added a call to set the request timeout in RaftServerConfigKeys to ensure the RPC request timeout is set correctly based on configuration settings
updated logging level from error to debug and added sealed TsFileResource to improve debugging clarity and ensure sealed tsFile resources are properly
added system property setting to the model source in MavenModuleLoader . java to enhance configuration flexibility by allowing dynamic configuration of system properties
add metric for readiness check success and bad ( # 9807 )
fix animatedtorch not register custom itemblock properly ( # 1193 )
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is null
added a method ` getHiveOnTezConfFromDir ( String confDir ) ` to ` UtilsForTest ` and refactored
added a new link " Muting Users " to the links list to provide users with a direct link to the users
added initialization property " jdk . reflect . useDirectMethodHandle " to " false " to disable direct method handling for improved performance
hbase - 25836 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 20660 ] [ yarn ] fix npe in yarnclusterdescriptor when env _ flink _ plugins _
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getWord ( ) . getSpelling ( ) instead of
added a newline to the JSON output format in JsonUtilsTest . java to ensure consistent line endings in JSON output
added tweetId extra data in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper handling of tweet IDs in
added a warning log for Terminating MessageListener in MessageRunner . java to indicate the reason for underlying ring buffer data loss to improve
improve error message when no class find to analyze in classpath
updated import statement from ` Key ` to ` PublicKey ` in ` KeyFetcher . java ` to align with updated security standards
removed redundant initialization of isIncompatible variable to streamline the code by eliminating redundancy
updated the method signature of ` createAccount ` from ` Account ` to ` AccountCreateContract ` in ` RpcApiService . java ` to
pdfbox - 4071 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5452 - fix the
updated the default star tree format from " ON _ HEAP " to " OFF _ HEAP " and changed the default star tree format version from "
updated title handling in FeedUpdateService to ensure title does not exceed predefined length to prevent potential issues with larger titles
refactor JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory for preview panel initialization to improve code clarity and maintainability
change log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for better debugging
added null check for reusable bitmap before setting in bitmapFactoryOptions to avoid potential NullPointerException when reusable bitmap is not available
added a method to retrieve layout parameters in FakeView . java to provide access to the layout parameters for external use
added a check to throw an IllegalStateException if the cursor is already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java
pdfbox - 4892 : do n ' t create a new pdfpage when there be no kids / type , a suggest by
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ' ts ' with getter and setter methods to the Message class to store and manage the timestamp associated with the Message class
refactor genericexceptionmapper to reduce code duplication
changed the visibility of the AbstractExecutor class from package - private to public to allow access to AbstractExecutor from other packages
remove legacy parameter from isochrone endpoint ( # 1349 )
removed the ' public ' access modifier from several test classes to enforce encapsulation by restricting access to the class hierarchy
refactor CSRF attribute handling into a separate method ` setCSRF ` to improve code readability and maintainability by encapsulating CSRF setting logic
added conditional checks for bootstrapping in EclipseLoaderPatcherTransplants . java to ensure proper handling of shadow class loading based on the
[ drools - 6352 ] add support for numericdisabled in excel parser
changed log level from info to debug for default value logging to reduce log verbosity when debug logging is enabled
added null checks for axes , buttons , and polled controllers in Lwjgl3Controller and Lwjgl3ControllerManager to
updated import statements from cucumber . api . java to io . cucumber . core . backend . ObjectFactory in WeldFactory
added a check for the host before saving the port forward to ensure that the host database is retrieved before proceeding to avoid potential null pointer exceptions
added ` shouldSnapshotData ` property and its getter / setter methods in ` GlobalConfiguration ` , and updated related classes to utilize it to
added a null check for the file name before creating a PersistableBundle in SyncedFolderObserver . java to improve robustness by preventing
refactor LocationMarshaller class for improved clarity to enhance maintainability and readability of the code
simplified touch event checks in StatusBarTouchController and adjusted gesture handling logic in OtherActivityInputConsumer to improve code readability and maintain
refactor VectorReader and related classes to improve organization and clarity to enhance code readability and maintainability by aligning interface structure
updated import statements from ArgumentMatchers to Matchers in multiple test files to ensure compatibility with the latest Mockito library versions
refactor methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` for consistency and clarity to improve code readability
updated the ` completeMapAndTransformRow ` and ` completeMapAndTransformRow ` methods to use ` RecordReaderFileConfig ` instead of
added a null check for the ` extractor ` variable before processing annotations in ` ControllerMethodInvoker ` and made ` Param ` and ` ParamsExtractor
cloudstack - 4892 : add a new method ` findcorrectresourcelimitforaccountanddomain ` to ` resourcelimitservice ` ,
add motion shift event to the inventoryeffectrenderer , close # 4323
added a deprecated constant COLD _ READS _ TO _ OMIT _ KEY and removed it from uncheckedOptions to deprecate the old constant
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent memory leaks
[ issue # 5394 ] fix issue with message retry metric ( # 5394 )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to mark the test as ignored for a moment to temporarily disable the test for
renamed ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverClientSettingsBuilderCustomizer ` and updated related references
added upgrade request and response handling in UpgradeConnection and corresponding tests in ClientConnectTest and JettyTrackingSocket to enhance WebSocket connection management and ensure
added a timeout property and its getter / setter methods in AndroidImplementation . java to enable dynamic configuration of connection timeout for better resource management
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return a list of permissions instead of using ` RpcUtils .
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing correctly handles quoted
updated assertions in Misc . java to conditionally check if the file is writable or executable based on the root state to ensure proper handling of
added logging for group and thread per group in FixedThreadExecutor and refactored executor selection logic to improve traceability and maintainability of thread
added null checks for the ' field ' variable in AbstractChangeGenerator . java to avoid potential NullPointerException when ' field ' is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration files to standardize event listener usage and improve code clarity
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an overridden close method to the DeflaterOutputStream to ensure proper resource management by closing the deflater output stream
added a new file ` gsp001 . java ` that includes a native method for retrieving system properties to verify that the JVMTI
fix issue with @ inject on bean that be declare a @ bean ( # 4891 )
cameranode , lightnode , cameranode , and cameranode should use read / write instead of read / write .
refactor PopupMessageHandlerSwingImpl to utilize SwingUtilities for disposal of the popup window to improve code readability and maintain
rename ` noinstanceexception ` to ` inferenceexception ` in infer
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` variable
changed the type of the ` after ` method from ` int ` to ` long ` in ` Mockito . java ` to allow more precise
added ` onBuild ` and ` executionDriver ` fields to ` ContainerConfig ` and ` Info ` classes , along with their corresponding getter and
added conditional logic to set icon based on the target ' s RTL status to ensure proper alignment of commands based on the target ' s R
added a new boolean variable ` enablePositionIncrements ` and modified the return statement in ` StopFilterFactory . java ` to enable position increments
added an ` InternetAddress ` field to ` EmailsTest ` and ` SystemErrorEmailReportTest ` classes , and modified the ` email
set mTryShareAgain to false in FileActivity . java to disable sharing functionality in the activity
added functionality to determine the current tty version in JansiNativePty . java to enhance the functionality of the JansiNativeP
updated variable names and variable names from ' bytes ' to ' bytesSize ' in BandwidthProcessor . java to improve clarity and consistency in
replaced direct calls to ` then ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java
replaced hardcoded URLs with a constant API base URL in EaseeBindingConstants . java to improve maintainability and readability of the
updated sleep duration in KafkaIOIT . java and added startup attempts in KafkaContainer to improve test reliability and ensure proper startup attempts for Kafka
replaced ` Matchers . anyOf ( ... ) ` with ` is ( itemName ) ` in ` SearchResultMatcher . java ` to improve
updated OkHttp . java to use javax . net . security . cert . SSLSession and javax . net . security . cert . SSLSession
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and maintainability of button click
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of `
added nullable nullable fields for stdout and stderr in ShellStep . java to ensure that the working directory is not null to avoid potential NullPointerExceptions during
increased the timeout duration from 1000ms to 2000ms in AsyncAppenderTest . java to allow more time for log operations to complete successfully
updated the escapeDatabaseObject methods to include additional parameters for catalogName , schemaName , and index to improve clarity and consistency in database object handling
added a boolean variable ` inputChanged ` and updated condition checks in ` MaterialRenameDialog . java ` to improve the handling of material renaming input
added a test for handling display state changes in ShadowDisplayTest . java and implemented a setState method in ShadowDisplay . java to ensure correct behavior
[ geos - 8470 ] add directinvocationservice interface to make it possible to invoke direct operation .
gwt : add support for ` ` x ' ' and ` ` y ' ' key in web
updated SQL query conditions for pg _ catalog . pg _ depend dep and dep in PgDatabaseMetaData . java to ensure compatibility with PostgreSQL version 9
set message to null in QueueChannel . java to ensure message is not null to avoid potential null pointer exceptions
removed IOException from getPathsFromResource method and updated URI creation to use getRawPath ( ) instead of jarPath to improve code clarity and
added logic to handle Jenkins nodes in the remote collector initialization to ensure proper handling of Jenkins nodes in the application
refactor attribute resolution in HeadersBeanDefinitionParser to use resolveAttribute method to improve code readability and maintainability by centralizing attribute resolution logic
updated error handling and logging in ProtobufLogReader . java to improve clarity of error messages and ensure proper file seeking behavior
added shutdown functionality for Nacos naming services in the NacosRegistry class to ensure proper resource management and avoid potential memory leaks
camel - MyBatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a new method for writing status codes to improve code readability and maintain
refactor AuditEvent and AuditEventTests for improved readability and structure to enhance code clarity and maintainability
added checks for FLOAT _ ROUNDING _ ERROR before returning 0 in Interpolation . java to ensure correct behavior of math . cbrt with
fix default path for forge world
refactor the way the executable path is added to the builder to improve readability and maintainability of the code
added multiple assertions for PointRangeQuery instances in TestPointQueries . java to ensure correct equality checks for PointRangeQuery instances
hbase - 26458 testhfilecleaner fail on window due to hbase - 26462
added a condition to update the file label based on the file name comparison in ReceiveFileConversationComponent . java to ensure the correct file name is
removed exception throw statement from JedisClusterCommand . java to streamline error handling by eliminating unnecessary exceptions
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always for rowtimeminibatchassgineroperator
replaced ` RegExpBasedFilterInvocationDefinitionMap ( ) ` with ` PathBasedFilterInvocationDefinitionMap ( ) ` in ` FilterInvocationDefinition
added baseline and test methods in QMapBenchmark and QMapReadSequentialKeyBenchmark classes to enhance benchmarking capabilities and improve performance measurement
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added a check for empty fields and refactored identifier handling in GroovyEngine . java to improve robustness and maintainability of the code by
ggb - 2852 fix for angle in giac
added SERVER _ READ _ SOCKET _ TIMEOUT and SERVER _ TCP _ KEEP _ ALIVE configurations and updated TServerTransport initialization to
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java
no effective change - no effective change
refactor RealtimeSegmentRelocator to use lambda expressions instead of Java ' s built - in PeriodFormatter to improve code readability and
createvpccmdbyadmin : remove unnecessary boolean assignment
updated the calculation of ` windowAlpha ` to use ` Math . max ` instead of ` interpolatedProgress ` in ` WindowTransformSwipeHandler
updated the schema declaration in the fatal error message from 3.2 to 4.0 in SecurityNamespaceHandler . java to ensure users update the
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability across the assertion framework
[ java ] make field final in disruptorproviderManage . java
added a new UDF class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` to retrieve the best available configuration to enhance
updated regex pattern in LogMessageWaitStrategy and added parameterized test cases in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage
replaced ` logger . final ` with ` logger . logger . getLogger ( ) . debug ` and ` logger . info ( msg , throwable
changed method names from ` update _ time ` to ` delete ` in multiple DAO classes and ShardDao classes to improve clarity and consistency
added a new version " 17 - preview " to the JavaLanguageModule and updated its usage in the LanguageVersionTest to support additional language features
added a SECONDS _ TO _ WAIT _ FOR _ COMPRESSION _ JOBS constant and modified the stop method in TimeBasedRollingPolicy to improve
[ gr - 23232 ] avoid assertion error in volatilereadnode . readall ( )
added a method ` getSteps ( ) ` to the ` SimpleJob ` class and modified the ` getStep ` method to return an unmodifiable list
removed redundant fields fromBase58 , toBase58 , and contractAddressBase58 from TronJsonRpc and TronJsonRpc classes to
refactor CurrencyPair creation to use a variable for clarity to improve code readability and maintainability
update longtasktimer to use basetimeunit instead of nanoseconds
[ hotfix ] [ euphoria - client ] fix reducebykey translation for hashpartitioner
updated variable types and improved value retrieval logic in HostEditorActivity . java to enhance type safety and simplify code for better readability and maintain
renamed ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and updated related method calls to improve clarity and consistency in naming con
added a constant for maximum tweets in the conversation limit in ExpansionViewHelper . java to limit the number of replies processed in the query
updated the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to improve user experience by allowing more time for
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1028 , add a test
fix checkstyle issue in net / glowserver / glowserver . java
added a new ` grow ` method to the ` DataIO ` class and refactored the ` grow ` method to use it to improve
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide access to the submitted file name from the
added markReadForLoad ( ) method to LauncherFragment . java to enhance loading functionality for better user experience
updated the ` instrumentJar ` method to handle ` ClassNotFoundException ` and removed the handling of failed classes to simplify error handling and improve code clarity
added a method ` checkForSpillPossibility ` to check for spill possibility in ` HashAggTemplate . java ` to ensure that
replaced direct calls to ` getDocStoreSegment ( ) ` with a final variable ` dsName ` in ` IndexWriter . java ` to
added a default name ID format string in SamlProfileSamlNameIdBuilder . java to ensure compatibility with SAML 2.0 name ID format
added redirect functionality and error handling in ChangePasswordPage . java to improve user experience by preventing password change issues
removed unnecessary braces in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file to the test was deemed unnecessary or redundant
refactor RRD4jPersistenceService to remove redundant calls to filter . getBeginDate ( ) and filterEndDate ( ) to improve code read
added checks for non - positive vectors in GenericUDAFComputeStats . java to prevent unnecessary processing when there are no vectors
test : migrate executablereftest to junit 5 ( # 4449 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 16462 : added support for wiretap and senddynamicprocessor in the camel - core - maven - plugin
changed the access modifier of the setAction method from public to protected to restrict access to the setAction method for better encapsulation
[ calcite - 4892 ] add ` ` planner . enable _ topn ' ' option to push limit to top n
[ java ] do n ' t set aeronirectoryname for test that do n ' t need it
fixed - redissonbatchexecutor . ping ( ) method do n ' t set queue flag to false
refactor configuration handling in HiveConf to use a temporary URL instead of a byte array to improve performance by avoiding unnecessary byte array creation
updated the method call from ` getDefaultDevice ( ) ` to ` criteria . getDevice ( ) ` in ` BaseModelLoader . java ` to
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to improve menu handling for motor details options
refactor CertificateValidator class for improved clarity to enhance maintainability and readability of the code
updated homeDir initialization to include the " hawtio . dirname " property to ensure correct directory path is used for hawtio
added a check for empty comments in the Space class to ensure proper handling of empty comments in the code
changed fields to be volatile in multiple dictionary classes to ensure visibility of these variables across multiple threads
removed printStackTrace ( ) method call from ContextHandler . java to improve error handling by avoiding stack trace printing
move customitemdroptest to integration test
added conditional checks for non - existent partitions in DDLTask , DDLSemanticAnalyzer , and AddPartitionDesc classes to enhance the handling of
updated byte reading logic in NfsSecondaryStorageResource . java to improve data handling and ensure proper reading of data
[ java ] remove unused controlrequeststreamid method from service node
updated spatial operator handling in CapabilitiesTransformer and added unit tests for supported spatial operators in GetCapabilitiesTest and WFSTestSupport to enhance spatial
added LuceneTestCase import and annotation to BasicDistributedZkTest . java to address a known issue related to SOLR - 2
modified the condition in Http11InputBuffer . java to include a preface check before processing the input buffer to ensure proper handling of preface
[ java ] set the default value of isIngressExclusive from true to false in AeronCluster . java to ensure that the cluster is
updated HBase storage key constants to use an array of cache keys instead of hardcoded values to improve flexibility and maintainability of cache key management
updated JSONRecordReader to track the current record number in a file and added methods to track the number of running records to improve clarity and
added filtering functionality for out year items in CategorizationFragment to improve user experience by filtering out years from merged items
updated drawColor calls in CacheableTextView , CellLayout , HolographicOutlineHelper , and HolographicOutlineHelper to
added a check for OpenGL ES 2.0 availability to ensure compatibility with OpenGL ES 2.0 for rendering functionality
added action context initialization and set it to null in BackgroundProcess . java to ensure proper context management during process execution
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include a database name parameter to enhance flexibility in table
added connection timeout configuration in TestConnections . java and changed the count variable in StubConnection . java to be final in StubConnection . java to
added multiple SQL query assertions for the approx _ percentile function in TestHiveAggregationQueries . java to ensure that the query correctly handles percentile values
updated DEFAULT _ IDLE _ TIMEOUT to a constant and refactored idle timeout handling in WebSocketChannel to improve code readability and maintainability
updated the retrieval of shares to use the user ' s platform account instead of the account ' s name to ensure the correct account is used for
updated Inet6Address . java to use generics for InetAddress and NetworkInterface instances to enhance type safety and prevent potential ClassCastExceptions
refactor PlaybackControlView to use setButtonEnabled method instead of enableViews and disableViews to improve code readability and maintainability by
updated the ` isPresent ` method to accept ` id ` instead of ` session ` to improve type safety and clarity in session presence checks
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
use exception probability by default to ___ _
updated the ` newPlateColor ` initialization logic in ` PredictedAppIcon . java ` to differentiate between themed icons
guacamole - 1342 : refactored mysqluser initialization to use init ( ) instead of touserwithbLOBs .
added " centre " alias to the aliases list in Middle . java to support centre functionality in the application
added dependency injection for DirectUpload in CommonsApplicationComponent and made DirectUpload public to allow access to DirectUpload from other packages
added space at the top of the left and right axes in the BarChart to improve visual spacing and readability in the chart display
added HasJavaAbi . CLASS _ ABI and HasJavaAbi . VERIFIED _ SOURCE _ ABI _ FLAVOR
updated OnlineHubService to include operation event status type in request parameters and initialized services in CompositeLogService to improve event handling and ensure services
added debug logging for annotations in DexAnnotation . java and implemented visibility annotation handling in the code to improve debugging capabilities and ensure proper handling of
camel - jms : replace @ startbundle and @ finishbundle with @ teardown in jmsio
refactor ProcessBuilder initialization to use a variable for classpath to improve readability and maintainability of the code
updated the separator logic for loading resources in PackageResourceLoader . java to ensure correct path formatting depending on the package name for compatibility
[ hotfix ] [ dataset ] remove unnecessary ' this ' keyword in dataset . java
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
added escapePercent method to error message formatting in ShouldHaveMessage . java and updated test method visibility in ShouldHaveMessage _ create _ Test .
fixed - jcachemanager . close ( ) and jcachemanager . close ( ) do n ' t close the cache . #
reduce log level for already claim exception in commandcontext
modified the initialization of ALPNClientConnectionFactory in HTTP2Client . java to ensure ALPNClientConnectionFactory is only instantiated when necessary
simplified the value writing logic in EntityPropertiesPacket . java to improve code readability and maintainability by using the instance ' s base
fix sonos speaker not be initialize properly ( # 5370 )
increased await times from 500 milliseconds to 5 seconds in ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest to allow more time
changed log level from info to debug in LightThingHandler . java to provide clearer information about the reason for determining the effect light type for
add db . properties property to the db . properties file in asyncjobmanagerimpl .
updated the ` smartNullPointerException ` method to accept an ` Object ` parameter and improved message formatting to enhance error reporting by providing more context
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` in the ` generate ` method to improve type safety
reformatted multiple module - info . java files for consistency to improve code readability and maintainability
added a check for empty physical column names in OrcPageSourceFactory and created a new test for handling empty files in TestHiveFile
added a call to ` methCla . mixPlay ( input , amp ) ` in ` Engine . java ` to facilitate
refactor JComponent and SynthTextPaneUI classes to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of the firstConfirmedCenter position in FinderPatternFinder . java and updated test cases in QRCodeBlackBox1Test
simplified the condition for checking the presence of leadingIncludePaths in PreprocessorDelegate . java to enhance code readability and maintainability by
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and re
added find and findAll methods to the SelenideElementProxy class to enhance functionality by allowing multiple search criteria queries
updated the calculation of the sampleRate in DefaultAudioSink . java to ensure the maximum supported channel count is based on the presence of the sample rate
added getter and setter methods for formulatext in XSSFName class and refactored related methods in XSSFName to
increased the target value from 60000 to 90000 in HighDimensionsTest . java to accommodate larger data sets for improved
corrected the condition for value splitting in SimpleTypeGT . java and added a test for pattern schema parsing in GMLParserTest . java
added unit tests for ClassPathXmlJobRegistryContextTests to ensure correct job name resolution in the job registry context
changed the data type of mHistoricTimes from float to long and updated related calculations in MotionPauseDetector . java to improve precision in time
camel - 12320 - camel - restlet : deprecate consumer option in camel - restlet
[ log4j2 - 1349 ] remove unused showout method from logendpointbuilder
refactor the trace event submission into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encapsulating
modified limitOrders addition logic to check order status before adding to limitOrders to ensure only relevant orders are added to the limitOrders list
added pixel offset calculations and improved image layout validation in LCMSImageLayout . java to enhance image processing accuracy and ensure correct image layout
updated timestamp handling in Event . java and modified ruby _ timestamp method in JrubyEventExtLibrary . java to improve code clarity and ensure
added a check to return a resource if the path ends with " / " in ContextHandler . java and a corresponding test in WebAppContextTest
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
fix issue with scroll on jedittextarea on macos
added guards stage and stage flags handling in GraphDecoder . java to ensure proper initialization of graph state when caller loop scope is null
test ( sniperprettyprinter ) : move sniperjavaprettyprinter test to junit 5
refactor URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added multiple @ Entity annotations to the Mail class to enable entity management for the Mail class
changed the default value of ` includeTablespace ` from ` false ` to ` true ` and updated its usage from ` includeTablespace `
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to the buffer data for external use
added a check for non - empty file in ScanBatch and implemented a test for JSON directory with an empty file in TestJsonReader to ensure
added conditional failure handling for custom custom names in StringSubject . java and updated assertions in StringTest . java to improve clarity of failure messages
added a regex pattern for matching library names in LibUtils . java to improve code readability and maintainability by avoiding redundant checks
replaced ` NoClassDefFoundError ` with ` Exception ` in ` JrtJavaBasePackages . java ` and ` PackageHelper .
hbase - 23278 masterfilesystem should wait for file system to be write to safemode
updated error message formatting in TranslatingJavacPhaseTracer . java to include the exception class name and message to improve clarity of error
mng - 4892 : remove unused code from defaultplugincache
do n ' t dispatch the presence status event if there be no parent contact
remove the ` withresourceandparams ` method from ` requestdetails ` , since it be no longer require
added a new file ` AccountInfoFetchIntegration . java ` to test the fetching of account information from the BTCE exchange to ensure that
added mouseWheel method to VDUInput , vt320 , and TerminalView classes to enable mouse wheel functionality for improved user interaction
replaced direct calls to ` getExtractionDir ( ) . toString ( ) ` with a variable ` libraryPath ` and added a conditional check
# 1188 - remove columnhstore annotation , deprecate columnhstore
added skins flag to metadata index and set it in GlowPlayer . java and MetadataIndexTest . java to enhance player metadata handling and
use client . getmasterurl ( ) instead of requestfieldmatcher in loadbalancerwithservicetests
fix nullpointerexception when call member . getmember ( eventdata ) in mapservice . getmember ( eventdata )
replaced System . getProperty ( " os . version " ) with AccessController . doPrivileged ( new GetPropertyAction ( " os . version " )
updated the ` DEFAULT _ FILE _ SUFFIX ` to ` FREEMARKER _ CONFIGURATION _ FILE _ SUFFIX ` and modified its
updated the calculation of ` value ` in ` SelectMessageQueueByHash . java ` and added multiple test cases in ` SelectMessageQueueBy
added animation callback to the ToolbarPanel to improve user experience by providing visual feedback during animations
replace ` bindConditionally ` with ` bind ` in ` StyledTextAreaVisual . java ` to improve code readability and maintain
added declaredPlatforms to PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription classes to enhance platform management
updated references from SimpleParameterAccessor to ParameterAccessor in JpaCountQueryCreator , JpaQueryExecution , and PartTreeJpaQuery to
added a null check for passwordAttribute before setting it in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added array handling in DataUtilities and a corresponding test in DataUtilitiesTest to ensure correct instantiation of arrays and validate default values in DataUtilitiesTest
updated SSL engine creation logic to handle null addresses and client authentication to improve robustness by ensuring correct host name verification when the address is null
replace assertEquals with assertTrue for cache hits in TestFSTableDescriptors . java to improve clarity and correctness of cache hits assertions
simonstewart : refactored iedeletereader . deletecookie ( ) to be more generic
added a new boolean variable ` mHasEndedLauncherTransition ` and modified gesture transition logic in ` AbsSwipeUpHandler . java ` to
added ` metaCharset = " utf - 8 " to the HTML structure in ` HTMLListWriter ` and ` HTMLWriter ` to ensure proper
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH and refactored path separator handling in multiple classes to improve performance and
added a new class ` bug6337518 ` and modified ` BasicComboBoxUI ` to add an arrow button to the combo box to
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future updates
refactor UserInfoActivity to improve code readability to enhance maintainability and ease of understanding for future developers
added imports for HomeContentProvider and updated broadcast notifications in multiple services to ensure proper handling of content changes in the application
added a boolean flag ` mStayPressed ` and modified related methods in ` BubbleTextView ` and ` Launcher ` classes to
updated ` getFallbackResponse ` method signatures to include a ` Throwable ` parameter across multiple classes to enhance error handling capabilities by providing more informative
removed the check for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is set to ` env . _
added null checks for tags in ChannelUri . java to ensure safe access to tags array to avoid potential NullPointerExceptions
updated JAVA _ REGEX _ SPECIALS in RegexpUtil . java and modified test cases in TestSqlPatterns . java to improve regex pattern matching accuracy
added action bar title handling in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar title reflects the current
updated method call from ` Iterables . getOnlyElement ( convertedElements ) ` to ` Iterables . getLast ( convertedElements ) ` in ` Python
updated the Schedule annotation from " * " to " 0 " in CleaningService . java to allow for a more flexible scheduling duration
updated TransactionalValidationListener to handle partitioned tables and modified table path retrieval logic to improve table structure validation and error handling for partitioned tables
refactor ReplicationHandler and SnapPuller classes to improve code organization and enable polling functionality
changed the data type of generatedKey from int to long and added SQL auto - increment functionality to ensure accurate key generation and auto - increment functionality
simplified the return statement in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in multiple Java files to reflect inline failures to improve clarity and accuracy of error reporting for inline - related operations
updated keep - alive timeout settings and improved debug logging in WebClientFactoryImpl . java to enhance connection stability and provide clearer logging
deleted the HttpTestAccount001 . java file to remove unused test code to streamline the codebase
updated exception handling to catch a broader range of exceptions and added a try - with - resources statement for resource management to improve error handling and
camel - 16462 : camel - cxf - add support for xop and xop message format in camel - cxf component
added a case for the ' ~ ' character in ClientUtils . java to enhance functionality for processing special characters
camel - 16462 : camel - slack - add support for java . time . delay in camel - slack
fix drop block not fire a halvesting event . close # 3323
updated the layout parameters for encodedAudioPassthrough in TranscodingTab . java to improve layout consistency and readability
added a new file ` bug8057791 . java ` that implements a list model with Nimbus look and feel to address
refactor flag assignment logic in LambdaToMethod . java and add a new class LambdaInterfaceStaticField . java with a static field to improve
fix ( eth ) : add websocket method when engine api add available
replaced ` to . length ( ) > 0 ` with ` to ! null ` in ` ComposeActivity . java ` to ensure that
refactor ParquetFixedWidthDictionaryReaders to conditionally use BigIntVector ' s Mutator for reading values based on dictionary usage to improve
refactor PortraitPagedViewHandler to use ' dp . lscape ' instead of ' splitInfo . appsStackedVertically
added a new annotation ` Log ` and ` LogInterceptor ` classes in the ` TestController ` class to facilitate logging of method
updated the dump string format in QueuedThreadPool . java to include a null check for trace elements to ensure that the trace array is not empty
updated the ` CacheGenerator ` and ` CacheProvider ` classes to include ` Implementation ` instead of ` ReferenceType ` to enhance functionality by allowing
updated the calculation of ` refMap ` to include ` totalFrameSize ( ) ` to ensure the reference map accurately reflects the total
refactor TypesafeConfigurator class for improved clarity to enhance maintainability and readability of the code
added camel - graphql integration test for camel - itest - karaf
removed the main method from the RFE2891944 class and added multiple test methods for BigDecimal initialization to facilitate testing of
replaced URLEncoder . encode with direct usage of entry . getValue ( ) in HttpClientIntroductionAdvice . java to simplify URL
refactor UnsupportedPlatformTool to implement a new class instead of creating a new one to improve code readability and maintainability by simplifying the
changed the type of ` loopCount ` from ` double ` to ` int ` and updated log message formatting to improve clarity and consistency in
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
[ drools - 4892 ] fix the issue of addressmanagertest . index and addressmanagertest . index be
updated column specifications in VLCVideo . java from " right : pref " to " left : pref " and adjusted layout constraints to improve layout
update link from bisq to bitsquare in multiple files to ensure links point to the correct bitsquare repository
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory to include " / . m2 " and refactored file handling in MBoot . java and MavenCli . java
added a call to glBindBuffer on GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure the buffer is properly
refactor ServerHttpSecurity class for improved security handling to enhance security measures and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and updated CasCoreHttpConfiguration to support custom HTTP headers in the HTTP client configuration
added new exception class to handle password not - valid exception .
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the codebase
replaced Codec . base16Decode with Bytes . fromHexString for signingKey assignment to improve code readability and leverage built - in encoding
replaced CascadedStyle with CSSName and added null checks for float values in FloatUtil . java to improve code clarity and ensure
planningfactproperty , planning Score , solution , planningfactproperty , planningfactproperty , planningfactproperty , planning
refactor ` RestUtils ` methods to use ` MultiMap ` instead of ` CaseInsensitiveHeaders ` to improve header management by encapsulating default
rename ` ` enc ' ' to ` ` charset ' ' for consistency
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that the
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils for consistency to improve code readability and maintainability
changed log level from error to debug for HTTP response handling in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for debugging purposes
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials instead of wildcard imports to improve code clarity
changed the visibility of the WingDings class from package - private to public to allow access to the WingDings class from other
fix npe when remove a filter that be not our own .
added a static method ` wrap ` to ` BCPGInputStream ` for creating instances of ` PGPKeyRing ` , ` PGPKeyRing
replaced ` DataOutputStream ` with ` BufferedOutputStream ` in ` MinimalLockingWriteAheadLog . java ` and added a try - finally block
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified column name handling in ` HiveBase
refactor FocusTransitionTest class for improved test coverage to enhance reliability of focus transition functionality
updated the import statement from ` org . gwtproject . core . GWT ` to ` com . google . gwt . core . GWT
added a check for the source task type before obtaining counters in CounterStatsAggregator . java to ensure robustness by preventing potential NullPointerExceptions
updated the initialization of _ readListener in HttpInput . java to ensure proper initialization of the readListener variable
refactor color handling in AppearancePanel to use a custom ChangeListener to improve code readability and maintainability by encapsulating color change logic
updated the constructor parameters in TaskHelper to use ' hidden ' instead of ' false ' to improve clarity by using a more descriptive variable
fix intermittent test failure on slow ci server
pdfbox - 4071 : fix resource leak in createtifffile ( )
added import statement for DefaultParameterHandler in LanguageDriver . java to enable default parameter handling in the scripting framework
added loop depth check for spill state setting in LinearScanWalker . java to ensure that the spill state is only set when the loop
added a new file ` MicronautAstBuilder . java ` for the ` compile ` method in the ` micronaut -
refactor pgresultset . close ( ) to use a single closeInternally ( ) method to improve code readability and maintainability
set the default value of serviceAdvisorType from null to ServiceAdvisorType . PYTHON to ensure the service advisor type defaults to PYTHON
refactor ` GenericDatumReader ` to use a thread - local instance for ` ResolvingDecoder ` to improve thread safety and avoid potential null
changed constructor parameters from Collection to List in Path and modified return types in PdfContentStreamProcessor and PdfCleanUpContentOperator to improve type safety
refactor SendCoinShieldTest to use a random byte array instead of a new byte array to improve code readability and maintainability by
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to support personalisation of a given date and
removed redundant whitespace in CodeGenerator . java to improve code readability and maintainability
removed the ` percent ` parameter from the ` scroll ` method calls across multiple classes to simplify the code by eliminating unnecessary complexity
changed the access modifier of the pointer variable from private to public and added reset methods to the FlatRecordReader class to allow external access to the
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple classes to improve clarity and consistency in naming conventions
simplified import statements and improved type handling in CastExpression . java to enhance code readability and maintainability by reducing redundancy
replaced the initialization of ` accepts ` with a boolean variable ` acceptsAll ` and updated the condition to check for ` acceptsAll ` to
added a new boolean variable ` false ` to ` TaskView . java ` to control the behavior of the method
added a method ` isAutoIncrement ( ) ` to ` LiquibaseDataType ` and overridden it in ` LiquibaseDataType `
initialize errorText to " Command failed due to Internal Server Error " to provide a clearer error message for debugging purposes
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils for CPU options to improve compatibility with
replaced ` toSimulate . add ( currentStatus ) ` and ` toSimulate . push ( currentStatus ) ` with ` to
added support for specifying the AJP port in GitBlitServer to enable the server to bind and configure the AJP connector dynamically based on
added type coercion checks for compound types in TransTypes . java and created a new class Intersection03 . java with assertions to ensure
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the test class
refactor toolkit thread initialization to use a native method to improve performance by avoiding repeated thread creation
[ gr - 23232 ] bundlecontentsubstitutedLocalizationSupport now compress the bundle in parallel .
fix ( opengl ) : hide the surface on window
move pinot - segment - local test from unit test suite 1 to 2 ( # 11865 )
added new boolean fields ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` to ` CommonParameter ` and updated related classes to
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and modified return statements in ` GoogleCloudFirestoreTicketRegistry `
refactor Generate . java for improved clarity to enhance maintainability and readability of the code
updated the scalar function to return ` null ` instead of ` true ` in ` JsonFunctions ` and added tests for handling null arguments in `
added a DOTS _ ONLY constant and modified badge handling logic in BadgeRenderer . java , and updated color parsing in IconPalette . java
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager ` to allow for subclassing of the
added a test for invalid excluded package name patterns in OgnlUtilTest . java to ensure that the method correctly handles invalid package name patterns
updated device Udid retrieval logic to handle macOS platforms to ensure compatibility with macOS device identification
updated DefaultHttpClientFilter to use ProduceProcessorManager and modified test cases in TestDefaultHttpClientFilter to improve error handling and ensure correct response status codes
added comments to clarify initialization flow in AllAppsView . java to improve code readability and maintainability
added a new boolean variable ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally set shadow layer based
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database resources after tests are executed
added a call to retrieve the parser from the parser object to ensure the parser is retrieved from the parser configuration
added a fastpath method to BoundedLocalCache and a corresponding test in BoundedLocalCacheTest to ensure proper functionality of the BoundedLocal
refactor RawConnection and WebSocketAsyncConnection to extend WebSocketConnection and implement complete and flush methods to enhance connection management and improve asynchronous handling of frame
added two test methods to the SoftAssertionsPerfTest class to validate the behavior of all assertions with different scenarios to enhance test coverage and ensure
fix python unit test to return non - zero on
added a conditional check for markup enabled before processing text items in GlyphLayout . java to ensure that subsequent runs are only executed when markupEnabled is
refactor the score assertions in TestBooleanRewrites to use streams for better readability and performance to improve code readability and maintainability by
updated the method of obtaining the enclosing class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in ` TypeHandlerRegistry
remove unnecessary check for player socket connection before flush ( ) .
added a boolean flag ` mStarted ` and modified listener removal logic in ` Launcher . java ` and ` LauncherAnimUtils . java
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated import statements in ReplicaAssigner . java to use wildcard imports and added a condition to check if matchStatus is not APPLICABLE before
updated the default value of the MEDIAPARSERV2 check from false to true to ensure the media info parser is valid for the media
added support for handling AROUND _ TYPE annotations in the BeanDefinitionInjectProcessor class to ensure proper processing of interceptor types based on annotation annotations
added permission assertions and verification for table operations in FolderPermissionBase . java to ensure proper permission handling and validation during table operations
do n ' t publish status when provider be wrong due to registration state change .
updated the random color calculation in PastelColor . java to use a color base instead of a fixed value to improve the visual consistency of
refactor ScriptEngineFactory class to improve code readability to enhance maintainability and facilitate future development
refactor bitmap creation logic in HolographicViewHelper to use original and outline bitmaps to improve code clarity and maintainability by
refactor request method handling in CloudClient . java to use HttpMethod . fromString for better clarity to improve code readability and maintainability by
improve handling of unigram tagger in multiwordpreprocessor . gettag ( )
removed the import of IOException from IOChannelUtilsTest . java to streamline the code by eliminating unnecessary dependencies
added conditional logic to retrieve the output format class if the class name equals HivePassThroughOutputFormat to enhance flexibility in class loading based on
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated boundary check in DOMBuilder . java to ensure proper length validation to prevent index out - of - bounds errors
updated graph visibility logic in ClusteringCoefficient and modified edge retrieval in EigenvectorCentrality , EigenvectorCentrality
camel - 15836 - camel - aws2 - translate : check if a particular service be support in the specified region , add verification error
added a new file ` PublicStaticInterfaceMethodHandling . java ` that implements ` InterfaceWithStaticAndDefaultMethods ` with a static method to
camel - 16462 : camel - jbang - add support for property placeholder in defaultkeyselector
removed unnecessary conditional checks for ` t instanceof ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java ` to simplify code
refactor multiple security - related classes for consistency and clarity to improve maintainability and readability of the codebase
updated JGit version from " 201106090707 - r " to " 201109151100 - r " and added sorting
updated client key retrieval logic in HttpClientIntroductionAdvice . java to ensure correct client key is retrieved based on the presence of a
added TransformerParser , TransformerParser , TestBean , and TransformerContextTests classes to enhance the configuration and testing capabilities for the Transformer component in the
replaced BACK _ FACTOR with REWIND _ TIME and updated related conditions in ResumeObj . java to improve clarity and functionality of
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and ` JavaSEPort ` , and
updated usage string formatting and added null check for command usage in UtilityCommands . java and DocumentationPrinter . java to improve code readability and ensure
corrected the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in
removed setSeqFiles and setUnseqFiles methods from CrossSpaceCompactionResource and updated mergeFiles usage in RewriteCrossSpaceCompactionSelector
removed duplicate @ Override annotations in Observation . java to improve code readability and maintainability
updated the needRebuild logic to correctly update the projet ruleset based on preferences to ensure proper synchronization of the projet ruleset based on user
improve performance of abstractsootfieldref . getfieldunsafe ( )
add elasticnamingconventions for meter name , tag , type , and tag key .
added methods for handling controller events and job length estimation in IController and updated BackendAPI to use IController instead of AbstractController to improve controller
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify the rendering of a large horizontal rule
replaced System . out . println statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
refactor multiple Java classes to improve code organization and clarity to enhance maintainability and readability of the codebase
updated frame length check from ` frameLength = = 0 ` to ` frameLength < = 0 ` in LogInspector . java to ensure proper
replaced instances of ` zeroValue ` with ` defaultValue ` in ` IntFloatMap ` and ` IntIntMap ` to return ` defaultValue
refactor icon setting and styling logic in ImageDownloadService to run on the UI thread to ensure UI updates occur on the Event Dispatch Thread
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions when registered is null
removed the ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , and ` HtmlNode ` classes and updated
fixed - npe in redisdistributedmapcacheclientservice when result be null
updated logging statements in MobFileCache . java to include cache size and evictPeriods and evictRemainRatio to improve clarity of cache
refactor ColConvCCMTest . java for improved readability to enhance maintainability and facilitate future updates
replaced the initialization of ` target ` and ` source ` with a boolean variable ` allowCovariantReturns ` and updated related logic to improve
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new ` X `
camel - 2979 : fix if prepollcheck return false to break out
added EventQueue . invokeLater ( ) in bug6638195 . java to ensure that allInvoked ( ) is called on the Event
corrected the method call from ` getMaxBinaryMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` in ` CompressExtension .
update steeringValue increment from - . 5 f to - . 5 f in TestAttachDriver , TestFancyCar , and Test
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
updated JdbcSerDe to use local date and time handling for rowVal to improve accuracy of date and time representation by using local date and time
updated version number from 2 to 3 and refactored metadata handling in ParseData . java to improve compatibility with versioning and streamline metadata
refactor FlywayAutoConfiguration to use FlywayInitializerJpaBean and EntityManagerFactoryDependsOnPostProcessor for JPA dependency
added sorted ( ) method to ClassesImpl . java to ensure predictable ordering of classes during processing
added a method to retrieve the current stable state in LauncherStateManager and implemented a waitForLauncherCondition method in AbstractLauncherUiTest to improve
refactor SharedInformer class to improve code structure to enhance maintainability and readability of the code
refactor memory scope handling in TestCloseScope0 . java to differentiate between memory and resource scopes based on the version to improve compatibility with
increased the test timeout from 500ms to 5000ms in AdaptServerSocket . java to improve test stability by allowing more time for
updated CaptchaChannelProcessorTests . java file to improve test coverage for Captcha channel processing
[ ds - 161 ] bulk metadata edit - fix bug where item : owning _ collection be not get update properly when move
added a retry mechanism for saving registry cache file in AbstractRegistry . java to ensure that the cache file is only saved if a maximum number of
updated the variable name from ` mergeDirectory ` to ` directory ` in ` TrackingDirectoryWrapper ` to improve clarity by using a more
fixed bug 106605 - unusedimports no long report a false positive
added validation for insert overwrite queries in HiveIcebergStorageHandler and implemented bucketed table validation in IcebergTableUtil to ensure that
updated assertions in BootstrapTests to check for legacy SAML keys to ensure correctness of SAML configuration checks
updated methods to check for non - static local fields in Excluder . java to ensure correct handling of non - static local fields in
refactored the ` getAddressVector ` method to use an ` addressees ` variable instead of ` theAddressie ` to improve cl
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
added ` LockReleaseFailedException ` class and modified lock release logic to handle exceptions to improve error handling and provide clearer feedback on lock release failures
changed the package of ` DataSourceInitializer ` from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to
added a conditional check for unary operators in SpelExpressionTransformer and modified return statements in OperatorNode , LiteralNode , and MongoQueryMethod to
added TypeValidation to ByteBuddy instantiation to disable type validation for better performance
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and created a new ` Errone
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest . java and updated global in
fix loggingapplicationlistener to reference system property
added a method to check if the HTTP redirect status code is valid and refactored the request handling logic in ServiceApiRequest . java to improve
added new constants for service mapping and version mapping in ServiceCombConstants . java and modified microservice logic in MicroserviceFactory . java to improve
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX and DB _ PREFIX constants in BaseAndroidTestCase . java and GeocodeHelperTest . java to use a
updated return statement to retrieve unread count from HomeDataSource to ensure accurate retrieval of unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and introduced a new constant MARKET _ COUNT _ LIMIT _
added null check for the user before retrieving user settings to prevent potential NullPointerExceptions when accessing user settings
added a method to retrieve the absolute file path in LocalFileSystem and implemented a test for matching relative wildcard paths in LocalFileSystemTest to ensure correct
added maximum width and height constants to the instance ' s bounds in ComponentBuilders . java to ensure that the dimensions do not exceed the defined maximum
added logging functionality and deprecated the ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer ` to improve error handling and provide clearer
removed unused import of ExceptionHandler and updated error handling logic in PrintController . java to streamline error handling and improve code clarity
refactor file handling in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code readability and ensure
added methods to check if a word is empty or empty in SpellChecker . java and corresponding test cases in SpellCheckerTest . java
updated the MESSAGE constant declaration in HelloWorld . java to ensure consistency in naming conventions
refactor file action handling in FileDisplayActivity by introducing a method to retrieve the OCFileListFragment to improve code organization and encapsulate
added a daemon flag to ReplicationHandler and improved error handling in SnapPuller to ensure graceful shutdown of the puller and handle potential
removed unnecessary whitespace in the update method call to improve code readability and maintain consistency
updated the constructor of ` StreamerLoader ` to accept a ` MaterialHolder ` parameter and added logic to remove the ` rocksimComponentFile
added " Core Library " and " Controller / Gamepad API " entries to the DependencyBank . java file to provide clearer guidance for
updated RecycledViewPool settings in AppsContainerRecyclerView . java to optimize memory usage based on available height and number of apps
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` for building binaries to ensure
improve example baritone control to allow for more than 30 block
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to facilitate the creation of procedure
added support for null bitmap handling in FilterOperatorUtils and corresponding test cases in NullHandlingEnabledQueriesTest to enhance filtering capabilities and ensure correct behavior
updated validation logic for bootstrap method arguments in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap methods
camel - jms : fix test failure on window
removed clearing of formatter settings in CucumberInstrumentation . java to improve performance by reducing unnecessary object creation
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and updated related logic in ` PrincipalAttribute
adjusted workspace label visibility based on cell size and icon size to ensure workspace labels are only hidden when appropriate
updated assertions in ReplicationFactorTest to use a new utility method for clarity to improve readability and maintainability of the test code
llvm : do n ' t call context . initialize when pre - initialization be call .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to ensure tests
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced Integer . valueOf ( ) with Integer . parseInt ( ) in VisualScoreTagTest . java to improve performance by avoiding unnecessary box
updated error messages and modified file tree walking parameters in Copy . java to improve clarity of error reporting and ensure maximum value limits for file
refactor segment name checks into a separate method ` isHighLevelConsumerSegmentName ` and ` isLowLevelConsumerSegmentName ` to improve
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure
replaced the use of ` now ( ) ` with ` currentTime ( ) ` in the ` DueDateBusinessCalendar ` class to
updated the return statement in TargetCpuType . java to include " - target " and " x86 _ 64 - none - linux - android
added a method ` deleteAllFiles ( ) ` to ` FileDataStorageManager ` , ` ManageAccountsActivity ` , and ` FileStorageUtils
updated command - line argument format in SchemaCrawlerCommandLine . java to improve clarity and consistency in help documentation
added a new method ` createSuiteDescription ` to create a ` Description ` class and modified the ` equals ` and ` equals ` methods to
replaced the usage of ` Hashtable ` with a direct call to ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related imports to simplify the constructor and eliminate unnecessary dependencies
added unit tests for range past end and start in GWCZoomContextFinderTest . java to ensure correct range handling in ZoomContext
added a new configuration key for dependency tracking in JRubyScriptEngineConfiguration and updated JRubyScriptEngineFactory to enable dependency tracking functionality based on
updated method call from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to improve clarity
do n ' t try to announce new keyspace if it already exist
improve welcome window performance by caching image
updated tuner configuration handling in SettingsManager and RTL2832TunerController to check if the tuner is running before adding it to
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enhance testing capabilities for sh
added a condition to include the " db : hsqldb " string in TestFilter . java to ensure compatibility with the HSQLDB database
reformatted the conditional statement in JavabinLoader . java to improve code readability and maintainability
truffle : do n ' t call materializeHostException when there be no stack trace
refactor service loading logic in GraalServices . java to improve readability and maintainability to enhance code clarity and maintainability while ensuring
add unit test for duplicate command handler resolver
[ flink - 20865 ] [ runtime ] add support for fine - grained shuffle mode in batch job
fix fish hook not work with vanilla block . close # 3323
camel - 14284 : fix doclint warning in camel - ftp
renamed ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class and related methods to improve cl
added a check for empty items in AppsContainerRecyclerView to avoid unnecessary processing when no items are available
added a conditional bean check for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration to ensure the bean is only
refactor XMLLayout to use StringBuilder instead of StringBuffer and add properties property management to improve performance and flexibility in XML layout configuration
added a method to remove the " responseHeader " parameter from multiple classes to enhance header management functionality in response processing
updated the return statement in ` EscherProperty . java ` to use ` getPropertyNumber ( ) ` instead of ` _ id ` and added
updated method call to use ` Description . getBuildRuleType ( key . getSimpleName ( ) ) ` instead of ` getBuildRuleType ( key .
make sure that the method numberer be modify before the scene be remove .
fix nullpointerexception in tradedatavalidation . testifdisputeTriesReplay ( )
added ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified method signatures in ` DatabaseSchemaCrawler ` and ` TableRetriever
wallet : set transaction confidence type not _ sequential in favor of not _ sequential
refactor HttpClientIntroductionAdvice to use headerName for header handling to improve clarity and correctness in handling HTTP request headers
update CraftingHelper to skip JSON files based on root relativize and conditions to ensure proper processing of conditions before processing JSON files
hbase - 2594 hregion . close ( ) should log a warning if open region fail
refactor comparison logic in Credential . java to use a variable for length checks to improve readability and maintainability of the code
[ java ] do n ' t check if the subscription have an image .
updated the ` destroy ` method to throw ` InterruptedException ` and simplified process destruction logic to improve error handling and simplify the process destr
added support for Oracle in the MySql and Oracle conditions to ensure compatibility with Oracle database scenarios
camel - 15836 : fix npe in case the mail store be not connect to the mail store
added token consumption checks in the parser to ensure that more tokens in the query are consumed to prevent parsing errors when there are more tokens in the
camel - 16321 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the model initialization logic in ` Voice . java ` to
added emailDomain field and corresponding getter and setter methods in LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable dynamic configuration of the email domain for
added request timeout constants and their getter methods in Configuration . java and updated ViewRegistry . java to use it to improve configurability by allowing
do n ' t execute deferred concept if there be no link to save
added RedisCategory import and JUnit experimental annotations to RedisServiceRegistryTests to improve test categorization and categorization for Redis services
updated the ` FindDeprecatedMethodsTest ` and ` FindDeprecatedUses ` classes to accept a ` String typePattern ` parameter and modified the method
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the component in the W
removed unused imports from multiple classes to clean up the code and improve readability
updated event signature handling in ContractEventTriggerCapsule , LogEventWrapper , and LogEventTriggerCapsule classes to include a full event signature
updated the filter condition from ` contains ` to ` endsWith ` in ` FileTestHelper . java ` to ensure that the file name does not
replaced the ` clearRect ` method with ` fillRect ` and updated the background color setting in ` MapView . java ` to improve
refactor the compilation logic in PackageBuilder . java to include an else block to improve code readability and maintainability
removed debug print statements from multiple Java files to clean up the code and improve readability
added a null check for score before asserting it in TestFieldCacheSort to ensure that tests are only executed when score is non - NaN
replaced direct assignment of oldKeys with a copy of the oldKeys set to ensure that oldKeys cannot be modified from the deviceProfile
added checks for zeroTime cases in ColumnSnapshotGenerator and created a new test for date default values in MySQLIntegrationTest to ensure proper handling of
renamed ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and updated related
updated type parameters for ` vsContext ` and ` vsContext ` in multiple collector classes to use wildcard generics to improve type safety and eliminate unchecked
[ drools - 6352 ] fix the problem of multiple kbases when edit a session
updated HiveMetaStoreClient initialization to use ' this . conf ' instead of ' conf ' to ensure proper reference to the HiveMetaStoreClient
added a conditional check to return early if the modalness equals the mModalness to optimize performance by avoiding unnecessary processing when the modalness
added a test for creating a video profile level in ShadowMediaCodecListTest and implemented the native _ getGlobalSettings method in ShadowMediaCodecList
added a requestFocus ( ) method to the confirmButton in EditOfferView . java to address issue # 5460 to ensure the confirm button
added validation to ensure width and height parameters are non - negative in SunVolatileImage , X11SurfaceDataProxy , and XRPM
updated the separator in FormatData _ uk . java from " . " to " \ u00a0 " to ensure proper handling of Unicode
replaced ` int [ ] _ loops ` with ` AtomicInteger [ ] ` in ` AsyncStressTest . java ` and ` Stress
added beta flavor handling in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback when achievements are unavailable or
added access , name , and desc fields to the SearchMethodVisitor class to enhance the functionality of the Search class by providing access and description information
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and improved exception handling in IoTDBInsertWithoutTimeIT . java to
refactor duration setting logic in DLNAResource . java to improve code readability and maintainability
fix xml element name for stream - resequencer and batch - resequencer
[ flink - 20613 ] [ table - planner - blink ] fix race condition in tablereadertxnscoreboardinterceptortest
flume - 1353 : use ssl . keymanager . algorithm instead of hard - coded keymanager _ type and trustmanager _ type
refactor ` getSingleSourceApplicableTest ` method to use ` Applicability . or ` instead of ` JavaIsoVisitor ` to improve code
added a exit ( ) call to the exit ( ) method in Blockmania . java to ensure that the exit ( ) method is called
replaced the return value of ` PACKAGE _ PRIVATE ` with ` NONE ` in multiple classes to standardize the accessSpecifier implementation across the codebase
renamed the method ` unHandled ` to ` unhandled ` and introduced a new class ` T6199153 ` with a new class `
updated stripe handling logic in OrcInputFormat . java to ensure correct retrieval of stripe statistics based on orc tail conditions
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated URLs from " http : / / myhentaicomics . com " to " https : / / myhentaicom
added command - line argument handling for the " v " option in App . java to provide users with information about the current version of the JAR
fix ( export ) : use splittokens ( ) instead of split ( )
refactor rotation handling in ConsoleActivity and add input connection handling in TerminalView to improve user experience by ensuring correct rotation behavior based on keyboard settings
changed the type of the priority queue from HitQueue to PriorityQueue < ScoreDoc > to improve type safety and eliminate unchecked warnings in the
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 15836 : camel - jolokia - make the headermapfactory class name configurable .
updated formatting in JavaCompiler . java and Diagnostic . java to improve code readability and maintain consistency
int - 1566 - jmsoutboundgateway now extend from initializingbean instead of volatile
updated the argument in the expect method from ' i + 1 ' to ' i2 ' in ArrayFunctions . java to correct the logic for
refactor script engine initialization and error handling in AbstractScriptProcessor and InvokeScriptedProcessor to improve code clarity and ensure proper initialization of script
added PostgreSQL PGStatement support to the PooledConnectionImpl and ConnectionPoolTest classes to support PostgreSQL statement handling in connection management
flush memtable and refresh size estimation in cassandraiotest
changed log level from error to warn in AtomicRemainder . java to improve logging severity for memory allocation issues
do n ' t sort candidate ' s min timestamp when ttl be aggressive
fixed - rblockingdeque / queue . pollall ( ) method throw npe if timeout be 0 . # 5371
removed the format parameter from the printMap calls in JobInspectCommand . java to streamline the output by eliminating unnecessary formatting
refactor Engine class to improve code readability to enhance maintainability and facilitate future updates
replaced ` Stream . of ( children . values ( ) ) ` with ` Stream . of ( children . entrySet ( ) . map (
[ issue # 5370 ] fix acl client to use sessioncredentials ( # 5370 )
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling of
[ zeppelin - 4892 ] do n ' t print stacktraces to stderr when interpretergroup be null
fix expressionnodeevaluator to use ' lt ' instead of ' funn '
changed access modifiers of methods in NodeIdAccessor from public to package - private to restrict access to these methods for better encapsulation
cloudstack - 4892 : improve error message when fail to create snapshot
removed the ` public ` access modifier from several methods in ` ItemWriter . java ` to enhance encapsulation by restricting access to the methods
updated the Thing instantiation in RoombaHandlerTest to include a test identifier to enhance test coverage for the Roomba functionality
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced ` FSDirectory ` with ` RAMDirectory ` for directory creation in ` TestNorms . java ` to simplify directory management by using
added a new static variable ` mLineHeight ` and modified the line height assignment logic in ` Utils . java ` to ensure that the line
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future updates
do n ' t use hat . js in oqlengineimpl . getinitstream ( )
remove the menu item from the button group in chattransportselectorbox to ensure the menu item is properly removed from the button group
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
update bsqblock explorer initialization to handle null values safely to ensure proper handling of null values when the bsq block explorer is unavailable
added methods to manage session attributes in StandardSession and Session classes to enhance session attribute management functionality
added assertions to verify the name and along of the getPlainBean in TestDbJson _ List . java to ensure correctness of the
replaced ` pageSize ` with ` initialPageCount ` in ` MonotonicAppendingLongBuffer . java ` to ensure accurate memory allocation for
refactor BatchCommandLineLauncher class for improved readability to enhance maintainability and facilitate future updates
added DataSource and TransactionManager beans to BatchMetricsApplication to enable integration with HSQL databases and transactions in the BatchMetrics application
changed the implementation of the GlowrootLogHttpService class from UnauthenticatedHttpService to HttpService to simplify the service implementation by removing unnecessary
pdfbox - 4892 : set graphics . setgraphicscompositesource and graphics . setgraphicscompositesource in order to
removed synchronization from ` close ( ) ` method in ` DocumentsWriter ` and added synchronization in ` DocumentsWriterPerThread ` to improve
added getter and setter methods for multiple and validation constraints in UiBinding . java to enhance the flexibility and usability of the UI component by
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency and clarity to improve code readability and
bug 52997 - jmeter should not exit without save test plan if save before exit
refactor affix to use regex pattern instead of string
updated generic type declarations in KrakenAdaptersTest . java to use diamond operator to improve code readability and maintainability
added import for CharTermAttribute and retrieved it from tokenStream in DefaultIndexingChain . java to utilize the CharTermAttribute from the token
refactor NBJavacTrees . java for improved readability to enhance maintainability and clarity of the codebase
removed unsupported encoding check for dataEncoding in VectorizedPrimitiveColumnReader . java to streamline error handling for unsupported data encodings
added a MarkerFactory import and modified log message formatting in HttpSolrCall . java to enhance logging clarity and ensure proper context for admin admin
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener to ensure proper cleanup of metadata service proxy instances
add defaultentityqueryrepository . max _ level _ default to prevent infinite recursion
updated the message construction logic in HubChangeExecListener to handle null changelog IDs to improve clarity of error messages when changelog registration fails
improve test case to handle bad barcode format
updated the return type of executeCompilation and executeCompilation methods in CxxPreprocessAndCompileStep . java to ProcessExecutor . Result and added
refactor event handling logic in ObjectStore . java to improve clarity and efficiency to enhance code readability and maintainability by eliminating
removed redundant checks for @ ConfigurationProperties annotations in ValidatedLocalValidatorFactoryBean . java to simplify the code and improve readability by elimin
clear temporary block entity before create new one . close # 399
[ hotfix ] [ test ] remove unnecessary check for exact type in intrinsificationarraycopyphase
remove log level set in testcoyoteadapter . java
removed the WantedAnywhereAfterFollowingInteraction class and updated stack trace handling in Reporter and PointingStackTraceToActualInvocationChunkIn
added validation for owner and key accounts in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure contract integrity by validating the existence of
jsweet 2 catch - up http : / / code . google . com / p / mybatis / issues / detail ? id =
chore ( regen ) : update documentation for v2bet and v2bet from 2.15 . 0 to 3.
replaced ` addProperty ` calls with ` setProperty ` for setting metadata properties in ` BaseSingleTreeBuilder . java ` to improve code readability and
updated the instantiation of ` AsmLoader ` to use the interface class loader to ensure proper loading of classes from the interface ' s class loader
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
updated Java2TypeScriptTranslator to conditionally export namespace based on the ` isDefinitionScope ` flag to ensure proper handling of namespace declarations based
replaced ` EmptyServerHandler ` with ` AbstractHandler ` in ` HttpClientTest . java ` to ensure that the ` AbstractHandler ` is
simplified the listener setup by removing unnecessary array creation to improve code readability and maintainability
[ hotfix ] fix npe in abstractsqmpath . getlhs ( )
updated package declarations for test classes to ensure consistent packaging for test
refactor image handling in AwtCanvas . java to conditionally filter images based on the image type to improve image processing flexibility and maintain
initialize libgraal and libgraal if native image be already set
removed unused class and updated timestamp calculation in ParDoTest . java to streamline code by eliminating unnecessary complexity
updated response handling in MockPhishingProtectionServiceV1Beta1Impl . java to use poll ( ) instead of remove ( )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class for improved clarity to enhance maintainability and readability of the code
log a warning if the max size of a map do not allow any data in the map
corrected the spelling of " AST " to " LST " in multiple Java files to correct the spelling of " LST "
refactor scoreables and nThreads calculations in ThreadedAcousticScorer . java for improved clarity and efficiency to enhance
replaced AssertionError with a null return in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls from ` getServerAddress ( ) ` to ` window ( ) ` in ` ApplicationControllerFluentLeniumTest . java `
added a new ` makeString ` method implementations across multiple iterable classes to provide a unified approach for converting strings to strings across different iterable implementations
replaced hardcoded order with a constant for the default order in OidcServicesManagerRegisteredServiceLocator to improve code readability and maintainability
added a predicate for weak association rules in the WeakAssociationsAnalyzer class to enable flexible validation of proposed weak associations based on custom
refactor Deflater class for improved performance to enhance efficiency of compression operations
added a try - catch block to handle exceptions in Font . java to ensure that IOException is thrown in a finally block to improve error handling by
added a null and empty check for content in VersionTypeBinding . java to ensure that a valid version is returned when no content is provided
refactor NearbyListFragment to simplify the place retrieval process by directly accessing the item at the position to improve code clarity and reduce
updated content type check to be case - insensitive to ensure consistent handling of content types regardless of case
change access modifier of AUTH _ MAGIC from private to public in OpenSSHPrivateKeyUtil . java and update format logic in OpenSSHPrivateKeySpec
modified ` updateItemLocationsInDatabaseBatch ` to accept a boolean parameter and adjusted folder name handling accordingly to enhance flexibility in handling folder names
replaced specific Hibernate annotations with a wildcard import and added JPA access logging in InheritanceCacheTest . java to improve code readability
updated import statements in ConnectOAuth2RequestFactory and added the getUserApprovalRequest method in TofuUserApprovalHandler to ensure compatibility with the
fix name convention not apply to tag value ( # 645 )
improve error message when there be no resolution for a marker
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to ensure compatibility with the latest cookie standards
added a static method ` classMetadataUnsupported ( ) ` to ` Platform ` and updated its usage in ` Subject ` and ` Platform ` classes to
added a ` mClearAllButton ` and ` mClearAllSpace ` preferences to manage the visibility of ` mClearAllButton ` and
updated desiredRepoVersion variable to be final and added a null check for existingCSVer in ClusterStackVersionResourceProvider and HostStackVersionResource
deleted the MemoryLeakTest . java file to the test was deemed unnecessary or redundant
updated the return statement in ServletTester . java to include the local host address to enhance clarity of the returned URL by including the local
added a check for USE _ MVDWAPI in the Bukkit configuration and updated the BAN _ DELETER flag in Settings
test : assert cluster size eventually for hazelcast instance in abstractpartitionassignmentcorrectnesstest .
added a singleton implementation for the FFIProvider class to enable flexible instantiation of FFI provider based on JNA configuration to enhance flexibility
added a new test method ` testHierarchicalWFileList ` to ` BatchProcessTestTest ` to verify the functionality of hierarchical file list lists
added null checks and null handling for mongoPersistentEntity in MongoTemplate . java and corresponding test cases in MongoTemplateTests . java to ensure robust
updated Position initialization to use NODE _ LIST instead of 0 to ensure correct positioning based on direct input and successor counts
added an ` accTradeValue ` field and its getter method in ` BithumbTicker ` and updated ` BithumbTradeServiceRaw
updated logging statements in RealtimeSegmentDataManager and AvroUtils to use parameterized logging for better readability to improve performance and maintainability of logging
changed maxParallelThreads to MAX _ PARALLEL _ TASKS and updated related references to improve code readability and maintainability by using
replace ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex classes to ensure thread -
refactor multiple dictionary - related classes for consistency and clarity to improve maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during processing
fix camel - msv test which fail on slow machine .
updated boundary check from ` beginCycle = = ` to ` beginCycle > ` in ` DelegationService . java ` to ensure that the
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore . java and modified assertions in CodeStoreEndpointsTests . java to
added a check for UniqueConstraint before matching the table in StandardObjectChangeFilter to ensure proper handling of UniqueConstraint instances during object comparison
updated the handling of language codes and descriptions in MediaDetailFragment . java to improve accuracy in identifying language codes and enhance code readability
added catch block for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error handling for array and class casting issues
api : add withreferencefilter ( string , collection < string > ) method to listimagecmd
camel - jms : remove the bridgeerrorhandler property from the camel - jms endpoint builder
added conditional checks for specific conditions in OpExclusionUtils . java to handle cases where no ops are found for exclusion to ensure proper handling of
added return statements to return false in DatabaseCommand . java to ensure proper handling of database operations
refactor Politician instances to use named constants instead of hardcoded strings to improve code readability and maintainability by reducing red
[ zeppelin - 4892 ] fix nullpointerexception when initfile be empty
camel - 14263 : camel - restlet should use the default port for the restlet component .
removed unused block imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline code by eliminating
set the maximum query length to 100MB in QTestUtil . java and remove the overridden configurations in SessionState . java to improve performance by
changed visibility of userName and userName fields from public to private in WebServer . java and refactored HTTP configuration methods in WebServer . java
updated method names from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSink " across multiple files
updated the condition for comparing the " spark . app . name " configuration in HiveConf . java and modified the application name assignment in HiveS
rename variable ` whiteName ` to ` includedName ` for clarity to improve code readability and maintain consistency in naming conventions
simonstewart : add maximize support to the driver servlet
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , DefaultProjectFilesystemFactory , DefaultProjectFilesystemFactory , and Default
added an assertion to check for the presence of " entity expansions " in the error message to ensure that the exception message is correctly validated
replaced direct calls to ` ibuffer . get ( ) ` with ` ibuffer . get ( ) & 0x7FFFFFFF `
added a null check for the form ' s customized property in DirectMethodHandle . java to ensure that the form ' s customization functionality is
refactor line buffer initialization and boundary checks in LineChartRenderer . java to improve code readability and maintainability by using descriptive variable names
refactor flavor checks in AndroidBinaryDescription to use a for - each loop instead of multiple if statements to improve code readability and maintainability
updated variable name from ' offset ' to ' i ' in LwjglGL11 . java to improve clarity and consistency in buffer
added two new Java files , Property . java and PropertySuper . java , along with a corresponding test class TestClassResolutionFail . java to
do n ' t terminate the shutdown hook if the group property be not set
updated FilterChainProxy to use FilterChjainProxy instead of FilterChainProxy and removed the URL parameter from the VirtualFilterChain constructor to
replaced ` Collections . sort ` with ` Arrays . sort ` and updated return statements in ` PercentileAggregationFunction . java ` to improve
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider . java and modified MDTable assignment in QueryTypeAnalyser .
initialize baseType to null in DatabaseInfoRetriever and set literalPrefix and localizedTypeName to null in MutableColumnDataType to ensure proper initialization of data type
updated link syntax in multiple Java files to use placeholders instead of hardcoded strings to improve code readability and maintain consistency with Java naming conventions
refactor evaluator instances to be static final in EvaluatorFactory . java to improve code clarity and enforce immutability of evaluator instances
updated references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " across multiple files to ensure consistency
added sound effect handling in AllAppsView . java to enable and disable sound effects for better user experience
changed the exception type from Exception to IOException in the main method to improve error handling by providing a more specific exception type
added a call to setGranularityEnabled ( true ) in BarChartActivitySinus . java to enable the left axis ' s granularity for
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated ContextHandlerGetResourceTest to use MavenTestingUtils for file existence checks and added OS _ ALIAS _ SUPPORTED flag to enhance test reli
added close ( ) methods to multiple connection classes to ensure proper resource management and prevent potential resource leaks
refactor SocketRemoteTest , MockAppender , SocketServerFunctionalTest , and SocketServerFunctionalTest to use a BlockingQueue for event
[ beam - 4142 ] fix flaky test of hadoopresourceidtest
removed unused static imports from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
removed duplicate code in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified the condition for starting touch tracking in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated theme handling in NavbarButtonsViewController . java to use a dynamic UI mode based on the current theme to improve visual consistency and
added an exception to the abort statement in PolyBenchLauncher . java to improve error handling by throwing an exception instead of throwing an exception
updated variable names and methods in ClassWriter . java for clarity to improve code readability and maintainability by using descriptive variable names
added BlockFormattingContext parameter to findBox , findElementBox , and findElementBox methods in BasicPanel . java to enhance layout handling by
added a nullable nullable annotation and implemented error output handling in WorkerProcess and WorkerShellStep classes to improve code clarity and provide a way to
added null checks and exception handling for null operators in CheckedListReplaceAll . java to improve robustness by ensuring non - null operators are handled
added a ` _ testFill ` flag and a ` FutureCallback < Void > ` to ` SslConnectionTest ` to control the behavior of
refactor DeviceFlag and FeatureFlags classes to improve listener registration and enforce immutability to enhance code clarity and enforce immutability for
added JUnit Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue 2.2 . 0 gh - 111
removed the import of MalformedURIException from StandardRequestHandler . java to clean up the code and improve readability
[ # 11818 ] instructorfeedbackeditpage : use focus ( ) instead of focus ( )
removed unnecessary synchronization block in KrakenStreamingTradeService . java to streamline the subscription process by eliminating unnecessary synchronization
change system . err to system . out for ignored class - path entry
added a randomAccessRows flag to the SparseRowMatrix constructor and modified related methods to support deep copying of rows to improve flexibility in matrix
cloudstack - 4892 : do n ' t persist volume delete event if the volume have no poolid
updated Hive configuration handling for HIVE _ PLAN and HADOOPJT in Utilities . java to ensure correct path is used for
[ beam - 13413 ] use guava v26.0 jre instead of guava v1.0 . com in u
fix memorycallgraphbuilder to properly reset internal state
fix npe in conferencechatmanager when there be no multi - user chat
ggb - 1346 save . save ( ) should check if the file be write
added FolderSyncActivity to handle folder sync navigation in DrawerActivity and created FolderSyncActivity to enhance user experience by providing quick access to folder
[ hotfix ] [ test ] fix resource leak in sequentialchannelstatereaderimpltest
improve spanishtreenormalizer to handle comma
replaced the method of obtaining the point value from the heapPointWriter to use the getPackedValueSlice method to improve efficiency by directly
added a new ` LocaleRandomizer ` class and its corresponding test in ` InternalRandomizerRegistry ` and ` LocaleRandomizerTest ` to
tika - 2696 -- add mime type detection for font printer metric
[ netbeans - 2066 ] update pluginimporter and upgrader tool to look for netbeans
reformatted code in TCPTransport . java for consistency to improve readability and maintainability of the code
modify the read method in Http2AsyncParser to include a default value of 0 to ensure that a non - blocking read operation does not proceed
updated the default WATCHER _ INITIAL _ DELAY value from 120 to 600 in TimelineMetricConfiguration . java to improve performance by allowing
updated SQL syntax in SelectStatement . java to improve readability to enhance code clarity and maintainability
added date - related imports and parsing logic in ThirdEyeJiraClient . java to enhance date handling capabilities in the application
refactor PriorityGenerator to use a new PriorityGenerator for generating priority headers to improve code clarity and maintainability by centralizing priority generation logic
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE and updated the scalarReplace logic to check if the entire class length exceeds
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder and fileSortOrder to include DATE _ TAKEN to enhance media
updated drawing parameters in TexturePacker2 . java for image dimensions in TexturePacker2 . java to correctly account for image dimensions and height
refactor JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use ServletContextHandler instead of FilterHolder to improve code clarity and
added shutdown calls to validateSignService , transactionHandlePool , and nodePersistTaskTimer in NodePersistService to ensure proper resource cleanup and prevent
added RawJsonRequestBody annotation to the JaxrsSwaggerGeneratorContext and implemented it in the Echo and TestJaxrs classes to enable the
added a new method ` newTarget ( int targetType , TargetExtension ) ` to ` LoggerUtils ` to facilitate the creation of
updated ListBeanContainer to return an empty list instead of an empty list and added a new test class for BeanContainer functionality to ensure that the
hbase - 25832 testmetricsregionserver . testblockcachecounthitpercent fail on slow machine
camel - 16462 : fixed resource leak in cachedoutputstream . close ( )
fix teltonikiproduc - add deviceid to position
updated the method of reading the first line from ` Files . readFirstLine ( ) ` to ` Files . asCharSource ( ) `
added a null check for the operator in the visitAssignOp method and created a new Test class with an unknown class to ensure operator is initialized
added a conditional check for account handling in BaseActivity to ensure that mixinRegistry . onCreate is only called when account handling is enabled
refactor isochroneresource to use heuristicallyfindmainconnectedcomponent ( )
updated DrillViewTable to accept a list of paths instead of a single View to enhance flexibility in view management by allowing specification of paths
added default configurations for the PooledByteBufAllocator in the constructor to enable dynamic configuration of the pool memory allocation based on system properties
updated the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to ensure correct
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE and updated the executor initialization in LlapIoImpl to allow dynamic
added Java version checks for SSL logging in SecurityServicesFeature . java to ensure compatibility with Java 8 and above for substitution functionality
added bounds checking for latitude and longitude range in LatLonGrid . java and introduced a new test for polygon growing in TestLatLonGrid
simonstewart : add expectedcondition . invisibilityofelementwithtext ( ) and expectedcondition . refreshed ( ) to expect
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its usage in the ` replaceFiles ` method to
added a test for the ` getOuterClass ` method in ` ReflectorTest . java ` to verify the behavior of the ` getEnclosing
updated configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources " to
refactor message handling in HubChangeExecListener to use a string variable for better readability to improve maintainability and clarity of log messages
added properties property handling and corresponding getter and setter methods in Link . java , along with corresponding tests in QuickLinksConfigurationModuleTest . java to
removed @ EqualsAndHashCode annotations from InitialConfig and added toString method in YamlConfigFileDTO to streamline code and provide a clearer string representation
updated generic type usage in AwaitableServerClientCallConfiguration . java to improve type safety and clarity to enhance code readability and maintain
added CallerSensitiveAdapter support and modified forName methods in Class . java to enhance class loading functionality with caller - sensitive adapter support
updated ` RequestItemRepositoryIT ` to use ` IsEmptyString ` instead of ` isEmptyOrNullString ` to improve clarity and functionality of token
replaced instances of ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to ensure compatibility with the new
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow external access to the setSecurityContextAccessor method
updated ` TimeStepdefs ` to use ` Calendar ` instead of ` HumanTime ` for improved date handling to enhance clarity and
move spark _ isolated , spark _ recessive , and spark _ recessive to a separate pattern to make it easy to add the
updated the ` RestProxyFactory ` constructor parameters to use ` getUri ( ) ` instead of ` ExchangeSpecification ` to improve clarity and consistency
removed multiple print statements from RecordGenerator . java to streamline output for better readability and maintainability
camel - 16462 : camel - kafka - do n ' t commit kafka offset if auto - commit be enable
added outputStatement ( sql ) and hasDatabaseChangeLogLockTable flag in LoggingExecutor and StandardLockService to ensure proper handling of database change
updated suppress warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include " rawtypes " and " serial " to improve code cl
added synchronized keyword to several methods in Database and SessionRemote classes to ensure thread safety when accessing shared resources
refactor springbootautoconfigemojo to use a new resolvedproperty class to improve clarity and maintainability of the code
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure
camel - 16462 : fixed the build error of camel - jms
replaced ` UUID . randomUUID ( ) . toString ( ) ` with ` System . getProperty ( " testId " ) ` in `
[ hotfix ] [ core ] synchronize date and number format in defaultjobparametersconverter
remove empty list item from ` io . reactivex . package - info . java ` ( # 4874 )
updated height scale setting from 256 to heightScale in FractalHeightMapGrid . java to improve flexibility by allowing dynamic height scaling
updated equality check from ` equals ` to ` notSame ` in ` SecurityConfig ` and updated test assertions in ` SecurityConfigTests ` to
[ hotfix ] [ table - common ] set dump - partition - id default to false
added unit tests for TronTXOutput and TronTXOutputs in UTXOSetTest . java to enhance test coverage for Tron
pmd : fix false positive for unused variable name
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new test method to verify job parameters override previous restart parameters in JsrJobOperator to ensure that job parameters override the previous restart parameters
added a new boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the `
refactored principal initialization logic in JaasAuthenticationHandler . java to improve code readability and maintainability
refactor core closing logic to use a separate thread pool for better resource management to improve concurrency handling and ensure proper resource management during core shutdown
removed unused imports and added visibility logic for mActionsView in RecentsView . java to improve code clarity and ensure proper handling of
refactor parameter handling in RunIdIncrementer . java to improve null safety and clarity to enhance code readability and maintainability
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
added tests to validate the functionality of ` getMatchedDevices ` in ` SchemaRegionBasicTest . java ` to ensure that the ` getMatched
improve logging of metric event error ( # 8553 )
updated the calculation of mSumChange in EigenvectorCentrality and added a new EigenvectorCentralityBuilder class
replaced instances of ` Registry . REGISTRY _ PORT ` with ` TestLibrary . getUnusedRandomPort ( ) ` in multiple files to
geopackagegenerator : update geometryinfo , geometrydata , and geometrydata . setindices ( ) and geometrydata . settype ( )
updated the Amplifier setting in BlockEntityBeacon . java from 2 to 0 to adjust the Amplifier for the beacon to ensure
refactor TubeCalc class to improve code readability to enhance maintainability and facilitate future updates
servicehttpclientfactory : disable health check by default
changed the type of the ` groups ` list from ` List < Class > ` to ` List < ? > ` and added sanity checks for
added a new key and a timeout of 500 bug8057791 to the JList component to address issues related to the headful selection
fix # 322 - allow speedment application to exit via main method completion fix # 322
fix an issue with the lexica botania ' s lexica botania ' s lexica botania
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to ensure proper
camel - 16462 : camel - jms should use lazy session creation for camel - jms
added an ` RecordReader ` parameter to the ` initIOContext ` method across multiple classes to enhance the functionality of the ` initIOContext
remove leftover of java 8 classloader relate code that go away with java
added a new method ` configurationChanged ` to ` FileStore ` and updated related logic in ` JavaLanguageServer ` , ` ScanClassPath `
added try - catch blocks around session callback registration and unregistration in PackageInstallerCompatVL . java to improve error handling by catching potential
updated createIndex calls to include " 23 . cfs " and " 23 . nocfs " alongside " 22 . cfs " to
added a constructor parameter to the createAndStart method in AkkaRpcServiceUtils to enhance flexibility in creating AkkaRpcService instances
added a retry condition to set the maximum attempts for mapreduce in TestExportSnapshot . java to ensure that mapreduce . map . maxattempts
pdfbox - 4892 : do n ' t set non - symbolic for font - specific font in pdftype1fontembedder
added a new test class ` SslConnectionTest ` for verifying SSL connection closure in the Jetty client to ensure proper handling of SSL connections
added validation for IPv4 and IPv6 address types in InetAddress and NetworkInterface classes to ensure that only IPv4 and IPv6 addresses are processed to
added a test method to serialize date objects in a collection in DefaultTypeAdaptersTest . java to ensure correct serialization of date objects in a collection
refactor Message class for improved clarity to enhance maintainability and readability of the code
added debug logging for SQL generation and adjusted the condition for determining the first update key to improve debugging capabilities and ensure correct handling of the first update
adjusted the loop condition in TableOutput . java to correct the loop logic to ensure the loop does not exceed the defined maximum width
pdfbox - 4071 : avoid npe , a suggest by valerybokov
formatstringchecker : set priority to high when there be no format string
add a property to ignore non - final loop variable in for - each statement
updated PDFExporter to set PDF version and set full compression in PDFExporter . java and modified PDFExporterTest to use Java . gex
added unit tests for the LdapUserDetailsMapper class to ensure correct mapping and retrieval of role attributes in the LdapUserDetailsMapper
make ldap read timeout configurable
refactor TestDescription and related classes to improve code organization to enhance maintainability and readability of the test suite
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
renamed ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the handler is invalidated before proceeding to ensure proper handling of gestures when the state handler is invalidated
updated dimensions for folder creation and rotation calculations in Workspace . java to improve layout responsiveness and responsiveness during folder creation
updated property handling in OciConfigConfigSource . java to use ConfigProviderResolver instead of ConfigProvider to improve clarity and maintainability of
refactor Testjsig . java for improved readability to enhance maintainability and facilitate future development
updated mana calculations to account for the count of mana in multiple classes to ensure accurate mana calculations based on the current count of the
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings related to serialVersionUID
refactor tsFile validation logic to improve clarity and error handling to enhance code readability and maintainability by using more descriptive variable names
added two new classes ` Switch21 ` and ` Switch19 ` , ` Switch21 ` , and ` Switch19 ` to implement pattern matching
updated error messages in ComparableSubjectTest . java to use " java . lang . String cannot be converted to test " java . lang . String
updated StreamHelper to use Internal and added a new TestStreamHelper class for XML processing to enable XML standalone functionality and ensure correct behavior of XML
updated size validation and error handling in Int2ObjectCache . java and added equals method in Int2ObjectCache . java to improve robustness
add tests to ensure ordered execution of security filter chains in WebSecurityConfigurationTests to verify that security filter chains respect defined order in Spring security
removed the ` TimeInForce . GTC ` parameter from the ` MARKET ` constructor in ` BinanceTradeService . java ` to
updated FloatRangeRandomizer to extend AbstractRangeRandomizer and added validation for min and max values to ensure that the minimum and maximum values are
updated the escape character for the KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore .
camel - 16462 : camel - jms - add support for camel - jms in camel - jms .
added error handling for NoSuchFieldError in SourceUtils and created a corresponding test class TestGetBound to improve robustness by handling NoSuchFieldError
refactor LeafFilterFactory to use a new method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability
updated artifact name handling in BatchPropertyBeanPostProcessor and added teardown methods in StepContextFactoryBeanTests to ensure correct artifact name extraction and ensure proper
added a loop to read all available certificates from the certificate store in HttpsSegmentFetcher . java to improve robustness by logging certificate readings
modified the return type of getDefaultBooleanValue from boolean to String and added a new DnsFallback class for testing to improve handling of null values and
pdfbox - 4892 : add exception to defaulttheme . tostring ( ) for good error message
changed the data type of the ` url ` field from ` success ` to ` url ` in the ` DepositAddress ` class to
refactor the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to improve code readability and ensure proper
removed " address " from the scope list in CommonOAuth2Provider and its tests to simplify scope management by removing unnecessary " phone "
refactor submit logic to use a new Start class and update CountDownLatch to improve thread safety and ensure proper synchronization of the start state
added a new constant ` BIG _ DECIMAL _ 182 _ 04 ` and modified the ` WLedHandler ` to handle hue and saturation values
replaced the ` isValidCaller ` method with a ` isValidCaller ` method using a ` Set < String > ` instead of a ` Stream
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to facilitate the handling of JSR instances
update subscriptionactivatingsubscriber to use transactiontemplate instead of concurrenthashmap to avoid concurrentmodificationexception .
replaced SQL query execution with SQL update and insert statements in DBMSProcessor . java to improve clarity and functionality of database operations
added elevation handling for contact items in Lollipop and above to ensure compatibility with devices running Lollipop and above
rename ` typeInformation ` to ` identifier ` for consistency to improve code readability and maintainability by using a more descriptive variable name
replace direct usage of ` Files . readAllBytes ` and ` Files . write ` with ` Files . readAllBytes ` and ` Files . delete
added support for the ` ` [ ] ' ' operator in the Groovy parser and printer to enhance the handling of binary operations in the Groovy
updated warning log message to include the exception class name to improve clarity of the warning message for better debugging
updated byte handling in RecordInputStream and UnicodeString classes , and added a test for UMLatReadWrite in TestUnicodeWorkbook to ensure correct
added a test method to verify the download functionality of a file with different characters in the name to ensure that the file downloads correctly handles non -
replaced ` RuntimeException ` with ` CancellationException ` in ` AsyncResource ` and added a new ` isCancelled ` method in ` Fingerprint
added a null check for statistics before processing the cache to avoid potential NullPointerException when statistics is not initialized
added a test method to remove an object from an explicit collection in MongoTemplateTests . java to ensure proper functionality of the remove method in the
update copyright year from 2022 to 2022 in multiple Java files to reflect the latest copyright year and update copyright year
change the newline character from \ n to % n in the Coder class to ensure consistent line endings across different operating systems
added a new variable ` mIsClearAllButtonFullyRevealed ` and modified scroll logic in ` RecentsView ` and `
refactor HiveIcebergMetaHook , HiveIcebergSerDe , and HiveIcebergMetaHook to use a constant for
added a method to check if a server address is already in use and updated exception handling in multiple classes to improve clarity and maintainability of
added a command line argument to the TestNestmateAttr class to enable dynamic configuration of the test class path based on the system '
removed logging dependency and changed schema text detail type from verbose to verbose _ schema to improve logging clarity and consistency in schema output
remove unused import and add miss @ override annotation
# 1188 - add support for nested nested transaction use savepoint ( # 1188 )
replaced integer fetchSize with ThreadLocal < Integer > fetchSize in QueryProcessExecutor and MemIntQpExecutor classes to improve thread safety
[ java ] remove backoff and network idle strategy from embeddedping pong .
refactor the blockingHttpClient exchange and retrieve methods into a separate handleBlockingCall method to improve code readability and maintainability by reducing duplication
added logic to set the HDP version in the SliderAppsViewControllerImpl class to ensure the HDP version is set when it is
refactor JavacProcessingEnvironment to use reflection for reloading service loaders and close methods to improve resource management and ensure proper cleanup of resources
added a DeepCloner class and modified parameters in ParameterizedRobolectricTestRunner and RobolectricTestRunner to use it to
added bind for webserver . jepTTY _ SHOW _ STACKTRACE to false to ensure that webserver . jeppelin .
added a check to return null for OBJECT type in NativeObject . java to ensure proper handling of OBJECT types during object processing
refactor OopField initialization and introduce a new method to find well - known klasses to improve code clarity and maintainability by
updated ` JwkKeyListView ` and ` JsonWebKeyEndpoint ` to use ` PublicKey ` instead of ` RSAPublicKey ` to
[ gr - 24935 ] useonlywritablebootimageheap instead of spawnisolates when useonlywritablebootimageheap
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unnecessary dependencies
added ` getOwnerAddress ( ) ` method to multiple classes and implemented it in the ` CreateAccountActuator ` and ` TransferActuator `
http : / / issues . apache . org / jira / browse / amq - 4892 - add main class to demon
updated command sendCommand calls to use byteArrayMin and byteArrayMax when min and max are equal to Double . MAX _ VALUE to improve clarity
updated ProtobufAnnotationSerializer to use CoreNLPProtos . Edge . Builder and added checks for empty indices to improve code clarity and ensure
[ java ] remove the correlationid from the asynccommandidset when it be remove .
added saveConflict calls to FileDataStorageManager , FileDownloader , and FileUploader classes to ensure conflicts are only saved when the file is
replaced raw types with generics in multiple Java files to improve type safety and eliminate unchecked warnings
replaced imports of ` org . apache . solr . common . util . StrUtils ` with ` org . apache . lucene . analysis
added support for Oracle and MySQL driver properties in DatabaseFactory to ensure proper database configuration for Oracle and MySQL databases
updated the constructor of ` MockMethodInterceptor ` to include a ` handler ` parameter and added a serialVersionUID for ` serialVersionUID ` to ensure proper serialization
updated time calculations and logging in FileChangedExclusiveReadLockStrategy . java to use current time instead of timestamp to improve accuracy and clarity in
[ hotfix ] [ table - common ] wrap classloaders in executioncontext
added buffer change handling in TerminalView and updated buffer height calculation in TerminalTextViewOverlay to improve UI responsiveness and ensure proper display of
updated the processConfigFile method to improve filename handling and added null checks for pid to enhance code clarity and prevent potential null pointer exceptions
refactor disabledFreezeAction logic to use a conditional check for static calls to improve code clarity and ensure proper handling of static calls during
added a ` _ insecure ` property and its getter / setter in ` TlsConfig ` and modified the trust manager creation logic in ` T
refactor JavadocTool to use a local variable for source and class paths to improve readability and maintainability of the code
replaced ` nodeColumns ` with ` edgeColumns ` and introduced ` edgeIdColumn ` in ` ExporterGDF . java ` to
added cascade option to the @ OneToOne annotation in DefaultUserInfo . java to enhance data integrity by preventing duplicate relationships
replaced the ` getMessageId ( ) ` method with ` Arrays . equals ( ) ` in the ` Message ` class to improve object comparison
updated the response body from " ? ? " to " ISO - 8859 - 1 " in AsyncProvidersBasicTest . java to ensure correct
removed the ` isKeySerializerTypeVariableSized ` method from ` RocksDBSerializedCompositeKeyBuilder ` to streamline the code by
added a method to retrieve static permissions in ProtectionDomain and updated subjectPd assignment logic in SubjectDomainCombiner to improve encapsulation and
fix a crash when the recipe be n ' t present in the ingredient
added a loop to read the last parse index and modified the parsing logic to ensure that the parse index is read correctly before processing new data
added a ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to improve user
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to check for unsupported media types to ensure proper handling of
updated bitwise operations in NodeBitMap . java to use ' long ' instead of ' int ' to ensure correct bit manipulation for improved accuracy
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
refactor ConsoleUIService to replace gitBashConfigValue with useStdIn parameter for better configurability to enhance flexibility by allowing
replaced Mockito mocking with TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest . java to improve test clarity and ensure
replaced the declaration of the enclosingType variable with a direct reference to wrapped ' s getEnclosingType ( ) to simplify the code by elim
updated method names from ` getProperty0 ( ) ` and ` getConcatSeparator ( ) ` to ` getProperty1 ( ) ` and ` concat
do n ' t use a timeout in putallcallable . set ( )
[ issue # 5892 ] fix nullpointerexception when consumer be empty or not register ( # 5893 )
[ java ] generate source identity when create a driver .
added a new class TopTabAction to handle the " lalal " toolbar to provide a visual representation of the top tab in the application
camel - 16462 : dynamic router should start service if it ' s in progress .
refactor AggregateItemReaderTests to use JUnit 4 annotations instead of TestCase to improve readability and maintainability of the test code
added generics to the Procedure class in AbstractObjectValueTypeMap . java to ensure type safety and improve code clarity
added functionality to retrieve and display Wikidata edits in the AchievementsActivity and NetworkingModule to enhance user experience by providing
added a validation check for the length of ' len ' in OfflineSorter to ensure that ' len ' does not exceed short . MAX _ VALUE
added a new accumulator instance and updated the handling of absolute and long values in DumbMethods . java to improve bug tracking and reporting for minimum
refactor multiple dataset classes for consistency and clarity to improve maintainability and readability of the codebase
updated error handling in ` ProvisionClusterRequest ` to include acceptable credential type string to improve clarity of error messages for better debugging
updated random value generation in TestVectorUtil . java to ensure consistent range of values to improve randomness and prevent potential issues with negative values
changed the return type of ` compareBy ` from ` int ` to ` long ` and simplified the comparison logic in ` DateUtil . java
added SSL property handling in TestUtil . java and updated assertions in PGPropertyTest . java to ensure SSL property is set correctly to true and
added safebrowsing feature to ChromeDriverFactory and corresponding test cases in FileDownloadToFolderTest and FileDownloadViaProxyTest to enable
added null check before setting flight configuration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on configuration
updated DataTable , TableDiffer , and TableDifferTest to handle empty collections and added a new test for table differences to improve error handling
added a new static variable ` CustomIgnoreTag ` and modified the condition to remove it from the iterator if it starts with ` CustomIgnoreTag
camel - 16462 : fix jdbcoptimisticlockedexception mapper to throw optimisticlockedexception instead of runtimeexception
fix @ configurationproperties ( ` ` parent ' ' ) for @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and modified padding settings for fragment loading to enhance layout responsiveness and
deleted the ClusterNodeInfo . java file to remove unused code to streamline the codebase
reformatted the return statement in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for ciphersuite selection in ServerHandshaker . java to improve visibility into ciphersuite selection for debugging purposes
added a new method ` onTemplateChosen ` to handle template selection in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialog
added a HashMap to track duplicate nodes in ImportContainerImpl and implemented its getter and setter methods in ImportContainerParameters to enhance the handling of node
added a new file R2303044ListSelection . java to test list selection functionality to verify the selection of a specified item in a
[ java ] remove the registrationid parameter from the publicationregistration and throw an exception if it already exist .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to verify the functionality of compound property handling
updated row count handling in StatsRulesProcFactory . java to improve clarity and maintainability of row count computation
added path URL formatting and modified path parameter handling in SpringBootDocBuildTemplate . java and DocUtil . java to improve path URL validation and
refactored code to use final logger and remove unused variables to improve code clarity and maintainability
replaced instances of ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` in ` DistBuildSlaveExecutor . java `
improve error message when json can not be parse
added a debug mode before logging the filtered message in WidgetsModel . java to improve performance by avoiding unnecessary log output when debug mode is
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of numTerms in SimilarityBase and added a new test for discountOverlaps in TestSimilarityBase to improve the accuracy
added verification checks for the " send " method in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to ensure messages are sent only
added ` exit ` and ` quit ` methods to the ` Global ` class and removed the ` quit ` method from ` ScriptingFunctions `
refactor the initialization of the LoanBrokerGateway to use a local variable instead of a local variable to improve code readability and maintainability
renamed methods and variables from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method
refactor getservicecookie ( ) to return a cookiejar instead of a string .
reformatted assertions in ResinAcegiAuthenticatorTests . java for consistency to improve readability and maintainability of the test code
updated the parameters of ByteUtil . bigIntegerToBytes to include a value of 32 to enhance security by allowing for larger integer values
updated the property key from " fml . disabledMods " to " fml . modStates " to accurately reflect the purpose of
refactor account selection logic into a separate method ` showAccountChooserDialog ` to improve code readability and maintainability by encapsulating account selection
updated exception message to include host IP and port in IOException to improve debugging by providing more context about connection issues
added validation for empty results in ValidatorContractController to ensure proper error handling for unexpected results from validator smart contract calls
added null check for the root file before reading fields in TexturePackerFileProcessor to handle empty files gracefully to improve robustness by preventing
added a null check for the datasource JNDI property in PooledConnection . java to ensure proper handling of null data sources in the pool properties
testrefprocsanity : increase target and sink to 1 _ 000 instead of 10 _ 000
add null check for currentconsole before write output to avoid npe
set the credential refresh delay to 100ms in KinesisConfigUtil . java to improve user experience by allowing more time for credential updates
replaced manual dialog creation with a dedicated method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
updated variable names and method signatures in T4501661 . java to improve clarity and consistency to enhance code readability and maintainability
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUse
added a check to ensure dependencies are not already provided before adding them to the dependenciesToResolve list to improve dependency resolution logic by avoiding unnecessary
added a HashSet to manage ZipFileInputStream instances and modified releaseInflater method to utilize it to improve resource management and prevent potential memory leaks
rename ` DATAMATRIX ` to ` DATA _ MATRIX ` across multiple files to improve clarity and consistency in naming conventions
mondrian : fix race condition in sequencegeneratorsource . runactive ( )
corrected a typo in the method name from ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` to ensure
replaced the ` findAny ( ) ` method with ` findFirst ( ) ` in ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes
added support for additional architectures " ppc64le " to the Bits and ByteArrayAccess classes to ensure compatibility with additional architectures
updated the exception message in RoboMonitoringInstrumentation . java to include a link to the GitHub repository to improve clarity of the error message
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of COMMIT _ TIMEOUT _ MINUTES to improve clarity and consistency in
replaced instances of ` new Date ( ) ` with ` Instant . now ( ) ` in ` DateUtilTest . java ` to improve
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message to notify users when YouTube Player does not work on Lollipop yet to improve user feedback during updates
added checks for parsing SQL positions in ` Parser . java ` and corresponding test cases in ` StatementTest . java ` to ensure proper error handling
added a null check for mVibrator before accessing mVibrationDuration in AnySoftKeyboard . java to ensure proper handling of v
updated cell border settings and modified background color handling in DotRenderer . java to improve visual consistency and clarity in the rendering process
added a method to check if a configuration variable is encoded as encoded in HiveConf . java and updated SetProcessor . java to handle encoded Par
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved certificate handling to enhance security and maintainability of certificate processing
relax default uri validation to allow proxy
updated TimeLineCursorAdapter , NetworkedCacheableImageView , MainActivity , and TweetActivity to use NetworkedCacheableImageView
removed unnecessary parameters from ValueAnimator instantiation in multiple classes to simplify the code and improve readability by eliminating unnecessary parameters
added a new version string for the gdxControllers in DependencyBank . java and updated related references in BuildScriptHelper . java and DependencyBank
refactor LaunchedURLClassLoader class to improve code readability to enhance maintainability and facilitate future updates
updated DataSourceHealthIndicator to utilize DataAccessUtils for retrieving column count from a ResultSet to improve data access handling and ensure correct column count is
add cache - control header in layout tag if no - cache be set
updated the warning message format to use Locale . ENGLISH to ensure consistent formatting of log messages across different locales
updated the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in specifying the analyzer for query parsing
updated copyright year from Copywrite to 2017 across multiple Java files to ensure compliance with copyright standards and clarify licensing requirements
removed an unused statement from MainTest . java to clean up the code and improve readability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to return a default size when the source is a VoidColumnVector to ensure proper handling
updated method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the request name is
removed the type matching logic for boolean values in AbstractConfig . java to simplify the code by eliminating unnecessary checks
[ java ] add session header offer method to sessiondecorator .
renamed methods ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll `
added a new annotation interface ` NoBootstrap ` and modified ` BootstrapInserter ` to conditionally build ` defs ` based on annotations to
hbase - 26462 fix npe in tabledescriptorchecker . getmaxfilesize ( ) and getmemstoreflushsize ( ) (
replaced ` maxCommits ` with ` requestedCommits ` in ` BranchGraphServlet . java ` to ensure correct handling of commits based on the
replaced ` invokeLater ` with ` invokeAndWait ` in ` bug6794831 . java ` to handle ` InvocationTargetException ` to
added a static final build ID constant and refactored the caching logic in CachingBuildEngine to improve code clarity and maintainability by
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed duplicate calls to markAsDone in HttpProtocol . java to streamline the code by eliminating redundancy
added import for TezConfiguration and utilized it in TezConfigurationFactory . java to enhance configuration management by utilizing a default Tez
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve readability and maintainability of the code
added a null check for recentSounds and a forget method in OpenALAudio . java to prevent potential NullPointerExceptions when stopping and attempting to
fix : invalidate state and other operation on discontinuity only once
added new DecimalFormat values for zero , 000 , and 0.00000005 in NumberAxis . java to enhance the functionality of NumberAxis by
refactor the creation of TargetGraphAndBuildTargets to use a factory method instead of a builder pattern to improve code readability and maintainability
removed the ` IndexFileNameFilter ` class and simplified the file handling logic in ` IndexFileDeleter . java ` to simplify the code by
fix block collision detection in dummy container ( # 8807 )
added a new parameter ` compressionLevel ` to multiple constructors in ` ApkBuilder ` and ` SignedJarBuilder ` to enable customizable compression
added a new test method ` shouldIncludeStaticFields ` to verify that static fields are included in the stub jar to ensure that static fields are
changed UNDEFINED _ FIELD _ SIZE to UNDEFINED _ METRIC _ SIZE and introduced getBytesValues method in MetricFieldSpec and SingleValueIterator classes to
updated string formatting in multiple error messages to use a newline character to improve readability and consistency in error reporting
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the
refactor SpringDataJPAJoinFetchPaginationTest and ForumService to use CacheManager and CacheManager for cache management to improve cache management
add locale property to pronunciation model to support locale .
added a check for empty post body in SimpleHttp . java and updated test cases in TestHttpPlugin . java to ensure proper handling of empty
added a new okhttp dispatcher to the ClientSideSlb class and a corresponding test to ensure proper shutdown of the executor service for better resource management
added conditional logic to set v2 based on whether the texture is flipped or not to ensure proper rendering of the texture based on the orientation of
improve error message for unknown property on discovery strategy
changed contextPath variable from final to non - final and added null check for contextPath to ensure contextPath is always initialized to " NA " when contextPath is
[ drools - 4892 ] fix npe in kiecontainerimpl when there be no reloaded class
added validation for the B _ TREE _ MAP _ ROOT _ HEADER value in BTreeMap . java and defined it in SerializationHeader .
added validation for ` prefix _ header ` and ` precompiled _ header ` arguments in ` AbstractCxxSourceRuleFactory ` and refact
replaced WeakReference with a custom AccWeakReference class in ImageWatched . java to enhance security by ensuring privileged actions are performed
changed the visibility of the findNextIndex method from package - private to private in ObjectMap and OrderedSet classes to restrict access to the method and
set isDirect to false in VertexBufferObject . java to reflect the current state of the isDirect variable
remove duplicate code in audioeffecthelptitlesmap . get ( )
modified the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods in ` Actor ` and ` Group
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer . read ( )
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
updated border spacing logic in CellLayout and DeviceProfile classes to use folderCellLayoutBorderSpacingPx based on container type to improve layout respons
refactor numeric parsing to use a new ValueNumeric class for improved code organization to enhance code readability and maintainability by encapsulating numeric
added a condition to check if the response is deferred before returning it to ensure that the authentication is only attempted when the response is not deferred
updated argument checks from " -- module - startd - ini = " to " -- add - to - start " in StartArgs . java
added a new variable ` HIVE _ DEFAULT _ PARTITION _ VALUE ` and modified partition value handling in ` DynamicPartitionFileRecordWriterContainer
[ hotfix ] [ stream ] fix npe in streamnode
refactor string concatenation in DefaultArtifact . java for clarity to improve readability and maintainability of the code
camel - 16462 : fixed kafka consumer not call staterepository . getoffsetstate twice for offset consumer .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer feedback when a dependency is missing to improve user
update jabber account registration wizard to enable gmail notification
doc : [ crypto ] fix typo in cryptokey doc ( # 269 )
updated LumberjackMultiThreadTest to use a configurable concurrency level and adjusted expected message count based on available processors to improve test reliability
fix npe in playerupdatehandler when player be dead
refactor Exchange class to improve code structure to enhance maintainability and readability of the code
api key and secret key should be specify with apikey and apikey in updateusercmd
refactor switch - case statements to if - else statements in MfaProvider , IdleTimer , and JdbcMfaProviderProvisioning classes to improve
refactor AbstractMetaDataExportMojo class for improved clarity to enhance maintainability and readability of the code
added error handling for SQLIntegrityConstraintViolationException in Hive . java to ensure proper dropping of tables in materialized views to improve robustness by
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in naming conventions
added a new file ` RoboExecutorService . java ` that extends ` org . robolectric . android . util . concurrent ` to
added conditions to add subgroups and sort subgroups to the menu items based on the group ' s root state to ensure proper handling of group
renamed the method ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and updated its logic to improve clarity and
updated the handling of the ` TestDynamicNumberOfGCThreads ` process builder parameters and added verification for the ` GCThreads `
updated method signatures and return types from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes . java to
updated CreateTable and CreateTableDeParser to use PlainSelect for creating operations and table options to enhance flexibility in SQL syntax for creating tables
refactor background drawable setting in ChatViewerFragment to use a local variable to improve readability and maintainability of the code
test : migrate ctiteratortest to junit 5 ( # 4521 )
replaced ` localToken . clear ( ) ` with ` result . clear ( ) ` in multiple tokenizer classes to ensure proper handling of token
pmd : add a new test class that do n ' t crash on block statement
updated ` StateMachineConfiguration ` , ` StateMachineFactoryConfiguration ` , and ` StateMachineFactoryDelegatingFactoryBean ` to use ` @
simonstewart : add testlocators to the selenium test suite
updated StringConverter to set minimum and maximum fraction digits for BigDecimal , BigDecimal , and Float , and added unit tests for float conversion in StringConverter
simplified the return statement in aggregatelifecyclelifecycle . getcurrentscope ( )
change touchable insets from CONTENT to REGION in TaskbarDragLayerController to improve touchable region behavior for better user
removed the check for a specific character in the FencedCodeBlockParser class to streamline the parsing process by eliminating unnecessary checks
added socket timeout handling to ConnectionFactoryImpl and BaseDataSource classes to allow configurable timeout values for socket operations
added a sleep delay in ElementAttributeTest . java to ensure proper handling of interrupted exceptions during tests
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of character encoding during input stream reading
refactor List class to improve code readability to enhance maintainability and facilitate future updates
added URI and Path parameters to AsyncFileImpl constructor and updated context handling in AsyncFileImpl . java , and created AsyncFileImplTest .
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the CucumberEngineExecutionContext is
fix npe in NuageVspManagerImpl when no physical network be configure
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadListActivity
updated Java version constants and method calls in ConstantPoolTagTests . java to use Java 9 instead of Java 8 to ensure compatibility with the latest
improve error handling and warning detection in the compiler
add a method to clear the client header map in asynchttpclient
replaced Vector with List for handling input and output file names to improve type safety and simplify code by using more appropriate data structures
updated the default GRID _ COLUMN value from 4.0 f to 3f in AppPreferencesImpl . java to improve user experience by allowing
added a condition to check if the view creation is not already defined in the CalcitePlanner class to ensure that the query is only executed
updated regex pattern in TestHS2HttpServer . java and modified assertions in TestHS2HttpServer . java to improve date pattern matching accuracy
added error handling when retrieving the object from snippetReflection to improve robustness by preventing application crashes due to potential runtime exceptions
simonstewart : use firefox driver instead of ie
updated byteOffset calculation in ByteBlockPool . java and added a new test in TestByteBlockPool . java to ensure byteOffset does not
changed ` firstEncoder ` and ` secondEncoder ` fields from static to instance and updated the return statement to use ` Locale . ENGLISH ` to
added error handling for Throwable in TcpTransport . java to ensure proper shutdown of stoppedLatch when an unexpected error occurs
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress warnings related to serialization in the class
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` and removed ` SourcePath
add a warning dialog to inform the user when the database have change
added service access validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator and improved error logging in OAuth20AccessTokenEndpointController to
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure that the index is within the
added input format class parameter to the initTableMapperJob method in TableMapReduceUtil . java to enhance flexibility by allowing different input format classes
updated the append method call in AbstractJRubyMojo . java to ensure proper handling of classpath elements during execution
improve error message when language be not find .
added deprecated reserve commit duration handling in ReplicationHandler . java to indicate that the master should be marked as mutually exclusive and should not be used
renamed ` cacheVariableName ` to ` cacheForeignKey ` and updated related references to improve clarity and consistency in naming conventions
changed the data type of ` generateECKeyPair ` and ` getEncodedPoint ` methods from ` long [ ] ` to ` Object [ ] `
[ hotfix ] [ runtime ] add suspend method to statewithexecutionsgraph
replaced instances of ` RotationTouchHelper . INSTANCE ` with ` new RotationTouchHelper ` in ` RecentsAnimationDeviceState
refactor UniFiControllerCache to use flatMap for handling port tables and overrides to improve code readability and reduce boilerplate
updated variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple files to improve clarity and consistency in
remove offer from the list with the same offer id in offerbook .
replace hardcoded ssl version with constant . ssl _ PROTO _ TLS in test
updated mock handling logic in MockitoMethodInvocationControl and SystemClassUserCases to ensure correct type conversion for mock instances to improve flexibility in
updated the ` NotLoadedException ` constructor to include the ` this ` parameter in multiple classes to ensure that the ` NotLoadedException ` is
removed import of DisplayUtils and added extra data for OCFile in FileDisplayActivity to streamline file handling by eliminating unnecessary imports
added error handling and file deletion logic in StoreDirect and StoreWAL classes to ensure proper resource management and error logging during file renaming failures
added a screenshot task execution in AbsSwipeUpHandler . java and modified stopSwipePipToHome method in SystemUiProxy . java
added functionality to control the visibility of command arguments in LiquibaseCommandLine and CommandArgumentDefinition classes to enhance the command argument management by allowing
[ hotfix ] [ kafka ] fix flaky test of loggingkafkaproducertest
[ geos - 6641 ] use catalog from style group instead of data directory
added permission checks for launcher activities in InstallShortcutReceiver and modified Launcher and Launcher classes to enhance security by preventing malicious intents
added ID handling in TideMapLoader , TmxMapTile , AnimatedTiledMapTile , and StaticTiledMapTile classes
refactor Manager class to improve code readability to enhance maintainability and facilitate future updates
updated JDBC connection to use a specific version number to ensure compatibility with the latest version of the application
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo . java and updated related method calls to enhance schema handling and
replaced ` putIfAbsent ` with ` put ` for storing the registry in ` JmxRegistry . java ` to improve performance by avoiding unnecessary
benchmarker : log singlebenchmarkrunnerexception instead of error
changed the access modifier of the ` doPutRecord ` method from ` final ` to ` protected ` to allow subclasses to override the ` do
fix file selector for gAME _ home and gAME _ HOME
added new test methods for handling large and slow response content in FastCGIProxyServletTest to improve test coverage for response content and response handling
added a new service launching for ReadInteractionsService to enhance the functionality of the MarkReadService
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when `
added configuration for the email server port in Email . java to ensure that the email server port is set to a default value if none is provided
added retry logic for SSLFactory reloads in TlsUtils . java to improve reliability of SSL factory renewal process by ensuring retries are
updated date format from " HH : mm - dd ' T ' HH : mm ' Z " to " HH : mm : ss " to
updated the assertion message in SpyingOnRealObjectsTest to clarify that the private class is not visible to Mockito
added a new boolean variable ` _ isEndsOnNL ` and modified conditional checks in ` LineBox ` and ` VisualRegressionTest `
updated the construction of filePathString to handle null cases to improve robustness by avoiding potential NullPointerExceptions
removed import of DocCollection from TopicStream . java to streamline dependencies by eliminating unnecessary dependencies
refactor servlet input stream creation and add a new test for handling Windows 1250 parameter in multipart requests to improve code clarity and ensure correct
added properties for management . endpoints . web . exposure in AbstractCasEndpointTests . java to enhance configuration flexibility for web exposure settings
added a validation check for the current graph in StatisticsControllerImpl . java to ensure that the current graph is a dynamic graph to prevent runtime errors
add @ eagerinitfactory to allow @ scopeone to be inject to @ scopeone .
added support for suppressing exceptions in JsonPath expressions to enhance flexibility in handling exceptions during JSON path processing
removed duplicate calls to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline code by
updated command - line usage messages in CLHSDB and HSDB classes to include " - help " to enhance user guidance by providing
refactor ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` and refactor chunk listener registration in ` SimpleStepFactory
[ beam - 10613 ] remove deprecate write class in flinkbatchtransformTranslators and sinkitcase
refactor ` ShadowAccessibilityManagerTest ` to use ` AccessibilityManagerInstance ` instead of ` Exception ` to improve code clarity and
add analytics group _ display _ id for usage statistic ( # 4891 )
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` across multiple files to simplify the class hierarchy by removing unnecessary
refactor PostgreSQLEnumDataTypeHelper to create a new class for enum data type handling to improve code organization and maintainability by separating concer
updated path comparison in LogFileTests to use File . separatorChar instead of " logpath / spring . log " to ensure compatibility across different
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to align with the new
added an import statement for isIndexTable and modified exception handling in HiveMetaStoreClient . java to improve error handling and provide clearer feedback
added visibility check before updating disabled flags in RecentsView . java to ensure proper scrolling behavior when visibility is not visible
added a specific highlighter for non - Windows operating systems to ensure compatibility with Windows - specific syntax highlighting
add a new method addoptionallocalvariable ( dismantlebytecode dbc , opcodestack . item ) to handle optional local variable
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` for adding file paths to ` filePathStrings `
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
changed the default value of _ metaDataComplete from true to false to disable metadata completion functionality
refactor ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` for task removal to improve thread safety
added support for ` RELEASE ` and ` PLATFORM _ DOMAIN ` flavor in ` JsBundleGenrule ` and corresponding tests in `
updated the type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test
added tests for crlfNewLinesInComments and crlfNewLinesInJavadoc in AddImportTest . java and modified import statements in Aut
added HubMode configuration handling in AbstractLiquibaseChangeLogMojo and defined hubMode in AbstractLiquibaseMojo to
removed unnecessary null check for processedItem in JsrChunkProcessor . java to improve code clarity and prevent potential null pointer exceptions
added a check for the existence of the linkDb before adding the input path in IndexerMapReduce . java to improve robustness by prevent
updated the method for setting the index thread pool method in LuceneTestCase . java to use reflection to improve flexibility and avoid potential runtime
updated the address format in GameCanvasImplementation . java to simplify the address format for better readability and maintainability
added a ` copy ` method to the ` MapJobExecutionDao ` class and updated its usage in ` MapJobExecutionDaoTests ` to ensure that
added a new file ` DownloadTest . java ` that implements a HTTP request to test the download functionality of the application
updated language normalization in multiple files to ensure consistent language formatting across the codebase
updated exception handling in GenericUDFRound . java to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and specificity of argument
added null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple request matchers for various security configurations in SecurityConfig . java to enhance security configuration options for better user experience
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
fix bug in bean definition injection for java . lang . object
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] fix notification schedule schedule time ( # 11938 )
remove unnecessary code that do n ' t work in apr / native
deleted the SunToolkitSubclass . java file to the functionality is no longer needed for the current architecture
updated the getTranslation method in DefaultRenderableSorter to use Matrix4 instead of MathUtils and added a new hasRotationOrScaling method to improve
added a new test method for registering wrapper handlers before primitive types in TypeHandlerRegistryTest . java to address issue # 165 related to type
added a method to convert a PDLab image to a RGB image in PDSeparation . java to enhance image processing capabilities for different
updated API and image URL constants to use BuildConfig instead of CommonsApplication to enhance flexibility and maintainability by centralizing configuration management
camel - 16462 : camel - http - main : add health check for camel - health
fix a nullpointerexception in thornchakram . getblockentity ( ) .
added a test for altering tables with indexes extend primary keys in AlterTableWithViewsIT . java to ensure proper functionality and behavior of
updated offset initialization in FileFloatSource . java and added new assertions in TestFunctionQuery . java to improve code clarity and ensure correct document
removed the ID from the fields list in MongoRecordReader to clean up unused fields to avoid potential memory leaks
added disposal methods to YeelightHandlerBase and DeviceBase , and updated connection handling in WifiConnection to ensure proper resource management
added support for " AUTO _ INCREMENT " database schema in the parser to ensure proper handling of integer values in database schema
fix the bug of shareinformerfactory . sharedindexinformerfor ( )
x vmmetadata platform contain virtual platform relate info , c should save platform info in db to migrate the vm to other cluster
refactor image handling in ShadowBitmapFactory to use RobolectricBufferedImage instead of file input stream to improve flexibility in color array
removed deprecated constants related to " isShortcut " , " uri " , " displayMode " , and " displayMode " in LauncherSettings
[ jbrules - 1353 ] fix the problem that the example file be not include in the example directory .
added a legendTop variable and updated its usage in PieChart . java to improve clarity and functionality of legend offset calculations
added a check to return early if the world transform is zero to optimize performance by avoiding unnecessary processing when the world transform is zero
added a new file ` MaryScriptCreator . java ` that reads a text file from a specified directory to facilitate the creation
added session attribute for the remote source host in ListenHTTPServlet to enable dynamic configuration of the flow file based on the request ' s remote source
refactor compactionLogger initialization and file deletion logic in LevelCompactionTsFileManagement . java to improve code clarity and ensure proper resource management
updated attribute keys from " xlink : href " to " href " in ComponentDescription . java to ensure consistency and correctness in URL handling
camel - 15836 - camel - aws2 - s3 : replace hardcoded timeout checker name with constant name
hbase - 25813 addendum addendum to check for cluster shutdown state
updated logging logic in Slf4jSpanLogger and DefaultTracer to check for null spans before logging to improve robustness by preventing null
trim the active option before adding it to the configuration to ensure that the active option is not empty before being added
added preference for wallpaper depth effect in DepthController . java to enable dynamic adjustment of wallpaper zoom based on user preferences
added a test to verify the success count of the overseer in the OverseerTest class to ensure the test accurately verifies the
simplified the logic for determining the kernel version in LinuxFileStore . java to improve code readability and maintainability by eliminating
[ hotfix ] [ table - common ] fix typo in execconstants javadoc
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording for testing purposes
added a new method ` setScanAttributeForPaging ` to ` ScanUtil ` and invoked it in ` TableSnapshotResultIterator ` to
modified the condition for setting ` lowRange ` in ` Request . java ` and ` RequestV2 . java ` to ensure that ` low
change access modifier of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and adjust cache size estimation in Async
cloudstack - 4892 : fix zoneid in host response when host uuid be null
[ zeppelin - 4892 ] fix utf - 8 encode issue in interpreter
replaced the conditional check for filesystem removal with a direct call to remove to simplify the code for better readability and maintainability
changed the type of the ` obj ` variable from ` Object ` to ` String ` and updated its usage throughout the ` HttpRequestBuilder `
increased the polling duration from 2 milliseconds to 3 milliseconds in SoftAutoCommitTest . java to improve test reliability by allowing more time
log4j2 - 1343 log4j2 - 1343 call listener . beforeevent and listener . aftereach ( )
refactor multiple dial - related classes for consistency and clarity to improve maintainability and readability of the codebase
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version number from 0.4 . 0 to 0.5 . 1 in RyukContainer . java to ensure compatibility with the
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
[ fix ] fix patchy library not be find in the classpath .
[ hotfix ] [ yarn ] remove unused yarnclient from yarnitcase
fix npe in localmapstatsawareservicestatisticsawareservicetest
deleted the AllTests . java file to the test suite was deemed unnecessary or redundant
added Unicode character constants for non - breaking hyphens and zero - width spaces in AbstractWordConverter to enhance the handling of Unicode characters in the
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that stack trace invocations do not starve
replaced calls to ` getResultMappings ( ) ` with ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java `
added a boolean flag ` eventHandled ` to ` UIText . java ` to track event processing status
deleted the ` Controller . java ` file and renamed ` Weldby . java ` to ` WeldModule . java ` to clar
ruby flavor : add monitorCapturegroupsinemptycheck to tregex backtrackingnfaexecutornode
added a protected field ` liquibaseProLicenseKey ` to the ` AbstractLiquibaseMojo ` class and removed its
mondrian : make rolapcube . set measureshierarchy memberreader private to avoid duplication .
add a custom option to generate debug information .
mondrian : fix typo in mondrianproperties javadoc
added friend path handling in Kotlin compiler and related classes to enhance functionality to support friend paths for Kotlin compilation
added aliases for BATK , BRAHMI , and MANDAIC files in Character . java and CheckScript . java to
updated equality checks in ExecutionCommand and added a new method to stringToExecutionCommand in StageUtils to improve code readability and facilitate
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a ` toString ` method to the ` SystemScope ` class to provide a readable string representation of the ` SystemScope ` instance
updated CSSParser to handle percentage values and improved error handling for invalid parameters to ensure that the cmyk ( ) function behaves correctly
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` in ` LocalIndexIT . java ` to verify the functionality
replaced InstrumentationRegistry with ApplicationProvider in BaseAndroidTestCase and updated test method names in BackupHelperTest and LanguageHelperTest to improve
updated messages in multiple activities to use string resources instead of string concatenation to improve readability and maintainability of the code
removed unnecessary condition checks in RendererUtilities . java and added a new test case in RendererUtilitiesTests . java to improve code readability and ensure
replaced instances of ` nextNodeAsDecimal ` and ` nextNodeAsDecimal ` with a new method ` arrayNodeItemAsDecimal ` to improve type
added error handling for SQL command execution in FileContentProvider . java to log warnings when duplicate column additions occur during upgrading from 24 - >
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and refactored online data size computation in ConvertJoinMapJoin . java to improve accuracy of data size calculations for
updated the ` buildView ` method to accept a ` Context ` parameter and added theme attributes for the selected item background to improve flexibility in
added a ` assertAuthentication ` consumer to the ` SecurityMockMvcResultMatchers ` class and corresponding tests in ` SecurityMockMvcResultMatchersTests
vpc : set vpcid to null to avoid npe
[ flink - 10955 ] [ test ] disable flink savepoint test on version 1.11
corrected the order of @ Cue annotations in multiple Java files to ensure consistent formatting across the codebase
simplified the loop condition for action processing in Actor . java to improve readability and maintainability of the code
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange and modified the default exchange specification initialization to ensure compatibility with the
add test for virtual metadata in relationshiprestrepositoryit
added null check for spatial in LodControl . java to prevent potential NullPointerException when spatial is null
updated lastTokenFiltered initialization and added LimitTokenOffsetFilter and LimitTokenPositionFilter in multiple filter classes to ensure correct token filtering behavior during token processing
make unsafestorenode state after call graph . unique ( ) .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to verify if the CAS event repository is empty to ensure that the CAS event repository is not empty before proceeding
removed ` final String attributeLine ` and ` attributeCol ` from ` AuthenticationAttrProcessor . java ` and ` AuthenticationAttrProcessor . java `
added null check for the specified key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that a null key is
removed the ` setTypeface ` method from the ` CodenameOneTextPaint ` class to throw an exception when the typeface is not
added ` open ` methods in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFS ` classes to
[ java ] remove deprecate fail ( string message ) method from webdriverrunner
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a single useConstructorMappings flag instead of a separate ResultObject class to improve code readability and maintainability
updated SQL syntax in CreateTableGeneratorTest . java to use string literals for table name references to improve readability and maintainability of the test
updated filtering logic in VectorizationContext . java to handle FILTER mode to ensure correct processing of filter expressions in the vectorization context
updated the type declaration of ` moveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to improve type safety and cl
replace ReorganizeTableStatement with modifyDataTypeStatement in ModifyDataTypeChange . java to improve clarity and maintainability of the code
refactor cluster name handling to use static constants instead of string literals to improve code readability and maintainability by centralizing configuration management
do n ' t try to connect to a peer if it fail to connect to a peer .
added conditional checks for specific style strings in Nano . java to ensure correct style assignment based on the length of the style string
replaced the use of ` FixType ` with ` CompoundBinaryTag ` in ` MCEditSchematicReader ` and `
updated the return statement in NoToStringOnStringType . java to use " No # toString ( ) on String " instead of " Use `
8287017 : [ testbug ] testthreadfailure fail on 32 - bit machine
change return type of ` retryFailed ` method from ` int ` to ` FailureContext ` and update related logic in ` Invoker . java
changed return value from ` tokens [ 0 ] ` to ` tokens [ bandwidth ] ` in ` BucketStateIEEE754 . java `
simonstewart : add support for selectpopup and deselectnetworkTraffic method in webdriverbackedselenium
refactor the ` doPrintEntry ` method to remove the ` storePass ` parameter and simplify its logic for better readability and maintainability
[ hotfix ] [ test ] fix typo in taskasynccalltest
added checks for component decoration in Dialog and Frame classes to ensure proper handling of component state and avoid illegal state exceptions
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure the ` state ` variable cannot
updated RedisObjectFactory to utilize RedisStandaloneConfiguration and RedisStandaloneConfiguration to enhance configuration flexibility for Redis connections
added functionality to track and update the last - seen message in the chat room
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify
refactor FileOperationsHelper to use a service - based approach for creating share operations to improve code maintainability and leverage the OperationsService for
updated the isValue variable assignment in BeanDefinitionInject . java and added Jakarta Inject annotation in FieldPropertyInject . java to simplify the
replaced calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` in ` ClassicPlotManager . java ` to improve
added a check for NullPointerException in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions during integration tests
tmi - exif : add a ` ` read linked ' ' parameter to readdirectory ( ) , a suggest by valerybokov
added support for ENABLED _ LS in VersionTargetGraphMode and updated executor assignment logic in VersionedTargetGraphCache to improve flexibility in handling different
added a check for video format in DLNAResource . java to ensure proper handling of video formats in the parsing logic
doc : generate sample code in the java microgenerator
added a load method to LwjglNativesLoader and modified LwjglNativesLoader to dynamically load the Jnlp Persistence
added escape parameter to CSVStrategy and adjusted encapsulation logic in CSVRequestHandler . java to enhance flexibility in handling escape characters and improve error handling
added support for the Authorization _ CODE grant type in ClientRegistrations and updated corresponding test cases in ClientRegistrationsTests to ensure compliance with OAuth
enhanced exception messages in Throwable and introduced initCausePlumbing method in SuppressedExceptions to improve error handling and provide clearer context for exception
updated ` DerivedTableIT ` and ` ClientAggregatePlan ` to use ` null ` instead of ` limit ` in ` OrderedResultIterator
added support for the RSquare regression in RegressionEvaluator and a corresponding test in StreamExpressionTest to ensure correct handling of the RSquare
added import for Enumeration and modified request header handling in ThreadContextMDCServletFilter . java to improve code readability and ensure proper context attribute
refactor code to use a local variable for MapWork in SparkPlanGenerator . java to improve code readability and maintainability by reducing
refactor folder image retrieval and country image retrieval in PdfJndiReport and PdfSessionInformationsReport classes to improve code reusability and
updated caching behavior in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer resolution in JwtIssuerAuthenticationManagerResolverTests to
updated resource access check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
added an ` isMethod ` parameter to the ` get ` method in ` LLVMInteropType ` and modified related methods in ` Cxx
removed duplicate sleep statement in AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability
added a new file ` KernCrash . java ` that implements a custom font with Kerning Crash to demonstrate
added a fail ( ) method call to LinkedHashTreeMapTest . java to ensure proper failure handling during test execution
added a method to retrieve network interface addresses in NetUtil . java to enhance functionality by allowing dynamic IP address retrieval based on network prefix
fix memory leak in ` ` housekeeper ' ' ( # 113 )
updated variable name from ` getClientAddress ( ) ` to ` getSlaveAckOffset ( ) ` in ` GroupTransferService . java ` to
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
added a new test class ` Issue247Test ` to validate the functionality of the ` createTreeMap ` method in the ` MapDB
changed ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doInBackground ` method
added date validation logic for today and birth date in ValidatorTest . java to ensure proper validation of max age validation for today and birth dates
added error handling for HTTP responses in GrblController . java to improve error reporting for better debugging and monitoring
updated the return statement in Workspace . java to conditionally display the home button label based on the presence of screens to improve user experience
removed the ` count ` parameter from the ` getTrades ` method in ` BittrexMarketDataService ` and related classes to
refactor ConsoleReader and MemoryHistory classes for improved readability and efficiency to enhance code clarity and ensure proper handling of null inputs
simplified the path construction in JavaBuild . java to improve readability and maintainability of the code
replaced calls to ` getBuildRuleType ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple files to simplify
updated JFCModel and Configure classes to accept a logger parameter for warning logging to enhance logging capabilities for better debugging and monitoring of missing control settings
added a validation check for tolerance in MaximumInscribedCircle . java to ensure that the tolerance is non - positive to prevent invalid input
added methods to create and drop views in TestUtil and implemented a test for view and table privileges in DatabaseMetaDataTest to facilitate
added platform - specific handling for stable floating - point testing in NaNTest . java to improve test reliability and clarity in handling stable
added a new ` DesktopTaskbarUIController ` class and integrated it into ` TaskbarManager ` to manage the icon alpha of the
added progress tracking functionality to the ModItemAdapter and ModpackApi classes to enhance user experience by updating install button state based on task count changes
refactor Files class to improve code readability to enhance maintainability and facilitate future updates
refactor AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration for improved clarity and consistency to enhance code readability and maintain
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and removed the ` @ FunctionalInterface ` annotation from ` Ch
fix resourcepackloader to use modid instead of file name
chore : update gapic - generator - java version to 2.1 . 0 ( # 6022 )
added new ` grow ` methods to the ` Cell ` class and updated ` expandX ` and ` fillY ` assignments to enhance functionality by
refactor ` DefaultInputHandler ` to use generic ` Map < KeyStroke , ActionListener > ` for improved type safety to enhance code read
add try - catch to prevent test failure on slow ci server
replaced long array with byte array for memory allocation in MetricsMemoryTester . java and added a memory failure count check in TestDockerMemory
deleted the JobParametersPrototype . java file to remove unused code to streamline the codebase
added a new boolean field ` securityEnabled ` to the ` MappingsTable ` class and updated its usage in ` MappingsTableImpl `
rename ` APPLE _ SWIFT _ OBJC _ HEADERS ` to ` APPLE _ SWIFT _ EXPORTED _ OBJ
changed the default value of DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable the dump
updated the method signature of ` codecNeedsEosPropagationWorkaround ` to accept ` MediaCodecInfo ` instead of ` codecName ` to
[ java ] do n ' t set the publisher limit if it ' s less than producer position .
added a check for ` options . getOutputOptions ( ) . isNoInfo ( ) ` when ` dbInfo ` is null or ` options
enable ssl by default when use ssl = false
added DOMOutputOptions for XHTML output and modified the buildDOMSubtree method to include additional output options for better error handling
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
added ` topic ` and ` retain ` parameters to the ` Event ` and ` Publish ` classes and updated the ` Event ` classes to support
added ` testCaseName ` to the ` TestResultSummary ` and updated the ` EventSerializationTest ` to include the test case name to
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix typo in sqlgroupwindowfunction
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
refactor ssl context handling to use read - write locks and improve timeout setting logic to enhance thread safety and maintainability of SSL session management
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to align with the
changed log level from debug to trace in FirmwareUpdateService . java to improve logging granularity for firmware update handling
added unit tests for handling null date and timestamp in GetObjectTest . java to ensure correct behavior of getObject method with null values
refactor string handling in StringSubject , Subject , and CustomFailureMessageTest classes to improve clarity and consistency to enhance code readability and
added unit tests for repository permissions in UserModelTest . java to ensure correct permission handling for multiple teams in the repository
added a new file Test7088020 . java that tests MethodHandle ' s invokeExact method to ensure proper exception handling for missing stack
replaced the method ` matchAudienceRestriction ` with a ` Set < String > ` for checking audience URIs to improve audience validation logic to enhance
refactor cache update methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve cache management and synchronization to enhance code readability
changed the variable ` _ stderr ` from ` System . err ` to ` System . err ` and added a null check for ` _ stderr
added a new warning constant ` SEPARATION _ ORDER ` and updated the ` BasicEventSimulationEngine ` to track the number of active stages
updated the query optimizer parameter from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure the query optimizer uses the correct
added support for enabling or disabling the hbase normalizer in the database to enable or disabling the hbase aggregation table based on configuration
refactor SavepointV2 and FileStateHandle classes to improve code organization and readability
added BluetoothClass support and corresponding unit tests in ShadowBluetoothDeviceTest and ShadowBluetoothDevice classes to enable testing of BluetoothClass
corrected a typo in the method name from " contains " to " containsProfile " across multiple files to improve code readability and maintain
added a check for empty list in SumFunction . java and updated the error message in FEELFunctionsTest . java to improve clarity of
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to
updated coreNodeName construction to use coreName from nodeProps to ensure the correct core name is used for the node properties
add updatebackpressure to chatactivity so that it do n ' t interfere with chat .
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for tag parsing functionality
added @ LuceneTestCase . SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase . java to suppress codec warnings related to Simple
added a new generic class T7005671 with multiple test methods for byte , short , int , long , int , long , and char
updated superTriangle calculations in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTri
added @ Override annotations to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use Builder pattern for improved readability to enhance code maintainability and reduce redundancy in JWTClaimsSet
replaced setState calls with onYellowZoneMadeAvailable and onYellowZoneProtected methods in StackOverflowCheckImpl . java to improve
added static methods for ` ShadowSQLiteDatabase ` , ` ShadowContentValues ` , and ` ShadowSQLiteDatabase ` in ` Robole
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglGraphics . java ` and `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and updated comparison logic to use ` ArrayUtil . getUnsignedComparator ` to improve
added a ` script ` variable and modified locale initialization logic in ` Locale . java ` to ensure proper initialization of default locale based on the current
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to reflect the last set text alpha instead of the current text
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to improve clarity and accuracy of the warning
replaced specific test class imports with a method call to allSuiteClasses ( ) in DefaultConfigurationTestSuite . java to streamline test suite
trim whitespace from tokens in GzipFilter and setInitParameter parameters in GzipFilterDefaultTest to improve data integrity by removing leading and trailing spaces
updated the assignment of the _ outputType variable to ensure consistency in code formatting
changed the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the newer
replaced ` LooperExecutor ` with ` Executor ` and ` FutureTask ` for task handling in ` ViewCapture . java ` to improve
[ mary ] add support for voice style in marygenericfeatureprocessors
added error handling for folder creation in GitBlit . java to ensure that a valid parent folder exists and is created before proceeding to prevent
updated the bind IP address from " 0.0 . 0.0 . 0.0 " to " 127.0 . 0.1
camel - 16463 : camel - in - only and in - out camel - in - camel - in - camel - jbpm -
pdfbox - 4071 : remove unused import , a suggest by valerybokov
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` and updated associated text in ` AllAppsRecyclerView ` and ` All
refactor multiple Java classes related to dalvik and dalvik to improve code organization and maintainability
fix : do n ' t print implicit type in defaultjavaprettyprinter
[ hotfix ] [ runtime ] fix memory leak in drivercontext
updated string formatting in QueryByExamplePredicateBuilder . java and removed unnecessary assertion in StringQuery . java to improve clarity of error messages and
replaced ` evictionCounter ` with ` AtomicLong ` and updated its usage in ` ConcurrentLRUCache ` and ` FastLRUCache
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor . java ` to
replace localHost check with intendedDestination check in NetworkAddressManagerServiceImpl . java to ensure correct handling of Inet4Address instances
fix ( opengrok ) : set dataroot and sourceroot in mainframe
added constructors for MarkedClientEnabled and MarkedServerEnabled in AdminClientBootstrapConfiguration and AdminServerBootstrapConfiguration to provide visibility into the enabled
[ flink - 20037 ] [ table - api ] fix the javadoc of tableenvironment # fromvalues ( abstractdatatype , object ... )
updated timeout settings in MapperBuilderAssistant and MappedStatement classes to improve code clarity and ensure consistent timeout settings
removed the ` hangingTscTimeout ` parameter from multiple ` JSweetTranspiler ` and ` TypeScript2JavaScriptTranspiler
added GeoLocationRequest and GeoLocationResponse imports to CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of geolocation - related components
updated ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl ` to improve type
tika - 3757 -- add a test to verify that the excel parser do n ' t throw a hpsf document
ggb - 2852 : do not trigger concurrent modification when call setvalue ( )
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 : http :
added checks for equality in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest ` to ensure that the ` hasValue
added VERTICAL _ SWIPE _ INDICATOR to the visible elements check and adjusted mid progress logic in ShelfScrimView
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
ggb - 1193 fix for ggb - 1193 and ggb - 1193 : do n ' t need to
refactor ErrorOccuredInOnExceptionRoute class for improved error handling to enhance error management capabilities during exception scenarios
replaced ` scheduleAtFixedRate ` with ` scheduleWithFixedDelay ` in ` AstroDiscoveryService . java ` and changed log level from
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability
added @ Ignore ( " Test hangs " ) annotations to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable
updated import statements in GuiceFactoryTest . java to include specific module and module imports to enhance dependency management and improve code clarity
added support for checking and setting system features in RobolectricPackageManager to enable better management of system features in the Robolectric
added a new constant ` PROP _ PATH _ POSTFIX ` and refactored path property handling in ` RCAFrameworkLoader ` to support
removed logging statement for cancellation watch dog to clean up the code and reduce unnecessary logging
added a null and empty check for enumerationValues in RADProperty . java to ensure enumerationValues is not null or empty to avoid potential NullPointerException
replaced the ` needInline ` variable with ` needStartText ` and ` needEndText ` variables in ` BoxBuilder . java `
updated the method ` collectAndSendTelemetryData ` to use ` collectAndSendTelemetryDataAsynch ` and added a new method
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column in UpgradeCatalog260 . java to simplify the column change logic
updated error messages for index and temp resources directories in BaseTableDataManager . java to provide clearer guidance for users on available space and
[ hotfix ] [ table - common ] fix typo in datasetutilities javadoc
added selector ID to the key string in Matcher . java to enhance the readability of the key by including the selected selector ID
updated debug logging format in GouraudShadingContext . java to improve readability and maintainability of the code
updated taskbar visibility and visibility settings in StashedHandleViewController , TaskbarDragLayerController , and TaskbarLauncherStateController classes to
removed redundant whitespace in KeyExchange . java to improve code readability and maintain consistency
added a check for ` JdbcConnection ` before executing the ` version ( ) ` method in ` CockroachDatabase . java ` to
updated the logic for file index handling in ServerMainTest . java to improve clarity and correctness of crash file naming conventions
added ` getMediaRecorderingMimeType ( ) ` methods in ` CodenameOneImplementation ` , ` Display ` , and ` ImageIO `
remove confighandler . useshaders ( ) from rendertileenchanter and rendertilepylon .
updated the BindableFilter condition in DruidAdapterIT . java to include an OR clause to enhance filtering capabilities for better data handling
reformatted the initialization of ZkStateReader in CloudSolrServer . java to improve code readability and maintain consistency
pdfbox - 4071 : disable external - general - entities and disallow - doctype - decl for xmp
added a new interface ` ClientRegistrationIdentifierStrategy ` to handle client registration identifiers in the OAuth2 client registration process
replaced the conditional check for " < script > " with a while loop to improve code readability and maintainability by using a while loop
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modified the logic for checking varargs access to
replaced direct calls to ` getTemplateProperty ( ) ` with a new method ` borderIsNotSetOrBlank ( ) ` to improve code read
change log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance
refactor ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to include ` HubRegisterResponse ` as a parameter to enhance the
replaced manual bitwise operations with Byte . toUnsignedInt for byte conversion across multiple classes to improve code readability and maintainability by using a
removed unnecessary parentheses in OpenTracingTransactionProducer . java to improve code readability and maintainability
changed the default value of CachingBuildEngine from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure caching behavior is
changed the default value of rangePannable from true to false in CategoryPlot . java to disable range panning functionality in the plot
updated work mode handling logic in AllAppsContainerView . java to ensure proper management of main views based on the current active page
changed variable access modifiers from ` private static ` to ` private ` for better encapsulation to improve code readability and maintainability
added import for CancellationException and handled it in FunctionTest . java to ensure proper handling of cancellation exceptions during execution
changed constructor visibility from package - private to protected in JarFileResource and JarResource classes to improve encapsulation and restrict access to constructors
refactor DefaultTrackSelector class for improved clarity to enhance maintainability and readability of the code
added a delay for unseq merging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq merging process
updated fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test reflects the correct fee
updated ` HibernateDTOProjectionTest ` and ` JPADTOProjectionTest ` to use ` PostDTO ` instead of ` Post ` to
refactor Unicode handling to improve code readability to enhance maintainability and ease of understanding for future developers
updated the installAutoInstance method to accept a Service parameter and added logic to update Hive LLAP settings based on the current service context to enhance
removed unnecessary whitespace in the onComplete ( ) method call to improve code readability and maintain consistency
[ beam - 10660 ] fix s2s key serialization for aws s2s
added handling for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error reporting for unsupported value types
updated variable names from ` inner ` to ` javacEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity and
removed annotation printing from the genericParameterType class to clean up the code and improve readability
added a new preference for AC3 and modified playback state handling in PlaybackController . java and VideoManager . java to enhance playback control
added a new map for " value " and set it to null in the HttpResponse to ensure the response is populated with a non - null value
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address common DBCP and FileUpload to address
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to verify the functionality of SQL queries with
refactor RTimerTree class for improved readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
fix for issue # 358 , add test case for issue # 358
updated the initialization of QueuedThreadPool and ScheduledExecutorScheduler to include unique naming for client threads and scheduler to improve clarity and traceability of
refactor ViewResultsFullVisualizer to replace protected JScrollPane and JScrollPane with private JSplitPane and update layout settings to improve encapsulation
added descriptions for user phone numbers in ScimUserEndpointDocs . java to improve clarity and usability of phone number information in the documentation
added private constructors to DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enhance accessibility and prevent instantiation of these classes
added null checks for responseMap in JsonHttpPropertyRequest and enhanced HTTP status codes in URLStreamProvider to improve error handling and provide clearer
refactor SolrRequestHandler class for improved readability to enhance maintainability and facilitate future updates
added a check for DEFAULT _ PARALLEL in the parallel condition to ensure proper handling of parallel configurations
fix checkstyle violation in test / vmware / testvmware / testvmwarefactory . java
added a condition to check for SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ C
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary output during test execution
camel - 16462 : camel - bindy - add support for the list of key - value pair in the camel - bindy -
change default value of ` useOwner ` and ` useTimeStamp ` from ` true ` to ` false ` in ` JabRefPreferences .
updated the ` runAndCheckException ` method to accept ` ThrowingRunnable ` instead of ` Runnable ` to ensure that the ` runAndCheckException
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object
updated version number from 4.1 . 1 to 4.2 and refactored object retrieval logic in LiquibaseXMLTransformer to
change the default value of the proxy . cert . validity property from 7 to 90
updated ThreadHandler to include smooth delta and modified elapsed time calculations to improve responsiveness and accuracy of elapsed time handling
added null check for paginator in HttpBatchReader and modified URL parsing logic in HttpScanBatchReader and HttpScanBatchCreator to ensure proper handling
added null check for the CompactionInfo client in Worker . java and created a new test for FindNextCompact in TestWorker . java to
added onSaveInstanceState method to ShadowFragmentActivity and a corresponding test in FragmentActivityTest to ensure that onSaveInstanceState is called on fragment state
updated formatting and formatting in BatchResourceFactoryBean . java to improve code readability and maintain consistency
added a test method to validate the parsing of Android color references in ColorResourceLoaderTest . java to ensure that the color resource loader correctly handles
added error handling for NoResultException in AbstractJPAQuery and created a new test for null results in AbstractStandardTest to improve robustness
refactor the way the communities are added based on the presence of an owner to improve clarity and maintainability of the code
replaced direct reference to ` l ` with ` LawnchairApp ` in ` DepthController . java ` to ensure compatibility with the
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
updated the method signature of ` updateTotalEnergyAverageUsage ` to remove the ` now ` parameter to simplify the ` updateTotalEnergy
added null checks for extensions and extensions in ExtensionStack . java and created a new test for the toString method in ExtensionStackTest . java to
[ rxjava3 ] fix flatmap . flatmap ( ) not disposal properly .
added connection manager timeout settings in MultiGetRequest and updated connection manager initialization in ControllerStarter and ServerTableSizeReader to improve error handling and
removed unnecessary whitespace in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to change the test class from NewModelTest to
removed redundant fetchers addition in EdgeSyncCursor . java and modified image inline method in BaseImageService . java to streamline fetchers and
added a test to verify that output hash is not calculated when the cache is not writable to ensure that the output hash is correctly calculated when the
camel - 16462 : camel - netty - add option to use bytebuffer in camel - netty
updated the method call to use ` Warehouse . getQualifiedName ( ) ` instead of ` getOldName ( ) ` to ensure compatibility with the
improve error message when vertx be create with prefernativetransport option set to true to create domain sockets
[ nui ] move enumtypehandlerserializertest to typehandling package
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future development
added hints for JavaEE query and lock timeouts in SessionImpl . java to enhance query performance by controlling timeout settings
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to facilitate the use of static logger
removed redundant calls to ` familyMap . put ( list , list ) ` in multiple classes to streamline the code by eliminating unnecessary
added a condition to check if the window orientation changes in TaskbarManager . java to ensure proper handling of window orientation changes
added xml escaping for occupant ' s nickname in ChatRoomJabberImpl to ensure proper handling of special characters in the nickname
added tests for compacting and compacting operations in StoreDirect . java and created a new test class Issue265Test . java to ensure correct
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable components and improve code clarity
[ hotfix ] [ test ] fix compilation error in executionflowcontroltest
corrected formatting of conditional statements in DLNAMediaInfo . java and FFMpegVideo . java to improve code readability and
updated the ` NBWriteServlet ` and ` TestWriteListener ` constructors to include an ` unlimited ` parameter and modified the listener logic to
update total difficulty after import , add test for invalid block .
simplified the logic for determining actions based on the player ' s window seekability to improve code readability and maintainability by reducing
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated method parameters in SecurityServicesFeature . java to improve thread
added memory allocation calculations for mRollo and updated position and bendDistance calculations in AllAppsView . java to improve the accuracy of the
added a check for the presence of a colon in the key in HttpURLConnection to ensure compatibility with different key formats
added PrincipalResolver annotation to the AuthenticationMetaDataPopulator parameter to enhance flexibility in principal resolution for multifactor authentication
replaced ObjectMapper with Noggit ' s ObjectBuilder for reading JSON from the response body to improve compatibility with Noggit ' s JSON
added a method to remove trailing slashes from the StringBuilder to ensure proper handling of trailing slashes in the StringBuilder
added methods for matching patterns in the PatternsMatcher class and corresponding tests in the PatternsMatcherTest to enhance pattern matching functionality and ensure correct
updated string concatenation syntax in LoadIncrementalHFiles . java to improve readability to enhance code clarity and maintainability
fix wATER potion not fire ( # 1193 )
updated the formatting of the method call in CellLayout . java to improve code readability and maintain consistency
updated calculations for decreaseFactor and decreasePercent in ContractStateCapsule . java and corrected formatting in ReceiptCapsule . java to improve code read
refactor AsyncContentProducer and BlockingContentProducer to improve readability and debugging capabilities to enhance code clarity and ensure proper handling of readiness
added a null check for weightField parameter in DocumentDictionaryFactory . java to ensure that weightField is not provided to prevent runtime errors
refactor AppleBundle to use an ImmutableMap for plist variables and add a new test for plist variable substitution to improve code clarity and ensure
add shooting and shooting functionality to turret and turret bullets and damage to enhance gameplay
updated the return type of adaptOrder from OrderCreateApiRequest . OrderCreateApiRequestBuilder to Object in KucoinAdapters . java to ensure type
add a new file for testing XML grammar preprocessing functionality to facilitate the validation and verification of the XMLGrammarPreparser
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to suppress warnings related to serialization only when " doclint :
added FontManager import and overridden font settings in ExtendedEditText . java to enhance font customization capabilities in the user interface
added null check for currentUser in AuthorizeTag . java and created a test for it in AuthorizeTagTests . java to ensure proper handling of null
camel - 16462 : camel - cxf - add check for unsafe character in uri
added a setUpData method to JDBCGeometryTestSetup class to ensure proper setup of data for testing purposes
removed the import of DumpHandler from MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ procedure ] do n ' t stop restore attempt for already cancel task
add server . rmi . create property to make it possible to create rmi registry .
replaced ` String . join ` with ` StringUtils . join ` for string joining in ` CompactionManager . java ` to improve code read
added display metrics retrieval and updated test cases for qualifiers in various classes to ensure accurate display metrics are retrieved and tested for different SDK versions
[ java ] add cluster member id to service heartbeat .
added conditional handling for total thread allocated bytes in TestThreadMXBean . java to ensure compatibility with versions below 21 and above
added handling for negative and positive infinity values in CustomExpression . java to ensure correct evaluation of double values and hash code generation for numeric values
updated logging statements in AjaxListener . java to use parameterized logging instead of string concatenation to improve readability and maintainability of debug and warning logs
added authentication methods to the AuthenticityController and created a corresponding test in AuthenticityFormTest to enhance user experience by allowing authentication through
added assertion to check if the next node is alive in LoweringPhase . java and reformatted code in SnippetTemplate . java to ensure
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClientRequestImpl class
remove redundant comparison in DefaultTrackSelector . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in runtimeserialization javadoc
mow - 320 update crop box coordinate when drag bound box handler after crop
refactor UnitOfWorkFactory to improve code readability to enhance maintainability and ease of understanding for future developers
added a new variable ` allAppsCellWidthPx ` to ` DeviceProfile ` and updated its usage in ` WidgetPreviewLoader ` and `
tika - 1343 -- add content - type - name to submd if the content - type parameter be empty .
updated URI construction in ThumbnailsCacheManager . java to use fileId instead of remote path to improve clarity and accuracy of file identification in the
added support for marking input streams in Source . java to ensure input stream is properly marked and reset when supported
added @ Deprecated annotations to multiple Java files to indicate that these classes are outdated and may be removed in future versions
added a configuration property to control visibility or hide the error stack on the server to enhance user experience by allowing users to control the visibility of error
cloudstack - 4892 : add a warning log when delete template while domain cleanup fails
removed redundant conditional checks for foreign call availability in SPARCArithmeticLIRGenerator . java to streamline the foreign call emission process
[ drools - 5367 ] add support for rule template configuration in decisiontableconfigurationadapter
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to use ` Display . getInstance ( ) ` to
increased DEFAULT _ TIMEOUT _ MILLIS from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for
updated import statements and modified parent string handling in ShadowAssetManager . java to improve clarity and correctness of resource name qualification logic
deleted multiple files MrefStat . java , MrefStat1 . java , and MrefStat1 . java to remove unused or redundant
added a check for blank scope in DependencyInsight . java and modified scope assignment in DependencyInsight . java to ensure that " compile "
refactor error handling in BTCETradeServiceRaw to use constants for error messages to improve code readability and maintainability by reducing
use hamcrest assertion instead of junit in tests / integration / camel - core
added methods to retrieve payment request URLs from the BitcoinURI class and corresponding tests in BitcoinURITest and BitcoinURIITest to enhance functionality
planner - 383 : add validation to abstractfrompropertyvaluerangeaddressdescriptor for collection wrapping
removed redundant calls to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
fix memory leak in jfr threadlocal . freebuffer ( )
refactor null value handling in BasicAbstractTuple to use a for - each loop instead of a stream to improve code readability and maintainability
replaced ` Files . newBufferedReader ` with ` InputResourceUtility . createNewInputResource ` and updated the handling of linter configurations to
replaced direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a post ( ) method that
updated inventory tick event parameters in inventory . java to correct the positioning logic for inventory tick events
added a case for OCELOT _ BABY in PlayerEvents . java to handle the OCELOT _ BABY
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these classes are outdated and should not be used in the
added null check for parameter ' x ' in PreparedStatement and Array classes to ensure proper handling of null values in PreparedStatement operations
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
replaced string concatenation with single quotes in StringBuilder . java to improve code readability and maintain consistency in formatting
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to validate the serialization of JSON files to ensure
[ java ] remove the tx and block cache from the broad test .
added logic to enable or disable specific camera modes in AmcrestHandler and DahuaHandler to enhance camera configuration handling for LensMask
removed ` NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to simplify
updated the constructor of ChangeLogIterator to accept a List of ChangeSetFilters as a parameter to enhance flexibility by allowing specification of ChangeSet
do n ' t print stack trace for guest exception in polyglotlauncher .
replaced ` getenv ` with ` getEnvOrSystemProperty ` for retrieving ` OPT _ OUT _ TRACKING ` in ` Ec2Utils
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor space handling logic in SpacesVisitor . java to use dropParentUntil for better readability to improve code clarity and maintainability
# 263 - add ` ` copy ( true , false ) ' ' method to ` ` copy ( ) ' ' ( # 263
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify that the border is not visible on
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and ` ProjectCommand . java ` to
updated the Kucoin exchange URI from LIVE _ URI to PROD _ URI and added error logging for Kucoin sandbox and host
refactor resource path handling in SpringResourceAccessor . java for consistency to improve code readability and maintainability
updated MICROWATT _ PER _ CUBICMETRE and MICROWATT _ PER _ CUBICMETRE
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure
deleted the Tls12SocketFactory . java file to remove unused code to streamline the codebase
refactor texbibentryresolver to reduce code duplication
added a method to check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy
added a condition to return a specific database data type for FirebirdDatabase to ensure proper handling of double precision data types for Firebird databases
added null checks for dataSource and transactionManager in DefaultBatchConfigurer to prevent potential NullPointerExceptions when dataSource or transactionManager is not initialized
add package - info . java for unittest stubs
updated command from " www . google . com " to " 127.0 . 0.1 " and modified test methods to include a timeout
no effective change - code cleanup - no functional change
updated TermScorer constructor to conditionally use PostingsEnum . NONE based on scoreMode ' s needsScores to ensure correct scoring behavior based
[ dataflow ] fix npe in dataflowmetrics # setmetrics ( )
server : fix the npe in uservmdaoimpl . getvirtualmachine ( )
refactor DynamicPartitionPruner to utilize a new method for finding target object inspectors to improve code clarity and maintainability by central
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ActionExecutionStepTest `
added logic to set the row selection interval for the table if the selected row is non - negative to ensure that the selected row is set correctly
simonstewart : add a new test for arrayindexoutofboundsexception .
refactor PropertySource class for improved clarity to enhance maintainability and readability of the code
added functionality to set and retrieve the user agent in HttpClientBuilder and HttpClientConfiguration classes to enhance HTTP client configuration flexibility by allowing users to specify
refactor MemorySessionStore to use a computeIfAbsent method for session creation to improve code readability and maintainability by encapsulating session state management
updated assertions in IssueTest . java and changed the results set type from String to Object in Reporter . java to improve clarity of test results
updated ByteArrayDataSource initialization to handle null content type to ensure proper content type is used when the file ' s content type is null
added activationrequestdenied event to character system to prevent unauthorized access
updated calculations and method signatures in GraphApplet . java for consistency and clarity to improve code readability and maintainability
added ` updateTaskViewsSnapshotRadius ( ) ` method to ` RecentsView . java ` and updated its implementation in ` TaskView
added SLF4J logging and modified schema handling in StaticMicroserviceVersions . java to enhance traceability of swagger generation for 3rd party
change return type of put and put methods from void to int in ArrayMap . java to enable retrieval of the index of the put operation
updated KafkaContainerCluster to use a startup timeout and changed KafkaContainer to use GenericContainer to improve flexibility in logging configuration and ensure proper handling
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5452 . add retry
refactor header handling logic in StaticServerHttpHeadersWriter to improve clarity and accuracy in determining if headers are added to the headers
added package access check before loading listeners in EventListenerList . java to ensure proper package access validation before loading listeners
added a custom adapter class and modified the ` onCreateView ` method in ` ApplicationsFragment . java ` to use it to enhance the
updated the ` applyIcon ` method signature to include both ` mIcon1 ` and ` mIcon2 ` and ` task2 ` to
refactor DownloadStateCursor to use try - with - resources for better resource management to ensure proper closure of resources to prevent potential memory leaks
[ zeppelin - 4892 ] fix type inference error in basesqmtosqlastconverter
updated HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to use JUnit ' s Test annotation and removed the
added a polling mechanism to the DataInputStreamWithTimeout class and modified the data type of ' byt ' from byte to int to improve handling of
added support for ENABLED _ TS in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency
refactor UpgradeCatalog150 class to improve code organization to enhance maintainability and readability of the codebase
rename networkparameters . testnet3 to networkparameters . oldtestnet
do n ' t update the object panel when there be only one geos
updated OnboardingPrefs handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code cl
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and modified ` HdfsIndexOutput ` to extend ` BufferedIndexOutput ` and
pdfbox - 4892 : do n ' t set the clipping if there be no path .
simplified the local address assignment logic in SocketChannelImpl . java to improve readability and maintainability of the code
refactor TemplateTransformer to use a dedicated method for adding values to a row to improve code readability and maintainability by encapsulating row addition
added a method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to improve code readability and
refactor code to use a constant for character encoding instead of a char array to improve code readability and maintainability by using a descriptive
refactor execution type handling in NodeGenFactory . java to improve clarity and correctness to enhance code readability and ensure correct type casting
removed unnecessary check for stored field in IndexingChain . java to streamline the code for better readability and maintainability
fix ( sql ) : fix parsing of nanosecond timestamp with nanosecond
removed a conditional check for ` postedRunnableStacktraces ` before adding it to ` runnables ` to simplify the stack trace handling logic
corrected a typo in the description of the AbstractGCSProcessor class to improve code readability and maintainability
updated method names from assertInitialized to waitUntilInitialized in ConnectionPoolTest . java to improve clarity and consistency in waiting for connection initialization
updated directory retrieval methods in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use a default value of " single " instead of null to
refactor FaultTolerantChunkProcessor to use filterCount instead of size and adjust related methods to improve clarity and maintainability of the
updated import statements and modified tabbedMethod method in FileWithTabs . java and T4994049 . java to improve code readability
replaced multiple conditional checks with assumeTrue ( ) method in ConsoleReaderTest . java to improve code readability and maintainability by reducing
removed unnecessary conditional checks for user info in GetFeedbackSessionsAction . java to simplify code logic and improve readability
updated calculations for selection and velocity in AllAppsView . java to improve the responsiveness of the selection logic
do n ' t notify clientonresultsavailability when threadinfo be empty
added methods to load model list and refresh in DataModelManagerDialog , modified database connection dialog handling in DbConnectionDialog , ExportPanel , and
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` in ` Writer . java ` and updated method calls in ` AssertionError .
refactor segment size calculation in DocumentsWriter and add a new test for no documents index in TestIndexWriter to improve accuracy of segment size
added dvert validation to the blender context in ArmatureModifier . java to ensure that the dvert value is validated before proceeding
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
added a placeholder for the UnsupportedOperationException to avoid filling in the stack trace to improve error handling by avoiding unnecessary stack trace filling
replaced the calculation of line height with a stream - based average calculation to improve readability and reduce boilerplate code
refactor RotationTouchHelper to accept a DisplayHolder parameter instead of using a singleton instance to improve flexibility and maintainability of the constructor
refactor string handling logic in AVA . java to improve clarity and correctness to enhance code readability and ensure proper handling of quoted
replace Long . valueOf with IdConversion . convertToLong in ServletHandlerInterceptor . java and update trace method parameters in ServletHandlerInterceptorTest . java
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) `
updated the substring method call in TestSqlEntityProcessorDelta . java to correctly match the expected value of the COUNTRY _ CODE _ s parameter
refactor Cache class implementation to improve performance and maintainability of cache operations
updated variable names and scopes from ' e ' to ' ev ' in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in the
modified the ` doBefore ` method to accept a boolean parameter and adjusted the searcher initialization to ensure that the reader messes up our counting logic
added a new JFrame and JTextArea classes to test the number of G - code commands to enhance the user interface by allowing users to
updated WEBAPP _ CONNECT _ TIMEOUT constant to use cfg . getConnectTimeout ( ) instead of a hardcoded value to improve flexibility by
updated various Java files to improve type safety and clarity to enhance code readability and maintainability
refactor TestMediaService class for improved readability to enhance maintainability and facilitate future updates
removed the static string HELP _ ABOUT _ DIOUT _ DIALOG _ USER _ GUIDE _ LINK from Messages . java to stream
print fiat and cryptocurrency option in desktop
add validation to prevent illegal character in account id from be modify
added registerSecurityKeyStart and registerSecurityKeyComplete methods in AccountProxy and HttpAccount classes to enhance security key registration functionality in the account management
refactor ServerSpanThreadBinder class for improved clarity to enhance maintainability and readability of the code
updated user pointer retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified the
[ fix ] csv2shape should use the _ geom and number instead of the location
updated the parameter name from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve clarity and
refactor Parameters class for improved clarity to enhance maintainability and readability of the code
added the method ` setIgnoreNullValues ( true ) ` to ` MultiplePiePlot ` to prevent null values from being ignored in the
refactor bundle loading logic in ResourceBundle . java for improved clarity and efficiency to enhance code readability and maintainability by reducing complexity
pdfbox - 4071 : fix typo , a suggest by valerybokov
add action . isallowedduringediting ( ) and action . isallowedduringediting ( ) method to allow customization of
added userModified variable to LoginSamlAuthenticationProvider . java to track changes in the authentication process
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with null cipher to ensure
updated method names from ` onOpen ` to ` setResponse ` and added ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection
replaced instances of ` Tag . SNOW . isTagged ( ) ` with ` SNOW . contains ( blockType ) ` for compatibility with
added trade ID tracking and updated Trade handling in CryptsyAdapters , CryptsyPublicTrade , and CryptsyAdapterTest to
added error handling for closing the HMS connection in HiveStreamingConnection . java to ensure proper resource management and avoid potential memory leaks
glowserver : use random seed instead of random seed
updated device profiles and icon sizes in DynamicGrid . java to ensure compatibility with the latest Nexus devices
fix refcount . takeuntil ( ) and refcount . take ( ) throw npe if disconnect before connect
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve compatibility with reflective instantiation of SynthContext
fix # 4635 - add support for ` ` & ' ' and ` ` OR ' ' and ` ` XOR ' ' to format
added checks for non - empty file and empty file length in SaveTask . java and updated tests in SaveAndLoadTaskTest . java to
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during concurrent access to these methods
log4j2 - 1349 add support for mutablelogevent in smtpmanager
replace LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper handling of negative lengths in property builders
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` in multiple resource classes to simplify context
refactor methodirbuilder to use getrealhandler ( ) instead of stream . collect ( ) .
updated method calls in JUnitRunner . java and AndroidPlatformTarget . java to improve code clarity and enhance error messages to include Android SDK
increased the cacheSize calculation from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
updated conditional logic in InvocationStageTrace . java and modified operationPerfGroups in TestInvocationPublishModelFactory . java to include a start condition to
do n ' t try to load a keystore if it ' s null
updated the server socket initialization and assertion logic in UpstreamCheckUtilsTest . java to use a dynamic port instead of a hardcoded value to
ggb - 2892 : fix problem with drag - and - drop on window ( ggb - 280 )
added conditional checks for shader storage limits in GLRenderer . java to ensure compatibility with OpenGL ARB - specific configurations
refactor PopulatorContext class for improved clarity to enhance maintainability and readability of the code
skip save all notification if project do n ' t match
added character encoding handling in ZQLJobManager to ensure proper character encoding is used based on system properties
added a check to ensure the argument length is greater than zero before checking if it is an instance of Table to avoid potential ArrayIndexOutOfBoundsException
refactor header values to use a constant instead of hardcoded strings to improve code readability and maintainability by avoiding hardcoded strings
added @ Deprecated annotations to multiple Java files to indicate that these options are outdated and should not be used in future development
removed redundant debug log statements in DerbyDatabase . java to clean up the code and improve readability
increased test timeout duration from 30 milliseconds to 5000 milliseconds in CepEspTest . java and CepJavaTypeTest . java to
replaced ` . parallelStream ( ) ` with ` . stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance
updated the condition for setting the liquibase . hub . mode in HubUpdater . java and added a check for existing Liquib
added constants for IBM and Eclipse OpenJ9 VM versions in Constants . java and implemented a test forVersionInfo in TestDDRExtension
updated the logging message format in FontFamily . java and added a new DebugFonts . java file with debug fonts to improve clarity of
updated import statements in ALPNNegotiationTest . java and added HTTP version handling in NegotiatingServerConnectionFactory . java to ensure compatibility
added RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control in HTTP
added a new file Test6741426 . java that implements a JComboBox and JTextField using NimbusLookAndFeel to
updated the error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest . java to include the exception message to improve clarity of
added null checks for dbMGDPath and dbExtPath in HMSHandler . java to avoid potential NullPointerExceptions during directory operations
added a new package ` com . cloud . bridge . service . core . s3 ` to the ` S3CopyObjectRequest ` class
refactor setup methods to use ` viewThemeUtils . files ` instead of ` accentColor ` for consistency to improve code maintainability and reduce
updated error message in TemporaryFolderUsageTest . java to include fileAtRoot instead of ' / temp1 ' to improve clarity of error
replaced instances of ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation .
add check for empty or null address in clientconfig ( # 11828 )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification by including the root certificate
change compute method return type from void to int in multiple classes to improve performance by allowing multiple computations to be executed
added a conditional check before setting the menu mode in ModeToggleMenu . java to ensure the menu is only set when the popup is not visible
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added two new test files , ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` for testing the ` GC .
replaced ` . map ( routes ) ` with ` . doOnNext ( routes ) ` in ` CachingRouteDefinitionLocator . java
refactor compensation validation logic to handle custom addresses more effectively to improve clarity and maintainability of the code
refactor StringSubject class for improved readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to BatchValidateSignContractTest . java to temporarily disable tests that are not ready for execution
corrected a typo in the method name from ` setMaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to ensure consistency in
updated query formatting in RetweetActivity and Search classes to replace " @ " with " from : " to ensure accurate retrieval of recent queries by
removed the conditional check for forRebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary checks
added a POST mapping for importing YubiKey accounts in YubiKeyAccountRegistryEndpoint . java and corresponding tests in YubiKeyAccountRegistry
updated shader options in ShaderManagerLwjgl , FontMaterialProducer , and AbstractNode to use " tex " instead of " texture
added null check for cnt in paintOnTopLoop and implemented safe area handling in SideMenuBar to improve robustness by preventing potential NullPointerException
refactor AbiWriterProtocol class for improved clarity to enhance maintainability and readability of the code
fix npe in hierarchybase when subname be null
updated data flag from IMMOBILE to GRAVITY in EntityItem . java to align with the new data requirements for gameplay
added a null check for ` sim ` and ` name ` in the ` CustomExpression ` class to ensure that ` sim ` and ` name
replaced the method ` requestBlindVoteListFromNetwork ` with ` missingDataRequestService . sendRepublishRequest ( ) ` to
added a new test method ` testCase4 ` to ` PostgresTest . java ` to verify the functionality of the ` Hikari
replaced occurrences of double quotes with single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintain consistency
refactor line splitting logic to use a constant for consistency to improve maintainability and readability of the code
truffle - api : use atomicreferencefieldupdater instead of atomicreference in singleimplementor
added null checks before adding queries to the query list in SimpleFacets . java and updated test cases in SimpleFacetsTest . java to
refactor thinghelper to use genericthingbuilder instead of thingbuilder . create ( )
replaced ` printHelp ( ) ` with ` error ( " A command must be provided " ) ` for command validation to improve error handling
added a check to ensure the output file exists before proceeding with further operations to avoid errors when the output file does not exist
added date parsing logic for date strings in DateConverter . java and corresponding test cases in DateConverterTest . java to enhance date parsing functionality and
added a method to find a Post by its slug in PostRepository and updated SpringDataJPALockTest to assert the post is not null
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related logic to check for
added a static import for SimpleClientHttpRequestFactory and set connection and read timeouts in ClientRegistrations . java to ensure proper handling of HTTP requests
added assertions to verify file existence and naming conventions in SourceTest . java to ensure consistency and correctness of file path handling in tests
do n ' t set ` ` graalvm . version ' ' to ` ` graalvm . version ' '
updated access and refresh token validity settings in ClientAdminBootstrap . java to ensure proper handling of access and refresh token validity values
updated the return statement to use ` Options . v ( ) . android _ api _ version ( ) ` when ` androidAPIVersion ` is
removed the ' this ' keyword from several methods in PropertyPlaceholderHelper . java to simplify the code and improve readability by eliminating unnecessary
updated the formatting of the ownership string in Resources . java to improve readability and maintain consistency in formatting
updated ZkSolrClientTest to track and assert the maximum number of collections in parallel to improve reliability and accuracy of collection processing in tests
added BigInteger type to simpleTypes in MongoMappingContext . java to support BigInteger data type handling in the application
added a condition to check if the button text is equal to the view before showing toast to improve user experience by preventing unintended toast
added a condition to check if MEncoder is not out of sync when MEncoderNoOutOfSync is disabled to ensure proper handling of audio formats
increased the maximum number of event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more
changed access modifiers of constructors and methods in CountMin4 , IncrementalResetCountMin4 , IncrementalResetCountMin4 , and Feed
added methods to retrieve file float source and created a new test class for sorting functionality to enhance functionality and ensure correct sorting behavior in external files
updated the exception message from " Invalid URL " to " Connection error " in DoiFetcher . java to improve clarity of error reporting for
updated OpenRocketSaver and FlightDataBranchHandler to include source ID and modified event handling in FlightDataBranchHandler to enhance
changed the visibility of the check method from private to protected to allow subclass access to the check method for better extensibility
added synchronization handling for file synchronization in FileActivity to improve user experience by providing feedback when a sync operation fails
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for URL encoding to enhance security by preventing XSS vulner
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions when the client
adjusted the calculation of the total value in IntHashSet . java to correct the calculation of the total value
added a conditional check for lock timeout before updating the entry in FeedRefreshUpdater to improve error handling for lock timeout scenarios
refactor conditional statements in SolarisAclFileAttributeView . java for improved readability to enhance code clarity and maintainability
refactor Edge initialization to use an array instead of a list to improve code readability and maintainability by using a more descriptive variable name
added a try - finally block to close the InputStream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix bug in bibtex parser that use \ x0d and \ x0a
added support for parsing properties with strict mode in the Main class and corresponding tests to ensure proper handling of unknown parameters when strict mode is enabled
add support for always - invalid constraint type ( # 6370 )
updated the component ' s camel context from " http " to " http4 " in HttpComponentVerifier . java to ensure compatibility with the latest
added a method ` waitForThingsToLevelOut ( 30 ) ` to ` TestCloudPivotFacet . java ` to improve test reliability
replaced Integer . MAX _ VALUE with Long . MAX _ VALUE in UBJsonWriter . java to handle larger byte lengths to ensure correct
refactor ApplicationTest . java for improved test coverage to enhance reliability of application testing scenarios
changed the data type of the ` details ` variable from ` String ` to ` StringBuffer ` to improve performance and memory efficiency when constructing the `
replaced instances of ` Type ` with ` RoboType ` in multiple files to improve clarity and consistency in naming conventions
[ java ] return action . aborted when the record be complete .
added checks for the ' cacheKey ' and ' cacheLookup ' attributes in EntityProcessorBase . java and updated related tests in TestCachedSql
added a new file PutfieldError . java that demonstrates handling of incompatible class change errors to provide a demonstration of
cloudstack - 4892 : fix a bug in awsaddresstranslator . getprivateaddress ( ) .
patch by jbellis ; review by brandonwilliams for cassandra - 113
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple files
remove duplicate method call in Flyweight . java to improve code readability and maintainability
refactor TestMethodResultMapBuilder class for improved readability to enhance maintainability and facilitate future development
fix java . lang . integer exception in findnulldereference ( ) .
[ hotfix ] [ runtime ] remove unused constructor from tasklocalstatestoreimpl
updated return statements in Utils . java to return different days instead of milliseconds to improve clarity and consistency in displaying time information
updated conditional checks in Utilities . java and FloatingIconView . java for DeepShortcutView and ImageView to improve handling of DeepShortcutView
changed the type of the validator from String to Object and updated its initialization logic to improve flexibility in validation of JWT claims based on the provided
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use it to improve code maintainability and facilitate
added a check for registration before registering the sticky instance in ThumbnailView . java to ensure that the component is not registered before registering it
added logic to check if the string length does not exceed 127 characters in NormalizerBase . java to ensure that the normalization process does not exceed
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL execution in SpillableGroupByIT and updated test cases in NoOpStatsCollectorIT to improve test reliability and
camel - 16462 : fix camel - test - java - dsl to use junit4 instead of contexttestsupport
added ` attrs ( AttrKind . OK , width ) ` and ` attrs ( AttrKind . OK , ... ) ` to the ` HtmlTag
added a newline tag to the HTML report in HtmlCoreReport . java to enhance the HTML structure for better readability
updated the calculation of RAM bytes used in DocSlice . java to handle null scores to ensure accurate memory usage calculation when scores are null
added StringHolder and StringHolderTypeAdapter classes for serialization and deserialization of StringHolder objects to facilitate custom serialization and deserialization of String
add extra data from mining parameters in MergeCoordinator and add a test for it in MergeCoordinatorTest to ensure correct handling of extra data in
added a static map to track the number of parsed files and output files in DependencyParser . java to improve flexibility in specifying the number of
refactor PathParamServerEndpointConfig class for improved clarity to enhance maintainability and readability of the code
updated variable names from ` configedThreshold ` to ` configuredThreshold ` in ` DefaultMigrationAddressComparator . java ` and introduced a new delay
change parameter name from ' part ' to ' partOrList ' in multiple classes to improve clarity and consistency in parameter naming
[ zeppelin - 4892 ] fix license header in twitterbootstraputils
removed the custom basicCategory method from SpanishTreebankLanguagePack . java to streamline category extraction logic to improve code readability and maintain
hhh - 10663 - deprecate entityloader . loadbyuniquekey ( ) in favor of entityloader . load ( )
hbase - 25830 regionserverproceduremanager should clear taskpool before remove it from taskpool
added a check to set the size when width or height are zero in PGraphicsJava2D . java to ensure proper sizing behavior when
move fillpool ( ) from hikaripool to hikaripool
replaced the ` assureMatchVersion ( ) ` method with a default value of ` Version . LATEST ` in multiple filter factory
fix ( proxy ) : add default method to executable method writer ( # 5353 )
mondrian : do n ' t call match ( ) when there be a space in the input
refactor GuavaOptionalSubject , IterableOfProtosSubject , MapWithProtoValuesSubject , MultimapWithProtoValuesSubject , and Proto
improve error message when payload length be negative .
move publishsubscribechannel from ' channel ' to ' dispatcher '
updated executionId type from String to Long across multiple classes to allow for greater flexibility in execution ID handling
added dimensions and dimensions to the digest update method in ImageProcessor . java to optimize image processing by using smaller dimensions
removed logging of the overlay version in SolrConfig . java and added necessary imports in SolrConfigHandler . java to improve logging clarity and ensure
updated the delayUntil calculation in FileSyncAdapter . java to account for the current system ' s current time to ensure synchronization timing accurately reflect
[ hotfix ] fix checkstyle violation in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` and ` addPathToMTree ` methods to use ` Path ` instead of ` String ` for better
updated URL handling in DefaultPackageScanClassResolver and added a new test case in DefaultPackageScanClassResolverTest to improve URL parsing and ensure
[ hotfix ] [ table - common ] [ table - planner - blink ] [ table - planner - blink ] add utility class
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` to retrieve principal and credentials from the ` SecurityContext `
renamed AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve clarity and consistency in naming conventions
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to align with the latest Android features
added caching functionality for the " customfilename " field in GenericViewFragment to improve performance by reducing the number of calls to autoSuggest
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and updated assertions in ` StoreAPITest .
removed the collection name from the readCallback instantiation in MongoTemplate . java to simplify the code for better readability and maintainability
updated zoom factor calculations and corrected casting in MapOverviewImageMouseHandler . java to improve accuracy of zoom calculations and ensure proper type casting for zoom
added Similarity support to KNearestNeighborClassifier and related test classes to enhance classification accuracy based on similarity criteria
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by utilizing a more efficient query
updated the way reasons are retrieved from ` lowResourceCheck . toString ( ) ` to ` lowResourceCheck . getReason ( ) ` to improve
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added Mtu request methods to ShadowBluetoothGattTest and ShadowBluetoothGatt classes to ensure correct behavior of mtu request
refactor servlet output stream creation into a separate method ` createServletOutputStream ` to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for link failures
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety in concurrent scenarios
updated Japanese language messages in Resources _ ja . java to improve clarity and usability of the Japanese resource files
updated size condition from 0 to 1 in JDBCTypeMapping . java and modified test assertions in JDBCTypeMappingTest . java to ensure correct handling
added synchronized keyword to several methods in GenshinScene . java to ensure thread safety during player addition and removal operations
replaced the isScreenReaderActive method with a new AccessibilityStateTester class and updated the logic for determining accessibility status to improve
added a new command behavior ` SIDE _ NAVIGATION ` to the menu behavior checks in ` MenuBar . java ` and modified
refactored subscription handling in PoloniexManualExample . java and added state change logging in WampStreamingService . java to improve
added error handling for contract type errors in UpdateSettingForEnergyLimitContractActuator . java and updated energy limit validation in UpdateSettingFor
renamed ` url1 ` to ` javaUrl ` and updated related logic in ` PostmanJsonBuilder . java ` to improve clarity
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to enable access and modification of the namespacePrefixRef
updated assertions in TestRange to use a new helper method for date comparison to improve code readability and maintainability by centralizing date comparison logic
added JettySolrRunner handling and security data retrieval in BasicAuthIntegrationTest . java and updated ZkStateReader . java to enhance security
added price feed to the TradesChartsViewModel constructor to allow customization of market price in the trades chart
updated configuration settings in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to set master info port to
updated variable names and logic in NativeString . java to improve clarity and consistency to enhance code readability and maintainability by using descriptive
added a download functionality to the FileDataStorageManager to enable file downloads for improved user experience
renamed the variable ` logChannel ` to ` raf ` and updated its usage in ` MappedRawLog . java ` to improve code read
added methods to check if a registry is running in TestLibrary . java and FileUtils . java to implement functionality to check if a registry is running
removed unused import statements and added componentPresetDao . startLoading ( ) method calls in multiple test files to streamline code and ensure proper loading
[ fix ] all warning , except those in the gwt backend and in the androidmanifest . xml file ( min sdk version < target sdk version ) .
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 1084 : set isolation level to transaction _ require _ to _ set _ isolation _ level when transaction be disable
added transaction attribute handling in AbstractStepFactoryBean and modified error handling in ItemOrientedStep and SkipLimitStep to improve error management and
replaced ` CasClient ` with ` DirectCasClient ` and introduced a new ` CasManagementSecurityInterceptor ` class to enhance security handling
updated menu item visibility and added category editing functionality in ListFragment and NavigationDrawerFragment to improve user experience by allowing the addition of a category in
rename method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and update method names in ` FileDisplayActivity
pdfbox - 4071 : avoid classcastexception when create a pdstructurenode
updated font size handling and text size retrieval in TerminalView and TerminalBridge classes to improve clarity and consistency in font size management
added validation for the fact before processing to ensure that the fact is valid before processing to avoid potential null pointer exceptions
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
updated return statement in ArrayListSpanAccumulator to return a new ArrayList instance instead of an existing one to ensure that the original spans list is properly initialized
removed unnecessary locking mechanism in Liquibase . java to streamline code for better readability and maintainability
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set it to null to ensure that the microserviceVersions
refactor foreign key and index creation logic in TableRetriever and AbstractRetriever classes to improve clarity and maintainability of foreign key and index creation
camel - 15836 - camel - aws2 - s3 : add unit test for the minimal configuration option
removed the currency pair parameter from the getBitstampUserTransactions method in BitstampAccountService and added a new method in BitstampAccountServiceRaw
added error handling for retrieving component instances in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing components
modify push ( ) to return a boolean instead of void to allow the push ( ) method to return the result
refactor LegacyAddressTest to use BufferedReader for data loading to improve readability and maintainability of the test code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to findDropTargetAt from other packages
refactor Snackbar handling in NotificationsActivity and DrawerActivity to improve code readability and maintainability by encapsulating push warning setup
do n ' t close the channel in case of an ioexception .
updated null checks and method names in LdapPasswordPolicyEnforcer . java for consistency and clarity to enhance code readability and maintainability by using
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability of the codebase
added an @ Ignore annotation to the MemoryManagerTest class to mark the test as ignored due to issue PHOENIX - 2840
nifi - 1181 : add timezone attribute to aboutdto to provide a way to set the timezone of the nifi instance
added a boolean parameter to the splitOwnedRanges method and adjusted assertions in Splitter . java and StorageService . java to improve handling of
removed unnecessary try - catch blocks for reading objects in BeanContextSupport . java to simplify code and improve readability
added synchronization around the addition of activeCircuits in CircuitManagerImpl . java to ensure thread safety during concurrent modifications to the activeCircuits list
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using a more appropriate exception type
[ hotfix ] [ core ] move eventdrivensourcerunner to sourcerunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve clarity of authentication failure messages
refactor ContainerOrderFocusTraversalPolicy class for improved clarity to enhance maintainability and readability of the code
ggb - 1181 : fix for [ freehand , function ] , [ freehand , function ] , [ freehand ]
updated the constructor parameter order in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve clarity and consistency in the event structure
refactor database connection handling in SchemaCrawlerMain . java and add execute method in Executable . java to improve connection management and ensure proper closure of
support tl1.2 and tl1.1 by default for jdk 1.5 and jdk 1.6
corrected a typo in the exception message from " Unable to allocate counter , values buffer is full " to " Unable to allocate counter ,
modified audio stopping logic and adjusted ndx calculation in MediaManager . java to improve audio handling logic and ensure correct index calculation
removed unnecessary conditional check for debug logging in HttpConnection . java to simplify debug logging for better readability and maintainability
added support for JPA ' s Transient annotation in JpaPersistentPropertyImpl and JpaPersistentPropertyImplUnitTests to ensure proper handling of
updated assertions in UpgradeResourceProviderTest to verify the correct stack version and old stack ID to ensure compatibility with the new versioning requirements for the
truffle : use get ( ) instead of symbol in eval ( )
change access modifier of isBinaryType method from private to public in SampleResult . java and update logging statements in Proxy . java to improve access
updated the configuration key from " hive . tez . dynamic . parition . pruning . max . data . size " to " hive
refactor JavaEditor and JavaProblem classes to remove unused priority variables to simplify code and improve readability by eliminating unnecessary complexity
replaced ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType . java ` and ` BloomFilterHandler .
updated line separator handling in TableWriterTest to use a configurable line separator to ensure consistent line separator across different operating systems
refactor DebugHelper class for improved readability to enhance maintainability and facilitate future development
added a boolean field ` ownsTexture ` to ` ParticleEffect ` and ` ParticleEffect ` classes to check texture ownership before proceeding
added LDAP authentication configuration to HiveConf . java to enhance security by enabling LDAP authentication features
[ datacatalog ] fix typo in javadoc
added Context import and modified toggleSoftInput calls in DetailActivity . java to improve code readability and maintainability
added a test method to convert a map of primitive to an object in the DataTableTypeRegistryTableConverterTest to ensure correct mapping of map types
updated the size calculation from 100 to 10 in TestFileSystem . java to improve memory management and accommodate larger file sizes
updated error messages in ContentTypeManager . java to provide clearer guidance on resource closing issues to improve user understanding of error handling and resource
made the ` dropSequences ` method abstract in ` AbstractDatabase ` and updated its implementation in ` DerbyDatabase ` , ` MSS
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replace direct assignment of binaryField with a variable assignment to improve code readability and maintainability
bug fix : hierarchies . getproperties ( ) do n ' t gather the root node ' s style .
added a test for the ` findOneAfterUpsertForNonExistingObject ` method in ` MongoTemplateTests ` to ensure that the ` findOne `
refactor mid calculation to use a new ` low ` method for better clarity to improve code readability and maintainability by using a more
added event recording functionality to the Launcher class and refactored broadcast intent handling in Stats . java to improve tracking of app launch events and
added drawing and disposal of the graphics in JavaSEPort . java to ensure proper resource management and prevent memory leaks
update instructorfeedbackresultspagedata to use the previous team instead of the email
added a check for zero inventory IDs in the Inventory class and created a test for it in InventoryTest to ensure that a valid inventory ID is
added a conditional check for the found state before breaking the loop in ConfigDescriptionRegistry . java to ensure that the loop does not fall back to
updated return type handling in multiple visitor visitor classes to ensure correct behavior when returnType is null
updated TileMapRenderer to handle blended tiles correctly to improve robustness by avoiding null pointer exceptions when loading blended tiles
updated class names in Probe . java for consistency and clarity to improve code readability and maintainability by standardizing class names
[ geotools2d ] fix npe in getarea ( area )
updated lockOnSync assignment logic in Throttler . java to use currentThrottleRate directly instead of creating a new Integer instance to improve clarity
pipe : fix the inheritance of pipeeventitem . modifyspeed ( ) and pipeeventitem . modifyspeed ( )
updated the timeout value in ZkController initialization from 1000 to 1000 to allow more time for ZkController initialization
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests ` to verify the correct handling of
added imports for LengthFilter , KeepWordFilter , and CharArraySet , and added brokenOffsetsConstructors to TestRandomChains . java to ensure
removed the import of JUnit ' s Ignore annotation from RandomPlaneTest . java to clean up the code and reduce unnecessary dependencies
llvm : use int . tounsignedlong ( ) instead of int . toint ( ) to avoid overflow .
refactor btCollisionObjectArray and btRigidBody to use btCollisionObject . getInstance instead of direct method calls to improve code
added a new constant ` BUILD _ COPYRIGHT ` and updated ` OPENROCKET _ URL ` in ` AboutDialog . java ` and
add getdistributedobjects ( ) method to jetclientinstanceimpl to return object info
added print statements for finCount and finInertia in FinSet . java and updated inertia values in MassCalculatorTest . java to
change memory semaphore from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to align memory management with the
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified method signature in CreateAlignedTimeSeriesPlan . java to
change burning man output prefix to bisq co - founder .
updated JsonLoaderTest to use ` json ( ) ` instead of ` replace ( ' \ ' , ' ' ) ` and added exception handling
updated the threshold check for tableSize from 1 < < 30 to 0x40000000 in ObjectSet . java to ensure the capacity is within
updated imports in ColumnSnapshotGenerator . java to include CachedRow and JdbcDatabaseSnapshot , and added null check for dataScale before setting decimal digits
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the code by eliminating unnecessary dependency on
added exception handling for SecurityException in FileHelper . java and modified content extraction logic in TextHelper . java to improve robustness by handling SecurityException and
added a new constant ` StyleWithMultipleAttributes ` and updated ` resolveAttributes ` method in ` ShadowThemeTest . java ` to support multiple
updated the condition to check for the size of sheets in HSSFWorkbook and modified sheet creation logic in TestHSSFWorkbook to improve
replaced ` primaryColor ` with ` elementColor ` in ` ManageAccountsActivity . java ` to ensure the correct color is used for account
updated handler initialization to handle null replyHandler to improve robustness by avoiding potential NullPointerExceptions
updated MariaDbDbmsType , MySqlDbmsType , DbmsType , FilterSortedSkipOptimizer , and AbstractDbmsType to
added a new method ` whenType ` to return an ` Optional < T extends Tree > ` to facilitate type - checking for
refactor itemlauncher to use a new method for retrieving user view destination to improve code readability and maintainability by consolidating repetitive
updated the response to return a temporary redirect using the application settings service ' s public URL instead of a hardcoded status to improve user experience by
[ flink - 20663 ] [ kinesis ] add validation for non - serializable deserializer in kinesisconsumer
( chore ) camel - jbang : fix typo in java doc
replaced a fixed sleep mechanism with a try - finally block to ensure the zkClient is closed in a finally block to ensure proper resource management
rename methods related to icon transition progress from setIconAndDimTransitionProgress to setIconsAndBannersTransitionProgress across multiple classes to improve clarity
refactored the read method in ProxyHandler to use a dedicated read method to improve code readability and maintainability by centralizing the read
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in the ` ABCase1 _ 2 . java ` file to simplify
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to improve error handling by indicating if the action is not
replaced direct order comparison with Integer . compare for consistency in AbstractConfigLoader . java and updated test cases in TestMicroserviceConfigLoader .
added a new file ` PicOfDayAppWidget . java ` to implement functionality for updating and updating app widget images to enhance the application '
fix internallbvmserviceofferingid to be a string instead of long
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil and modified join condition handling to improve compatibility with Hive
[ hotfix ] mark several classes as deprecated to indicate that these classes are outdated and should no longer be used
added user and password options to NodeToolCmd and modified JMXConnector initialization to include credentials to enhance security by allowing users to access remote jmx
removed redundant initialization of BytesRef in Stemmer . java to streamline code by eliminating unnecessary variable declarations
updated parameters and method calls in AppsCustomizePagedView . java and AppsCustomizePagedView . java to improve code
ggbapplet : do n ' t show the 3d view if there be no 3d view
updated rotation positioning logic in GcodeRenderer . java to ensure rotation values are non - negative to prevent negative positioning
added a new option ` WORKSPACE ` to the ` OptionEnum ` and integrated it in ` TerminalClient ` to enable configuration of the workspace
updated the file path from " apt " to " html " in CLIManagerTest . java to ensure the test file points to the correct
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and compatibility with JUnit 5
updated the ` confimAccess ` method to use a ` Map < String , Object > ` instead of a ` AuthorizationRequest ` parameter to
added a assertTrueEventually to clear cache hit counts in HibernateIT . java to ensure that the second level cache hit count is accur
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
refactor MultiPaintEventTest class for improved readability to enhance maintainability and facilitate future updates
changed the declaration of mNewScale from final to non - final to simplify the assignment of mNewScale
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the synchronization process
added uniqueKey field handling in LukeRequestHandler to ensure uniqueKey is correctly stored in the schema
added support for rounding border colors in BorderEditor and updated EditableResources to utilize this feature to enhance the flexibility of border color management
add miss @ truffleboundary annotation and call neverpartofcompilation in binaryparser .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging statements for pending requests in GatewayRSocket , GatewaySocketAcceptor , and modified pingPongApp to return HIGHEST
added Toolbar . OnMenuItemClickListener implementation to RecentChatFragment to enhance user experience by providing a clearer menu option for recent chats
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
replaced the ` add ` method with ` push ` and ` pop ` methods in multiple classes to improve clarity and consistency in scope management
updated API _ URL , IMAGE _ URL , HOME _ URL , EVENTLOG _ WIKI , and EVENTLOG _ WIK
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by reducing duplication
replaced usage of ` Collections . sort ` with direct calls to ` Collections . sort ` in multiple classes to simplify code and improve readability
added date and time patterns to the FormatData _ hr _ HR . java file to provide proper formatting for date and time representations
added a call to clear the focus on the clicked view in DetailFragment . java to improve user experience by ensuring the clicked view is properly displayed
updated spinner selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to improve clarity and functionality of language selection handling
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " in multiple
added native methods for registering global and weak fields and access fields in FastGetField . java to enhance functionality for managing global and weak fields based
added handling for UNION and NULL types in ReflectData . java and updated test cases in TestReflect . java to ensure correct serialization and deserialization of
[ java ] increase timeout for seda block when full test
added a null check before remapping the RClass in ResourceMerger . java to avoid potential NullPointerException when resourcePath . getRClass ( ) is
added default constructor for HapiFhirDialect and HapiFhirH2Dialect , HapiFhirMariaDB
camel - 1776 : camel - http - add connection close header to the endpoint to make it easy to see if the endpoint be close
increased the socket timeout from 60 seconds to 12 seconds in BasicDistributedZkTest . java to allow more time for operations to
added an assertion to verify the count of final _ price _ cts in a ticket in BaseReservationFlowTest . java to ensure that the
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class for improved clarity to enhance maintainability and readability of the code
use getfirstelementchild ( ) instead of getfirstelementchildren ( ) . getfirstelementchild ( )
planner - 3453 : add an immutable look - up strategy if the object be an enum and add a test for it .
updated metaPortStart and dataPortStart values in ClusterEnvBase . java and added waitingToShutDown method in ClusterNode . java
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5453 - do not
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure proper handling of content type for the webdav
added a new method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created a corresponding test class ` LazyTraceThreadPool
added distance comparison logic for geometric coordinates in DistanceOp . java to improve accuracy of distance calculations by skipping unnecessary computations
changed the variable name from ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity and consistency in the
update compaction progress when get the next partition , not row
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated ` VectorUtil ` to use it to
added getheight ( ) and getwidth ( ) method to basemonochromebitmapsource
added validation to ensure polygons contain at least 3 points and updated localVertices assignment logic to ensure that localVertices does not contain at least 3 points
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to improve code consistency and maintainability by centralizing ObjectMapper
added a null check for the coeff before creating an array in GeoImplicitCurve . java to avoid potential NullPointerException when coeff is null
updated the character encoding handling in ExternalNameRecord and added a test for the bug 47384 to ensure correct parsing of external names with Unicode
corrected a typo in the description of the JMS Destination type in AbstractJMSProcessor . java to ensure consistency and clarity in the
added logic to exclude " username " and " password " from login prompts in LoginInfoEndpoint . java and corresponding tests in LoginInfoEndpoint
replaced the method ` remove ` with ` removeIf ` in ` AbstractController . java ` to ensure listeners are removed only if they match
added a new action toggle option to toggle the spin in the PieChartActivity to enhance the user interface by allowing users to toggle the spin
cloudstack - 4892 : do n ' t kill vhd copy process if vhd return null
hbase - 20615 do n ' t create a table if there be no quota
updated import statements in AndroidInput . java and added a resize method in AndroidInput . java to improve code organization and ensure pressure is resized
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the instantiation of ` JavaBeanDescriptor ` to enhance
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable tests that are always failing and blocking PRs
fix hopperhock # getitemswithinaabb not work correctly
added authentication dialog for username and password in SsoWebViewClient . java to enhance user experience by providing a confirmation dialog for authentication requirements
refactor TestStressIndexing2 to improve document deletion logic and add new methods for deleting documents and queryings to enhance test reliability and
[ flink - 22559 ] [ table - planner - blink ] ignore upsertkafkabletableitcase # test
replaced ` get ` with ` computeIfAbsent ` in ` ResTable . java ` to improve performance and readability by using ` computeIfAbsent
added DeserializationFeature . ACCEPT _ SINGLE _ VALUE _ AS _ ARRAY configuration to DefaultEntityMapper to enable proper deserialization of single values as
updated localization format in VersionChangeLogs . java to include additional language options to enhance localization support for improved user experience
bugfix # 2261 , use resourceutils . getstring ( ) instead of string array
added a new method ` visitRelExpressionInstanceOf ` to ` ASTBuilderVisitor ` and modified the ` visitExpressionInstanceOf ` method to
nifi - 4892 : add content - type header to gethttp to provide the content - type header for the flowfile
refactor resource history handling in BaseHapiFhirDao , ResourceHistoryTable , and FhirSystemDaoTransactionR5Test
changed button names from " exit " to " done " in HelpActivity . java and added a condition in SearchBookContentsActivity . java to
refactor NatsConfiguration class for improved clarity to enhance maintainability and readability of the code
refactor ` invalidateStalePartitions ` method to accept a list of partition names instead of a single ` PartitionNameWithVersion ` to improve code
viewresultsfullvisualizer : use circular fifo buffer instead of boundedfifobuffer
updated drawable resources from ic _ group to ic _ chat _ bubble in UsersAndGroupsSearchProvider and ShareUserListAdapter to improve user interface
replaced calls to ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java `
updated method names and imports in MocksCreationTest . java for consistency and clarity to improve readability and maintainability of the test code
added a constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased the timeout duration from 10 seconds to 30 seconds in the awaiter method calls to allow more time for the phaser to complete
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated logic from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
vmware : fix uuid encode issue when create vmware template
add test for deposit workspace item without workflow test
replaced ` stream ( ) . forEach ( ) ` with ` stream ( ) . distinct ( ) ` in ` ClassLoaderSupportImpl . java
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a new test case in TestSpecificCompilerTool to improve argument ordering and ensure correct ordering of
added a check for external tables before deleting the directory in HiveMetaStore . java and updated directory deletion logic in TestHiveMetaStore .
hive - 20613 : add configurable timeout and keepalive time for async operation ( ashutosh chauhan via ashut
added a try - catch block around the dismissDialog method call to handle potential exceptions to improve stability by preventing application crashes due to
refactor UpgradeResourceProvider to use a constant for serviceName and componentName instead of a hardcoded string to improve code readability and maintainability by
added a new variable ` currentConfInfo ` in ` OperationSetTelephonyConferencingSipImpl . java ` to store the current
add a method to clear log entries in FlutterLogTree and update the log tree in FlutterLogView to ensure that the log tree
added checks for channel and input shutdown status in ChannelEndPoint . java to ensure proper handling of output and input shutdown scenarios
refactor SetNullableGenerator class for improved clarity to enhance maintainability and readability of the code
camel - 16462 : fixed reportincident routes to use the same endpoint for example example .
simplified import statements and updated form handling logic in NettyRoutingFilter and FormIntegrationTests to improve code readability and maintainability by
added @ ApiOperation annotation to multiple service classes to enhance API documentation for better clarity and usability
updated Lwjgl3Application and Lwjgl3Window to manage lifecycle listeners more effectively to ensure proper resource management and prevent memory
updated the FG _ FK color from 90 to 200 to improve the visual appearance of the UI components
set audioFormats . mp3 . required to false in SoundManager . java to disable mp3 audio support for improved audio handling
use systemkeyspace . getbuiltindexes ( ) instead of query . getbuiltindexes ( )
add preference about group and label to the general preferences page .
[ hotfix ] [ test ] use ` optional < ioexception > ` instead of ` throwable `
refactor MediaFormatUtil to improve code readability to enhance maintainability and ease of understanding for future developers
added an overridden method ` isCellEditable ` to the ` GeneralTab ` class to provide a default implementation of the ` isCellEditable `
added an ` isOnlyPrintCommands ` method to ` AbstractUnusedDependenciesFinder ` and integrated it into ` UnusedDependenciesFinderFactory ` to
updated the number of vscales from 2.0 to 0.85 in VocalTractModifier and VocalTractScalingProcessor to
updated import statements for BaseScalarUdfTest and TestGenericUDFConcat classes to ensure consistency in import statements across test files
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for UaaAuthenticationDetails objects
refactor testSkeletoncontrolrefresh to use the new animComposer instead of the old anim channel
rename nodefilter to nodecountfilter for clarity
updated the condition to check if syncBlockToFetch is greater than SYNC _ FETCH _ BATCH _ NUM to ensure that syncBlockTo
updated the ` setState ` and ` _ localctx . ty ` from 3 365 to 366 and modified the ` _ localctx . ty
replaced ` isEmpty ( ) ` with ` stream ( ) . anyMatch ( transitive . getScope ( ) ) ` in ` ExcludeDependency .
replaced the ` tmp ( ) ` method with ` dst2 ( v ) ` and updated the ` lerp ( target , alpha
initialized the ` args ` array to ` null ` in ` GridHubConfiguration . java ` to ensure that the ` args ` array is initialized
refactor linker argument handling in RustBinaryDescription and add a new test for linker flags in RustLinkerIntegrationTest to improve code
improve reliability of apppage . verifystatus ( )
added configuration for " hive . query \ \ name " in HiveConf . java and improved logging in GenericUDTFGetSplits .
removed unused import of java . io . File in TileAtlas . java to streamline code by eliminating unnecessary dependencies
refactor EscapeProcessingOutputStream and GradleDaemonExecutor to use AtomicBoolean for closed state management to improve thread safety and ensure proper handling of
updated the ` validateQuery ` method to include additional parameters for better error handling to enhance flexibility in validation by allowing multiple arguments to be passed
updated INDEX _ VERSION from 1 to 2 and refactored the getTree method in LuceneExecutor . java to improve index versioning and stream
[ hotfix ] [ kryo ] add unit test for kryo serializers
added null check before removing configuration properties in BlueprintConfigurationProcessor . java and updated test cases in BlueprintConfigurationProcessorTest . java to ensure that configuration
refactor Boolean handling in MetaStoreDirectSql . java to use BooleanUtils for converting boolean values to Boolean objects to improve code readability and
added hideCustomizationDrawer ( ) method to Launcher . java to improve user experience by hiding the customization drawer when necessary
refactor TermVectorComponent to use a constant for warning keys and update related logic to improve code clarity and maintainability by centralizing warning
added optimistic type logging and modified log statements in mmm Compiler . java and ppp Compiler . java to improve logging clarity and ensure
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to the DockerClientFactory and created a new DockerConfigurationStrategy class to enable users to access and access the unix socket
added JUnit tests for the ` testEvenLowRateIP ` method in ` CloseableDoSFilterTest ` and ` CloseableDoSFilter
added reactivestreamsnofActivesubscriptionsexception to make it easy to understand when a stream have no active subscription
refactor Vectorizer and TezCompiler to use MapWork instead of MapRedTask for vectorization to improve code clarity and maintainability
updated constructors in StringAppender and LogDivertAppender to include a new parameter to ensure proper initialization of the superclass with the new boolean parameter
fix npe in jmetertreemodel when gui package be null
[ gr - 16717 ] fix linkage . isweak ( ) to support weak function .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
add test case for defaulttransactionthreadlocal
added a check for invalid OperationHandle messages in HiveStatement . java to improve error handling by logging invalid operations on server side
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
camel - 14836 - camel - aws - secrets - manager : add unit test for the minimal configuration
refactor SimpleTree class for improved readability to enhance maintainability and facilitate future updates
removed the exception message from the error response in UserREST . java to simplify the response formatting for better readability
added a boolean parameter ` subTree ` to the ` fromContent ` method in the ` Result ` class to enhance functionality by allowing sub -
updated column width calculation in Sheet . java and added a new test method in TestHSSFWorkbook . java to ensure correct column width calculation
added configPath parameter to the Commands . less method in Builtins . java to enable dynamic configuration of the input terminal
changed the type of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter ` and ` Graph
updated the default SSHD image version from " quay . io / testcontainers / sshd / sshd @ sha256 : 18aa
server : do n ' t check hostid if hostid be null
refactor the handling of single - valued columns in DefaultGroupKeyGenerator to simplify the logic for generating the raw key to improve code clarity
updated the test method names and logic in TestMultiMMap . java to improve clarity and accuracy of seeking logic to enhance error handling
refactor BCSiliconRecipes to use a builder pattern for creating IngredientStack instances to improve code readability and
fix graphhopperconfigmixin ( otherwise config . yml be not usable
modified visibility logic for child views in CellLayout and refactored onDragExit method in Workspace to improve code readability and maintainability by
updated the modify request body handling in ModifyRequestBodyGatewayFilterFactory and added a test for empty upstream request bodies in ModifyRequestBodyGatewayFilterFactoryTests
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure only valid package - accessible types are processed
changed log level from warn to trace for several log messages in LoggingHandler . java to improve logging granularity for better debugging and monitoring
refactor prefix extraction logic in WhiteBlackList . java and add a new test class Issue348 . java for wildcard handling to improve code
added options menu functionality and improved touch listener handling in GalleryActivity to enhance user experience by providing quick access to gallery options
refactor MongoDBServiceFactory to use a single instance for MongoDBService to improve efficiency by avoiding repeated builder calls
added tests to ensure correct behavior of boolean manipulation in InlineConstantMutatorTest . java to improve test coverage for boolean manipulation behavior
added a Blackhole parameter to the decode method in RecordTest . java to enable additional data consumption for decoding tests
fix : update gapic - generator - java with mock service generation fix ( # 119 )
changed the return type of getAllUnitStrings ( ) and unitProvider ( ) methods from Stream < String > to Map . Entry < String >
removed the clear method call for witnesses in ManagerTest . java to ensure that witnesses are reset before tests are executed
[ jdbc ] use airlift log instead of throw a prestoexception
replaced the method for setting and deleting the stack in NativeError . java to improve code clarity and maintainability by using utility functions for
removed the check for path names starting with " . " in DrillPathFilter . java to simplify the code by eliminating unnecessary checks
rename onboard to autoload in ThirdEyeAnomalyApplication and ThirdEyeConfiguration classes to improve clarity and consistency in the
added clearIndex ( ) method to BasicFunctionalityTest . java to ensure the index is cleared before tests are executed
updated the constant BOLDWEIGHT _ NORMAL from 190 to 0x190 in HSSFFont . java to correct the bold weight representation
changed ` fThreadGroup ` to be ` volatile ` and modified the ` lookForStuckThread ` method in ` Timeout ` to ensure
removed the ' final ' modifier from the getValue ( ) and setValue ( ) methods in ValueResultData . java to improve encapsulation and ensure
updated hash code and equality check in FuzzyQuery . java to ensure proper hash code and equality comparison to improve performance and correctness of equality
removed unnecessary print statements from PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed return type of methods from SharedRandomAccessFile to void in SharedOpenFilesCache . java to improve method usability by allowing methods to be
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest . java
updated the ` retrievePersonAttributes ` method to accept a default value of 0 and modified the principal creation logic to ensure that the returned principal is
change log level from info to warn for ZigBee USB and BUS Gateway connection errors to improve visibility of connection issues in the bridge
renamed methods and variables from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency
added null check for storageManager and imageViewReference in ThumbnailGenerationTask to ensure proper handling of null storageManager and imageViewReference to
updated condition in GroupSelectionQuery from ` nrFound = 0 ` to ` nrFound < count > ` and added a retry condition to ensure
added a new file Bug1933922 . java that implements a recursive compilation mechanism with a program map to provide a mechanism for retrieving program
refactor conditional statements for consistency across multiple classes to improve code readability and maintainability
updated the validation condition for control characters 0 - 31 to 32 in FileResolver . java to ensure proper validation of control characters 0 - 31 and
added a call to requestFocus ( ) in the Display class to ensure proper focus handling in the component
improve test coverage for instructor home page ui test
rename JsonParserAsync to JsonStreamParser across multiple files to improve clarity and consistency in naming conventions
refactor Crouton handling in DetailFragment and update result intent handling in MainActivity to improve code clarity and ensure proper activity lifecycle management
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
replaced ` Runtime . getRuntime ( ) . exec ` with ` ProcessBuilder ` and removed ` JAVA _ TOOL _ OPTIONS ` environment variable
updated the method to use InetAddress . getByName ( ) instead of InetAddress . getLocalHost ( ) to ensure accurate metric reporting for the Hinted
refactor controller and base assignment logic to use a new helper method for handling subsystem paths to improve code readability and maintainability by redu
added assumptions to test cases in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
make jvmciversioncheck . getrequiredproperty ( ) more robust
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
updated ` readAllBytes ` method to accept ` ctx ` instead of ` source ` in ` BinaryParser ` and ` PlainTextParser ` ,
added a new ` MultiPartFormDataCompliance ` enum and setter methods in ` HttpConfiguration ` , and updated ` Request ` to use it to
added support for JDK - 17 in GradleDistributionManager to ensure compatibility with the latest Gradle features and improvements
refactor type addition logic in SnapshotControl to use a dedicated method to improve code readability and maintainability by centralizing type addition logic
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
added null and empty check for runWith in ChangeSet . java to ensure that the method handles null or empty cases gracefully
http : / / issues . apache . org / activemq / browse / amq - 4892 - add test for the same
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
pdf417 : make sure we do n ' t exceed 255 pixel , a suggest by valerybokov
replaced direct calls to ` mSnapshotView . setDimAlpha ( amount ) ` and ` mIconView . setIconColorTint
added a new file ` SumZeroFunctions . java ` to implement a sum zero function with aggregation functionality to facilitate the aggregation of
updated SQL syntax in FirstValueFunctionIT and NthValueFunctionIT classes to remove unnecessary null checks to improve code clarity and maintain consistency
hbase - 15410 bucketcache . getallocationfailwarnings should be a string .
added a null check for the propName before putting it into roleObject to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation and modified access modifiers in StatusBarTouchController . java and RecentsView . java to enhance testability and
added methods to log container streams in DockerClient . java to enable users to log indefinitely when a container is opened indefinit
add a performance test for mvstore cache performance
updated the Long type from " L " to " J " in PrimitiveType . java to correct the representation of the long value
changed the access modifier of the delegatingApplicationListener method from instance to static to allow instantiation of the class without needing an instance
camel - 14263 : camel - rest - dsl - set message body to null to avoid npe
added new files ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to handle file deletion and functional
do n ' t call updatesizekeepdrawables ( ) in viewforplanecompanion # updatizekeepdrawables ( )
refactor byte conversion logic in BitUtil , Int2IntCounterMap , Int2IntCounterMap , and Int2IntHashMap classes to
updated the ` sendEventToTest ` method to accept a state ordinal instead of a string tag to improve event handling by associating events with
added support for video thumbnail requests in the MediaMonitor , RequestHandlerV2 , and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests
refactor error handling logic in ErrorCheckerService . java to improve clarity and functionality to enhance error reporting for text selection issues
added conditional logic to update the title area based on the UI manager ' s theme to ensure proper alignment of the open button based on the current
added support for the " libskia " library in Skia . java to enable dynamic loading of the Skia library for improved functionality
added a constant for the unit testnet ID in NetworkParameters . java to facilitate unit testing by allowing the unit test to be
added error handling for missing format arguments in QueryCommand and updated corresponding test cases in QueryCommandIntegrationTest and QueryCommandTest to improve user feedback
updated variable names and logic in IntIterator . java for consistency and clarity to improve code readability and maintainability by using more descriptive
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method to support dependency traversal based on the specified build target to
[ netbeans - 4892 ] fix patch module location when source output be override .
[ java ] remove check for major protocol version in election .
added a conditional check for SAML authentication before setting the default policy in OwnCloudClientManagerFactory to ensure proper authentication behavior based on the SAML authentication
improve error message when a mappedtableresource ( table ) be miss in readbatch and writebatch
refactored close logic to use utils . close ( ) instead of try - catch
refactor AnonymousAuthenticationFilter to utilize a Supplier for deferred and current authentication to improve code readability and maintainability by reducing redundancy
modified the ` removeActor ` method to include a ` unfocus ` parameter for better control over actor removal to enhance flexibility in actor management
refactor cloudConfig assignment to use a variable for valid configurations to improve code readability and maintainability by reducing duplication
added logging functionality to NettyHttpServer , RoutingInBoundHandler , and NettyHttpServerConfiguration classes to enhance logging capabilities and improve response
refactor multiple Java files related to DatumAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replaced direct call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` to ensure UI updates
camel - 16462 : camel - groovy should use language to load script from cache instead of load it from the cache
replaced ArrayList with HashSet for resolved artifacts in DefaultPluginManager . java to simplify artifact resolution process and improve logging clarity
[ hotfix ] [ python ] change access modifier of clioptions constructor to public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added functionality to retrieve the certificate chain from the storage key in HttpsMessenger . java to enhance security by allowing certificate chains from the storage key
simonstewart : do n ' t swallow ClassCastException when convert response to json
changed the visibility of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the
fix block not drop xp when drop a player . close # 6240
added native methods for retrieving spatial and front spatial location calculator configurations in DataOutputQueue and depthai classes to enable retrieval and retrieval of spatial location
updated multiple Java files related to CommunityDetection , GSAConnectedComponents , GSAPageRank , LabelPropagation , and SingleSourceShortest
refactor the isEmpty method in TreeTrie to use a new method for checking if a node is empty to improve code readability and maintainability
updated foreground and background method calls in AttributedStringBuilder . java to improve clarity and maintainability of the code
added a condition to check if the " solr . disableFingerprint " system property is set to " true " in PeerSync . java to ensure
changed the visibility of the ` moveFunds ` method from private to public to allow access to the ` moveFunds ` method from other
refactor event handling in MongoTemplate and add application listener setup in MongoTemplateTests to improve code clarity and ensure proper application context setup for
add logger to collectioncontainer and fix collectionitem serialization
close the input stream in tikacli if it be n ' t null .
updated the exception type from ApiBag . ExceptionWithErrObject to ApiException in TestCollectionAPIs . java to improve error handling by using a
reformatted the initialization of the Properties object in OptionsParser . java to improve code readability and maintainability
[ # 8796 ] instructorfeedbackaddactiontest and instructorfeedbackcopyactiontest : fix typo in log message
[ hotfix ] fix checkstyle violation in integration test
removed the ' step ' field and related getter / setter methods from DisplayTextVirtualDatapoint and HomematicTypeGeneratorImpl classes to
updated logging messages and added shared and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of document
remove duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to improve code readability and maintainability
simonstewart : fix the lameness test for gettextcontent
refactor Logger to use a ThreadLocal logger for improved thread safety to enhance thread safety and maintainability when accessing the logger instance
replaced JMockit with Mockito in FunctionInitializer and FunctionInitializerTest classes to improve compatibility with Mockito ' s testing framework and enhance
added a new method ` boxedTypeOrType ` in ` Types . java ` and modified type handling in ` Infer . java `
updated the handling of focused task views in RecentsView and removed the initialization of mDigitalWellBeingToast in Task
refactor region retrieval logic in TestFlushFromClient . java to simplify the code and improve readability by eliminating unnecessary stream operations
remove contract from cache if it have a contract detail and delete it if it exist
updated balance calculations to use dynamic properties for asset issue fees to ensure accurate account balance calculations based on dynamic properties
replaced ` apMap ` and ` texCache ` with ` needClearCache ` and introduced ` clearCaches ` method for texture caching to
refactor raster handling in Blit . java and add a new Bug7049339 . java file to improve code clarity and
added isUnselectedStyle flag and refactored string width calculations in Label and DefaultLookAndFeel classes to improve handling of font styling
updated ArrayList initialization to specify initial capacity and improved code readability to enhance memory allocation efficiency and prevent potential memory leaks
removed the ` flags ` parameter from multiple methods in ` ShadowApplicationPackageManager ` and ` ShadowUserManager ` to simplify method signatures and improve
refactor PingRequestHandler class for improved clarity to enhance maintainability and readability of the code
added a new constant ` MP4 _ ASSET _ WITH _ INCREASING _ TIMESTAMPS _ URI _ STRING ` to
refactor firmware version check in TradfriGatewayHandler to ensure compatibility between old and new firmware versions to improve code clarity and maintainability
refactor AjaxElementLocator class to improve code readability to enhance maintainability and ease of understanding for future developers
updated the condition in BoxLayout and DefaultLayout to include " table - cell " in the display check to ensure proper handling of different display types
refactor JSON decoding logic in JsonDecoder and add a test for reordering fields in TestJsonDecoder to improve code clarity and ensure correct
updated the lambda expression in BlockCache . java to include a removalCause parameter to improve code clarity and maintainability by using a more d
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added @ Test annotations to DroolsMvelParserTest . java to improve test coverage for the DroolsMvelParser functionality
changed fields from non - final to final in ContextRegisterListener . java to ensure immutability of these fields for better thread safety
refactor ObjectHashSet and related test classes to improve iterator initialization and add parameterized test methods to enhance flexibility and test coverage for different object set
added batch byte checks in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure batchBytes does not exceed the
replaced Context . MODE _ WORLD _ READABLE with Context . MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to
updated logging messages and added exception handling in JdbcProxyGenerator . java to improve clarity of log messages and ensure proper resource management during connection abort
updated animation handling in Workspace . java to include accessibility support for NORMAL and OVERVIEW states to enhance accessibility support for better user experience
change log level from warn to debug in ProtobufLogReader . java to reduce log verbosity for malformed edits
updated scope assignment in UaaTokenServices . java and added unit tests in UaaTokenServicesTests . java to ensure scope values are correctly
updated import statements and added a ` toString ` method in ` AvailableJDBCDrivers ` and ` AvailablePluginsList ` to improve code clarity and
add a new interface ExecutableCommand in the org . kie . api package to facilitate command execution in the kie - api
remove the jdbctableservice from camel - itest - idempotent
added padding getter methods for left , top , and bottom padding in CellLayout . java and modified bitmap creation in Launcher . java to improve
added a conditional check for empty ` sb ` before collecting ` cands ` to ensure that ` cands ` is only processed when ` sb
updated ` SamlMetadataUIParserAction ` and related classes to use ` Action ` instead of ` SamlMetadataUIParserAction ` to
added a method to check for LDAP ports in LdapMockMvcTests . java to ensure that LDAP ports are checked before proceeding with operations
[ log4j2 - 1343 ] log4j2 - 1343 fix log4j2 - 1344
updated URL handling logic in Fetcher . java and added refresh logic in HTMLMetaProcessor . java to improve redirect logging to enhance clarity and
updated SolrQuery in TestSpellCheckResponse . java to use " name : samsang " instead of " homer " and modified
do n ' t use karaf console api when use old console api
changed the visibility of the ` getVerticesColors ` method from public to private and modified the initialization of ` mCol ` to accommodate
added a filter to exclude timestamped reports subfolders in the copyDirectory method to improve filtering of reports by excluding timestamps and subfolders
refactor datavalidatortest to support @ thingsboard . io
pdfbox - 4071 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure that the expression is executed inside the adequate context to prevent
removed debug print statements from JoglInput . java to clean up the code and improve readability
added a new boolean flag ` allowExtractingPrivateFields ` to ` FieldSupport ` and updated the ` readField ` method to accept a
replace the device name with the device name in WebDataHandler . java to ensure the device name is correctly formatted for better data management
refactor the instantiation of Lookup to use MethodHandles for reflection to improve compatibility with Java 8 and reduce reflection overhead
deprecate weights method and add weightsByDouble method to ZParams . java and update its usage in SortedSetCommandsTest . java to improve cl
updated the ` writeCustomHTML ` method to include the ` Database ` parameter across multiple writer classes to enhance functionality by associating changes with the
updated BTreeMap . java to remove unnecessary type casting for keySerializer ' s deserialize method to improve code readability and maintainability
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw ContractExeException instead of Exception to improve
bugfix # 205251 - add a system property for profiler heap . zerofile
updated message handling in Main . java and ChangeSet . java to use Scope . getCurrentScope ( ) . sendMessage ( ) instead of System .
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record handling in Horton
added import statements for ItemProcessListener in multiple Java files to enhance batch processing capabilities in the Spring Batch framework
refactor code formatting and improve readability in AbstractProviderModule . java to enhance code readability and maintainability
updated method calls in SearchFiles and SortedSetDocValuesFacetCounts to use liveDocs instead of liveDocs to simplify code and improve clarity by
updated Test7005594 . java file to improve test coverage for the7005594 functionality
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code structure to enhance maintainability and readability of the code
cloudstack - 3246 : do n ' t try to map vm ip address in case it ' s not a valid ip4 address
replaced the ` mModifierDigitalTriggers ` variable with ` mModifierAnalogTriggers ` and added a ` MCOptionListener ` to
updated method names and imports in IterableSubject and IterableTest to improve clarity and consistency in method naming to enhance code readability and maintainability
camel - 16462 : camel - http - add support for multiple header in camel - http
added JPA assertions to verify the count of SQL queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure correctness of SQL query
added a new ` LargeValueFormatter ` class and updated ` BarChartActivityMultiDataset ` , ` BarLineChartBase ` , and
refactor character handling in CommentsParser to use a constant for IN _ STRING state to improve code readability and maintainability by using a constant
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to incompatible argument types
updated printLir method call formatting in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency
removed TODO Auto - generated method stub from NullAssertionValidator . java to clean up the code and improve readability
added support for appending RuleKey to the rule key in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in rule key
added system profile directory creation and refactored test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandlerTest to ensure
refactor createThreadFactory method in TestcontainersDockerCmdExecFactory . java for consistency to improve code readability and maintainability
refactor message handling in HttpChannelOverHTTP and HttpReceiverOverHTTP to use the receiver ' s getMessagesIn method to improve clarity and
added a " accept " attribute to the ImageFileInputDialog to enable the image file input dialog to enhance user experience by allowing image files to
updated ElasticIndexWriter and TestElasticIndexWriter to use transport clients instead of node builders to improve code clarity and maintainability by using a
added detailed logging for witness and class information in ForkController . java to improve debugging and traceability of witness and class information
added a new test class ` NullPointerAndEmptyArrayTest ` to validate the behavior of ` CustomURLClassLoader ` with null pointer and empty
removed unused imports and methods related to generated source paths in BaseIjModuleRule , IjProjectBuckConfig , and AbstractIj
added a new method ` constructSimpleWildcardPatternWithAnyCharDelimiter ` to the ` UaaStringUtils ` class and updated pattern construction to
added validation for aliasToWork and tableScanOperator in Vectorizer . java to ensure proper validation for map work aliases to work to avoid runtime
updated import statements in WeatherQueryTest . java to use MockitoJUnitRunner instead of MockitoRunners to ensure compatibility with the
added error handling for setting firmware settings in TinyGFirmwareSettings . java to log a warning when setting fails to ensure firmware settings are
replaced specific imports with a wildcard import and modified the getLangs method to return a Set < String > instead of an array to streamline
updated import statements and modified assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve readability and maintainability of the test code
hbase - 20614 add a prepare ( ) method to disable and take snapshot handler ( chaoyu tang via ash
[ j2kt ] add a method to create a platform - specific null call .
added a new test method to verify the behavior of HTTP _ RPC endpoint in DockerQuickstartTest . java to ensure that the explorer correctly handles
added suspension check in Thread . java and updated version checks in Test _ Thread . java to ensure proper handling of thread suspension
updated JavadocVisitor and ReloadableJava8JavadocVisitor to use Hidden instead of Author and modified Javadoc processing logic to improve clarity and functionality of
camel - 1776 : camel - spring - remoting : fix npe in proxyfactorybean and serviceexporter .
removed multiple redundant @ Override annotations from several security classes to improve code clarity and maintainability
added module import handling in Java2TypeScriptAdapter and updated eval method in EnumTests and MyComplexEnumsAccess to enhance TypeScript translation
use http : / / www . w3 . org / 2001 / xmlschema instead of xmlconstants . w3c _ xml _
added content description handling for badged app items in BubbleTextView to improve user experience by providing clearer guidance for badged app
added mouse wheel event handling to TestMouseWheelScroll to enhance mouse wheel functionality for improved user experience
pdfbox - 4892 : close document in visualtester , a suggest by valerybokov
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to align
replaced instances of ` Object ` with ` String ` in ` VacuumController ` , ` VacuumFrame ` ,
removed currency conversion logic for DSH , DASH , QTM , and QTUM in BitfinexAdapters . java to simplify code by
replaced ` HashSet ` with ` ImmutableSet ` and updated field handling logic in ` JsonFormat . java ` to improve code clarity and ensure
added a check for enum types in JacksonXmlFormatMapper to ensure proper serialization of byte arrays in JSON format
updated thread variable names in VirtualThread . java to improve clarity and consistency to enhance code readability and maintainability by using more descriptive
refactor DirectoryTaxonomyWriter and related classes to improve term term handling and cache management to enhance code clarity and maintainability by centralizing term
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
adjusted the calculation of the height in BrowserContentPane to account for the last height to ensure the correct vertical positioning of the content pane
pdfbox - 4071 : remove invalidpasswordexception from method signature , a suggest by valerybokov
added unit tests for setShortSupportMessage and setLongSupportMessage methods in ShadowDevicePolicyManagerTest . java to ensure proper exception handling for
ggb - 2892 help panel : fix menu close button in exam mode
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated sleep durations and added new controller state checks in BackendInitializerHelper , TerminalClient , and GcodeParserUtils to improve code reliability and
updated the condition for setting the last update preference based on the release status in SwingStartup . java to improve accuracy in handling release status and ensure
dbmigration : add option to include generated file comment
updated command usage strings in multiple Java files to include " < player > " instead of " < player > " to enhance command usability by
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filter classes to streamline the
updated method calls from " nameVariableName " to " optionName " in OptionProcessor . java to improve clarity and consistency in naming conventions
added a condition to check for parallel classes in TestNGContentHandler to ensure proper handling of parallel classes during execution
updated the condition for enabling acting master and replaced null checks with StringUtils . isEmpty for oldAddr to improve code clarity and ensure proper
refactor : remove static import to modelelementcontainerdefaultcapacities .
added serialVersionUID fields to multiple classes to ensure proper serialization compatibility for these classes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method to accept a separator parameter and modified its usage in the ` ShibbolethCompatiblePersistentIdGenerator
updated parameter handling in Parameters . java and TestAction . java to improve null safety and clarify the condition in TestAction . java to
added a new file ` Person . java ` containing a private field ` name ` to the ` Person ` class to facilitate the
remove unnecessary localaddress parameter from gossiper . start ( )
convert timeStr to uppercase before checking if it ' s in the column label to ensure consistent handling of time values regardless of casing
added tests for ` timeColumn ` , ` timeUnit ` , and ` totalDocs ` metadata in ` SegmentMetadataImplTest ` and `
updated import statements in SimulationPlotPanel . java to use net . sf . openrocket . util . Color instead of java . awt
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure that disconnectEmitters
change the type of ` scopeHierarchy ` from ` String ` to ` List < Class < ? extends Annotation > ` to improve type safety and
simonstewart : add a new test for double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions to improve stability by preventing application crashes due to
added support for custom JNDI location in JTATransactionManager to enable dynamic JNDI resolution based on system properties
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the ` Library ` class to streamline the library functionality by eliminating unused methods
replaced the initialization of ` enabledCiphers ` with a variable ` result ` for clarity to improve code readability and maintainability by
[ beam - 10650 ] fix timestamp type conversion for bigquery to storage ( # 10641 )
replaced manual null checks with requireNonNull for buffer and user credentials to improve code readability and reduce boilerplate error handling
use inputmap . getordefault ( ) instead of input . get ( )
added validation for row and column indices in FlightConfigurablePanel . java to ensure that the row and column indices are within valid bounds to prevent
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to enhance user experience by enabling scroll
[ java ] unnecessarylocalbeforereturn false positive for member selector
replaced the instantiation of ScriptEngineManager with a direct variable assignment to simplify the code and improve readability by eliminating unnecessary null checks
updated calculations in EuclideanDistanceSimilarity . java and updated correlation assertions in EuclideanDistanceSimilarityTest . java to improve accuracy of correlation
patch by jbellis ; review by brandonwilliams for cassandra - 113
updated the ` relativize ` method to accept a ` Path ` parameter and added new tests for it to ensure that relative paths do not
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values when columnSize and decimal
[ hotfix ] [ test ] skip current writer head file 1 . log . tmp
updated the method call from ` ByteArray . toHexString ` to ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to
renamed ErrorHandlerController to Error403Controller and created new Error403Controller and its test class to improve clarity and organization of error
replaced calls to ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both Unix
updated Tiny . java to replace MethodInvocationTree and NewArrayTree with ExpressionTree , NewArrayTree , and NewArrayTree , and
added iterator handling for client connection acquisition in ConnectionPool . java to improve code readability and maintainability by reducing redundancy
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` across multiple classes to improve clarity and consistency
pdfbox - 4071 : avoid npe if the destination name do n ' t exist , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to include the class name in the error message to improve clarity of error messages
increased thread join duration from 30 seconds to 60 seconds and added assertions for reader and writer exceptions to improve test reliability by allowing more
updated the logic for setting the current item in the HomeFragment to dynamically increment the extra pages based on user settings to improve user experience by allowing
added error handling for broken Gaussian images in AndroidImplementation . java to improve robustness by preventing crashes during image processing
added @ SuppressSubnodes annotation and modified return statements in BaseParser . java and ImplicitActionsConverter . java to enhance code clarity and ensure
refactor FDFParser instantiation to use try - with - resources for resource management to ensure proper resource management and avoid potential memory leaks
deleted the TestDocInverterPerFieldErrorInfo . java file to remove obsolete code to streamline the project
added a shell command for key event handling in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to ensure
added a filenameToUrl mapping to the output file path in FileDumper . java to facilitate JSON serialization of the output file path
bugfix # 220938 - profilerserver . resetresultsnotified flag should not be reset .
replaced ` getTextureFromImage ` and ` loadTextureFromFile ` methods with ` loadImage ` and ` loadImage ` methods in `
updated assertion from " application : " to " application " in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContext
updated test cases from " 9781797745008 " to " 9781797845005 " in RandomizersTest .
added functionality to retrieve and set the notification ringtone in AlarmReceiver . java to enhance notification functionality by allowing the ringtone to
added a method to report loop counts in the RootNode class to enable reporting of loop counts for better debugging and monitoring
added logic to finalize the version for a specific repository type in FinalizeUpgradeAction . java and modified clusterEntity merging in ClusterImpl . java to
use getregionid ( ) instead of getRangeid ( ) in listregionidandstatesearch . getregionid ( )
removed duplicate calls to streamManager . open ( stepExecution . getExecutionContext ( ) ) in ItemOrientedStep . java to streamline
added a new file ` CountedLoopProblem . java ` that implements a test for the ` CountedLoopProblem ` class to validate the
replace metaspacemethod with nativemethod in hotspotgraalruntime . executecompiledmethod ( )
do n ' t try to get the failed speculation offset for jlong field .
rename ` KafkaStreamsTracing ` and related methods to ` ValueTransformerWithKeySupplier ` and ` TracingValueTransformerWithKeySupplier ` to improve
add ` ` received point ' ' to question detail ( # 5338 )
replaced DynamicColors . applyToActivitiesIfAvailable ( this ) with DynamicColors . applyToActivitiesIfAvailable ( this ) to enhance user experience by
added a CountDownLatch to manage threads and dump all child threads to improve thread management and error handling during execution
updated return statement to use ` val . intValue ( ) ` instead of ` val ` in ` IntPointField . java ` and added assertions
updated arcSize from a fixed value to a fraction and adjusted its calculations accordingly to improve the visual representation of the button by incorporating
updated the value of veryHighWidth and ratioWidth from 720 to 640 in AddAndScaleMultiImage . java and ImageBorderCut
rename ` ` minifysqlenabled ' ' to ` ` shrinkwhitespacesinsql ' '
removed the ` waitForStateTransitionToEnd ` method from ` AbstractLauncherUiTest ` and refactored related methods in ` WorkProfileTest
added imports for ` CasCoreAuthenticationPrincipalConfiguration ` , ` CasCoreHttpConfiguration ` , and ` CasCoreTicketIdGeneratorsConfiguration ` to
updated byte conversion methods in Volume . java to use DataIO for reading single byte arrays to improve performance by reducing the number of read operations
camel - 16462 : camel - httpproducer do n ' t use fluenttemplate . to ( ) instead of fluenttemplate . to
refactor class path handling in DeclarativeHintsParser to use a builder pattern to improve readability and maintainability of the code
set defaultscriptscopeprovider to null for audio and voice manager
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to use this new method to improve layer management and
added a check to return early if the queue is empty in DeferredHandler . java and removed the default screen method in Workspace . java to improve
added null checks for mapOp and mapWork in MapRecordProcessor . java and updated exception handling in TezProcessor . java to improve error
refactor ` center ` and ` center2D ` variables and methods in ` CylinderRegion . java ` to improve clarity and
refactor TestBadUseCases to use ExpectedException for better exception handling to improve readability and maintainability of the test code
modified the ` sendOneQuery ` method to handle ` NO _ PARAMETERS ` in ` QueryExecutorImpl . java ` and added a test
bugfix # 2321 - allow customization of security environment
added ` rctag = android% 20app % 20edit ` to the request in the ` ReviewInterface . java ` endpoint to support
refactor Test . java for improved readability to enhance maintainability and facilitate future development
updated PBEKeySpec to use keyLength instead of blkSize to ensure the correct key size is used for password encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added writeSectionDefinition ( ) method to RtfDocumentHeader . java to enable section definition writing for Rtf document headers
added distance calculation and accuracy checks in GpsLoggingService . java and modified accuracy validation in Maths . java to improve accuracy handling and prevent
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 163 )
refactor InsightFilter to use Reference < Object > instead of boolean for rootNameFn and sourceFilterFn fields to improve memory management and
replaced the use of ` binarySearch ` with direct addition of ` info ` in ` data . add ` and ` added . add ` methods
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to streamline
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
replaced assertRootArcs ( ) with assertRootArcs ( ) in FST . java to ensure the assertion accurately reflects
added an assertion to verify the existence and existence of a security policy in JstatdTest . java to ensure that the security policy is valid
camel - 14284 : camel - olingo2 - add olingo2 . getconfiguration ( ) to make it easy to
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution before proceeding
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output for better readability
add sendimagebyhttp and publishxmpPImagebyhttp action to send image by http
camel - 16462 : camel - netty - do n ' t use channellocal when create a new producer .
fix ( balancedclickhouse ) : fix url split url with invalid host name
disable jsr199 by default in fragmentactivator
added support for null string handling in CSVRecordReader and CSVRecordReaderConfig classes to enhance flexibility in CSV parsing by allowing null values
added LiquibaseService annotation to multiple connection classes to indicate that these classes are skipped during the LiquibaseService integration
updated ` aggregatedScope ` and ` addImportedStaticFieldNames ` methods to use ` JavaSourceFile ` instead of ` J . CompilationUnit ` to
fix ( trigger ) : add command and state topic for item ( # 4891 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to ensure proper
updated case name from " zkCredientialsProvider " to " zkCredentialsProvider " and added deprecation comments in SolrXmlConfig . java
fix the mana tablet not be able to set the damage of the item in the mana tablet . close # 163
added a method to set the identifier collection in the current call event to ensure the correct identifier collection is used for call events
removed the import of DictionaryCompoundWordTokenFilter from TestRandomChains . java to streamline the code by eliminating unused imports
updated the thread pool name from " - % d " to " scrypt " in ScryptUtil . java to improve clarity and consistency
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
updated assertion in TypeDefinitionRegistry to include a null check to ensure that the definition is not null before proceeding to avoid potential NullPointerExceptions
added visibility control for share with - me icon in LocalFileListAdapter to improve user interface by hiding the share with - me icon when necessary
updated links in DefaultLogoutPageGeneratingFilter , LogoutPageGeneratingWebFilter , and DefaultLogoutPageGeneratingFilterTests to use HTTPS to enhance security
updated import statements and method names in RouterFilter , RouterServerListFilter , and RouterDistributorTest classes to improve code clarity and ensure
enhanced assertion message in TestIndexWriterMergePolicy . java to include additional context to improve debugging by providing more context during assertion failures
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used
updated the context awareness check in CrawlerSessionManagerValve and added a new test for context awareness in TestCrawlerSessionManagerValve
modified the ` getJspApplicationContext ` method to use ` AccessController . doPrivileged ` for privileged actions to ensure that the application context is accessed in a
refactor length calculation logic in RocketComponentConfig to use minimum and maximum values instead of a fixed value to improve accuracy in determining component length
replaced ` @ Singleton ` annotation with ` @ Singleton ` in ` OpenIDAuthenticationProviderModule ` and added a singleton binding for ` NonceService
updated the method call in FileWrapper . java to include additional user context parameters to enhance functionality by allowing child links to be updated in the parent
refactor ` doExecute ` and ` buildRealURL ` methods to use ` uri ` instead of ` httpMethod ` to improve clarity and
increased the timeout duration from 100 milliseconds to 500 milliseconds in RetrievalBlockingMessageStoreTests . java to improve the responsiveness of
added a boolean flag ` mShiftCodesAlways ` and modified the shift code handling logic to improve control over shift code overrides based on user attributes
[ hotfix ] [ zk ] fix race condition in abstractheartbeatmonitor . isleader ( )
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
replaced ` identity . getName ( ) ` with ` identity . isReference ( ) ` in ` AbstractKerberosDescriptorContainer . java `
updated method signatures in ArtifactCacheFactory , LoggingArtifactCacheFactory , and InstanceArtifactCacheFactory to use a boolean flag for no - caching to
added a sleep delay in the exception handling in TestListenTCPRecord . java to allow more time for operations to complete before proceeding
refactor argument handling in PatchExtensionMethod . java to improve clarity and maintainability of argument assignment logic
replaced ` Map ` with ` Set ` for managing libraries in ` RawNativeLibraries ` and updated related tests to improve performance and clarity
polish ` ` add sequence ' ' and ` ` ignore - send - failures ' ' to the router
removed the x509PublishUrl field and its associated getter and setter methods from ClientKeyPublisherMapping and JwkViewResolver to streamline the
refactor the assignment of the subReader variable in QueryComponent . java to improve clarity and maintainability of the code
replaced the existing ` ValueSourceParser ` implementation with a new ` Double2Parser ` that returns ` Math . max ` and ` Math
simplified the return statement for focusable and pointer events in the Container class to improve code readability and maintainability
removed unused variables from Highlighter , SpanGradientFormatter , and TokenSources classes to streamline code and improve readability by eliminating unnecessary
cloudstack - 4892 : fix uuid parameter in db insert sql ( # 4892 )
updated ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration ` to use ` ObjectProvider < FlowBuilderServices
updated database connection settings and refactored SQL execution methods in WriteJdbcPTest . java to improve connection management and enhance code readability
simplified the look and feel registration logic in DefaultPlatform . java to improve code readability and maintainability by eliminating unnecessary
replaced calls to ` getStateEntity ( ) . getDesiredStateEntity ( ) ` with direct calls to ` desiredStateEntity ` to
simplified margin calculations for left and right margins in FloatingTaskView . java to improve code readability and maintainability by removing unnecessary
added a condition to handle the running state in RootFolder . java and updated status line in NavigationShareTab . java to improve user experience by
bugfix # 220313 , remove unnecessary assignment
ggb - 1358 fix for ggb - 1358 , use the default toolbar instead of the default toolbar
added NetworkAddressChangeListener interface to HomekitImpl and updated log messages for clarity to enhance functionality by allowing network address changes in the HomeKit
replaced lease retrieval with lease renewal time retrieval in TestHDFSEventSinkOnMiniCluster . java to improve clarity and
replaced ` arg . prefixHeader ` with ` arg . prefixHeader ` and ` arg . linkStyle ` in ` CxxLibraryDescription
added null check for the message in ExceptionHandlerRegistryFactory and a corresponding test in ExceptionHandlerRegistryTest to ensure robust error handling by preventing
changed ` nextID ` to be ` volatile ` and modified related methods in ` DirectoryTaxonomyWriter . java ` to ensure thread safety and improve
increase wait time to avoid intermittent test failure
added HasSourcePath interface and methods to AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to
simplified exception handling by removing unnecessary StringBuffer creation to improve code readability and maintainability
added a custom index field name to the facet fields in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to
modified the ` toEpochMilli ` method to handle negative values and adjusted the calculation logic in ` Instant . java ` to ensure accurate conversion of
updated attribute retrieval from ` getBufferType ( ) ` to ` getBufferType ( ) . name ( ) ` in OGLESShaderRenderer
set app . blockupdatescripts ( true ) and app . setblockupdatescript ( true ) in copy paste .
added a new file TestCMoveLimitType . java with methods for testing character movement limits in a CharBuffer to facilitate testing
removed redundant reset of temporal attributes and added a contains method in RecordConfiguration , modified audio packet processing logic in AudioPacketWaveRecorder , and Over
camel - 13558 : fixed syntax error in camel - sql - parser
updated the vendor name from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor color handling in Main . java and introduce a new method to print version information in VersionCommand . java to improve code organization and
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to improve code clarity and maintainability by centralizing token validation logic
do n ' t throw eofexception if iib . eof . error be throw .
added unit tests for group deletion functionality in DefaultGroupProviderTest . java to ensure correct handling of non - existent group members and their names
removed unnecessary new Object array declarations from multiple Java files to simplify code and improve readability
deleted the V2ReplicationProtocol . java file to the protocol was no longer needed for the current implementation
replaced instances of ` ImmutableSortedSet < BuildRule > ` with ` ImmutableSortedSet < SourcePath > ` in multiple Java files to
added new files ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` , and modified ` StupidFinal . java `
[ geot - 4892 ] allow to close template iterator in directtemplatefeaturecollectionfactory .
updated the response count assertion in WriteResponseHandler . java to accommodate a wider range of response counts to ensure that the response count
added null check for index number in ItemRowAdapter . java to prevent potential NullPointerException when accessing item properties
rename ` showAnchestors ` to ` showAncestorsShown ` across multiple classes to improve clarity and consistency in naming conventions
added a check to return early if the app width is less than 12 to prevent rendering issues when the app width is below 12
updated equality check in ChangeLogParameters and added a test for parameter value equality in ChangeLogParametersTest to ensure accurate comparison of change log parameters
changed the visibility of the loggers map from static to final to enforce immutability of the loggers map
update return statement to use getBasePlot ( false ) instead of p to ensure the correct plot is returned by the Plot class
added an ` initialCreation ` parameter to the ` createUploadDir ` method in ` RestServerEndpoint ` and ` RestServerEndpointTest `
added a sendStatus200 parameter to multiple ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to control the sending of
added a condition to check if the comment length is greater than zero in the multi - line comment condition to ensure that comments are only processed when
added imports and modified file type association logic in BuckModule . java to ensure proper handling of file types based on the default extension to improve
replaced multiple specific imports with a wildcard import and updated the multiply method to use ToInt instead of ToLong to improve code readability and
updated error message handling in RTMGenericCommandLineOptionTest and TestUseRTMLockingOptionOnUnsupportedCPU to provide clearer error messages
updated formatting and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added a static import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate the mocking of Channel
fix arrayindexoutofboundsexception in polyglotexceptionimpl . isGuesttohostReflectivecall ( )
added a new ` FontsContractReflector ` interface and a reset method in ` ShadowFontsContract ` to reset the system context to
added support for time zone handling in TimeGranularity and adjusted time query generation in PinotDataSourceMaxTime to improve time conversion accuracy and ensure
refactor control flow analysis and exception handling in ControlFlow . java and Guard . java to improve code clarity and ensure proper handling of null
updated assertions in ` Assert . java ` and ` ArrayEqualityAssertTest . java ` to use more descriptive error messages to improve clarity
added default case handling for the ` default ` cases in ` WindowClickLogic . java ` to improve code clarity and prevent potential runtime errors
updated the index calculation in MeshBuilder . java to correctly account for the offset to ensure correct indexing of indices
nifi - 4892 : remove unused controllerbeans from standardprocessscheduler
added support for ` ResolvedJavacPluginProperties ` in ` KotlincToJarStepFactory ` to retrieve processor names from `
updated RESCROLL _ DELAY constant and refactored page snap logic in PagedView and Workspace classes to improve code readability and
added permission checks for shortcut host permissions in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed only when necessary to improve user experience by
added case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle search backwards functionality in the ConsoleReader
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to ensure robustness
added marker selection functionality to the NearbyMapFragment to ensure the bottom sheet state is hidden when the marker changes to improve user experience by
added error handling for throwable exceptions in FileSyncAdapter . java to improve error reporting for better debugging
refactor test assertions in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve code readability and maintainability by
updated FeedQueues . java to filter feeds based on heavy load settings to improve performance by avoiding unnecessary feed processing when heavy load is
log a warning if defaultdrmsessionmanager be not access on the wrong thread .
updated AndroidBinaryDescription to use Locale . US for package type conversion and added a method to set package type to ensure consistent behavior across different locales
updated XML _ MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with application - specific
refactor file initialization and configuration retrieval in Args . java to improve code readability and maintainability
updated the timeout value in HostPortWaitStrategyTest from " sleep 5 ; exit 1 " to " exit 1 " to simplify the test by
[ flink - 21938 ] [ hive ] fix hiveexpanddistinctaggregatesrule to handle large number of distinct group ( # 2
added multiple conditional checks for headless graphics in mmm Toolkit . java and ppp Toolkit . java to ensure proper handling of head
updated the conditional check for smelt detection in ExoflameFurnaceHandler . java to ensure proper matching of the furnace
add ` ` move thread count ' ' property to solver ( # 2296 )
updated path splitting logic in SearchBuilder . java and added a new test in FhirResourceDaoR4SearchNoFtTest .
added a new test class ` Issue582Test ` to validate the functionality of BTreeKeySerializer in MapDB to ensure correctness of
[ native ] fix decimal overflow in native query
refactor LoadingCache class to improve cache loading efficiency to enhance performance and maintainability of cache loading operations
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest class to enhance test coverage for non - constructor methods with
added exception handling for StaleElementReferenceException in ExpectedConditions . java to improve robustness by handling StaleElementReferenceException during element selection
refactor ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator to improve view existence checks and exception handling to enhance code clarity and maintainability by
refactor DOMUtil class for improved readability to enhance maintainability and ease of understanding for future developers
added translation calculations and matrix logging in TaskViewUtils and Utilities classes to enhance animation responsiveness and facilitate debugging of matrix transformations
changed the flag _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper
added a ` walk ` method to ` TempFSTTermsReader ` for processing FST arcs and modified the output logic in ` TempTerm
added SolrQueryRequest parameter to multiple create method signatures across multiple factory classes to enhance the functionality of the augmenters by incorporating Solr
added null checks for post and announcement data in SingleTableMySQLTriggerTest . java to ensure proper handling of null values for Post and Announce
refactor comparator assignment in FieldValueHitQueue and TopFieldCollector classes to use a dedicated setComparator method to improve code clarity and maintain
updated SQL query strings in PhoenixQueryBuilderTest . java to include quotes around column _ DATE to ensure proper formatting of SQL statements for
added Spark import and invoked awaitInitialization method in RequesterTest . java to ensure Spark is properly initialized before use
added constants for total storage pool , limit , used , and used in DynamicPropertiesStore . java to enhance storage management capabilities and improve error handling
added support for dev mode in AssetsController and updated the method signature to include NinjaProperties to enable dynamic resource loading based on the source directory
update map mark key check to use getMapMarkKey method to ensure correct identification of map mark keys
added support for token rewriting in the BaseSemanticAnalyzer and DDLSemanticAnalyzer classes to enhance the functionality to support token rewriting
removed ` throws IOException ` declarations from several methods in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes
refactor JxBrowserManager to use a local variable for file path and log messages to improve code readability and maintainability by reducing
updated equality checks for image formats in IOSImplementation . java to improve code readability and maintainability by using ` equals ( ) ` method
[ somfytahoma ] use getuid ( ) instead of getBridgeuid ( ) . id ( ) . id ( )
disable albertoaggregatortest on github ci
refactor OpenWireConnectionTimeoutTest to use static final variables for SSL properties to improve code readability and maintainability by reducing redundancy
replaced instances of ` warnThenDebugLogger ` with ` stackTraceWarnThenDebugLogger ` and ` nanGaugeWarnThenDebugLogger ` to
removed the session ID from the session info to clean up the session information to avoid potential memory leaks
added hostname setting for alerts in HeartBeatHandler and improved logging in AlertReceivedListener to enhance alert management by ensuring hostname is set
simplified the buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
( chore ) camel - kie - api : move kmodule . xsd to org / kie / api / kmodule . xsd
added a test for seekTo mode in ShadowMediaPlayerTest and implemented seekTo method in ShadowMediaPlayer to ensure correct behavior of seekTo
rename ` createTask ` to ` createThrowingTask ` across multiple executor classes to clarify the purpose of the method ` createThrow
added border settings for the tab close button in AQUA _ LAF to enhance the visual appearance of the close button for better user
added POST request method and read timeout settings in TSPTimeStampService . java and refactored test assertions in TestSignatureInfo . java to
[ zeppelin - 4892 ] add default security to xstreamutils . createxstream ( )
added error logging for non - generic diamond types in mmm Attr . java and created a new class DiamondRaw . java
[ calcite - 4892 ] fix checkstyle violation in reloptutil
updated the argument validation in Http2Settings . java from ' | | ' to ' && ' for ID and value validation to ensure that the
deleted the file MapInterfaceTest . java to remove obsolete test files to clean up the codebase
removed exception handling for session insert operation in SessionsPoolTest . java to streamline session management by eliminating unnecessary exception handling
updated jsonWriter . object ( ) to start and end the root object in GeoJsonWMSBuilder . java to ensure proper handling of JSON
replaced the method ` setIndex ( mode ) ` with ` intValue ( ) ` for setting the selected index in the ` myTable ` to
added a method to check if the currently manually unstash is active in TaskbarStashController . java to ensure proper handling of
camel - 16462 : camel - core - optimize route coverage and xml dump
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting for expected events to enhance flexibility in event mismatch handling by allowing
added a new file ` HeaderFixer . java ` that implements a file processor for header processing to facilitate the handling of header
added constants and a method to send the first load broadcast if it is not set to true in the launcher to enhance user experience by allowing dynamic
deleted the SuperJumperAndroid . java file to the functionality was deemed unnecessary or redundant
updated the return statement in SystemTableScan to check if the table is distributed and modified query construction in TestStarQueries to improve query accuracy and
rename KeyValuesProviderAware and ObservationConventionAware interfaces to KeyValuesProviderAware and ObservationConventionAware to improve clarity and consistency in
bugfix : remove remapped resource location from the registry after load the registry .
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast ' i ' to long type to ensure proper handling of
added caching mechanism for the last formatted date and format in HSSFCellStyle . java to optimize performance by reducing redundant calls to the
updated the query in RemoteAuthenticationEndpointTests to include username filtering to ensure that the query results correctly reflects the user ' s attributes
replaced ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java `
updated logging to include container information for LauncherAtom . WorkspaceContainer to enhance logging functionality for better tracking of app launches
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the deadlocktest . java file to remove unused test
updated BugContentProvider to handle null input and improved marker handling in BugGroup and DeltaInfo classes to enhance robustness and clarity of
added a JMenuItem to open the JavaScript in the browser and implemented a retry mechanism for server status to improve user experience by allowing users to open
added a new semantic error message for output specification in ErrorMsg . java and modified related method calls in SemanticAnalyzer . java to improve error handling
added an ` EqualPredicate ` to the ` addEntryListener ` method in ` BasicTest . java ` to ensure that the ` addEntry
fix CoordinateArrays . reverse ( ) to return early if the coord length be less than 1
swapped the order of calls to setOpen in ToolbarPanel . java to improve code readability and maintain consistency
added a new boolean variable ` first ` and initialized it to ` false ` to track the first state of the payload processing
replaced conditional enterOverviewMode ( ) with showOverviewMode ( true ) in Launcher . java to streamline the overview mode display logic
[ java ] set the destination for the message dispatch in the test to ensure the correct destination is used for message dispatching
change the return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the return value
[ java ] fix checkstyle violation in nested arithmetic test
simplified the addition of pendingChunks and buff in HttpClientRequestImpl . java and improved buffer handling in HttpTest . java to enhance
updated the formatting of the verboseLevel and artifact replacement in GetMavenDependenciesTask . java to improve code readability and ensure correct formatting of
pdfbox - 4892 : use getcosdictionary instead of getdictionaryobject , a suggest by valerybokov
modified the increment operation on ` pos ` and retained the assignment of ` retval [ 1 ] ` from the substring to ensure consistency in position handling while preserving the reference substring extraction logic
make visiblefieldpredicate an environment - based interface , and add a test for it .
added support for configuring the solidity JSON - RPC HTTP port in multiple classes to allow dynamic configuration of the Solidity JSON - RPC
added a type check before removing the drop target to ensure that the drop target is only removed if it is an instance of DropTarget to prevent
refactor stub jar creation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating the creation
added new features for setup wizard and workflow helper in StartPageTopComponent . java to provide clearer guidance on setup wizard and project management
remove duplicate scheduleWithFixedDelay method call in CassandraDaemon . java to streamline the code by eliminating redundancy
removed unnecessary type casting for available in OnlineTestCase . java to simplify code logic for better readability and maintainability
replaced returnAttributes . NONE with ReturnAttributes . ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are
refactor the handling of onIdleTimeout in HttpChannelState . java and add failure listener in HttpChannelTest . java and ServerTest .
refactor CreateEndPoint class to extend Invocable . NonBlocking to allow for more flexible blocking behavior in the endpoint creation process
updated TABLE _ HEADER _ SEPARATOR regex and added new test cases for one - column headers in TablesTest to improve header parsing accuracy and ensure correct
updated the return value from 32.0 f to 31.5 f in Camera . java to improve the accuracy of the camera ' s rendering
added a preference for startonbootup in GpsSettingsActivity and updated return values in Utilities and GeneralLocationListener to improve user experience by
updated the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to improve security by using a more secure secret
updated assertion messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include " enablePassingNulls ( true ) " to clarify
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race condition
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return ` PinotFS ` and ` PinotFS
added locale - based date formatting to TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is appropriate for non - English locales
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the visual appearance of the UI
added synchronization and refactored ping task handling in Bot . java to improve thread safety and ensure proper shutdown of the ping scheduled executor service
removed the exception message from the error message passed to the ShenyuResultWrap error handler to simplify error handling by eliminating unnecessary
rename variable ` module ` to ` m ` in ` ModuleTable ` and ` PackageTable ` classes to improve code readability and maintain consistency
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and ` hashCode ( o ) ` in ` Subject
updated method calls and variable names in CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintain consistency in naming conventions
updated zoom levels in BasicMapViewer . java for mapView and mvp to ensure consistent zoom behavior across different screen sizes
refactor adminUser and processUserGroups handling to use ImpersonationUtil for improved clarity to enhance code readability and maintainability
replaced ` AccessController . checkPermission ` with ` sm . checkPermission ` and refactored permission assertions in ` CheckPermissions . java ` to improve
added support for argument extraction in DelegatedClientAuthenticationAction to enhance the service resolution process by integrating argument extraction capabilities
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure that the
fix memory leak in tilesizechanger # destroy ( ) and # create TileCaches ( )
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline code and improve readability by elimin
refactored the ` cleanEntriesForFeedsWithoutSubscriptions ` method to ` cleanFeedsWithoutSubscriptions ` and updated its implementation to improve
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to streamline authentication
nifi - 1745 : use temporaryfolder instead of file in test for filebasedclusternodetool
pdfbox - 4892 : make sure conic point be set to 1.1 , not 1.2
added braces to the isEOF check in RandomAccessReader . java to improve code readability and maintain consistency in formatting
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress
refactor CImage class to improve array handling and array creation methods to enhance code readability and maintainability by encapsulating image creation logic
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to ensure compatibility with
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass
replace null - checks with java . util . Objects . equals for improved code readability and leverage built - in utility methods
renamed ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and updated related methods to return ` @ Nullable ` to
added verification checks for default location view properties in NinjaDefaultTest . java to ensure correct retrieval of default values from the NinjaProperties class
renamed methods and variables related to ` updateAllAppsWidth ` and ` allAppsContainerWidth ` to ` updateAllAppsContainerWidth `
updated timestampViewPaddingBottom and listViewPositionOffset values in DetailFragment . java and ListFragment . java , and adjusted listViewPositionOffset
updated exception handling in ZkStateReader . java to use ` Thread . currentThread ( ) . interrupt ( ) ` instead of ` Exception `
added null checks for ` f . getName ( ) ` and ` field . getValue ( ) ` in ` HttpFields . java ` and created
fixed npe in ipaddressmanagerimpl when there be no static nat for the network element .
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure the header
added functionality to remove extra empty screens from the workspace to improve user experience by removing unnecessary empty screens
added a fixedWidth flag to the BitmapFont class and modified the xAdvances calculation logic to accommodate glyph width adjustments based on
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored its usage in ` ChangeLogFragment ` to simplify
added preEvent , preTransition , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state management capabilities by integrating
refactor ConfigDescriptionProvider class for improved clarity to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase and TestStorageBasedMetastore
added a boolean variable for sorting in FacetComponent and updated related conditions in TestDistributedSearch to improve code readability and maintainability by redu
updated the property path for the checkstyle cache file in CheckstyleReport . java to ensure the correct cache file path is used based on the
added logic to determine if the Jetty is stopped in the collection and updated the failure message for clarity to improve the reliability of the
added a filename parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to allow users to specify a file name
updated direction checks in CellLayout . java to include MODE _ ON _ DROP _ EXTERNAL and MODE _ ON _ DROP _ EXTERNAL to
replaced ` payAccountId ` , ` recAccountId ` , ` from ` , ` to ` currency ` , and ` to ` in `
fix race condition in sinkstresstestutil . assertjobrunningeventually ( ) and writejdbcptestutil . testfailjob
added a new annotation ` EnableAdminClient ` to the ` org . noear . solon . solon . solon . admin .
replaced specific imports with a wildcard import and added new visitIdentifier methods in FindTypes . java to streamline import statements and enhance identifier handling
set action text color to primary dark in AuthenticatorActivity to enhance the visual appearance of the application
added a new ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , ` MockManager ` , and ` MockManagerImpl
renamed methods and variables from ` addTestStepsForPickleSteps ` and ` addTestStepsForPickleSteps ` to ` create
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
added a new method ` cancelClient ` to ` RpcServer ` and modified the ` startDriver ` method in ` SparkClientImpl ` to
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo ` , ` ReflectionParamInfo ` , and
initialize lastDisplayedUser to Optional . empty ( ) to ensure lastDisplayedUser is initialized to avoid potential null pointer exceptions
added a method ` findAll ` to ` QueryDslMongoRepository ` and updated its implementation in ` AbstractPersonRepositoryIntegrationTests ` to enhance
added null checks before stopping instances in SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions during stop calls
added a break statement in DefaultPlannerBenchmark . java to exit the warm - up loop in case of a failure
add xread ( byte [ ] , byte [ ] , byte [ ] , byte [ ] , byte [ ] , byte [ ] )
updated method parameters in LinkedBufferInput and StreamInput classes to improve clarity and consistency to enhance code readability and maintainability by standardizing
added support for the ` casWebSecurityCustomizer ` bean configuration in ` CasWebAppSecurityConfiguration ` and refactored the ` Cas
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStoreNoDoAs
added a method to register and create ContentProviders in ShadowContentResolver and ContentProviderController classes to enhance content provider management and facilitate
replaced instances of ` Version ` with ` ClassFile . Version ` in ` AttributeReader . java ` to ensure compatibility with the latest Java version
added keep - alive configuration to SingleConnectionManager to ensure proper connection management based on configuration settings
[ java ] rename unicastflowcontrol to unicastsenderflowcontrolsupplier so that it can be use by the driver .
g3d locus : fix nullpointerexception in gbasicstroked
added exception handling for ` IOException ` in ` ChannelEndPoint ` and modified ` WebSocketConnectionD13 ` and ` WebSocketMessageD13Test `
simonstewart : add selenium . take . screenshot config option to take screenshot
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and consistency in assertion framework
truffle : remove deprecate getcontextreference ( ) from trufflelanguage
changed the initialization of the ` e ` variable and added a new test class ` StubbingWithBadThrowablesTest ` and ` Un
updated condition checks and improved exception handling in Actor and Group classes to enhance clarity and correctness of error messages
added location permission handling and dialog functionality in LocationPickerActivity and ContributionController to enhance user experience by providing quick access to location permissions during map
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - add support for
added import for CookieSpecs and set a standard cookie specification in requestConfigBuilder to ensure proper handling of cookies in HTTP requests
updated intersection logic in Intersector . java to use ` r . overlaps ( r2 ) ` instead of ` r1 . x `
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio processing logic to improve audio
added a ` monitoringUrl ` parameter to the ` ScrollingPanel ` and ` SystemInformationsButtonsPanel ` classes to enhance functionality by allowing
[ hotfix ] [ k8s ] remove the ' create - timeout ' config option
updated icon resource assignment in NearbyListFragment to handle different place descriptions to improve user interface clarity by providing appropriate icons based on place
added a null check for the package before accessing its name in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when package is null
added a new file ` PrintInlining . java ` containing a main method that prints " Passed " to demonstrate the
fix ( javadoc ) : fix parsing of nested brace in javadoc tag ( # 4395 )
[ java ] remove unused publication initial term id and offset from archive test .
updated the method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve readability
updated logging format in VideoManager . java for playback speed validation to improve clarity and consistency in logging output
[ java ] do n ' t send room remove event when cluster be start .
updated the ' minimize ' property from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure the test reflects the correct
added key properties to TextureHelper for better texture management to enhance text manipulation capabilities for better user experience
replaced instances of ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParser ` in multiple files to improve event
[ wasm ] add librarynormalizationpass to the j2cl transpilation process .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactoryTest
[ hotfix ] [ memory ] remove redundant check in memorymanager
added @ Temporal annotation to ConsoleSessionVO class to enable serialization of timestamps in the ConsoleSessionVO class
added new files Hbs . java and HbsTest . java to implement template handling for Handlebars in the Jooby framework to
updated visibility logic for HintMessage and IncomingMessage in ChatMessageAdapter . java to handle null or empty messages more gracefully to improve user experience
pdfbox - 4892 : use keyset . values ( ) instead of keyset . keys ( )
simonstewart : remove parameterized test from confirm and alert test
added a check for distinct column indices size in ReduceSinkDeDuplication . java to prevent potential ArrayIndexOutOfBoundsException when there are multiple distinct columns
refactor file handling logic in MiscUtils . java for improved clarity and functionality to enhance error reporting and maintainability of the code
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the artifact ID from " websocket - server " to " jetty - websocket - client " in TestOSGiUtil . java to
replaced ` toUnmodifiableMap ` with ` unmodifiableMap ` in ` SAMLAuthenticatedUser . java ` to ensure immutability of the
bugfix : update sketch after save program change
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return in multiple classes to simplify code
updated the method call from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure the
updated the condition to check for " javax . naming . Context " in HtmlJndiTreeReport . java to ensure compatibility with both Context and
updated database option handling in StorageUtils . java and improved logging in Manager . java to enhance database configuration flexibility and enhance logging clarity
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
replaced the static final integer FLAG _ SLIPPERY with a static import of FLAG _ SLIPPERY in StatusBar
truffleconstantfieldprovider : fix array dimension calculation for non - array field
added methods to retrieve and set the Google Drive folder path in PreferenceHelper and updated related classes to utilize it to improve user experience by
[ web ] shuffle suggestions when click on the Radio button ( web )
added @ Nullable annotation to method parameters in Truth . java to improve code clarity by indicating that the target parameter can be null
updated bitwise operations for new sizes in ArrayUtil . java to improve performance and correctness of byte array handling
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to conditionally instrumented constructors to improve test coverage and ensure
[ hotfix ] fix race condition in streamin and streamInitiateverbhandler
added a new boolean field ` isKeyguardSecure ` and its corresponding getter and setter methods to the ` ShadowKeyguardManager ` class to
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the class
updated the loop to replace ' > ' with ' > ' and added a check for the length of overrides before parsing to ensure proper handling of
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables `
modified the ` checkDrained ( ) ` logic in ` AsyncFileImpl . java ` and added a new test in ` FileSystemTest
increased LIGHTS _ NUM and LIGHTS _ INTESITY from 10 to 8 and updated light shader references in Hybrid
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple integration test files to simplify filesystem initialization and
changed the type of ` loadRerunFile ` and ` loadRerunFile ` from ` String ` to ` PathWithLines ` to
refactor Gson , JsonArray , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to indicate that the TEST _ DIRS array is not
added a call to close the ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added a method to reset the prefix index in ` BasisLibrary ` and modified its implementation in ` Stylesheet ` and ` BasisLibrary
added logging for HTTP connection in TestDistributedStatsComponentCardinality . java to provide more detailed logging for debugging purposes
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that modifications to ` IntList ` are
updated method signatures in GrpcServerRunner and GrpcClientBuilder to include @ NotNull annotations and modified URI creation in GrpcClientBuilder to
refactor graal . workdir ( ) to use a supplier to improve readability and maintainability of the code
make key unchanged assumption thread safe and invalidate the function array in insightpercontext .
added platform - specific handling for writing manifest files in GenerateManifestStep . java to ensure proper formatting of manifest files across different operating systems
bump confidence of rcn _ redundant _ nullcheck _ of _ nonnull _ value to fix rfe
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and ThingResource classes to enhance null safety by preventing potential NullPointerExceptions
change return type of createcancellationexception from throwable to runtimeexception
pdfbox - 4892 : do n ' t create cropbox when there be no cropbox
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ` ENABLE _ ALL _ APPS _ IN _ TASKBAR ` to ` FeatureFlags . java ` to provide
refactor FragmentTestUtil to use Robolectric ' s buildActivity method to improve code readability and leverage Robolectric
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and updated its usage in ` ShareActivity ` to improve clarity and
updated class names from ` ABCase1 ` , ` ABCase2 ` , and ` ABCase7 _ 3 ` to ` TestAB
renamed the parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check for the getBl
replaced direct initialization of ` RocketChangedEventHandler ` with a local variable ` handler ` to improve code readability and ensure the handler is
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe for updating dependency group IDs and artifacts to facil
refactor file system initialization and segment addition logic in IndexingJob . java and add validation in SegmentChecker . java to improve code clarity
changed the condition from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor PreprocessorDelegate to use memoization for managing replacement paths and source path mappings to improve efficiency and error handling during header processing
rename ` JsonExamples ` to ` Examples ` in ` JsonExamples . java ` and update package - info . java ` to improve clarity
added debug log statements to ViewExtractor . java to improve visibility into the processing logic for better debugging and monitoring
refactor FindsByLinkText class for improved readability to enhance maintainability and facilitate future updates
added a new file ` Main . java ` containing a main method that prints " java oop entry point hit " to facilitate
fix a race condition in sipregistrarconnection . throwoperationfailedexception .
removed redundant continue statements from NativeScanner . java to improve code clarity and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to organize
replaced ` ImmutableSet . Builder ` with ` Supplier < ImmutableList < BuildRule > > ` for dependency resolution in ` AndroidLibraryDescription . java
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling to metadata in ExtractingDocumentLoader to ensure correct content encoding is used for metadata processing
updated SQL insert and select statements in DatabaseConfig . java to use query parameters instead of single quotes to improve readability and maintainability of the
added a condition to return early if the slot is - 1 in WindowListener . java to improve performance by avoiding unnecessary processing when the slot
add -- ignore - transitive - repositories option to allow maven to ignore remote repository
removed duplicate @ Inject annotation for backgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and improve compatibility
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is null
added a condition to check if the index equals string length and matches the matcher ' s start and end to optimize performance by avoiding unnecessary processing
updated the IntegrationTest annotation to specify the server port in MvcITest . java to ensure the integration test defaults to the specified server port for
added a new UDF " reverse " function in the FunctionRegistry and created a new UDFReverse class to facilitate the functionality of the
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and consistency in
refactor Tracer class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] disable rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java for improved readability to enhance code clarity and maintainability by redu
replace UnsupportedOperationException with synchronized block for clearing the buffer in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety when clearing the buffer
updated forecastMinutes , hours , and forecastDays values in OpenWeatherMapOneCallHandler . java to adjust the forecast time and days to
updated test annotations and variable names for fetch time and previous fetch time in AbstractPageOperationTemplateTest . java to improve test clarity and ensure
updated RemoteTargetGluer and FloatingHeaderView to improve handling of RemoteTargetGluer and add suggestion functionality to FloatingHeaderView to
changed method names from ` splitAndMap ` to ` splitAndThenFlatMap ` and modified return types in ` CucumberPropertiesParser
add new item to the creative tab to make it work with the new creative tab .
updated assertion statements in TestRadioButtons . java for consistency to improve readability and maintainability of the test code
added support for " -- file - sizes " option in RCFileCat . java and implemented a method to retrieve the number of rows in RC
refactor multiple Java classes related to trading functionalities to improve code organization and maintainability
added multiple check for ndarray parameters in JnaUtils . java to ensure robust error handling for closed MXNet NDArray scenarios
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
fixed bug 106605 - unusedprivatemethod no longer report false positive for private method .
corrected a typo in the variable name from ` lexicalScope ` to ` lexScope ` to improve code readability and maintain consistency
added a new test method ` testAutoStartup ` to ` InboundChannelAdapterParserTests ` to ensure the ` SourcePollingChannelAdapter `
added getter methods for level , root , and itemBoundables in the STRtree classes and refactored constructor parameters to accept these parameters to
updated version parsing logic to handle digit values correctly to ensure correct parsing of version number format
added a check for empty tags before removing active items and changed log level from warn to debug in ItemRegistryImpl . java to improve robustness
added methods to parse and convert date and time strings into epoch milliseconds in DateTimePatternHandler and DateTimeFunctions classes to enhance date parsing functionality and improve
refactor disassemble method to use a dedicated method for cache handling to improve code clarity and maintainability by centralizing cache disassembly logic
refactor Log4j2ConfiguratorServlet class for improved logging functionality to enhance performance and maintainability of the logging framework
replaced ` new HiveException ( e ) ` and ` new AuthorizationException ( e ) ` with direct instantiation of ` new HiveException (
updated CGoCompileStep to use String . join for cppCommandPrefix and added a new test for prebuilt dependencies in GoBinaryIntegration
added Buildable annotation to CustomResource . java to enable proper building of the builder package in the Kubernetes API
removed an unnecessary @ Override annotation from the Only class to improve code clarity and maintainability
added TIMEOUT _ THREE _ HOURS constant and setSoTimeout method in HttpClientFactory to ensure proper handling of connection timeouts for improved reliability
added new pipeline names to the PerBuildStateFactoryWithConfigurableAttributes and updated the event scope in RawTargetNodeToTargetNodeParsePipeline to
simonstewart : add trace constraint to the security manager
removed the @ Singleton annotation from ApplicationController . java to simplify the code by eliminating unnecessary dependencies
updated the username assignment logic to handle OwnCloudAccount display names to ensure the correct username is used based on the account ' s display name
added BatchStatus import and a test for resuming a paused job in SimpleJobLauncherTests to ensure that the job execution is properly resumed
added null check for cacheConfig in HttpSyncDataService and refactored data refresh logic in DataRefreshFactory to improve code robustness and
[ java ] make dockersession public to allow access to it from other class .
fix compilationunitcontext . getqualifiedname ( ) to use string . getnameAsString ( ) .
pdfbox - 4071 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
[ mahout - 1346 ] fix testdistributedlanczosSolvercli test failure
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future development
updated assertions in PortletApplicationMapTest to verify the correct retrieval and retrieval of keys from the map to ensure the correctness of key - value
added unit tests for ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` and implemented ` NestedBeanIgnoreNulls ` in ` Nested
added a customizable RedissonAutoConfigurationCustomizer interface to enable customization of Redisson configuration settings
fix index out of bound exception in indicator . todouble ( )
added new methods ` execInContainerWithUser ` and ` execInContainerWithUser ` in ` ContainerState ` and ` ExecInContainer
simplified the assignment of interestedInByteMessages and interestedInTextMessages to improve code readability and maintainability by reducing redundancy
added unit tests for semantic graph attributes in SemgrexTest . java to ensure correctness of attribute handling in the semantic graph processing
added a broadcast intent for clearing the pull unread from the HomeFragment to enhance user experience by allowing users to send a clear pull unread
removed conditional logic for pre - gesturebread and over scroller initialization in TouchImageView . java to simplify code by eliminating unnecessary
added flush method to the default profile validation support bean in BaseDstu21Config , WebsocketDstu21Config , and BaseResourceProvider
camel - 16462 : fix npe in abstractcamelcontext . start ( ) when veto be not start .
added FloatingActionButton for main FAB functionality in ShareActivity to enhance user experience by providing quick access to the main FAB based on
added a new InlineParslet class and modified the ToDateParser to handle inline strings to enhance date parsing functionality to support additional parsing options
updated TestAnonymousClassUnloading . java file to improve test coverage for class unloading scenarios
updated messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java for clarity and consistency to improve readability and
added a check for server checked before binding the OperationsService to ensure that the service binding only occurs when the server is checked
updated the Position class to use getBeginLine ( ) and getEndColumn ( ) instead of getBeginColumn ( ) and getEndColumn ( ) to ensure
added ` waitFor ( ) ` methods to ` ManagedThread ` and invoked it in ` CxxPreprocessAndCompileStep ` to ensure proper
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented the ` mergePersonAttributes ` method in ` Core
improve max size check and increase test timeout
added support for enabled SSL protocols in NettyWebServer and ServerBasicConfig classes to enhance SSL configuration flexibility based on user - defined protocols
replaced AtomicBoolean with AtomicReference in SetOnce . java and added a new Wrapper class to enhance thread safety and improve atomic reference management
updated the method to return an empty string if no path expression is provided in QueryDslMongoRepository and added a test for it in Spring
updated assertion messages in RoundRectBorderTest to clarify the expected behavior of RoundRectBorder to ensure that the RoundRectBorder is only
added a check for empty genesis configurations in Cluster . java and updated Bft acceptance test parameters in BftAcceptanceTestBase . java to
remove parallel test , no longer need
updated CountDownLatch initialization to use ' min ' instead of ' cnt ' and added a length check for the sign array to ensure proper handling
changed the condition from ' windows ' to ' ! windows ' in ProcessInformationsPanel . java to ensure that the process information is only displayed
refactor methods in MoreCollectors to use a new greatest method instead of maxN and minN to improve code readability and maintain
updated ` BitmexStreamingExchange ` and ` BitmexStreamingMarketDataService ` to use ` BitmexStreamingMarket
added validation for geocompletion lat and lon in GeoPointField . java and corresponding tests in TestGeoPointField . java to ensure
replaced the method ` createWorkflowFile ` and ` saveDraft ` with ` createFile ` in ` OozieProxyImpersonator .
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated the ` getTableDocument ` method to include a ` withDependents ` parameter to control the behavior of the ` getTableDocument ` method to
added functionality to count recent uploads without coordinates in UploadActivity and UploadPresenter to enhance user experience by providing feedback when a number of consecutive uploads is
added caching functionality for profile data handling in ProfileResources . java to improve performance by reducing redundant serialization and deserialization of query profiles
refactor ID value handling in JpaMetamodelEntityInformation to improve clarity and functionality to enhance code readability and maintainability while ensuring
phoenix - 4892 add an index to the last ddl timestamp for all table and view to ensure that the last ddl
add default exception mapper to jersey ' s jersey . register ( )
added a new parameter ` false ` to the method call in ` EntryEditor . java ` to control the behavior of the ` storeFieldAction
updated the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter and adjusted its usage accordingly to ensure proper handling of window
updated SQL command from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME in FileContentProvider . java to ensure the correct table name is
added stck and stck support to the Tile class to enhance the gameplay experience by allowing customization of the stck tile ' s
fixed - commandasyncservice . readasync ( ) and writeasync ( ) method throw npe if codec be null
fix typeframemodelingvisitor for complex generic signature
added a ` BackProgressAnimator ` instance and modified related methods in ` LauncherBackAnimationController ` and ` LauncherBackAnimationController `
changed the visibility of the ` _ initialPageNo ` variable from final to non - final and added a new ` _ initialPageNo `
update crc calculation logic in JedisClusterCRC16 . java and adjust TOTAL _ OPERATIONS in CRC16Benchmark . java to improve accuracy of
added support for parsing comments with a comment in FormattedSqlChangeLogParser to enhance SQL change log parsing functionality by allowing comments to be processed
replaced the instantiation of ` JarArchiver ` with a single instance of ` JarArchiver ` in ` MavenArchiver ` and added
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by using BuckUn
refactor conditional checks in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability and ensure
added checks for RGBA format and type in GwtGL20 . java to ensure only supported formats and types are processed to improve error handling and
updated method invocations in ` OutputMemoryTest ` , ` PrintR ` , and ` VarDump ` to use ` env . invokeMethod ` instead
replaced ` UnmodifiableClassException ` with ` Throwable ` in ` InlineBytecodeGenerator . java ` and added error handling for class instrumentation
improve trace of class initialization trace for class initialization .
fix typo in broker requesthandler
replaced Google Common Cache with Caffeine for loading topic routes to improve performance and modernize cache management
added a read - only option to the createDataSource method in MBTilesDataStoreFactory to allow configuration of read - only mode for improved performance
updated the INVALID _ SOURCE _ TARGET _ RELEASE regex to include a period in the invalid source release pattern to ensure accurate validation of source release
updated URI construction in DetailFragment . java to include a check for the availability of Google Maps to enhance user experience by allowing direct access to Google
added a null check for referencedIds in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing referencedParameterContexts
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future updates
added a method to set the response headers in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that the response headers are
removed the instantiation of ProfileSettingDrawerItem in GpsMainActivity to streamline the user interface by eliminating unnecessary settings
added XML _ VALIDATION _ ATTR constant and updated related classes to utilize it to improve code maintainability and facilitate XML validation
simonstewart : add a test to verify that the javascript string handling work as expected
added a maximum row limit check for fetch size in IoTDBStatement . java to ensure that the fetch size does not exceed the defined maximum row
refactor isCountOptimizable and allActionsAreOptimizableFilters methods to improve clarity and consistency to enhance code readability and maintainability
added event handling for node and mouse click events in StandardVizEventManager . java to enhance user interaction with node and mouse interactions in the
refactor memory setting logic into a separate method ` zeroBuffer ` to improve code readability and maintainability by reducing duplication
[ hotfix ] [ terminal ] make the xorgroup instance of terminalnode memory configurable
remove unused method getheight ( ) and getwidth ( ) from lcduiimagemonochromebitmapsource
refactor SourcePathResolver to use a helper method for determining absolute paths to improve code readability and maintainability by reducing duplication
fix ( dstu2 ) : fix dstu2 parser state when attribute value be set to ` ` value ' '
changed the visibility of the changeSchemeIfIsWebSocketUpgrade method from private to static and modified URI building logic to improve accessibility of the change
rename testgccsuitecompilation to testgcccompileSuite in llvmpaths . java
refactor CxxPlatform retrieval logic by introducing a new method ` getCxxPlatform ` to improve code readability and maintainability by encaps
added import statements for ` IndexReader ` , ` Field ` , and ` Searchable ` classes in ` Document . java ` , and `
added null check for the current object before returning it in ConcurrentLinkedStack . java and updated test methods in ConcurrentLinkedStackTest . java to
added isMatched ( ) and setMatched ( ) methods to BinaryHeapQueueTest and BaseQueueable classes to provide control over the matched state
added a null check for mDirectories before initializing it to avoid potential NullPointerException when mDirectories is null
updated gesture end target check in RecentsView . java to ensure correct behavior when overview state is disabled and first layout is not enabled
added multiple new package - info . java files for various Lucene - related packages to provide package - level documentation for better organization and clarity
added a text property to the AutoLevelerTopComponent to allow users to set the visibility of the Autooleveler panel based on localized
added optimization functionality to DirectUpdateHandler and DirectUpdateHandler2 classes to enhance event listener management during optimization
updated compression handling in CompressionMode . java to use a padded byte to ensure proper memory management and avoid potential memory leaks
removed the check for user _ data in Shaderc . java to streamline shader processing by eliminating unnecessary checks
added a condition to check if the base is a local MetaStore to ensure retries are only considered when the local meta store is available
updated import statements and added null checks for hostStatus and connectionClosedException in HeliosSoloLogService . java to improve error handling
refactor Subject class to improve code structure to enhance maintainability and readability of the code
use referencetype . weak instead of java . util . concurrentreferencehashmap in abstractserializationservice
updated color distance calculation in HSSFPalette . java to use absolute values and added a new test method in TestHSSFPalette .
chore ( regen ) : update license year for generated file ( # 1193 )
simonstewart : add unit test for find element by numeric id
added a new ` flags ` parameter to multiple ` registerReceiver ` methods in ` ShadowApplication ` , ` ShadowContextImpl ` , and `
refactor FFmpegTest to use Mockito ' s Answer class for resource loading to improve test reliability by ensuring the correct resource is loaded
added previous input stream handling in Ogg and OpenALMusic classes to ensure proper resource management and prevent potential memory leaks
replaced hardcoded string " Response was null " with a constant " RESPONSE _ WAS _ NULL " to improve code readability and maintain
[ te ] fix anomaly warning when anomalyfailurecount = 0
refactor Toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by
updated the request creation method to use the request template instead of a hardcoded method to improve clarity and maintainability of the code by using
added name validation and referral handling in LDAPCertStore . java to ensure valid names are processed and improve error handling for LDAP referral issues
refactor retain logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
rename AdapterViewTest to ListViewTest and add a proxy for testing item click functionality to improve test clarity and facilitate testing
[ hotfix ] [ test ] fix checkpointfailuremanageritcase
deleted the genericitemuiprovider . java file to remove unused code
fix a bug in the selection box so that it can be use in the selection box .
added JUnit ' s @ Isolated annotation to MetaInfConfigurationTest . java to indicate that the FileSystemPool is accessed as a static method
set the server connector host to HTTP _ INFO . bindAddress to ensure the server connects to the specified bind address for improved configuration
added conditional logic to set access and refresh tokens for heart mode in DynamicClientRegistrationEndpoint to ensure proper handling of access and refresh tokens based
added a new class ` CloverInstrumentationFilter ` and modified the condition in ` SplitLogCounters ` to include a check for the enclosing
added ZHIMI _ HUMIDIFIER _ CB2 device to MiIoDevices . java and modified readmeHelper . java
fix : do n ' t plausible break if the mining duration be > = cost _ inf
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow external access to the setScrollRangeDelta method
ambari - 20610 . add log for empty repository list in cluster and host stack
updated the condition for comparing missing values in IntHashSet to ensure correct handling of missing values in addition to missing values
added Serializable to the RuleAdministrator class to enable serialization of RuleAdministrator instances
replaced instances of ` List < String > ` and ` List < String > ` with ` Set < String > ` and ` List <
replaced " g3d / cubes . g3dj " with " g3d / knight . g3dj " in
added a check for negative solidifiedPosition in the Manager class to prevent errors when updating the latest solidified block
hbase - 26462 fix npe in execresult . getclass ( ) when value be null
added a new method ` hasAccess ` and modified error handling in ` HttpServer . java ` to check for null responses before sending an error to improve
refactor ClassMirror and StubJar classes to introduce a new method for obtaining stub class bytes to improve code organization and encapsulate the
added a TextView to display the internal link text based on folder status to enhance user experience by providing clearer context for sharing internal links
updated the accuracy string formatting to use Locale . ENGLISH to ensure consistent formatting across different locales
update condition to check for SATURDAY instead of DAY _ OF _ WEEK in ModelZooTest . java to ensure correct handling of
added keyboard hiding logic in AllAppsContainerView and logging in LauncherAllAppsContainerView to improve user experience by ensuring the keyboard is
use inmemoryeventstorageengine in test for test
refactor BsdFileStore and BsdNativeDispatcher to utilize BsdNativeDispatcher for retrieving mounton names to improve code clarity
add test case for issue # 1599
added a new command ' x ' and ' z ' parameters to the SpawnCommand class to enhance command functionality by allowing dynamic position adjustment based
added MIN _ CONTENT _ DIMEN constant and refactored content area width calculations to use a dedicated method to improve code readability and
make graalcompilertest and hotspotCryptosubstitutiontest final
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check class names to failed checks in UpgradeCheckRegistry . java and modified the addColumn method in UpgradeCatalog280 . java to ensure
refactor Environment class to improve code structure to enhance maintainability and readability of the codebase
added LuceneTestCase import and annotation to RecoveryAfterSoftCommitTest . java to address a known issue related to SOLR - 7421
modified the home path construction logic in CodenameOneImplementation . java and removed a warning check in HashtableContent . java to ensure proper path
change flag _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific imports with a wildcard import and updated ResourceAccessor initialization in LiquibaseEntityResolver . java , and modified XMLChangeLog
added security properties to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms in hostname verification
updated the ` @ Value . Immutable ` annotation in ` AbstractCxxDeps ` and removed the ` EMPTY ` constant in ` CxxLibrary
renamed ` expectedDirectory ` to ` expectedStubDirectory ` , ` actualStubDirectory ` , and ` actualFullDirectory ` , and updated
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name hint handling to use ` TextUtils . isEmpty ( ) ` instead of ` FeatureFlags . FOLDER _ NAME _ SUGGEST
updated the client loading logic in UaaResetPasswordServiceTests to include " uaa " as a valid client ID to ensure that the client
changed method visibility from public to private for isEmptyOrWhitespace , isSpecialCaseOrUnknown , and isSpecialCaseOrUnknown to restrict access to these
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to account for closed state to ensure accurate representation of counter state
refactor MimetypeIconUtil class for improved clarity to enhance maintainability and readability of the code
rename the method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming con
added a new test method ` negatedInstanceOf ` in ` UnnecessaryParenthesesTest . java ` and modified the condition in ` Un
added reflection - based access to the Location class and implemented teleportation functionality to enhance location handling and ensure compatibility with the Bukkit entity class
replaced the use of ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` for encoding modulus and exponent
updated imports and modified statistics reporting in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` in ` ContainerAnnotation . java ` to improve clarity of the interface ' s purpose
added a null check for the ID ( ) method in ObjectIdentityImpl . java to ensure that the ID ( ) method returns a non -
refactor method names and logic for retweeter handling in TimeLineCursorAdapter . java to improve clarity and maintainability of the code
added a conditional check for the addon theme before displaying the verified text in UserProfileActivity to enhance user experience by allowing customization of the verified
refactor AbucoinsDigest class to remove static instance variable and improve encapsulation to enhance code clarity and ensure immutability of the
camel - 14284 : camel - mongodb - allow to configure the mongo connection to be autowired by default
added a sourceIndex field and its getter / setter methods to the AttributeMapping class and updated related classes to utilize it to enhance the functionality
log a warning if hive _ corrupted _ column _ statistics be find when alter a partition
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to enable security checks in the authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 10565 ] escape email in the home page for geoserver
refactor modulemanagerimpl to use modulemanagerimpl instead of modulemanagerimpl . getregistry ( ) to improve performance
updated the output format in JoinModeller to use the number of features instead of the length of means to improve clarity and accuracy of the
[ giac ] make sure ` ` math ' ' command be not empty
[ hotfix ] [ kafka ] fix checkstyle violation in singlenodekafkaresumestrategy
replace direct reference to ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAYBACK
added support for automatic separation in the MotorMountHandler and updated related classes to utilize the default motor instance to ensure compatibility with
tika - 3746 -- add check to ensure ascii name length be the same as the utf - 8 length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to JDK version compatibility
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by encapsulating lock file creation
updated the version check from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new sync interval values
added a condition to return null if the username equals the FEDERATION _ USER to ensure proper handling of authentication authentication by preventing un
do n ' t check if the value be a trufflerode instance of trufflerode
removed @ Disabled annotations from JakartaClientShutdownWithServerWebAppTest and JakartaClientShutdownWithServerWebAppTest
added filterattachable to logbackvalve so that it do n ' t fail if the access event be not dyny
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added catalog and schema handling for missing primary keys in the MissingPrimaryKeyChangeGenerator to ensure correct schema management for database comparisons
added ` MetastoreException ` to the ` execute ` method and modified exception handling in ` MsckOperation ` and ` Msck `
[ hotfix ] [ kafka ] fix race condition in kafkaproducer # committransaction ( )
[ issue # 5892 ] fix the issue of the messagehandle be not remove from the messagehandle when the message handle be remove .
added a new method ` withServices ` to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to handle empty services to
use copyset ( ) instead of for loop to avoid concurrentmodificationexception
removed unused imports and simplified the return statement in FeedParser . java to streamline code and improve readability by eliminating unnecessary code
removed the condition for disabling all apps in Launcher . java and updated the way child views are retrieved in Workspace . java to streamline
change data type of energy and powerApparentSSum fields from int to double in MeterRealtimeBodyDataDTO . java to improve precision
added a new file ` bug4150029 . java ` that implements the ` JFileChooser ` interface with initialization and destruction
added a boolean flag ` isSparkConfigUpdated ` and related methods in ` HiveConf ` , modified ` SparkClient ` , ` SparkSession
added long press indicator methods to AppIcon , AppIconMenuItem , and Launchable classes to enhance functionality by providing specific long press indicators for better
added checks for empty polygons in WKBWriter and updated test methods in WKBWriterTest to improve handling of empty polygon scenarios and enhance test
refactor UnflavoredBuildTarget and AbstractUnflavoredBuildTarget to use a interner for object creation to improve memory efficiency
added a new file ` MultiplyByMaxInt . java ` that implements a multiply operation with a maximum integer value to implement a test
added a check to enable the drawer indicator for the current file in the search view to ensure the drawer indicator is enabled when the current file is
removed unused imports from TestRAMDirectory . java to clean up the codebase and improve readability
replaced instances of ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to
danielwagnerhall : provide clearer error message for no expression define for name ' $ s ' in dmnvalu
replace @ ContainedBy ( AC . class ) @ ContainerFor ( A . class ) and @ ContainerFor ( B . class ) with
updated the file sending message to include the duration of the file being sent to enhance clarity of the console output by including the duration of the
added package access check and updated class name retrieval in OpenMBeanAttributeInfoSupport . java to enhance security by ensuring proper package access validation before class
patch by jbellis ; review by brandonwilliams for cassandra - 1186
updated the calculation of freeSize to use roundTo16 instead of roundTo16 to ensure accurate memory allocation for improved performance
fix for reset the aretouchesdisabled flag . issue #
replaced instances of SslContextFactory with SslContextFactory . Server in multiple classes to improve clarity and consistency in SSL context factory usage
removed the ` PrivilegedSocket ` class and simplified the connection creation in ` PG _ Stream . java ` to simplify the code by eliminating
refactor InputTest class for improved readability to enhance maintainability and ease of understanding for future developers
updated the ` finishRecentsAnimationOnTasksAppeared ` method to accept a ` Runnable ` parameter and added functionality to pause blurs
refactor NearbyMapFragment to check for null before removing the current location marker to improve code robustness by avoiding potential NullPointerExceptions
updated the ` removeSecret ` method calls to use ` clientDetailsService . retrieve ( getClientId ( ) ) ` instead of ` client ` to
updated SQL source test to use ` @ BeforeEach ` instead of ` @ BeforeAll ` and modified test assertions to accommodate new XML
http : / / issues . apache . org / jira / browse / amq - 4892 - wait for the executor service to
added unit tests for ` UnknownKeyException ` in ` SlidingGanttCategoryDatasetTest ` to ensure proper exception handling for unknown column keys
added null checks for conditionDataList and return statements in ShenyuTrieRuleListener . java and ZookeeperSyncDataService . java to
improve lightcontrol . clonefields ( ) to make it easy to clone field
updated conditional logic for ` _ hideStacks ` and improved stack trace handling in ` StdErrLog . java ` to enhance code clarity
replaced direct calls to ` context . publishEvent ( e ) ` with ` getContext ( ) ` in ` HttpSessionEventPublisher . java `
added a check for the syntax of CREATE CQ statement in ASTVisitor . java to ensure that the CREATE CQ statement has changed from v
[ hotfix ] [ runtime ] fix typo in flinkiotdbsink javadocs
added counter for custom simplificationConsideredNodes and updated conditional checks in CanonicalizerPhase . java to improve clarity and tracking of simpl
updated the method call to include the context parameter in the setImageDrawable method to ensure the correct context is used for setting the file icon
updated indexOrConstraintName initialization to include schema name to ensure compatibility with schema naming conventions
fix ( bigqueryio ) : add time format to bigquerytableiterator . tostring ( )
added ` findViewWithTag ` method implementations in ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ViewGroupTest `
updated for - loops to use generics in multiple Java files to improve type safety and eliminate unchecked cast warnings
added import statement for PColumnFamily in IndexTool . java and removed unused import in MetaDataClient . java to improve code clarity and maintain
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated enum value retrieval logic in JavaClassUtil to enhance annotation handling and
svm : do n ' t generate a jar if there be no jar file .
updated CUDA _ R _ 16F , CUDA _ R _ 16F , CUDA _ R _ 16F , CUDA _
refactor ResourceLoader to include a filter for layout directories to improve error handling by reducing unnecessary resource loading operations
refactor getAttachedFace method to handle SimpleAttachableMaterialData to improve type safety and avoid potential ClassCastExceptions
added support for VARBINARY data type in RelToStageConverter to enhance functionality for binary data processing
added import statement for DateHelper in NoteAdapter . java to utilize date utility methods for date handling
updated backup handling logic to use BACKUP _ SAVE _ SUCCESS instead of BACKUP _ SAVED to improve clarity and accuracy of
ggb - 1352 move the element to the relative position of the eview , not the absolute position .
simplified file creation and deletion logic in ShadowParcelFileDescriptor . java to improve code readability and maintainability by eliminating
int - 1186 remove unnecessary poll ( ) call from stackbasedsecuritycontextholderstrategy
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
[ fix ] integerequals canonicalizer do n ' t use addnode for xorneutral
added a constant STRING _ ARRAY to the TypeFactory class to facilitate the use of string array types in the TypeFactory class
refactor IME hiding logic in AllAppsContainerView and add logging for user interactions in LauncherAllAppsContainerView to improve code
add blockstatecontainer . setbits ( ) to force bit density to fix network issue
updated assertions in TimelineMetricCacheSizingTest . java and modified imports in TimelineMetricCacheTest . java to improve readability and
add an optimization to the gl _ max _ texture _ size for par1playerusagesnooper
[ java ] use trystoplogrecording ( ) instead of trystoplogrecording ( )
added a condition to set startPosn to 0 if isInTransform is true in SemanticAnalyzer . java to ensure that the start position is set correctly
replaced the use of ` StarTreeUtils . isStarTreeDisabled ( ) ` with a new ` isSkipStarTree ( )
added a lockNearbyView flag to control the visibility of the progress bar based on whether the nearby places needs to be refreshed to improve
add maptransformer . of ( map ) and maptransformer . bimap ( map < k , v > ) and maptransformer . inverse (
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization to enhance maintainability and readability of the codebase
added support for ` launcherWidgetSpanInfo ` in ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` to retrieve loaded launcher widget information
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector . java ` and ` StageAction . java ` to align with
added methods to manage calling ID and UID in ShadowBinder and corresponding tests in ShadowBinderTest to enhance testing capabilities for calling UID and process ID
replaced the ` AutoValue _ ExpectationFailure ` class with a new ` ExpectationFailure ` class and added a ` cause ` field
added a warning log for unsupported message deserializing in BitcoinSerializer . java to improve error handling and provide clearer feedback during message deserialization
updated calculations for newW and newH in ImageReplacedElement . java to handle cases where newW and newH are not set to
added support for escaping Unicode characters in Markdown rendering and updated related tests to improve markdown rendering accuracy and ensure correct handling of escape sequences
added a NEutral button and refactored the password setting logic in SharePasswordDialogFragment to improve code readability and maintainability by
refactor methods in IoUtil to use reflection for file channel methods to improve flexibility and maintainability by allowing reflection - based access
refactor method visibility from public to package - private and update random string generation in tests to enhance code readability and maintainability by using a
added new command line options for Slider AM keytab in LlapOptionsProcessor . java to enhance configuration options for Slider AM keytab
updated tearOutGraphViewContainer method to accept JFrame and modified animation control in ExtractionModelFrame to enhance flexibility in graph view
added a new boolean variable ` mHasLoaderCompletedOnce ` and modified the ` findSpaceForItem ` method to utilize it to improve
changed ` data ` and ` isFinished ` fields to be ` final ` and modified return statements in multiple operator classes to improve immutability
updated the ` IssueInterface ` and ` ValidationReport ` classes to include a ` messageType ` parameter and added a new ` JsonValidationReport `
added a method to safe the retrieval of the cipher provider name and updated exception handling in RSAClientKeyExchange . java to improve error handling and
replaced ` getDynamicConfiguration ` with ` getFlinkConfiguration ` across multiple files to improve clarity and consistency in naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity during execution
added a newline to the output in AggregateLifeCycle . java to improve the formatting of the output for better readability
changed the access modifier of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow external access to BITMAP _ WIDTH
remove @ Ignore annotation from CovariantOverrideTest . java to prepare for future implementation of covariant overrides
refactor the curly method to a single qtype method and update its usage throughout the Pattern class to improve code readability and maintainability by
camel - 16462 : camel - model - make it easy to load route from a xml file .
added space minimum and maximum values to the X - axis in ScatterChart . java to improve the visual appearance of the scatter chart
updated string concatenation syntax in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added a method ` shouldPreserveDataStateOnReapply ` to ` SplitScreenSelectState ` and implemented it in ` BaseState `
added a check for the presence of the UTF8 key in the properties file to ensure that the UTF8 key is present before proceeding with
lucene - 3995 : fix testreproducemessage . testreproducereproducemessage . testreproducemessage
added logging for long - press actions on AllApps items in StatsLogManager and ItemLongClickListener to enhance user interaction tracking for long - press
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null
added a new boolean field ` showSectorLandInfo ` to the ` SectorPreset ` class and modified the condition in ` Control .
updated generic type usage in SemanticPropUtil , PojoTypeInfoBase , and TupleTypeInfoBase classes to use generics for type safety to improve type
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added validation for ` randomSelection ` in multiple classes
refactor temporary cache to use guava ' s cache builder instead of scheduled thread pool
added visibility settings for SQLViewContainer and WMSLayerImportContainer in NewLayerPage . java to improve UI responsiveness by preventing
set ` Availability _ availability ` to ` UNAVAILABLE ` in ` ContextHandler . java ` to ensure a default value is set to ` UN
updated ` fetchInvDataMsgHandler ` and ` PbftDataSyncHandler ` to include ` peer . isSyncFinish ( ) `
chore : update gapic - generator - java version to 2.1 . 0 ( # 6022 )
updated ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and modified related methods in ` DBMaker ` to
changed the visibility of KDC options constants from public to private static in KDCOptions . java and added a new class KdcDefaultOptions
updated the initialization of the writer variable and initialized it to null to improve code clarity and ensure proper initialization of the writer
reformatted code for consistency in ProfilePager . java to improve code readability and maintainability
renamed the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in
added a method to retrieve object values from a class constant in Configuration . java to ensure proper handling of properties with class names and default values
added logging for initialization failures in KafkaService . java to improve error handling and debugging for service initialization failures
updated the return type of RESOURCES _ TO _ ALWAYS _ ACQUIRE from Set to ImmutableSet to ensure that the RESOURCES _ TO _
[ java ] add ' auto - create - channels ' option for default message channel .
added keywords handling in HTMLDocument and created a new test for index keywords in TestDemo to enhance document indexing functionality and ensure correctness of document
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to ensure addresses are only added if they are added to the list
updated constructor call from a new instance of CorrespondenceSubclassToFactoryCall to a new instance of CorrespondenceSubclassToFactory
refactor Builder class to improve code structure to enhance maintainability and readability of the code
update isbn to ebook2bibtex instead of isbn - service
fix polyglot exception handling and increase keep - alive time to 10 second .
added null check for text before calling fireDataChanged and setCursorPosition methods in TextField . java to prevent potential NullPointerException when text is null
add a simplified model to the sentiment model so that it can be use .
added trimming to the line variable in SuffixURLFilter . java to ensure leading and trailing whitespace is removed before processing
added a check to return early if the layer is in Godmode to optimize performance by avoiding unnecessary processing when the layer is in G
do n ' t register popup in checkbox creation dialog , use wrappedpopup instead
updated constructors in CacheType and TCache classes for consistency and clarity to improve code readability and maintainability by standardizing constructor parameters
removed redundant calls to close ( ) in ChannelEndPoint . java to improve code readability and maintainability
updated KeyIndexBuilder initialization and validation logic in FixAcidKeyIndex . java and OrcRecordUpdater . java to improve key index validation
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for better readability to ensure consistent error formatting across different locales
add storecheckguard to writenode so that it can be use .
improve bbciblockmapping . shouldfollowedge for exceptiondispatchblock .
bug : fix score for non - voting bug
replaced instances of ` BuildTarget . copyOf ( buildTarget ) ` with direct assignment of ` BuildTarget ` in multiple files to simplify the
refactor SqlRunner class for improved readability to enhance maintainability and facilitate future development
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` to improve clarity and
replace progressindicator with confidenceprogressindicator in createofferview
updated user agent header from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to align with the new
fix blockindex . iteratebpt ( ) to skip iteration if the iterator be not available
added a new view type constants and modified the onCreateViewHolder method to handle different view types to improve flexibility in handling different message types
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
do n ' t use ' -- ' instead of ' -- ' in the case where ' adVP ' and ' adVP ' be not
removed the canvas parameter from the insert method and related methods in TexturePacker . java to simplify the insert method signature and improve code readability
replaced the ` getVisitors ( ) ` method with a new ` apply ( Refactor < S , T > ) ` method in `
added methods ` getChildByName ` and ` getChildByNameRecursive ` to the ` Xml ` class to enhance functionality for retrieving child elements based on their
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of character
added ` @ SystemUiControllerFlags ` annotation and modified UI state management in ` SystemUiController ` and ` AllAppsTransitionController ` to
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline the code by eliminating unused variable
enhanced exception message in HiveRecordSet to include offset and length information to improve debugging by providing more context on the error encountered during Hive split
removed the ownerId field from NodeEntry class to streamline the code by eliminating unnecessary fields
corrected the spelling of " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " in multiple files to
added score calculation to the merge method in TextFragment to ensure that the score does not exceed the defined limits
removed the private Digester field from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added a validation check for the maximumUnimprovedStepCount property to ensure that maximumUnimprovedStepCount is non - negative
added a check to return early if there are no opened edits to optimize performance by avoiding unnecessary processing when no edits are opened
replaced instances of ` verify ` with ` Mockito . verify ` in ` BDDMockito ` and added new methods in ` B
updated the class loader reference from ` Thread . currentThread ( ) . getContextClassLoader ( ) ` to ` PathScanner . class . getContextClassLoader ( ) `
updated the ` sayHi2 ` method in ` CodeFirstPojoClient ` , ` CodeFirstPojoIntf ` , and `
initialize logger in AbstractSplitBrainProtectionTest to ensure proper logging during test execution
added null checks for logout configuration before adding filters in DefaultLoginPageConfigurer and ServerHttpSecurity classes to enhance robustness by preventing null
[ giac ] make sure giac do n ' t use degree [ 0 ] = = 0
added logging functionality to DockerComposeContainer and created a new test class DockerComposeLogConsumerTest to enhance logging capabilities and facilitate testing
updated method signature formatting in StandardJavaTypeMappingTest . java to improve code readability and maintain consistency
removed unused imports from AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to convert a ` Supplier < T
replaced a break statement with a return statement in ConsoleActivity . java to ensure the method returns a boolean value instead of a break statement
added support for handling Buffer body in VertxPlatformHttpSupport and created a test for text content type in VertxPlatformHttpEngineTest to
added methods to handle paths with platform - specific separators in MorePaths . java to ensure consistent path formatting across different operating systems
added a null check for authorizationContext . getParams ( ) before processing parameters to avoid potential NullPointerExceptions when processing parameters
replaced the method ` load ( ) ` with ` throwExceptionIfFail ( ) ` in ` NativeLibraries . java ` to improve error handling
updated SDK version from " 4611349 " to " 4514284 " and added new test cases for text to speech functionality to ensure
add ` ` transactionlogkey . equals ( ) ' ' and ` ` hashcode ( ) ' ' to ` ` transactionlogkey ' '
added a ` enableSqlWithoutProfile ` property and its getter / setter methods to ` JdbcEnvironmentProperties ` and ` JdbcEnvironmentRepository ` to
added a try - finally block around the write method in ConnectHandler . java to ensure resources are properly released to prevent memory leaks
use eventgenerator . fromfunction instead of cast to eventgenerator . fromfunction
updated the date variable from ` date ` to ` calendar ` in ` DateUtils . java ` and removed an assertion in ` FontParsersTest
updated method signatures in ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSetTest ` to include a new ` STACK _ TRACE _
added a ` prevTlogOnPrecommit ` field and updated ` postCommit ` method in ` UpdateLog . java ` , and modified
updated FastAsyncWorldEdit version from P2 - V6 to 1.17 in BukkitPlatform . java to ensure compatibility with the
added null check for output directory before creating it in SegmentGeneratorConfig . java to prevent potential NullPointerExceptions when the input path is null
added methods to calculate normal vectors in ObjUtils and refactored TriangulationHelper to use it to improve code readability and maintainability
updated JdbcAuditService to use IdentityZoneHolder for identity zone ID retrieval to ensure the correct identity zone is used when accessing the audit event
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future updates
added a null check for the getCurrSession in the authorization filter to avoid potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class for improved transaction handling to enhance performance and maintainability of transaction management
rename ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to improve
added a thread name to the current thread in TestSession . java to improve debugging by providing context about the thread being processed
refactor CookieManager class for improved cookie handling to enhance performance and maintainability of cookie management
simplified the return statement in LauncherExtension . java to improve code readability and maintainability
added a new OverviewToAllAppsTouchController to the list of OverviewToAllAppsTouchController to enhance user interaction with the launcher
updated the ` scaleHotseatWithWorkspace ` method to return a ` hotseatScaleAndTranslation ` array instead of a boolean value
added a check to exclude JUnitRule from stack trace filtering in DefaultStackTraceCleaner . java to ensure only relevant JUnit rules are processed
replaced instances of ` dstBuffer . hasArray ( ) ` with ` dstBuffer . isDirect ( ) ` and updated memory copying logic
refactor balance listener management in DepositListItem . java to improve clarity and maintainability of balance listener management
updated color conversion logic in RealisticRenderer to handle both STICKER and STICKER modes to ensure consistent color representation based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and corrected log instantiation in various test files to ensure proper handling of null values
remove patternutil . checkpattern ( ) from gl200protocoldecoder
added a time check for the last playback event time in FullDetailsActivity . java to ensure that the last playback time does not exceed a specified
SpanishXMLTreeReader . java : add a method to determine if a node is elliptic to determine if a tree is an el
added a condition to clear the dc if the value is empty in InstallItem . java to ensure that the item is cleared when no data is
updated the overrideScheme assignment logic in ReactiveLoadBalancerClientFilter and added a test for secure scheme in ReactiveLoadBalancerClientFilterTests to ensure correct scheme
replaced the duplicate of the byte buffer in the BatchDispatchRequest constructor to ensure proper handling of the byte buffer during batch dispatch requests
removed the ` final ` modifier from the ` fullFilePathFromClassName ` method in ` NativeImageDebugInfoProvider . java ` to allow for
refactor the return statement in ShadowBackupManagerTest from an anonymous class to a lambda expression to improve readability and reduce boilerplate code
corrected the spelling of " NonUS " to " EN " in JRELocaleProviderAdapter . java and LocaleDataMetaInfo -
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability and maintainability
add minecraftforgeclient to use textureprovider . overrideblocktexture ( ) .
added a return statement in TxCacheDB . java to ensure proper termination of the method
updated import statements from ` com . sun . xml . internal . ws . org ` to ` jdk . internal . org . objectweb
refactor FastDictionary class implementation to improve performance and maintainability of the code
do n ' t close the nio connection if it be already close .
updated the parameters for the FlightEvent instances in FlightEventsTest . java to use a new time value instead of a fixed value to
[ beam - 13434 ] update protobuf to v1p26p0 and v1p26p0 to ensure compatibility with the
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
update instructorfeedbackresultspagedata to use courseid instead of profileprofilelink
added short rules to DefaultPasswordValidator and introduced a new field for password length validation to enhance password validation flexibility and allow for more flexible
simonstewart : use a constant instead of a hardcoded value to improve code maintainability
added @ Test annotation to ProxyClassSerializationTest . java to enable test execution for the ProxyClassSerializationTest class
updated the argument format in DLNAMediaInfo . java from " scale " and " pad " to " thumbnailWidth " and "
remove speculativeguardmovementphase since it be no longer need .
added a condition to check for the presence of the AUTHENTICATION _ MANAGER bean definition in the AuthenticationManagerBeanDefinitionParser to ensure that
updated the handling of forwarded headers in ForwardedRequestCustomizer . java and added new test cases in ForwardedRequestCustomizerTest . java
set the length of the StringBuilder to 0 in ConsoleReader . java to ensure the StringBuilder is reset before processing
changed access modifiers of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists for better extensibility
update version numbers for manifest , spec , properties , and project properties to ensure compatibility with the latest features and improvements
hbase - 26462 add support for hbase . server . netty . tls . wrapsize config in nettyrpcserver (
updated multiple Java files including CookieStore , HttpURLPermission , Inet4Address , Inet6Address , InetAddress , ProtocolFamily , and URI to
updated FixedLengthTokenizerTests to use JUnit 4 annotations and added new test cases for tokenization with whitespace to improve test clarity and ensure
updated the protocol binding configuration in OpenSamlAuthenticationRequestFactory to allow dynamic configuration of SAML2 - related bindings based on SAML configuration
replaced direct calls to ` apply ( ) ` with ` applyTransactionOnDraw ( ) ` in ` DepthController . java ` to improve
updated version suffix from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility
change action from WRITE to CREATE in AccessController . java to change the action for prePrepareBulkLoad and preCleanupBulkLoad from WRITE to CREATE
simplified the subList method call in TsFileManagement . java and updated measurement ID in MergeTaskTest . java to improve code readability
camel - 16462 : camel - core - allow to convert file to inputstream in camel - core .
added a login method to DefaultShardManagerBuilder and modified DefaultShardManagerBuilder to conditionally call the login method to improve user experience by allowing
removed unnecessary whitespace in the DeleteGlobalRef call to improve code readability and maintain consistency
changed the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " in AbstractRegisteredService . java to
added a condition to check if the completion is marked before termination the response to ensure that the response is only processed if it is marked to avoid
updated the condition in FeedbackResponseCommentsLogic to include a check for isUserStudent before comparing the team to ensure that the response is only
added security checks for linked color profiles in BMPImageReader . java to ensure proper handling of linked color profiles to prevent issues with
updated the parameter order for setting simple cuboid in ClassicPlotManager . java to correct the logic for setting the cuboid to ensure
refactor the event handling in PMDOpenTool to use a Runnable for better responsiveness to improve responsiveness by ensuring the file
refactor gridPresenter initialization and size setting logic in StdGridFragment . java to improve code readability and maintainability by consolidating repetitive
changed return values from false to true in ContributionsListFragment . java to ensure that the method returns true instead of false
added a new test for the DISTINCT clause in ` DistinctPrefixFilterIT . java ` and modified ` BaseResultIterators . java `
pdfbox - 4071 : add unit test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide a way to retrieve the last modified
added a condition to check if the " metaTable " property is valid in HiveIcebergStorageHandler . java to ensure proper handling of
update cashdeposit form to use a combobox instead of a field
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all throwable types
added a new boolean variable ` mStartedEnterAnimation ` and modified animation notifications in ` IconRecentsView . java ` to manage animation state
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to facilitate the management of the active key ID
updated action labels and method names from " sendmail " to " sendMailWithAttachments " in SendMailActions . java to improve clarity
changed the visibility of the ` isActive ` variable from private to volatile to ensure thread - safe access to the ` isActive ` variable across multiple threads
[ issue # 1394 ] fix isdesc ( ) to be asc ( # 1394 )
pdfbox - 4892 : fix classcastexception for string . tostring ( )
added a check for the ownCloud app name in the date validation logic to ensure that the app ' s name matches the ownCloud ' s
hbase - 2594 masterfilesystem should set rootdir permission to 700 when security be enable .
change return value from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in JakartaServletWeb
refactor Instant class implementation to improve code readability and maintainability
changed the return type of ` getStateFormat ` from ` int ` to ` String ` and added a null check for ` DocCollection . STATE
removed the type variable from the logging statement in CentralAuthenticationServiceImpl . java and adjusted the conditional check in AbstractTicket . java to simplify
added support for IllegalArgumentException in PDICCBased . java to ensure proper handling of additional exception types
reformatted conditional statement in AbstractFileResourceSet . java for consistency to improve code readability and maintainability
[ mng - 7011 ] fix pluginparameterevaluator to align file path to base directory
[ beam - 1749 ] add protobufcoderregistrar so that it can be use by bigtable iotest ( # 2
updated JpaQueryParsingToken to include a boolean parameter and added a new test for signed numeric literals in HqlQueryRenderer to ensure that
updated the ` generateLaunchLugFromRASAeroRailGuide ` method to include ` parentLength ` and ` parentLength ` parameters
removed the getNonceFactory method from BitmexStreamingExchange to provide a non - synchronized implementation of the getNonceFactory method to simplify the
( chore ) camel - mail : use parameterized logging instead of string concatenation
[ java ] use default timer interval instead of configuration . getmtulength ( ) in driverconductortest
changed the default value of initializeLoadedClasses from true to false in ScanSpec . java to disable loading of loaded classes by default
added a call to ` searchField . grabFocus ( ) ` in ` FullTextSearchPanel . java ` to ensure the search field is
refactor SSL configuration to use a local variable for NIOParams to improve code readability and maintainability
removed the assert statement from the result set retrieval in StatementTest . java to simplify the test by eliminating unnecessary assertions
updated assertion message format in TestSolrConfigHandler . java to improve clarity of error messages for better debugging
updated imports and mocking in CsrfWebFilterTests to use ServerHttpRequest and ServerWebExchange instead of HttpMethod to improve test reliability
updated the handling of the density in FilterResourcesStep . java to include a check for NO _ QUALIFIER to improve the accuracy of drawable
added a new variable ` buttonUIID ` and refactored its usage in ` ComponentGroup . java ` to improve clarity and maintain
removed unnecessary density check in RecentsAnimationDeviceState . java to simplify the rotation check logic for better readability and maintainability
added two new files , TestArrayCopyArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , to
added import for LuceneTestCase and annotated the @ AwaitsFix annotation to indicate a known issue related to SOLR - 6157
fixed - rexecutorservice . schedule ( ) method throw npe if nextstarttime be null
simplified the condition for updating credentials in FileDownloader and FileUploader to improve code readability and maintainability by eliminating unnecessary
added null check for the scanner before closing it in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
updated method calls from ` get ( ) ` to ` getOrDefault ( ) ` in ` NetMetrics . java ` to use ` getOrDefault
added nonce parameter handling and verification in TokenMvcMockTests to ensure the correct nonce is retrieved from the claims map
refactor multiple chart editor classes for consistency and clarity to improve maintainability and readability of the codebase
added width and height settings for the formLayeredPane in Form . java to ensure proper layout of the layered pane when the form is
updated the maxY method in BrowserContentPane to return the maximum height based on the owner ' s height to ensure accurate height calculation based on the
modified the ` openDatabase ` and ` openSharedDatabase ` methods to return a boolean indicating success or failure to improve the handling of database connection
replaced direct usage of the DOCKER _ COMMAND constant with Platform . DOCKER _ COMMAND in DockerTestUtils and Platform classes to
added a null check for the input file before initializing parameters in TestIsartorValidationFromClasspath . java to improve robustness by preventing
updated drawing methods to include color parameters for better customization in Taskbar and Cell layouts to improve visual consistency by using theme - based colors for the folder leave - behind effect
report canary incompatibility if the plugin do not support android studio
server : fix npe in responseserializer when identityproxy table name be null
added modulePersistEnable and modulePersistDisable lists with corresponding getter and setter methods to enhance configuration options for module persistence changes
updated argument check from ` args # 1 ` to ` args [ 0 ] ` in ` GeminiMarketDataService . java `
replaced HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to ensure predictable iteration order for questions
add unit test for realm and response
removed specific jsp files from AuthCheckFilter . java to streamline filtering logic by eliminating unnecessary ones
refactor scheduling logic to use queue and queue runnable methods to improve code readability and maintainability by encapsulating runnable execution logic
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner classes to use varargs instead of String [ ] to improve flexibility
refactor character reading logic in XMLParser . java to return END _ TAG if the input is invalid to improve error handling by avoiding unnecessary
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address issues with overflow
updated arrow positioning logic in DeepShortcutsContainer . java to ensure proper positioning of the arrow based on icon state
remove printstacktrace on interruptedexecutionexception
modified the ` updateThumbnail ` method to include a ` refreshView ` parameter to enhance the functionality of the ` updateThumbnail ` method to accom
pdfbox - 4892 : remove dependency on org . apache . pdfbox . extractttffonts
added a new parameter to the InternetAddress constructor in EmailFormatSpecifier and modified the validation logic in HostnameFormatSpecifier to ensure that the InternetDomainName
removed unnecessary references to ` Activity . this ` in multiple activity classes to simplify code and improve readability by eliminating unnecessary dependencies
refactor ` MatchEntireSegmentDocIdSetBlock ` and ` SizeBasedDocIdIterator ` to use ` _ currentDocId `
updated the ` promptToOpenFile ` method to accept an additional ` String ` parameter and modified its logic in ` FileDialoger `
updated widget span settings and added a method to update page counts in AppsCustomizePagedView . java and AppsCustomizeTab
refactor FlightConfiguration to utilize InstanceMap for processing rocket components and adjust bounding box updates to improve performance and accuracy of flight component
camel - micrometer : use ` ` direct : ' ' instead of ` ` seda : ' '
updated DateTimeFormatter to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 4892 ] add support for filter metadata in dspaceobjectconverter
added a new test method ` testMissingRequired ` to ` StarTreeConfig ` for missing required configurations to ensure that the builder correctly handles
camel - 16462 : camel - spring - dsl - add support for dynamic recipient list in frombuilder
refactor InlineLayoutBox . java and HoverListener . java to improve repaint handling and control flow to enhance performance and maintainability of layout
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsService ` and introduced a new ` OperationsService ` class for managing authentication methods to enhance
