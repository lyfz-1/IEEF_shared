refactor SocketAppender initialization to use setRemoteHost and setPort methods instead of constructor parameters to improve clarity and encapsulation of socket configuration
refactor header handling in BasicAuthPlugin to use a more concise approach to improve code readability and maintainability
replaced RecordDescriptor with msgLength in ManyToOneRingBuffer . java to ensure consistency in message length retrieval
server : fix npe in capacitymanagerimpl when vm . detail . cpu . overcommit . ratio be null
added flags handling in ShadowPaint and updated tests for anti - aliasing behavior to improve flexibility in painting behavior and ensure correctness of
updated the title of the MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content
test : disable detection test for eclipse project
added a check for non - empty nonce in ` Realm . java ` and modified authentication scheme handling in ` NettyAsyncHttpProvider .
added a new interface ` RemoteInputListener ` and modified ` RemoteInput ` to handle socket connection events to provide a mechanism for notifying when
refactor conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
added a condition to check if the device is enabled before processing the handler to ensure that the handler only processes enabled devices to avoid potential errors
added null check before removing and adding policies in AuthorizeAdminServlet to prevent potential NullPointerExceptions when bs is null
refactor assertions in tests to use ` matches ` instead of ` isEqualTo ` for Java 9 compatibility to improve readability and maintainability of
added JSON parsing and logging for DAG information in TezTask . java to enhance debugging capabilities by providing detailed context and description information
added methods to retrieve heap time and updated time retrieval logic in ComputedSummary . java and HprofHeap . java to improve accuracy of heap
replaced RxJava2Tasks with CommonsApplication for retrieving upload count and removed RxJava2Tasks class to streamline the upload count retrieval process and
remove check for db . ismultithreaded ( ) and db . ismvstore ( ) in mvtable . update ( )
[ rip - 8 ] fix commitlog do n ' t work correctly when offset size be small than max offset size . ( # 8
added logging for folder information when the associated folder is not open to improve visibility of folder information when the associated folder is not open
added a test method to verify that PGProperty names are sorted in ascending order to ensure that PGProperty names are correctly sorted in the expected order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a
updated method signatures and variable types from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` to improve type safety
updated the assertion from ` hasMessage ` to ` getMessage ` in ` RequestBuilderTest . java ` to improve clarity and accuracy of error message
refactor NearbyActivity to use NearbyListFragment instead of direct NearbyMapFragment to improve clarity and maintainability
rename parameter ' status ' to ' sessionStatus ' in FlatProfileContainerFree constructor to improve clarity by using a more descriptive variable name
added a boolean field ` sendZeroAnomalyEmail ` and its getter / setter in ` EmailConfiguration ` , and updated ` EmailReportJob
[ hotfix ] [ kafka ] fix npe in flinkkafkaconsumerbase when deserializationschema be open
added methods to retrieve user and geofence data from the DataManager class to enhance data retrieval capabilities for users and geofences
added a constructor to BlockingResponseListener that accepts a maximum length parameter to enhance flexibility in response handling by allowing larger request sizes
[ java ] refactored memberbroadcastsreceived to accept a byte [ ] instead of an array of channeldata .
[ java ] fix resource leak in multileaderserverimpl
updated URL assertions in LoginSAMLAuthenticationFailureHandlerTest . java to remove trailing slashes to ensure consistency in URL formatting for better readability
updated test cases in ConfigMetadataProviderTest . java to improve test coverage and ensure accurate configuration handling
updated import statements in ListFragment . java and modified the parameter name in SnoozeActivity . java to improve code clarity and ensure
added a private static class ` AcceptAllFilter ` and refactored directory stream filtering logic to improve code readability and maintainability by central
[ hotfix ] [ test ] fix typo in jdbctestdataset javadoc
added ` throws ClassNotFoundException ` to the ` lookupType ` method in ` CompilerToVM ` and ` CompilerToVMCIRuntime ` , and
added DockerImageName and DockerImageNameTest classes to validate Docker image names to ensure valid Docker image names are provided to avoid runtime errors
updated login error messages to reflect incorrect credentials instead of username and password to improve user experience by providing clearer feedback on authentication failures
added ` setAutofocus ( " autofocus " ) . setAutofocus ( " autofocus " ) ` to multiple form classes
added unit tests for SamlConfig and IdentityZone properties in SamlIDPRefreshMockMvcTests . java to ensure correct handling of SAML
added logic to handle empty and non - digit lists in ComparableVersion . java and created a new test case in ComparableVersionTest . java to
replaced topLeftMode and bottomRightMode settings with bottomRightMode and updated return values to include dimensions to ensure dimensions do not exceed available
changed the package of ParallelUniverse from ` org . robolectric . android ` to ` org . robolectric . internal
updated method type handling in LocalCacheFactory and NodeFactory to use a constant FACTORY _ CALL to improve code readability and maintainability by
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in the FrillsAndFills class to improve the
added functionality to draw self loops in the ProcessingPreview class to enhance visual representation of graph edges and self loops
rename ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOLIDITY _
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` class to improve clarity and consistency in method naming
set the Y - coordinate of the drag handle indicator to zero in AllAppsTransitionController . java to ensure proper positioning of the drag handle
removed logging statements for collection , community , and item in CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging for better
updated the documentation for pushing predicates down in the operator tree to clarify the conditions under which filters are applied during query optimization
added an assumption to skip tests on non - OSX build servers to ensure that the test only runs on non - OSX environments
added Maven bundles for jetty - alpn - java - client and jetty - alpn - client in TestJettyOSGi
act - 712 : fix npe in executionmanager . updateprocessinstancelocktime ( )
refactor Transaction class to improve transaction management to enhance performance and maintainability of transaction processing
replaced ` @ CustomFieldBehavior ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to clar
simonstewart : make firefox ' s profile launcher work on window
added a check to prevent duplicate entries in the colFamToDynamicColumnsMapping map to ensure that the mapping is only added if it does
[ hotfix ] [ runtime ] make field serializable in hadoopTupleunwrappingiterator
added logic to handle cases where the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and view type is not MAP
fix nullpointerexception when delete instructor
updated import statements in AllXSSFTests . java to use the correct TestCellReference class to ensure compatibility with the latest Apache POI
fix mana piston not respect hardness . close # 148
added a new file ` LongPointerPressTest3049 . java ` for testing long pointer press functionality in the Codename One framework
[ gr - 16536 ] remove redundant check for trufflefunctioninlining .
refactor null checks in BaseBuilder and XMLConfigBuilder for better readability to enhance code clarity and reduce boilerplate code
simplified the indent condition in ListBlockParser and added a new test for deeply indentation in SpecialInputTest to improve code clarity
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve code reusability and
ignore test due to http : / / github . com / spring - cloud / spring - cloud - gateway / issues / 1070
[ wasm ] remove unnecessary native method declaration in testcaselogger . java
updated RouteStartupOrderLastTest . java file formatting to improve code readability and maintain consistency
added a condition to check if the media format is video before executing web subtitle configuration to ensure that subtitle functionality only occurs for video formats
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing TLS algorithms from being used
do n ' t start vm in zone zone when vm be in zone zone
updated cache entry retrieval and logging statements in Driver . java and QueryResultsCache . java to improve logging clarity and provide more informative output
added a ` skipModelUpdate ` option to the ` ManageDependencies ` class and updated related methods to allow users to optionally skip updating the dependency
added a test for sending an intent with a request code in ShadowActivityTest . java to ensure correct handling of PendingIntent requests in the activity
updated GLJPanel and GLCanvas initialization and modified rendering hints handling in RocketFigure3d . java to improve rendering performance and ensure
added synchronization to the controllerListeners list in HydrawiseAccountHandler to ensure thread safety when modifying the list
added a static method ` beforeClass ` to ` TestCoreAdminApis ` to skip tests that do not support EasyMock with Java 9
updated year retrieval in TimestampUtils and added local time formatting in SetObject310Test to ensure accurate year representation and improve readability of local
fix possible nullpointerexception when disconnect a jabber account .
updated SQL commit identifier in TxnHandler . java to include additional commit ID to enhance clarity and maintain consistency in transaction handling
replace ByteChunk with ByteBuffer in BufferedInputFilter . java to improve memory management and handle potential buffer overflow exceptions
added a new method ` toSync ` to ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to facilit
added ActionGraphBuilder import and updated method signatures in various compiler factory classes to utilize ActionGraphBuilder for improved build rule management
danielwagnerhall : add test for hidden file input in uploads
removed unnecessary import of java . util . Date in SQLManager . java to streamline code by eliminating unnecessary dependencies
added a check to return the local Maven directory if the file does not exist to ensure the method returns the correct Maven directory if the file does
ggb - 1359 hide ` ` hidden ' ' algebra label in ca
fix ( core ) : fix npe in ctelementimpl # getmetadata ( string , object )
use buffer . addflag ( ) instead of buffer . setflags ( ) in defaulttrackoutput
do n ' t reorder entity by id if it ' s sort by id
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) " to cl
added null check for backupFolder before logging to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the behavior of ` Array . newInstance ` with ` void ` parameters
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler . java and GccCompiler . java to ensure the Tool
replace hardcoded timeout value with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by using a defined constant
polish ` ` enable sampling of prometheus meter registry test ' '
removed the @ Ignore annotation from multiple test classes to enable tests that require a MongoDB server for execution
resolve http : / / issues . apache . org / activemq / browse / amq - 2882 - fix test case that
updated the condition to check if the mdTable is artifical instead of checking if it starts with an empty string to improve clarity and
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty checks for session attributes in MongoSessionManager . java to improve robustness by handling cases where no attributes are present and avoid
use setsizefromlayout ( ) instead of setfixedsize ( ) in camersurfaceview
refactor stop handling in AbstractConnector to use a local CountDownLatch variable to improve code readability and prevent potential null pointer exceptions
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
( chore ) camel - core : use system . currenttimemillis ( ) instead of custom stopwatch
replaced ` doOnError ( exceptions : : add ) ` with ` subscribe ( item ) ` in ` DelayedMonoPublisherTest .
updated error handling in WebsocketTest to check for WebSocketHandshakeException to improve clarity in error reporting for unexpected WebSocket handshake exceptions
refactored AllAppsTransitionController to implement View . OnLayoutChangeListener directly to improve code readability and maintainability by reducing anonymous inner
refactor variable names from ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability
added support for the " default - output - channel " attribute in the XPathRouterParser and its corresponding tests to enable configuration of the default output
updated cacheSeconds from an integer to a DurationCapable string in MessageBundleProperties . java and modified cacheSeconds setting in CasCoreWebConfiguration
updated OpenAPI version from " openapi : 3.0 . 0 - rc1 " to " openapi : 3.0 . 0
removed the append method call from ByteBufferPool . java to streamline the buffer handling process
added a check for the presence of " alt - rt . jar " in the boot class path and skipped tests if it is detected to avoid
updated user deletion queries and email addresses in JdbcScimUserProvisioningTests . java to ensure consistency in user identification and improve clarity in test
updated FlightRecorderProfiler to use a dynamic options list instead of a static array to improve flexibility in specifying flight recording options based on Java
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to condition
added a condition to check if ` _ contentView . hasContent ( ) ` in ` HttpParser . java ` and implemented a test for
updated AtmosEndpoint . java for improved functionality to enhance performance and maintainability of the code
added conditions to check for " printf " , " print " , and " print " in Java2TypeScriptAdapter . java to ensure proper
added a new file ` TestCapacityUntilGCWrapAround . java ` and modified ` WhiteBox . java ` to include native methods for managing
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
removed conditional check for stamped at start in SamplingStatCalculator to simplify the calculation logic for better performance
added unit test base on user forum issue
do n ' t throw iioexception in case of bad icc _ profile chunk number
fix terra shatterer and terraform rod not be able to reequip .
removed configuration and environment bindings from JoobyModule and added a check to ignore entries in SpringModule to optimize bean registration by avoiding
use container . getparentclassloader ( ) instead of use the current thread . getcontextclassloader ( )
allow nameupdater to be add to the meta - inf / resources folder . jmeter . nameupdater . properties
fix a bug in the ellipsoidregionselector that could lead to a race condition .
updated URLs from HTTP to HTTPS in JavaSEPort . java and added a default protocol constant in JavaSEPort . java to enhance security by
[ geos - 7012 ] validate sortby attribute in getfeature request to avoid npe
replaced ` equals ` with ` null ` for ` grantor ` assignment in ` AbstractJdbc2DatabaseMetaData . java ` to improve code
added graphics configuration and updated image handling in DiagramGenerationTest . java to improve image rendering accuracy and ensure compatibility with different graphics configurations
improve error message in fmlcommonhandler when sideddelegate be null
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
fix flaky test : locktest # testlocked ( ) should wait for lock to be acquire .
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenization and joining strings to enhance string manipulation capabilities
use response . senderror ( 404 ) instead of response . status ( 404 )
refactor command handling and highlighting logic in SystemHighlighter . java to improve clarity and functionality of command processing
updated version to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to reflect the current development status and
update buffer position calculation to use dimensionSize instead of idx to ensure correct buffer positioning based on dimension size
added functionality to check if drag and drop is ready and updated related classes to utilize it to improve drag state management and facilitate
log4j2 - 1349 fix socketappendersocketoptionstest on java 7
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to the TestCipher class to support additional
updated description retrieval from getDescription ( ) to getLongDescription ( ) in NearbyMapFragment . java to ensure the correct description is displayed for
added JSON property annotation to ScimGroupMember . java to enable proper serialization and deserialization of the ScimGroupMember object
refactor HqlQueryRenderer to utilize JpaQueryParsingToken for reserved words and add schema scoping support to enhance query parsing capabilities
updated the parameter name from " d " to " s " in the requireNonNull method to improve clarity by using a more descriptive variable name
refactor Parser class to improve code readability to enhance maintainability and facilitate future feature additions
modified the ` offsetStreamIndex ` method to include an additional parameter for index starts at one to enhance functionality by allowing dynamic adjustment of the index
tika - 794 correct little16 mime magic logic , and enable the cpio test now that the detection be correct
[ hotfix ] [ table - planner - blink ] remove superfluous getmonotonicity method from flinksqloperat
added equals , hashCode , and toString methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison , hashing , and string representation
added a condition to check if mLaunchedAssistant is false when flinging to ensure that the action only occurs when the assistant is
added a new file ` SolarisShortDSA . java ` for generating and verifying DSA private keys to address a specific bug
added toggleSearchLabel method call to ListFragment . java to control the visibility of the search label in the UI
cloudstack - 5396 : fix npe while create snapshot in case the volume be not lock
refactor ` FileDetailActivity ` to use a new ` DetailsServiceConnection ` class and update the ` mConnection ` variable to improve connection
refactor exception handling in HttpClientTLSTest to use AtomicReference instead of Throwable to improve clarity and ensure proper assertion of SSLPeerUn
removed the equals method from the ConjunctionScorer class to streamline the code by eliminating unnecessary functionality
added a null check for the variable ' v ' in the bindItems method and logged an error message if it is null to improve error handling
add random wait for leader election to be able to remove a member from the raft group
updated cache size checks and added timing logging for cache shrinking to 90% in DefaultCache . java to improve cache management and provide better visibility
updated API version from " / api / v2 " to " / api / v3 " and modified account handling logic in multiple classes to
added a method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the freenect
added null checks for page data in AsyncPageReader and updated test annotations in TestEmptyParquet and TestDrillParquetReader to enhance
updated argument validation and subscription type handling in SerumStreamingService . java and added support for accountSubscribe in the buildChannelName method to improve
add a config option to disable the animation when an item be charging on top of a mana pool .
[ java ] clean up aeroncluster . connect ( ) to avoid deadlock .
improve logging of interruptedexception in waitforhelper
replaced conditional checks for directory creation with assumptions in DefaultServletTest . java to ensure tests are only executed when FileSystem supports question directories
removed duplicate style injection calls in ResourcesInjectorFull . java to streamline the code for better readability and maintainability
replaced ` String ` with ` FileResource ` for file handling in ` BaseLiquibaseTask ` and ` DBDocTask `
updated method calls in BlockWorldVector to use getter methods to improve code readability and maintainability
updated LongConcurrentLRUMap . java to remove unnecessary comments and changed the CacheEntry class to be final to improve code clarity and enforce im
replace singleElement ( args ) with a regex to quote the literal in the resourceConfiguration to enhance the flexibility of the resource configuration by allowing
modified the method for retrieving the KRB5CCNAME environment variable and updated the command - line argument handling in the EmptyCC class to improve
updated the database path in ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract
set default fast sync minimum peer count to ` ` 1 ' ' for ibft and ethserver ( # 1193 )
danielwagnerhall : fix checkstyle issue in java / awt / logging / webdriverservlet . java
do n ' t expand " areequal [ segment [ x , y ] , segment [ x , w ] " format expression
added a condition to clear pending rendering operations if it exceeds 20000 and the implementation is minimized to improve performance by reducing unnecessary rendering operations
fix hazelcasttestsupport # sleepmillis to not call sleepmillis twice
fix for continuously update key in write - behind queue ( # 11938 )
set the icon of the JLabel to null in GroupTreeCellRenderer to improve visual clarity by removing unnecessary space
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between default and non - strict redirects to improve test clarity and ensure correct behavior
updated ShutdownMonitor and ShutdownMonitorTest to use Jetty ' s IO utility and improved test cases to enhance resource management and ensure proper functionality
adjusted the calculation of ` moveSize ` and modified chunk fill rate logic in ` RandomAccessStore . java ` to improve memory management and
refactor field retrieval and serialization error messages for clarity to improve code readability and maintainability
[ hotfix ] [ core ] move componentclosingutils to runtime . operators . coordination
server : destroy vm volume when vm fail to start
server : fix npe when vlan . ip _ range be not set
rename ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` and update references accordingly to improve clarity and consistency
updated the leader retry timeout from 15 seconds to 30 seconds in CollectionsAPIDistributedZkTest . java to allow more time for leader
added logging functionality to AbstractParam and simplified error message formatting across multiple classes to enhance debugging capabilities and improve error message clarity
update drawing coordinates in URLImage . java to use negative coordinates to ensure correct rendering of images with negative coordinates
update field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
simplified the check for high card dimension in setFunDef . java to improve code readability and maintainability
[ hotfix ] [ runtime ] add cause to streamtaskexception in streamconfig
refactor number expansion logic in Preprocess . java to improve clarity and efficiency to enhance readability and maintainability of the code
reformatted the read method in MessagePack . java for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a way to define
do n ' t encode empty extension list in jsonparser when fhircomment = true ( # 3995 )
updated string splitting in ` Library . java ` and modified artifact handling in ` LibraryManager . java ` and ` LibraryManager . java ` to
added an alias " node _ popup / node _ popup _ scripting " to the entryNavigator in ScriptingMenuEntryVisitor . java to
updated constants and logic in OverviewActionsView , RecentsView , and OverviewActionsView classes to improve task visibility handling and enhance
camel - 16400 : camel - jms producer should use camel . getout ( jmsmessage class ) instead of camel . getout (
corrected spacing in method declarations across multiple Java files to improve code readability and maintain consistency
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove outdated code to streamline the codebase
changed ` __ content ` , ` __ contentETag ` , and ` __ contentETagGzip ` to be ` static final ` and added a
replaced ` getAndAdd ( n ) ` with ` getAndAddRequest ( consumerCapacity , n ) ` in ` OnSubscribeRedo .
added logging functionality and improved code formatting in SpeedmentImpl . java to enhance debugging capabilities and maintain consistency in formatting
[ ds - 3752 ] add dspace . oai . config to load configuration from servlet . xml
hbase - 20510 make sure we do n ' t throw exception when scan over a region that do n ' t match
camel - 16462 : camel - test should use jmx only for component that support it .
replace hardcoded ' / ' with a constant ' CANONICAL _ PACKAGE _ SEPARATOR ' in SourceLineAnnotation . java to improve maintainability
added methods to find YARN application and application ID in HiveConf , RemoteSparkJobMonitor , and SparkJobStatus classes to improve configuration handling
added support for " maria " database type in DbConnectionManager to ensure compatibility with both MySQL and Maria databases
[ hotfix ] fix checkstyle violation in master / splitlogmanager
added a new file ExecuteAndReturnStringTest . java to implement a test for executing and returning strings in a Codename One application to
added a new file ` InvokespecialInterface . java ` that implements an interface and demonstrates its invocation to demonstrate
fix typo find by codespell on fossies . org
use encodingmanager . setencodingmanager ( ) instead of encodingmanager . setturncosts ( ) for turncosts support
added a check for backgroundDisabled and a validation for selection in SelectBox . java to ensure that selection is non - negative when backgroundDisabled is
added a null check for the md parameter in RpcServer . java to throw an exception when the method name is not provided
updated hotseat cell size and icon center calculations in TaskbarViewController . java to improve layout responsiveness by accounting for border
updated the way partition names are retrieved in ExpressionTree . java to improve clarity and efficiency of partition name handling
fix serialization of namedtaskdecorator and taskdefinition for version 4.1
updated the directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
updated the ` equal ` variable in ` DisplayModeTest . java ` from ` false ` to ` true ` and modified the comparison logic to
added a check for non - BMP codepoints and updated formatting logic in UnicodeToLatexFormatter to ensure proper handling of Unicode characters and
added null and space handling for ISO control characters in OAIDCCrosswalk and Item classes to ensure proper formatting of ISO control characters in
simonstewart : fix a bug in the selenium backed selenium implementation
added a clear button to the DataBrowser and modified its logic in StringSearchPanel , BookmarksPanel , and DataBrowser classes to enhance user
refactor base URL generation in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for better URL handling to improve code readability and maintainability
refactor date handling in SoftAssertionsTest to use parseDatetime instead of java . sql . Date to improve clarity and maintainability of
updated the adaptOrders method to include a reverse parameter for order adaptation to enhance flexibility in order adaptation based on whether the order is
delombok should print ` ` var ' ' instead of ` ` var ' '
simonstewart : fix checkstyle issue in selenium - backed webdriver
updated Configuration initialization to set default value to false and removed conditional logging for overriding Hadoop configuration properties
changed method call from ` drawChildren ` to ` draw ` in ` WidgetGroup . java ` to streamline the drawing process for improved
added unit test base on user forum issue
replaced usage of System . getProperty ( Globals . CATALINA _ BASE _ PROP ) with context . getCatalinaBase (
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified ` ShadowICU ` to handle locale
updated the hashmap size from 4 to 16 and modified the object ' s style to include additional information about color codes to enhance the visual representation
added ZuulProperties to the TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enable configuration of Zu
tika - 3558 -- add test for date metadata in fontparsers
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include a build time parameter to enhance
updated the calculation of ` xDist ` to use ` Math . abs ( ) ` instead of ` mScroller . getCurrX (
remove guirwtester . java which be no longer need .
removed ` @ NullableDecl ` annotations from constructor and method parameters in ` LazyMessage ` , ` StandardSubjectBuilder ` , and ` CustomFailure
updated error message format in TestStream . java to include a placeholder to improve clarity of error messages for better debugging
move thymeleaf . templateparser and thymeleaf . templateparser to org . thymeleaf . templateparser . markup
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated XPath evaluation in ` XPathTest . java `
added Nullable annotation to FutureUtils . java to indicate that the variable may be null to enhance code clarity and prevent potential NullPointerExceptions
add warn if invokedynamic be not resolve during call graph construction .
updated email addresses in ContextTest . java from " my fake email @ gmail . com " to " my real email @ example . com
updated HTTP response format from " 400 " to " 200 " in HttpConnectionTest . java and modified URI comparison in URIUtil . java to
added ` getColumnDataType ` method implementation in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way
add default implementation of serviceclientconfiguration ( ) to client interface ( # 3995 )
refactor HSSFPictureData class to improve data handling to enhance performance and maintainability of the code
use java . time . instant instead of system . currenttimemillis ( )
added version handling for MediaInfoLib and updated debug logging in LibMediaInfoParser . java to ensure compatibility with different MediaInfoLib versions and
added proxy creation logic for IdeaDependency instances in ProjectReader . java to enhance flexibility in managing dependency types within the project
added a new file ` SerialHeap . java ` and updated ` CollectedHeapName . java ` and ` Universe . java ` to
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson . Types . java file to suppress serialization warnings for these classes
add mouseposition to mousewheelevent to allow mouse wheel to be send tooltips
updated MongoQueryCreator to handle null parameters and added a new test for the ` findByFirstnameIgnoreCase ` method to improve robustness of the
[ hotfix ] [ table - common ] add multisettypeinfo to maptypeinfo
added ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to enhance functionality
pdfbox - 4892 : allow poor whitespace in cmap file , a suggest by valerybokov
refactor ContactsBackupJob to utilize a ServiceConnection for managing file expiration and unbinding to improve service management and ensure proper cleanup of
refactor type handling in ` Attr . java ` and add new classes ` T6938454a . java ` and ` T69384
added is _ account _ config _ hidden property and a method to check if the account be config hidden .
added a check to ensure the number of supported display displays matches the number of supported bounds to improve error handling and provide clearer diagnostics for display
replaced ` SchemaUtil . getSchemaName ( ) ` with ` schema . getSchemaKey ( ) ` in ` PMetaDataImpl . java `
move passive login callback to a separate list to improve code readability and maintainability
added a new file Box2DTest . java and modified GDXTester . java and Box2DTest . java to include Box2
fix typo in tostring ( ) . patch by jbellis
[ hotfix ] [ runtime ] set default buffer request timeout to 5 minute
doc : generate sample code in the java microgenerator ( # 174 )
added a help button to the OpenOffice panel to enhance user experience by providing quick access to the help page
[ java ] change channel option to child option in netty acceptor and server ( # 1193 )
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceTradeService to use wildcard generics to improve type safety and
refactor class loading logic in ScanResultObject to use a transient class reference to improve efficiency and maintainability by reducing redundant class name retrieval
refactor connection handling in DecodeServlet . java for improved clarity and error handling to enhance code readability and maintainability while ensuring proper
added null handling support to Querydsl and created a new integration test class to enhance null handling functionality and ensure proper integration testing
added null check for actor in ParallelAction and SequenceAction classes to ensure actions are only processed when actor is not null
refactor : fix checkstyle violation in cttypetest . java ( # 3649 )
added synchronization to the iteration over sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new file ` Issue888 _ JavaI . java ` implementing interfaces and classes implementing ` JJ ` and ` JK `
added functionality to revoke existing agent certificates and updated related imports in CertificateManager . java and CertGenerationTest . java to enhance certificate management by allowing
added a set to exclude 204 responses from HTTP / 1.1 responses in the AbstractHttpTest class to ensure that the server correctly handles responses
added error handling for script engine loading and language retrieval in ScriptTransformer . java to improve error reporting for unsupported Java versions and provide clearer diagnostics
updated connection pooling type in HiveConf and added Hikari configurations in TxnHandler and TestTxnHandlerNegative to enhance connection management capabilities and
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to
added file lock and unlock functionality in FileMenuFilter and OCFileListFragment to enhance user experience by allowing users to toggle file lock / unlock
updated versioning logic in mmm Version . java and ppp Version . java to ensure compatibility with the latest features and fixes
clear endpoint cache when update keyspace
refactor waiting logic in Locks . java to use a new waitForState method to improve code readability and maintainability by reducing duplication
updated the getCoercedAttrValues method to accept a ImmutableMap < BuildTarget , ProviderInfoCollection > instead of a Map < String , Object
danielwagnerhall : move localstorage and sessionstorage into a common interface
fix nullpointerexception when create or replace view
change exception handling from catching Exception to catching Throwable in SegmentGenerationJobRunner . java to improve error handling by capturing all types of exceptions
updated query string retrieval logic in SpellCheckComponent . java to ensure a default value is used when the query string is not set
added validation for header values to ensure only valid carriage return and LF characters are processed to enhance error handling and maintain data integrity during header processing
replace instanceSize with arrayBaseOffset in HybridLayout . java and add afterFieldsOffset in HostedInstanceClass . java to improve cl
make abstractapexcommentcontainernode . setcontainscomment ( ) public and mark it a experimental
hhh - 510 - log warn for association with ` fetch = ` join ` and ` lazy = ' true ' ' a fetchtype
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions to verify database and table names in TestCompactionTxnHandler . java and updated TxnHandler . java to set database and table names
camel - 7017 : timer component - add suspendable interface to timer consumer . thanks to daniel for the patch .
added a condition to check if the block is processed before adding it to the traces list to ensure that only valid traces are added to the work
updated the null check in ProviderManager to use CollectionUtils for checking providers to improve code clarity and prevent potential NullPointerExceptions when checking for null elements
simplified the logic for determining if the database is an instance of PostgresDatabase to enhance code readability and maintainability by reducing
added queries and assertions for local index functionality in LocalIndexIT . java and modified limit handling in BaseScannerRegionObserver . java to improve query
add validation to prevent adding a collection with the same name and type in the past to ensure data integrity by preventing operations on collections with the
updated cursor positioning logic in VDUBuffer . java and modified cursor handling in vt320 . java to improve cursor positioning accuracy and ensure
added a constant USE _ RETRIES with a value of " useRetries " in HttpShardHandlerFactory . java to allow configuration of retry
updated the VERSION _ NUMBER regex pattern in JavaVersion . java and added a test for it in TestJavaVersion . java to ensure accurate version
[ hotfix ] [ stream ] skip stream task execution if there be no input gate
resolve intermittent failure of testreceivingmessagesourceparser
added a null check for properties before accessing its value to avoid potential NullPointerException when properties is null
updated the exception handling in FileSystemBlobStrategy to set the cause of the IOException to improve error reporting by providing the original cause of the IOException
updated the error message from " rolling upgrade to fail " to " stack upgrade to fail " in multiple Java files to clarify that the
added a TxConfidenceListener instance and removed it from the walletService if it is not null to ensure that the listener is properly managed and
added a constant G1 _ PERM _ GEN and updated the JmxSupport class to include a new constant G1 _ PERM
removed unused imports and simplified return statements in NearbyController . java to improve code clarity and reduce unnecessary dependencies
pdfbox - 4892 : make class public , a suggest by valerybokov
updated conditions in BaseSwipeUpHandlerV2 to filter home activity type to enhance task handling logic by excluding home activities from certain
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and consistency
updated method names and return values in ShadowTelephonyManagerTest . java and ShadowTelephonyManager . java to improve clarity and
updated the unfreezeAmount setting in UnfreezeBalanceV2Actuator . java to ensure the unfreeze amount reflects the actual unfreeze
rename ` ` minute ' ' to ` ` match ' ' for clarity
danielwagnerhall : use fileutils . copydirectory instead of file . copy in firefoxprofile
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability
refactor Observable class to improve code readability to enhance maintainability and reduce complexity
refactor ` pushAll ` method to utilize ` addMultiFieldOperation ` for better handling of multiple fields in MongoDB updates to improve code
added a null check for ` randomUUID ` before setting it in ` MockHubService . java ` to ensure that ` randomUUID ` is
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve hover event processing for better user experience
added a delay for sleeping when zkRun is not available and confDir is null to improve responsiveness by avoiding unnecessary execution when
camel - 16400 : camel - netty - http - optimize the configuration of maxheaderssize and maxheaderssize .
increased the default retry number from 5 to 15 in HBaseTestingClusterAutoStarter . java to increase the reliability of HBase client
updated file path construction in SourceSnippetHelper . java to improve clarity and consistency in file path handling
make encoded graph cache test more resilient to failure .
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added functionality to adapt currency metadata for Kraken assets to ensure accurate currency representation for asset types in the KrakenAdapters class
added a ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test ` to
updated variable names and improved email subject assignment logic in AlertTaskRunnerV2 . java to enhance code readability and ensure proper handling of
[ influxdb ] warn about miss setting in influxdb publisher
rename methods from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in naming conventions
updated address filtering logic in NetUtils . java and added a method to check for unique local addresses to enhance address validation and improve code readability
refactor column name handling in DataTextFormatter to use a dedicated method to improve code readability and maintainability by encapsulating column name quoting
added methods for setting , getting , and setting properties in WrapSystem . java and modified method names in StrUtils . java to enhance functionality and
added a constructor to the UpdateRequest class that initializes the superclass with a POST request to ensure proper handling of POST requests in the application
changed enum declaration from static to non - static in ProtoTypeAdapter . java to allow access to EnumSerialization from other classes
added a method to handle experimental format warnings in the RequestHandlerUtils to inform users that the response format is likely to change in the future
updated JmsUtil to format module names and added a new format method to improve readability of module names in debug logs
bug fix : add a method to get the default label font in uitools
removed unnecessary parameters from the ` notifyBrokerInActive ` and ` onBrokerHeartbeat ` methods in ` DefaultBrokerHeartbeatManager . java ` to
added handling for meanPartitionSize , partitionCount , and splitCount in CqlInputFormat . java to ensure proper calculation of splitCount when
simplified the condition for checking if a test is an instance of JUnit4 _ CLASS _ NAME to improve code readability and maintain
[ drools - 7 ] implement equal ( ) and hashcode ( ) for ruleterminalnodelefttuple
added StageIDsRearranger to handle stage ID range configuration in TezCompiler to enable dynamic adjustment of stage IDs based on configuration settings
move messagingservice mbean to org . apache . cassandra . net
refactor memory consumption logic in LotsOfOutput . java to improve clarity and maintainability of memory management checks
added import statements for ` org . apache . lucene . document . Document ` and ` org . apache . lucene . index . facet
updated LdapAutoConfiguration and LdapProperties classes to improve handling of anonymous read - only configurations to enhance flexibility in LDAP configuration by allowing users to
refactor DatabaseMetaData class to improve code structure to enhance maintainability and readability of the code
changed the visibility of the EchoInputDoFn class from public to private to enhance encapsulation and restrict access to the class
added a new method ` finishMocking ` to ` MockitoSession ` and implemented it in ` DefaultMockitoSession ` to handle mock
removed extraDeps from the parameters in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to streamline dependency
renamed buffer and handler variables in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve clarity and functionality of buffer
fix liquid wrapper to use getlowingblock ( ) instead of getstaticblock ( )
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use Uri instead of a hardcoded background class to improve flexibility
fix javadoc typo in apr
[ hotfix ] [ cli ] add support for streaming plan in cli frontend
use computeifabsent in craftingmanager . shapedrecipes . computeifabsent ( ) to improve code readability
[ flink - 21761 ] [ test ] add some time for the test to complete the checkpoint
simplified whitespace checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a pattern matching for " pg _ temp _ * " in NeuteredLinesFilter . java to enhance filtering capabilities for temporary database files
chore : update java microgenerator to 1.0 . 1 ( # 4382 )
updated the ` liquibaseDataType ` initialization to handle both " INTERVAL " and " NCLOB " data types to ensure correct
[ wavefront ] add histogram metric if we ' re publish it
updated ` ShenyuClientRegisterSpringCloudServiceImpl . java ` and ` DivideUpstreamUtils . java ` to include
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of sensor listeners with specified rate and max latency
added socket exception handling in ` testFullMethod ` , ` testFullURI ` , and ` testFullHeader ` methods in ` SelectChannel
camel - 16400 : camel - ignite - karaf integration test now work with apache ignite 1.5 . 0
added a check for zero or empty sets in AbstractClient . java and updated the logic for determining if the result set is reaching the end
pdfbox - 2852 : do n ' t swallow unsupportedflavorexception , a suggest by valerybokov
added tests for HDR capabilities functionality in ShadowDisplayTest . java and exception handling in ShadowDisplay . java to ensure proper functionality and error handling
added a finally block to reset classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leak
updated error messages in SemanticAnalyzer for clarity and added a toString method in SemiJoinHint to improve debugging information and provide more informative
added a default constructor to the Message class to ensure proper instantiation of Message objects
change priority of serializable idiom to low for non - awt component .
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo as a parameter and improved decimal value conversion to enhance flexibility in handling decimal
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` and added a conditional check for response content encoding to improve
rename variable ` WWWAuthenticate ` to ` authenticateHeader ` for clarity to improve code readability and maintainability by using more descriptive
removed conditional checks for specific directory names in DCD . java to streamline directory validation logic for better compatibility
updated ThreadLeakTest to use a helper method for retrieving the thread group name to improve code readability and maintainability by encapsulating thread
added logging functionality to MethodInvocationPrivilegeEvaluator for improved debugging to enhance traceability and debugging capabilities during method invocation
changed the package of DmozParser from org . apache . nutch . crawl to org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to utilize Lombok
kvm : add iso to vm when migrate a vm to iso
refactor signal handling logic in SigInt . java and update test method name in SigIntTest . java to improve clarity and ensure proper
replaced the static ` isEmpty ` method with an instance of ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code read
add spring boot auto configuration to axonautoconfigurationwithspringcloudtest
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and maintainability
planningentityselector : remove unused planningentitydescriptor . uninitialize , deprecate planningentitydescriptor . setresetinitializedplanningentities
updated TwoLevelArtifactCacheDecorator , ManifestRuleKeyManager , and CachingBuildRuleBuilder to include build time and build time to enhance artifact
updated the way ` aggrPositions ` is initialized and modified the handling of ` agg . getFields ( ) ` and ` numEntriesHashTable
added a null check before adding a block appearance to prevent potential NullPointerExceptions when the block is null
added support for the new currency " CNC / BTC " in the BTCEUtils and CurrencyPair classes to support trading functionality
updated the skewAllowance value from 5 to 15 and modified related logic in multiple classes to allow for dynamic adjustment of skew allowance based on
updated sorting options in SongListActivity and Utils to use SortName instead of null to enhance sorting functionality for improved user experience
added a method to read a request body byte to ensure proper handling of HTTP request bodies
introduce legacybaseblockwrapper for backwards compatibility
refactor IcebergBranchExec to check for the existence of a tag before retrieving the snapshot ID to improve error handling and provide clearer
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to improve code readability and reduce
fix ( demo ) : fix miss field in physonmappingdemo
updated password change validation logic in IdentityProviderEndpoints . java and added logging for unsupported operations in IdentityProviderEndpointsMockMvcTests . java to ensure
added a removal of notInitializedInConstructors in UnreadFields . java to ensure that notInitializedInConstructors are not initialized when reflective
updated error handling in JdbcExecutor to differentiate between closed and non - closed connections to improve error reporting and provide clearer context for SQL execution
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate the presence of user data and name
updated regex patterns for user and password patterns in CredentialInjector . java and modified SQL query parameters in CredentialInjectorTest . java to improve accuracy of
added a new menu item " Item4 " and a key binding for the ' Enter ' key in ActionListenerCalledTwiceTest . java to
updated print statements and assertions in TestCoreParser . java to include class name and query type to improve clarity of test output and ensure accurate
updated comparison logic in SimpleNode . java to use ' id ' instead of ' children ' to ensure accurate comparison of node relationships
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the PopulatorContextStackItem class
updated the handling of document counts in MoreLikeThis . java and added a new test method in TestMoreLikeThis . java to improve accuracy
refactor event triggering logic in QuestManager . java for clarity to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend from testlogger
modified the query to append additional parameters for the ' $ lt ' and ' $ gt ' fields to enhance query functionality by ensuring the index is
added a native method ` unsafeGetLong ` to the ` CustomizedUnsafeLoadMacroNode ` class to facilitate the retrieval of
updated time zone reference from " Asia / Amman " from ARAST to EET across multiple language files to reflect the current time
updated the id value from 90000010 to 90000011 in DeprecationLogger . java to correct the logging identifier for better traceability
hhh - 14836 - handle jdbcexception when rollbackonly be true .
fix downloadexternalfile . getextension ( ) to return ` ` / ' ' instead of ` ` no extension ' '
bug fix : do not use the menu bar on macosx
add test for piecewise integration in ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a modWhiteListPattern to HiveConf and implemented a test for modifying the Hive metastore URI in TestJdbcWithSQLAuthorization to
fix : remove uneccessary mark - as - illegal - class ... this be mostly to trigger a rebuild
updated the method to use the player ' s team instead of the team ' s sharded to ensure the correct team is referenced in the game
updated cookie domain assignment to use domainHelper instead of hardcoded " comp1 " to enhance flexibility in domain handling for cookie creation
added validation logic for nullable columns and tables in various change generator classes to ensure proper handling of nullable columns and improve data integrity
refactor multiple Java classes related to security token handling to improve code organization and maintainability across the security token services
added functionality to delete a document and add it to a collection in CustomCollectionTest . java and made several variables static final in CompositeIdRouter
added support for snapshotting of bytea types in ` ExecutablePreparedStatementBase ` and introduced a test for blob types in ` PostgreSQLIntegrationTest `
updated conditional checks for cache and cache size in DefaultServlet . java to ensure proper validation of cache settings and improve code readability
added drag and drop functionality for bib and library tabs ( # 3640 )
updated method names and assertions in ` ExecutionUnitRunner ` , ` CucumberTest ` , and ` ExecutionUnitRunnerTest ` to improve
replaced ` isEmpty ( ) ` checks with ` StringUtils . isNotEmpty ( ) ` for ` myVersion ` and ` buildTimeString ` to
changed access modifiers of methods in TimeUtils from public to package - private to restrict access to these methods for better encapsulation
set jdk . reflect . useDirectMethodHandle to false in System . java and refactor security frame checking logic in RefectionMHTests
updated the file extension check for JPEG files in PreviewImageFragment . java to ensure consistency in file type validation
[ gr - 16536 ] fix native - image debug info for hosted method .
added getIcon ( ) method to multiple Data classes and updated classDisplayed in DataTableTopComponent to utilize icons for better visual representation and enhance
refactor substring logic in CounterRequestAggregation . java to handle potential null pointer exceptions to improve code robustness and prevent potential NullPointerExceptions
updated string replacement logic in FindAndReplace . java and added a test for dollarsignsTolerated in FindAndReplaceTest . java
do n ' t cast to xmppconnection if we ca n ' t connect to the remote server .
refactor SchemaExtractionProcessor to improve code readability to enhance maintainability and facilitate future feature additions
added a new method ` copyDir ` to ` IO ` and refactored ` copyContents ` in ` SpecWebAppTest ` to
added error handling for unknown datum classes in JacksonUtils to improve robustness by throwing an exception for unknown datum types
refactor DefaultJavaLibraryBuilder to utilize HasJavaAbi for obtaining class and source ABI jars to improve code readability and
simplified height calculation for itemHeight and backgroundPadding in SelectBox . java to improve code readability and maintainability by eliminating
added normalization of database and table names in ObjectStore . java to ensure consistent handling of database and table names
added support for Oracle database type in DbSqlSession . java to ensure correct schema handling for Oracle databases
removed unnecessary logout implementation in HomeFragment . java to streamline code by eliminating unnecessary logout logic
[ hotfix ] [ test ] fix flaky test
fix npe in fastimportaction when no type be find
updated logic in ContainerLifeCycle to use a boolean variable for bean management status to improve readability and maintainability of the code
rename iexecutionattributesdialect to iexecutionattributedialect for clarity
added a call to clearUnsafe ( ) in AlterTest . java to ensure metadata is reset before tests run
added null check for the location object before retrieving its properties to avoid potential NullPointerExceptions when loc is null
added null checks for measurement and introduced a new DisruptorQueueExceptionHandler for better error handling to improve robustness by preventing null pointer exceptions
deleted the Session2Token . java file to remove unused class to streamline the codebase
cloudstack - 6892 : remove volume from storage pool if volume deletion fails
added an Install class to SystemShortcut and integrated it within the PopupDataProvider and InstantAppResolver classes to enhance functionality by allowing users to install
added a NullAuthoritiesPopulator class and updated LdapAuthenticationProvider to use it to provide a default role retrieval when no authorities are provided
updated the method for retrieving the retrolambda jar path and added a fallback mechanism for fallback to a default version if the retrolambda jar
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to streamline the camera building process
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and modified its implementation to improve performance and
pdfbox - 4892 : fix nullpointerexception in jmepathextractor
added null and length checks for user authorities in AuthorizeTag . java to ensure that an empty list is returned when no authorities are provided
updated assertions in test classes to use ` next ( ) ` method instead of ` DateTimeUtils . dateOf ( ) ` to simplify code read
cloudstack - 5396 : vm snapshot with memory be not support for vgpu enabled vms ( # 5397 )
updated the configuration handling in ` RobolectricTestRunner ` to support both method and class configurations to enhance flexibility in configuring tests
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to improve connection handling for improved performance
added partial partition key comparison logic in HiveAlterHandler and improved test cases in TestHiveMetaStore to enhance partition key validation and ensure
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to control the visibility of icons in
updated formatting of the conditional statement in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback for deploying and undeploying handlers to simplify callback management and improve error handling efficiency
added workspace listener functionality to the PreviewControllerImpl class to enable graph updates based on workspace state changes
added a check for anonymous classes in ReflectionFactory and modified class name handling in ReflectUtil to improve handling of anonymous classes and ensure accurate class name
refactor TransportHelper to improve code structure to enhance maintainability and readability of the code
added import statement for ResourceLoader and modified string concatenation syntax in CatalinaAcegiUserRealm . java to improve resource loading functionality and
updated log messages for initializing and starting the ActionManager in AmbariServer . java to clarify the purpose of the server and
added null checks and assertions for init and modify nodes in JSONWriter . java to enhance robustness and prevent potential NullPointerExceptions
updated the ` run ` method to accept a ` FileSystem ` parameter and modified user context handling in ` SliderAppsViewControllerImpl ` to
added a check to ensure backgroundManager is not attached before attaching it to prevent potential NullPointerExceptions when the activity is not attached
updated tab management in AllAppsTabbed , Launcher , PagedView , and Workspace classes , and adjusted newY calculation in Workspace to
added null check for the URL parameter in BaseDataSource and implemented a test for a typo in SimpleDataSourceTest to ensure that a valid URL
updated PebbleModuleTest . java to enable tests on both Java 8 and Java 12 versions to ensure compatibility with newer Java features and improve
added EditNameDialogListener to handle directory creation and upload to improve user experience by allowing dynamic directory creation based on user input
added ` actionToggleBarBorders ` case handling in multiple activities to set bar border width to ensure chart updates correctly when bar borders are togg
updated SSL URI and host in OkCoinExchange . java from " okcoin . com " to " okex . com " to reflect the
jbrules - 2249 : fix fail test by set deciderscorecomparator on stepscope
replaced ` FileChannel ` with ` SeekableByteChannel ` for input stream handling to improve performance and resource management by using a more efficient
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter for improved clarity to enhance code read
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
reordered conditional checks for serialization types in SerializationConfigurationParser . java to improve readability and maintainability of the code
added support for setting watch heap limit on debug devices in QuickstepProcessInitializer to improve performance during development on debug devices
replaced direct calls to ` t ` with a variable ` val ` for summation operations to improve code readability and maintainability by
log4j2 - 1349 fix test that fail due to miss constraint
reformatted code for better readability in PrecompactedRow . java to improve code clarity and maintainability
updated rendering intent return value and modified color conversion logic in ICC _ Profile and ColorConvertOp classes , and added a new test class for
add meterregistrylifecycle bean to enable auto - configuration of meterregistry
[ 3.0 ] reduce log level for config center not find exception
added error handling for certificate generation in CertificateFactoryTest . java to ensure that the test cases validate the expected behavior of the generateCertificate method
camel - 16400 : simple language : allow ambiguous binary operator to be parse .
removed unnecessary checks in ` onTabUnselected ` method and added ` onFocusChanged ` method in ` IDEEditor ` to streamline
updated error logging to include the user ' s name in AccessLogValve . java to improve error reporting by providing more context about the failure
updated scaling factors and improved null checks in SkeletonModelGpuSkinningTest , OgreXmlLoader , and SkeletonModelViewer
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that the methods are outdated and should not be used in new code
added support for generating declarations in JSweet transpilation to enhance the transpilation process by allowing users to specify the output directory for generated
[ flink - 20536 ] [ table - planner - blink ] set default fetch timeout to 600
add html tag to the streamingdataflowworker ' s javadocs .
increased the maximum number of metastore server threads from 100 , 000 to 1000 to allow more threads for the metastore server
changed the return type of ` onTaskSnapshotChanged ` from void to boolean to indicate whether the snapshot was changed
update shadow radius variable from mMaxShadowRadius to shadowRadius to ensure the correct shadow radius is applied during animations
test : add test for chain nest and aggregation
updated loop condition from ' limit ' to ' end ' and added failure handling in MarketSellAssetActuatorTest . java to improve
do n ' t run polyglot context if the source be interactive .
update conditional logic in CreateKeytabFilesServerAction . java to handle cases where previousCachedFilePath is null or equal to cachedKeytabFilePath
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instantiation to enhance functionality by integrating display management capabilities
updated ` toolTipText ` assignment logic in ` MetalFileChooserUI ` and ` SynthFileChooserUIImpl ` to ensure tooltip
replace ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize ( )
changed the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > in Tensorflow
updated JPASQLBase . java to include new methods for persisting entities and removing entities , and added new test cases for fetching results
updated drag index logic in FreeformFinSetConfig . java to ensure correct positioning of points during drag operations
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to incorporate the latest features
corrected a typo in the error message and added a call to spend all gas to improve clarity of error reporting and ensure all gas
update error message formatting in ` ElementsShouldSatisfy ` and ` ZippedElementsShouldSatisfy ` classes to include an additional newline
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should not be used in new code
refactored registration logic in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to use a dedicated method to improve code readability and
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancer
changed mCenterPagesVertically to mCenterPagesVertically in AppsCustomizePagedView . java to adjust page centering behavior
updated the call to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure proper handling of migration processing
renamed constants and variables related to IP address and callback URI in KonnectedBindingConstants , KonnectedUPnPServer
updated the attribute value type from Object to List < Object > in WSFederationClaimsReleasePolicy . java and added assertions in WSFederation
updated database handling and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to ensure compatibility with
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate parsing and deparsing of CASE expressions
added a new method ` startCopyMode ( ) ` and modified the copy mode logic in ` ConsoleActivity . java ` to improve copy mode
updated import statements and modified the writeXmlOutput method to use a Writer for XML output to improve XML output handling and ensure proper resource management
camel - 7017 : fixed npe in abstractlistaggregationstrategy when exchange be null .
( chore ) camel - core : replace camelhelper in favor of camelexchangeexception
move basicconfigurator to ` ` classic ' ' package , not ` ` logback ' '
remove assertion from typeQualifierDataflowAnalysis . java and add a condition to check if targetVN has a PHI _ NODE flag to
removed unused import of SharedStringSource from TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with specified trace information
renamed multiple classes related to box and whisker calculations and histogram bin to improve clarity and maintainability of the codebase
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
changed the ` NormUpdate ` class to be static and updated equality checks to use ` equals ( ) ` instead of ` = = ` to
changed the access modifier of the IndexFileNameFilter class and its constructor from public to private to enhance encapsulation and restrict instantiation of the class
refactor test cases in IfStatementTest to utilize plugin definition and test expression creation to improve code clarity and maintainability by reducing
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
removed the static factory method ` nullSafe ` from the ` TypeAdapter ` class and simplified its usage in ` StreamingTypeAdaptersTest ` to
updated the expected size of the BundledDistributionTest from 12 to 13 to reflect the correct expected value for distribution tests
added EXIFReader class and updated ImageProcessingService to utilize it to enhance image processing capabilities for ExIF files
change default return value of toStandardUnit method from UNKNOWN _ TO _ SDK _ VERSION to NONE to ensure consistent behavior when the unit is unknown
[ kie - issues # 399 ] add support for pmml 2.0 ( # 399 )
improve error message for repeat countercurrencytransferstartdexception in fluentprotocol
added a check to return early if the bubble bar visibility is not visible to optimize performance by avoiding unnecessary processing when the bubble bar is not
[ gr - 16536 ] reset the conservative label range when aarch64 backend fail to emit the code .
added a try - finally block to ensure initPending is reset in JDKXRLogger . java and implemented a concurrent initialization test in XR
added a ` find ` method to ` TicketCatalog ` and modified ticket retrieval logic in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry
updated string concatenation syntax in TestSSL . java for improved readability to enhance code clarity and maintainability
[ hotfix ] [ table ] fix race condition in sort _ merge _ result _ partition
http : / / issues . apache . org / activemq / browse / amq - 2638 - fix jmsio read /
updated query methods to include type and sort parameters for plugin handles to enhance functionality by allowing retrieval of plugin handles by their type and sort
updated span creation to use start ( ) instead of start ( ) in DefaultSpanCreator . java and SleuthAdvisorConfig . java to
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableStencilFormat properties to IOSApplication
refactored login attempt logic into a separate method and added a test for user lockout after failure attempts to improve code readability and ensure
fix ( pytorch ) : disable real ( ) and complex ( ) in jniutils
refactor thread handling in SynchronizationStatistics . java to use a do - while loop instead of an if condition to improve robustness by ensuring
updated implementation details in Implements . java and ShadowPicker . java to improve code clarity and maintainability
refactor HttpClientOptions initialization to use a dedicated method for creating HTTP / 2 client options to improve code readability and maintainability by encapsulating
updated the condition to check for both StructType and DynamicArray classes and improved error handling in SolidityFunctionWrapper to enhance type safety
updated method calls to include " true " for " text - align " , " font - size " , and " font - size " to
added constructor overloads for CopyStep and a test for shell command internal path in CopyStepTest to enhance flexibility in handling shell command paths
fixed - rsemaphore . acquire ( ) and rsemaphore . addpermits ( ) method throw illegalargumentexception
camel - 16462 : camel - core - optimize to reduce stack frame in use during test .
added ` FlavorParser ` and ` FlavorParserTest ` classes and updated ` BuildTargetParser ` and ` BuildTargetParser ` to
changed List < String > to List < ByteString > in WitnessScheduleStore . java and updated related methods to use ByteString instead of String to
added a check for non - empty resultsMeta before printing them in TestElementsAnnotatedWith . java to avoid unnecessary output when resultsMeta is empty
refactor condition checks in ConcurrentLinkedQueue and add a new RemoveLeak class for testing to improve code clarity and facilitate
added a boolean parameter ` addSpecialTokens ` to several methods in ` HuggingFaceTokenizer ` and ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] replace ArrayList with Collections . nCopies in taskmanagerservicesconfiguration
update data size handling for chunk data in LoadSingleTsFileNode . java to ensure correct data size is used for chunk processing
added session storage context key and associated actions in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to enhance session management
add a test to verify that the jspx schema validation work
added a default constructor to the TypeAdapter class and updated the @ Ignore annotation in Java17RecordTest and ReflectionAccessTest to clarify
repl : do n ' t kill the truffle debugger if it be already kill
rename AntPathRequestMatcher class to improve clarity and consistency in naming conventions
refactored method signature of createrequestresourcepolicy to remove unused parameter
added null check before releasing _ deflaterEntry in GzipHttpOutputInterceptor . java and improved assertions in BlockingTest . java to enhance
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup after each test execution
remove unknown unicode character 65533 from checksum calculation to ensure consistent formatting and avoid issues with unknown unicode characters
refactor command handling to improve null safety and code clarity to enhance robustness and maintainability of command execution logic
add miss @ override annotation and make keylistener final in basicprofilerstate . java
changed the type of ` objectToSave ` to ` dbDoc ` in ` MongoTemplate . java ` and added a new test for JSON
added a method to handle multiple remote addresses in the RequestUtils class and updated the RequestUtilsTest to test this functionality to ensure correct parsing of
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` and updated related method calls to improve type safety and
updated CookieManagerTest and UnmodifiableMaps to use a static method for obtaining the local host address and improved connection handling to enhance code
added whitespace wrapping logic in GlyphLayout . java and modified text formatting in BitmapFontTest . java to ensure proper handling of wrapped runs and improve
[ hotfix ] [ pulsar ] add support for pause / resume split in pulsar split reader
added a new configuration variable HIVESCRIPTIDENVVAR in HiveConf . java and updated ScriptOperator . java to utilize it to improve
refactor getListedTermCounts method to improve term count retrieval based on sorting parameters to enhance performance by optimizing the retrieval of term counts based
added a new file ` UseSeparateStepSizeAction . java ` to implement a menu option for using separate step sizes to provide users with
updated FileMenuFilter to use AccountManager and FileLockingHelper for file unlocking and modified variable visibility to improve code clarity and ensure
replaced LinkedList with ArrayList and updated regionServer retrieval logic in RoundRobinTableInputFormat . java and TestTableSplit . java to improve
update HTTP header values from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapter
pdfbox - 4892 : use ioutils . closequietly instead of try to close subdoc
added fullscreen mode functionality and viewport handling in GwtGraphics . java and updated GwtApplication . java to utilize fullscreen functionality to
updated WebfingerIssuerService to use URI instead of String for issuers and parameter names , and modified the normalizeResource method to handle URIs
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration properties for the Apache Dubbo
updated file path handling in SkinLoader . java to use resolve ( ) instead of Gdx . files . internal ( fileName ) to improve
updated logging levels from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to provide more detailed logging
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` for ` REALTIME _ LOCK ` in multiple files
updated package declaration in Compiler . java to ensure consistency in package structure
fix a bug in the nullderefandredundantcomparisonfinder that cause it to fail if the method do n ' t have any catch
update dashrendererbuilder to use defaulthttpdatasource instead of stringcontentid
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and its getter method
changed the return type of the set method from WritableConfig to Configuration in multiple configuration classes to align with the updated configuration handling standards
removed the checkErr method from AutoScalingHandler . java to streamline error handling for command payload errors
refactor CombinedDataset class to improve code structure to enhance maintainability and readability of the code
updated variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code clarity
remove javax . crypto . cryptographypermission from the list of restriction
fix nether portal not be spawn if the player be cancel
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to verify the functionality of
added a null check for ` vContext ` before assigning it to ` vectorizationContexts ` to avoid potential NullPointerExceptions when ` vContext `
fix wialon speed issue ( fix # 3868 )
hbase - 16400 disable metric user aggregation by default ( addendum )
added a ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
updated the ` mUserPresent ` , ` mVisible ` , and ` mAttached ` variables in the ` Launcher ` class to ensure
refactor multiple HTTP request and response classes for consistency to improve code maintainability and readability
add params to zadd ( ) call to make zadd ( ) work .
[ ds - 3752 ] fix checkstyle issue in ` ` integration / common ' ' module
rename testasyncmessages to testasyncmessagesperformance because gc delays can introduce false failure
added functionality to retrieve an optional node from a build target in ` VersionedTargetGraphBuilder ` and implemented tests in ` VersionPropagatorBuilder `
updated epoch threshold constants in TimeZoneProvider . java to improve accuracy of time zone validation logic
updated the return value of ` field _ pictureData . length + 4 ` to ` field _ pictureData . length HEADER _ SIZE ` and
updated the initialization of row and column variables in JSONParser . java to correct the logic for parsing JSON data
replaced usage of ` ShallowClass . build ( fullyQualifiedTypeName ) ` with ` StringUtils . aspectjNameToPattern ( fullyQualifiedTypeName
updated the detail thumbnail height and added functionality to play trailers in BaseItemDetailsFragment to enhance user experience by allowing users to play trailers
added a method to remove glyph information from the native struct pointer in CStrike . java and removed it from StrikeCache . java to
fix : delete process instance end event when terminate all process instance
camel - 16462 : camel - xml - bind - allow to use the name of a type annotated with @ jaxbrootelement .
updated the valid endpoint in SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html "
add ` ` prdef ' ' option to reset all preference to default value
changed access modifiers of several methods and variables from private to protected in ThriftMetrics , ThriftServer , and ThriftMetrics classes to allow subclasses to access
removed deprecated channel references from the DanfossAirUnitHandler to streamline the code and encourage users to use the latest channel
use hamcrest assertion instead of junit in tests / integration / http : / / github . com / hazelcast / hazelcast
removed redundant code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null and equality checks in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to enhance object comparison and hashing functionality for PartImpl instances
server : set disk size to root disk when vm fail to start
added preferences for showing suggested apps in the drawer based on user preferences to enhance user experience by dynamically hiding prediction visibility based on user preferences
[ geos - 7011 ] bbox creation fail with bad request if the bbox cr be invalid
added validation methods for value , position , and Merkle tree depth in LibrustzcashParam . java to ensure parameters are valid and
mark ithrowableentity a deprecate in favor of move to fml . cpw . cpw . cpw . common . registry
added randomness to the x and y values in NodeDataImpl to improve the variability of node positioning in the application
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ to
refactor variable initialization in JavacStep . java to use try - with - resources for better resource management to improve code readability and
update version number from 0.9 . 1 to 0.9 . 2 in mmm Version . java and ppp Version . java to
added a condition to check for deep shortcuts in LoaderCursor to ensure proper handling of deep shortcuts in the application
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for instances of TimeGranularitySpec
changed access modifiers of ` BooleanWeight ` and ` DisjunctionMaxWeight ` classes from private to protected to allow subclasses to access these classes and
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to enable support for transparent NTLM proxy
fix aarch64 macro in aarch64 move .
server : do n ' t take into account reserve capacity when start vm
added a condition to check if ` docs . getMaxScore ( ) ` is not null before including the score in ` JSONResponseWriter . java
updated the audio codec from 22050 to 44100 in the AudioRecorderTest . java file to adjust audio recording parameters for improved performance
updated calculation of newOriginX in RocketFigure . java to correctly account for subject dimensions to ensure accurate positioning of rocket figure
added a check for an empty dataSource in DruidQueryBasedInputFormat . java and updated interval initialization in DruidQueryBasedInputFormat .
added a new property ` ORIGINAL _ TYPE ` to the ` CustomProperty ` class and updated pattern matching in ` CustomPropertyTest `
added a static method ` create ` to create an instance of ` IndexImpl ` using a ` Table ` and a ` Map < String ,
simplified the return statement by eliminating an unnecessary variable to improve code readability and maintainability
updated SchemaCompatibility to include an index parameter and modified related tests to enhance compatibility checks and improve test coverage for schema incompatibility scenarios
added support for handling entity paths in QueryUtils and updated test cases accordingly to improve the accuracy of entity path comparisons and enhance test coverage
added synchronization to methods in TestSpanHandler to ensure thread safety during concurrent access to the spans list
changed the return type of the ` getText ` method from ` List < Object > ` to ` List < ? > ` across multiple classes to
updated exception handling in ViewContextImpl . java to differentiate between InvocationTargetException and other exceptions to improve error logging clarity and provide more informative
updated OAuth2AccessTokenEntity . java for improved access token handling to enhance security and maintainability of the access token management
updated error messages in SCBEngine and TestSCBEngine to clarify request rejection status to improve user understanding of request handling
resolve # 3866 correctly by add the launch image to robovm , and moe
replaced the import of ArrayList and ArrayList with ConcurrentMergeScheduler in TestSearcherManager . java to enable concurrent merge functionality for improved performance
updated conditional check in QTestUtil . java and improved list handling in GenericUDTFInline . java to enhance null safety and ensure
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ggb - 1353 prevent click on the spreadsheet key ( e . g . click on the spreadsheet button )
hhh - 10663 : fix leak in osgi bundle . stop ( )
update timeout calculation in HikariPool . java to use connectionTimeout instead of elapsedTimeMs to improve accuracy of connection timeout handling
move non - packaged resource to src / non - packaged - resources
updated file path handling to use ` File . separatorChar ` instead of ` url . getFile ( ) ` to improve compatibility across different operating systems
changed the return type of the row ( ) method from Cell < T > to void to improve clarity by indicating that the method is intended
[ besu ] add check to prevent port clash in besucommand
added a null mask feature to the WebSocketClient class and updated the connection initialization to allow dynamic configuration of WebSocket masking behavior
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a ` Rel
added tracking of node selection statistics for bucketed preferred and non - preferred nodes in NodeScheduler and TopologyAwareNodeSelector classes to improve monitoring and
added a new class named Person in the org . apache . maven . it0001 package to provide a way to store and retrieve the name of
added a boolean variable ` hasOwnerPtr ` and modified the ` execute ` method to check its value to improve the logic for determining if the
added Roboto Light font and updated clock functionality in PlaybackOverlayFragment to enhance user experience by providing a smoother and smoother
remove redundant call to markdirty ( ) in the updatecomparatoroutputlevel call .
changed the IMPL variable from final to non - final and modified the exception handling message to improve flexibility in loading SegmentReader classes and enhance
added SwingUtilities . invokeLater to execute cell updates on the Event Dispatch Thread to ensure UI updates occur on the Event Dispatch Thread for thread safety
replaced ` DefaultInetAddressAdapter ` with ` CollectionTypeAdapter ` and updated method signatures to use ` Class < T > ` instead
added methods for handling double , long , boolean , and string values in the Series class and corresponding tests in DataFrameTest to improve error handling and
changed the option from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java
updated boundary checks in GeoRelationUtils and modified GeoRect construction in GeoUtils to improve accuracy of coordinate comparisons and enhance polygon query accuracy
server : fix npe in listvirtualmachines api when service offering id be null
added JUnit cleanup methods to HazelcastTest to ensure all Hazelcast instances are properly shut down after tests
added tests for AES / specific algorithms in BlockCipherTest . java to ensure proper exception handling for unsupported algorithms
added filters for logging operations in QFileClient . java to improve visibility of operations for debugging purposes
fix issue with inject parent and child interface in aop . fix # 3990
fix issue # 241 , set currentconnectionaddress to proxySocketAddress if it be null .
replaced manual addition of demand with MathUtils . cappedAdd in WebSocketConnection . java to simplify code and improve readability by using a
refactor image output stream handling to use try - with - resources for better resource management to improve code safety and ensure proper cleanup of temporary files
refactored search functionality across multiple fragments to use direct calls to ` SearchActivity ` and ` PlaybackManager ` to improve code clarity
removed the ` this ` keyword from ` schemaCrawlerOptions ` in ` SchemaCrawlerCommandLine . java ` and modified the ` toString ( ) `
fix for http : / / issues . apache . org / activemq / browse / amq - 2638 - add osgi
added dependency injection for PersonRepository in RepositoryIndexCreationIntegrationTests to ensure proper dependency injection for testing purposes
updated exception type from Exception to InterruptedException in UIServer . java and corrected log message formatting in TestVertxUIManual . java to
added new cactus block types to the BlockCactus class to enhance cactus functionality by supporting additional cactus types
refactor mouse handling code into a separate method for better readability to improve code maintainability and reduce duplication
added a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` and refactored existing imports in ` AbstractMinMulticast
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance functionality by
change exception handling to throw specific exception instead of generic exception
added a condition to check if the query context is distinct and modified aggregation logic to handle distinct queries to improve query performance by avoiding unnecessary aggregation
[ gr - 38686 ] provide a way to find native linkage by name and descriptor .
rename ` ` textfield . properties ' ' to ` ` textfield . properties ' '
added a null check for children before iterating through its elements to prevent potential NullPointerException when children is null
added token position and current position tracking in MessagePackParser . java and updated tests in MessagePackParserTest . java to enhance parsing functionality and
added locale management to the AbstractSolrMorphlineTestBase class to ensure consistent locale settings during tests
simplified size calculation in LauncherFragment . java to improve code readability and maintainability
add unit tests for the MetricsReporter class to ensure proper functionality and error handling of metric registration methods
( chore ) camel - osgi : cleanup unused variable and unused import
implement equals and hashCode methods in the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
[ hotfix ] [ test ] fix flaky test in streamkafkaptest
updated DSAParameterGenerator to handle non - constant values for prime sizes and replaced hardcoded values with constants to improve code clarity and ensure
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and refactored related methods to utilize it to improve
fix clientoutofmemoryhandlertest by wait for client to be shutdown
added a new method ` getCmoObjectId ` in multiple shape classes and updated the ` setObjectId ` method to use it to improve object ID
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of a distinct query
refactor multiple Java files related to traditional functionality to improve code organization and maintainability
fix : remove bindextensionadapter and unbindextensionadapter from managedKubernetesClient
updated subtitle and body display logic in DetailsDescriptionPresenter . java and added a new utility method in Utils . java to improve subtitle formatting and enhance
updated JUnit imports and annotations from ` @ Before ` and ` @ After ` to ` @ BeforeEach ` and ` @ AfterEach `
do n ' t swallow exception when generate summary html
simplified the reset method calls for intPool and bytePool to improve code readability and reduce unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to improve code clarity and ensure proper method overriding
added a new ` WindowSessionDelegateU ` class and modified the ` apiLevel ` check in ` ShadowWindowManagerGlobal . java ` to
updated URL handling logic to correctly append scheme host and port based on request scheme to ensure correct URL generation for non - standard schemes in requests
added support for MSSQLDatabase in the foreign key constraint logic to ensure proper handling of foreign key constraints across different database types
hbase - 26958 fix checkstyle violation in hbase - replication
add side check event handler for emzuli pipe , fixes # 2640
simonstewart : make htmlidentifier logging configurable
replaced ` getProducedTableSchema ( ) ` with ` getTableSchema ( ) ` in ` HiveLookupTableSource . java ` and
clarify usage of setthrowwhenwhenusingwrongthread in listenerset .
updated schema handling in SequenceSnapshotGenerator . java to utilize CatalogAndSchema for improved schema customization to enhance compatibility with Liquib
updated color handling in SpriteBatch , SpriteCache , and LwjglDebugStarter to use AlphaTest instead of Progressive
fixed - redissonconnection . tocompletablefuture ( ) . join ( ) method return incorrect result . # 3640
added logic to check if the base core is not the same URL before adding it to statisticYearCores to ensure that only valid Solr cores are
updated method signatures in TaskActionController and TaskAdapter to accept non - null parameters and improved task launching functionality to enhance code clarity
updated import statements and modified constructor parameters in MorfologikFilter . java for better clarity and functionality to enhance code readability and
updated sorting options in GridFragment to include " community _ rating " and " critic _ rating " to improve clarity and consistency in sorting
added imports for ViewKt and ListRow , and implemented visibility logic for header view holder in CustomListRowPresenter to enhance UI respons
replace switch - case structure with try - finally block in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future development
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure compatibility with DB2 database
added support for jsr310 ` ` java . time ' ' module in standardjavaserializer
updated log4j MDC import from Apache to SLF4J in LogUtils . java to ensure compatibility with SLF4J logging
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintainability
added a method to get build target lists in ` BuckConfig ` and updated ` ProjectCommand ` and ` ProjectCommand ` to conditionally
added a call to System . gc ( ) for garbage collection of the idle strategy to ensure proper resource management and avoid potential memory leaks
updated ` OCFile ` and related classes to use ` ContentResolver ` instead of ` ContentProvider ` to improve compatibility with ` ContentResolver
removed unnecessary state change checks for autoscale , createsMissingNodes , and selfLoop checkboxes in ReportPanel . java to streamline code for
[ hotfix ] [ runtime ] fix npe in testinglogicalslot constructor
added a new file ` RemoveCallsToSystemGc . java ` to implement a recipe to remove calls to ` System . gc ( )
removed unnecessary super ( ) calls from multiple exception classes to streamline code and improve readability by eliminating unnecessary super ( ) calls
added an override for the setUIID method in ScaleImageLabel to ensure the label updates its icon when the UIID changes
refactor variable names from foundEntry to update for clarity to improve code readability and maintainability by using a more descriptive variable name
added support for both " - classpath " and " - cp " command - line arguments in Main . java to enhance flexibility in argument handling
[ avutil ] fix build for ffmpeg on window
set the ' initialized ' variable to true in StorageService . java to ensure proper initialization of the storage service
updated Test7196045 . java file to improve test coverage and fix existing issues
reduced the density and decay values from 1.5 f to 1.0 f in ShaderParametersLightShaft . java to improve
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` , and modified ` OidcRedirectActionBuilder `
[ mondrian - 1862 ] fix unique constraint add when nullable and non - null
added federation sharing capability checks in UsersAndGroupsSearchProvider and EditShareFragment to enhance user experience by ensuring only federation sharing is allowed
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy . java ` to ensure that document values are
updated formatting and error messages in BufferAlignmentAgent , BufferAlignmentInterceptor , DynamicCompositeAgent , and StringWriterOutputManager classes to improve code readability
added a new method ` intForEach ` to the ` Int2ObjectHashMap ` class and modified the ` IntObjConsumer ` interface to
fix the global map storage which cause us to share scoreboards early .
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository to
refactor MTree snapshot creation logic to improve clarity and accuracy to enhance readability and maintainability of the snapshot creation logic
refactor dotProductScore method to use a variable for better readability and maintainability to improve code clarity and facilitate easier
added a new constant for the IRREVERSIBLE _ THRESHOLD and methods to manage the last confirmed block number to improve flexibility in managing
refactor locale setting logic into a dedicated method in Systems to improve code organization and maintainability by centralizing locale handling logic
added a check for ` wasNewDbCreated ( ) ` in ` LauncherClings . java ` and modified ` LauncherProvider .
updated error messages and improved collection iterator handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to enhance code clarity and ensure proper
refactor conditional logic for determining if the datamodel is null and OS _ ARCH is 64 - bit to improve code readability and maintain
added a thread variable and a check to ensure the current thread is not the same to prevent potential race conditions during execution
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the closeDatabase method
updated imports and method calls from ` apiclient . model . dto ` to ` jellyfin . sdk . model . api `
added attribute handling for SVG documents in BatikSVGDrawer . java to ensure that SVG elements are properly imported from the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error handling for invalid user configuration parsing
updated waitingForResult logic in AndroidImplementation and CodenameOneActivity to handle the " WaitForResult " flag based on the intent extras to
refactor constructors in HitQueue , PriorityQueue , and TermAutomatonScorer to use a Supplier for sentinel objects to improve flexibility
refactor WidgetCell . java to remove unnecessary casting and add widget description handling to improve code readability and manage widget information more effectively
added a maximum attribute count check in the attribute registration process to prevent runtime errors caused by exceeding the maximum registered attribute count
move predicatestest to com . hazelcast . query . impl . predicates
camel - 16400 : defaultheaderfilterstrategy should be case insensitive . thanks to daniel for the patch
refactor InlineLayout and Breaker classes to improve handling of unbreakable strings to enhance code clarity and ensure proper boundary checks for string
added nullability annotations and improved view initialization in ShareUserListAdapter . java to enhance code robustness and prevent potential null pointer exceptions
refactor ` shouldInstrument ` method to include Android SDK checks and exclude specific classes from instrumentation to improve accuracy of instrumentation detection for Android SDKs
added a condition to return the last column in the table if the association is an insert destination before the source to ensure the correct column is returned
updated memory limit file path handling in CmdModifierTest . java to improve accuracy of memory limit file path retrieval based on the Docker version
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in multiple files to improve
added error handling for null rules in JavaTestRule . java to provide clearer feedback when the specified source under test is not among its dependencies
remove hardcoding of minecraft proxy for 1.10 and 1.10 . 2 .
set atIndex to 0 if it is negative to ensure atIndex is always non - negative for valid input
increased the timeout duration from 100 milliseconds to 500 milliseconds in the BuckBlockJUnit4ClassRunner to allow more time for tests
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to enhance flexibility in managing assist content requests
updated the way the readable witness address is encoded in VoteWitnessProcessor . java to ensure proper validation of the witness address before proceeding
updated DefaultMethodRegressionTests . java for improved test coverage to enhance reliability of method regression tests
refactor WorkloadManagerMxBean to improve code structure to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to align exception handling with the
added a call to close the loader in the DesktopGeneratorController class to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and multiple test cases for exception handling in FaultTolerantExceptionClassesTests to enhance
improve error message when config not find for deployment
updated the ` applyTunerConfigs ` method to accept an additional ` extraProperties ` parameter across multiple classes to enhance configuration flexibility by allowing
added in - progress tracking for real - time segment instances in PinotRealtimeSegmentsManager . java to ensure segments are only added to the
added a condition to return null if the touchable is disabled in the Table class to ensure that touchable elements are not processed when the table
added a new test method for building a precompiled header in a cell to ensure that the system correctly handles precompiled headers in the workspace
throw a retryable exception if cache config do n ' t exist
refactor module installation logic and introduce a method to check if a module is a node package to improve modularity and enhance modularity of
added JMX annotations to MBeanContainer and Destroyable classes to enable monitoring and destruction of MBeans and ACTION components
changed the condition from ` settings . inAppBrowser ` to ` false ` in ` LongClickableSpan . java ` to simplify the conditional
updated string comparison methods in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( )
updated the ` isReifiable ` condition in ` Types . java ` and added new classes ` T6558559a ` and `
add some more information to the worldeditlistener to help diagnose the problem
camel - 16400 : camel - kafka : do n ' t wait for consumer to shut down if it fail .
removed the default example method from Schema . java to streamline the code by eliminating unused functionality
refactor thread handling in AgentRunner . java to improve clarity and control flow to enhance code readability and ensure proper termination of the loop
added removal of time columns from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns in aggregation
removed redundant condition for checking shards in FacetComponent . java to simplify the code for better readability and
replaced the use of linker . getParseTimeDeps ( ) with CxxPlatforms . getParseTimeDeps ( cxxPlatform )
added a name property with getter and setter methods in JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to enhance property management
improve error message when igv can not connect to igv
refactor scan range handling to use a local variable and introduce small scan threshold configuration to improve code readability and maintainability by centralizing
updated the return statement in RetryGatewayFilterFactory to include routeId in the filter ' s string representation to improve clarity and provide more context
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
refactor ` onOverviewShown ` methods in ` ActivityControlHelper ` and ` WindowTransformSwipeHandler ` to utilize a delay for
refactor conditional checks for min and max packed values in CheckIndex . java and add a new test case in TestPointValues . java to
updated the ` publish ` method call to use ` updateLastState ` instead of ` true ` to ensure that the last state is accurately
updated string concatenation syntax in MetastoreDirectSqlUtils . java to improve readability and maintainability of the code
added a null element to the list in SpliteratorCollisions . java to ensure proper handling of null values in the collection
danielwagnerhall : add case - sensitive and exact - case - insensitive capability to webelement . gettext ( )
replaced the ` do ` loop with a ` while ` loop in ` ManyToManyConcurrentArrayQueue . java ` to improve code clarity
# 1193 - enh : add forwardonlyfetchsize ( ) method to ormqueryengine ( # 1194 )
camel - 16462 : camel - netty - http : ignore closedchannelexception when close channel .
pdfbox - 4071 : set initial arraylist size to avoid arrayindexoutofboundsexception
updated window radius calculation in QuickstepAppTransitionManagerImpl to support rounded corners on windows to enhance flexibility in window management based on user preferences
refactor DesktopTaskView to use View instead of ShapeDrawable for background and icon handling to improve flexibility and maintainability of background management
added a new ` upstreamCheckService ` instance to the ` UpstreamCheckServiceTest ` class to enable testing of the ` upstreamCheckService
changed log level from warn to debug for immortal checks in AbstractSession and AbstractSessionManager classes to improve logging granularity for better debugging
replaced error logging with returning a return statement in ZooKeeperHiveLockManager . java to simplify the code by eliminating unnecessary error handling
[ hotfix ] [ runtime ] fix checkstyle violation in executionconfig , listserializer , closurecleaner , optimizernode
added a boolean flag ` containsCustomData ` and modified mipmap generation logic in ` FileTextureArrayData . java ` to ensure m
( chore ) camel - core : use single quote instead of double quote in test
added selectability and selection state management methods to the List class to enhance user interaction by allowing dynamic selection behavior
removed a conditional check for empty field vector values in LlapArrowBatchRecordReader . java to streamline the code by eliminating unnecessary
added file separator expansion and improved logging in PolicyContext to enhance clarity of output and enhance debugging capabilities
changed ` Set ` to ` List ` for ` flatQueries ` and ` expandQueries ` in ` FieldQuery . java ` to improve performance
refactor TLSRestrictions class to improve code organization to enhance maintainability and readability of the code
replace direct producer closure with a Runnable to submit daemon tasks to improve responsiveness and error handling when closing the Kafka producer
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance the functionality of the assertNodeStateProvider to
added functionality to delete the lock file if it exists in the workspace to ensure proper resource management and prevent potential memory leaks
updated the client port handling in MiniZooKeeperCluster and modified the client port assertion in TestHQuorumPeer to ensure proper binding of the client
added a new method ` getResponse ` to handle HTTP connection handling in ` RestClient . java ` to improve connection management and logging for better debugging
updated the method to convert segmentTarURIs to a string array to improve code clarity and maintainability by using a more descriptive variable
updated the loginStudent method calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to
added a null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when accessing mCurrentItem
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to improve performance by reducing the number of string operations
simplify wkbattributeio by remove the hextobytes ( ) method
renamed the method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity by indicating the method ' s purpose
added a check for direct substates in the AbstractStateMachine class and updated assertions in ShowcaseTests to ensure proper handling of state transitions and
added equality checks for ListMultimap and SetMultimap in MultimapSubject . java and created corresponding tests in MultimapTest . java to ensure correct
added JoinOperation interface to the PostJoinOperation class to enable support for join operations in the system
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify the functionality of executing a
amq - 5035 : fix intermittent test failure on window
updated AvaticaDatabaseMetaData . java for improved data handling to enhance performance and maintainability of database metadata management
changed lifetime , idle time , and max wait time properties from integers to duration strings with @ DurationCapable annotations to improve clarity and consistency in configuring time - related properties
fix npe in sdputils . createaudiodeplay ( ) due to miss jni call .
refactor filters and domain changes handling in FacetProcessor . java to improve clarity and functionality to enhance the handling of filter and domain changes more
[ java ] add enable / disable timeout handler to shufflehandler .
replaced hardcoded value ` - 1 ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED ` in ` O
camel - 14709 : camel - xpath - add more debug log to the xquery component
[ mondrian - 1861 ] update gradle dependency to 1.5 . 0 ( # 1865 )
pmd : add test case for edge case tokenizer ( # 1751 )
added a validation check for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that the ' atlas ' property is present
camel - 14709 : camel - core - property placeholder should not be resolve on component level .
added a method to close the level database in BlockchainTest . java and removed unnecessary message broadcasting in KafkaTest . java to improve resource
refactor code to use a new method for splitting lines in CoreMarkdownNodeRenderer to improve code readability and handle empty lines gracefully
updated import statements in WebServiceInboundGatewayParserTests . java to streamline dependencies and improve code clarity
updated SQLBindings and related classes to use ArrayList instead of ImmutableList for null - safe argument handling to improve code clarity and enforce immutability
added a new variable to retrieve the Java VM name and modified the vendor vendor check to include OpenJDK to ensure compatibility with OpenJDK
added a keepAlive ( true ) method to ReactorClient . java to enhance connection management by ensuring keepalive is enabled
replaced string literals with constants from ShaderProgram in MD5Renderer . java and ObjLoader . java to improve code readability and maintain
camel - 16400 : camel - core - optimize to avoid unnecessary lookup for property component .
refactor null check for accountCapsule in UnfreezeBalanceActuator . java to improve clarity and prevent potential null pointer exceptions
update version number for 3.8 . 1 to 3.8 . 1 . alpha
replace references to ' t ' with ' t . unannotatedType ( ) ' in multiple files to improve type handling by utilizing un
updated assertions and initialization in StorageGroupProcessorTest . java for consistency and clarity to improve code readability and maintainability by standardizing the
added a DumpableCollection to dump environment information and introduced a method to retrieve all environments to enhance debugging capabilities by providing context - sensitive information for
added a parameter ` waitbeforestart ` to the ` FFMpegVideo ` class to increase the wait time for video playback to complete before
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related code to simplify the constructor by eliminating
updated import statements and refactored test methods in AccessorsTest . java to improve readability and maintainability of the test code
added framemap getter to lirgenerator and make compilation of method more flexible .
replaced ` @ Ignore ` with ` @ ConditionalIgnore ` in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestRisk
fix boat disappear when use water
updated string representation in Directory . java and implemented getLockID method in RAMDirectory . java to improve clarity of lock identification and provide a consistent
replaced the method ` allowExperimentalOptions ( ) ` with direct access to ` experimentalOptions ` to streamline the code by elimin
added methods for asserting paths and assertions in BDDAssertions . java to enhance functionality for better assertion capabilities
renamed variable ` hp ` to ` hostField ` for clarity and updated host assignment logic to improve code readability and ensure correct port
updated logging level from debug to warn for missing Kubernetes config files and improved log message formatting to provide clearer guidance for users on how
added file upload status handling in UploadListActivity and utility methods in FileStorageUtils to enable better management and retrieval of file uploads in the application
added a new ` ProviderLoader ` and ` ProviderLoaderListener ` classes and updated ` TerminalManager ` and ` TerminalManager ` to use these
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests `
updated the SelectFromDatabaseChangeLogStatement to use a new ColumnConfig for improved column handling to enhance flexibility and maintainability of the
hhh - 16464 : fix namequalifiersupport for postgresql 8.1
fix calculation of partition per member when there be no data member
added scheduler state checks and improved error handling in ExecutionScheduleManager and ExecutionSchedulerImpl to ensure scheduler is only started if it is not already
refactor InlineBox instantiation and conditional checks in BoxBuilder . java to improve code readability and maintainability
refactor checkArgument calls in StatisticMap . java for improved readability to enhance code clarity and maintainability
updated the return value of the getStagedRectSlideEnd method from 383 to 500 to increase the staged rectangle ' s duration for better
updated button labels and command table elements in WaveInfoDialog and PlacementFragment to use localization resources to improve localization support and maintainability of the code
updated condition in BukkitMain . java to include plot area location check to ensure road items are killed correctly when the plot area is
added tests for touch exploration enablement and modified listener retrieval logic in ShadowAccessibilityManager to ensure correct behavior of touch exploration state change
pdfbox - 5328 : avoid indexoutofboundsexception when glyphid > max _ glyph _ id
use getname ( ) instead of getpropertyasstring ( ) where possible
replaced instances of ` NPOIFSFileSystem ` with ` POIFSFileSystem . create ` in ` TestNPOIFSFileSystem
added imports for PS and PlotArea , and modified the return statement to retrieve the plot ' s absolute ID to enhance functionality by ensuring valid plot
updated the version regex pattern in TestWebHCatE2e . java to allow additional characters in the version string to ensure compatibility with version
updated the condition in the count check from ` count < 0 ` to ` count < 1 ` to ensure that the count does not exceed the
add client id to kafka consumer processor ( # 6329 )
added error handling for failed javac execution in JavacCompiler . java to improve robustness by throwing an exception for failed javac execution
ggb - 1193 do n ' t repaint the view when there ' s a repaint
fix checkstyle issue in camel - spring - batch
added a method ` isAnimationFinished ` to check if the animation has finished and has been finished to provide a way to determine if the animation
updated import statements in LoginInfoEndpoint . java and added a new test method in LoginMockMvcTests . java to improve code readability and
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified refreshing text in ` HomeFragment . java
ggb - 2249 space * = ' ' should be space * ' ' , not \ ' '
refactor ObjectHashSet class for improved performance to enhance efficiency of hash set operations
refactor null checks in DataUtilities . java for improved clarity and efficiency to enhance code readability and maintainability by simplifying null
fix itemstack comparison , allow for deletion of enchanted books , mc - 12770
added a new test class AsyncResourceTest for testing asynchronous resource functionality to ensure proper handling of asynchronous operations in the microprofile server
rename ` - target - flat - headers . hmap ` to ` - target - user - headers . hmap ` and update related references
added exception handling for SendFailedException in MailService . java to improve error logging and provide more detailed information during email sending failures
updated the method name from ` resetTaskItemView ( ) ` to ` resetToEmptyUi ( ) ` and introduced a constant ` EMPTY
added unit tests for ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct behavior of
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
updated import statements from ArrayList to List in OCFile . java and OCFileListAdapter . java to improve code consistency and adhere to
update the index used in the removeViewInLayout method from ` getChildAt ( 1 ) ` to ` getChildAt ( 2 ) ` to
removed " org . eclipse . jetty . websocket . util . server . internal " from the hide statements in JettyWebSocketConfiguration and
change the default value of the S3Request policy from true to false to align the policy with the intended behavior for S3 requests
fix jfxradiobutton animation when timeline be null
updated the logic for parsing Dewey numbers and added error handling for empty splits to improve robustness of DeweyNumber parsing and provide
refactor categorySetString handling in MwVolleyApi . java to replace " Category : " with an empty string to improve clarity
updated the expected error message in WebSocketClientTest from " Invalid close control status code 1111 " to " Invalid close code 1111 " to
added a null check for classLoader in WebappLoader . java and updated assertions in TestVirtualWebappLoader . java to ensure robustness by
hhh - 10663 : fix bug in persistentattributetransformer that cause a npe if the enhancementcontext be not
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class TestPorterStemFilter to validate the functionality of the PorterStemFilter to ensure that the PorterStemFilter
renamed the method ` postBatchMutate ` to ` postBatchMutateIndispensably ` and modified its signature to include a
rename package from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix a race condition when leave the active chat room .
removed duplicate calls to Sys . touch ( ) across multiple Java files to streamline code by eliminating redundant calls to Sys . touch (
updated command handling in HgCmdLineInterface and NoOpCmdLineInterface to use " - mardu " instead of " -- unknown
camel - 7017 : camel - netty should use timer from component instead of create a new timer per endpoint .
changed fields in DirectionalLight , PointLight , and SpotLight to final in their respective classes to enforce immutability and clarify
updated width and height calculations in X11GraphicsConfig . java and WGLGraphicsConfig . java to ensure minimum dimensions of 1 to avoid rendering
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` DelegatingSecurityContextRunnable
added an AnnoFilterTreeSet class to filter inner classes and annotations to optimize class loading by avoiding unnecessary checks
updated the logic for setting newLength in BytesColumnVector . java to handle integer overflow and maximize size of next smallBuffer to improve error
updated assertions in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually instead of assertEquals to improve test reliability
changed the parameter type of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and `
ggb - 1353 add equal ( ) method to polyfunction , use it in geofunction . expandtopolyfunction ( )
added a null check for the table before setting the value to avoid potential NullPointerException when the table is not initialized
added a try - catch block around the instantiation of customChange to handle potential ClassCastException during class loading to improve robustness by avoiding runtime errors
added new methods to DistBuildConfig and refactored related classes to use BuckConfig instead of ConfigPathGetter to enhance configurability
updated the default value of the ` isDoubleEntries ` method to false and added visibility handling for export warnings in ` ExportDialogFragment ` to
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable the test due to a known issue
changed the return type of ` doJoin ` from void to boolean and added conditional checks in ` JoinTemplate ` , ` JoinWorker ` ,
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the interface by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter . java to ensure the activity starts with a
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check pagination order
updated repository URL assertions in RepositoryConventionPluginTests . java to ensure tests reflect the correct Maven artifact repository configuration
of - 2271 : add a cluster node affiliation task for pubsub .
improve error message for invalid taglib directive uri
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow broader access to the method from
added array handling and update logic for CacheKey objects in CacheKeyTest . java to improve performance and ensure correct updates for different object types
refactor file type detection to utilize the FileSystemProvider for improved flexibility to enhance file type detection capabilities across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
replaced ShadowVirtualDeviceParams with ShadowDevice in ShadowVirtualDeviceManagerTest and added new methods for VirtualSensorCallback and VirtualSensorDirectChannel
added a condition to check if ` contextObject ` is not equal to ` httpSession ` before execution in ` HttpSessionSecurityContextRepository ` to ensure
refactor loopback address retrieval logic in NetUtil . java to improve clarity and ensure correct retrieval of loopback addresses
updated variable and variable names for consistency and clarity in Zlib . java to improve code readability and maintainability by using a consistent naming
updated secure validation logic in KeyInfoReferenceResolver and improved exception handling in XMLSignatureInput and ResolverLocalFilesystem to enhance security and provide clear
added a check to ensure icon change listeners are only added when they are not already installed to improve performance by avoiding unnecessary actions when the icon
added support for Russian language in the application to enable users to access Russian language features
hhh - 14519 use nanosecond instead of second for duration conversion
disable frame state verification in strategraphkit for now
added properties and teardown methods for managing Robolectric settings in RobolectricTestRunnerTest to ensure proper cleanup of system properties after
added SLF4J support in ViewClassLoader and updated tests in ViewClassLoaderTest to support SLF4J logging functionality in the application context
added a check for " jar " packaging in ChangePackaging . java and implemented a new toString method in Xml . java to ensure correct
fix flaky test : download file with ` ` txt ' ' extension
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer before
updated JogService and Settings classes to use preferred units instead of default units to improve clarity and functionality of unit handling in the application
( chore ) camel - date - time : use utc timezone to fix test
simplified the return statement in the Terminator class to improve code readability and maintainability
updated exception messages in FileSystem . java and DistributedFileSystem . java for improved clarity and error handling to provide clearer guidance on URI
use jabrefexecutorservice instead of jabrefexecutorservice for show notification
updated connection handling in FtpReconnectAttemptServerStoppedIT and added a method to count connections in FtpEmbeddedService to improve connection management and
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve performance by using a more
added an ` ignore ` method to various log classes to warn users when a throwable is ignored to enhance logging functionality by providing a clear indication
added null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary type casting for damage in BukkitWorld . java to improve code clarity and reduce unnecessary type casting
removed the call to GraphicsUtil . cleanImage in PanelManager . java to streamline image processing by eliminating unnecessary image cleaning
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to enable directory management for improved performance and flexibility in directory handling
added a null check for the ` ic ` object before creating a new ` cleanUpColor ` instance to avoid potential ` NullPointerException ` when ` ic
updated the expected output format in the query equality test to ensure the test accurately reflects changes in the field ' s maximum document frequency
modified the implementation of ExtendedOperatingSystemMXBeanImpl . java to enhance performance and maintainability of the code
added functionality to install and install left commands in the SideMenuBar to enhance the toolbar ' s usability by allowing users to click on the
added a boolean flag ` advanceWindowed ` in ` AppSettings ` and modified ` setUpWindow ( ) ` in ` TweetActivity `
added SybaseDatabase support to the conditional check in DropPrimaryKeyGenerator . java to ensure compatibility with additional database types
refactor Client class to improve code readability to enhance maintainability and facilitate future feature additions
[ java ] notify leader ready before reset the last recording position .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
added error handling for server shutdown in ListenHTTP . java to ensure graceful shutdown of the server and prevent application crashes
camel - 15836 - camel - aws2 - stream : enable autowire on the s3 producer , fixed c
[ hotfix ] [ runtime ] replace ` ` / metrics ' ' with ` ` taskmanager ' '
bug 10592 : add miss key to 226 to 227 db upgrade
added a new test class ` TestThriftCLIServiceSecurity ` to verify the functionality of password handling in ` TOpenSessionReq ` to ensure
added a maxEnergyLimit variable and updated its assignment logic in VMActuator . java to ensure energy limit accurately reflects the fee
added maxInMemorySize property and its getter / setter methods in HttpClientProperties . java , and updated WebClientPlugin to utilize it to
updated caching logic in Cache . java to improve performance and maintainability of the code
added new files RunCucumberTest . java and StepDefinitions . java for Cucumber testing to facilitate Cucumber
added error handling for parsing double values in TypeJsonUtils and updated tests in TestArrayOperators to ensure robust parsing of double values and validate expected
updated byte arrays in Utf8StringBuilderTest . java to use hexadecimal values to ensure accurate data representation for testing purposes
added a check to ensure parameters are not set before appending them to avoid potential NullPointerExceptions during parameter processing
camel - 16400 : camel - circuit - breaker - allow to configure the maximum number of output on the load balancer .
updated the assertion in TestIndexWriterExceptions to use the maximum buffered documents from the configuration to ensure that the test accurately reflects the expected
replaced instances of ` String ` with ` Sha1HashCode ` for hash updates in multiple classes to improve type safety and consistency in hash
added static methods for enum value retrieval and conversion in AsmRuntime . java to improve code readability and facilitate easier access to
add miss biome tag for mangrove and deep dark ( # 6329 )
use a fixed thread pool for the requestimage ( fixes # 399 )
changed access modifiers of several fields and methods from private to protected in BaseTableUpsertMetadataManager . java to allow subclasses to access these fields and
updated string literals from " \ u0646 \ u0648 \ u0627 \ u0631 " to " \ u
updated image comparison method from ` getImage ( ) ` to ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule . java `
camel - 16400 : camel - jbang - add -- repos option to run command
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding unnecessary processing of NaN scores
added cleanup method and timestamp setting in OnStartupTriggeringPolicyTest . java to ensure temporary files are removed after tests are executed
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` and refactored focus handling in ` FindAction .
[ hotfix ] make checkpointscleaner implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` for XML schema validation tests to facilitate testing of XML schema handling in the
do n ' t override trie log layer in bonsai world state archive
updated FilledNewArrayInstruction . java for improved functionality to enhance performance and maintainability of the code
added a timeout attribute to the @ Test annotation in SimpleNetworkTest . java to allow more time for tests to complete successfully
updated the method to check if the parentPath ends with a slash instead of substring to improve clarity and correctness of path handling logic
added a print statement to indicate failure to load the skin file to improve debugging and error reporting when skin file loading fails
updated LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to implement dirty state management to improve data integrity by ensuring elements are
added a new constant ` UNDEFINED ` in the ` Result ` class and replaced the instantiation of ` status ` with it in ` TestStep `
updated assertions in TestTransactionCallback to throw NullPointerException instead of PersistenceException to ensure proper handling of null pointer exceptions during callback registration
fix uploadjobmultipartoperation to not use asyncjoboperation
improve error message when recover from a scheduled job .
bug fix : do n ' t show summary when there be no child
removed the ` volatile ` modifier from the ` pos ` variable and introduced a ` sizeMask ` variable in the ` ensureAvail ` method
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark these tests as ignored due to cr
replaced the variable ` targets ` with a direct call to ` endpoints . size ( ) ` for clarity to improve code readability and
updated the formatting of parameters in FileManager . java to improve code readability and maintain consistency
updated TransformFunctionType to include default values for various function types to enhance flexibility in function type mapping for transformations
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and ` Element ` classes to provide a
updated references from " RFC3280 " to " RFC5280 " in multiple Java files to ensure consistency in naming conventions across the codebase
fix : fix classcastexception in searchannotationvisitor
refactor ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap for selected items to improve performance and memory management during drawable restoration
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve code readability and maintainability
update path handling in ConfigFileApplicationListener to utilize ResourceUtils for URL validation to ensure correct file path formatting and improve reliability of application configuration
updated PreviewPositionHelper to accept a Context parameter and modified clip insets handling based on multi - window mode to improve flexibility in managing display insets
[ java ] only publish new leadershipterm if the term timestamp change .
updated test assertions in PMDCoverageTest . java to improve clarity and accuracy of log messages to enhance test reliability by verifying
updated the skip method logic in ByteArrayInputStream and added a new class Skip for testing skip behavior to improve accuracy in skipping bytes and ensure correctness of
refactor conditionals in UpdaterTask . java for clarity to improve readability and maintainability of the code
make headersmessage . max _ headers public and add a check to only download if there be too many header .
add ' rt . jar ' to the default list of standard library ( # 3649 )
simplified the connection rejecting logic in ` AbstractHandshakeHandler . java ` to improve code readability and maintainability
[ geot - 6892 ] fix geos - 6893 and geos - 6894 issue in raster plugin ( #
added a condition to check if the response is already committed before sending a 500 error to improve error handling by logging a warning if the response is
update conditional checks for ` hold ` and ` connectionQueue ` in ` HttpSession . java ` to improve clarity and correctness of polling logic
updated fade - out behavior in ` HomeGestureTutorialController ` and added feature flag checks in ` SwipeUpGestureTutorial
fix ( prefab ) : set name to prefab data if it do not exist
replaced the creation of external groups with a single entry for " internal . superuser " in LdapMockMvcTests . java to streamline
updated the calculation of ` thirtyDays ` in ` FreezeBalanceActuator . java ` and added validation in ` TransferActuator .
updated file path separator from ' / ' to File . separator to ensure compatibility across different operating systems
do n ' t show input help panel if we do n ' t want it
updated GpsMainActivity to use session description instead of an empty string and replaced service intent with EventBus in AnnotationViewFragment to enhance description
updated JsoupNonVisualRegressionTest to save a PDF file before asserting the number of pages to ensure that the test accurately
add androidnativebufferallocator , deprecate androidbufferallocator .
added checks for flag names starting with " ! " in Main . java , PrimaryItem . java , and Util . java to ensure proper handling
added a NOPMD comment to the fileRS statement in JDBCHistoryCache . java to improve code clarity by indicating that the
updated the condition for checking the use operation in the BattlePassManager class to improve readability and maintainability of the code
refactor QueuePriorityTest to use a list for expected items and update assertions accordingly to improve code clarity and maintainability by using a consistent
added dependency injection for the AffinityGroupDao and modified test cases in AffinityApiUnitTest . java to improve test reliability and ensure
added a null check for the main command and updated argument validation to include a help option to improve user experience by providing help when the command is
reduce the size of the output stream in multiple classes to optimize memory usage for improved performance
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean variable ` showBlank ` and modified conditional logic in ` ClassWriter . java ` , while introducing a new class ` T80
removed assertion for length of sn in Person . java to streamline code by eliminating unnecessary assertions
added null check for file extension before checking if it exists to prevent potential NullPointerException when the file extension is null
change return statement to continue in ContactRightButtonMenu . java to improve loop control and ensure proper execution flow
[ hotfix ] [ runtime ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve readability and maintainability of the code
refactor binding logic in PlainSocketImpl to improve clarity and ensure proper resource management to enhance code maintainability and prevent potential memory leaks
added functionality to manage and clear removed media items in the BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring items
updated log message to clarify that offsets are from the element ' s in - view center point to improve clarity and accuracy of log
added a new file ` bug4865918 . java ` to implement a GUI test for the scrollbar block increment to ensure that the scrollbar
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to streamline template evaluation process and enhance
updated import statements in QuestCommand . java and added group triggers message handling in QuestCommand . java to streamline import statements and enhance
do n ' t auto - select gnucash account file if no file manager available
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to improve readability and facilitate easier debugging
updated the description URI in the ConfigurableService annotation to use a constant instead of a hardcoded value to improve maintainability and clarity of the
updated viewport component and scroll pane settings in BrowserPanel . java to improve user interface scrolling functionality
updated keyboard input handling in LwjglInput . java and modified event handling in ParticleEditor . java to improve user experience by allowing
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " configuration before retrieving the MIME type part to enhance flexibility by allowing
added a new regex pattern for identifying and processing author comments in JSDoc . java to improve the handling of author information in Javadoc comments
updated metrics constants in MetricsConstant . java to include " create " and " delete " for database , table , and partition creation to enhance cl
added ` DrillHiveMetaStoreClient ` and ` SchemaConfig ` to the ` HiveDatabaseSchema ` and ` HiveSchemaFactory `
updated oauth2LoginLinks method to accept a MultiValueMap for query parameters and added error handling to improve flexibility in processing OAuth2 login links
updated Hijrah calendar name from " Islamic Umm al - Qura " to " Islamic Umm
do n ' t support audio on firefox
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` interceptor ` constructor from ` InterceptorConstants ` to enable
added a new " DEFAULT " option to the " TEST _ 5 " and " TEST _ 6 " tables in TestCompatibility . java to support
removed redundant calls to ` kill ( false ) ` and updated conditional logic in ` StreamingAggTemplate . java ` to improve code clarity and
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a boolean flag ` hasFrom ` and related methods in ` Delete . java ` , and modified ` DeleteDeParser . java ` to
refactor synchronization logic to differentiate between multi - status and non - success status for improved clarity and functionality to enhance error handling and
refactor ` RecipeScheduler ` to utilize a new method ` applicableListTests ` for better code organization to improve code readability and
updated regex pattern in LogAnalyser . java to improve accuracy of log line matching
( chore ) camel - google - cloud : enable integrationtest for googlecloudit environment variable
fixed - rsearch . getscore ( ) and rsearch . getscore ( ) method return min / max value instead of exclusive value .
refactor CCLicenseStep to use generics and update option handling to improve type safety and enhance clarity in license selection logic
fix a nullpointerexception in getglobalid ( ) if ifcroot be null .
updated equality check from ` equals ` to ` areEqual ` in ` OptionalAssert . java ` to improve comparison accuracy based on comparison strategy
refactor memory management in NoNewLineParagraphCssApplier , ParagraphCssApplier , ParaGraphApplier , and AlignAndMarginTest
added a new file ` TestArrayCopyToFromObject . java ` that tests array copy behavior to ensure that ArrayStoreException is thrown when both destination
replaced double quotes with single quotes for Python string insertion in BuckPythonProgram . java to improve code readability and maintainability
fix checkstyle issue in net / apr / apr / protocol . java
add a new method to crafthelper . findfiles , deprecate old version .
added an import statement for JUnit ' s Ignore annotation and marked the test case as unstable to mark the test case as unstable to
updated exception handling in TestInternalInputBuffer to check for null exceptions before verifying response status to improve robustness of the test by ensuring that
modified the ` autoloadCall ` method to include a ` lowerName ` parameter and added locking mechanism for class loading to improve class loading efficiency by
added server version comparison logic in CustomPlaybackOverlayFragment and updated HlsEnabled preference handling in PlaybackController to ensure compatibility with server versions and improve
replaced hardcoded " localhost " with dynamic resolution in KDC and OneKDC classes to improve flexibility by allowing dynamic resolution of the
modified Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a jsr250
updated import statements in MP4Parser . java for better organization and clarity to improve code readability and maintainability by organizing import statements
added a constant for HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to improve session parameter management and ensure
camel - 16462 : camel - hdfs - add snappy compression support to camel - hdfs
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing for asynchronous operations
bug 49966 : fix bug # 49966 - allow cell to be delete in a multi - cell array formula
updated glyph positioning logic and modified text formatting in GlyphLayout . java and BitmapFontTest . java to improve text rendering accuracy and clar
updated Fabric8IstioIT . java to replace hardcoded paths with constants from Commons to improve code readability and maintainability by
replaced usage of apiClient . ReportPlaybackStartAsync with TvApp . getPlaybackManager ( ) . reportPlaybackStart and reportPlaybackProgress
simpled simpleauthority to not hit disk on startup . patch by jbellis
do n ' t attempt to load a map if it do n ' t exist in memory
change the return value of LENGTH _ BIT and ERROR _ BIT from bitwise AND to bitwise OR in ResponseFlag . java to ensure that ERROR _
fix default policy for community that do not have read permission
refactor FontUtilities to use a ConcurrentHashMap for CompositeFont instances to improve performance by reusing CompositeFont instances instead of creating new ones
set prefHeight to 0 and adjust prefHeight calculation to simplify height adjustment logic for better readability and maintainability
dmn feel : improve error message when dmn fail to parse
removed unused imports and added generic type for LinkedList in multiple Java files to improve code clarity and maintain type safety
changed the visibility of the method ` finishRunningRecentsAnimation ` from private to public and updated its usage in ` NavHandleLongPress
added null checks for node IDs in ElementFactoryImpl and improved edge type validation in ImportContainerImpl to enhance error handling and ensure compatibility with
[ fnapi ] handle unknown response gracefully ( # 23737 )
nifi - 2596 : fix npe in binfiles when flowfiles be large than the bin limit
refactor distance calculation in Teams . java to use a loop for finding the closest core to improve efficiency by using a more efficient approach for
added a check to skip copying content length in the RestTemplateCopyHeaderFilter to improve request handling by avoiding unnecessary copying of content - length
updated Java2TypeScriptTranslator to handle string literals correctly and modified SyntaxTests to use eval for testing to improve code clarity and ensure correct
updated filter sizes and sample sizes in various classes for improved performance and clarity to optimize image processing and enhance user interface responsiveness
hbase - 16467 canary should allow to run all region server in regionserver mode ( chunhui )
removed dependency on NodeModule in CassandraConnectorFactory and updated ImmutableMap initialization in TestCassandraConnector to streamline configuration and eliminate unnecessary dependencies
added a call to reset the cursor position in the KahaDBStore class to ensure the cursor is reset before processing new data
set minimum size of CallDialog and add bounds checking for newFrameWidth and newFrameHeight in OneToOneCallPanel to ensure proper sizing
fix blockfalling not lose state information during world gen .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit 4 testing framework to improve test organization and facilitate easier
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic to enhance entity management and prevent potential null pointer exceptions
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method signature for better readability
improve error handling and logging in apr .
updated error message for android . licenseKey in AndroidGradleBuilder . java to provide clearer guidance on configuring the key from the
updated file name retrieval from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java ` and removed the
[ drools - 7 ] support ` ` box - inf . classes ' ' and ` ` resource ' ' package in executable model ( #
added an assumption to skip the CheckIndexTest for compatibility with Java 19 to ensure tests are not executed on unsupported features
simplified the ` assignTargetsForSplitScreen ` method by removing the ` Context ` parameter and improved target assignment logic to enhance code
[ hotfix ] fix checkstyle violation in leaderlatch
added methods to retrieve and initialize Zksnark parameters in SolidityNodeHttpApiService to enhance configuration flexibility for Zksn
refactor transaction confidence handling to utilize a new method for retrieving transaction depth to improve code clarity and maintainability by streamlining the
refactor variable and method names for consistency and clarity to improve code readability and maintainability
set default value of platformName to " ios " to ensure platformName defaults to " ios "
pdfbox - 4071 : fix typo find by codespell on fossies . org
added braces around conditional statements in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class to improve visibility handling to enhance security and maintainability of the signature generation process
added error handling to the nextOutgoingFrame method in AbstractExtension . java to improve robustness by handling potential exceptions during outgoing frame processing
replaced the try - catch block with a privileged action for obtaining the caller class to enhance security by ensuring the caller class loader is
added functionality to update the parent of child categories in the FeedCategoryDAO to ensure that child categories do not have their parent in the database
updated ContributionManagerDialog to use dynamic titles based on contribution type to improve user experience by providing context - specific titles based on the contribution type
added a new field ` vwap ` to the ` Ticker ` class and updated the constructor and methods accordingly to provide additional information about
added functionality to manage and update the no widgets view in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to improve UI
add a render graph api to allow worldrendererimpl to use it .
added a method to set the primary color of the NCFirebaseMessagingService to enhance the visibility of the messaging service based on the primary
updated ShadowUsbManagerTest . java file to improve test coverage for USB management functionality
add some extra logging to help diagnose failure
added a call to ` setSelectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the ` selectedConfiguration ` is updated
updated the calculation of width and height in AndroidGraphics . java to ensure a minimum of 1 to improve stability by preventing rendering issues
replaced instances of ` HashMap ` with ` LinkedHashMap ` for ` options ` and ` result ` in multiple Java files to ensure consistent iteration order
replaced ` nativeClosureManager ` with ` closurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a
( chore ) camel - test - infra : migrate camel - main to junit5
added two new classes , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement and test WebSocket integration in
[ ds - 3752 ] remove unused test and fix typo
refactor authentication equality check in AbstractCasWebflowEventResolver to use a dedicated method to improve code readability and maintainability by redu
added a conditional check to return false if the system property ` jnr . ffi . compile . x86asm ` is set to true to
refactor calls to use a local variable ` callNodeType ` instead of repeatedly calling ` callNode . getType ( ) ` to improve code read
added a new ` Insecure ` annotation and modified the ` MessageBuffer ` class to use it to enhance encapsulation and provide secure access to array
added new configuration variables in HiveConf . java to enhance configuration options for Hive operations
initialize scopes and policies with new HashSet instances in ResourceSet . java and add a null check for policies in DefaultResourceSetService . java to
changed the ` decrefOnClose ` field to be ` final ` and modified the constructor of ` MultiReader ` to accept a ` Collection
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , Test3 , and Test
simonstewart : disable test that fail in 2.49 . http : / / issues . apache . org / bugzilla /
refactor ` getFirstTypeArgument ` method in ` LinkedHashTreeMap ` , ` LinkedTreeMap ` , and ` GsonTypesTest `
changed return types of keySet ( ) and values ( ) methods from Collection < Integer > to KeySet and Values in Int2IntHashMap to
added constructor and getter / setter methods for duration and bgColor in FlipTransition . java to allow customization of transition duration and background color
removed unnecessary debug log statement in DLNAResource . java to streamline the code by eliminating unnecessary checks
bump major and minor version to 9.10 . 10
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to ` sun . reflect .
update parserconfiguration to support java 16 +
updated padding values for background status view in ExpansionViewHelper . java to improve layout spacing for better visibility of UI elements
updated the callback handling in AbstractPartitionPrimaryReplicaAntiEntropyTask . java to use a boolean flag for version checks to improve clarity and
added metadata handling to SeedUrl and SeedResource classes to enable storage and retrieval of additional information associated with seed URLs
[ drools - 6640 ] avoid npe when create a pattern with a null declaration
hbase - 25801 addendum fix checkstyle violation in hbase - coprocessor
add package name to annotation action validator if it ' s empty
updated assertions in IterableTest to explicitly cast null values to Object to improve type safety and avoid potential runtime errors
added stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes to enhance functionality for stream processing in map operations
clone the notifInfo object before returning it to prevent unintended modifications to the original notifInfo object
[ web ] fix a problem with command - > command - > command
refactor AEADBlockCipher class for improved encryption handling to enhance security and maintainability of the code
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for ` id ` in ` PackageResourceTable ` and changed the default resource mode from ` best ` to ` legacy `
added a conditional check for ` ulSize ` and ` ulPos ` before accessing ` getTableBuffer ( ) ` in ` TrueTypeFont .
refactor SignPlugin to accept a List of HttpMessageReaders instead of a static constant MESSAGE _ READERS to enhance flexibility by allowing
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
removed dependency on MavenDeployer in StandardMavenAuthenticationProvider . java to streamline code by eliminating unnecessary validation checks
refactor AudioNode class for improved performance to enhance efficiency of audio processing
added SSL context initialization and error handling in LinkyHandlerFactory . java and updated EnedisHttpApi . java to improve SSL connection management and
refactor HiveFunctionRegistry to use Stream and ImmutableMap for better performance to improve code readability and maintainability by utilizing modern Java features
fix for http : / / issues . apache . org / activemq / browse / amq - 2882 - fix amq
rename the parameter in getBuildTargetForAlias from ' alias ' to ' possiblyFlavoredAlias ' and modify its return logic to enhance cl
camel - olingo2 - fix camel - olingo2 - olingo2 consumer when no olingo2 entry be
added a mapping for equivalent versions in MetaStoreSchemaInfo . java and modified the return logic to check for null values to ensure accurate version retrieval
server : fix npe in expunge vm ( # 5446 )
added multiple @ Deprecated annotations to the AbstractDateAssert class to indicate that these methods are outdated and should not be used in new code
updated ONDashClockExtension to use getNoteTitle for reminders and refactored AlarmReceiver to use TextHelper for title
updated the GoogleAuthUserConfigTable class to use " nvarchar / varchar " instead of " hamcrest matchers " and modified the
replaced ` commit ( ) ` with ` apply ( ) ` for saving and saving preferences across multiple classes to improve performance by avoiding unnecessary
added an idle listener to the StandardSession instantiation in AsyncTimeoutTest . java to ensure proper handling of session idle states during tests
[ beam - 10670 ] add test id to bigquery table name in bigqueryioit . testbigquerytable
added background resource handling and reset functionality in HotseatPredictionController and BubbleTextView to improve visual representation of predicted icons and ensure
rename the property ' getflushafterquery ' to ' flushafterquery ' for clarity
add nativeworker test for native query
refactor feature retrieval logic in LIMEExplanation to handle cases where all outputs are present to improve flexibility in retrieving active features based on
added support for command - line arguments in AppleSimulatorController and InstallCommand classes to allow users to specify arguments for running Apple targets
refactor code to use a genericStyledArea for current paragraph retrieval to improve code readability and prevent potential null pointer exceptions
added checks for availability of lifecycle components in ContainerBase and StandardContext classes to ensure that operations only execute when the appropriate lifecycle state is available
added clipping to outline for the QSB background view to enhance the visual appearance of the QSB widget
added flag processing and logging for flag conversion in SQLManager and modified input handling in BlockTypeListFlag and PlotArea to improve flag management and
replaced specific OpenGL imports with a wildcard import and modified depth handling logic in FloatingTextRenderer . java to streamline import statements and
rename ` context ` to ` context _ * ` for clarity
replaced hardcoded propagation behavior with a variable and added getter / setter methods for propagationBehavior to improve flexibility in managing transaction propagation settings
fix layer validation for l1 / l2 / l1 / l2
added exception handling for read and write operations in AbstractChecker . java to improve error handling and provide clearer diagnostics for read / write failures
changed the visibility of the colorStack array from static to instance variable and updated its assignment to improve encapsulation and ensure consistent reference to the instance
updated ` getMappedStatement ` and ` hasStatement ` method calls to use ` true ` instead of ` false ` to enable mapping and statement
convert the depth retrieval to lowercase in BTCEPollingMarketDataService to ensure consistency in depth retrieval across different locales
updated QTT channel state assertions in ChannelStateTests . java to reflect correct command values for improved functionality
remove unused ` versionedhashes ` from enginepayloadparameter ( # 5242 )
clear ` triggerPrice ` and update ` onTriggerPriceTextFieldChanged ( ) ` in ` MutableOfferView . java ` to reset the price
refactor if - else structure in studentfeedbacksubmissioneditsaveaction . java to improve readability
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2696 hbase - 2697 hregioninfo . getregioninfo ( ) should check if result be null before
fix for # 1193 - when persist a bean with @ manybean ( readonly = true ) and @ manybeans ( readonly =
added a boolean property ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control whether to save
added new methods nSetLayerType and nSetLayerPaint to ShadowRenderNode . java to provide functionality for setting layer types and paint values
replaced specific AWT imports with wildcard imports and modified the firePopupMenuWillBecomeVisible method to handle popup menu visibility to improve
updated the initialization of the insert HashMap in StressProfile . java to ensure proper initialization and prevent potential null pointer exceptions
replaced ` scala . collection . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper classes
added null check for requests in MockServerEventLog . java and improved logging in HttpForwardObjectCallbackActionHandler . java to enhance robust
added a warning log for loading properties in DefaultEnvironment . java to improve error handling and provide clearer diagnostics when properties file loading fails
refactor session handling in ClientMain . java to use a try - with - resources statement to ensure proper resource management and avoid potential memory leak
added a condition to check if multicast support is not enabled in the network interface to ensure that multicast functionality is only enabled when the network is not
updated the constructor of sqlCommand to include a length parameter to ensure proper initialization of the string with the specified length
added methods to set the latest consume time for energy in UnDelegateResourceActuator and removed redundant calls in BandwidthProcessor and Energy
added a method to set and retrieve the invalid session strategy in SessionManagementConfigurer to enhance session management by allowing configuration of invalid session strategies
improve error message when a token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in map assertions to ensure
updated JdbcProxyGenerator to use a new interface for JDBC4 temporary prepared statement methods to enhance flexibility and maintainability of JDBC connection handling
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified ` start ` and ` upgrade ` methods in ` DirectUpgradeTest `
changed the type of ` toLanguageFlags ` and ` getLanguageFlags ` from ` ImmutableMultimap ` to ` ImmutableListMultimap ` to align with the
pdfbox - 4892 : use point2d instead of point2d , a suggest by valerybokov
[ gr - 36231 ] do n ' t allocate methodhook array before it ' s need .
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the return logic to handle access denial to improve
modified the ` afterJob ` method to accept ` JobExecution ` as a parameter across multiple classes to enhance job listener functionality by associating job execution
added a check for file execution status in SharedLibraryLoader . java to ensure that only writable files can be accessed
doc ( regen ) : update protoc to v3.15 . 3
rename ` ` res ' ' to ` ` event ' ' for clarity
added new constants for BATTERY _ LEVEL , ANNOTATION , TIME _ OFFSET , and PROFILE _ NAME in BundleConstants and updated
change searchexpression . applyrule ( string , bibentry ) to use map instead of hashtable
mow - 129 use absolutescreenlocatable instead of geoelement
updated JoglGraphics to resize the listener and modified ProjectiveTextureTest to use new texture filtering and UI dimensions to improve rendering performance and
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to ensure that the output resource is writable before proceed
camel - 7014 : fixed property placeholder in intercept uri . thanks to daniel for the patch .
updated the condition to check if the current time is equal to the last attempt time in ActionScheduler . java and changed the expected attempt count in
update debug _ zip path and add null check for debug _ log before replacing it to avoid potential NullPointerException when debug _ log is null
update logging to reference RenderingDebugConfig instead of WorldRendererImpl and add binding for visibility in NotificationOverlay to improve logging clarity and enhance the
move gate reset to pipe . resetgate ( ) to make it easy to reset the gate .
replace direct instantiation of TestSupplementary with a try - finally block to ensure the default locale is restored after the test execution
updated the random color for the team ' s team color from 0.8 f to 0.4 f to improve the visual distinction
change the type of ` activeMatchedStates ` from a ` Set ` to a ` Collection ` and modify logging statements to include ` Level .
updated the condition to check if the annotation is null or has no expected exceptions to ensure that the assertion logic behaves correctly when the annotation is
updated error handling in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve error reporting and provide more informative
refactor CallTreePrinter to use a unified toCsvFile method for CSV file reporting to improve code readability and maintainability by reducing
added null checks for note and noteTmp variables in DetailFragment . java and updated view references in WidgetProvider . java to improve robustness and
added peak task tracking and modified loading logic in AssetManager . java to improve accuracy of loaded assets by accounting for peak tasks
danielwagnerhall : enable native event by default on window
added new metadata names for nutch score and fetch interval , and updated logic for handling injected scores in CrawlDatum to improve clarity
updated imports from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ` ScimExternal
updated the condition for zkController and added a method isShareSchema to CoreContainer , and implemented a test for it in TestCoreContainer to
updated sizeInBytes ( ) method calls to include a boolean parameter across multiple classes to enhance flexibility in size measurement for improved performance
replaced multiple assertEquals assertions with assertNull assertion for version1 _ 2 to improve test reliability by ensuring version1 _ 2 is not
updated SQL queries in ` Field . java ` and ` AbstractJdbc2DatabaseMetaData . java ` to include checks for non - null type attributes
[ java ] do not send newleadershiptermevent if leader heartbeat be not complete .
updated the ` buildMediaType ` method to return ` MediaType . APPLICATION _ JSON _ VALUE ` from ` ServerWebExchange ` to improve handling of
updated method names from ` fillUsingLengthPrefix ` to ` fillSlice ` across multiple classes to improve clarity and consistency in naming conventions
added a new variable ` isCompactedBase ` and updated conditional checks in ` AcidUtils . java ` , and introduced a new test
updated storageScheme and qualifierEncodingScheme initialization to handle null values to improve robustness by ensuring default values are set when storageScheme or qualifierEncoding
added new files PojoProducersCustomized . java and RestProducersCutomized . java to provide customized implementations of PojoProdu
replaced hardcoded string " cache " with constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability and
register aes - gcm siv proto serialization when aes - gcm siv be enable .
fix oredictionary not be able to use wood slab wood / slab wood / slab wood
refactor session - related classes for improved organization and clarity to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` pathResolver ` from ` UndefinedSymbolsLinkerScript
prepare next release 3.2 : update doc tree and overview
hhh - 16464 : fix test failure on oracle
corrected the positioning of the sprite batch drawing in HelloWorld . java to ensure proper positioning of the texture during rendering
modified player permission checks and string representation in PlayerFunctions . java , added toString method in PlotId . java , and updated region formatting in World
added a deprecated static final Version constant LUCENE _ 8 _ 5 _ 0 to indicate that this version should no longer be used in
updated print statement formatting in SSLSocketImpl . java to improve readability of debug output
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing for signed
refactor dependency type handling in CoNLLUOutputter to use a new DependenciesType enum instead of a String to improve type safety
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` to use the ` parseContext . makeTargetDescription ` method
replace ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild . java ` to streamline the initialization process for
reduced the size of the ` configBlocks ` array from ` blocksList . length ` to ` 256 ` to optimize memory usage and improve
update version checks and warning messages in BukkitMain . java for compatibility with PlotSquared and Spigot to ensure users are aware of
updated SQL statement handling for PostgreSQL questionmark operators in ` AbstractSQLChange . java ` and ` AbstractSQLChangeTest . java ` to ensure
added overloaded methods ` ofAll ` and ` withAll ` in ` MutableBagFactory ` and ` MutableBagFactoryImpl ` , and
added HTML escape code validation for ' adoc ' and ' html ' files in BuildNavAndPDFBody . java to ensure proper handling of
updated MqttBrokerConnection instantiation to set the third parameter to false to adjust connection behavior for improved performance
updated the way the ChangeSet is retrieved by using the root change log if it is null to improve reliability by ensuring the change log is
[ hotfix ] [ plugin ] remove unnecessary call to writer . output ( )
added logging and database dropping functionality in TestObjectStore and HiveMetaStorePartitionSpecs to enhance debugging capabilities by providing insights into database operations
added a new form parameter for order currency in BithumbAuthenticated . java and updated method signatures in BithumbAccountServiceRaw . java
deleted the SSEFluxWebConfig . java file to remove unused configuration to streamline the codebase
updated method return type checks from ` getReturnType ( ) . getFullyQualifiedName ( ) ` to ` getReturns ( ) . isVoid ( )
renamed YAML _ READER to YAML and added a new endpoint to list Yamls detection configurations to improve code clarity and provide a
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enforce package - private
refactor thread factory implementation to use lambda expressions and introduce a new awaitTermination method to improve code readability and reduce redundancy in thread
added unit tests for adding lists with simple and mapping converters in MongoTemplateTests . java and created a new PersonWithAList class with a
ggb - 1395 adjust applet panel size after size change
updated toolbar visibility handling in DrawerActivity to include a delay to improve user experience by ensuring the toolbar is visible before hiding it
refactor data unpacking logic in SeriesReader to improve clarity and structure to enhance maintainability and readability of the code
server : save vm password only if the vm be run
added boolean flags ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to ` Response . java ` to control
added a warning check for assignment side effects in GroupDialog . java to improve error handling by avoiding unnecessary processing when an assignment side effect is
refactor JSON and JSONObjectConvertor classes for improved code organization to enhance maintainability and readability of the code
updated the conditional check for icon dimensions in FileUploadApiController . java to ensure consistency in icon size validation logic
refactor code for better readability and replace EncodingUtils with JcaPEMWriter in JwtTokenCipherSigningPublicKeyEndpoint to improve maintainability and
added file existence and readability checks for user and file system mime types in Basic . java to enhance error handling and provide clearer output for
fix ( netty ) : add compression support to nettyconnection
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and removed it from ` Class . java ` and ` Method
changed the visibility of the ` doConnect ` method from public to protected in ` ChannelProvider ` and ` ProxyChannelProvider ` to enhance method
added a test for handling an empty final column in TestCsvHeader . java and modified TextReader . java to start the output field correctly to
added compass gravity and margins in NearbyMapFragment . java to improve the visual appearance of nearby map elements
added unit tests for GeoPath interpolation in GeoPathTest . java to ensure correctness of distance calculations and distance calculations
added ` throws HiveException ` to method signatures and improved error handling in ` LeafFilterFactory ` and ` ParquetFilterPredicateConverter `
added language setting for video streams in LibMediaInfoParser . java to ensure correct language is set for video tracks
add warn when schemas in the new version be less than the old version
replaced System . arraycopy calls with a new addAll method across multiple array classes to simplify code and improve readability by reducing duplication
reformatted code for closing the connection in DataSourceProxy . java to improve readability and maintainability of the code
refactor InMemoryClientRegistrationRepository , InMemoryReactiveClientRegistrationRepository , and InMemoryReactiveClientRegistrationRepository to accept a map
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state reflects the current status of the cluster
added handling for ` failedStep ` and ` ignoredStep ` states in ` JUnitReporter ` , and created new test cases in ` J
add a patch to allow in entity selector . close # 179666
added the Closeable interface to the Selector class to ensure proper resource management by implementing the Closeable interface
updated connection pool configuration in MaxConcurrentStreamsTest . java to utilize MultiplexConnectionPool for improved performance and resource management
added multiple calls to stringType ( ) in CoreOptions . java to enhance functionality by providing additional string type information
updated HqlQueryRenderer and EclipseLinkUserRepositoryFinderTests to handle escape clauses and context configurations to ensure compatibility with EclipseLink '
updated HTTP status handling to use constants instead of magic numbers to improve code readability and maintainability by using named constants
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated HikariCPCollectorTest . java to replace JDBC connection configuration with StubConnection for improved testing flexibility
updated ParquetFormatPlugin and ParquetGroupScan to improve selection handling and metadata file existence checks to enhance code clarity and maintainability by
updated the ` isSuccess ` variable and modified the compilation process in ` Jsr199Javac . java ` to improve error handling and ensure
install a base model listener so that when restore default get click , it redraws the view .
updated the threshold for the server configuration from 49152 to 65535 to allow for greater flexibility in server configuration settings
added support for document provider authority in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running KitKat and above
removed the startLogging method call from MainApp . java to streamline logging functionality for improved performance
modified exception handling in FilterChainProxy to use ThrowableAnalyzer for better error handling to improve robustness of request rejection logic by ensuring only wrapped
updated the string length calculation and corrected the array copy operation in StringBuilder . java to ensure proper allocation and data management within the StringBuilder
pdfbox - 4892 : throw an exception if the filter list be empty
add TbStopWatch class to manage and retrieve total and last task time instead of total time to facilitate the management and retrieval of
set the initialized flag to true in PListStore . java to ensure proper initialization of the PListStore
added @ Deprecated annotation to multiple Continuation classes to indicate that these classes are outdated and encourage use of Servlet 3.0 AsyncContext
[ zeppelin - 5441 ] set the context class loader for remote interpreter server to ensure the correct classloader be use for
fix checkstyle issue in forgehooks . java
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility
rename variable ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve clarity
# 1193 - enh : add beandescriptor . simplename ( ) ... for easy debugging
updated JavaScript and CSS URLs from " wro / all . js " and " wro / all . css " to " static / all
added a test method to show the latest timeseries in IoTDBMetadataFetchIT . java to ensure that the system correctly retrieves and displays the latest
update parameter names from " appContextLocation " to " contextConfigLocation " in multiple files to improve clarity and consistency in naming conventions
updated exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve clarity and specificity in error reporting
benchmarker : add writeoutputsolutionenabled property ( default to true )
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new file ` Issue _ 815 . java ` to implement a test for slicing size in ` SortedTableMap ` to ensure that
added a shapeless recipe for pipe waterproof and slime ball to enhance game mechanics by allowing water and slime ball
mahout - 1349 : sequentialaccessSparsevector . iteratenonzero ( ) do n ' t throw indexoutofboundsex
added support for handling shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to ensure proper management of
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
http : / / issues . apache . org / activemq / browse / amq - 2636 - add warn on name truncation
replaced the direct instantiation of ` UpToTagChangeSetFilter ` with a separate variable and added a method to check if a tag is found
[ beam - 10670 ] use java . util . arraylist instead of com . google . common . collections . linkedlist ( #
refactor BrokerRoutingManager to improve routing logic to enhance performance and reliability of routing operations
changed volumePaint and upPaint colors from gray and green to GRAY and GREEN in CandlestickRenderer . java to improve
refactor layout parameter handling in InsettableFrameLayout and introduce a new LayoutParams class to improve flexibility and maintainability of layout parameter
added a duration parameter to the BuildTargetDurationListener class and updated related JSON serialization to include the duration of the rule in the JSON response
updated database migration integration tests to use ` assumeTrue ` instead of ` @ Profile ` annotations to ensure tests are only executed when the database profile
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is null
camel - 16400 : camel - test - support to replace from endpoint in cameltestsupport . thanks to benjamin
use nonblockinghashset instead of concurrentskiplistet in cassandraconnection
api : add listpublicipaddresses api to list all public ip address by source network id
added unit tests for ` isIgnoringBatteryOptimizations ` in ` ShadowPowerManagerTest ` and implemented functionality in ` ShadowPowerManager `
update the Jetty version retrieval to use the build properties instead of a hardcoded value to ensure the application uses the correct version from the build
added unit tests for verifying invocations in the NumberOfInvocationsInOrderVerifier to ensure correct verification behavior for different invocation scenarios
refactor debug expression evaluation logic in TRegexExecNode . java to improve clarity and maintainability of the code
added " - foreground " argument to the startProfile method in NewProfileExtensionConnection . java to enable foreground processing for profile management
renamed executor variables and updated their usage in MiniSolrCloudCluster . java to improve clarity and ensure proper resource management during shutdown
changed the type of ` parseFieldnames ` from a ` Map < String , String > ` to a ` String [ ] ` and simplified
updated log message to use getName ( ) instead of getFile ( ) and added null checks for actionsList in EditorTextActionWindow to improve logging
added detailed error messages to skippedEntries in ClassFileReader . java and updated warning message formatting in JdepsTask . java to improve debugging information and
updated Fetcher and FetcherMain classes to utilize Lucene ' s LinkStorage for improved document storage to enhance performance and maintainability
updated the ` populateBubble ` method to include an ` existingBubble ` parameter and added a null check for existing bubbles to
replaced warning logs with exceptions in CronScheduledRoutePolicy , ScheduledJob , and SimpleScheduledRoutePolicy classes to improve error handling and provide clear
refactor ` buildRpcExt ` method to accept only ` Method ` objects instead of ` Method [ ] ` to simplify the method signature and
[ java ] add miss delay generator for multicast and non multicast destination .
updated Gson initialization and added properties for client information in ClientInformationResponseView . java to enhance JSON serialization and provide more detailed client information for better
added a conditional check for the field amount before setting the average price in HuobiAdapters . java to ensure that the average price is only
replaced the method ` rawExecutionReports ( ) ` with direct access to ` executionReports ` from ` binanceUserDataStreamingService ` to
added a ` fail ( Exception e ) ` method and modified the failure handling in ` LdapTimeoutTest . java ` to improve error reporting and
mary : avoid npe if user dictionary file do n ' t exist
updated password handling logic in ` AmbariServerConfigurationHandler . java ` and modified test expectations in ` RootServiceComponentConfigurationResourceProviderTest
added a method to check if a segment is already parsed in ParseSegment . java and updated its usage in SegmentChecker . java to improve segment
[ hotfix ] [ yarn ] add config option for application attempt failure validity interval
do n ' t unload the h2 driver if it ' s not included
hbase - 16463 add readtype configuration for snapshot - based input format ( # 4358 )
added fixedHeight and fixedWidth properties with their respective getters and setters to the InstanceLoginInfo class to enhance the functionality of the InstanceLoginInfo
added a corner radius parameter to the update method across multiple classes to enhance the functionality of the update method by incorporating corner radius for
updated the COMMANDS _ TO _ REMOVE array to include additional descriptions and added warning filters in QFile . java to enhance the clarity
added a retry mechanism for database connection retries in TxnHandler . java to improve reliability by allowing retries on connection pool issues
renamed the method ` txnEnsureReserve ` to ` txnCheckReserve ` and introduced a new method ` txnEnsureBackupReserve
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to store and manage string arrays for improved functionality
updated DELETE statements in CostBasedDecisionIT and DeleteCompiler to use " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS " to
updated the retry logic in BaseServiceException to include a check for " insufficient data written " to improve error handling by distinguishing between SocketTimeoutException
added support for rapid install types in AdbHelper , AndroidDevicesHelperFactory , and RealAndroidDevice classes to enhance flexibility in managing
updated the seed pattern in SortTest . java to allow negative seed values to allow for more flexible random number generation
refactor MultimapSubject to use a factory method for creating Iterable values and iterable entries to improve code clarity and maintainability by separating
simplified the return statement by removing the conditional check for natural orientation to streamline the code for better readability and maintainability
explicitly ignore transcoding of single mediaitem and transcoding of video .
added localization functionality for localized strings in the Picker class to improve user experience by ensuring consistent localization of UI elements
camel - 7256 fixed the npe of defaultcxfrsbinding
hhh - 18686 : postgresql 8.1 do n ' t throw lockacquisitionexception and pessimisticlockexception
added assertions and modified imports in TestJdbcDriver2 and HiveStatement classes , and updated visibility annotations in HiveStatement to enhance test reliability and
[ beam - 10619 ] exclude usesstrunboundedpcollections from dataset runner test
updated the HTML formatting for the filename text in GpsSimpleViewFragment . java to improve readability and maintainability of the code
[ java ] remove unused leadershiptermid parameter from joinlogasfollower .
replaced direct access to ` getHttpExchange ( ) ` with a private instance variable ` exchange ` to improve code readability and maintainability by
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
updated the method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve
added Lombok ' s EqualsAndHashCode annotation and null check in Recipe and Markers classes , and created a new test class for
patch from danielwagner from bug # 46702 - allow to set font size a double instead of float .
refactor email handling in AddressBookDoCoMoResultParser to use an array instead of a single email string to improve flexibility in email
refactor exclusion handling in RawMavenResolver to improve clarity and maintainability of exclusion management logic
added exchange info initialization and updated currency pair handling in the DSXAdapters and DSXPairInfo classes to improve error handling and provide clearer
refactor multiple test classes for consistency in naming conventions to improve code readability and maintainability
[ drools - 90 ] fix incremental compilation when kie - maven - plugin be not on the classpath
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` before accessing ` sobj .
camel - 16462 : add javadoc to indicate that the jackson data format can be use for serialization / deserialization .
truffle : do n ' t use reflection for field getter / setter in hostfielddesc
added a method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to enhance null safety annotations for asynchronous operations
updated the freezeCheckPoint calculation in PlaybackController . java to adjust the maximum freeze threshold for improved playback responsiveness
removed unused imports and added internal state setting in AbstractCommonPowerMockRunner . java to streamline code by eliminating redundancy and en
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ( ) ` to ensure
refactor indentation logic in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
updated TestSingleTokenTokenFilter to extend JUnit ' s TestCase instead of LuceneTestCase to improve compatibility with JUnit testing framework
updated HTML writing logic to include a wrapped text cell in the report to improve readability of the displayed information in the
refactor JdbcStepExecutionDao , MapStepExecutionDao , SimpleJobRepository , MockStepDao , and MockStepDao to improve execution context
added a condition to check if the new media folder should be hidden before adding it to the root folder to ensure that the child is only added
added null check for actor and updated widget management logic in SplitPane . java to improve error handling and ensure proper widget removal behavior
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management for parameterized types in the code
fix npe in uniquemodlistbuilder when modinfo be null or empty
changed the logger declaration from instance variable to static in TicketGrantingTicketImpl . java to improve performance by avoiding unnecessary instantiation of the logger
updated SQL string from " create timeseries root.3e - 3e - 3e - 3e - 3e - 2.1 .
added a method ` isValue ` to ` AttrData ` and updated ` Converter ` to check if a value is found to improve value handling logic
added support for US International PC locale handling in CPlatformResponder . java and introduced utility methods in LWCToolkit . java to
[ java ] set aeron publication connection timeout in ctestmediadriver and spysimulatedconnectiontest
added a condition to return false if the request URI starts with " / css " , " / images " , and " / favicon "
updated the installation command to assert the success of the APK installation to improve error handling and ensure the device is rooted
no effective change - add @ ignoreplatform ( platform . oracle )
added a mock for MultiMap in TestSimpleBodyHandler and updated assertions in TestVertxTLSBuilder to reflect the correct number of secure transport protocols
updated file paths in DiffRuleKeysScriptIntegrationTest . java from " e3506ff7c3ddada " to " fc
added a boolean flag ` mIsDismissHapticRunning ` and modified the condition for haptic dismissal in ` TaskView
include source of projectile in the cause of worldexplosionevent .
removed unused imports and overridden the getItemId method in SymbolInputAdapter to improve code clarity and maintainability
updated API endpoint parameters from ` @ PathParam ` to ` @ QueryParam ` in ` Bitfinex . java ` and increased ` limit _ bids `
added a check to replace single quotes with double quotes in the result string to ensure consistent formatting of XML output
implement ` toString ( ) ` method for ` KubernetesLeaderElectionDriver ` and add tests for it in ` ZooKeeperLeaderElectionDriverTest ` to
refactor SqlSessionFactoryBean for improved session management to enhance performance and maintainability of SQL session management
[ 3.0 ] fix tripleinvoker do n ' t work correctly with generic method
replace Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by providing a more specific exception type
added a method to check if a thread - local Deadline is active and registered it in the RawStoreProxy class to ensure proper handling of
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages when a channel is idle for too long requests
updated the handling of genres in ItemListActivity to check for null values before setting the text to improve robustness by preventing potential NullPointerException
[ flink - 21756 ] [ checkpointing ] reset the master hook after region recovery
fix for prefab with collection of mapped container
updated the logic for calculating the oldest unpinned memtable version in WALNode . java to ensure correct handling of unpinned memory tables
http client retry on same host can self deadlock - fix # 3469 - fix # 3468
fix checkstyle issue in ` ` truffle / tutorial / background ' ' module .
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL Server query behavior to ensure proper handling of special characters in question characters in
added nullability annotations and improved null handling in CamelModule and JoobyBeanRepository to enhance code safety and prevent potential NullPointerExceptions
replaced synchronized block with a direct call to Util . wait in JavaFXSEPort . java to improve code readability and maintainability by
changed package and import statements from ` com . kenai . jaffl . ParameterFlags ` to ` com . kenai .
replaced instances of RegionDecoderCropBehaviour and BitmapCropBehaviour with a new createCropperBehaviour method to handle different image types
removed the appName parameter from the configure methods in InputRC and related classes to simplify method signatures by eliminating unnecessary parameters
[ gr - 3995 ] add test for ignored / broken dependency .
danielwagnerhall : use -- headless = chrome instead of setheadless ( true )
replace direct assignment of value with intern ( ) method to improve memory efficiency by reusing the value
added support for the " MOVE " status in the recv _ status check to enable handling of the MOVE status in the connection logic
updated date format strings in FixedDateFormat . java to include milliseconds to ensure consistency in date representation across the application
updated import statements from org . apache . curator . com . google . common . collect . Lists to com . google . common . collect
[ hotfix ] [ runtime ] fix the race condition in hsbuffercontext # startspilling
updated permission checks for untrusted plots in the Visit class to ensure only authorized players can visit untrusted plots
do n ' t attempt to connect to a jabber account if no jabber account be register .
updated the character range check in BasicURLNormalizer and added a new test for curly braces in TestBasicURLNormalizer to improve URL normalization accuracy and
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict access to these methods
added a condition to compare clock rates when ` res ` is zero in ` EncodingConfiguration . java ` to ensure accurate comparison of clock rates for
added a method to retrieve the project path and modified the return type of ` generateProjects ` to return an ` ImmutableSet < Path > ` to
modified the logic for setting the zero digit setting and checking calendar ID validity in HostLocaleProviderAdapterImpl . java to improve code clarity and
added a new file ` MSwingUtilities . java ` that provides utility methods for image scaling and handling exceptions to provide utility functions for image
camel - mail : make mail producer async so we do n ' t need to wait for the mail to be send to the mail server .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic refresh of configuration properties
added unit test base on user forum issue
added new ` Main ` and ` ScriptRenderer ` classes for template rendering and modified ` SchemaCrawlerMojo ` to use these classes to implement
added a condition to check if the input state is __ NONE in the FORM _ ENCODED content type check and implemented a test for query
updated touch focus handling and descent calculations in BitmapFont and added a method to check if an actor is a descendant in Group to improve touch
refactor context closing hook handling in DeploymentManager and add a new test for context shutdown in DeploymentTest to improve context management and ensure proper failure
fix typo in lexiconrecipemappings . tostring ( itemstack , boolean ignoremeta )
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow more time for thread execution to complete after
updated import statements and modified conditional logic in LoincHandler . java to improve code readability and ensure shortName is not blank before comparison
use classloader . getresource ( ) instead of classpathurlstreamhandler .
added a new file ` FieldUtils . java ` with utility methods for field access and manipulation to facilitate reflection - based field access
simplified the condition in the assertion in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to
updated layout inflation from custom content to screen and added padding adjustments to improve the visual appearance of the workspace interface
update xabber account sync state when xmpp account be load from net .
added a new method ` setvar ` to handle variable setting in the ` LineReader ` class to improve usability by allowing users to set
fix animaltame event not be fire on cat entity .
improve error message when sort by value for range frame .
pdfbox - 4892 : add test to verify that pdfbox - 4893 do n ' t appear twice
added app . setMode ( app . getMode ( ) ) to PageListController . java to ensure the application displays the correct mode based on
added methods for setting build arguments and file paths in ImageFromDockerfile . java and created a new test class DockerfileBuildTest . java
added a null check before initializing threadInfos , threadNames , and threadClassNames to optimize memory usage by avoiding unnecessary object creation
updated the threshold for the ` sweepAngleOuter ` calculation from a fixed value to a constant value of ` Utils . FLOAT _ EPSILON `
[ hotfix ] add more logging to singleinputgate and singlecheckpointbarrierhandler
added new schema constants to the Schema . java file to enhance functionality and maintainability of the schema definitions
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors to enhance flexibility in fuzzy query configuration
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
logback - 1349 add support for ` ` immediateflush ' ' property in ` ` enclosingappender ' '
added " org . springframework . boot . autoconfigure . RabbitAutoConfiguration " and " org . springframework . boot . autocon
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to
replaced imports of ` avro . shaded . com . google . common . base ` with ` com . google . common . base `
added methods to retrieve return and unwind blocks in BciBlockMapping and updated block processing logic in GraphBuilderPhase to enhance block management and
added a new method ` isLegacyRenderer ( ) ` and ` setLegacyRenderer ( ) ` to the ` Label ` class , and modified
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
updated the generic type declaration of the ` thenComparing ` method in ` Comparator . java ` and added a new ` Department ` class
refactor DocIdSet class implementation to improve code readability and maintainability
updated the end time setting in UserRuleAnomalyFunction to use the current bucketMillis instead of null to ensure accurate tracking of anomaly results
added a try - catch block to handle NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown when parsing integers
added a class loader to the enhancer configuration in MockFactory . java to ensure the correct class loader is used for mocking classes
added a new class ` OriginalFormat ` and implemented the ` format ` method in ` ConverterWithEnumFormat ` to handle object formatting and parsing
replaced hardcoded date format string with a constant for better maintainability to improve code readability and maintainability by avoiding magic strings
refactor JAWTRenderer class implementation to improve rendering performance and maintainability
camel - 14850 - camel - aws2 - * : create an aws2 - lambda component , regen doc
check that a mac address be generate for the current nics in the network ( # 5449 )
added a condition to check if the stringHeaderName equals " Authorization " to ensure proper handling of authorization headers in the ProxyServlet
replaced ` submit ` with ` execute ` in ` TraceableExecutorService . java ` to improve execution handling for better context management
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes ,
updated the logic for determining ` randUsePoints ` in ` SolrTestCaseJ4 . java ` to ensure that ` randUsePoints `
ggb - 1359 fix ` ` append dot ' ' to ` ` end sentence ' '
updated TimeFormat . java to include Locale parameter in formatForConsole methods to ensure consistent formatting across different locales
updated import statements and added logic to handle named arguments in GroovyParserVisitor . java and GroovyPrinter . java to improve code clarity and ensure
added inset adjustments for top , bottom , and left inset in Border . java to ensure proper positioning of elements based on their
refactor gesture state initialization in TouchInteractionService to use DEFAULT _ STATE to improve code clarity and maintainability by centralizing gesture state creation
replaced Joda - Time with Java ' s built - in date formatting in LlapServiceDriver . java to improve code readability and
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
remove dependency on commons - io , use java . io . close instead
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction manager initialization
increased timeout values in ` AbstractDistribZkTestBase . java ` and ` AbstractFullDistribZkTestBase .
added a new class SearchResults for handling search results in Lucene to provide a structured way to manage and retrieve search results from documents
bugfix # 205362 , cpu sampler should not refresh when threadcpufeaster be null
do n ' t call frame . getobjectsafe ( ) if it be null .
added new versions " 8.10 . 0 - cfs " , " 8.10 . 0 - nocfs " , and " 8
updated the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the
added a new endpoint to retrieve tenant pools for the current instance to enhance functionality by providing access to tenant pools for the current instance
added methods to check for early termination on document ID and prefix in TopFieldCollector to improve accuracy of early termination checks for search sorting
added a check for ` isToString ( ) ` in ` InlineBytecodeGenerator ` and updated imports in ` InlineByteBuddyMockMaker
added logging statements for compiling and preprocessing steps in CxxCompileStep and CxxPreprocessStep to improve debugging and monitoring of compilation
add ` stringutil # removecharacter ` to replace ` ` - ' ' with ` ` ------- ' '
[ 3.0 ] fix nullpointerexception when export metadata service ( # 9041 )
* add datatransformer interface to facilitate data transformation in the kie - api
changed the type of ` values ` and ` objval ` from ` Collection < ? > ` to ` Collection < Number [ ] > `
removed an unnecessary conditional check for the ' interesting ' variable in FormatStringChecker . java to simplify the code logic for better readability and maintain
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintain consistency
refactor ITestDbTxnManager class for improved transaction management to enhance code clarity and maintainability
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added testMapModel method to CodeFirstPojoClient and its implementation in CodeFirstPojoIntf and CodeFirstPojo classes to
pdfbox - 4892 : simplify code , a suggest by valerybokov
refactor selection handling in ScaleDialog to improve clarity and maintainability to enhance code readability and ensure correct selection behavior for scaleOffsets
fix nullpointerexception in itemtravelBelt # tickBelt ( player )
pdfbox - 2576 : do n ' t throw exception when there be no appearance stream
changed TreeSet to LinkedHashSet for storing keys to ensure consistent iteration order of keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 in CancelEventTimer . java and modified
updated the library dependency from " libdc1394 - 22 " to " libdc1394 - 25 " in the dc1394 .
added conditional check to ` setAllConstructorsToPublic ` and created new classes ` MockStaticWithPrivateCtor ` and ` StaticWithPrivateCtor `
pdfbox - 4892 : avoid classcastexception when decrypt object
bug 60536 - add support for awt . wm _ class string in mainframe
modify depth and transparency logic in XRSurfaceData . java to handle 32 - bit pixel sizes to ensure proper transparency handling for 32 - bit
added error handling for reading response bodies in OkHttpDataSource to improve error reporting for failed HTTP responses
added a static method ` exit ` to handle exceptions in ` TopLogging ` and updated the ` TopThreadGroup ` to use this new method
modified the calculation of the start index in NativeRegExp . java to ensure correct handling of non - global regex patterns
disable fail test due to upgrade optaplanner 6.3 . 1 +
updated the assignment of ` highAllocation ` to use the correct index from ` availableAllocations [ lowIndex ] ` to ensure the correct allocation
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO , and updated AdminREST to utilize this method to improve
change return type of appendToLabel method from void to AtomicCounter to allow method chaining for improved usability
[ java ] add noopidlestrategy for idle strategy that do n ' t work .
added handling for NOT _ MODIFIED HTTP response status in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure headers are only written
rename ` constantValueInertSpliceInstrumentListener ` and ` constantValueInertToolEvalNode ` to ` constantValueInertTool
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to utilize insets for painting the tab area to
modified the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept a ` Object . args ` argument instead of
camel - 7011 : file component should use fileutil . normalizepath ( ) instead of fileutil . normalizepathtoprotocol ( )
added JavaJackson annotations and modified methods in JavaProvenance , MavenProjectParser , and JavaProvenance classes to enhance JavaProvenance functionality
added trace logging for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java , and updated condition in equalityVisitor . java
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to allow more time for tests to complete and ensure
do n ' t deliver hint for deleted column family
added a check for writable output files in NativeErrors . java to handle cases where the test is run as root to ensure that the output file
added package info retrieval and error handling in LauncherModel . java to improve robustness by verifying package availability before proceeding
cloudstack - 5395 : fix npe while upgrade from 4.1 to 4.2
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for non - skippable exceptions to
replaced ` startsWith ( completed ) ` with ` regionMatches ( option . CASE _ INSENSITIVE ) ` in ` LineReaderImpl .
added global data tables and updated return logic for data tables in Recipe . java to enhance the handling of global data tables and improve data table
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar . java to ensure that all tasks are removed when
server : add dbupgradesystemvmtemplate interface to upgrade from 4.14 to 4.15
removed unnecessary null checks for the connection variable in LdapClient . java to streamline connection management by eliminating unnecessary null checks
refactor index handling in SequenceAction . java for clarity to improve code readability and maintainability
reset login flag when keyspace do not exist . patch by jbellis
added a check to skip synthetic fields in ReflectUtils . java to improve performance by avoiding unnecessary processing of synthetic fields
added LoggerProvider to facilitate dependency injection for logging in the application to enhance logging capabilities and facilitate easier debugging
changed the type of the ` builder ` and ` values ` from ` String ` to ` Object ` in ` ServerStatusCommand . java `
added deprecation warning for multiple glue classes in Spring context configuration to inform users about potential issues with multiple glue classes that configure the spring context
added a new method ` deepStart ` to the ` Startables ` class to facilitate the creation of deep startables from a
remove shape . reserveprimitiveextensionarray ( ) , deprecate since 20.2 .
laser table now implement islasertargetblock to allow laser to work with custom laser .
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
http : / / issues . apache . org / activemq / browse / amq - 2370 - fix flakiness in
removed null checks and simplified handler registration logic in RequestHandlers . java to improve code readability and maintainability
replace hyphens in servlet names with spaces in the logger name to ensure consistent formatting of servlet names for better readability
updated imports and modified the handling of the PYTHONPATH environment variable in ProjectBuildFileParser . java to improve code clarity and ensure only
updated audio frame size calculations and error handling in DirectAudioDevice and Toolkit classes to improve robustness and provide clearer error messages for invalid
updated the handling of null enums in ElasticSearchStringLookupService to improve robustness by avoiding null pointer exceptions
updated error message formatting in CommitLogReader . java to include dollar sign to improve readability of error messages for better debugging
added a policy assignment in the WebSocketSession class to ensure the session ' s policy is correctly associated with the container scope
simplified the logic for initializing static fields in the Java to TypeScript translation to improve code readability and maintainability by eliminating
replaced UI _ DIR with webroot in the StaticHandler instantiation to allow dynamic configuration of the web root path
updated JUnit imports and annotations from ` @ Before ` to ` @ BeforeEach ` across multiple test files to migrate tests to JUnit 5
[ netbeans - 4322 ] use editorregistry . focusedcomponent ( ) instead of registry . getlocalhostactivecomponent ( )
updated the method name from ` printHeaderObject ` to ` createHeader ` in multiple formatter classes to improve clarity and consistency in header creation
simplified import statements in VircurexTradeService . java and added a placeholder method for placing stop orders to streamline
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView . java to prevent potential NullPointerExceptions when mOriginalForeground or mOriginal
updated boundary conditions in FloatingDecimal . java and added a new ToString . java file with test cases for Double . toString ( ) to ensure
updated property type comparison logic in PropertyDescriptor . java and added a new test class Test7189112 . java to improve type safety and ensure
removed maxVersion parameter from recentUpdates . getVersions method to simplify version retrieval by using nVersions directly
update the ORIGIN header handling in NettyRequestFactory to ensure the correct origin is set based on the URI ' s security context
updated task visibility and animation logic in RecentsView and TaskView classes to improve user experience by providing smoother transitions and visual feedback
updated error messages and refactored method calls in ORCRecordReader . java to include the field parameter to improve clarity of error messages
added HLS sample references for Steel and Basic 4x3 in DemoUtil . java to enhance video processing capabilities by providing clear H
updated Hibernate interface references and refactored method names in PersistenceProvider . java to improve clarity and consistency in naming conventions
hbase - 20536 add miss space in log file name for rpcinvoker and execrpcinvoker
added diagnostic logging and a new test for union and fixed fields in TestSpecificCompiler to improve error handling and ensure correct compilation of generated code with
simplified the session creation logic in ` WebSocketEndpoint . java ` and added a new test in ` WebSocketIT . java ` to ensure
updated delayInSec and renamed onDaoStateBlockChainChanged methods to onChangeAfterBatchProcessing , and changed the file name to DaoState
replaced instances of " OpenSymphony Group " with " Apache Struts " in XmlConfigurationProvider . java and LocationAttributes . java to
added conditional checks for stopping streams in WebCamInputPanel . java to ensure proper cleanup of video tracks when the stream is stopped
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriod
update gml example to use simplefeaturebuilder and wktreader2
replaced ` substream ` with ` skip ` in the method call from ` s . substream ` to ` s . skip ` to
hhh - 10956 - fix npe in abstractentityturplizer when no identifiergenerator be find
rename ` ` look up full text document ' ' to ` ` download full text document ' '
refactor URI registration logic to add host and port details to the URI list to improve clarity of URI registration process by including host and port
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for a blank OSDB hash before calling getInfoFromOSDbHash and changed List to ArrayList for generic types to improve robustness
added token transfer functionality in RuntimeImpl . java and integrated it in MUtil . java to enhance the contract transfer process by integrating token validation and
camel - 7017 : ftp component should use current dir if stepwise be enable . thanks to daniel for the patch .
updated the method reference from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure the
added a check for match results in MapJoinOperator and introduced BloomFilter in HybridHashTableContainer to ensure correct handling of hash join
updated HTTPSPDYAsyncConnectionFactory to accept an AsyncEndPoint parameter and added getter methods for local address , host , and port to enhance functionality
added extra " id " to intent in multiple adapter classes to ensure proper identification of tweets in the application
added a new method ` disconnectWeb ( ) ` and modified the ` disconnectInternal ( ) ` calls in ` HttpURLConnection . java ` to improve
replaced ` int ` with ` AtomicInteger ` for ` _ numChildren ` and updated return statement to use ` getAndIncrement ( ) ` to
removed unnecessary ' final ' keyword from variable declarations in multiple Java files to improve code readability and maintainability
disable the test for NullPointerException in ValueTypeTests . java to temporarily skip tests that are not ready for execution

updated the superclass constructor parameters from " IN " to " NOT _ IN " in multiple predicate classes to align the predicate type with the intended functionality
updated exception handling to catch a broader range of exceptions and refactored account creation logic to improve error handling and enhance user experience by providing
added null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use getExprString ( ) for clarity to improve readability and maintainability of the code
added a check to ensure that the Javadoc is not present before setting the JavaDoc to avoid potential NullPointerExceptions when the Javadoc is not present
rename ` holderMethod ` to ` holderMetadata ` and update related methods in ` CompiledICHolder . java ` , and add a new
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) and revalidateToDestMotion ( ) in Tabs .
[ hotfix ] [ schema ] return unregisteredmetricsgroup instead of throw unsupportedoperationexception
updated the calculation of the y - coordinate in the Polygon class to improve accuracy by using a new variable for the original coordinates
updated cache creation to use a specific Configuration type to ensure proper type handling for cache configurations
added a null and length check for stringConstant in InheritanceUnsafeGetResource . java and created a new class Bug2974855 .
refactor ShadowCookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
added an external table drop check configuration and implemented permission checks in the metastore authorization provider to ensure that external tables cannot be dropped due to
added a brace to the if statement in Stage . java and corrected the positioning of the background in ProgressBar . java to improve code readability
truffle : cache byte order in llvmlanguage . getbytearraysupport ( ) .
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to
updated the initWebViewLogin method to accept a base URL and modified the initWebViewLogin method to accept a parameter to enhance flexibility
corrected a typo in the error message from " Paramter " to " Parameter " in CallableStatementHandler . java to improve clarity
updated the ` after ` parameter format in ` AuditEventsMvcEndpoint ` and modified test cases in ` AuditEventsMvcEndpointTests ` to allow
rename ` ExponentialTimer ` and related classes to ` PreciseThroughputTimer ` to clarify the purpose of the class related to throughput
added functionality to remove and delete soft bodies from the dynamics world to ensure proper resource management and prevent memory leaks
changed interface declarations from package - private to public in several Java files to allow access to these interfaces from other packages
[ zeppelinhub ] fix log message in zeppelinwebsocket and zeppelinclient
add test to ensure that jingle do n ' t have redundant namespace
fix npe cause by miss redplasma config .
added HTTP / 2 headers handling in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
refactor plot member and denied checks for improved clarity and structure to enhance readability and maintainability of the code
updated the delimiter in SimpleReport . java from ` count ` to ` count2 ` and modified string formatting in ` StringBuilder . java ` to
removed the option to ignore symbol files in JavapTask and added a new class T6863746 for testing to streamline the
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class as it is no longer needed
added null checks for contract and contract address in the contract creation process to improve error handling and provide clearer feedback for invalid contract types
g3d : do n ' t create input3d for applet , if not necessary
added @ Ignore annotation to KinesisIntegrationTests . java to disable tests that are not ready for execution
do not throw parserexception in scripttagpayloadreader . parsepayload
changed the method name from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName in JpaRepositoryConfigExtension . java to clarify that the method
changed the return type of ` getExecutableCommand ` from ` String ` to ` List < String > ` across multiple classes to provide a list
replaced instances of ` this ` with direct references to ` IOSGLES20 ` for clarity to improve code readability and maintainability
removed the UploadPathActivity class and its associated imports from the codebase to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to handle cases when DOCS _ ONLY is true to ensure correct frequency calculations based on index options
fix : add implicit constructor to parentexiter ( # 3508 )
added a Database parameter to several methods in ColumnSnapshotGenerator to ensure compatibility with Oracle databases during validation operations
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
updated iterator assignment in PointInSetQuery . java to improve code clarity and maintain consistency in variable usage
removed the mapping of ` rawName ` to ` rawName ` in ` SchematicHandler . java ` to streamline the processing of
added case handling for specific collections in AbstractCollectionAssert . java and updated return statements in CollectionAssert _ isUnmodifiable _ Test . java to improve
changed the enum declaration from static to non - static in ProcessExecutor . java to allow for instance - specific customization of the Option enum
refactor dialog handling in Compose . java and remove duplicate code in ComposeActivity . java to improve code organization and enhance user experience when
replaced the toggleKeepInSync ( ) method with a direct call to getFileOperationsHelper ( ) for file synchronization to streamline file synchronization
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) ` in ` ImageUtil . java
added new files ControllerCounter . java and DBCallback . java to provide an interface for MongoDB - related operations in the document analytics package
added ' final ' keyword to the parameter of the deleteTicket method to improve code clarity and enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to initialize a Spring application context for Flyway migration to facilitate the
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap . java ` and added a new class `
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version
updated the ` modify ` method to accept ` @ Nullable ` for ` modifiers ` in ` CompressionCodec ` , ` WriterImpl ` , and
modified ` LauncherHelper ` to handle null main class values and added a new test method in ` Arrrghs ` to improve error handling
rename test classes from " Test " to " Tests " to improve clarity and consistency in naming conventions
rename methoddata . graal _ node _ count to methoddata . graal _ jvmci _ ir _ size for clarity .
remove the clone ( ) method from cellcopypolicy , since it be not implement cloneable .
added a method to reset the icon load result in FloatingIconView and updated its usage in Launcher to improve the management of icon loading
updated method call from ` f . getValues ( ) ` to ` f . getRawValueCharSequences ( ) ` in ` EntityCapsManager .
updated margin calculations in IconRecentsView to account for landscape orientation to improve layout responsiveness for different screen orientations
deleted the AddAdapter . java file which contained a ListItem class to streamline the codebase by eliminating unused components
fix a bug in the non - static lifter that could cause an npe .
modified the ` processSortCols ` parameter and logic in ` OpTraitsRulesProcFactory ` to enable the processing of bucket column names based on
refactor logging logic in TestLogWatcher to improve clarity and error handling to ensure that no messages are present when a new watcher is registered
added a print statement to the Java2TypeScriptTranslator class to enhance output formatting for better readability
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
set SPRING _ AOP _ PROXY _ TARGET _ CLASS to " true " in the environment if it does not already exist to ensure
removed the singletonLock variable from TypeCachingBytecodeGenerator to simplify the code by eliminating unnecessary locking logic
updated method names to include " responseClassCallbackWithClass " and " forwardClassCallbackWithString " in CallbackActionExamples . java to improve
added a new method ` appendToFile ` to the ` Utils ` class and modified the ` writeFile ` method to accept an additional parameter to control
updated MavenExecutionContextView to check if settings match and modified MavenRepositoryMirror to use getMirrors ( ) instead of getMessage ( ) to improve
added a ` name ` parameter to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and updated their constructors to include it to
updated redirect URI matching logic in OAuth20CallbackAuthorizeEndpointController and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests to ensure
refactor annotation handling by introducing a new ` toArray ` method in ` AnnotationParser ` to improve code readability and maintainability by central
updated method calls in UserManagerCompatVL to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawable
updated the default value for the line separator in GlobalConfiguration . java to provide clearer guidance on configuring the operating system ' s line
fix classnotfoundexception in configurationmanagerutils . isderivedclass ( )
add ` ` ' ' and ` ` ' ' to sanitize server and server name
chore : update java and python dependency ( # 139 )
updated the method signature of ` buildFileNamesCanBeDifferentCrossCell ` to include ` throws IOException ` and modified its implementation to ensure proper
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future feature additions
updated container type assignments in AllAppsRecyclerView and modified logDeepShortcutsOpen method to accept View objects instead of container types to improve cl
hbase - 15413 warn about deprecation of config key in bytebufallocator
[ native ] fix native window and join test
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types and updated references to use this new method to improve
rename TestFSTs . java file to improve clarity and consistency in naming conventions
ggb - 2249 fix label positioning for latex in the input box
hbase - 15410 increase the initial size of increasetableregionsplitpolicy ( chunhui )
removed unnecessary model initialization and loader initialization in LauncherClings . java to streamline the loading process and improve performance
refactor ManagedSelector to initialize keys and updates lists and use ISO _ OFFSET _ DATE _ TIME for date formatting to improve clarity and consistency
added an ` excludedDatasources ` set and modified the ` setExcludedDatasources ` method in ` SpringDataSourceBeanPostProcessor ` to allow
bugfix : undo - redo on column delete
( chore ) camel - aws : improve error handling for kinesis connection
refactor channel handling in VelbusSensorHandler to use a loop for triggering Velbus channels to improve code readability and maintainability
disabled tests in ` BoundedLocalCache ` and ` BoundedLocalCacheTest ` to disable tests due to unfavorable benchmarks and
added a test for illegal database names in IoTDBSessionSimpleIT . java and throw an IllegalPathException in PartialPath . java to ensure
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure new files are reset before garbage collection
rename ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` variables to ` desiredWorkspaceHorizontalMarginPx ` and
reformatted code for clarity and consistency in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 12 )
api : fix typo : xenservernetworklabel - > xennetworklabel
updated libgdx version and libgdx nightly version from " 1.5 . 5 " to " 1.5 . 6
removed the metricNames set and its getter method from SolrCore . java to streamline the code by eliminating unnecessary metrics management
replaced URI with Path for workingDirectory and absolutePath in MavenManifestFactory . java to improve compatibility with different file system configurations
replaced the direct call to ` System . getProperty ( " os . name " ) . contains ( " mac " ) ` with a static
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
clear slotList in Frame . java and add it to other . slotList to ensure the correct slotList is maintained during modifications
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count for testing purposes
added properties merging functionality in ConfigurationSpringInitializer to enhance property management for better configuration management
updated the setupLogging method to accept a SLF4J logger instead of the Logback logger to ensure compatibility with SLF4J logging
replaced instances of HashMap with LinkedHashMap in multiple Java files to ensure consistent ordering of entries in the aliasToWork collection
added logic to retrieve the superclass of a class if jdbcHandlerMap is null and the type is an instance of Object to ensure proper handling of
added debug logging for writing items in HibernateItemWriter , JPAItemWriter , FlatFileItemWriter , and JMSItemWriter to improve
updated language range parsing logic in LocaleUtils . java to handle leading and trailing semicolons correctly to improve robustness of language range parsing by
updated handler execution in Http2ServerResponseImpl and modified context handling in VertxHttp2Handler to ensure proper context management during HTTP / 2
bug 57840 : move xssftable cache from xssfworkbook to xssfevaluationworkbook where staleness be less likely to cause problem for
updated schema text detail type from VERBOSE to BASIC and refactored column name assignment logic to improve clarity of schema output and enhance read
replaced MongoFactoryBean with MongoClientFactoryBean and updated the way MongoClient is retrieved in MongoNamespaceReplicaSetTests . java to improve
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order while maintaining insertion order
added a check to ensure the operator tree is properly cloned before proceeding with the join operation to prevent unintended modifications to the operator tree
added a null check for the client ID in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to use ClientDetailsEntityJsonProcessor
reset the achievement list when a new item be add to the list .
initialize userName , productName , and driverName with empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are set
updated references from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog . java and
added a new ` readLongs ` method to ` ByteBuffersDataInput ` and ` ByteBuffersIndexInput ` classes for reading long values to
rename variables and methods in UnixFileAttributes and Basic classes for clarity and consistency to improve code readability and maintainability by using descriptive
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection of humongous regions to
added functionality to control the visibility of the search bar in the AllAppsContainerView to improve user experience by hiding the search bar when the
updated the method call from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to ensure the correct
added null checks for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during execution
added a new action class ` ReloadPageAction ` to handle page reloading functionality to enhance user experience by allowing users to reload the current page
changed log level from info to warn for entry logging in SQLManager . java to improve logging granularity for non - existent entries
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to throw an exception if the configuration type does not have a selected
use serviceloader instead of factoryregistry for extension point lookup
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource cleanup and prevent memory leaks
added a method to stop the statement executor in JdbcConnector and log its updates in HiveViewImpl to ensure that the statement execution is properly stopped
updated XML configuration settings and initialization of hints in multiple classes to ensure proper handling of external entity loading and improve code clarity
updated JdbStopThreadidTest . java to replace JdbCommand . waitForPrompt with Jdb . contToExit and check for application
added a new implementation of the ` getType ` method in ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enhance functionality
use cast type for good readability and code checker ( # 3922 )
updated the default HTTP port configuration to use " vertx . httpPort " instead of " port " to ensure the correct HTTP port is used
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to streamline event handling by removing unnecessary capture functionality
update DEFAULT _ BATCH _ SIZE to use available processors instead of a fixed value to improve performance by dynamically adjusting the default batch size based
added error handling for establishing Resource Manager connection in TaskExecutor to improve robustness by logging errors during resource manager connection establishment
initialize classFile to null and modify exception handling logic in LambdaRewriter . java to improve code clarity and ensure proper handling of null class file
updated the IllegalArgumentException message to include min and max parameters to improve clarity of error messages for better debugging
updated method signatures to include an owner parameter for better context and clarity to enhance message handling by associating messages with their respective entities
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` , and implemented database - related functionalities in the ` com .
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
# 182 - enh : add ebeanserver . setbeanid ( object bean , object id ) method ( # 183 )
pmd ( build ) : externalise properly xsl filename , fix default path to
added a list of request matchers to the HttpSecurity class to enhance the flexibility of request matching by allowing multiple matchers
implement hashcode ( ) and equal ( ) for contactresource .
move getrequest ( ) and getresponse ( ) into abstractprocessor and abstracthttp11processor
updated log messages for clarity and improved error handling in FileManager . java to enhance log readability and provide more informative error messages
added a tearDown method to TestIndexSearcher and reset mock control in TestJdbcDataSource to ensure proper cleanup of resources during tests
added import for LambdasWithInterfaces and removed redundant assert statements in SyntaxTests . java to improve code clarity and maintainability by standard
rename ConnectionModel and ModeledConnection classes to improve clarity and consistency in naming conventions
replaced the DefaultParser implementation with a fallback parser in ParserDecorator . java to enhance flexibility in handling different media types during parsing
make sure we do n ' t try to get the calling class name if it ' s a dedicated server .
simplified variable declarations in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintainability
updated the parameter name from " swap " to " rename " and modified the RENAME method to include a mapping of " other " to "
added a new test method ` testJsxComment ` to ` JsLexerJsxTest ` and refactored ` Parser ` and `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for debugging purposes
updated error handling in ` BuildEndToEndTest ` and ` CxxEndToEndWorkspace ` to use ` ExitCode ` instead of
added physical memory checks and a limit for resource management in TestStringBufferAndBuilderGrowth . java to ensure that the system does not exceed
deprecated the constructor and updated conversion logic in MapToLocalDateConverter to improve code maintainability and adhere to the updated conversion service implementation
added a success flag to the HiveMetaStoreClient class to track the success of the metastore operation
updated string comparison from ` = = " * " ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java
updated conditions to check for both vine . co and amp . twimg . com in TimeLineCursorAdapter and TweetActivity to ensure
mark AreaReference class as deprecated to indicate that the class is outdated and should not be used in new code
refactor ElementType and Target classes to improve code structure to enhance maintainability and readability of the code
added assertions and modified reference kind handling in MemberName . java to improve clarity and correctness of reference kind validation
updated the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization around the ` runChange `
simplified the conditional check for MouseEvent in EditNodeTextField . java to improve code readability and maintainability
camel - 16400 : fixed bean with static method can not be use . thanks to daniel for the patch .
updated multiple Java files for consistency in naming conventions to improve code readability and maintainability
refactor exception handling in AgentRunnerTest for clarity and consistency to improve readability and maintainability of the code
added ` getDescription ( ) ` method implementations in multiple classes to provide meaningful descriptions for Maven dependencies and plugins to improve clarity and usability of
refactor activeGroup face addition logic to include checks for hasNorms and hasUVs in ObjLoader . java to improve clarity and
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future feature additions
replaced instances of ` reentrantLock ` with ` lock ` across multiple files to standardize naming conventions and improve code readability
updated ` PrintMavenAsCycloneDxBom ` to include ` mavenPackaging ` parameter in the ` getBomReference ` method
replace back ( ) with back ( evt . getComponent ( ) ) in UIBuilder . java to ensure the correct component is passed to the back
do n ' t call tlsauth if the client ca n ' t verify the server certificate .
updated generic type parameters in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity in handling nullable objects
replaced calls to NutchConf with getConf in Fetcher , Generator , and Injector classes to standardize configuration retrieval across the codebase
bug fix : if a stub can not be select , do not remove the guard pane .
added a method to retrieve the session ID in the RemoteWebDriver class to provide access to the session ID for external use
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java and updated test cases in ImporterGEXF2
removed the ` - logLevel INFO - serverPort ` argument from the ` withCommand ` method to streamline command execution by eliminating unnecessary
updated error logging to include the exception message to improve error reporting for better debugging
replace usage of robotshotonoringpolicy with crawlmetadata in crawlprocessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
fix test on window by use platform dependent path
added a method ` alternativePath ( ) ` to ` ExpectNewDemo . java ` that returns an empty ` InputStream ` when ` alternativePath
replace input . init ( ) with input . getFirstFilter ( ) . init ( ) in LogEntryParseTester . java to ensure that the
[ java ] add protectiondomain parameter to bufferalignmentagent constructor .
added a dispose method to properly release resources associated with the WaterRipples class to ensure proper resource management and prevent memory leaks
added configuration to disable semi - join optimization on external tables to improve performance by avoiding unnecessary semi - joins on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
added FLAG _ SHOW _ WALLPAPER to the window in Launcher . java and set wallpaper offsets in Workspace . java to
modify return values and condition checks in SybaseASADatabase and CreateSequenceGenerator classes to ensure correct sequence retrieval for Sybase ASA databases
nifi - 1641 : fix npe in putsql when autocommit be set to false
added directory creation and error handling for XSLT files in SnapPuller . java and updated tests in TestReplicationHandler . java to ensure proper
changed the AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure the correct identification
[ java ] remove unnecessary bytebuffer allocation in framer . frame ( ) and framer . frameandreleasemessage ( ) .
updated constructor parameters in OAuth2LoginAuthenticationFilter and OAuth2AuthorizationRequestRedirectFilter to remove unnecessary parameters to improve code clarity and maintain consistency
updated the documentation for the GenericUDFStringToMap class to clarify the purpose and usage of key - value pairs in the map creation
updated ` PlainFormatter ` to use ` ChronoUnit ` and ` TemporalUnit ` for instant formatting to improve clarity and precision of time representation
replaced the ` TIMEOUT _ MS ` constant with ` RETRY _ CLOSE _ TIMEOUT _ MS ` and modified the ` close ` method to
hhh - 14663 : remove the use of reflection in classloadingstrategyhelper . getprivatelookup ( )
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated debug log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the log
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to frequent failures
updated the exception message from " rows and columns must be greater than zero " to " rows and columns must be greater than zero " to cl
add try - catch around decisionnode creation in wagoncart
added sorting functionality for ` BoundSheetRecord ` instances in ` XLS2CSVmra ` and ` BoundSheetRecord ` classes to enhance data
refactor thrust calculation logic in ThrustCurveMotor . java to improve clarity and maintainability of the thrust curve calculations
niftyjmedisplay : fix niftyjmedisplay . setinputmanager ( ) to call setinputmanager (
modified the logic for setting the hashCode field offset in UniverseBuilder . java to ensure that the offset is valid before setting it to avoid potential
remove deprecated method block # getmesh ( ) , deprecate in 1.7 . 0
[ hotfix ] [ yarn ] fix typo in yarntaskmanagerrunner
added a new option ` EMPTY _ WORD _ OPTIONS ` to the ` Example ` class and modified matcher logic in ` LineReaderImpl ` to
do n ' t push view replica update when writecommitlog be false . patch by jbellis
updated clipboard handling logic in CaptureActivity and added default button ID methods in ResultHandler and URIResultHandler to improve user experience by enabling automatic
added a new test method ` testBatching ` to ` JoinedTableTest ` to verify batching behavior for Hibernate entities to ensure
added handling for EntityExistsException in JpaPersistenceService to improve logging detail for duplicate timestamps during persistence errors
deprecated the ` format ` option in ` CucumberOptions ` and updated references in ` RuntimeOptions ` and ` RunCukesBy
removed the save ( ) method from PMS . java to optimize performance by avoiding unnecessary save operations
simplified the condition for handling back key events in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new class ` Capacity . java ` with tests for `
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to handle saved notes
added support for handling endnotes in the XWPFDocument class and updated related methods to improve endnote extraction functionality and ensure correct extraction of
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context during authentication transactions
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify GDAL versioning functionality to ensure compatibility
added a new file ` Lifecycle . java ` that implements network error handling in the Codename One framework to provide a mechanism for managing network
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 404 on deviantart
removed unused imports from BodyTubeShapes , RocketFigure , and RocketFigure classes to streamline code and improve readability by
added support for retina rendering in PJOGL . java and updated texture attachment handling in OpenGL . java to improve rendering performance and flex
add an option to auto - select the offline project in the create project ( # 4358 )
replaced ` PackedInts ` and ` FormatAndBits ` with ` BlockPackedWriter ` in ` DiskDocValuesConsumer . java
updated DefaultStatusRoute to use originatingType ( ) instead of toString ( ) and changed routesByStatus from a collection to a sorted set
removed unused data handling logic in GoAwayTest . java to streamline code and improve readability by eliminating unnecessary data management
added support for populating beans with ` FluentSetterBean ` in ` ReflectionUtils ` and created a new ` FluentSetterBean ` class to enhance
updated ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to use ` Callable < HttpResponse > ` instead of ` ListenableFuture < ? >
( chore ) camel - core : fix test that fail on window
updated the print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity of the
added new boolean flags and methods to manage image scaling and PDF conformance settings in RtfDocumentSettings . java to enhance flexibility in handling image
added aggregation function name handling in TSServiceImpl . java to ensure correct column representation for aggregate functions
updated TestExceptionInBeforeClassHooks and TestSystemPropertiesInvariantRule to extend AbstractNestedTest instead of LuceneTestCase to improve test
added logic to update the xCapEnableBox and display its value based on the registration ' s XCap enable status to enhance user experience by
add ` ` handleexception ' ' property to allow custom exception to be send to the dispatcher
added stopEditing methods in CodenameOneImplementation , Display , and AndroidImplementation classes to manage text editing behavior to improve user experience by allowing
nifi - 1552 : fix npe in controlrate when group attribute name be null
added a new parameter ` isNewComponent ` to the ` showDialog ` method and implemented a checkbox for setting the " AlwaysOpenPreset " preference
added error handling and logging in ChatAnnotation . java to improve error reporting and ensure thread safety during message sending
added a check to ensure the test is only executed on Windows to avoid execution on unsupported operating systems
added SQL _ SERVER _ SNAPSHOT transaction isolation level to TransactionIsolationLevel . java to enhance transaction management capabilities for improved performance
replaced ` newRecids . put ( newRecid ) ` with ` newRecids . offer ( newRecid , TimeUnit .
use java . util . zip . zipfile instead of com . apache . tomcat . util . jre . jar . jaremplate
added a null check for the commandClass before creating a new instance of RegisteredServiceImpl to prevent potential NullPointerExceptions when the command class is not
change default disk _ failure _ policy from best _ effort to ignore . patch by jbellis ; review by stu hood for cassandra
removed the ' public ' access modifier from methods in RipperInterface . java and updated the ' update ' method in RipStatusHandler
updated filter condition in PeerDiscoveryAgent . java to check if the source address is not the IP address to ensure that only valid IP addresses are
removed the setter method for JobIdentifierFactory in SimpleCommandLineJobRunner to streamline the code by eliminating unused functionality
updated import statements in PinotSegmentRebalancer . java and modified the computePartitionAssignment method to include ClusterDataCache to enhance functionality by integr
douniaberrada : remove the deletecontainer api that be no longer need .
simonstewart : fix a bug in the defaultselenesecommand . parse ( ) method , and add a unit test .
fix flaky flaky createglossarytests ( # 364 )
update schema reference references in ModelResolver . java to use the new Components . COMPONENTS _ SCHEMAS _ REF constant to ensure consistency
refactor EntityDeletedEvent to use JsonUtils for JSON serialization to improve code readability and maintainability by reducing redundancy
added a check for " gop " value matching in FormatConfiguration . java and integrated it into LibMediaInfoParser . java to ensure GOP
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate performance testing of return type
replaced direct initialization of CURRENT _ VERSION _ INFO with a locking mechanism using ReentrantLock to ensure thread safety when accessing shared resources
added acquire and release functionality for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent potential
danielwagnerhall : unignoring firefoxprofiletest . testfirefoxprofile fails because the firefox
updated the return type of ` getSystemBars ` from ` Map < String , String > ` to ` Map < String , Object > `
do n ' t call projectstats . getprojectstats ( ) if the bug be dead .
updated disabled text color handling in ImportPanel . java to improve text visibility based on the Look and Feel ID
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a date in the future if the recurrence by days are empty to ensure that a valid date is returned for weekly
replaced the upload button functionality with a menu - based action management approach to enhance user experience by allowing single upload functionality
refactor multiple classes related to message expression handling to improve code organization and maintainability
added the ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading metadata from an
added a custom serializer for Writable objects in CrawlDbReader to enable proper serialization of Writable objects for improved data handling
removed unused imports from TestJaspicBasicAuthenticator . java to clean up the code and improve readability
updated the component annotation in MDNSDiscoveryService . java to include the service and configurationPid to ensure that the MDNSDiscoveryService is properly
added null check for messageItem before scrolling to the position in ChatViewerFragment to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer to use ForkJoinWorkerThread to improve thread
updated assertions in RoleCommandOrderTest to check for the presence of DATANODE and NAMENODE roles to ensure that the tests validate the correct
added methods to restore local information from TableInfo and refactored serialization logic to improve code clarity and ensure proper handling of table information during
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added transformation and flipping functionality for the logo sprite in BitmapFontTest . java to enhance visual rendering by applying transformations for the logo sprite
[ hotfix ] [ python ] exclude built - in aggregate from streamphysicalpythongroupwindowaggregaterule
removed the ` hasPendingEcho ` field and related methods from ` EndpointState ` , modified logging statements in ` Gossiper ` ,
rename isanyhostdown ( ) to isanystoragethowners ( ) for consistency
[ geosymbolic ] do n ' t change x ^ 2 to x ^ 2
refactor content type handling in FormAuthenticator and add getter / setter methods in SavedRequest to improve content type management and enhance flexibility in
changed access modifiers of static variables and added null checks for local graphics environment and display in XToolkit . java to improve encapsulation and ensure
refactor RecommenderJob and AbstractJob classes for improved organization to enhance code maintainability and readability
replaced Object lock with ReentrantReadReadWriteLock and ReentrantReadWriteLock for improved concurrency handling to enhance performance and
added a test for reading an identity provider using a token in the IdentityProviderEndpointsMockMvcTests class to ensure that the identity provider behaves
updated job scheduling to use an ExpireJob instead of a job and added null check for timestamp in PointInTimeTrigger to improve job management
removed the import of ` org . jasig . cas . authentication . Service ` from ` SendTicketGrantingTicketActionTests . java
[ rocketmq - 175 ] consumer may miss message because of inconsistent sub … close apache / incubator - rocketmq # 92
add ` cairo . detached . mkdir . mode ` configuration property ( # 3995 )
[ java ] add a test to ensure that the follower remain stable when there be a slow down service .
change default label pattern from ` ` [ authors3 ] [ year ] ' ' to ` ` [ auth ] [ year ] ' '
updated dependency management in DBinaryDescription , DLibraryDescription , and DTestDescription classes to use CxxPlatforms for parsing time dependencies to
refactor OAuth service initialization and dispose method in GoogleCloudAPI and add Deactivate annotation in GoogleTTSService to improve resource management and ensure
camel - 7017 : fixed file consumer not be able to delete a file if the file name do not start with a dot .
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to enable or disable reopen
add dialect version to mapwriter and freeplaneversion
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` Attr . java ` and a new test class ` PrimitiveTypeInBoundForMethodRefTest .
refactor ` Condition ` and ` WidgetSearchCondition ` classes to use a lambda expression instead of an anonymous inner class to improve code readability
replaced TermQuery with ConstantScoreQuery for search results in TestFacetsCollector . java to improve search performance by using a more efficient query
removed multiple unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve readability
added a new method ` providesDirectNearbyUploadPreferences ` to retrieve shared preferences and modified the ` providesUploadController ` method to provide direct
added support for the " sysDummy1 " mode in the database compatibility checks to enhance compatibility handling for different database modes
refactor logging statements in TraceGatewayEnvironmentPostProcessor . java and add conditional logic in SamplerAutoConfiguration . java to improve code readability
added functionality to track and retrieve the last used property ID in POIXMLProperties and updated related test cases to improve property management and ensure accurate
[ geot - 5640 ] geotiffreader do n ' t return negative _ infinity for non - finite nodata ( #
updated import statements and refactored driver execution logic in CliDriver . java and SessionState . java to improve code clarity and enhance error
replaced ` Executor ` with ` Scheduler ` for HTTP execution in ` MockRestAdapter ` to improve concurrency handling and simplify the execution logic
added a default method ` selectByRuleIdSet ` and a new method ` selectByRuleIdSet0 ` in ` RuleConditionMapper
added an ` addExitDescription ` method to ` ExitStatus ` and updated its usage in ` AbstractJob ` and ` AbstractStep ` to
added a condition to check if the player is the player when interacting with the multiblock event to ensure proper handling of the right -
renamed ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity by indicating the purpose of the
removed an unused import statement in PlotConfiguration . java to streamline code by eliminating unnecessary dependencies
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` for improved input handling to enhance
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method for clarity to improve code readability and
removed assertion for null message in AdvServiceTest to ensure that the service does not return an error message
refactor key handling in MappingMongoConverter to improve type safety and clarity to enhance code readability and maintainability by simplifying key conversion
updated Timber log statements in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 14850 : camel - core - optimize to reduce object creation / deserialization overhead
added null check for terms in FuzzyLikeThisQuery and created a test for non - existing fields to improve robustness by avoiding null
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for tabular list formatting to improve code readability and maintainability by reducing
[ ds - 3640 ] fix npe in createmissingidentifiers when no identifier service be available
updated the method calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure consistency in accessing the length of
changed the return type of getDisplayScript from abstract to a concrete String to provide a default implementation that returns null for the method
replaced hardcoded sequence values with a fixed one for keyToPress and keyToRelease in RemoteWebDriver . java to improve flexibility
pdfbox - 4892 : set initial capacity of cosobjects arraylist to avoid oom
added synchronization and null checks for dbusConn in NetworkManagerListenerImpl and NetworkConfigurationWatcher to ensure thread safety and prevent potential NullPointerExceptions during network
refactor HSSFWorkbook to extract embedded object retrieval logic into a separate method to improve code readability and maintainability by reducing duplication
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
updated variable names from hostParams to roleParams in AmbariManagementControllerImpl . java to improve clarity and consistency in parameter handling
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbol -
replaced glStateManager . popAttrib ( ) with gl11 . glPopAttrib ( ) in ModelHourglass . java to improve
refactor LiveTvGuideActivity to use a private calendar variable for current guide start and update related logic to improve code clarity and ensure
replaced ` getDeclaredMethod ` with ` WhiteboxMethod ` in ` MockGateway . java ` and added new classes ` CommonParentTest .
added dlopen calls for libfreetype . so and libfontmanager . so in JREUtils . java to ensure proper loading of
mondrian : fix bug with multi - variable function ( thanks to daniel )
loop safepoint elimination : add unsigned range guard to loopbeginnode .
fix ` ` isinstance ' ' check in typeframemodelingvisitor . java
added LocalizedString class and refactored method argument handling in Attr . java and new classes T6758789a . java and
added a boolean property ` disableClasspathSearch ` and its getter / setter methods to ` ServerConfig ` , and updated ` DefaultContainer ` to
updated audio format variables to be final and replaced System . arraycopy with Arrays . copyOf for improved array handling to enhance immutability and performance
updated the default value of the retries ( ) method from 0 to 2 in Reference . java and adjusted the corresponding test in AnnotationPropertyValuesAdapter
added JSON parsing support for settings in TexturePacker . java to allow users to specify a custom settings file for processing
added text views for uploaded images and used by wiki progress bars in AchievementsFragment . java to enhance user experience by providing clearer
added annotation processing and execution round logging to TranslatingJavacPhaseTracerTest to improve traceability and debugging of annotation processing processes
added ` CategoryInfo ` properties and methods to ` MwQueryPage ` for managing category information to enhance functionality by providing access to category information
simplified assertion messages for username and password in AuthzAuthenticationRequest . java to improve code readability and maintain consistency in error messages
added accessibility features and refactored timeout alarm logic in TaskbarStashController to improve user experience by dynamically hiding the taskbar
added a condition to check for the ' ^ ' character in the signature and throw an exception if it is already thrown to ensure that the signature
updated access flag to exclude static access and added new test cases for stubbing interfaces , enums , and abstract enums to ensure correct handling of access
replaced direct assignment with ` Objects . requireNonNull ` in ` IntervalFilter . java ` and added null check in ` LowpassIntervalsSource .
added two test methods ` testEntrySetIteratorLastHashNext ` and ` testEntrySetIteratorLastNext ` to the ` MapInterfaceTest
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
change image creation time from milliseconds to seconds to ensure accurate representation of image creation time
add grobcovf2m and grobcovc1 to the singularws list of grobcovs , and
added import for EncryptionUtils and invoked deleteKeyForAccount calls with private and public keys to ensure proper key management for accounts during removal
make keep - alive header configurable in asynchttpprovider
fix postjoinmapoperation when map have no interceptor and lite member
hhh - 14836 - add inlining processor for text , javascript , and cs in standarddialect
removed the ` spillEnabled ` parameter from several constructors in ` BaseHybridHashTable ` , ` BinaryHashTable ` , and `
refactor environment variable retrieval to use Optional for better null safety to improve reliability and maintainability of environment variable handling
fix nullpointerexception in defaultactionmapper when extension be null
added import for SerializableMode in Mockito . java and removed an unnecessary closing brace in PluginSwitch . java to enable the use of SerializableMode
added nullability check for fieldInjectionPoint in AbstractBeanDefinition . java to ensure proper handling of nullable fields during dependency injection
added support for isolation level in select statements and refactored related logic to improve SQL query parsing and enhance compatibility with different database modes
added constants for transport mode and HTTP path in HiveConnection . java to improve code readability and maintainability by avoiding magic strings
added the ` isCacheable ` method to the ` GlobalOrdinalsWithScoreQuery ` class to indicate that the query is not cacheable
added a new file TestStrangeControl . java with a class for testing StrangeControl functionality to facilitate testing of Strange
updated build targets in JsFile . java and JsLibrary . java from " . json " to " . jsfile " and " . j
added selectionStart and selectionEnd variables and methods to set and get selection indices in ShadowEditText . java to enhance functionality for managing text selection
refactor grpc server initialization to use try - with - resources for better resource management to ensure gRPC server is properly closed to prevent resource leaks
added a new method ` use ( String path , Class < ? > routeClass ) ` to the ` Jooby ` interface and
added a null check for fst in FreeTextSuggester . java to throw an exception if lookup is not supported at this time to ensure
replaced newline character handling in string output to ensure consistent line endings across different operating systems
added ABI writer class loading and logging functionality in JavacInMemoryStep . java to enable dynamic loading of ABI processors based on
added a suppression annotation for BooleanMethodIsAlwaysInverted in PubRoot . java to suppress warnings that the method is always inverted
log a warning if the pull message service be shut down .
rename EnergyEndpointer . java file to improve clarity and consistency in naming conventions
refactor preset retrieval logic to use ordered column keys instead of an array to improve readability and maintainability of the code
remove unused import of bufferedinputstream in javadoc
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the files Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
refactor key splitting logic in RandomPartitioner . java to use indexOf instead of regex to improve performance and readability of the code
[ gr - 16536 ] initialize jdk . internal . foreign . abi . fallbacklinker only after registration .
fix : change rolebindingoperationsimpl . create to handlecreate ( )
added debug logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging of session cookie configuration processes
updated the calculation of the file name to use the calendar ' s day of year instead of a hardcoded value to ensure accurate file name comparison
update variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve code clarity by using a more descriptive
added error handling for invalid options in JavapTask . java and created a new class T8033711 . java for testing to
replace ` Collectors . toList ( ) . collect ( toList ( ) ) ` with ` toList ( ) ` in multiple Java files to improve code
changed log level from error to warn in TaskDriver . java and added a shutdown check in TaskDriver . java to improve logging clarity and
[ hotfix ] [ network ] fix wrong max _ required _ buffers _ per _ tiered _ storage when use tiered storage
refactor code to use a helper method for checking success status to improve readability and maintainability of the code
added GL20 configuration to Cuboc and modified LwjglApplication instantiation to enable OpenGL support for Cubocy applications
remove unnecessary check for non - void return type in jimplebody
replaced ` DefaultSourcePathResolver ` with ` SourcePathResolver ` and refactored the ` appendToCommandLine ` method to use ` Arg
log4j2 - 1349 fix test failure ( # 1349 )
added a condition to check if the file path contains the " \ build \ " character in MergeWordsListTask . java to ensure that the
[ # 7278 ] instructor : instructorfeedbackresponsecomment : fix # 7279 instructorfeedbackresponsecommentsloadpagedata
removed unnecessary whitespace in the code to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java with a class A and a test method for object equality to facilitate testing of
replaced stream . skip ( ) and stream . read ( ) with IOUtils . skip ( ) and IOUtils . read ( ) to improve code
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : connection
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching all types of exceptions
added null check and new methods in LruBlockCache for eviction status and overhead tracking to improve robustness by preventing null pointer exceptions and
removed unnecessary check for empty taskCount in RecentsView . java to streamline code by eliminating unnecessary checks
added a listener for instance configuration changes in HelixBrokerStarter and increased sleep duration in HelixServerStarter from 1000ms to 5000
added CoinmateMetadataServiceRaw and CoinmateStatic interface and updated CoinmateExchange to utilize it for fetching exchange metadata to
update defaultmodelvalidator to warn if systempath contain $ { basedir }
pdfbox - 4892 : save the original key of the cosobject instead of create a new one
add ptransform . setdisplaydata ( list < itemspec < ? > > ) to allow customization of displaydata
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR ) ` with ` assertThat ( Object
removed disabled algorithms for security settings in ClientJSSEServerJSSE . java to enhance security by enforcing stronger cryptographic
fix : add ' subcommand ' and ' subcommandgroups ' to optiondata error message
updated module - info . java files for mmm and ppp modules to ensure consistency and clarity in module dependencies
added error handling for unknown server errors in IOSImplementation . java and modified ensureConnection method to throw IOException to improve error management and ensure proper
updated formatting in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to improve code readability and ensure proper
refactor exception handling and add methods for closing writer and record writers in FileSinkOperator and SortedDynPartitionOptimizer to improve error management and resource
added diagnostic output to the task ' s return statement in SchemaGenerator . java to enhance visibility of diagnostic information during task execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a HashSet to track loaded resource paths and modified scanning logic based on its presence to improve performance by avoiding redundant scanning of classes that have
updated variable name from ' o ' to ' testInstance ' and improved error logging for service initialization failures to enhance clarity of error messages
added null check for HttpResponse and modified response handling logic in RoutingInBoundHandler . java to improve robustness by avoiding null pointer exceptions and
added ` natIp ` field to ` EkeyConfiguration ` and updated logging in ` EkeyUdpPacketReceiver ` to include IP address
updated imports from ` io . arrow . buffer . ArrowBuf ` to ` org . apache . arrow . memory . ArrowByteBufAllocator `
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added null checks for header and body buffers in HttpConnection . java and implemented a new test case in RFC2616BaseTest . java to
refactor subscription handling in MultiTimeout . java to use AtomicReference for upstream and requestedInitial to improve resource management and ensure proper cancellation of subscriptions
avoid overlap with starved sstables when create leveledmanifest
added a test annotation to the TestOrcTimezone1 class to facilitate testing of the ORC timezone functionality
refactor metric and timer detection logic to include substrings for enabled metrics and timers to enhance flexibility in handling metric and timer configurations
added error handling for JSON processing in ` PinotSegmentRestletResource ` and simplified object creation in ` TraceContext ` and ` TraceContext
modified the way the default renderer is returned in JTable and added a new test class Test6888156 to improve robustness of the
added conditional logic to check for the existence of the shell environment before adding it to the arguments list to ensure the application uses a valid shell path
updated the deleteWithoutSubscriptions parameter from 10 to 1 in DatabaseCleaningService . java to increase the number of subscriptions deleted by one
replaced List with Set for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
removed the ` deleteFilesAfterClose ( ) ` and ` fileMmapEnableIfSupported ( ) ` methods from ` BTreeMapTest
modified iterator initialization and added a reset method in SortedIntList . java , and created a new test class SortedIntListTest . java to
added unregister method call in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] [ doc ] change rocksdb writebuffer size from 4mb to 64mb
removed unnecessary parameters from the constructor of Style . java to simplify the code by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message encoding in the request
removed JSON graph logging from SamzaRunner to streamline pipeline execution by eliminating unnecessary logging
update jme3 - demo to use jme3 - audio instead of jme3 - audio for now .
updated LoopRotateBadNodeBudget . java file to improve code clarity and maintainability
added ` TypeInformation < ? > ` parameter to the ` convertToMongoType ` method across multiple classes to enhance type conversion functionality to support nested pol
ggb - 1353 remove inputbox . iscomplex ( ) and use unicode . imaginary instead
simonstewart : add test case for send key to active element
added methods to create a scaled image and reduce dimensions based on the target dimensions to enhance image scaling capabilities and ensure valid dimensions are provided
removed unused methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( Engine engine ) ` from ` DBMaker . java ` to
re - added updateshiftstatenow ( ) to make sure the shift state be update .
removed the DETECTED _ ACTIVITY constant from BundleConstants and updated related classes to streamline activity detection handling and improve code clarity
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket .
removed unused import of Buildable from AaptPackageResources . java to clean up the code and improve maintainability
added comments to clarify usage of unused variables in multiple Java files to improve code readability and maintainability by indicating the purpose of these
improve error message for invalid upgrade protocol
updated formatting of blockMode assignment in P11Cipher . java to improve code readability and maintain consistency
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed duplicate code in the Merge . java file to improve code readability and maintainability
deprecated the getConversationID ( ) method in HttpContentResponse , HttpRequest , and HttpResponse classes to ensure compatibility with updated API standards
[ freetts ] use featureprocessors . phoneset instead of com . sun . speech . freetts . en . us .
refactor ` stripQuotes ` method to utilize ` PlanUtils ` for string stripping to improve code readability and maintainability by central
refactor ` updateRendering ` methods to use ` RendererConfiguration ` instead of ` DLNAResource ` for improved clarity to enhance
added resolution and artifact repositories to the DefaultPluginManager to enhance plugin management by including resolution and artifact repositories
( chore ) camel - cxfrsproducer : close the applicationcontext to avoid leak
updated PhysicsClient . java file to improve functionality and performance of physics operations
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failure
added a new File instance in ZipFile . java to initialize the file with the specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
[ core ] make channel non - null by default ( # 5446 )
added logging functionality to trace call stack traces in GenericDAOImpl and introduced StackTraceUtils for package name filtering in ReflectionUtils to improve traceability and debugging
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary tests
mondrian : fix bug with parenthesis in function call
updated queries and data structures in CheckDatabaseHelper to use cluster names instead of type names to improve clarity and functionality of configuration retrieval in the
rename ` supressWarnings ` to ` suppressWarnings ` and add a check for ` jdk . internal . misc . Innocuous
updated JsonTreeReader to throw an exception for unexpected JsonToken states and added a new test for nextJsonElement to improve error handling and ensure that
added support for command - line arguments in TestCommand and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest to enhance flexibility in
added new methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality by allowing
[ flink - 18686 ] [ table - planner - blink ] add support for flink planner in streaming mode
added a call to clear the database in MssqlIntegrationTest . java to ensure a fresh database state for integration tests
updated progress percentage handling and disposal logic in Progress . java and modified RSSReader . java to include displayProgressPercentage to improve user experience by
added a check to ensure the parent file is not an existing file before proceeding to prevent potential errors when the parent file does not exist
added multiple write methods for POIDocument , OutputStream , and File in IOUtils . java to enhance file handling capabilities and ensure proper resource management
replaced println statements with print statements in JavaBuild . java to improve output formatting for better readability
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods in ` ITextRenderer . java
added custom query handling for user search in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance
updated import statements and added default ports handling in NettyHttpServer , DefaultRouteBuilder , and FilteredRouter classes to streamline imports and
updated SnmpTargetHandler to check if the handler is initialized before updating its status and refactored related tests to improve code clarity and
update instructorfeedbackeditpageaction to only instructors with submit privilege be include in the list
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should not be used in new development
refactor path detection logic in FileResolverImpl . java and add WarFileResolverTest . java for testing to improve path handling accuracy and
updated the string representation of newFlushedSize in DocumentsWriterPerThread . java to clarify that the newFlushedSize includes
fix misspelling of dirt . getunlocalizedname ( ) in examplemod
updated whitespace stripping condition from ` stripWhitespaceX ` and ` stripWhitespaceY ` to ` stripWhitespaceX ` and ` stripWhitespaceY
increased the lock value from threads to 1000 in FeedRefreshUpdater . java to increase the lock duration for better resource management
updated the ` deserializeFrom ` parameter to use ` exactSearch ` instead of ` false ` in ` TsFileSequenceReader . java ` and
removed the ` dateFormat ` parameter from the ` makeResultFromDelimitedString ` method in ` CSVSaveService . java ` to simplify method
added import for AWT Dimension and set preferred size of the pane in NavigationShareTab . java to ensure proper sizing of the user interface
replaced OffsetAttribute with a State variable in BeiderMorseFilter and added a test for custom attributes in TestBeiderMorseFilter
refactor Upnp - related classes to improve code organization to enhance maintainability and readability of the codebase
fix warp lens not respect block position
refactor JsonTest to use JUnit 5 assertions and add dynamic tests for JSON serialization to improve test coverage and ensure robustness of JSON serialization
refactor MutableContextDataSupplier class to improve code readability and maintainability
changed exception handling from catching ` Exception ` to catching ` Throwable ` to log a warning instead of throwing an exception to improve error handling
updated the KubernetesMockServer constructor to use HTTPS instead of a hardcoded true value to enable secure connections for testing purposes
do n ' t use graph . graph ( ) in jdk . graal . compiler . defaultjavalang . defaultjavalang
updated response handling in DefaultServlet and DefaultServletTest to use POST instead of METHOD _ NOT _ ALLOWED to enhance security by restricting access
tika - 3746 -- fix for tika - 3748 -- use locale . us in tiffextractor
updated error handling in ShowFileRequestHandler to return a 404 NOT _ FOUND response instead of throwing an exception to improve response clarity and provide
added try - catch functionality to the ReflectorClassWriter and a corresponding test in ReflectorTest to improve error handling and ensure proper exception management
added a ` clamp ` method to the ` Vector ` and ` Vector2 ` classes to provide functionality for clamping vectors to a specified range
added OAuth2 imports and modified access token creation logic in ChainedTokenGranter . java to enhance authentication handling and ensure requested scopes are
refactor BC _ instanceof class for improved readability to enhance maintainability and clarity of the code
replaced the method call to save flags with a static final logger instance to improve logging consistency and facilitate easier debugging
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test structure and prevent pollution during
hhh - 14663 make nativequery implementor and not return null for unknown type
added caching mechanism for font attribute values in SunLayoutEngine . java to improve performance by reducing redundant checks for font attributes
use intarraylist instead of intbigarray in typedset .
simonstewart : change the remote driver to use sessionid instead of sessioid
refactor BrokerRequestUtils to improve code structure to enhance maintainability and readability of the code
refactor InjectorBuilderImpl to use a map for managing instances and improve error handling to enhance clarity and correctness in managing injectable instances
updated path handling in ` BuildTargetToRawTargetNodeTransformer ` to use ` buildTarget . getBasePath ( ) ` instead of ` cell
added null check for the ' val ' variable before parsing it to avoid potential NullPointerException when ' val ' is null
added keepalivemanager to keepalivemanager for jabber connection .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to improve the default load factor for better performance
added methods to retrieve all data type physical variations in VectorizationContext and updated related classes to utilize these data types in the vectorization process
move htmlassettranslator and stringsresourcetranslator to com . google . zxing . client . j2se
updated conditional logic in OverviewState . java to include a check for ENABLE _ OVERVIEW _ ACTIONS and remove the shelf from
added JPA @ Entity annotation to BaseActivityEventEntity . java to enable persistence of the BaseActivityEventEntity class
added partition statements for various touch interactions in NavBarSwipeInteractionHandler and TouchInteractionService , and modified SYSTEM _ TRACE in TraceHelper
added a new file ` InvalidOptions . java ` with methods to test and validate command - line options to ensure proper handling of invalid options and
added a check to ensure the number of supported display displays matches the number of supported bounds to improve error handling and provide clearer diagnostics for display
refactor ` getClientIdAndClientSecret ` method to ` OAuth20Utils ` in ` OAuth20UsernamePasswordAuthenticator ` to improve code organization and
changed the default value of ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` to
set default shortcut status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure proper handling of default shortcuts during package updates
camel - 16400 : seda component should not set a default size of 500 for unbounded / bounded queue .
add batchupdatestart ( ) and batchupdateend ( ) to make sure start ( ) and end ( ) be call before start ( )
added HttpClient configuration and validation annotations to ThirdEyeApplication . java to enable HTTP client configuration for improved integration with the application
added sorting functionality to JobInstanceFetchRequest and modified JpaJobPersistenceImpl to include it to enhance data retrieval capabilities by allowing sorting of job
updated the ` cancelCryptoFacilitiesOrder ` method to utilize ` adaptCryptoFacilitiesCancel ` instead of throwing an exception to enhance functionality
make sure keyboard be hide when click on av
use sulong . memcpy ( ) instead of direct call to memmove ( )
removed unnecessary whitespace in method declarations in BindLdapAuthenticationHandler . java to improve code readability and maintain consistency
ggb - 1181 make sure tooltips be not show in non - blocking mode
updated DefaultDateTypeAdapter to accept a customizable time style and modified GsonBuilder to include a timeStyle parameter to enhance flexibility in date
updated the format of the playerSet string from " < UID : " to " ( ) " to improve clarity of player identification in the
added a check to return a List < Z > if the list is empty to improve handling of empty lists in the code
added exception handling for InvocationTargetException in ParametricCallable . java to improve robustness by throwing CommandException instead of InvocationTargetException
updated the ` getLikeExpression ` method to include a boolean parameter for determining if the expression is a regular expression to enhance flexibility in expression
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to provide functionality for starting and stopping streams
updated ` runChild ` method to set locale and default locale in ` LuceneTestCase . java ` to ensure that all available locales are
refactor multiple Java classes related to PostgreSQL to improve code structure and enhance maintainability
refactor context handler initialization into a separate method to improve code readability and maintainability
added unit test base on user forum issue
nifi - 2246 : fix test to check for the presence of the ' error ' attribute
refactor returnTypeSubstitutable methods for improved clarity and structure to enhance readability and maintainability of the code
added a ThrottleType enum and modified the processThrottled method to handle throttling based on its value to improve flexibility and control over the
simplified color argb assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve
renamed classes Annotation and AnnotatedElement to improve clarity and consistency in naming conventions
added a new ` Model ` interface to the ` org . apache . poi . hssf . model ` package and updated ` Sheet `
camel - 16400 : camel - http - * filter should use camel _ filter _ pattern instead of regular expression .
added a ` clearEntityManager ` configuration option to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to control whether to clear
added null checks for shortcuts and intents in multiple classes to improve error handling and prevent potential NullPointerExceptions
changed instantiation of TwoDimensionalCollectionValuedMap to include a true parameter to enable the instantiation of TwoDimensionalCollectionValuedMap with a specific
updated exchange specifications from " btc - e . nz " to " wex . nz " and changed the exchange name from " BTC -
added null checks in OrcEncodedDataConsumer and added null check in EncodedTreeReaderFactory to improve code robustness and prevent potential NullPointerExceptions
added a null check for files in the SegmentInfos class and a new test for opening the IndexReader after deletion to ensure that a valid index
( chore ) camel - fhir : fix camel - test - infra - fhir - spring - boot - integration - integration -
refactor calculation of percentage value to store it in a variable before returning it to improve code readability and ensure percentValue is non - negative
updated limit checks from ` less than 1 ` to ` less than or equal to 0 ` in ` RangeInputStream . java ` and ` Range
camel - 16462 : camel - core - optimize rout engine to reduce stack frame in use during rout
fix checkstyle issue in ` ` hl ' ' module
updated package structure and class inheritance for NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to align with Lucene ' s testing framework
[ hotfix ] [ table - common ] set nextinput in outputhandler for statefuloperator
remove unnecessary null check before setting bitmap shaders for fill and stroke in Area . java and Line . java to simplify code and improve performance
added database existence checks and modified test database existence methods in Blockchain and BlockchainTest classes to ensure blockchain data integrity and improve test reliability
added trimming of whitespace from the group value in SQLPlusSupport . java to ensure cleaner output by removing unnecessary whitespace
do n ' t need to wait for the socket to be fully read .
[ web ] fix wrong divider position in docksplitpane
added healthcheck metrics and updated health check logic in PinotControllerHealthCheck . java to improve monitoring and error handling for controller health checks
set visibility of sharedAvatars view to GONE in LocalFileListAdapter to improve UI responsiveness by hiding shared avatars
move mebis . scss to geogebra . scss
updated conditional checks from " > = " to " < = " in BurstSendReceiveUdpPing , ReceiveSendUdpPong
added logging condition to execute commands only if log level is not FINE to improve performance by avoiding unnecessary execution when logging is not enabled
replaced CountDownLatch usage with assertWaitUntil for span completion in EventBusTracingTestBase . java to improve test reliability by ensuring
refactor QueryParser to initialize Locale directly and add getter / setter methods for locale to improve code clarity and encapsulation of locale management
fix : use linkedhashset instead of hashset in entrycustomizationdialog
[ drools - 7 ] make rulebaseimpl public and add some javadocs
added OcspUnauthorized class and modified PKIXRevocationChecker and OCSPResponse to handle UNAUTHORIZED case to improve handling of OCSP responses and
added server state management and adjusted sleep duration in SSL . java to ensure proper handling of server failures and improve responsiveness
added a new constant ` COUNTER _ OPEN _ CONNECTION _ COUNT ` and methods to track the number of open connections in ` SourceCounter `
add builder . fields ( fielddefinitions ) and execute ( executionstrategy . executionstrategy . fields ( ) ) to allow field definition to be add
added a new method ` getSrcRoots ( ) ` and refactored the ` createDefaultJavaPackageFinder ( ) ` to use it to
updated the writer initialization in ScriptExecutable . java to use PrintWriter for improved output handling
fix flaky test in filesourcetextlinesitcase
added support for processing DataTable in JRubyStepDefinition to enable compatibility with Cucumber ' s DataTable functionalities
updated method names and parameters in SearchImagesRenderer and ApacheHttpClientMediaWikiApi for consistency and clarity to improve code readability and maintainability
updated ReadSentimentDataset . java for improved functionality to enhance data processing efficiency and maintainability
improve error message when parse error near character in formula
added getter and setter methods for the socket address in WebSocketClient . java and modified visibility of the exception class in WebSocketFuture . java to enhance
[ java ] fix race between delete aeron and archive in consensusmoduleharness .
refactor size setting logic in WidgetGroup to use setSize method to improve code readability and maintainability by reducing redundancy
updated sessionFixationAttribute comparison to use Boolean . valueOf for clarity to improve type safety and avoid potential null pointer exceptions
refactor channel launch logic in LALogicLinesFragment . java to use a switch statement for edgeOption to improve code clarity and
danielwagnerhall : implement linear backoff for chrome binary
added HTTP method and route handling to ` TraceExchangeFilterFunction ` and updated ` ClientResponseWrapper ` to include ` HttpMethod ` and ` route `
use Integer . MIN _ VALUE for gcBefore when shouldPurge is true . patch by jbellis ; review by stu hood for
updated rendering intent return value and modified color conversion logic in ICC _ Profile and ColorConvertOp classes , and added a new test class for
[ # 7370 ] feedback contribution question : allow ` ` on ' ' and ` ` off ' ' ( # 7371 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] suppress findbugs warn in kafkaexactlytimesink
added PGConnection to the connection proxy in PooledConnectionImpl and implemented a test for PGConnection in BaseDataSourceTest to enhance connection handling and
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
change log level from warn to info for token encryption configuration to provide clearer insights into the authentication process for users
marked Hazelcast class as deprecated to indicate that it should no longer be used in favor of an alternative implementation
updated command reporting logic and introduced topology update event handling in the Kerberos server action classes to improve the handling of Kerberos update events and enhance
added support for reading and writing iterators in NamedListCodec to enhance the functionality of NamedListCodec to support iterable and non - map values
log warn if assigncompletelyLostPartitions is call without exception
added a schema inclusion rule to the ApiExample class to allow users to exclude public schemas from API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct expected value for
[ sdo ] ensure that the coordinate sequence be valid before create a linear ring .
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve base name and dimension
added a new method ` setDebugEvaluationOutputForNextEval ` to ` FormulaEvaluator ` , ` SheetUtil ` , and ` XSS
test : migrate refactoringtest to junit 5 ( # 4649 )
removed the ` isLiveTvDirectPlayEnabled ` parameter from the ` ExoPlayerProfile ` instantiation and modified the condition in ` Play
added a return statement to the DynamicStyleBar class to ensure proper termination of the method execution
added logging statements to manage property settings for the database in Utils . java to improve visibility into property management for better debugging and monitoring
refactor ReactiveAuthorizationManager for improved authorization handling to enhance security and maintainability of the authorization process
added a check for boolean types alongside object types in MethodEmitter . java to ensure proper handling of boolean types in the code
[ gr - 16536 ] fix npe in llvmbitcodefunctionvisitor .
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
add unit test for caffeine cache proxy
add a method to calculate the bounding box based on vertex data to enable accurate spatial calculations for rendering and collision
added a new option to determine the hash function for computing target hashes to allow users to choose between SHA1 and MURMUR _ HASH
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings for graphical elements in ListViewMultiChartActivity and updated highlight paint logic in BarChart to enhance visual
remove duplicate assignment of sgPathPlanMap in ClusterPlanRouter . java to streamline code by eliminating redundancy
updated InfinispanRemoteProducerIT . java by changing the value from 2 to - 1 to correct the configuration for producer integration tests
added locking mechanism in MavenDependencyResolver and updated repository ID in MavenRoboSettingsTest to improve thread safety and ensure the correct Maven repository is
updated the fragment shader to include a conditional statement for GL _ ES to ensure compatibility with different OpenGL ES configurations
hbase - 20519 use set instead of sortedset for rsgroupinfo # getservers ( )
added error handling and changed log level from warn to debug in TagLibConfiguration . java to improve robustness by avoiding unnecessary warnings when T
updated version handling in CustomAnalyzer and added a custom token filter factory in TestCustomAnalyzer to ensure compatibility with Lucene ' s default match version
added a test for reading package archive info from a set package archive file to ensure correct retrieval of package archive information from the package manager
replaced direct method invocation with MethodUtil ' s invoke method and added package access checks to enhance security and ensure proper access control during method invocations
updated import statements in GradleBuildService . java and added progressUpdateTypes method in Main . java , and modified progress listener initialization in
removed unnecessary synchronization block in AndroidWebDriver . java to improve performance by avoiding unnecessary synchronization
refactor initialization failure handling in HikariConfig and HikariPool classes to improve clarity and maintainability of error handling logic
removed the ` int timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` class to
changed the ` isNative ` field to be transient and modified the ` addEntry ` method call to use ` false ` instead of ` read
fix the missing of ` ` s ' ' in format
rename ruleenablehandler to ruleenablementactionhandler for clarity
fix checkstyle issue in util / jsp / tag / tagsupport . java
updated logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager for better clarity to enhance debugging information for authentication processes
updated source and sink options in KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to improve clarity and consistency in naming con
added error handling for null repository retrieval in UsersPanel . java to improve robustness by providing user feedback when a repository cannot be found
added support for additional font formats " . otf " and " . OTF " in the SunFontManager class to enhance compatibility with font
updated the variable name from ` targetType ` to ` argType ` and modified the equality check logic to improve clarity and accuracy in identifying the
replace " OFF " with " SEVERE " in the Grep . java file to improve clarity of error messages for better debugging
updated logging statements in FaultTolerantChunkProcessor to check if debug logging is enabled before logging messages to improve performance by avoiding unnecessary string
do n ' t include test . java if they do n ' t exist
added a condition to check if the folder should move to the default screen on the home intent to enhance user experience by ensuring the folder is open
updated maximum bitrate from " 110 " to " 30 " in PMS . java to improve bitrate configuration for better performance
removed the ` getOptions ( ) ` method from ` CommandLineParser ` to streamline the process of retrieving options by eliminating duplicate entries
updated return statement to trim whitespace from the description to enhance data integrity by removing leading and trailing whitespace
updated the output filename in XOMParserTest . java to ensure the test uses the correct output file path
simplified log message in processbesunoderrunner ( # 3995 )
added ` getLoadedMusic ` and ` getLoadedSound ` methods to ` MusicLoader ` and ` SoundLoader ` classes to
updated import statements in OnBeanCondition . java for clarity and consistency to improve code readability and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for test cases related to b / 215673732
set lrPauseButton ' s selected state to false in CPUFeature . java and MemoryFeature . java to ensure that lrPauseButton is not
replaced instances of ` accountsPrefCategory ` with ` mAccountsPrefCategory ` and refactored related methods to improve code clarity and
added ' available ' to the presence of ' available ' to the presence of ' available '
modified the initialization of StringBuilder in ObjectInputStream to accommodate varying utflen values to optimize memory allocation for improved performance
disable spring . metrics . export . statsd in web endpoint integration test
refactor InterruptedException class for improved clarity to enhance code maintainability and readability
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor connection check logic for improved clarity and structure to enhance readability and maintainability of the code
( chore ) camel - core : fix checkstyle issue in util / argumentarraymessagemapper
fix test failure due to wrong collection id
updated PasscodeManager to use FLAG _ ACTIVITY _ REORDER _ TO _ FRONT instead of adding AuthenticatorActivity to ensure the activity
refactor ( template ) : remove deprecation in patternparameterconfigurator . java ( # 2178 )
changed the return type of the ` beginDraggingWidget ` method from void to boolean and added null check for ` image . getDrawable
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root and collect components in DynamicStyle . java to prevent potential NullPointerExceptions when root is not initialized
add a confusionmatrix to maxenttagger and maxenttagger to save the confusion matrix to a file
bug 60702 - jmeter thread : do n ' t run post - processors if not ignore
added unit tests for Bluetooth headset methods and modified import statements in ShadowBluetoothHeadset . java to improve test coverage and ensure correct
corrected a typo in the method name from " # autowire " to " # autowired " in PropertyBindingSupportTest
added " clone " method to the " objectMethods " set and introduced a new constant for the " finalize " method to enhance object management by
added null check for counters in IntegrationTestBigLinkedList . java to prevent runtime errors due to insufficient YARN configuration
only send not _ implemented message when getinstanceinfo can not be implement .
updated the variable name from ' service ' to ' serviceId ' and added a match check for the registered service ID to improve clarity and ensure
added a null check for the activity before running the UI thread in PhotoFragment . java to prevent potential NullPointerException when accessing getActivity ( )
[ hotfix ] fix checkstyle issue in util / logging / heartbeat / heartbeatmonitor . java
added methods to set and get the string type in DatabaseAdaptor and modified access modifiers in JDBCSessionDataStore to enhance flexibility and allow subclasses to
updated test cases in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " and
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
[ drools - 2200 ] allow decisiontable output to be null if negative ( # 2249 )
texturemap : make sure the texture map creation finish before move on macos
added a tooltip text to the showCGCP checkbox to improve user interface clarity by providing context - sensitive tooltip
replaced ` owner . getTypes ( ) . add ( e ) ` with ` owner . addType ( e ) ` in ` EnumFactory `
allow customization of the action text and description in the ` ` reload / restart ' ' and ` ` hot reload ' ' app . (
ggb - 1353 use stringtemplate . defaulttemplate instead of string . getlabelsimple ( ) in ca
changed the method call from ` intValue ( ) ` to ` doubleValue ( ) ` for ` BRIGHTNESS _ FACTOR ` to ensure
update sscm history parser to support context and date parsing
added a boolean parameter to the createUser method and implemented listUsers and userIsAdmin methods to enhance user management capabilities by allowing admin users to be
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a new test
updated logging statements in DynatraceExporterV2 . java and DynatraceExporterV2Test . java to use placeholder syntax
updated method parameter names in Context , Request , and Response classes for consistency to improve code readability and maintainability
update spongecommon for spongecommon / spongecommon / spongecommon # 162 .
updated the assertion in LifecycleUtilsTest to compare the execution ID with the binding ' s execution ID to ensure the test accurately reflects the
added checks for CreateSmartContract and TriggerSmartContract types in Wallet and updated contract retrieval logic in GetContractServlet and TriggerSmartContractServlet to
added package - info . java files for various packages in the codebase to organize the codebase under specific packages for better organization and clarity
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a while loop instead of synchronized block to improve performance by
updated JavadocTool to ignore duplicate JavaFileObjects and refactored argument handling in T7091528 to improve performance by avoiding unnecessary
changed the default value of STRIP _ IPV6 from " true " to " false " and corrected the substring logic in HostPort .
updated ` LoginServerTokenEndpointFilter ` to accept a list of ` addNewUserParameters ` and modified the constructor to accept it to enhance flex
added a new constant ` C _ KEY ` and updated language checks in ` LanguageFactory ` and ` CPPParserTokenManager ` to support
refactor thread executor implementation into a new MoreExecutors class to improve code organization and maintainability by encapsulating executor creation logic
added HTTP headers and assertions for cache control and expiration in FormAuthenticator and ConstraintTest to enhance HTTP response handling and improve test coverage for cache control
updated error logging to include the exception message to improve error reporting by providing more context about the error
updated HSSFTests class to include new test classes and modified the HSSFTests class to enhance test coverage and improve clarity in
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for output before retrieving its absolute path to avoid potential NullPointerException when output is null
added access controller settings for external resource resolution in Java2DRenderer . java to improve resource management during external resource resolution
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that the application does not fail on unsupported fonts on Windows
updated ` main ` method to throw an exception and refactored CPU time validation logic to improve error handling and ensure CPU time validation is validated
added a check for empty comments before verifying the last whitespace in TabsAndIndentsVisitor to ensure that whitespace checks are only performed when
updated assertions in TestTriggerIntegration to use assertTrue instead of assertEquals and added a logging statement to improve test reliability and clarity by
updated comparisons in DatabaseChangeLog , RanChangeSet , AllRanChangeSetFilter , and NotRanChangeSetFilter to use case - insensitive
modified the ` getString ` method in ` ShadowBundle ` to return a default value when the key is not found to enhance functionality by providing a
updated date and time formatting logic in TweetActivity . java to support military and non - English locales to enhance user experience by
nifi - 5396 : return an empty list if no connection be connect to standardprocesssession
updated keyboard request logic and refactored focus handling in DetailFragment . java to improve user experience by ensuring keyboard visibility and focusable in touch
updated classpath handling in App . java to accommodate spaces in the canonical path to improve robustness by preventing potential issues with file paths
make sure solve ( ) be call in a thread - safe manner
added import statement for org . springframework . integration . core . Message in GenericMessage . java to enable integration with Spring ' s Message interface
refactor SQL query construction in PostgresConnector and add a new join method in TaskAttempt to improve code readability and facilitate
updated file filter handling and selection logic in AquaFileChooserUI . java to ensure the filter is only set when it does not already
fix thread safety issue in p2ptransportmanager
updated boolean handling in ArrayPtg and added a test for toFormulaString method in TestArrayPtg to improve clarity of boolean representation
updated import statements in PGtokenizerTest . java for clarity and consistency to improve readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator and add new test for nested anonymous classes with parameters to improve code clarity and ensure correct
added sequence creation and default value setting for auto - increment columns in AddAutoIncrementChange . java to ensure compatibility with PostgreSQL ' s auto -
updated byte handling logic in DataInput . java to improve clarity and correctness in reading UTF - 8 characters
updated assertions in ImageParserTest to check for both VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing dimensions to ensure accurate metadata parsing for image parsing
updated parent assignment to get the grandparent in Component . java to ensure correct hierarchy traversal for component parent - child
reformatted code for improved readability to enhance maintainability and clarity of the code
use engine _ free instead of engine _ finish in nativecryptotest .
added iteration handling in InterleaveControl , RandomController , UserParameters , ConstantTimer , and GenericController classes , and refactored event firing
updated HttpContent handling to ensure proper release of resources to improve resource management and prevent potential memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of temporary logs during tests
added a condition to launch the activity if the URL contains " twitter : / / " and modified the URL loading logic to handle Twitter URLs to
added a client initialization and awaiting host status in DeploymentGroupTest . java to ensure proper handling of host status during tests
updated logResult from false to true for " listLabels " to enable listing labels in the visibility controller
increased ` MaxAutoRetries ` from 0 to 25 in ` RestTemplateRetryTests . java ` to increase the maximum number of retries
removed unnecessary print statement from TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to improve code cleanliness
added support for the FRACTION resource type in the PackageResourceLoader and related classes to enable loading and representation of fraction resources in the application
removed file write confirmation check from BasicFrame . java to simplify code by eliminating unnecessary file write confirmation
added checks for ` groupId ` and ` artifactId ` in ` UpgradePluginVersion . java ` to ensure that both ` groupId ` and ` artifactId
hbase - 20519 throw quotaexceededexception instead of donotretryioexception in namespacestatemanager # updat
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
refactor TestFuzzPreLoop class to improve code structure to enhance maintainability and readability of the test cases
added a check to ensure f0 is non - negative in HTSVocoder . java to prevent potential errors when f0 is negative
updated logging messages for catalog retrieval and added null checks for primary and foreign key columns to improve logging clarity and prevent potential NullPointerExceptions during database
improve performance by use a synchronizedstack instead of a thread - safe hashmap .
added functionality to control whether to allow empty pages based on user preferences to enhance user experience by preventing unnecessary operations on empty screens
added a deprecation warning for cucumber - needle using cucumber - cdi2 or cucumber - jakarta -
refactor ShadowThemeTest , ShadowArscAssetManager , and ShadowVMRuntime classes to improve theme management and object address handling to enhance code
updated error message formatting in VerifyFast . java for better clarity to improve readability of failure messages for better debugging
no effective change - remove dbmigration annotation from ehistory2
updated method handles for GETPROTO and SETPROTOCHECK in ScriptObject and modified conditional logic in CodeGenerator to improve accessibility and functionality of prototype
added a randomness parameter to the shuffle method in TestFilterDirectoryReader to enhance randomness of readers during testing
updated display name logic in UsersAndGroupsSearchProvider to differentiate between remote clarification and known remote clarity to enhance user experience by
updated path handling in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank to improve robustness by avoiding potential null pointer exceptions
updated closing brace formatting in multiple Java files to improve code consistency and readability
updated cache name assignment and backup count check in AbstractCacheService . java to improve clarity and ensure correct backup count validation
updated the comparison logic for pageNumber in ValidationResult . java to ensure accurate validation of page numbers in the validation process
added a null and equality check for the focusedWidget in UIDropdown . java to ensure that the current instance is not null and matches the
fix checkstyle issue in util / soundutil . java ( # 741 )
refactor ApplePackageDescription to use a new method for retrieving platform flavors to improve code clarity and maintainability by centralizing flavor
add test for clickhousestatementimpl . clickhousifysql ( ` ` show ololo from ololoed ' ' )
changed method names from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
fix typo find by codespell on fossies . org
added a new file ` TestGetLoggerNPE . java ` to test Java AWT ' s logger functionality to ensure proper handling of null
added a ` data ` field to ` PathSharingContext ` and modified methods in ` ActionDirectory ` , ` ScriptedProcessor ` , and
do n ' t cast object [ ] to object [ ] in espressorootnode .
added support for " NEXT VALUE FOR " in NextValExpression and updated related classes to enhance functionality to support multi - row value insertion in SQL
add link to substratevm . resources . md to improve error message
refactor BoundedLocalCache to improve buffer management and add a test for pending writes in BoundedLocalCacheTest to enhance performance and ensure
added support for leverage _ level parameter in QuoineExchange and introduced orderDirection field in QuoineNewMarginOrderRequest to enhance
added boundInitialization method to PropertyDescriptor and created a new Test7192955 class to ensure properties of MyBean are bound correctly to facil
updated display mode handling in LwjglGraphics to utilize a new SetDisplayModeCallback interface to improve flexibility in managing display mode
added a check to reset buttonsAwatingRelease if it is not null to ensure proper cleanup of resources when the component is destroyed
fix issue where text wrap width be incorrectly calculate for empty line
updated error message formatting in XSLTErrorResources _ it . java to improve clarity and consistency in error reporting
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
danielwagnerhall : use string . format instead of string concatenation
replaced deprecated method ` getNamespaceURI ` with ` getNamespace ` in ` StaxXmlPullParser . java ` to improve code clarity and
added support for nested joins configuration in multiple test classes to enhance flexibility in testing by allowing nested joins configuration
server : fix admin - only access to root admin only
added caching functionality for JavacFileManager in SourceFileManager and modified the CompletionTaskProcesor constructor to include a cursor parameter to
set default values for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in HiveConf . java to ensure proper configuration
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest ' s assertThat
make outputhandler nullable in metadatarenderer and textrenderer
fix ( tcp ) : fix issue with symbol file mapping
removed debug print statements from TermFilterTest . java to clean up the test output and improve readability
removed the Reflection class and updated the TypeConverters package to streamline the codebase by eliminating unnecessary components
refactor ThreadlessExecutor to use private methods for better encapsulation to improve code readability and maintainability by reducing dependency on the shared
refactor DateTimeFormatter to streamline error handling and add new test cases for DateTimeException and IOOBE to improve code clarity and ensure proper
rename CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and update related references to improve clarity by indicating that the value is in KB instead of
added a case for WILDCARD in Types . java and created a new file T7034495 . java with generic interfaces and class definitions
replaced the ` do ` loop with a ` while ` loop in ` LotsOfEvents . java ` to improve code readability and
modified conditional checks in TransclusionDecideRule . java to improve clarity and control flow to enhance code readability and ensure proper handling of
remove unused micronaut version print code ( # 6640 )
added assertions to verify the behavior of the " Print _ Area " record and its properties in TestBugs . java to ensure the correctness of
updated MindIconFactory to return a description string when the name starts with a slash to improve clarity by avoiding hardcoded descriptions when
modified the ` onHomeIntent ` method to accept an ` internalStateHandled ` parameter to enable handling of the home intent based on the internal
refactor dependency tree preference handling in CxxBuckConfig . java to improve clarity and maintainability of dependency management logic
added showDetails method implementations across multiple activities and updated FileDisplayActivity to utilize the active tab for displaying file details to enhance user experience by
updated function names from " $ apply " and " $ applyStatic " to " apply " and " applyStatic " across multiple Java files to
simonstewart : randomize symbol size for minimalencoder .
updated the format of headers and parameters in SourceBuilder . java to include optional requirements and since information to improve clarity and usability of the
added a call to ` mAdapter . notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to ensure the adapter updates its
removed the method setDefaultWALSyncMode from ShadowSQLiteConnection . java to streamline the code by eliminating unused functionality
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correct behavior of
camel - 15850 - camel - aws : remove unused getters from defaults3 crtasyncclient
updated test cases in ParserTest . java to reflect the correct expected limits for corrupted streams to ensure accurate testing of the parser ' s error handling
updated assertEquals message to include the collection content to improve debugging by providing more context in assertion failure messages
make sure that ifnode be not add to the graph ifnode be already add to the graph .
mob - 1346 : avoid null pointer exception in getexternalimage ( )
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
added a limit parameter to the getOrderBook method in YoBit and updated its implementation in YoBitMarketDataService to allow users
move gotwrongoomeexception to vm . share . gc instead of metaspace . stresshierarchy . common . exceptions
nifi - 5396 : set max string length to integer . max _ value in standarddataflow .
updated engine retrieval to use a default value of " " instead of a hardcoded value to improve flexibility in engine configuration by allowing an empty
renamed ` FullIterator ` to ` WheelIterator ` and updated related references in ` TimerWheelTest . java ` to improve cl
improve error message when generate a bug pattern
increased the timeout duration for waiting chunks in LocalChunkProviderTest . java from 3 seconds to 10 seconds to allow more time for chunk
changed the visibility of the menu item ' s uncompleted checklists option from true to false to hide the uncompleted checklists option
refactor DefaultResultSetHandler to resolve discriminated result maps and introduce a new Contract class with associated fields to enhance result mapping functionality and
added null checks for defaultHome and mUpdateRegisteredPackage in OverviewComponentObserver . java to improve robustness by preventing potential NullPointerExceptions
removed the VertxGen annotation from PumpImpl . java to streamline code by eliminating unnecessary annotations
removed unnecessary type casting for FileDisplayActivity in FileDetailFragment and OCFileListFragment to improve code readability and reduce unnecessary type casting
added trimming of whitespace from tokens in ConfigAttributeEditor and implemented a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure that
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAux to improve code clarity and maintainability
[ gr - 33232 ] fix unnamed module lookup in dynamichub .
update relKind assignment logic in DatabaseMetaData . java to handle " SYSTEM TABLE " type based on the presence of " pg _ " in the
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java to 2.18 . 1
updated the RQST field description from - 1 to 1 in ThriftHiveMetastore . java and modified exception handling in HiveMeta
added a new module - info . java file for the core module to define module exports and dependencies for better encapsulation and dependency management
added conditional logic to manage flush state and fill interest in SslConnection . java to improve handling of connection state and ensure proper flushing behavior
updated Log4j2LogDelegateFactory to return the logger instance if it exists and added a new test class for initialization errors to improve logging
refactor execution environment handling and add server VM checks in Test7029048 . java and Test7029048 . java
renamed several classes related to MongoDB operations to improve clarity and consistency in naming conventions
added a new property " org . postgresql . ssl . LibPQFactory " to PGProperty . java to enable SSL connection handling for PostgreSQL
disable interprocesssemaphoreregions test due to flakiness
updated the iteration over theme keys to use a sorted list to improve readability and maintainability of the code
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to support OSV terminal support to enhance terminal
added support for " . gr " and " . grs " file extensions in ClassType . java to ensure compatibility with both regular and regular
replaced HashMap with TreeMap for combined vectors and refactored related code for clarity to improve performance and readability of the code
added a condition to check if ` i ` is within the bounds of ` names . size ( ) ` and ` values . size ( )
refactor WebSocketPolicy class to improve WebSocket handling logic to enhance performance and maintainability of WebSocket connections
changed static variables and methods to instance variables for readPhoneStatePermission and accessWifiStatePermission in ShadowTelephonyManager and ShadowW
implement standardmessageresolver . resolvemessage ( context , origin , key , messageparameters , performtemplatebasedresolution , performoriginbased
updated constructor declarations for MethodVisitor , TraceClassVisitor , and CheckClassAdapter to use wildcard generics to improve type safety and eliminate unchecked cast warnings
added LoggingAuditService and UaaAuditService classes for user authentication logging to facilitate easier debugging and monitoring of user authentication processes
updated the toTemperatureState method to accept nullable TemperatureObject and TemperatureUnit as parameters to enhance flexibility in handling temperature values and
updated conditional logic in BeanDefinitionInjectProcessor to include a check for abstract classes to ensure proper handling of non - abstract classes during proxy processing
camel - 16400 : camel - http - add httpproxyhost and httpproxyport option to allow to configure the http proxy .
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to ensure compatibility with the latest template encoding requirements
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable serial filtering of the system for improved
( chore ) camel - core : add pool size to log message
replaced the ` forceFinished ` method with ` forceFinishScroller ` in multiple classes to simplify the method signature and improve code readability
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to include ` rawRealtimeTableConfig ` and applied environment variables to enhance
improve error handling in disallowvalidator and refvalidator
updated inline QSB handling to use ` closestProfile ` instead of ` displayOption ` and introduced new constants for display options to improve flexibility
updated ` createClassPath ` method to include ` throws Exception ` and replaced ` % 20 ` with ` URLDecoder . decode ` to improve error
updated regex patterns in TransformSteps . java to replace ' 10 ' with ' ( . * ' to enhance flexibility in method argument handling
fix for npe in toolkit , also fix fillrect ( ) in java2d
replaced hardcoded timeout values with a variable ` timeoutMs ` in ` FaultToleranceTest . java ` to enhance flexibility by allowing dynamic
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
added a method to set the Docker image URL in the Environments class to enable dynamic configuration of the Docker image used in the environment
[ drools - 7 ] call system . gc ( ) to fix memory leak in knowledgeagenttest
refactor multiple Java files to improve code structure to enhance maintainability and readability of the codebase
added a new method ` copyFile ` to handle file copying and log errors if the target and source files do not exist to improve error handling and
rename method ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in method naming
[ pytorch ] fix npe in ndarray . todevice ( ) ( # 1748 )
added a type check for ` xml . Document ` before visiting XML elements in ` Autodetect . java ` to avoid potential `
replaced ` InstrumentationTestCase ` with ` JUnit4 ` annotations in ` NotesHelperTest ` and ` ReminderHelperTest `
removed conditional checks before adding new gas limit rules in CommonConfig . java to streamline the configuration by eliminating unnecessary checks for frontier
changed the visibility of ` setupData ( ) ` from public to private and removed redundant calls to ` setupData ( ) ` across multiple test
replaced the ` autocommit ` parameter with ` runInTransaction ` in the ` ChangeSet ` constructor and related methods to improve clarity
( chore ) camel - triple : fix potential npe in triserverservicestream
[ hotfix ] [ doc ] add documentation for restartstrategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct handling
refactor Common class to improve code readability to enhance maintainability and facilitate future feature additions
refactor Launchable . java to use a context layer for app launching to improve resource management and enhance logging capabilities during app launching
[ hotfix ] [ stream ] fix typo in streamexecdeduplicate javadoc
[ kafka ] log error when send kafka message to topic
added PersistentPropertyAccessorFactory and isImmutable method to SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable configuration of persistent property accessors
make sure setcoord ( ) return true if the point be undefined
added scrolling functionality to AskGestureEventsListener to improve user experience by enabling scrolling on the X and Y axis
make compareto work with arraylist . size ( )
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
updated the method calls to retrieve folder icon attributes in StatsLogCompatManager . java to enhance the accuracy of folder state representation in logging
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file ` TestSkeletonPredicates . java ` with a test for loop predicates in the ` TestSkeletonPredicates . java ` file to
updated SelectionHighlighter to improve handling of TransferHandler and added equals and hashCode methods to enhance object comparison and hashing functionality for better object comparison and
added a new file ` StringResultConverter . java ` and modified ` AsmRuntime . java ` and ` AsmUtil . java `
camel - 19751 : camel - test - infra - activemq : re - enable camel - aws2 - * test (
corrected the condition from " ! = 0 " to " = = 0 " in the JansiWinSysTerminal class to ensure proper
added null checks and buffer limit adjustments in BufferUtils . java to improve buffer management and prevent potential NullPointerExceptions
updated the expected value for the ` dataDir ` property in ` TestSolrDiscoveryProperties ` from " data / " to " data " to ensure
updated OS detection logic in AutoUpdaterServerProperties . java to handle Windows and Mac OS pre - 10.15 environments to ensure compatibility with mac
changed lockFile to lockName in FSDirectory and Lock classes to improve clarity by using a more descriptive lock name instead of a File
replaced appIcon reference with allApps reference in Overview . java to improve clarity by using a more descriptive variable name
updated method signatures to use ` ClientDatagramEndPoint . this ` instead of ` Invocable . InvocationType ` to improve code clarity
corrected the spelling of " oreder " to " order " in the GET _ STEP _ EXECUTIONS string to improve code
updated button handling logic in LwjglInput . java to ignore unknown buttons to improve input validation by ignoring unknown buttons and avoiding errors
[ task ] add test for approve / reject in taskrestrepositoryit
replaced instances of ` logger ` with ` LOGGER ` across multiple classes to standardize logger naming conventions and improve consistency across the codebase
removed the ` @ public ` modifier from several method declarations in ` SsoAccessTokenProvider ` and ` SsoAccessTokenProviderTest ` classes to
[ geos - 7014 ] fix test failure on window
added new method implementations for handling alarm suppression requests in GreetResourceMockedTest . java and OciMetricsCdiExtensionTest .
reordered the conditional checks for the defaultCloseOperation in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to improve resource management and avoid potential null pointer exceptions
updated metricsContext references to solrMetricsContext in SuggestComponent . java to improve consistency and clarity in metric initialization
refactor file and folder output logic in OCFileListFragment . java to improve readability and maintainability of the code
changed the default value of the " HashKnownHosts " configuration from " yes " to " no " and modified the loadKeys method to return
refactor SourceVersion class to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` to validate thread creation and group behavior in ` MyThreadFactory ` to ensure that the thread
refactor lock period retrieval to utilize dynamic properties to improve flexibility in determining lock period based on dynamic settings
added a new TicketModel instance to the EditTicketPage class to enhance ticket management functionality within the application
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps from predicted lists
updated constructors in various assertion classes to include the self - type parameter to enhance type safety and avoid unchecked cast warnings
added a new menu option ` MENU _ QUOTE ` and updated existing menu constants in ` TweetActivity . java ` to include a
make sure interrupt lock be always set to prevent another start .
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and update related logic in ` MediaCodecAudioRenderer . java `
added a conditional check for the result before offering and closing the failure in ServerHTTP2StreamEndPoint . java to ensure that failure is only
updated German and French error messages in XSLTErrorResources . java and XSLTErrorResources . java to improve clarity and accuracy of error
[ java ] make checkpointscleaner thread - safe
replaced ` Observer ` and ` Subscription ` with ` Subscriber ` and ` unsubscribe ` in ` MockRestAdapter ` , ` MockRestAdapter
refactor error handling for the components . yml file creation in ComponentPresetManager . java to improve code readability and provide clearer error messages
added a new configuration option HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES and updated assertions in TestJdbcDriver and Test
fix for ticket : 269 : do not update audio effect if the input box be change .
added validation to ensure the session is valid and throws an exception for invalid sessions to improve error handling and provide clearer feedback for invalid sessions
hhh - 10663 remove unused exceptionhelper . java
reduced key size from 256 to 255 in JceX25519Domain . java to optimize key generation for improved performance
added Lucene41PostingsFormat to the codec configuration in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene ' s
[ hotfix ] add debug log for empty checkpoint range header list
added support for the RSA / ECB / OAEPPadding algorithm in the OperatorHelper class to enhance security by enabling OAEP
updated platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple Java files to ensure compatibility with macOS
added a security exception handling for SecurityException in DebugSourcesResolver . java to improve error handling and provide better diagnostics for source resolution failures
modified the condition for returning transport values in AbstractTest . java to ensure correct handling of UNIX socket transport scenarios
updated error handling in FileUploadUtils and modified the default return value in ControllerConf , modified file deletion logic in UploadRefreshDeleteIntegrationTest to
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing functionality to improve memory management and ensure proper dis
changed the value of USE _ PIPELINE _ DOWNLOADER from false to true in FastSyncChainDownloader . java to enable synchronous downloads
updated the Calendar DST _ OFFSET setting in SimpleDateFormat . java and added a new class Bug7130335 . java with date formatting tests
refactor variable declarations in AllAppsView . java for clarity and consistency to improve code readability and maintainability by using local variables
updated the logic for determining the default hypervisor type in VirtualNetworkApplianceManagerImpl . java to improve clarity and maintainability of the code
refactor StringBuffer class for improved performance to enhance efficiency of string operations
added a new variable ` uid ` to the ` rule ` object in ` RuleResource . java ` to ensure that the rule ' s UID
added null check for listener before unsubscribing to prevent potential NullPointerException when listener is null
nifi - 10663 : add property to jttransformjson to allow pretty print to the output of the jolt transform
make accessibility of access _ table in instrumentbranchphase public .
update error message for missing resources in DataSourceInitializer and related tests to improve clarity of error messages for better debugging
do n ' t swallow ioexception when stop the transport .
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
updated AmbariManagementControllerImpl . java to include additional parameters for effective cluster version and upgrade suspension status to enhance functionality by providing
simonstewart : add a copyright header to the file
removed the initialization of the field list from the writer to streamline the code by eliminating unnecessary variable declaration
added encryption and signing key size settings to OAuthProperties class to enhance security by ensuring encryption and signing keys are properly configured
hbase - 16467 add method getcolumnfamilycount ( ) to htabledescriptor ( addendum )
replaced the ` AllowedResourceAliasChecker ` instantiation with a lambda expression in ` SampleWebJspApplicationTests . java ` to simplify the code
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and Serializable classes to improve code organization and maintainability
[ java ] have cluster interface extend idlestrategy so it can be use a a idlestrategy
updated the increment operation for currentChunkID in ChunkedWriter . java to ensure correct incrementing of currentChunkID during writer initialization
added a new file ` AbstractJobExecutor . java ` that implements the ` JobExecutor ` interface to provide a base class for executing job executions
replaced direct replay call with a variable for clarity and changed return statement to break to improve code readability and ensure proper termination of the
rename ` hugeStaticBase ` to ` staticBase ` and update related references in ` HugeResourceTest . java ` to improve cl
added a method to retrieve service IDs based on the Consul discovery configuration to ensure consistent retrieval of service IDs based on the presence of the Consul discovery
replaced ` Math . random ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for hashSalt generation to enhance security by
add a flag to verify runtime compilation framestates during bytecode parsing .
update currentStart and baselineStart calculations in TimeOnTimeComparisonHandler . java to ensure accurate time comparison by including both currentStart and baselineStart
added support for abstract methods in ` CallsRealMethods ` and created tests for default behavior in ` CreateMocksWithConstructorTest ` to enhance
refactor ` checkPackageAccess ` and ` isAccessiblePackage ` methods to accept ` Class ` objects instead of ` String ` names to improve
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup methods to improve test structure and ensure proper initialization of plugin data
pdfbox - 4892 : fix typo , a suggest by valerybokov
added handling for the REQUEST _ HAS _ TIS case in QuickstepTestInformationHandler and updated related logic in LauncherInstrumentation to improve
replaced SwingUtilities . invokeAndWait with a mutex event writeAccess in ConnectAction . java to ensure thread safety when interacting with the
updated variable types from String to BuildTarget in multiple files to enhance type specificity and improve code clarity
update the javaemul . internal package to match the javaemul . internal package .
added support for the HOME and END key bindings in the Less application to enhance user experience by allowing home and end key bindings
simplified the loop to iterate over connected plots to improve code readability and performance by eliminating unnecessary synchronization
replaced the existing intent creation logic with a chooser - based approach for launching activities to improve user experience by providing an easy way to
changed the constructor visibility of the Roster class from public to package - private to restrict instantiation to the package - private for better encapsulation
added basicconstraints extension to cert generation in TestUtils . java to enhance certificate validation by including basic constraints
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address a failing test due to
replaced conditional assignment of variable ` ps ` with direct assignment in ` TrieDateField ` and ` TrieField ` classes to simplify code and
deleted the TaskbarStateHandler . java file and modified BaseQuickstepLauncher . java to remove unused TaskbarStateHandler class to streamline
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ( ) ` and ` getField ( ) ` on an
added logging for Hazelcast process destruction and updated tearDown method signature to include exception handling to improve debugging and ensure proper cleanup of
replaced the use of ` @ Singleton ` with ` @ PostConstruct ` and introduced a ` init ` method in ` ApplicationSettingsService `
make safepoint . newvalue ( ) return 1 instead of 0 when value > 0
updated threadNameField to use " Ljava / lang / String " instead of " [ C ] " and changed return type from charArray
updated the DEFAULT _ RAND _ SEED constant from the current time to a fixed value of 42 in Lucene90HnswGraph
added stroke and font handling in PGraphicsJava2D . java to improve rendering flexibility by allowing custom stroke and font configurations
[ calcite - 2369 ] fix incorrect expression expansion when use dynamic _ star in window and group by
added a method to find interesting children in the Comment2000 class to facilitate the retrieval and representation of nested comment structures
added import for Messages and set the status code of the PMS frame to a warning icon to enhance user experience by providing a clear indication
use getmodifiersex ( ) instead of getmodifiers ( ) in awt and mouse event
adjust amd64countLeadingZerosNode and amd64CountTrailingZerosNode to use cycle 3 instead of CYCLES _ 6
( chore ) camel - as2 : fix npe when use disposition notification to not set
refactor Locale class for improved localization handling to enhance code readability and maintainability
added a clearLog button to ErrorConsoleController and a clearLog method to ErrorConsoleViewModel , and implemented a clearLog method in Log
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated imports and modified methods in several classes to use LocaleHolder and Collections for better locale management to enhance code clarity and maintainability while ensuring
updated connection pooling methods in ` ConcurrentBatchIdentifierTest ` and ` SequenceOptimizerIdentifierTest ` , modified execution count in ` AbstractTest `
[ java ] add operablink capability to defaultdriversessions to support opera browser .
do n ' t swallow exception on download failure
added new Lifx product entries and updated existing ones in the LifxProduct . java file to enhance functionality and improve clarity of the product
added asynchronous handling to the OverseerCollectionProcessor and updated related request parameters in CollectionsHandler and CollectionsAPIAsyncDistributedZkTest to
refactor constants and assertions in PostgresDatabase and PostgresDatabaseTest for consistency and clarity to improve code readability and maintainability by
updated LogPage , SummaryPage , and LogPanel to use repository model ' s HEAD reference instead of null to ensure correct reference ID is used
bugfix : use unit _ xyz instead of unit _ y for parent tail
added a ` browserDestroy ` method to ` AndroidImplementation ` and modified the ` destroy ` method in ` AndroidImplementation ` to improve browser management
added a wait for active collection " readApiTestViolations " in the AutoScalingHandlerTest to ensure that the readApiTestViolations collection
refactor the loop to use an index - based approach instead of an enhanced for loop to improve readability and maintainability of the code
updated the return statement in SoftResetAction . java to include controller state checks to improve clarity and accuracy of the state validation logic
disable on - disc stream cache to speed up texture pack reloading
added conditional logic to retrieve the parent folder in both Request . java and RequestV2 . java to ensure proper retrieval of the parent folder for
server : fix typo in ' ispersistent ' field in networkofferingvo
replaced deleteOnExit ( ) with a custom close ( ) method for FileOutputStream to ensure proper resource management and prevent potential memory leaks
added error handling for RestClientException when posting issues in StandardGitHubRepository to improve robustness by catching 403 responses and logging them as a
log4j2 - 1349 add method to log4j2adapter to provide access to the original messagefactory
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern in mmm Version . java and ppp Version . java from 1.2 to 1.3 to ensure compatibility with version
added initial and dismiss delay settings for ToolTipManager in ExtractionModelFrame . java to improve user experience by providing a smoother transition
refactor ProjectCommand to utilize TargetGraphAndTargets for improved target management to enhance code clarity and maintainability by centralizing target
added UTC timezone setting and an assertion to format the time value to ensure accurate representation of time in UTC format
modified MediaSessionConnector . java file to improve session management functionality
use getsslsupport ( ) instead of new jssefactory ( ) . getsslsupport ( )
updated method call from ` getAltitude ( ) ` to ` getAccuracy ( ) ` in ` GpsLoggingService . java ` to
added a method to check if futures are enabled in BinanceExchange and BinanceAccountService to enable conditional adaptation of future data based on
[ # 7012 ] admin - admin : add instructor course detail page ( # 7013 )
set the maximum accepted queue size to maxWorkerThreads in ThriftHttpCLIService to optimize resource allocation for improved performance
replaced the use of ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to
fix for http : / / issues . apache . org / activemq / browse / amq - 2636 - fix jmsfactory
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test assertions in ` TestWindow
updated the calculation of the duration in GCInspector . java to ensure that the duration is accurate for fast collection operations
fix : javadoc on method with line comment should return empty optional
replaced Unsafe usage with a direct readReservedMemory method in ReserveMemory . java and added a check for OSX compatibility to improve memory
added multiple calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner .
hbase - 2596 hbaseadmin . getprocid ( ) should return procid , not table name
camel - 7017 fixed the compilation error of camel - cxf
refactor YamlChangeLogSerializer to use a list for storing databaseChangeLog and a container map to improve data organization and facilitate
replaced ` println ( ) ` with ` print ( ) ` in ` SchemaPrinter . java ` to improve output formatting for better readability
removed command - line arguments for regenerating roads in DebugRoadRegen . java and updated clipboard reading logic in Schematic
updated context retrieval from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure compatibility with the current
added ` @ GenericGenerator ` and ` @ GeneratedValue ` annotations to multiple classes to enable the use of the ` @ GeneratedValue ` annotation
removed the country parameter from the getSystemTimeZoneID method and its usage to simplify the method signature by eliminating unnecessary parameters
added position and remaining information to the write method in BZip2Codec . java and modified ByteBuffer usage in TestBZip2Codec . java
move startlogger ( ) to geogebralogger so that it can be reuse
added a new constant VALUE _ TYPE _ EMPTY and modified the create method in Value . java to introduce a default value type for empty values
replaced ` = = ` with ` . equals ( ) ` for group comparison in ` GroupManager . java ` to enhance readability and
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future development
added a new method ` newInstanceExact ` to the ` TargetGraphFactory ` class for instantiating a ` TargetGraph ` from a ` Target
rename getminrowcompactedsize ( ) and getmaxrowsize ( ) to getminrowsize ( ) and getmaxrowsize
fix metadata collection serialization issue
modified the handling of the ` sobj . has ( k ) ` and ` sobj . get ( k ) ` method in ` Native
updated file handling in FileUploader to use the remote parent file instead of the local file to improve file management by ensuring the correct parent file is
added a new file UTF8ReaderBug . java to implement support for supplementary characters in XML parsing to ensure that supplementary characters are correctly
added unit test base on user forum issue
updated subscription streams in BinanceIntegration and BinanceUsIntegration from " btcusd @ ticker / dashbtc @ depth " to "
added a resetAllocation method in the Wrapper class to reset allocation values to allow for reinitialization of allocation parameters during
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to ` System . getProperties ( ) ` with synchronized access to ` sysProps ` in ` mmm Agent . java `
refactor ModelUtils to improve code readability to enhance maintainability and facilitate future feature additions
refactor methods in AbstractDoubleArrayAssert for improved clarity to enhance code maintainability and readability
added bounds checking for the index of mLabels in width and height calculations to prevent potential ArrayIndexOutOfBoundsException when calculating width and height values
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` and `
replaced ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` and modified the way frequency values are retrieved to
replaced the usage of ` requireRule ` with ` new BuildTargetSourcePath ` in the ` Omnibus . java ` file
add a disabled versioning message to the botania . versioning . disabled flag .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` variable in ` MediaFolder
removed the " - b " argument from the command line arguments in AidlStep . java and updated the command format in GenAid
delete obligation on edge from comparison ( issue79 )
added a TODO comment in FakeHttpLayer . java to implement a test for the HTTP layer functionality
[ hotfix ] [ runtime ] fix error handler in embeddedleaderservice
refactor CompositeDiscoveryClient to use reactive streams for instance retrieval to improve code readability and reduce boilerplate code
replaced calls to ` applySystemConfiguration ` with ` applyQualifiers ` across multiple files to standardize method naming and improve clarity in
[ hotfix ] [ config ] improve jobmanageroptions description
renamed methods and variables related to widget visibility and search results in WidgetsFullSheet . java to improve clarity and functionality of widget display
added reflection - based loading of WstxOutputFactory and WstxInputFactory in XmlUtil . java and updated test assertions in Multi
refactor test setup in AuditAliasCommandIntegrationTest to use JUnit ' s setUp method to improve test organization and ensure proper setup before each
removed unnecessary logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to improve code clarity and reduce unnecessary
( chore ) camel - cxf : disable test that do not support the invocation without parameter
added error handling around the ` update ( ) ` method in ` CachedStore . java ` to log errors when a periodical refresh fails
refactored ` ChainingAuditPrincipalIdProvider ` to use ` @ RequiredArgsConstructor ` and changed the initialization of ` providers ` to
added checks for default background filling in HSSFCellStyle and updated color retrieval logic in HSSFPalette to ensure consistent handling of background
updated ZonedDateTimeFormatterBenchmark . java to improve benchmarking accuracy for ZonedDateTime calculations
refactored the ` shouldBufferUpdate ` method in ` DistributedUpdateProcessor ` and added a new test class ` DistributedUpdateProcessorTest `
added a null check for rocket stage in SimulationListHandler to ensure robustness by preventing potential NullPointerExceptions
updated command descriptions and modified the ` getItem ` method to include a ` toReplaceID ` parameter for better clarity to enhance user experience by
refactor ExtendedMasterSecretExtension to improve code readability to enhance maintainability and facilitate future feature additions
changed the processor variable from non - final to final in AndroidInput . java to enforce immutability of the processor variable
added handling for write failure in WritableKeyProcessor to improve error reporting during write operations
added " CUBE " to the list of supported database types in MySQLDatabase . java to ensure compatibility with the new database structure
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the cleanup process
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods and
replace reflection - based field retrieval with direct field access in DefaultOkHttpClientFactoryTest . java to improve code readability and reduce dependency on reflection
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the variable ' os ' in RawRawContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 1359 fix for ggb - 1353 : do n ' t show ` ` precise ' ' in av
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified its error message to provide clarity on the
refactor HttpRequest class to improve request handling to enhance performance and maintainability of HTTP request processing
added a shared preference for unread notifications in TalonPullNotificationService to track the unread status of pull notifications effectively
[ wasm ] fix null - check for object in isnullnode .
modified Box2DTest , Pong , Pong , OrthographicCamera , OrthographicCamera , and OrthographicCamera classes
updated layout manager and scroll listener handling in ViewPostDetailFragment . java to improve UI responsiveness and prevent potential null pointer exceptions
changed log level from trace to warn in CLIService . java to provide a less severe log level for background operations
fix : do n ' t generate jimple body for abstract method
ggb - 1181 make sure mousegesturecontroller work on ie10 +
updated the ` getNotificationUsers ` method to include ` deviceId ` as a parameter and modified the user retrieval logic to include device IDs to enhance
updated the baseUrl in CGIARProvider . java from " http : / / droppr . org / srtm / v4.
removed unused listeners and set bottomPanel to null in MotifFileChooserUI . java , and added a new class bug6520101
change return value of handle ( ) from void to boolean to indicate success or failure .
refactor methods in BuildRuleResolver to improve clarity and error handling to enhance code readability and provide clearer error messages for unresolved rules
added visibility control for transportSpinner based on the makingShortcut flag to improve user experience by hiding the transport spinner when a shortcut is made
added null check for attributes _ field in Attr . java and created two new classes T7043371 . java and T70734
refactor backPressed methods to return a boolean indicating whether the back button was clicked to improve responsiveness by avoiding unnecessary back button interactions
added support for long view index configuration in QueryServices and QueryServicesOptions to enable flexibility in handling long view index data types based on configuration
corrected the spelling of " V " to " v " in SDRTrunk . java to ensure consistency and accuracy in the string
updated the path handling in PrivateKeyParserTests to use StringUtils . cleanPath to ensure consistent path formatting for better readability and maintainability
removed the columnPosition parameter from the diffDropColumn method to simplify the method signature by eliminating unnecessary parameters
update IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with
added strict column family validation and error handling in ImportTsv . java to ensure that column families do not match any of the specified column families
[ java ] use log subscription id instead of log recording channel .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " , " startApplicationDetails
added a condition to skip processing for a single JSON node in PoloniexStreamingService . java to optimize performance by avoiding unnecessary processing
refactor Procedure class to improve code readability to enhance maintainability and facilitate future feature additions
updated resource bundle loading to include default locale and system class loader to ensure correct resource loading based on the current locale and system class loader
[ kotlin ] add normalization pass for kotlin array literal .
added checks for mincount and count in the PerSegmentSingleValuedFaceting class to ensure proper handling of term enum movement and prevent potential errors
fix ` modmetadata . get authors ( ) ` return ` null ` for ` authorlist `
added static jdk . unsupported module dependency and created OSGiTest . java for testing Gson annotations and Sun . misc to ensure compatibility with
nifi - 5392 : add concurrency test for referencingservicesgraph ( # 5393 )
hbase - 16463 remove unused htable . setautocommit ( false ) ; addendum
test ( annotation ) : add test for annotation applied on any element in a class
added hasUserData ( ) method to SimpleFeatureImpl and its corresponding test in SimpleFeatureImplTest to ensure accurate validation of user data in feature
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging configuration for better performance
added a new class ` InJavaSourceSet ` to handle Java source sets and updated imports in ` UsesJavaVersion ` to improve code organization
test : skip gdalparser test for wfpc2u5780205r _ c0fx . fit ( )
added a new method ` createGetter ` to ` ReflectionHelper ` to provide a convenient way to create getter instances with specified attributes
removed the check for ` useExternalStorage ` in the conditional statement to simplify the condition for SDK version compatibility
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and modified ` IndexingJob ` to
server : allow disk offering id / snapshotid to be pass when create volume
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy notes to ensure that comments in the second column
added null checks for ` amountToAdd ` and ` period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to
added a new file ` Issue382 . java ` and modified the ` Routes . java ` to include error handling for specific error types to
replaced the custom signum method with a static import and simplified the return statement to improve code readability and reduce unnecessary complexity
set the visibility of the holder text to GONE when the condition is not met to improve user interface responsiveness by hiding the text
fix ( import ) : fix classcastexception in astparentconsistencychecker and jdtimportbuilder
simonstewart : fix a typo in xpidriverservice . java
add liquidblock to be a bucketpickup ( # 5468 )
fix intermittent test failure on window
updated the timezone setting for date formatting from " PST " to " America / Los _ Angeles " to ensure accurate representation of
[ java ] reduce memory footprint of distincterrorlog when there be no error .
updated system property settings for various test groups in LuceneTestCase and added new VM options in RunListenerPrintReproduceInfo to enhance
renamed the method ` createLogger ` to ` getOrCreateLogger ` and modified logger initialization logic to improve method clarity and ensure logger is always
[ gr - 16464 ] deny access to class , method , field , and proxy in graalcontext .
refactor raster handling in PGraphics2 to utilize WritableRaster for improved performance and clarity to enhance code readability and maintainability
updated the method call to include partition and table details in HiveAbstractReader to ensure accurate transaction properties are verified for the job
updated the logic for determining overlay scroll behavior in Workspace . java to improve the handling of overlay scroll events and ensure proper scrolling behavior
hhh - 16463 add batchbuilderimpl and unmodifiablebatchbuilderinitiator to make it easy to configure batch size
improve error message for ` ` should not reach here ' '
added a new class ` MockWithStaticStateDemo ` and a test method in ` PartialMockingRetainsStateTest ` to demon
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing for
added error handling for null ugi in SecurityUtil . java to ensure robust execution of actions when ugi is not initialized
updated error handling to include the error code in OpenALMusic . java to improve debugging by providing more context on the error encountered during audio
camel - 16400 : camel - quartz - add a deprecate method to endpointhelper . resolveparameter ( )
updated precision and scale handling in RexNodeConverter . java to improve precision and scale management for decimal literals
refactor code to use Optional for null checks when retrieving vendor and device properties to improve null safety and avoid potential NullPointerExceptions
updated the test assertion in WalletTestAccount003 . java to use the current time instead of a hardcoded test name to ensure accurate testing of
changed the type of ` topStage ` from ` AxialStage ` to ` RocketComponent ` and refactored child selection logic in
added getter and setter methods for longRunningTime in Args . java to enable configuration of long running time for improved performance
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in FindRefComparison . java and added a new
updated import statements and modified method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider to utilize Java ' s ServiceLoader
[ geot - 6321 ] fix xmlunit to work with gml 2.0
updated assertion statements in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
added a condition to check if the reference database matches the comparison database before proceeding to ensure that the comparison logic correctly handles cases where the reference
removed the ` addAndroidConstants ` method and simplified the logic for setting Android properties to streamline code and improve readability by eliminating
replaced assertEquals assertions with await patterns in multiple test files to improve test reliability by waiting for requests to complete before assertions
added user _ args , is _ daemon , and timestamp fields to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance
[ gr - 36464 ] fix resource bundle lookup for jdk11 + .
updated log trace message from " set match limit " to " set match order " in HepPlanner . java to improve clarity of
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata from the Therock exchange to
changed ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to be strictfp and added a strictness test in ` ParseDouble
removed unparseIdentifier function call from columnNamesBuilder to simplify column name handling by directly appending the column name
added a new test method ` replaceField ` in ` JavaTemplateContextFreeTest . java ` and modified the ` contextFreeTemplate ` method
added a check for non - synthetic methods in InstantiateStaticClass . java and implemented a new test case in Bug1282 . java to ensure
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path
added pending reservation and condition handling in IkStepDefinition . java to improve resource management and error handling during control flow execution
changed method visibility from ` public final ` to ` public ` for ` equals ` and ` hashCode ` in multiple type classes to allow subclassing
added a method to retrieve the default SyncLevel and modified the SyncLevel enum to handle null values to improve flexibility in configuring the default
test : reduce flakiness of controlcommandstest
added a condition to check if the shard ' s state is not RECOVERY in addition to the existing CONSTRUCTION state to ensure that
* fix build issue with ` opencv _ core ` ( issue bytedeco / javacv # 521 )
added SDK path handling in AppleBundle and SwiftStdlibStep classes and modified ProcessExecutorParams to accept ExecutionContext to enable dynamic SDK path
[ hotfix ] [ runtime ] remove file lock in transientblobcleanuptask
server : fix typo : ` ` 1 : 1nat ' ' - > ` ` staticnat ' '
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of
fix typo find by codespell on fossies . org
updated the method to retrieve the proxy using the class loader to ensure the correct class loader is used for context proxy retrieval
refactor nightly warning checkboxes to use a dedicated method for version checks to improve code readability and maintainability by centralizing version
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing lines in SQL statements
make ` ` findbugs . nullderef . assumensens ' ' flag configurable
fix ( hawtio - system ) : use random port instead of hardcoded 8080
updated constants for BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN , and refactored
added a method to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by
updated method signatures in MaxRectsPacker . java for consistency and clarity to improve code readability and maintainability
( chore ) camel - kie - maven - plugin : update dependency com . google . drools : drools - build to v
added methods to manage and retrieve the help page in PMS and updated HelpTab to utilize it to improve usability by allowing users to
added GeocodeProviderFactory and Constants interfaces to GeocodeProviderBaseFactory and ConstantsBase classes to facilitate geocoding and storage
updated import statements for CharArraySet from util to analysis in LuceneAnalyzerUtil and LuceneTokenizer to ensure compatibility with the latest Lucene
refactor tests to use Assert . fail ( ) instead of JUnit ' s ExpectedException for exception handling to improve test clarity and ensure
fix : do n ' t delete object in memorycommand when jvm object id change .
updated conditions in ` SegmentsInfoRequestHandler . java ` and refactored collection creation in ` CollectionsAPISolrJTest . java ` to
updated the logic for determining the number of predicted app columns based on the device type to improve accuracy of app selection based on the device ' s
added a static method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated its usage in ` DrillJoinRelBase `
add a blockbuildcraft . java file to make build craft block more modular .
updated layout parameters for drag - and - drop functionality in DeviceProfile . java to improve layout handling for drag - and - drop actions
use start ( ) instead of run ( ) in yahosession . java
initialized ` ms ` and ` client ` variables to ` null ` in ` HiveMetaStore ` and ` HiveMetaStoreClient ` to improve
updated the getDisplayScript method to accept a DISPLAY category parameter and added a test for bug 7079486 to ensure the correct display script is
updated references from ` CORE _ NAME _ PROP ` to ` ZkStateReader . CORE _ NAME _ PROP ` in ` Replica
replaced ` ThreadLocalRandom ` with a custom ` Random ` implementation in ` StoreDirectTest . java ` to simplify random number generation and
added a check to ensure the launcher is ready before backup operations to avoid potential errors when the launcher is not ready
updated error messages in Cell . java to include additional context to improve debugging by providing more context in exception messages
added unit test base on user forum issue
rename ` getBodySpace ` to ` setBarSpace ` across multiple classes to clarify the purpose of the variables and methods related to bar
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated FileMessageHistoryTest to use TemporaryFolder for file handling to improve test reliability by ensuring messages and history are not null
added debug logging statements to various logger classes in Grasscutter . java to improve logging visibility and facilitate easier debugging
changed ` highlightCnstScrRngQuery ` and ` highlightCnstScrRngQuery ` to static in ` SpanSc
updated the condition for exiting overview mode in Launcher . java and added a method to get the current state in Workspace . java to ensure that
updated multiple assertion classes for consistency in naming conventions to improve code readability and maintainability
updated conditional checks for template caching in SnippetTemplate . java to ensure notifications are only sent when cache is enabled
added a new scope constant ` SCOPE _ SOLR _ CORE ` and modified the ` DataImporter ` and ` ContextImpl ` classes to
added primary key support to the CREATE TABLE measurement table in DatabaseMetaDataTest . java to ensure that the measurement table is created with the correct primary
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` in ` PantheonCommand . java ` and
refactor session handling logic in HttpSessionContextIntegrationFilter . java for clarity and consistency to improve readability and maintainability of the code
added a new file ` TestIfWithDeadRegion . java ` that includes a method for retrieving a string and demonstrating its usage
rename english ud to english usd for consistency
refactor test cases in SnowflakeIdGeneratorTest to use HighResolutionTimer for concurrent access testing to improve performance and reliability of concurrent access
added a static UI setting to AppSettings and modified MainFragment to conditionally show a toast message based on user preferences to enhance user experience by
replace the Privilege class implementation with a lambda expression and ensure LocalFree is called after the drop operation to improve code readability and ensure
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SitelistLogoutHandler . java ` and added checks in ` WhitelistLogoutHandler
updated JOptionPane calls to include localized error messages in MEncoderVideo , NavigationShareTab , and PluginTab to enhance user experience by providing
tika - 3746 -- add mime detection for tika - ooxml file
added debug logging for glue loading and feature loading in multiple classes to improve traceability and debugging of feature loading processes
camel - 14850 : camel - eip - maven - plugin to generate json schema documentation for the model , in case of xml schema
do n ' t wait for migration when endpoint be remove . patch by brandonwilliams , review by jbellis for cassandra
added debug logging for notify and playback devices in DeviceConfiguration . java and modified audio capture device handling in PortAudioAuto . java to improve trace
added WebSocket configuration to ShenyuConfig and modified WebSocketPluginConfiguration to allow customizable maximum frame payload size to enhance flexibility in WebSocket
added TestNG ' s support for handling invoked methods and test results in CacheValidationListener to improve test result management and ensure proper cleanup before execution
updated the content length handling in MoreIndexingFilter to check for non - empty strings before adding it to the document to ensure that the content length
refactor synchronization code into a new method ` solvingTerminated ( ) ` to improve code readability and maintainability
added exception handling for PathAlreadyExistException when attempting to insert a non - existing time series to improve robustness by ignoring invalid path exceptions during
added a new method ` check ` to the ` Authz ` class to provide a way to access the result of a conditional check
changed access modifiers of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
server : fix listvirtualmachines api to return reserve vms when listvirtualmachines api call fails
modified the handling of ` _ valueString ` and updated test method names in ` HttpParser ` and ` HttpParserTest ` to improve clarity
refactor thread complete initialization logic into a static method ` threadCompleteInitialization ( ) ` to improve code readability and maintainability by separating
added a new method ` getExternalStoragePublicDirectory ` to ` ShadowEnvironment ` and created a corresponding test class ` EnvironmentTest ` to enable testing
[ drools - 7 ] add test case for mvel type coercion
updated type declarations and formatted code for consistency in LoggingConfig , LoggingConfig , and DbgPacker classes to improve code readability and maintain
added exception message to the logging statement in ActionNode . java to provide more context for exceptions during the construct process
fix display of tel : instead of tel : in sip .
refactor visibility logic for shared file icon in FileListListAdapter to improve readability and maintainability of the code
removed deprecated HIVEOPTSORTDYNAMICPARTITION configuration from HiveConf . java and updated related tests in TestTxnCommands3 . java to
refactor ` ExecuteStatementOperation ` and ` Operation ` classes to include ` confOverlay ` for better management of session and query IDs to enhance
replaced usage of Google Guava with Java ' s built - in Java collections in BTCMarketsStreamingAdapters and BTCMarkets
fix ogrdatastoretest to use gettypename ( ) instead of getname ( )
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to provide a placeholder implementation for error handling in step execution
refactor Wallet class to improve code organization to enhance maintainability and readability of the code
camel - 16400 : camel - netty - http should use charset from content - type if available .
use log instead of system . out . println in testnonblockingapi
added a check to return false if the row exceeds the size of the connection list to prevent potential ArrayIndexOutOfBoundsException when processing database connections
add a new rule to detect method with the same name as the enclosing class .
added a new class ` ExtendedPlatformComponent ` and modified ` ManagementFactory ` and ` ManagementFactory ` to handle platform - managed objects to improve
replace single quotes with double quotes in SQL statements to ensure proper formatting of SQL queries
updated package structure in Bleutrade DTOs to include " org . knowm / xchange / bleutrade / dto /
refactor TextEscapeUtils for improved escape handling to enhance code readability and maintainability
added a filter parameter to the AbstractSpatialFieldType and updated the FilteredQuery to use it to enhance query flexibility by allowing filtering based on
added progress indicator for auto email sending in GpsLoggingService . java and post it in AutoEmailHelper . java to enhance user experience by
replaced ArrayList with HashSet for inlinks and added an iterator method to improve performance and simplify iterator usage
[ tradfri ] fix stop scan to remove last scan result
modified the HiveMetaStoreClient and TestFilterHooks to accept a boolean parameter for filtering to enhance flexibility in filtering by differentiating between server
added " Closed " status and " Abandoned " status to the TicketModel and updated the TicketBasePage and TicketsPage classes to include
removed the default value of ` columnAliasPrefix ` from multiple platform classes to allow dynamic configuration of the column alias prefix
updated LlapRowRecordReader and related classes to use BytesWritable instead of Text to improve compatibility with binary data handling in the Hive framework
log a warning when run on a 32 - bit jvm on a 64 - bit system .
pdfcopy now handle ` ` b ' ' instead of ` ` parent ' '
added a new option ` DAEMON ` to the ` OptionEnum ` class and implemented daemon mode functionality in ` TerminalClient ` to
added a new file ` FlushIndexTask . java ` to implement a performance task that flushing the index writer to ensure that the index buffer is
update memtable . getflushpath to take estimated size into account when create a sstablewriter
added a condition to check for SEASONS output in MediaLibraryFolder . java to ensure proper handling of SEASONS output in
added a new file ` LocalSocketAddress . java ` to establish a DatagramSocket instance with IPv6 support to ensure that the local address is
updated grid size points in GridSizeMigrationTask . java for consistency to improve clarity and maintainability of grid size configurations
updated method calls from ` getName ( ) ` to ` getName ( ) ` in ` SerializerPojo . java ` to improve code readability
added support for read - only context management in the Context class to ensure transactions are only attempted in read - only contexts to prevent illegal state exceptions
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation of ` lastRunEnd ` and adjusted the condition for ` offset ` in ` BlockBoxing . java ` to improve accuracy
updated exception handling in GracefulStopTest to check for EofException and EOFException to improve error handling by allowing more specific exception types
refactor locking mechanism to simplify the management of HTTP connections and listeners to improve code readability and maintainability by reducing redundancy
refactor NetworkParameters class to improve network parameter handling to enhance performance and maintainability of network operations
updated account asset optimization logic in DynamicPropertiesStore . java to ensure proper configuration of asset optimization settings
added a new constant ` J9 _ GC _ POLICY _ NOGC ` and initialized it to ` 0 ` in ` VM . java
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to improve robustness by throwing a P2PException for invalid protocol
[ java ] remove strictexception rule which be no longer need .
updated resource retrieval and error logging in HelpContent . java to improve localization support and provide clearer error messages for missing localization
added a new file ` ProcessorInfo . java ` with methods to determine the number of available processors and read CPU status to provide a structured way
add - html option to generate html output ( default stylesheet be default )
refactor logbackloggingsystem to use inject instead of optional
updated HostLevelParamsHolder to handle ServiceComponentRecoveryChangedEvent and refactored related methods to improve code clarity and encapsulate cluster data updates
removed the @ ConditionalOnProperty annotation and updated test cases in SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests
refactor dependency type handling in RustCompileUtils to use a switch statement to improve code readability and maintainability
updated oauth2LoginLinks method to accept a MultiValueMap for query parameters and added error handling to improve flexibility in processing OAuth2 login links
hbase - 2640 fix the failure of halfstorefilereader . getfirstkey ( ) in hfileresource ( #
hhh - 16464 - deprecate @ generatetiming . value ( ) and @ generatetiming . timing
feature : add test for nan in layer norm ( # 1193 )
refactor file sharing methods to use ` getFileOperationsHelper ( ) ` instead of direct calls to ` seeShareFile ( ) ` to improve
added a new test class ` LiquibaseUpdateMojoExecutionTest ` for testing Liquibase update Maven plugin execution to ensure
convert proxyType to uppercase when setting it to ensure consistency in proxy type handling
add a mod _ minecraftforge . java file that initialize forge ' s dungeonlootTries ( ) .
refactor key handling and caching logic in JdbcDatabaseSnapshot . java for improved clarity and functionality to enhance code readability and maintainability
added a Container to the CSSBorderTest class with a border and a label to enhance the visual appearance of a label in the UI
refactor RetryAutoConfiguration and RetryLoadBalancerInterceptor classes to include conditional configuration and introduce a new RetryableStatusCodeException class to enhance flexibility
changed the superclass parameter from FILL _ PARENT to MATCH _ PARENT in CellLayout to improve layout behavior by using a more appropriate parent - based
updated the calculation of ` parentTaskName ` to use ` currentTimeMillis ( ) ` instead of ` nanoTime ( ) ` to improve accuracy of task
added error handling for UncheckedIOException in ServiceResourceProvider to improve robustness of service request processing and provide clearer error messages
simplified the return logic for file acceptance in IndexDatabase . java to improve readability and maintainability of the code
[ giac ] make sure ggbround ( x ) = = ggbround ( x ) and ggbround ( x ) =
refactor AnonCipherWithWantClientAuth class for improved authentication handling to enhance security and maintainability of the authentication process
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these methods are outdated and should not be used in future development
refactor JLayer class to improve performance to enhance rendering efficiency and reduce memory usage
make evictiontest more resilient to time issue
replaced the ` encodeInternal ` method with a direct ` encodePassword ` method in ` Md5PasswordEncoder . java ` to simplify
replaced the local variable ` viewTreeObserver ` with direct method calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to
refactor Response class to improve code structure to enhance maintainability and readability of the code
fix sstablemetadata . getmaxtimestamp to use max _ value instead of min _ value
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added null and empty checks for replies in multiple adapter classes to ensure proper handling of empty replies before compression
added ` equals ` and ` hashCode ` methods to ` HitbtcBalance ` and modified ` HitbtcAdaptersTest ` to
fix ( sql - parser ) : correctly parse where clause with in statement
changed return statement from ' s ' to ' addrs . toString ( ) ' in RetriesExhaustedWithDetailsException . java to improve
[ netbeans - 5446 ] fix npe when edit gcode file ( # 5446 )
updated HTTP client imports from ` org . apache . hc . http . impl ` to ` org . apache . hc . client5 . core
updated energy management logic in PipePowerWood . java to ensure energy is only processed when available , improving efficiency
added a check to delete the temporary output file if it exists to ensure that temporary files are removed when they are no longer needed
updated the ` id ` parameter in the ` BitstampWebSocketTransaction ` constructor and added new test cases in ` BitstampStreamingMarketData
added expiration checks for state time and size values in ReplayProcessor and ReplaySubject classes to ensure proper handling of expired state values during replay
fixed checkstyle issue in citationstylegeneratortest
added SQL insert column statements and updated video HDR format handling in MediaTableFiles . java to improve database schema management and ensure compatibility with H
g3d - 385 : add feature flag show _ definition _ for _ equation _ in _ exam for exam
fix npe in sipcommtextfieldui . java due to miss component .
hbase - 16405 set cache for meta scan when startrow = = null and scanroot = = false
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes to improve code readability and maintainability
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide a debug option for enabling transient task
[ hotfix ] fix checkstyle violation in accessexecution , accessexecutionvertex , archivedexecutionvertex
added a condition to set density to 3 f if it is equal to 3 f in IOSGraphics . java to ensure consistent scaling behavior for
rename the ` optional ` field and related methods to ` vararg ` in the ` Parameter ` class to clarify the purpose of the
hbase - 26973 add exception to the log message in regionstatestore . getstate ( )
[ hotfix ] [ test ] replace asserttask with asserttrueeventually in testclusterupgradeutils
updated warning log message and refactored connector initialization in AsyncHttpConnection . java , AsyncContextTest . java , and SelectChannelAsyncContext
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control the visibility of the arrow in the search interface
modified lock mode handling in mmm Database . java and removed the testSetMode ( ) method from TestRowLocks . java to streamline
[ gr - 36464 ] skip big endian test only on linux and amd64 .
refactor input handling in Scalars . java to improve type safety and clarity to enhance code readability and maintainability by explicitly checking input
fix npe in createtablestatement with no primary key
added conditional checks to set drawable resources for various UI components based on the LMP status to ensure proper UI appearance for devices running LMP
fix npe in vmservicemanager . getflutterviews ( ) when there be no flutter view
added methods to configure header writers for XContentTypeOptions , XSSProtection , CacheControl , HTTPStrictTransportSecurity , and HstsHeader
refactor ObjectEnumerableAssert to improve code readability to enhance maintainability and facilitate easier debugging
danielwagnerhall : move the test to the router package
added type attribute to @ aggregateroot ( type = ' ' type ' ' )
added support for handling prebuilt libraries in Python binary configurations to improve the handling of prebuilt libraries during the build process
added handling for client authentication in NetServerOptionsConverter and updated related methods in HttpServerOptions to ensure proper serialization and deserialization of client authentication options
updated file paths in HiveConf . java and MetastoreConf . java to include the system ' s name to ensure consistency in directory structure
refactor task view retrieval logic in RecentsView . java to improve readability and maintainability of the code
add timeout to test that fail on slow ci server
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
rename variable ` controller ` to ` flowController ` in multiple classes to improve clarity and consistency in naming conventions
updated exchange handling in OperatorTreeGenerator and added a new test for pipeline builder functionality in PipelineBuilderTest to ensure correct execution context management and validate
added import statement for ClassLoaderHandler in module - info . java to enable handling of class loading in the application
refactor solve method to accept a Solution parameter and update the best solution to improve clarity and functionality of the solution management process
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
changed the condition from checking if throwable is null to checking if it is not null to ensure proper handling of non - null exceptions
refactor query info retrieval logic in QueryTimeManager . java to improve readability and maintainability of the code
fix auto workbench not work if there ' s nothing to do .
fix ( gl200text ) : fix hdop decoding
rename ` timeColumnName ` and ` timeFieldSpec ` variables to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve cl
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
ww - 3560 add initializable interface to allow injection of initializable object
add longtasktimer tag and error tag for long - running task ( fixes # 399 )
changed the data type of SYNC _ DELTA _ RATE from float to double and updated interval calculations in AdaptiveFetchSchedule .
update abstractstandardfragmentinsertiontagprocessor to warn about deprecation of fragment expression in thymeleaf
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread - safety when accessing the attributes map
http : / / issues . apache . org / activemq / browse / amq - 2852 - fix for amq -
added new color constants and modified the extractInto method to utilize them to improve color handling and support for dark text hints in wallpaper color
added access control check for the data folder in SketchBuilder . java to ensure only accessible data folders are included in the data folder list
updated ` OmniNotes ` and ` NotesHelper ` to use Apache ' s ` StringUtils ` instead of Apache ' s ` TextUtils `
removed unnecessary initialization of sessionRegistry in ConcurrentSessionControllerImpl . java to streamline session management by eliminating unnecessary instantiation
added logging for reconnection completion and error handling in NettyStreamingService to improve debugging and traceability of reconnection issues
replaced instances of ` Factory ` with ` Proxy ` in multiple test files to utilize the internal proxy implementation instead of the external one
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency by using a
refactor SocketExceptions to use String . join for string concatenation and improve exception message validation to enhance readability of error messages and ensure accurate address
added a check to ensure the view directory is under the repository directory to prevent errors when accessing views outside the repository directory
remove tab header indicator from drag and drop event ( # 4640 )
8275362 : [ testbug ] usecompressedoops and usecompressedclasspointers in test dump and load
removed error logging for inactive or replay states in PeerSync . java to streamline log management by eliminating unnecessary error messages
deleted the ConnectionHook . java file which contained a shutdown hook for database connections to streamline the codebase by eliminating unnecessary components
solr - 12313 : remove unnecessary waitforreplicasinsync from test
camel - 14850 : camel - swagger - java : fix deprecation warning in generated xml
updated version handling in ApexLanguageModule and added a new namespace guarded access method in TestAccessEvaluator to ensure compatibility with external versions and
fix checkstyle issue in netbeans / tools / javac / langtools / jtreg / jtreg / jtreg
refactored AggregateEngine to use IoTDBThreadPoolFactory and improved executor service management to enhance thread management and ensure consistent use of available processors
updated WebSocketAsyncConnection to accept a ByteBufferPool parameter to enhance flexibility in buffer management for WebSocket connections
added scrollToPositionWithOffset calculations for the thumbnail layout in UploadActivity . java to improve user experience by ensuring the correct positioning of thumbnails
fix ( sql ) : fix ( sql ) : fix sql generation for sample by column with same name ( # 3640 )
refactor ` onDraw ` method in ` LauncherAnimUtils ` and add ` dispatchOnLauncherTransitionStepAnim ` in ` Launcher
add a configuration option to disable the default user agent in the HTTP client configuration
added a pubsubhubbub feature to the application settings and modified the FeedRefreshUpdater to conditionally handle PubSub updates based on its status to
changed the visibility of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
modified the ` isAnonymousOrLocalClass ` and ` isAnonymousOrLocalOrSyntheticClass ` methods to include a check for synthetic classes
add dspacewebapp to dspacewebapp , so we do n ' t have to re - use it
added null check for leftTableAlias in CalcitePlanner and a method to retrieve the table alias containing a column to improve error handling and provide
updated the identity generation in JobGenerator to include a specific trigger key to improve clarity of the generated identity for better debugging and monitoring
updated logging messages in Wallet . java to use parameterized warnings and improved error handling to enhance logging clarity and provide more informative error messages
test : increase timeout for basicmaptest . testmap ( )
updated the declaration of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure
added a new enum ` TlsClientCertPolicy ` and modified ` GitBlitServer ` to utilize it for client certificate validation to
added a debug log statement to indicate when a new CHALLENGE has been saved to streamline the subscription process by eliminating unnecessary
added headers to the ProxyWebSocketHandler and modified its implementation to support WebSocket protocol handling to enhance flexibility in WebSocket communication by allowing different protocols
added debug logging for fetchReq in HiveQueryResultSet . java to facilitate troubleshooting and troubleshooting
updated string formatting for dimensions and label in HolidayEventFormatter . java to improve readability of dimensions and label representation
refactor test methods and introduce inner class handling in FinalizePrivateFieldsTest . java to improve clarity and functionality of inner class management in
tidy up javadocs in unexpectejobexecutionexception and deprecate less informative constructor
deleted the module - info . java file and modified AquaLookAndFeel . java and AquaUtils . java to remove
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to improve accuracy in determining the maximum
added GeoDegeneratePath . class to classRegsitry in StandardObjects . java to enable the use of GeoDegeneratePath for
removed the ` preFill ` parameter from several ` Pool ` and ` ReflectionPool ` constructors across their respective classes to simplify the constructor signatures and
added a condition to update the state of the taskbar stash when not in the launcher and modified the flags in the TaskbarStashController
added null check for ` li . getDefaultStyle ( ) ` before comparing it to ` li . getStyles ( ) ` to avoid potential `
refactor GuiUtil methods for setting size and adding a new MarqueeLabel class to improve code readability and maintainability by
refactor icon retrieval logic in FileTreeViewHolder . java to improve readability and maintainability of the code
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo to improve readability and maintainability of the test code
added synchronization around iteration over suite results in XMLReporter . java to ensure thread safety when accessing shared resources
add test for native probability function
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper resource cleanup and prevent memory leaks
hhh - 16464 - add droptemporarytableafteruse ( ) to sybasease15dialect
simonstewart : unignoring test that pass in htmlunit
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
updated LinksIndexingFilter . java to improve link indexing logic to enhance performance and accuracy of link indexing process
updated the hex string format in VirtualAllocCommitUncommitRecommit . java to include 1024KB for Test to improve clarity of memory allocation
reset ad playback state when there ' s no ad group
refactor equality check in MultimapSubject . java to use a boolean variable for clarity to improve readability and maintainability of the code
updated the fetchPropertyValue method to use unit _ hz instead of deg _ text to ensure accurate representation of frequency values in the WaveGeneratorActivity
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the use of putAll with a direct instantiation of TreeMap to improve code readability and performance by eliminating unnecessary method calls
refactor vertex format handling in VertexLighterFlat . java to improve null safety and clarity to enhance code readability and maintainability by
added tracing tags for message visibility in multiple interceptor classes to enhance traceability and debugging capabilities during message processing
updated time zone handling in ScheduledTrigger . java and removed a bad apple annotation in ScheduledTriggerTest . java to improve code clarity and
added ` AsyncBucket ` and ` InMemoryExtension ` classes and updated ` Bucket ` and ` Extension ` classes to implement asynchronous bucket functionality and
refactor command - line argument handling for class directory retrieval in resexhausted003 . java to improve flexibility in specifying test class paths
reformatted code for better readability and added exception handling in the accept method to improve code maintainability and handle potential interruptions gracefully
refactor OngoingStubbing class for improved readability to enhance maintainability and facilitate future feature additions
added support for reusing a web server in the Main class to enhance flexibility in managing web server instances
rename ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and update imports in ` SolrTestCaseJ4 . java
added a check to ensure the thread allowlist is not empty before proceeding to prevent illegal state exceptions when the thread allowlist is not util
changed the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity
dmndtanalyser should not use collect hit policy if it be not collect
[ beam - 10670 ] add test for sliding window combine in combinefn
added a conditional check for ` allAppsDirty ` before binding all apps and updated log messages to include app count to improve logging clarity and
removed the assertion check for the " Running " attribute in the ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary
corrected a syntax error in the Java class declaration to improve code readability and maintain consistency in coding style
refactor AquaMenuBarUI to utilize AccessController for property retrieval to improve code readability and maintainability by leveraging direct
fix miss fall distance when set a glowentity .
refactor query handling in SimpleJpaRepository to utilize CriteriaQuery and apply repository method metadata to improve query performance and enhance data retrieval efficiency
added timestamp , parent hash , nonce , and number fields to BlockUtil . java to enhance the functionality of BlockUtil by associating difficulty
rename loopsafepointinsertionphase to safepointinsertionphase for clarity
added null and empty check for children in RSGroupInfoManagerImpl and ZKProcedureMemberRcs classes to improve robustness by handling potential null
made several methods and classes public in ArtifactResolver . java to allow access to these methods and classes from other packages
added thread management to ClientConnectionHandler and BulletPhysics , and improved error handling in ChunkProcessingPipeline to ensure proper resource cleanup
added validation to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions during indexing
added functionality to manage the state of the login activity during configuration changes to ensure that the login process is only triggered when the user is logged in
added null checks for source and value extraction in Pump . java and implemented a new test for UUID order in PumpTest . java to
modified access modifiers of several fields and methods in HttpShardHandlerFactory and LBHttpSolrServer classes from private to protected to allow subclasses to
updated the order variable from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy . java
added Jetty server configuration and handler management to TestJNDI . java to enable improved handling and management of JNDI context in the application
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve readability and maintainability of the code
modified the return value of the method from checking if the loop is an instance of NioEventLoop to always return true to simplify the logic
updated the calculation of ` newNumNulls ` to use ` newNumRows ` if ` newNumRows ` exceeds ` newNumRows `
camel - jbang - export : add kamelet option to camel - jbang to export to kamelets .
replaced OkHttpOAuthConsumer with OpenStreetMap authorization handling in OSMJob . java to enhance security by ensuring only authorized users can upload
remove some system . out . printlns from test
added client authentication configuration to IoTDBRestServiceConfig and modified RestService to utilize it to enhance security by allowing client authentication based on configuration
replaced the initialization of ` mocksToBeInjected ` with a new instance of ` new HashSet ` in ` PropertyAndSetterInjection `
update bloomuriuniqfilter to remove dependency on bloomfilter32bitsplit
updated ` getCursorAdapter ` from false to true in ` HomeFragment . java ` and added preference for refreshing me in ` Tweet
updated the immediate header height ratio from 1f to 75f to improve the responsiveness of the user interface
updated import statements and introduced RecompilationEvent class for better event handling to improve clarity and specificity of logging related to recompilation
added configuration for managing host - level pre - installed hosts in the Ambari server to improve configuration management by allowing configuration of host - level
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and introduced a new test class ` UnknownChangeLogFormat
added logic to delete leading slash characters from the location string to ensure proper handling of leading slashes in URLs
added properties handling for entities and scores in StaticPipeline to improve flexibility and validation of entity and score configurations
refactor filename handling and introduce conditional loading in WhoopsModule to enhance flexibility and control over Whoops functionality based on environment
[ geos - 7011 ] catalogrepository should not throw an exception if a datastore can not be find .
refactor assertions in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` with
( chore ) camel - activemq : fix test that fail on slow ci server
replaced instances of ` IMeasurementSchema ` with ` MeasurementSchema ` across multiple files to simplify code and improve readability by eliminating
updated the loop structure and adjusted memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve
updated slf4j logging jar file name from " slf4j - log4j12 " to " slf4j -
[ hue ] fix huebridgehandlerosgivetest # testconfigurationerror ( # 11345 )
rename package ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` in multiple Java files to
ignore test until drool - 1276 be fix
added a constructor to PullRequestMergedEventsStream that accepts a Pinot schema file and a producer to initialize the stream with a specified topic name and
refactor AbstractPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix checkstyle violation in taskslot
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listener in ` NettyWebSocket ` and ` Netty
added error handling when attempting to release a lock in MoveTask . java to improve robustness by handling potential LockException during lock release
replaced properties loading with ResourceBundle loading for gem path and RUBY version to improve flexibility and maintainability of the JRuby configuration
replaced the constant ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY for null and empty address checks to improve code clarity
reformatted code for clarity in ClassGraphClassLoader . java to improve code readability and maintainability
added setup and teardown methods for managing the temporary directory in JobManagerStartupTest to improve test reliability by ensuring the directory exists before proceeding
chore : [ datastream ] update protoc to v3a in protoc ( # 317 )
added a Bundle to the builder in FileDisplayActivity to enhance the functionality of the builder by allowing additional properties to be passed
replaced ` break ` with ` continue ` in ` ParticleEmitter . java ` to ensure proper handling of null particle cases
updated expected cluster names from 4 to 3 in AmbariManagementControllerImplTest . java and AmbariManagementControllerTest . java to
removed nullable from the @ Column annotation in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
refactor Bug4823811 . java for improved code organization to enhance maintainability and readability of the code
replace direct addition of patternToDelete to args with a path relativizer function to enhance flexibility by allowing dynamic modification of the pattern
modified the requestFullState method to accept a boolean parameter indicating if the initial request should be scheduled or requested to improve flexibility in handling initial
updated ShibbolethCompatiblePersistentIdGenerator to include attribute handling and modified data generation logic to enhance flexibility in generating persistent IDs based on
removed unnecessary whitespace in the @ Inject annotation in RequestValidationService . java to improve code readability and maintain consistency
refactor keyboard handling in UiThreadHelper to use a Bundle for logging messages to improve code readability and maintainability by centralizing message management
updated formatting in ` FileNodeProcessor . java ` and removed redundant calls in ` MManagerBasicTest . java ` and ` MTreeTest
renamed NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add a simple unit test for slurpfile ( ) in ioutils . slurpfile ( )
changed access modifiers of several classes from protected to private and added @ FunctionalInterface annotation to enhance encapsulation and indicate that these classes are intended
refactor span retrieval logic in TraceWebFluxTests to use a dedicated method for filtering spans to improve code readability and maintainability by
added support for converting date types in Hive ' s ETypeConverter and DataWritableWriter classes to enhance date handling capabilities and support additional data types
replaced hardcoded string " \ \ s * " with Patterns . COMMA _ SEPARATOR in StyleConverter . java to improve code readability
make sure input dialog do n ' t crash on invalid input
refactor column count comparison logic in SemanticAnalyzer . java to improve clarity and maintainability of column count validation
refactor the logic for updating maximum scores and assertions in WANDScorer . java to improve clarity and correctness of score updates
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT and AWT classes to ensure compatibility with the latest AWT
updated the default value of curPixVal from - 1 to 0xFF000000 and added a new test class WhiteTextColorTest to ensure correct pixel
refactor biomedictionary to use a collection for supertypes instead of a list .
rename ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability by using a more descriptive variable name
updated ` @ Ignore ` annotation to ` @ Stability ` annotation in ` TaplTestsLauncher3 . java ` to enable test st
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
added a check to ensure logFileSuffix is not empty before proceeding to prevent potential errors when log file suffix is not provided
refactor PythonBuckConfig class to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest . java and modified return type in ShadowApplicationPackageManager .
improve meiligao decoder ( fix # 386 )
added a null check for the tile object before accessing its properties in PowerDiode . java to prevent potential NullPointerException when accessing tile properties
added a new ` TrimCache ` class to manage cache trimming to improve cache management and provide user feedback during cache trimming
replaced the usage of Google ' s ` com . google . common . base ` with Google ' s ` com . google . common .
replaced return values with exceptions for notauthorized exceptions in multiple access control factories to improve error handling and provide clearer feedback for unauthorized access
added an abstract method ` schedulePeriodically ` and updated the ` call ` method signatures to include ` @ SuppressWarnings ` annotations to improve code cl
updated refreshListOfFilesFragment to use onItemClicked instead of a hardcoded false value to improve user experience by reflecting the selected file
added debug logging and improved error handling for file matching in StreamUtil . java to enhance debugging capabilities and provide clearer error messages when multiple
refactor ` create _ table _ with _ environment _ context ` and ` create _ table ` methods to use ` CreateTableRequest ` instead
added an ` aborted ` flag and modified ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to manage task
updated BlockQuoteParser , DocumentParser , FencedCodeBlockParser , FencedCodeBlockParser , ListBlockParser , and List
added network wifi status receiver and event listener for autoplay in postfragment .
simplified the control frame validation logic in FrameGenerator . java to improve code readability and maintainability
added visibility setting for the collapse handle view in WidgetsBottomSheet to ensure the collapse handle is visible for better user experience
added new file ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript text requests to enhance security by
added a check to return early if the units to scroll is zero in StandardGraphIO . java to optimize performance by avoiding unnecessary processing when
changed the condition from checking if the contract list size is greater than or equal to 1 to check if the contract list is not equal to 1
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes and corresponding tests in ` JsonArrayTest ` and `
added hashCode ( ) method to IPPPrintService and created TestRaceCond class for testing print services to ensure consistent hash code comparison between
refactor db2i and db2z dialect to use getversion ( ) instead of getversion ( )
added a condition to check if the transaction ' s platform fee is greater than zero before verifying if the connection is enabled to ensure that the
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix buffer encryption for adaptive reconfiguration
changed class visibility from public to package - private in multiple Ant - related classes to restrict visibility to package - private for better encapsulation
added import statement for Retrofit in Part and PartMap classes to enable support for Retrofit functionalities in the application
refactor JsonBuildHelper and ParamsBuildHelper for improved handling of subTypeName and added new parameter handling logic to enhance code clarity and
added a new constant TYPE _ TASKBAR _ OVERLAY _ PROXY to the AbstractFloatingView class to enhance the functionality of the floating view by
fix : update gapic - generator - java with mock service generation fix ( # 1365 )
updated alpha calculation logic in ClipAnimationHelper and introduced hasRecents flag in RemoteAnimationTargetSet to improve animation accuracy based on recents
removed the second parameter from the createRenderScript method call to simplify the rendering process by eliminating unnecessary parameters
fix typo find by codespell on fossies . org
refactored system bundle checks into a separate method in PluginManagerActivator to improve code readability and maintainability by encapsulating system bundle
updated import statements and formatted code for consistency in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
updated BloomFilter initialization to use a constant LOW _ FALSE _ POSITIVE _ RATE instead of a hardcoded value to improve code read
refactor rocket configuration handling to use a more descriptive variable name and add selection logic for motor configurations to improve code clarity and ensure
server : fix npe when try to attach a vm to a host that do n ' t have an agent attach
added null check before converting to data in DefaultRecordStore to avoid potential NullPointerException when accessing values
kvm : throw a discovered exception if the host can not be add to the cluster
updated error messages in ParamAction . java to include name and value attributes to improve clarity of error messages for better debugging
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a generic Object instead of InvocationContainerImpl
added a method to strip method parameters from the method name in the ` getMethodLine ` method to improve parameter handling by eliminating unnecessary parameters
updated version name and code for the GreatVoyage application to reflect the new release version and version number
mondrian : use set instead of list in outputfilter to avoid duplicate
[ geot - 6321 ] symbolmblayer : use label cache key instead of string literal ` ` repeat ' '
ggb - 1342 center and resize popups when overlap feature change
updated error messages from " : " to " - " in ValidationSuite . java to improve clarity and consistency in error reporting
added a new ` StartingWindowListener ` class and refactored the task launching logic in ` QuickstepTransitionManager ` to improve code
added documentation comment inherited from MBeanServerConnection to improve code clarity and maintainability
updated exception messages in CheckPackageAccess . java for clarity and added exception handling for PackageAccess and PackageDefinition to improve error reporting and ensure
increased the await termination time from 30 seconds to 90 seconds in ThreadSafetyTest . java to allow more time for the executor service
changed the type of loggingEnabled from boolean to Boolean and added a null check before setting it to ensure logging is only enabled when it is not
added @ JsonIgnore annotations to mmm Schema . java and ppp Schema . java files to exclude specific fields from JSON serialization
increased the test timeout from 5000 ms to 10000 ms to allow more time for tests to complete successfully
lucene - 10595 : use log for score calculation ; use log instead of log
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and introduced ` CheckHelperAuditModule ` to improve clarity of module
refactor Prototype class to improve code structure to enhance maintainability and readability of the code
added a check to initialize ` tableIsTransactional ` if it is null to ensure that ` tableIsTransactional ` is set correctly based
[ java ] remove unused recordingwriter . writefragment ( ) method .
fix indexoutofboundsexception when index be 0 .
fix kairos datastore test to work with alias query
updated currency pairs in VaultOfSatoshiBaseService . java from " BTC / CAD " to " BTC / USD
updated import statements and added cleanup logic for EntityManagerFactory and SessionFactory in multiple test files to ensure proper resource management and prevent memory leaks
updated KafkaSender import statements from kafka11 to kafka in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure compatibility with the
added new files GwtBinaryIntegrationTest . java and A . java to implement integration tests for Gwt binaries to ensure that the G
updated visibility logic for loadingCauseLabel and improved exception handling in SQLConsole to enhance user experience by ensuring loading cause labels are only visible when
reformatted code for consistency and clarity in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to improve code readability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes and replaced spm with securityPropertyManager in SAX
added a new file ` InlineDefaultMethod . java ` with interfaces and classes implementing default methods to demonstrate the use of default methods
replaced LIKE queries with GLOB queries in SqliteFieldPredicateView . java to improve performance and simplify string handling
relax access modifier of dmnassemblerservice . getDMNProfiles ( ) to allow subclass access to the method
fixed - rscript . load ( ) method throw npe if slave node do n ' t exist
remove unsafe . setwordfieldvolatile and add assertion to staticobject .
updated debug log statements to use verbose level instead of string concatenation to improve log readability and provide more detailed information during project generation
fix potential memory leak in fmloutboundhandler . sendproxy ( ) .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and modified the thread pool configuration in WebServer . java to improve
replaced ` idsToShortcuts ` with ` removedShortcutInfos ` and modified shortcut retrieval logic to improve shortcut management by ensuring removed shortcuts are
remove unnecessary check for non - string values in DefaultHttpClientBinderRegistry to simplify code logic for better readability and maintainability
removed home navigation case from DetailFragment . java to streamline navigation process for improved user experience
added a condition to check if the Android market is present before proceeding to ensure that play services are only included when the Android market is present
refactor TableBlockParser to improve handling of cell boundaries and add new test cases for header pipes to enhance code clarity and ensure proper rendering
added a bridging header feature to the NewNativeTargetProjectMutator and related classes to allow customization of the bridging header for
refactor the handling of unused methods and source file paths in PotentiallyDeadCode . java to improve code clarity and maintainability by using
added functionality to handle diamond type inference in Attr . java and created multiple new classes Foo . java and T6939780 .
replace calls to invocation . startSend ( ) with invocation . onStartSendRequest ( ) in HighwayClientFilter . java and RestClient
removed unused import and debug log statement from SolrCacheHolder . java to improve code clarity and reduce unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper handling of authentication errors during LDAP operations
modify the comparison logic in Test6796786 . java to correctly compare two floating - point integers to ensure accurate comparison of floating - point
added " logback . dev . xml " to the configuration file names in JoobyMojo . java and Main . java to
added a new file ` JaasEventCheck . java ` that implements the ` ApplicationListener ` interface to handle Jaas authentication events to enable
refactor animation logic in QuickstepTransitionManager to utilize a list for views to animate to improve code readability and maintainability by redu
updated comparison logic in ` ConjunctionSolrSpellChecker ` and added unit tests in ` ConjunctionSolrSpellCheckerTest ` to ensure
replaced HashMap with Map for fetchingers in ShadowSystemServiceRegistry . java to improve flexibility and maintainability of the code
[ hotfix ] [ runtime ] remove unused leaderinformation change log name
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : increase default wait for ready command from 60 second to 5 second to allow more time for the command to complete .
updated JDBC table parameter handling in AbstractJDBCConnectorProvider . java to improve clarity and consistency in database schema management
corrected the spelling of " SQLUpdateAUP " to " SQLUpdate " in multiple files to ensure consistency and accuracy in SQL update
updated schemaTypeCache to use Collections . synchronizedMap and refactored schema creation logic to improve thread safety and simplify schema cache management
update header management logic in StaticServerHttpHeadersWriter and add case - insensitive header writing in StaticServerHttpHeadersWriterTests to ensure that headers
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that relies on file availability only within CMU
added a call to create a storage directory in the TestCollector class to ensure the storage directory exists before proceeding with operations
set chunked streaming mode to 1024 * 1024 in StarTreeJobUtils . java to optimize performance by reducing the number of HTTP requests
added basicsyntaxchecker , multipletypesyntaxchecker , and singletypesyntaxcheckertest
hbase - 20513 use hbase . protobuf . com instead of com . google . protobuf . com in hbase - tools
added a new test for bean population with recursive structure and created a new Node class with associated methods to ensure that the BeanPopulator does not
added IOException to the getRemoteName method signature to handle potential IOException during method execution
updated exception handling in UserAccountManagerImpl to include IllegalArgumentException and refactored client creation in ClientFactoryImpl to improve error handling clarity and
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enable compatibility with AspectJ in the security configuration
added hostname verification configuration and modified SSL socket settings based on system properties to enhance security by controlling hostname verification during SSL connections
added an ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enable removal
[ flink - 20536 ] [ table - planner - blink ] fix joininternal ( ) call in clientschemaservice
destroy joint edges in the world if they ' re destroyed to ensure proper cleanup of joints and avoid potential memory leaks
fix nullpointerexception in searchfilter when filter be null .
[ hotfix ] [ test ] move sourcerecorertestbase to testutils package
replaced multiple conditional checks for document existence with a try - finally block for better error handling to improve code readability and maintainability while ensuring
added new files for ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookTest ` , and modified ` cucumber
refactor buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing
updated setExoOptions method to include a boolean parameter for allowTs to enable support for live TV playback in the playback profile
removed the user identifier from the identifier collection in DMRDecoderState . java to clean up unused identifiers and improve code clarity
added a constant INVISIBLE and modified the toString method in Color . java , while updating imports in RailButtonShapes . java to improve code
updated null handling logic in CountAggregationFunction and added a new test for COUNT with null handling query option in NullHandlingIntegrationTest to ensure correct
initialize the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the deep state
escape the name of the XML string before appending it to the buffer to enhance security by preventing XML injection vulnerabilities
updated file initialization to use a configurable work directory instead of a hardcoded string to improve flexibility and configurability of the work directory used
added a check to set the " deprecated " attribute for rules in RuleSetFactory to ensure that rules are marked as deprecated when they are present
use jmp instead of bind to dummy .
renamed minStamp and maxStamp variables to static final and updated their initialization logic to improve clarity and maintainability of the TimeRange class
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the code
refactor connection handling by extracting JSON emission logic into a separate method to improve code readability and maintainability by reducing duplication
refactor attachment handling in DetailFragment and GalleryActivity to improve code readability and maintainability
fix tank not drain if the player be sneak
updated CsharpLibrary . java to handle both CsharpLibrary and PrebuiltDotnetLibrary based on rule type to improve compatibility with
added handling of iq type ' get ' in iqpephandler .
intrinsificationphase : check if the runtime be not null before use it .
[ beam - 10670 ] fix race condition in metrictrackingwindmillserverstub and streamingdataflowworker
pdfbox - 4892 : avoid infinite loop when parse object , a suggest by valerybokov
added constructors to ` LwjglApplet ` for handling ` canvas ` and ` canvas ` in ` LwjglApplet ` to
simplified the string representation of DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to enhance readability and maintainability of the
refactor LdapAuthenticationHandler and AccountStateHandler to streamline password policy application logic to enhance code clarity and maintainability by consolidating handling
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and set its value in ` LdapUtils ` to enable
updated method signatures in Readable . java to improve code readability and maintainability
updated the method of running a PDF document in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT to
updated the icon resource for the share menu item in CaptureActivity . java to improve clarity by using a more descriptive icon name
updated JVM version detection logic to utilize JVM _ MAJOR _ VERSION and JVM _ MINOR _ VERSION to ensure compatibility with different Java
updated JDBC41 connection timeout detection to check for non - JDBC 41 compliant drivers to ensure proper handling of connection timeouts and improve error management
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredList in Enclosed . java to improve performance and memory efficiency by using a more suitable data structure
added multiple @ Override annotations in various classes to ensure proper method overriding and improve code clarity
rearranged variable declarations in ChartProvider . java to improve code readability and maintainability
change default file extension to bibtex _ db in append and open database action
simplified the return statement in JavacParser and added a new ExtraSemiTest class with a Java compiler test to improve code
added functionality to find users by their created time in the database to enhance user management by allowing retrieval of users based on their created time
refactor Test15FloatJNIArgs class to improve code readability and maintainability
refactor version and website information in the plugin to improve readability and maintainability of the code
fix off - by - one error in mockprocesscontext . encrypt ( )
[ java ] ensure archive call be not thread - safe .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added ` @ Test ( timeout = 10000 ) ` to the ` SslBytesServerTest ` class to allow more time for tests to complete and
peer : fix typo in javadoc
updated methods in RealtimeIndexingCoordinator , RealtimeSegment , StreamProvider , and StreamProviderConfig to improve clarity and functionality to enhance the
updated FailureWatcher to check for null exportedData before writing to improve robustness by preventing potential NullPointerException when exporting data
refactor RecyclerViewFastScroller to use a dedicated method for calculating scroll thumb radius to improve code readability and maintainability by encapsulating
updated error messages in BuckWSServerPortUtils and added a method to check if the tool window is instantiated in BuckToolWindowFactory
added a condition to check if the system is Windows before setting the preventSleep checkbox in the GeneralTab to ensure that the preventSleep checkbox is
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
updated QuickstepAppTransitionManagerImpl . java and FloatingIconView . java to handle cropping dimensions based on device orientation to improve layout
added full - screen exclusive mode state management to XWindow and relevant peers to enhance the control over window state and improve UI
fix playeddurationstr ( ) and playeddurationstr ( ) when length be less than 8
added methods to manage URI credentials for MapWork and ReduceWork in DagUtils . java to enhance functionality by allowing credential management for DAG
( chore ) camel - core : replace usage of keyset ( ) with entryset ( ) in camel - core
trim whitespace from thread name assignment in SessionState . java to ensure thread names do not include leading or trailing spaces
updated the message in GpsMainActivity to clarify that the next point can not be added to a file to improve user understanding
refactor Job class to improve code readability to enhance maintainability and simplify future updates
added a new abstract class ` Unused ` with associated methods and a test method in ` Main . java ` to facilitate testing
updated the key for HBASE _ MASTER from " hbase _ master _ host " to " hbase _ master _ hosts " and added
deleted the EventReaderDeserializer and EventWriterSerializer interfaces from the project to remove unused interfaces to streamline the codebase
modified the return type of the ` performJoin ` method from ` GenericRecord ` to ` List < GenericRecord > ` across multiple classes to
updated the maximum delegate lock period logic to allow values greater than 10512000 to ensure that the maximum delegate lock period does not exceed the defined
cloudstack - 6892 : fix npe when try to set network rate to zero .
removed the default constructor and the applySpecification method from the CmcExchange class to streamline the code by eliminating unnecessary initialization and specification
updated the configuration handling in ` GossipLocalNode . java ` and changed the configuration file names in ` Constant . java ` to improve clarity
change default value of ` hazelcast . client . tpc . enabled ` from ` ` true ' ' to ` ` false ' ' (
updated Swagger UI version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application classes to improve API documentation UI features and
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality
refactor key assignment logic in NamedObjectList . java to improve clarity and ensure proper handling of blank names
rename methods and variables from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple files to improve clarity and specificity regarding
rename AsyncCache and Cache classes for consistency to improve clarity and maintainability of the codebase
added import for RCFileInputFormat and registered it with Kryo in SerializationUtilities . java to enable support for RCFileInputFormat serialization in
added methods to retrieve Java types and categories for columns in TypeMapperComponent to enhance type mapping capabilities for Column objects
added error handling for invalid host headers in Request . java and updated tests in RequestTest . java and SelectChannelTimeoutTest . java to improve
replaced the import of ` libcore . util . TimeZoneFinder ` with ` org . robolectric . util . ReflectionHelpers `
refactor addOutgoingValues and forEachOutgoingValue methods in StandardOp . java to improve handling of outgoing values and enhance instruction value processing
refactor SegmentCoreReaders and SegmentReader to simplify directory handling and improve code clarity to enhance maintainability and reduce redundancy in directory management
added a new method ` hasMainThreadProfile ` to check if the main thread profile exists in multiple classes to enhance management of main thread profile
added validation to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi = True to prevent runtime errors
rename constants from " greekLowerCase " , " irishLowerCase " , and " uaX29UrlEmail " to " gree
updated HSSFSheet and Sheet classes for improved functionality to enhance performance and maintainability of the code
use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor since dspace 4.0
added a list to manage time zone identifiers and removed specific America / Dawson , America / WhiteHorse , and Canada
updated SurfaceSyncGroup instantiation to include " TaskBarController " to improve clarity by specifying the group name for the synchronization group
updated GridFsTemplate to directly use gridFSFile ' s ID instead of converting it to BsonObjectId to improve code clarity and reduce casting
added new properties ` totalSize ` and ` bytesSoFar ` to the ` ShadowDownloadManager ` class and modified the ` ShadowDownloadManagerTest `
refactor character handling in TextField . java for better readability to improve clarity and maintainability of the code
added a check to prevent redundant comparisons in GroupNodeViewModel to improve performance by avoiding unnecessary processing
refactor afterSetStatements method in Block and BlockLexicalContext classes for improved clarity and functionality to enhance code readability and ensure
added hashCode ( ) and equals ( ) methods to IntervalXYDelegate and XYSeriesCollection classes , and improved equality checks in XYSeriesCollection
fix clientqueuedisruptiontest . cleanup ( ) to be call after each test
removed unnecessary whitespace in CloudWatchAppender . java and renamed test methods in RegisteredServiceScriptedAttributeFilterTests . java to improve code readability and
updated Gson serialization method to use ` serializeSpecialFloatingPointValues ( ) ` instead of ` serializeSpecialDoubleValues ( ) ` to improve compatibility
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added checks for non - empty subtags in Locale . java and refactored language tag handling in LanguageTag . java to improve robustness
add kvm . ssh . to . agent config to allow ssh into agent
removed the ` public ` access modifier from several constructors and methods in ` SchedulerWhen . java ` to enhance encapsulation by restricting access to
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to align with the new package structure for better organization
added a condition to exclude the " - " character from the filter in SimpleSearchQueryConverter to ensure that the filter does not contain invalid characters
replaced instances of " natural order " with " Natural column order " in BrowserContentPane . java and updated UISettings usage in
updated the method call from ` Arrays . copyOf ( input , 6 ) ` to ` Arrays . copyOf ( input , 6 ) ` to improve
updated the write method to include HTML encoding for remoteAddr to enhance security by preventing potential XSS vulnerabilities
fix item state trigger handler for smarthome / items / < name >
simplified the synchronization block in FastHttpDateFormat . java to improve code readability and maintainability
added multithreading support for file move operations in Hive to improve performance by allowing concurrent execution of file movement operations
added two overloaded ` trigger ` methods to ` WrapTimer ` for scheduling and canceling a timer to enhance flexibility and control over timer
[ hotfix ] [ table - common ] support local _ date and local _ date _ time type in tostringutils
added a verbose option to the error logging mechanism in AbstractStatusReporter to provide more detailed error information for debugging purposes
added menu visibility toggle functionality to ClickStartHandler initialization and conditional menu toggling in ItemControls to enhance user experience by ensuring menu state is
s2svpn : do n ' t allow vpn connection to be establish between the customer gateway and the customer gateway
refactor error handling in CursorReadingTask and add a new test case in CursorReadingTaskUnitTests to improve error management and ensure proper exception
added logging for encrypted PDF documents in PDFBoxThumbnail . java and PDFFilter . java to ensure proper error handling for encrypted PDF documents
[ 3.0 ] fix the problem that the service be offline for a long time without re - registration ( # 10200
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated Uri creation and deletion logic in HostsList . java to use ' id ' instead of ' getSelectedItemId ( ) ' to improve clarity
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
updated the method signature of replaceOrderBulk to accept a List of BitmexPrivateOrder objects instead of a Collection to improve flexibility in
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to use it for dynamic field retrieval to
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior in a multi - threaded environment
remove all resource from the roster when a user be offline .
replaced direct calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency in formatting
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid NullPointerException when extTypeCustomDesers is null
added a system property to set the mock server ' s logging level to WARN to improve logging visibility for better debugging
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the ` createJetty ` method in ` AbstractSolrMorphlineZkTestBase . java ` to
updated scoreMap to use termScoreMap instead of scoreMap and added termScoreMap to improve clarity and functionality of score mapping in the
updated conditional checks for ` data ^ parameter . data ` and added an ` eq ` method in ` U64 . java ` to improve cl
updated headline style settings in MainViewModel . java to improve text appearance and readability of the application
updated the notification logic in WallpaperColorInfo . java to include support for dark text to ensure the change notification accurately reflects the
[ hotfix ] [ runtime ] fix checkstyle violation in checkpointrequestdecider
updated thread pool configuration and import statements in Parallel . java to enhance thread management and optimize resource
replaced ` filter ` with ` anyMatch ` in the ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver ` to simplify the code and
[ ci ] fix openCV test on window and arm
http : / / issues . apache . org / jira / browse / amq - 3986 - improve test , copy prefetch policy on manage connection factory
do n ' t throw any exception if the return message ca n ' t be send to the python proxy
added a new annotation type ` Issues ` and its usage in the ` Issue ` class to provide a mechanism for managing multiple ` Issue `
updated userProps key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified imports
updated socket connection logic to conditionally use an unresolved InetSocketAddress based on the " socksProxyHost " system property to enhance flexibility in socket
[ hotfix ] fix checkstyle violation in slotstatus and slotreport
removed the import of ClassUtils from org . apache . commons . lang3 to streamline code by eliminating unnecessary dependencies
replaced instances of HashSet with LinkedHashSet for _ excludeProtocols , _ excludeCipherSuites , and selected _ protocols , in SslContextFactory . java to
added a static variable ` systemResource ` and a conditional check to return it if the resource is the system resource to improve resource management by ensuring
[ java ] increase plaintext segment size in streamingaeaddecryptingchannel and streamingaeadseekabledecryptingchannel
added a test for circuitBreaker invalid fallback exceptions in ServerMvcIntegrationTests . java to ensure that invalid circuit breaker routes throw an exception to
updated HTTP client configuration to use SSLConnectionSocketFactory and AllowAllHostnameVerifier to enhance security by enabling hostname verification for HTTP connections
updated the size limit setting for the input stream and removed the resetBytesReadCounter method to optimize performance by reducing the number of bytes read
moved the ` preferAES ` property from ` StandardProtectionPolicy ` to ` ProtectionPolicy ` to encapsulate the ` preferAES `
( chore ) camel - opentelemetry : use logger instead of system . out
[ ec2 ] remove elbintegrationtest . testloadbalancerinstanceoperations from elbintegrationtest
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity by
added error handling for file creation in DiacriticTest . java to improve robustness by preventing crashes due to invalid file paths
hhh - 14816 skip test on oracle 11 when use a driver other than ojdbc6
updated file handling and error handling in TextureUnpacker . java to improve robustness and provide clearer error messages when the texture file is not
refactor AmbariManagementControllerImpl to use a global write lock for better concurrency management to ensure thread safety when modifying shared resources during service
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the ResultSet does not close a statement and introduced a method to check if it is closed to ensure proper resource management
remove unused mark support check from inputstreambodygenerator and add more test
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager . java to ensure proper handling of pre - deleted databases in
replaced the writeAndFlush method with a direct write method in Http1xUpgradeToH2CHandler . java to streamline the
updated item ID comparison in EnhancedBrowseFragment and added deletion functionality in FullDetailsFragment to ensure correct item management and provide confirmation for item deletion
refactor CSS - related classes to implement the RuleBank interface instead of passing styles directly to improve code organization and encapsulation by separating rule
do n ' t swallow exception , throw an alert instead
added new files TestMonomorphicObjectCall . java and Object . java for testing and object manipulation to facilitate testing and object
reload meta data for all databrowsers after datamodel change
hbase - 16400 fix npe in defaultmemstore . shouldSeek ( scan scan , long columnfamily )
[ hotfix ] [ runtime ] rename ` ` localstate ' ' to ` ` localrecovery ' '
refactor ` AlterTimeSeriesStatement ` to accept a boolean parameter for ` isAlterView ` and update its initialization logic to enhance flexibility
fix : matchtext ( ` ` * ' ' ) should match whole string ( ` ` * ' ' ) and substring ( ` `
added a try - catch block around the retrieval of the routing table builder to handle potential exceptions when retrieving the routing table builder
refactor parameter handling in HttpClientIntroductionAdvice to use a loop for adding entries to the paramMap to improve code readability
( chore ) camel - jms : use char [ ] instead of string
server : allow listdomainchildren to be call in recursive mode
updated equality checks in Counters to use ` ! = ` instead of ` > ` for consistency to improve clarity and prevent potential errors in
updated the parameter name from ' status ' to ' original ' and added warnings to the BasicTumbleStepper class to improve clarity
sulong : fix call to system . currenttimemillis ( ) with truffle boundary .
updated variable handling in PrettyPrinter to use ' var ' instead of ' tree ' to improve clarity and maintainability of the code
updated LRUDictionary to ensure indexNode is only created if it does not already exist to improve memory management and prevent potential null pointer exceptions
refactor filtering logic in DatagramSocket and update receive method in DatagramChannelImpl to improve clarity and correctness of filtering and receive
updated JUnit imports and annotations from ` @ Before ` to ` @ BeforeEach ` in ` TestQueryDNS . java ` to integrate J
added a new file ` NutchServerInfo . java ` to provide a structure for managing server information in the Nutch service model
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter . java to utilize AttributeSource for improved attribute
added timestamp handling to CqlInserter , ThriftInserter , and SettingsColumn classes , and updated return statements to include a timestamp
updated DSAParameterGenerator to handle non - constant values for prime sizes and replaced hardcoded values with constants to improve code clarity and ensure
updated the implementation of ` NumberUtils ` and ` Numbers ` classes to improve bit conversion logic and enhance performance by using ` Float64Array
update masking logic in InetAddressSet . java and add new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate
added constraint violation checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper . java to ensure proper handling of constraint violations in
remove setzeroifnotfound ( false ) in remotewebbrokeroffsetstore and rework consumermanagerprocessor ( # 7995 )
added a new method ` addTab ` and refactored the ` createTab ` and ` insertTab ` methods in ` Tabs `
replaced array initializations with zero - length arrays in multiple Java files to improve performance and reduce memory usage during array conversion
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder
refactor conditional statements in MavenVisitor . java to use if - else syntax to improve code readability and maintainability
updated mock app secret , app name , configuration , and rule names from " MOCK _ NAME2 " and " MOCK _ NAME _
added a new file ` FormatCheckingTest . java ` to test Java class format errors to ensure that the application does not throw a ClassFormatError
updated line number assignment logic in CodeGenerator . java to improve clarity and maintainability of line number handling
added a try - catch block around the retrieval of service properties to handle potential exceptions during configuration retrieval
added static factory methods to create toggle instances for RadioButton with specified icon and command options to enhance flexibility and usability of the RadioButton
updated the cache initialization to use a specified cache size and increased CHUNK _ METADATA _ CACHE _ SIZE from 100 , 000 to 10 , 000 to
changed the visibility of DEFAULT _ CAPACITY from private to public in SimpleChannel . java and refactored capacity handling in ChannelParser . java
camel - jbang - fix npe in osgimanagementnamestrategy when symbolicname be null .
add support for the usemode system property in modecontribution . load ( )
added error handling for adding and removing the shutdown hook in IOManager and improved logging in YARNSessionFIFOITCase to enhance robust
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and ` RobolectricTestRunner `
added null check for notPropagatedHeaders and updated selectiveHeaderPropagation logic in AbstractMessageProducingHandler . java to ensure proper handling of
refactor CompareMode class to improve comparison logic to enhance performance and accuracy of comparison operations
added ` HasTests ` interface to ` Arg ` class and implemented it in ` RustBinaryDescription ` and ` RustLibraryDescription `
updated placeholder and error drawable resources in FileMessageVH . java to improve consistency and clarity in drawable resource usage
rename OnExitTest . java file to improve clarity and consistency in naming conventions
added an onUserPreferenceChanged method to recreate the taskbar when the user preference changes to ensure the taskbar is recreated when the user
refactor heap dump logic to differentiate between IBM JVM and hotspot JVM to improve compatibility with different JVM implementations
camel - 16400 : camel - mybatis should close mybatis session if commit fails .
simonstewart : fix the firefox driver to use the ie driver .
updated Java version from JDK 5 to Java 5 and refactored generic type declarations in IteratorToFor . java to ensure compatibility with Java 5
set application state to unavailable in JmxApplicationProvider . java to ensure proper handling of unavailable application states
updated position and limit handling in ByteBuffer and StringCharBuffer classes to improve clarity and correctness of position and limit calculations
replaced ` toUri ( ) . toString ( ) ` with ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to
refactor setEmpty methods across multiple array - related classes for consistency and clarity to improve code readability and maintainability by standardizing method
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to Protocol and Transport from other packages
added a new document for " bluebird pizza " in TestMultiPhraseQuery . java and updated the assertion message in the test to
updated the assignTickets method to assign tickets based on the payment method instead of a hardcoded false value to ensure correct ticket assignment based on
added onTimeout thread management and improved error handling in HttpChannelState . java to ensure that onTimeout listeners are only invoked on the correct
replaced printStackTrace ( ) with logger . warn ( ) in SslBytesTest , SocketChannelEndPointTest , and TrackingSocket , and added
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
do n ' t use local _ quorum when use paxos = = local _ serial
added a condition to check for " Home " model in HeosDiscoveryParticipant . java and set a default serial number in HeosPlayerHandler
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
refactor Neo4j . java to utilize AttributeController and AttributeTable for node and edge data handling to improve attribute management and enhance
added null check for serverName in SessionManager . java to prevent potential NullPointerException when serverName is null
nifi - 7742 : move rocksdbmetronome to controller - repository package
updated the method to retrieve the " IS _ GRANTABLE " boolean value from a results object to enhance flexibility by allowing dynamic retrieval of
updated JavaScript execution logging and modified URL validation logic to enhance debugging capabilities and ensure proper handling of URLs starting with " javascript : "
camel - cxf : fix the unit test error of cxftomconsumertest
hbase - 21756 loadtesttool do n ' t modify column if cf be null
implemented the Disposable interface in the Texture class to ensure proper resource management and prevent memory leaks
updated null checks for ` tldBundleLocation ` and changed ` _ extractWars ` to ` true ` in ` OSGiAppProvider
check goquorum genesis config only when goquorum privacy be enable
changed the handling of error suppression from IOException to Throwable in HttpInput . java to improve error handling by capturing a broader range of exceptions
added a condition to exclude the " JP " country from the list in LocaleTest . java to prevent issues related to the change in the
rename ` Wrapper ` to ` HostResponseWrapper ` across multiple Java files to improve clarity and consistency in naming conventions
added a check for the boost value in the FilteredQuery class and updated hash code calculation to include the boost value to ensure accurate filtering and
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 1343 text editor : fix for ggb - 1344 , use scrollpanel instead of listbox
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior with specified metaspace sizes to ensure
added a check for non - empty entities before creating an ItemTossEvent instance to avoid potential NullPointerExceptions when entities list is empty
rename ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and update references accordingly to improve clarity and consistency in
use identityqueryfilter in compactionstest . testcompactions
added null check for the ' type ' attribute in MiniAapt . java and created a test for invalid item resources in MiniAaptTest
added a new operator " SPEL " to the OperatorEnum and implemented SpELJudge functionality in the OperatorJudgeFactory to enhance
replaced the equality check for ordinalityType from ' = = ' to ' . equals ( ) ' to ensure that ordinalityType is
bugfix # 205362 , use lookup . getdefault ( ) instead of service . providers ( ) . next ( )
updated multiple Java files related to certificate handling and verification to improve code organization and maintainability
updated references from ' 0l ' to ' 0L ' for start _ offset and length in ShadowArscAssetManager9 . java to
updated source and target options in SetupHid . java from " 1.5 " and " 1.5 " to " 6 " to
changed the visibility of the ` extractMetadataColumns ` method from private to public and introduced a new ` MetadataOnlyProjectionRewriter ` class to
updated localization handling in AboutActivity to use a sorted list of localized names to improve code maintainability and ensure consistent ordering of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming settings in HomeFragment to ensure shared preferences are only refreshed when live streaming is enabled
added the exception cause to the MappingException in AuditConfiguration . java to improve error handling by providing more context in the exception message
( chore ) camel - file : fix flaky test on slow ci server
updated generic type declarations for AbstractType in SchemaLoader , CompositeTypeTest , and DynamicCompositeTypeTest classes to enhance type safety and improve code
added support for checking transport capabilities in GitClientApplication and updated RepositoryUrlPanel to utilize this new feature to enhance the flexibility of transport
added delegation name retrieval methods for various input consumer classes to provide clearer identification of input consumers for better debugging and monitoring
added null check for ` mavenMetadata ` and updated version comparison logic in ` ChangeParentPom . java ` to improve robustness by handling
8275362 : testbug : testlargepageuseforheap . java fail with ` ` java . lang . runtimeexception :
cloudstack - 8043 : do n ' t migrate cloud _ usage db if it do n ' t exist
http : / / issues . apache . org / activemq / browse / amq - 2636 - fix test failure on window
added a new file ` TestObjectStreamClass . java ` and modified ` ObjectStreamClass . java ` to include a test class for serialization
updated conditionals in ZoneAwareDiscoveryFilter to check for null values to improve code clarity and prevent potential null pointer exceptions
changed log level from error to warn in OpenTracingTracer . java to provide a more appropriate logging level for tracing failures
added a toString ( ) method to the Generator class to provide a readable string representation of the generator ' s state
initialize ` doquote ` and ` dontquote ` variables in ` URI . java ` and add new test cases in ` Test . java `
added error handling for missing resources in ClusterControllerImpl . java and a corresponding test case in ClusterControllerImplTest . java to improve robustness
refactor response validation logic in AccepttoApiUtils . java to improve error handling and provide clearer logging for API response extraction failures
removed Android version check for buffer allocation in VertexBufferObject . java to ensure compatibility with devices running Android versions below 5
refactor SybaseASADatabase class for improved functionality to enhance performance and maintainability of database operations
phoenix - 1649 add support for force projection in hashjoininfo ( addendum )
added a new method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide a way to access the string distance for
added FLAG _ IMMUTABLE and FLAG _ MUTABLE for mutable PendingIntent in AndroidImplementation . java to ensure compatibility with newer Android
refactor HiveFileFormatUtils to append read column IDs and improve configuration handling to enhance code clarity and maintainability by centralizing read column
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple calls to ` DisplayTemporaryToast ( ) ` in ` SavedExperiments . java ` to display a temporary toast message
added version handling in ServiceModule and a corresponding test in ServiceModuleTest to ensure correct version resolution when the parent version is null
added a new test class RawSerializationTest for Gson serialization tests to ensure correct handling of primitive and object collections in JSON output
danielwagnerhall : rename seleniumserver to sslcertificategenerator to avoid confusion
refactor the loop to use an index - based approach for retrieving replies and adjust padding to improve code readability and ensure proper padding for the
increased the timeout duration in the ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for the test to complete
added a new test method ` testNGramFilterPayload ` to ` TestNGramFilters . java ` to validate the functionality of token filtering
refactor AclImpl class to improve code structure to enhance maintainability and readability of the code
added tests for randomizing arrays in EasyRandomTest . java and updated test cases in EasyRandomTest . java to ensure correctness of array
citrixresourcebase : catch exception when try to stop a vm .
added a thread - local variable ` tryWriteAgain ` to manage the state of ` _ runCompleteWrite ` to ensure that the write operation
reformatted code for clarity and added a new method ` ancestorsVisible ` to check if an actor is visible to improve code readability and
added logging for failed rolling - update step in deployment group name to improve visibility into deployment failures for better debugging and monitoring
[ hotfix ] [ table ] add miss @ nullable annotation to sinkprovider and datastreamsinkprovider
added error handling for non - existent usernames in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve robustness by
updated AtMostXVerificationTest . java file to improve test coverage and ensure accuracy of verification logic
updated default QTYPE from " lucene " to " luceneQParserPlugin . DEFAULT _ QTYPE " in multiple files to ensure consistency
updated SimpleDateFormat instantiation to use Locale . US to ensure consistent date formatting across different locales
added the ` isInitialized ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new ` Loc
changed the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the test _ fetch _ token _ from _ authorization _
added methods to manage database transactions in DatabaseAdapter and updated GncXmlHandler to call these methods to improve transaction management and enhance error handling during
refactor input stream handling in MimeType . java to use ByteArrayOutputStream instead of byte array to improve performance and readability of the code
refactored exception message handling in ` MessagingTemplate . java ` to improve readability and maintainability of the code
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to determine if a source file is an instance of ` J . Compilation
added maximum buffered documents and RAM buffer size settings to TestIndexWriterMergePolicy to optimize memory usage during index writing operations
added a new test method ` updateWits ` in ` ManagerTest ` to verify the functionality of updating witnesses to ensure that the system
added exception handling for NoSuchElementException in CopyOnWriteMap to improve robustness by preventing potential NoSuchElementException during iteration
remove log4j - level parameter from flumenode . logversion and logenvironment
updated authentication metrics and thread handling in BasicAuthIntegrationTest and DaemonStream classes to improve accuracy of authentication metrics and ensure proper resource management during daemon
changed the implementation of the ` nodes ` variable from ` HashMap ` to ` LinkedHashMap ` to ensure consistent iteration order for graph nodes
[ java ] add internalerrormapper to jerseysupport to handle internal error .
refactor header validation logic in Http2TestBase . java to use a new method to improve code readability and maintainability by centralizing
refactor system property handling in System . java to use a switch statement to improve readability and maintainability of the code
updated method parameters from String to CharSequence in StringSubject . java and added new test cases in StringTest . java to enhance flexibility in string
[ gr - 38686 ] add jvm . countertime ( ) and jvm . eventwriter ( ) to checkgraalintrinsics
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory configuration to use ` ds2 ` instead of ` ds ` to improve flexibility in database connection management based on compaction settings
updated DeploymentOptions . java file to improve deployment configuration handling
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` instead of ` ConstantState ` and modified drawable handling to improve
refactor code to use try - with - resources for better resource management in XmlParser and YamlParser to improve code readability and ensure proper
added support for the COALESCE SQL function in RexNodeConverter and SqlFunctionConverter to enhance the handling of coalesce operations in
( chore ) camel - core : fix the test error of camel - hl7
updated JavassistProxyFactoryFactory to use the current thread ' s class loader for proxy factory generation to ensure proper context class loading for
updated constructors and method signatures in DefaultDateTypeAdapter for consistency and clarity to improve code readability and ensure thread safety during serialization and deserialization
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI setting and query invalidation to improve code readability and maintainability by eliminating redundant logic
added a method to filter old entries based on the size of entries to improve data consistency by ensuring only relevant entries are processed
hbase - 21781 fix the log level of fshlog . append ( ) from fatal to warn
refactor NodeMap to implement a new NodeMapIterable class for better encapsulation to improve code readability and maintainability by separating iterable
updated the predicate variable name from ' predicate ' to ' subPredicate ' in DiscoveryClientRouteDefinitionLocator . java to improve clarity by explicitly
added a check for non - empty fields before applying aggregation in MongoRecordReader . java and modified return logic in RexToMongoTranslator .
of - 2269 : add ` ` admin ' ' to the admin list if it be empty
replaced the use of ` MultiFields ` with ` SolrIndexSearcher ` for retrieving terms in multiple plugin classes to improve performance by avoid
modify the return statement in ConstantBeanHolder to include the identity hash code of the bean to improve debugging by providing more context about the bean '
refactor GroovyParserVisitor to simplify the handling of primitive types to improve code readability and maintainability by eliminating unnecessary checks
remove uninterruptible code from frameinfoqueryresult and javalangsubstitutions
fix test which randomly fail on slow ci server
added a new package - info . java file in the org . apache . lucene . core . testresources package to provide package - level
updated the calculation of readLen in MessageUnpacker . java to improve accuracy of readLen calculation based on position and buffer size
updated the import statement for Nullable from ` io . micrometer . common . lang ` to ` io . micrometer .
updated SQL query in IconCache . java to include the user attribute to ensure that the icon is only fetched when the user is associated with the
[ hotfix ] fix typo in defaultmqproducerimpl # getbackpressureforasyncesendsize
added a boolean parameter to control whether to add whitelisted resources based on whether the resource is a class file to enhance flexibility in managing whitelisted resources
server : fix baremetal foreign key in 4.1 to 4.2 upgrade path
removed the IJava2DRenderer interface from the Java2DRenderer class and deleted the IJava2DRenderer interface to simplify the codebase
reset offload buffer when stop defaultaudiosink
added scheduled thread management for upstream tasks in UpstreamCacheManager to improve task execution efficiency and control over execution flow
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java for clarity to improve debugging by providing more context on the expected output
updated FilestorePage and RootPage to include admin role checks and navigation links based on user permissions to enhance security by restricting access to
( chore ) camel - elasticsearch : ignore camel - elasticsearch - rest test
updated the ` accept ` method to check for the class type of ` Lifecycle ` and ` CustomizableThreadCreator ` to improve type safety by
updated button text for offer books from " leftButtonAltcoin " and " rightButtonFiat " to " sellAl
camel - 16400 : restlet component should not accept invalid url . thanks to daniel for the patch .
block : add javadoc for createnextblock ( ) and createnewblockwithcoinbase ( )
removed the Serializable interface from BTreeMapJava and updated serialization tests in ConcurrentSkipListMapTest to ensure proper handling of serialization exceptions and improve
added a null check for the cause before logging the error in RuleEngineImpl . java to avoid potential NullPointerExceptions when executing the startup rule
refactor conditional logic for source control statistics gathering in Main . java to improve readability and maintainability of the code
update method to use mFiles . indexOf instead of mFilesAll . indexOf to improve code clarity by using a more descriptive variable name
deleted the PlainVerifier . java file and updated the DefaultJwtSigningAndValidationService . java file to remove unused code to streamline the codebase
added a condition to close the system windows when the action is triggered from an alternative tab to improve user experience by ensuring the system window is closed
added imports for BottomSheetBehavior and OCFileListBottomSheetDialog , and modified dialog display logic in DialogFragmentIT and OCFileListBottom
updated MimeUtil . parseCharset calls to specify " UTF - 8 " encoding to ensure compatibility with UTF - 8 encoding for better compatibility
added a call to the superclass ' s deinitialize ( ) method to ensure proper initialization of the TextField class
updated LogFormatTest to use TestUtilities for serializing log format to improve code readability and maintainability by utilizing a centralized utility
updated method calls from ` previousClause ( ) ` to ` previousUntilLastClause ( ) ` in ` LogicalGenerator . java ` and modified
updated array size checks and added negative array size handling in JAXWSExceptionBase . java to improve error handling for negative array sizes and ensure robust
test : migrate ctunresolvedimporttest to junit 5 ( # 4649 )
increased the join duration from 10 seconds to 60 seconds to allow more time for tasks to complete before timing out
[ hotfix ] [ test ] change default default value of flink . network . min / max . network - memory . min / max
added methods for setting and getting the title in ShadowActivity and updated annotations in ShadowAlertDialog , ShadowTextView , and ShadowToast to
replaced Apache Commons Logging with Apache POI ' s built - in logging in POIFSFileSystem . java to improve logging consistency and
refactor alarm handling in InstarHandler to improve clarity and functionality to enhance readability and maintainability of the alarm detection logic
add miss latency to mapdeletemessagetask ( # 16905 )
updated enum declaration and modified status handling in Response . java to improve clarity and maintainability of the code
refactor JavaFileManager location retrieval in CheckResourceKeys . java to improve clarity and maintainability by centralizing location retrieval logic
add project name support for stag channel ( # 3995 )
added a new file ` DeprecatedStubbingTest . java ` to implement tests for deprecated stubbing behavior to ensure compatibility with the latest Mockito
updated import statement for DispatcherType in ITBraveServletFilter . java to ensure compatibility with the standard servlet API
add nml and nx to the list of possible nmls in the treebank error message
add ` ` org . bouncycastle . jsse . jsse . allowrsakexchange ' ' system property to allow
refactor variable names from ' output _ reader ' to ' reader ' for consistency and clarity to improve code readability and ensure proper resource
unget the access token when the local pubsub api be remove .
updated animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to
added handling for UpdateRegionLocation in ConfigPhysicalPlan and updated logging levels in ProcedureManager and DataNodeInternalRPCServiceImpl to enhance region migration
added a new file ` FileDialogLeakTest . java ` to test the behavior of the ` FileDialog ` class to ensure that the
hbase - 2596 move testopentableincoprocessor to hbase . coprocessor
[ gr - 16536 ] fix trufflefeature . isuninterruptible ( ) to return false for uninterruptible method .
[ hotfix ] [ table ] remove unused split method in pbcodegenrowserializer and pbcodegenrowdeserializer
updated the condition to check for non - null disi values in DrillSidewaysScorer . java to ensure proper handling of disi
fix flakemediasource . isready to be call on the correct thread .
added JVM version checks and constants in Constants . java and updated the version check in Helper . java to ensure compatibility with Java 9 and improve code
updated FileReporterTest to cast null to String and File types to improve type safety and avoid potential runtime errors
updated end - to - end encryption capability check from ` isFalse ` to ` isTrue ` to ensure end - to - end encryption functionality is
added home button functionality to the action bar in DirectMessageConversation to enhance user experience by allowing navigation through the home button
added GET _ USER request handling and updated PROTOCOL _ VERSION from 5 to 6 in RpcServlet . java and RpcUtils . java to enhance user
added a conditional check for the system property ' os . arch ' in TestJdbcPluginWithMSSQL . java to ensure compatibility with different
replaced the direct reference to ` startClass ` with a final variable ` originalStartClass ` to improve code clarity and maintainability by
updated exception message format and added local handling for register numbers in DexBody . java to improve clarity of error messages and enhance local management
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
[ drools - 7 ] fix the nimbus look and feel in the example
fix a bug in version string replacement in the app page .
refactor animation listeners in LauncherAppTransitionManagerImpl to improve clarity and maintainability of animation handling to enhance code readability and maintain
dumpedprivatekey : fix typo in exception message
fix wrong extra data when edit an offer
modify the initialization of ` milestoneParameters ` to use ` newOpenTicketsParameter ` or ` newRepositoryParameter ` based on the milestone status
pipe wood pipe : set default battery to 80
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRevision ` parameters in the cluster key retrieval to enhance
updated the downgradeAllowed variable to default to true in UpgradePack . java and added a test for it in UpgradePackTest . java to
replaced instances of NameType . ATTRIBUTE with NameType . ATTRIBUTENAME in XML scanning implementations to ensure accurate identification of XML elements and
add option to disable emulation of system library by default
refactor comparison methods in LauncherModel to use getter methods for application and widget names to improve code readability and maintainability by centralizing
updated entry handling in DefaultPlatformManager and added directory creation in FatJarStarter to ensure proper resource management and avoid potential memory leaks
updated the formatting of the ` doTest ` method and improved assertion messages in ` TestSecretKeyCredentialHandler . java ` to enhance readability
camel - 16400 : camel - spring - boot - allow to find route builder by class name
[ hotfix ] [ doc ] fix typo in metric option description
hbase - 20513 fix the testfulllogreconstruction test on hudson
added default settings and overrides for DatagramSocketOptions in DatagramSocketOptions . java to ensure consistent behavior across different DatagramSocket configurations
fix checkstyle issue in net / glowserver / serverconfig . java ( # 721 )
danielwagnerhall : remove deprecate locatable interface
updated error messages in VersionInfo . java to clarify the requirements for the VERSION _ FIELD to improve clarity and accuracy of error reporting
rename ` equalityPredicateColumns ` to ` predicateColumns ` for clarity to improve code readability and maintainability by using more descriptive termin
reformatted code in HandshakeHandler . java for consistency to improve readability and maintainability of the code
updated closing brace formatting in Navigator . java to improve code readability and maintain consistency
changed the access modifier of record reader classes from private to default and added a new configuration class for Parquet record readers to enhance flexibility in
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL query types in MongoQueryCreator to enhance query creation functionality for
refactor group by expression validation in CalciteSqlParser to use a dedicated method to improve code readability and maintainability by reducing duplication
refactor MappedByteBuffer and FileChannelLinesSpliterator to utilize Unsafe and AtomicInteger for buffer management to improve memory management and prevent potential memory leak
refactor validator usage in LdapUtils to use a local variable instead of direct calls to l . getValidator ( ) to improve code readability and
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and modified the ` testCircuitBreaker ` method to use a ` Scheduled
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags to simplify intent configuration by eliminating unnecessary exclusion
change ' ajax ' to ' progressbar ' in webui . submit . upload . progressbar
updated test display name from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to improve clarity of test
added synchronized keyword to methods in EntityGraph . java to ensure thread safety when accessing shared resources
replaced ` IntRangeUtil1 ` with ` IntRangeUtil ` in ` MetricsImpl . java ` to ensure compatibility with the latest version
updated character validation logic in HttpParser and added a new test for encoded headers in HttpParserTest to ensure proper handling of HTTP headers and validate
changed the activity layout from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to align the activity ' s layout with
updated log message in SLWTTextListing . java to include the position of the SLWT in the document to improve clarity
refactor ForceLeaderTest and HttpPartitionTest to conditionally use TLog replicas based on randomness to improve reliability of leader index checks
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
refactor template file suffix sets in AbstractConfigurableTemplateResolver to improve readability and maintainability of the code
camel - 7017 fixed the issue of camel - cxf do n ' t set namespace correctly .
removed unnecessary whitespace in YamlRepresenter and RepresentConfigurationSection classes to improve code readability and maintain consistency
updated output formatting for month and year in ToChar . java and added new test cases in TestFunctions . java to improve readability of date
added support for validating transaction lists and write IDs in GenericUDTFGetSplits to ensure data integrity by ensuring only valid transactions are processed
replaced string length checks with isEmpty ( ) for columnNamesProperty and columnTypeProperty to improve code readability and performance by using Collections . emptyList (
bug fix for bug # 1193 , add ability to skip loading of sheet without initial image .
updated formatting in ` SSTDeserializer . java ` and added a new test method in ` TestSSTDeserializer . java ` to improve code
updated grid column handling in AppPreferencesImpl to use a constant for default values to improve code readability and maintainability by centralizing default value
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line contents match but line - break characters
add buffer . waitingforkeys to track if the buffer have be wait for key .
updated API paths in OkexV3 . java from " / api / margin / v3 " to " / margin / v3 "
refactor conditional statements in LineUtilitiesTests to use braces for clarity to improve code readability and maintainability
updated JavacParser to handle varargs and old array syntax errors and added new classes for varargs and old array syntax to improve error handling and
log warn if defaultdrmsessionmanager be use on wrong thread
added support for handling methods in VariableContext and introduced new test cases in TestVariableContext to enhance functionality and ensure correctness of variable context parsing
added test cases for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure proper error handling for invalid JSON formats
updated buffer limit logic in Piece . java and removed redundant bufferForMessage limit in SharingPeer . java to improve buffer management and ensure
added responseTimeout property to HttpClientProperties and modified NettyRoutingFilter and RetryGatewayFilterFactory to utilize timeout handling to improve response management and
refactor CxxLibraryFactory to use NativeLinkTarget instead of NativeLinkTargetGroup and update method signatures accordingly to improve code clarity and
( chore ) camel - main : add unit test base on user forum issue
added field access handling in ASTConverter and refactored RexNodeConverter to utilize RexFieldAccess to improve field access management and
replaced direct calls to ` QueryLogEntry . values ( ) ` with a constant ` QUERY _ LOG _ ENTRY _ VALUES ` to improve code
add a noproxypredicate ( ) method to the proxy interface ( # 2329 )
updated certificate handling logic in PKCS12KeyStore . java and modified alias handling in StoreSecretKeyTest . java to improve clarity in certificate management and
added reflection access checks and refactored method names in Bootstrap and ReflectionCheckLinker classes to improve clarity and maintainability of reflection access
changed the access modifier of the constructors in CollisionMap from public to package - private to enforce encapsulation within the package
deprecated the ` getRawInputFromTransactionInput ` method and added a null - check using ` checkNotNull ` to improve code clarity and enforce non
refactor conditional statements in ConfigurationValueConverter and Main to use a switch statement to improve code readability and maintainability
server : remove unused region _ id from insert statement in configurationserverimpl
added handling for EncryptedDocumentException in OldExcelExtractor to indicate unsupported encryption for old Excel files to improve error handling and provide clearer feedback for
[ gr - 21786 ] add mx _ benchmarks _ extra _ image _ build _ argument for native - image benchmarks .
removed unnecessary else block in TimeLineCursorAdapter . java to streamline code for better readability and maintainability
increase timeout in batchingstatechangeuploadschedulertest to avoid all attempt timing out
modify file handling in ShadowContext and add a new deleteDir method in ContextTest to improve directory creation logic and enhance test coverage for named directories
refactor ExceptionFactory to use reflection for creating instances of ExceptionFactoryImpl to improve flexibility and maintainability of exception handling
increased WAIT _ TIME _ MS from 10 , 000 ms to 60 , 000 ms to allow for a longer wait time before proceeding
updated import statements and added audience handling in ConnectOAuth2RequestFactory , ConnectTokenEnhancer , and ConnectTokenEnhancer classes to
camel - 14850 : camel - kafka : allow to turn off break on first error .
added a new constant ` selectableItemBackground ` with a value of ` 0x10a13 ` in ` R . java ` to define
simplified import statements in GatecoinTradeService . java and added a placeholder method for placing stop orders to streamline import statements and
updated event type assignment logic in TxnSetOperation . java to ensure correct event type is set for updates
[ java ] add resumablerandomaccessfilelistener for throttle request .
updated the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad .
added logic to set the format size for FormatRecord instances in HSSFDataFormat . java and updated tests in TestWorkbook . java to
[ hotfix ] [ kafka ] add deprecation to flinkkafkaproducer
updated the condition for checking the compressed chunk length in CompressedInputStream . java to ensure accurate validation of the compressed chunk length
camel - 16462 : camel - redis : add idempotent repository that can be use in a fast way .
fix containerrepair use metadata instead of damage .
[ mng - 6640 ] only use local repository if it ' s a local repository .
[ hotfix ] [ runtime ] check if taskmanager be initialize before start the local instance manager
added deployment command options for artifact resolution in AbstractArtifactResolutionException . java to enhance user experience by guiding users on how to deploy artifacts and
updated the method for retrieving the internal temporary file path in UploadFileOperation . java and added a new method in FileStorageUtils . java to
replaced Google API imports with Google Commons libraries and added a new method ` findByEntries ` to improve code modularity and enhance query performance
added thread execution logic in ` ContextImpl . java ` and refactored variable names in ` BlockedThreadCheckerTest . java ` to
updated the ` instantiate ` and ` convert ` methods to accept a ` formatterString ` parameter and added null check for ` ctorArg ` to
updated LoadContactsTask . java to handle different file input streams based on Android SDK version to ensure compatibility with devices running Android O and above
replaced method calls to setRemoteAddress with direct assignment for remoteAddress and remoteHostname to simplify code by eliminating unnecessary setter methods
added a null check for the realClass parameter in Robolectric . java to ensure that a valid shadow class is provided to avoid runtime
added a check for mutual authentication requirement in both NettySslContextFactory and ExampleNettySslContextFactory to ensure proper handling of mutual authentication
updated charset import and added SSL exception handling in BasicHttpTest . java to ensure proper handling of SSL exceptions during HTTP requests
added getter methods for the consumer and producer in AbstractKafkaResumeStrategy . java to enhance accessibility and provide access to the consumer and producer
updated formatting of conditional statements in PageChangeListener . java and added frame class list management in FrameRenderer . java to improve code readability and maintain
updated warning log message to reflect SMS instead of email to clarify the purpose of the warning regarding email configuration
no effective change - add @ draftqueryoptimise ( query < t > ) ...
added exception handling for resource temporarily unavailable in MultipartBody . java to improve robustness by handling potential IO exceptions and logging warnings
refactor : fix checkstyle violation in executablefactory and zipfolder
refactor EndpointConfiguration , SpEL , MainSupport , package - info , and SSLContextParameters classes to improve code organization and maintainability
fix ` ` attach file ' ' action when file directory be not set
added LoadOptionsBuilder and SchemaInfoLevelBuilder imports in AccessTest . java to enhance schema loading configuration for improved flexibility
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace throwing an exception with returning null in TestReader . java to handle unknown operations gracefully without throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty to enhance property management by associating properties with their respective properties
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for better resource management to ensure ConnectionInfo is properly closed
[ hotfix ] fix javadoc typo in datastreamjob
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid potential memory leaks
camel - 16400 : camel - cxf should use cxf ' s real class name if it ' s not a string .
added a check for the " h2 - 14 " protocol in the HTTP2ServerConnectionFactory to ensure proper handling of the " h2 -
refactor method symbol handling in LambdaToMethod . java and introduce a parameter symbol list in ClassFileVisitor . java to improve clarity and
fix a bug in the coordinationtransformer , which do n ' t match what
increased the timeout duration of the copyURLToFile method from 5000ms to 60000ms to allow more time for the cache file to
added slop setting to mpq in QueryParser . java to enhance query parsing functionality by incorporating phrase slop
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for the event to be
updated the port number from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
added a new method ` scheduleParallel ` in ` GameScheduler ` and replaced direct calls to ` ScreenGrabber ` and ` Terasology
updated visibility condition for the compound view in EditShareFragment to ensure that the compound view is only shown when edit options are available
updated the progress calculation in DepthController . java to ensure progress does not exceed 1.1 f to improve user experience by preventing unint
remove session . packetreceived ( packet ) which be no longer need .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null check for the service before accessing its properties in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy ` and ` SamlId
added ' hidden ' attribute to the account level permissions description in PantheonCommand . java to allow users to enable or disable account level permissions
added a method to exclude the CoroutinesRoom class from instrumentation to prevent unnecessary instrumentation of the Companion class
modified the ` isSupported ` and ` isSupportedImpl ` methods in ` NegotiateAuthentication . java ` to ensure thread - safe access to the
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unnecessary script initialization
camel - 16400 : camel - persistent and camel - temporary queue should use thread name a the name of the thread which be use to
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added conditional checks for opening and closing a block in PdfDocument . java to ensure proper handling of text tags when the writer is tagged
log4j2 - 1349 add test for patternselector
simonstewart : allow the iehta test to run in multi - window mode
updated the return type in the thank method from MwPostResponse to MwThankPostResponse and created a new MwTh
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` to implement it to provide a standardized way to establish a socket -
updated revokingStore initialization and max size setting logic in Manager . java to improve clarity and maintainability of the revokingStore
added unit tests for querying implicit joins in HQLTest . java to ensure correct functionality of query execution with implicit joins in JPA
updated assertions in NonVisualRegressionTest to normalize line endings to ensure consistent comparison of expected and actual text across different operating systems
updated the handling of file references in IndexWriter and added a new assertion mechanism in MockDirectoryWrapper to improve resource management and enhance testing capabilities for
added @ Final annotation to several methods in BaseError . java to ensure proper resource cleanup and prevent potential memory leaks
added validation for user resource consumption percent in ConsumeUserResourcePercentActuator . java to ensure that the user resource percentage is within a valid range
added a conditional check for ` show _ old _ login ` in ` AuthenticatorActivity . java ` to ensure legacy login functionality is only shown when
rename ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in naming conventions
removed redundant response page setting in EditTeamPage . java to streamline the code for better readability and maintainability
updated debug log message from " error with cred file during startup " to " error initializing plugin credentials " to improve clarity of error logging for
added a try - finally block to ensure proper shutdown of the server socket channel to improve resource management and prevent potential memory leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
added a private method ` createDynPartSpec ` to encapsulate logic for determining dynamic partition specifications to improve code readability and maintainability by
use scientific notation for round - half - up instead of round - half - up
added visitDirectory method to JarDirectoryStep and updated DirectoryTraversal to handle directory traversal to improve directory traversal functionality by ensuring all relevant directory entries are
added a new file ` JWKSetEditor . java ` that implements a custom property editor for JWKSet to enable users to edit JWKSet text
refactor finish methods in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter to remove unnecessary minTerm
[ gr - 33232 ] do not call truffle method . resolveparameterklasses ( ) for tracethrowable .
changed the default value of the ` byIP ` configuration from ` true ` to ` false ` to disable the fetcher thread per host by IP
simplified the conditional check for queryTimeout in StatementUtil . java to enhance readability and maintainability of the code
added imports and logic to include target configuration hash in HaskellGhciRuleIntegrationTest . java to ensure proper handling of target configuration
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
server : fix schedule network usage stats task to run immediately
updated interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a constant FINAL _ FRAME instead of a lambda expression to
updated the height calculation for the navBar ' s visible bounds to use a dynamic swipe length based on display density to improve layout responsiveness
added a new module - info . java file for the org . eclipse . jetty . http3 . server module to define module dependencies
act - 1342 : fix for npe in jsontype . tostring ( ) with null value
refactor variable assignments in ResourceResolverBean . java for consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] change default value of tolerable _ failure _ number to 0
updated the ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` and added a new ` visitPackage ` method
updated the command string concatenation in TimestampCheck . java to include an extra space to ensure proper formatting of the system property for VM options
replaced FluentIterable with Java Streams for file listing in ChromeTraceBuildListenerTest . java to improve code readability and leverage built -
changed the default value of the register variable from ` true ` to ` false ` and introduced a new constant ` REGISTER _ KEY ` to
added otrmanager . onsettingschanged ( ) to end all session when otr be disable .
added new properties for node label outline properties in PreviewProperty . java and modified renderProcessing method in NodeLabelRenderer . java to allow customization
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a boolean parameter to the Win32FontManager class to enable font management functionality in the application
added null check and cursor management for the visit method in TreeVisitor to enhance stability by preventing potential null pointer exceptions
added errorhandlingpolicy to jdtbatchcompiler when jdtcompiler . environment . noclasspath be set
added alignment point and text anchor functionality to LabelBlock and its corresponding tests to enhance label rendering by allowing dynamic adjustment of text position
refactor methods in Class and Parameter classes to improve code readability and maintainability
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
replaced boolean isLoopback with Boolean isLoopback and added null checks for networkInterface to improve robustness by ensuring isLoopback is
updated the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to ensure consistent date formatting across different locales
fix flaky test : download miss pdf file
nifi - 9394 : add output no hits property to elasticsearch
cloudstack - 5390 : fix bug in quotamanagerimpl . updatetransition ( ) ( # 5391 )
[ java ] fix switch / cases indentation see camel - 14540
fix nullpointerexception in readfilesp and streamfilesp
refactor widget handling logic in PageChangeListener . java to improve readability and maintainability of the code
added isWriteProtected ( ) method to Workbook and HSSFWorkbook classes , and updated username handling in FileSharingRecord and RecordInputStream
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle potential exceptions and log warnings to improve error handling and
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " reachable = not reachable " in HueLightHandler . java to clarify
add fmlclienthandler . isloading ( ) to check if the server be already load .
updated return statements in UI . java and BlockInventoryFragment . java to include million and thousands units from the Core bundle to enhance
added support for parsing both byte and string types in MessagePackParser to enhance data handling and improve error management for invalid
added parameterized tests for query handling with reserved words as relationship names in HqlQueryTransformerTests and JpqlQueryTransformerTests to improve test
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct handling and representation of nested maps in JSON format
added boundary checks for x2 and y2 in GeometryUtils . java to ensure proper positioning by accounting for offset values
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code readability and maintainability by reducing unnecessary type casting
do n ' t exit the process if there be no testplan
updated method names in ` GeneratedEntityTranslator ` and refactored ` JdbcManagerSupportImpl ` to use ` LazyReference ` for better lazy
updated argument handling in the parser to differentiate between strict and non - strict idents to improve robustness by ensuring argIdent is set correctly
updated the default protocol setting in JettyHttpComponent9 to use the actual protocol from the scf object instead of a hardcoded value to
set default value of ` displayVolume ` to true in ` VolumeVO . java ` to ensure volume display is enabled by default
refactor version method to accept a boolean flag for full versioning and update message retrieval to enhance clarity and provide more informative version information
update condition checks in ChangeLogParameters . java for better handling of global change log parameters to ensure correct retrieval of relevant change log parameters based on
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for non - critical errors
hhh - 16464 : skip setoperationtest on oracle due to bug in basicformatterimpl
replaced the order of setting the socket timeout and starting the SSL handshake to ensure the correct timeout is applied during the handshake
updated size calculation in multiple fragments to account for popup status to ensure correct sizing behavior based on the activity ' s popup state
[ java ] enable cha by default and make class final .
http : / / issues . apache . org / activemq / browse / amq - 2636 - fix for amq -
refactor JodaTimeRangeRandomizersTest to use AssertJ assertions for better readability and maintainability to improve test clarity and ensure
updated WebDescriptor . java to redirect resources based on the SERVLET _ MAJOR _ MAJOR _ VERSION to ensure compatibility with
fix : allow readiness . isready ( ) to be call on a node .
fix to use handler . endpoints instead of liveendpoints . patch by jbellis ; review by brandonwilliams for cassandra -
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of the RPC
added security checks before accessing the caller class in ObjectStreamClass and ObjectStreamField to enhance security by ensuring that package access checks are only performed
removed unused imports and modified visibility of UGSCommandCount in XLCDCommunicator . java to improve code clarity and encapsulation
replaced ImmutableMap with a HashMap for tag management in DefaultMetricsTagProvider . java to improve code readability and maintainability by utilizing a
danielwagnerhall : fix checkstyle violation in clientdriversuite
change default option from OFF to ERROR in the Launcher class to improve user experience by providing a more appropriate logging level
changed instance variables to final in IconNormalizer . java to enforce immutability and improve code clarity
added a boolean flag ` firstCallPrepareDo ` and modified prefix invocation logic in ` PrepareInterceptor ` to allow control over the first call preparation
refactor showWorkspace and hideAppsCustomizeHelper methods to streamline workspace and overview mode handling to improve code clarity and maintainability by
added @ Singleton annotation to AuthWithStoreFeature and removed eager singleton binding for FormAuth , BasicAuth , and AuthStore to improve dependency management
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method to control whether to ignore invisible associations during association processing
remove private ip from capacity table when pod be remove
improve error message for empty diagram and linux 4.6 +
added a new class ` RequiredRefFieldModel ` and modified ` ModelResolver ` to handle required properties correctly to ensure that required fields are applied
renamed ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` classes to ` CasCoreConfigurationWatchAutoConfiguration ` and
refactor FeatureFlags class to improve feature management logic to enhance performance and maintainability of feature - related features
updated UUID generation logic and improved UUID formatting in ConfigStore . java and ItemUIDtoHueIDMappingTests . java to enhance UUID
added image drawable handling in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper image display when a picture is present
updated the configuration message for compaction on full CRUD tables to clarify that compaction will always run via queries regardless of the value of this
added a null check for the storage path before checking if mWaitingToSend is down to ensure stability by avoiding potential null pointer exceptions
refactor resize condition checks in VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashMultiSet , and VectorMapJoinFastLong
refactor LDAPConnectionService to improve connection handling to enhance security and reliability of LDAP connections
camel - 16462 : camel - core - aggregate should use @ deprecate instead of @ xmlattribute ( required = true )
added debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to enhance traceability and debugging capabilities during
added a condition to check if the class name starts with " com . intelliJ . rt . junit " in AbstractSoftAssert
updated assertions in TestMultiSearcher to reflect the correct length of hits2 and hits3 to ensure accurate validation of the expected number of hits
added a new file ` LucenePackage . java ` to provide a utility for obtaining the Lucene package to facilitate the
update sizeInBytes addition logic in RAMDirectory . java to correct the increment operation for sizeInBytes
updated calculations in StatsRulesProcFactory and added estimate methods in GenericUDAFBloomFilter , GenericUDAFEvaluator , and BloomK
added a null check for getDrawerToggle ( ) before executing animations to prevent potential NullPointerExceptions when the drawer toggle is not available
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to improve code clarity by suppressing unused warnings
added logic to manage module scanning based on ` scanSpec . overrideClassLoaders ` and ` scanSpec . overrideClassLoaders ` to ensure that
fix msb export format when corporate = true
added a method to cancel core recovery and improved logging in the CoreContainer class to ensure proper handling of core state cancellation when ZooKeeper is aware
replaced direct calls to ` System . currentTimeMillis ( ) ` with a custom method ` currentTimeMillis ( ) ` and refactored time difference calculations
removed debug print statements and modified the condition for clicking the first element in the found list to streamline the logic for better readability and
updated the description of the connection parameter in PGProperty . java to clarify the expected values for the startup message to enhance user understanding
added trust resolver , role hierarchy , and permission evaluator functionalities to the SecurityEvaluationContextExtension class to enhance security expression functionality by integrating trust
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is set correctly based on primeSize
replaced direct usage of ` File ` with a new method ` getUsableSpace ` in multiple files to improve code readability and maintainability
updated the combine method in DistinctSqlAggregation to handle multiple values instead of a single delegate to improve the efficiency of combining distinct SQL aggregation by
added a test method to verify the execution of post - login activities on successful authentication to ensure that the UserService correctly executes post - login activities
refactor ExtractorSpanishStrippedVerb and SpanishVerbStripper to accept a string path instead of a static final instance to enhance
refactor CharArraySet to simplify code logic and improve type handling to enhance readability and maintainability of the code
improve muxerwrapper error message for unsupported track type
replaced instances of JsBundleAndroid with AndroidPackageable in JsBundleGenrule . java and updated asset collection logic in JsBundleGenrule
added UTF - 8 character encoding support in PinotClientRequestServlet and refactored string lookup logic in StringDictionary to ensure proper handling of
renamed " Logical Analyzer " to " Logic Analyzer " and updated drawable resource references to improve clarity and consistency in naming conventions
added instance class name and class type variables for vector instantiation in AbstractVector . java to improve flexibility in vector instantiation by allowing different instances of
removed syncMetaLeader ( ) method from CMManager . java to improve performance by avoiding unnecessary synchronization
[ # 7278 ] instructor feedback contribution question : display ` ` no response ' ' instead of ` ` no response ' '
added TestLoggingExtension import and annotated DiagramRendererTest with TestLoggingExtension to enhance test logging capabilities for better debugging
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 599 : use
added support for the VIOMI Internet Electric water heater 1A ( 60L ) in MiIoDevices . java to
refactor SSL session handling to store session data in a variable to improve code readability and reduce redundant method calls
added a new file ` CreateNewSpreadsheet . java ` that demonstrates how to create a spreadsheet with multiple cells and comments to
updated cache properties from Duration to long for ttl and time - to - live in CacheProperties . java and RedisCacheConfiguration . java to improve
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in ` LauncherBackupHelper ` and ` Launch
updated the wiremock version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the
replaced ` lucidaFontName ` synchronization with ` this ` synchronization in ` SunFontManager . java ` to ensure thread safety
added a condition to check if the character is ' < ' before verifying its length in DocClassUtil . java to ensure proper handling of
removed String . format from the return statement in Workspace . java to simplify code by eliminating unnecessary string formatting
added import for Scope and displayed validation error message in ValidateCommandStep . java to enhance error handling by providing user feedback when validation errors occur
updated imports and refactored the configuration of WebMergedContext in IntegrationTestContextLoader . java to improve resource loading logic and enhance context management
updated method calls from ` getResponderAt ( ) ` to ` getComponentAt ( ) ` and modified scroll handling logic to improve responsiveness
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated ` StatsService ` and ` DefaultStatsService ` to use ` String ` instead of `
replaced occurrences of " $ 1 " and " $ 2 " with " $ \ n1 " and " $ \ n1 " in
simonstewart : fix test failure on window
mondrian : fix typo in mondrianproperties javadoc
added stack trace printing functionality to ProcessTools and improved file permission checks in CustomLauncherTest to enhance debugging capabilities and ensure proper permissions are set
removed the test for embedded images in TumblrRipperTest . java to streamline the test suite by eliminating unnecessary
added a check for symbol slots before converting storeType to ensure conversion is only performed for valid store types
optimize chunk initialization when nextloadposition be 0
refactor BaseLockFactoryTestCase to utilize PrintStreamInfoStream for improved output handling to enhance readability and provide better debugging information during
add service - loader attribute to allow dynamic service loader to be configure in tikaconfig . xml
updated imports and added checks for package - info compatibility in DocLint . java and created new test files in DocLintTester . java to
added a new import command constant IMPORT _ CMD and modified the condition in DataImportHandler to include it to enhance functionality by allowing the import command
added a test case to verify that inner classes do not modify when the ignoreDefinition flag is true to ensure that inner classes are not modified when
removed unused import of Log from JettyService . java to clean up the code and improve readability
added a ` workspaceScreens ` parameter to the ` checkItemPlacement ` method and updated related logic to manage workspace screens to
danielwagnerhall : add a servlet to kill the jvm
refactor the handling of transformed rows in LLRealtimeSegmentDataManager to improve readability and maintainability of the code
added a check to skip processing if the application is running on Windows to avoid unnecessary processing of Teredo network interfaces
do n ' t show an error dialog if we ca n ' t register a contact
replaced the registration of the USER _ DETAILS _ SERVICE _ FACTORY bean with a new registration of the USER _ DETAILS _ SERVICE
changed the parameter of the drawBitmap method from ' left , r . top , r . left , r . top ' to ' null '
update meitrack and totem protocol to match new yymmdd format
changed method visibility from public to protected for ` getFontPath ` and ` getPlatformFontPath ` in ` SunFontManager ` and ` X11
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods should no longer be used in future development
fix clientmapstoretest . testreachedmaxsize and clientmapstoretest . testreachedmaxsize fail on jdk 1.
add option to keep empty sentence in maxenttagger and documentpreprocessor
added error messages for artifact subdirectory creation failures and changed return type of createArtifactSubdirectory method to boolean to improve error handling and provide clearer
changed ` systemProvider ` from static to instance variable and updated method calls to use ` JavaCompilerService . NO _ MODULE _ COMPILER
cloudstack - 6892 : fix npe in directagentattache when resource return null answer
do n ' t swallow exception in sendemail ( )
fix npe in pipeitemsobsidian and add miss null check
updated the ` getDateMathParser ` method to accept a ` Locale ` parameter instead of using ` getDefault ( ) ` to improve flexibility by
added a boolean option to include decals in StorageOptions and a checkbox in StorageOptionChooser to allow users to choose whether to include de
updated generateDocumentation method to include a null parameter in Liquibase . java and added a suppression annotation in LiquibaseTest
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to enhance performance logging functionality and improve method naming for clarity to enhance code read
corrected spelling errors in log messages to improve code readability and maintain consistency in naming conventions
updated version check in ignoreRecordAttribute . java to use the MAJOR _ VERSION variable to ensure accurate validation of the class file version in
added a new file ` LdapPasswordAuthenticationTest . java ` to implement LDAP password authentication tests to ensure proper functionality and validation of LDAP user credentials
replaced the import of ` OrcInputFormat ` with ` BasicStatsNoJobTask ` in ` TaskCompiler . java ` to util
fix an npe when reloads on save ( # 4358 )
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
[ kubernetes - client ] add ability to stop the informer without reconnecting .
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance flexibility in handling different data types
replaced direct calls to ` getGroupId ( ) ` and ` getVersion ( ) ` with ` Objects . requireNonNull ( ) ` in ` ResolvedGroup
added null check for apiInfo before assignment to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added lighting functionality and disposal methods in PhotoPanel and FlameRenderer classes to improve texture management and ensure proper resource cleanup during rendering
updated method editor size from 460 to 520 and added context menu functionality in InsnListEditor and InsnProxyListEditor to enhance
added bounds checking for character array length in CSSParser . java to improve robustness of character parsing logic
added logic to set the default look - and - feel decoration for JFrame and JDialog based on application properties to enhance the user interface
removed unnecessary ` this ` keyword from the ` findByHostId ` and ` remove ` method calls in ` HostRoleCommandDAO . java `
updated LJ1200Message to replace F5 _ UNKNOWN with F5 _ TRANSPONDER _ TEST _ REPLY and F6 _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
replaced HostDatabase with ColorStorage in ColorsActivity to utilize color storage functionality instead of host database
refactor String class to improve code readability to enhance maintainability and facilitate future feature additions
added SLF4J logging functionality to multiple classes to enhance logging capabilities and maintain consistency across the application
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the
added multiple assert statements for the sendcoin method in MultiSign34 . java to ensure that the sendcoin function behaves as expected with a
updated JUnit imports from ` org . junit . Test ` to ` org . junit . jupiter . api . Test `
use system . getproperty ( ` ` path . separator ' ' ) instead of hardcoded ` ` ; ' '
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance level to allow subclassing of augmentSuccessViewModelObjects for
added assertions to verify presence of fields in the metamodel for AbstractEntity and Person classes to ensure that the properties in the metamodel accurately
removed unnecessary configuration parameter from Outlink constructor calls across multiple parser classes to simplify the code and improve readability by eliminating unnecessary dependencies
removed the ` LexicalContext ` parameter from several methods in the code to simplify method signatures and improve code readability
added imports and modified return statement to include modifiers in UseLambdaForFunctionalInterface . java to improve code clarity by eliminating unused
replace appendClassSelector with createFileSet in TestNGAntTask . java to streamline file management by eliminating unnecessary class selection
removed unsupported check for root input type Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating
added iforgeregistry . activeregistry ( name ) to the mapping so that it can be use in the registrymanager . activeregistry
removed duplicate assignment of x3 and y3 in the Intersector class to improve code readability and maintainability
added default implementations for SBE methods in MessageDecoderFlyweight . java to indicate that these methods are not yet implemented in the current implementation
updated ElasticsearchContainerTest to use a dynamic version for Elasticsearch containers and added a new test for cluster health to ensure compatibility with the latest Elasticsearch version
replace direct message parsing with a ByteBuffer wrapper for improved memory management to enhance performance and prevent memory leaks by reusing byte arrays
added default version ID and updated cluster definition handling in ClusterDefinition . java and GSInstallerClusterProvider . java to improve cluster management and ensure
( chore ) camel - ftp : remove unused method
[ zeppelin - 5041 ] zeppelin - 5042 : zeppelin - 5
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified the ` newLocal ` method in
added a check for basic constraints in ForwardBuilder and created a new class BuildEEBasicConstraints to handle certificate constraints to ensure proper handling of basic
added initialization logic for PostgreSQL database connection in JdbcPostgresqlDAO to ensure compatibility with PostgreSQL versions 9.5 and above
updated WebSocket configuration and added buffer size validation in SimpleEchoClient and AbstractWebSocketConnection to improve WebSocket handling and ensure input buffer size does not exceed
refactor undeleteAll and rollbackUndeleteAll handling in SegmentReader and add assertions in TestIndexReader to improve code clarity and ensure
updated null checks for scopes in ClientRegistration . java and modified test cases in ClientRegistrationTests . java to ensure proper handling of null scopes and
added null check for orderBy before adding it to the expression and explanation to avoid potential NullPointerException when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : fix vm snapshot fail when vm be in stopped state on kvm
replace direct call to LogUtils . initHiveLog4j ( ) with a variable initialization log message to improve code readability and fac
added a check to ensure tasks are not empty before processing assets to prevent potential NullPointerExceptions when no assets are available
change pubsubmanager . deletenode to return the result of the delete operation instead of void .
fix nullpointerexception when delete a relation with a null value
pdfbox - 4892 : fix false positive detection , a suggest by valerybokov
changed TreeSet to LinkedHashSet for storing CipherSuites to ensure consistent iteration order of cipher suites
updated character validation logic in Escaper . java and modified string expected output in InternationalizationTest . java to improve handling of control characters
updated the ` ProviderSqlSource ` and ` SqlProviderTest ` classes to enhance type safety and replace ` String ` with ` CharSequence ` for
updated import statements and improved null handling for aliasChildren in InternalMNode . java to enhance code clarity and prevent potential NullPointerExceptions
added a method to get the layout transition offset for a page in PagedView . java and updated scrollDelta calculation in Workspace . java to
rename variable ` synthetic ` to ` pruned ` for clarity to improve code readability and maintainability by using a more descriptive variable name
added accessibility setting for a method in WidgetInterceptor to enhance method accessibility for improved functionality
added a condition to check if the raw name is not " database . server . id " before setting the literal initializer to ensure that the literal
replaced Macintosh and Intel Mac OS X version with Windows NT 10.0 and Win64 in AbstractRipper . java
added a menu item to open the web interface in the popup to enhance user experience by allowing direct access to the web interface
refactor value initialization and statement assignments in HandleGetter . java for improved clarity and functionality to enhance code readability and maintainability by
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
updated debug logging statements and improved path handling in FileCheckpointIO , FileCheckpointIO , and MmapPageIOV1 classes to enhance
updated the call to loadBattlePassManager ( ) before avatar postLoad ( ) to avoid null pointer exceptions
updated Docker image version from " testcontainers / sshd : 1.0 . 0 " to " testcontainers / sshd : 1.
added a bigObject array and garbage collection calls in ThresholdTest . java to ensure proper garbage collection and prevent potential memory leaks
updated logger level handling in StdErrLog and improved test assertions in StdErrLogTest to ensure correct logging behavior and enhance test coverage for
fixed - rremoteservice . getremoteservce ( ) method throw npe if remoteservice do n ' t exist
added methods ` isSelected ( ) ` and ` setSelected ( boolean ) ` to the ` MultiButton ` class and updated the ` MultiButton `
updated the intent from ` UpNextActivity ` to ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to ensure the application
[ bugfix ] fix checkstyle issue in brokercontroller . java
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection management to improve resource management and ensure proper closure of Redis connections
refactor background color retrieval and brand color retrieval in ProgramGridCell and Utils classes to improve code clarity and maintainability by centralizing theme
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapters for various classes in ToolingApiLauncher to enhance type handling capabilities for various components in the application
removed unnecessary whitespace in TestPayloadCheckQuery . java to improve code readability and maintain consistency
updated ConsoleReader to improve character masking functionality and added a new test for readline with masking to enhance character input handling and ensure correct
added user information to the command output in BaseCommand . java to provide user context and command execution information
move module support test to api package
[ hotfix ] [ test ] remove unused constructor in slotsharinggroup
update StreamExInternals to conditionally instantiate Java9Specific based on the " one . util . streamex . emulateJava8 "
updated texture files from " data / wheel . png " to " data / sys . png " and changed music duration from " data / cloud
updated the registration and unregistration of the mCloseSystemDialogsReceiver receiver to ensure proper cleanup of system dialog registrations
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency in code structure
added a new boolean field ` allowIntrospection ` to ` ClientDetailsEntity ` and modified ` ChainedTokenGranter ` and `
added HTML encoding for user and session attributes in HtmlSessionInformationsReport . java to enhance security by preventing XSS vulnerabilities from
added ` PhrasePrefixQuery ` and ` SpanQuery ` annotations to the ` Query ` class to enhance query functionality and improve documentation clarity
replace size ( ) = = 0 with isEmpty ( ) in CommentsInserter . java and CommentsParser . java to improve code readability
refactor ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods to improve clarity and functionality
updated method signatures in AbstractAssert , Assert , DateAssert , and ExtensionPoints to accept Object instead of A to improve type flexibility and compatibility
updated package and interface names for ` ThrowingFunction ` and modified method signatures in ` JwtPlugin ` and ` ThrowingFunction ` to improve
refactor uploaderBehaviour methods to use instance methods instead of static methods to improve consistency and leverage instance methods for preference management
fix : fix nullpointerexception in typefactory . getelement ( ) ( # 3649 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf to improve compatibility with Robolectric testing framework
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a character variable ` c ` to improve clarity and
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page
added a volatile variable ` reinvocations ` to track the number of reinvocations and updated log messages accordingly to track the number of re
update calculation of topPadding in DefaultLookAndFeel . java to use innerHeight instead of getHeight to improve accuracy of topPadding for better
added a break statement in the Recognize class to ensure proper termination of the loop execution
added preference handling for home screen locking in multiple classes to enhance user experience by providing haptic feedback during drag operations
refactor formula handling in ExcelBatchReader and add new test cases in TestExcelFormat to improve clarity and functionality of formula processing in Excel
fixed bug 1244523 - immutablefield no long report an error when assign an anonymous inner class to an anonymous inner class .
added a userAgent field to CommaFeedConfiguration and updated HttpGetter to use it from the application settings to ensure that the user agent is dynamically
camel - 16400 : add a required attribute to avro , barcode , and base64 data format .
changed log level from info to debug for file not found message to reduce log verbosity and improve performance
rename the class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use getUniqueID method instead of checkVersion to ensure compatibility with the OfflinePlayer class
camel - 16462 : camel - core - optimize route - loader to reduce stack frame in use during startup .
added vertexColor property and modified color handling in PShape3D . java to allow customization of color rendering based on the vertex state
updated ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` classes to include primary key filtering functionality to enhance the diagram renderer ' s
replaced shadow matrix extraction with direct matrix value retrieval to simplify code and improve performance by eliminating unnecessary shadowing
changed package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser
refactor class handling logic in GroovyEngine . java to simplify class definition processing and improve clarity to enhance code readability and maintainability by
add a plugincontextlistener to the brandingservlet so that it can be use in a web application .
removed redundant print statement for command output in NativeCodeGenerator . java to streamline output by eliminating unnecessary concatenation
replaced updateMotors ( ) and updateActiveInstances ( ) calls with fireChangeEvent ( ) in FlightConfiguration . java to ensure that
added unit tests for the ` ExpectedException ` in ` ThrowableAssert _ hasCause _ Test . java ` to ensure that the assertion correctly verifies
updated variable names for flattenName and pack in AutomaticDependencies . java to improve clarity and maintainability of the code
changed the variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity by accurately reflecting the purpose
danielwagnerhall : add unit test for firefoxdriver . setprofile ( ) and firefoxoptions . setprofile
camel - 7014 : added description property to route to allow to configure route description .
updated JavacTreeMaker . java file to improve performance and maintainability of the code
added a weight setting to the edge in ImporterCSV . java to enhance the functionality of the edge by allowing dynamic weight adjustments
fix tariffs cost calculation for current month ( # 5029 )
updated SQL queries in DatabaseMetaData . java to include additional attributes and set default tuple values to ensure accurate retrieval of attributes by including default values from
throw an error if binarized sentence be not build by parser
updated the ` toString ( ) ` method in ` User ` class to include detailed information about the user to enhance debugging capabilities by providing more context
http : / / issues . apache . org / activemq / browse / amq - 2636 - fix npe in message
[ hotfix ] [ runtime ] rename method fromexecutionvertex to execution in taskdeploymentdescriptorfactory
improve rosteraccess . cansubscribing ( ) and rostermanager . isgroupvisible ( ) to be public .
added " maven . test . classpath " to the project reference in AbstractJRubyMojo and removed unchecked suppression in Cucumber
updated method handle assertions in MethodHandleImpl . java and added a new userMethod method in MethodHandlesTest . java to ensure correct type validation
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , AnalysisSPILoader
updated width and height checks from ` > ` to ` ! = ` in ` URLImage . java ` to ensure that the image dimensions match
added a condition to check if the name does not start with " META - INF / " and modified the handling of package names to ensure that
updated method signatures to include ' final ' keyword for parameters and added background task execution based on the display type to enhance code readability and ensure
updated assertions in StackWalkerTest to use a dynamic expected value based on version check to ensure compatibility with different versions of openj9
changed the access modifier of the ` addViewportJob ` method from protected to public to allow broader access to the method from other classes
[ hotfix ] [ test ] remove unused parameter in simplewordcount
removed server restart settings and exit status checks from TestDatabase . java to streamline server management and ensure proper execution state
added null and empty checks for the block in NodePathsConvertOperator . java and improved error handling in SchemaQueryMergeOperator . java to
display the total harvesting time in the ice gui if it be available .
updated particle rendering parameters in ParticleEditor . java to improve visual appearance and responsiveness of the particle editor
added keyserver _ port configuration handling in UpgradeCatalog240 . java and updated tests in UpgradeCatalog240Test . java to ensure proper configuration management
added a transparent background color constant and updated the SvgViewerFactory to use it to improve visual appearance by applying a transparent background
updated import statements and annotations in ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to ensure compatibility with the minimum SDK version
updated the ` containsExactly ` method to accept varargs and utilize ` asList ` for converting them to a list to improve method flexibility and simplify the argument
updated Bandwidth builder to use refillGreedy instead of simple and improved key handling in Bucket4jFilterFunctions . java to
added documentation for GermanAnalyzer , GermanStemmer , and WordlistLoader classes to clarify the usage of external stopwords and
added support for non - materialized views in the Generator class and modified transformations to utilize hooks to enhance lineage evaluation logic based on specific conditions
added error handling for NoClassDefFoundError in REngine . java to ensure proper handling of NoClassDefFoundError scenarios
updated ` TraceFilter ` and ` TraceWebFilter ` to use ` SpanAndScope ` instead of ` Span ` to improve span management and
updated exception handling in AbstractUpdateCommandStep . java to ensure a fallback message is used when the cause is null
updated SolrServerException instantiation to include the base URL to improve error handling by providing context for the SolrServerException
modify the landscape setting and return logic in HSSFPrintSetup . java to correctly reflect the orientation of the print setup record
modify return statement to handle null values more gracefully to improve robustness by avoiding potential NullPointerExceptions
added validation to ensure argument names do not contain tabs or spaces to improve error handling for invalid argument names
added support for custom background location listeners in AndroidLocationPlayServiceManager to improve location updates handling based on the activity ' s state
updated condition in MeshBuilder to check for GL _ POINTS instead of GL _ POINTS to ensure proper handling of different primitive types
trufflestring : do n ' t compare byte [ ] with zero length to avoid infinite loop .
added a method to set the command list in ComboBox to ensure the command list reflects the current state of the ComboBox
nifi - 1641 : escape filename in pem file to prevent security vulnerability .
updated ZkCLI commands to use the " zkhost " scheme instead of hardcoded " zkcli . sh - cmd " to ensure compatibility
updated comparison methods in ` FirmwareUpdateProgressInfo ` , ` BridgeHandler ` , and ` WemoLightHandler ` to use `
added a conditional check for remote gRPC status before posting a severe event in LocalFallbackStrategy . java to avoid unnecessary event posting when the
refactor method parameters in XYItemRenderer and related classes for consistency to improve code readability and maintainability
added a NBTTagCompound to the tick entity in the tick type check to ensure that entities are properly added to the tick entity
added a new method ` getErrorString ` to handle error codes in ` GLSurfaceViewAPI18 . java ` to improve error handling
do n ' t throw an error if the feature registry do n ' t support it
updated the server URI format in RFC2616BaseTest . java to use a specific host address to ensure the test accurately reflects the
bugfix : add to helper list to make sure it do n ' t go into the wrong place
updated the return value from - 1 to - 2 in GlyphLayout . java to handle cases where the length is zero to ensure correct handling of
added security permissions and refactored context class loader management in Transport and TCPTransport classes to enhance security by ensuring proper permissions are enforced when
added null checks and improved folder synchronization logic in ReceiveExternalFilesActivity . java to enhance robustness and prevent potential null pointer exceptions
fix ( testng ) : fix npe in serviceloader
removed a debug log statement from BarrowmanCalculator . java and modified the deltap calculation in TubeCalc . java to simplify the calculation
modified column addition logic for nodes and edges in TimelineControllerImpl . java to ensure correct column assignment based on the type of node and edge
added a method to register extra components for BrokerAdminApiApplication to enhance the broker starter functionality by integrating additional components management
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify the behavior of the
peergroup : require segwit protocol and service when select a download peer .
improve performance of abstractbuilder . save ( ) by keep track of elapsed time
updated ` configNodeSimpleConsensusSnapshotTriggerThreshold ` and ` RatisRetryPolicy ` to accept a ` Supplier < Ratis
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
added a null check for the ManagedService annotation before unregistering and registering JMXHelper to ensure that JMXHelper is only registered when ManagedService is
tika - 3998 -- fix for non - unicode entry name in zip entry .
added a new class ` TestSplitThruPhiDivMod ` with methods ` testMod ` and ` testDiv ` to demonstr
added methods to lookup generic interfaces and superclasses in TemplateRegistry . java to enhance template lookup functionality and improve type safety
increased the initial size of the ByteArrayOutputStream from 512 to 1028 to optimize memory usage for improved performance
added TODO comments for Chinese , Indian , and Korean languages in PlayerSettingsScreen . java to clarify that these symbols
refactor byte transfer logic in TransferCompletionHandler to limit the amount of bytes sent to the buffer to optimize memory usage and prevent potential issues with
remove windowfocuslistener and replace it with windowadapter .
added null check for the source node before throwing a SemanticException to improve error handling by providing a clearer error message when the source node is
added scaling and center extent calculations for skeletal mesh in SkeletonRenderer . java to ensure proper rendering of skeletal mesh elements based
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality within the Spring application context
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unnecessary methods
added unit tests for installing a package in ShadowPackageManagerTest . java and updated ShadowPackageManager . java and ShadowPackageManager . java
updated method signatures in AvailableSettings . java to improve code clarity and maintainability
added TransactionCapsule and ReceiptCapsule fields along with init and finalize methods in TransactionTrace . java to enhance transaction management and ensure proper initialization
add client property ` ` shuffle . member . list ' ' to client property ( default to ` ` true ' ' )
replaced ` Text ` with ` CrawlDatum ` in ` SegmentReader . java ` to utilize the new data structure for improved
refactor JsonDeserializer to improve code structure to enhance maintainability and readability of the code
updated configuration names and changed fetch size from int to ThreadLocal in multiple files to improve consistency in configuration management and enhance thread safety in fetch size
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the intended
removed unused import of ExecutionContext from TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure a default value for the title variable is
added handling for empty response bodies in AsyncHttpClientCall to ensure that null response bodies are not processed as expected in the response
deprecate embeddedserverinstance for backwards compatibility
use jabrefframe . registermacevents ( ) instead of deprecated macadapter .
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated related references to improve cl
changed the return statement to return the result of ` toEnum ( type , s ) ` instead of ` toEnum ( type , s )
changed the ` hideUnprivilegedObjects ` field from non - final to final in ` PgConnection . java ` to enforce immutability
fix audiodatadatasourcetest by use configurationmanager . getinstance ( ) .
added support for saving Giphy video URLs in Android Q and above to ensure compatibility with devices running Android Q and above
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 559 : service
renamed multiple classes related to EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , SamlService , and Saml
refactor logger retrieval logic to use computeIfAbsent to simplify code and improve readability
hbase - 5696 use hadoop ' s dataoutputoutputstream instead of have a copy local ( talat uyarer )
updated configuration values in TestAcidOnTez . java from " rowid : 1 " to " rowid : 2 " and "
changed log level from info to debug for successful enhanced class enhancement to reduce log verbosity and improve performance during development
added a static method to get the default provider name for " Conscrypt " across multiple classes to ensure consistent provider name retrieval based on the
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to ensure proper processing of Captor annotations for
added error handling for cases where onlyRun , className , and testMethodNames are not present in TestSuiteBuilder . java to provide clearer
updated import statements and modified prefix computation logic in GroovyAutoComplete . java , GroovyLanguage . java , and GroovyAutoComplete . java to improve
fix import to use osm instead of default graphhopper
simonstewart : make the selenium - backed webdriver client use the default client config
changed the visibility of ` mHideSysUiScrim ` from final to non - final and updated its value based on user preferences to
added cancellation logic and improved error handling in OkHttpCall and Call classes to ensure proper cancellation of calls and enhance error reporting for better debugging
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
updated the RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to enhance functionality by integrating
added IF , RETURN , and SYNCHRONIZED , and created a new class ImplicitLambdaConsideredForApplicabilityTest with
simonstewart : move boxedprimitiveequality test to integration - tests
added unit tests for display metrics in DeviceConfigTest . java and modified DeviceConfig . java to set display dimensions in DeviceConfig . java to
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource reference in RootCursor from a drawable to a mipmap to improve the visual representation of the launcher icon
added a line to set the content of the error builder to improve error handling by providing a clearer error message
refactor ConcurrentHashMap for improved performance to enhance efficiency of hash map operations
added methods to adapt user trades in the AbucoinsAdapters class and integrated them into the AbucoinsTradeService and TradeDemo
updated plot claiming logic in Claim . java and modified clearAsPlayer method in SetBlockFast _ 1 _ 8 . java to improve plot
danielwagnerhall : add support for proxy capability to htmlunitdriver . java
added handling for VARBINARY types in BlobType . java to ensure correct database data type representation for VARBINARY types
refactor cookie handling logic in SetCookieSupport . java to improve readability and maintainability of the code
added synchronization around the initialization of simpleTypeMap and cachedEnvType to ensure thread safety when accessing shared resources
replaced ` Context ` with ` ContextInternal ` and updated related checks in ` InboundBuffer ` to enhance context management and ensure correct thread
updated LdapTimeoutTest to implement a timeout test for LDAP connections and reads to improve test reliability by allowing more time for server operations to complete
corrected the spelling of " UniocdeData . java " to " UnicodeData . java " in the usage message to ensure
camel - 3640 fixed the unit test error of camel - cxf
refactor multiple Synth UI classes for consistency and clarity to improve maintainability and readability of the codebase
added handling for BoosterSet instances in ComponentAssemblySaver . java and changed return value in BoosterSet . java from true to false
added support for proxy proxy configuration in jabref . java ( # 7370 )
updated constant names from BLOCKCHAIN __ FORK _ COUNT to BLOCKCHAIN _ FORK _ COUNT and modified interval calculation in MetricsApi
replace InternalError throwing with returning false to allow compilation stub invocation for JEP 359 support
refactored logging statements in TestIPCUtil . java to use Apache Commons Logging instead of Mortbay ' s logging to
removed chunked transfer handling in NettyRoutingFilter . java to streamline the request process by eliminating unnecessary transfer encoding
added a call to ` clearAttributes ( ) ` in ` PatternTokenizer . java ` to ensure attributes are cleared before processing new patterns
updated the ` VerificationAfterDelayImpl ` and ` After ` classes to include a polling period parameter for improved error handling during verification to enhance
added compaction state management in SessionState and modified masking logic in SemanticAnalyzer to ensure that masking only occurs when not in compaction mode
[ zeppelin - 5441 ] fix zeppelin - 5444 . jar file not find in z
hbase - 26969 fix checkstyle violation in hbase - admin
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated ` calcXBounds ` methods in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to improve
added a try - finally block to ensure resources are released even if parsing fails to improve resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include a
added null and closed check before closing the result set in JdbcExecutor to prevent potential NullPointerException and ensure proper resource management
update driver version from - 1 to 10 and driverVersionMinor from - 1 to 6 in DerbyDatabase . java to reflect the current version
fixed bug 1249498 - usestringbufferlength now catch more case .
removed error logging from RemoteSparkJobMonitor . java to streamline error handling and reduce unnecessary logging
refactor createDb method to return a Connection object instead of void to ensure proper resource management and prevent potential memory leaks
rename classes CreateCustomMetric , ListResources , and ListResourcesTest to improve clarity and consistency in naming conventions
hbase - 14387 compaction improvement : maximum off - peak compaction size ( vladimir rodionov
updated BitstampDepositAddress to handle both " address " and " address " JSON inputs and added DepositAddressJSONTest for JSON
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to improve error handling for buffer capacity issues
updated the method to use ` toAbsolutePath ( ) ` instead of ` toPath ( ) ` for better path handling to ensure accurate comparison
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and replaced ` operationType ` with ` InvocationType ` to
refactor network interface retrieval logic to check for multicast support to ensure that only supported multicast interfaces are returned
replaced the existing conditional check for validCheckSum with a loop that checks for " 1 : any " to improve code clarity and ensure
added a clone ( ) method to BufferedChecksumIndexInput to indicate that the clone ( ) method is not supported in this implementation
updated the return statement in Circle . java to use radius - based calculations to improve accuracy of circle boundary checks
added a conditional check before updating the frequencyBand assignment and modified the return statement in P25Channel . java to ensure that frequencyBand is only
rename ` tapSquareSize ` and ` inTapSquare ` variables and methods to ` tapRectangleWidth ` and ` tapRectangleHeight ` to
change default replicate _ on _ write from true to false . patch by jbellis
added a new parameter ` lastFillTime ` to the ` getCryptoFacilitiesFills ` method and implemented date formatting in ` Util ` to
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes to provide access to the delegate object for tracing purposes
updated Snackbar message handling and improved sync broadcasting logic in FileActivity and FileDisplayActivity to enhance user experience by providing clearer
added a new method ` quiche _ conn _ stream _ writable ` in ` ForeignIncubatorQuicheConnection ` and `
added a boolean parameter to the method call in JavascriptContext . java to enhance functionality by allowing conditional execution of the method
refactor TableCell constructor calls to remove unnecessary alignment parameters to simplify code and improve readability by eliminating unnecessary parameters
added a new file ` TracingAutoConfiguration . java ` to configure tracing beans in a Spring application to enable automatic tracing configuration for improved tracing
added a second paragraph to the content of the second paragraph in Submissions . java to ensure that the second paragraph is included in the content for
refactor ` getPrunedQueryableSegments ` and ` getPrunedQueryableSegments ` to accept a list of queryable segments to
updated VertxBufferTest . java file to improve buffer handling functionality
patch from josh from bug # 46572 - fix bug # 46573 - hsmf messagesubmissionchunk . readdate (
changed the visibility of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and modified ` MongoTemplate ` to include ` WriteResult ` and ` MongoActionOperation `
[ hotfix ] fix checkstyle violation in jobcoordinationservice
renamed the method ` bitsToHumanReadable ` to ` bytesToHumanReadable ` and added a new method ` bytesToHumanReadable `
replaced ` newMergePolicy ( random ( ) ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMerge
added a conditional check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
updated error message in CpuNDArrayFactory . java to include instructions for CPU support to provide clearer guidance on how to run binaries
modified loadSettingModels and contextInitialized methods to accept an InputStream parameter to enhance flexibility by allowing the use of a reference properties file
added null checks for incoming Fields , TermsEnum , and LeafReader in FilterLeafReader . java to ensure input validation and prevent potential NullPointerExceptions
fix key size for encryption in jcecrmfencryptorbuilder
replace ` IOException ` with ` IOException . getMessage ( ) ` in ` NetSocketReader . java ` and remove unused constructors in ` SoftEndOf
remove unnecessary @ Inject annotations from multiple Java files to streamline the code and improve dependency management
updated the expected size of bundledDistributionTest from 9 to 10 and added assertions for database user attributes in PostgreSQLTest to reflect the correct number
[ flink - 20613 ] [ stream ] add pipeline . name config option to specify job name
modify scale calculation to account for two - panel layouts to ensure correct scaling behavior based on the device ' s layout dimensions
replaced GrassyBiome with SnowyBiome and updated populators for the IcePlainsBiome class to enhance
removed unnecessary zone parameter from the ` getMinTime ` and ` getMaxTime ` methods in ` StorageUtils ` to simplify method signatures and improve code
[ j2kt ] add the isqualified flag to the thisreference
fixed xhamster ripper to work on window
refactor entity collection in GlowWorld . java to use a temporary ArrayList to improve performance and maintainability by avoiding concurrent modification issues
mondrian : fix oracledialect . gettablename ( ) for schema = ' ' schema ' '
fix a typo in the console filter ( # 5373 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select and deselect all
[ java ] use termlengthmask instead of termwindowlength in network publication .
fix checkstyle issue in util / guildupdateowner / guildupdateownerevent . java ( # 2178 )
update inPortalTicks increment logic for creative and non - creative players to ensure proper in - portal tick handling for creative players
added compression functionality and adjusted spacing in ClusterMonitorTileSkin . java to improve visual representation of items based on their size
updated multiple codec template classes for consistency in naming conventions to improve code readability and maintainability
change data types from int to long for length calculations in Base64 . java to ensure proper handling of large integer values and avoid potential overflow issues
removed the null check for header in the renderer condition to simplify the logic by eliminating unnecessary checks
cloudstack - 5391 : scale vm with custom disk offering should not change the disk offering ( # 5394 )
updated import statements in HitbtcAdapters . java and modified builder initialization in HitbtcAdapters . java to improve code clarity
rename ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to clarify the purpose
updated the description URI for the JRuby Scripting service from " automation : jruby " to " automation : jrubyscripting " to
refactor name handling in ConfigCategory to use displayName instead of name to improve clarity and maintainability of the code
updated the condition in ParticipateAssetIssueActuator to include an additional check for negative exchange amounts to ensure that the exchange amount does not
added a loop to limit the number of iterations in FeedUtils . java to improve performance by avoiding unnecessary processing
added a test method ` testHDF4 ( ) ` to ` HDFParserTest . java ` to ensure compatibility with HDF4 file parsing
added a constant for CALCITE _ 6092 _ FIXED and updated the checkScalar method to handle invalid TIME values to improve error handling
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods to quietly close all AutoCloseable objects in CloseHelper . java to improve resource management and prevent potential memory leaks
replaced hardcoded confirmation button values with a constant string value from R . string . common _ yes to simplify code and improve readability by
added a null check before drawing images in Pixmap . java to avoid potential NullPointerExceptions when dimensions are zero
replaced ReflectionHelpers with direct method invocation for class definition in UnsafeAccess . java to simplify the code and improve performance by avoiding dependency on
[ netbeans - 5394 ] fix ipv6 address validation ( # 5396 )
refactor conflict handling in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve clarity and maintainability of
change the flutter sdk version to 0.0 . 3 ( # 4358 )
added a condition to return the reference if it equals the current reference in ReferenceMemory . java to ensure the correct reference is returned when it is
added checks for non - file inputs and improved error handling in the Injector class to enhance robustness by ensuring only valid seed files are injected
added a condition to hide the original view when it is an instance of ItemInfo to ensure that the original view is not hidden when it '
updated maxNodes calculation and modified maxTrips condition in DefaultLoopPolicies . java to ensure that maxNodes is non - negative and improve the
added logging for unsupported texture coordinate types in CombinedTexture and introduced a method to check texture coordinate types in UVCoordinatesGenerator to improve error handling
added error handling for invalid input in multiple classes to improve robustness by preventing application crashes due to invalid data
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality by allowing delegation to delegate methods
updated the SQL update statement in HandleDAOImpl . java and set the oldPrefixLength property in the query to correct the substring logic and ensure
replaced the addition of elements to the convertedValsList with a constructor that initializes it directly to improve code readability and performance by elimin
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used
added a notification for nightly builds in MainWindow . java to inform users when the version of Universal Gcode Sender is a night
update getresponsessortedbyrecipient to be able to sort by team name .
updated the return message in UnnecessaryThrows . java from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations . " to
deleted the CacheApplication . java file and refactored cache controller references in CommonsApplication . java and ShareActivity . java to streamline
replaced references to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future development
updated configuration handling for devices running KitKat and above to ensure compatibility with devices running KitKat and above
added a new constant for stack repository update link existence and updated resource properties accordingly to ensure that the system correctly handles the existence of the latest repository
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
do n ' t throw npe if index name do n ' t exist
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance package access checks for XML parsing functionality
rename methods in JobRepository and related classes from ` save ` and ` persistExecutionContext ` to ` add ` and ` updateExecutionContext `
bugfix : loop exit node must be loopbegin , not loopend
replace RecyclerView with WidgetsRecyclerView and introduce mCurrentRecyclerView for better layout management to improve layout responsiveness and maintain consistency in
added a check for terminal support in ConsoleReader . java to ensure compatibility with terminal functionality
updated time handling in ` CloudExitableDirectoryReaderTest ` and ` LBHttpSolrClient ` to use ` Integer ` instead of `
added a session validity check before flushing on response commit in AbstractSessionCache . java to ensure that session data is only flushed when the session is
refactor index change handling to improve null safety and clarity to enhance code readability and prevent potential NullPointerExceptions
replaced Vector with ArrayList for managing RadioButtons and added action listeners to improve performance and flexibility in managing radio buttons
refactor UserManagerCompat to support both NYC and MARSH MALLOW versions and create new UserManagerCompatVM class to enhance
added methods to retrieve database major and minor versions in MockDatabase , AbstractDatabase , HibernateDatabase , and ReorganizeTableStatement classes to
updated the comparison logic and improved error messaging in ActionGraphCache . java to enhance clarity and provide more informative error messages for mis
added LockDatabaseDesc and UnlockDatabaseDesc classes to implement DDLDesc functionality for database operations
refactor RankingTopComponent and RankingUIModel to use setter methods for instance variables to improve code readability and maintainability
added handling for disconnect messages in HandshakeHandler . java and modified logging in NodeImpl . java to improve clarity and accuracy of disconnect message logging
added a test for setting and deleting storage groups in IoTDBAuthorizationIT and updated the AuthorityChecker to handle the DELETE _ STORAGE _
chore : rename documentai to documentai for consistency
updated type validation logic to check for ` J . VariableDeclarations . NamedVariable ` and introduced a new method to validate variable types to enhance type
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to handle lifecycle events for test classes
[ java ] update countermanager to use cachedepochclock for free - to - reuse detection .
updated logging statements in MultiSteps . java and SendEmail . java to use placeholder syntax to improve readability and maintain consistency in logging practices
added null check and cloning of joinKeys array in JoinDesc . java to ensure joinKeys is not null and prevent potential NullPointerExceptions
updated the authentication handler registration to use a default principal resolver to enhance flexibility in authentication handling
updated the ` addSettingsFromFile ` method to include a search paths parameter and modified related tests in ` XcconfigParserTest ` to enhance
added ' final ' modifier to lists , maps , leafLists , rootStates , and rootStates in Oracle . java to enforce immutability
[ hotfix ] [ runtime ] disable unaligned checkpointing by default
throw unsupportedoperationvisitor in case of unsupported sql query ( # 11938 )
make compiletheworld test log when graal . log = true
added a check for LocalVariable type in LambdaRewriter . java to ensure proper handling of local variables to prevent runtime errors
added support for MySQLDatabase in CreateTableGenerator to ensure proper handling of timestamp columns in SQL statements
added context class loader management in EnvConfiguration . java to ensure proper disposal and disposal of the current class loader for context management
added a condition to set ejection delay when stageNr is zero in SimulationListHandler . java to ensure proper handling of ejection delay
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated method and class names accordingly to improve clarity and
updated TransactionUtil2 . java to improve transaction handling logic to enhance performance and maintainability of transaction processing
updated methods to use ` Optional < OAuthRegisteredService > ` instead of ` JWTClaimsSet ` for issuer resolution to enhance flexibility by allowing
updated string formatting and added null check for DocCollection in ClusterState . java to improve code readability and handle potential null reference gracefully
updated method call from ` getStyle ( ) . setAlignment ( align ) ` to ` getAllStyles ( ) . setAlignment ( align ) `
added foreign database and schema name properties to ForeignKeyColumn and related classes to enhance functionality for managing foreign database and schema configurations
[ java ] do n ' t use electionstate . init directly in election .
refactor shadow methods in ShadowActivity and ShadowBluetoothDevice to use Shadow . extract ( ) instead of Shadows . shadowOf ( )
added error handling for null or empty selection root in FileSelection . java and improved test cases in TestBugFixes . java to enhance
deprecate iforgeitem . oninventorytick ( ) in favor of iforgeitem . onarmortick ( ) .
save war / jar file in a temporary file instead of create it .
added a null check before invoking invalidateOptionsMenu ( ) in SingleUploadFragment . java to prevent potential NullPointerException when getSherlockActivity ( )
updated widget binding logic in AppsCustomizePagedView and Launcher to utilize bindOptions for improved flexibility to enhance widget
added new capability constants for air pressure , air quality , co2PPM , and vocPPM in EcobeeSensorThingHandler
reformatted code for better readability and consistency in OperationSetServerStoredContactInfoFacebookImpl . java to improve code maintainability and adhere
added environment variable " AAPT " and " AAPT2 " to Genrule . java and updated tests in GenruleTest . java to
only dump access table when truffleinstrumentBranches . value be true
added null check before disposing the message to prevent potential NullPointerException when disposing the message
updated TronStoreWithRevoking to use @ Getter annotation and changed the access modifier of ` db ` in ` TxCacheDB
update log warning messages to clarify that LogWatcher is not yet implemented for Log4j
replaced printStackTrace ( ) calls with fail ( ) for cloning failures to improve error handling and provide clearer failure messages during cloning failures
updated phone number format and refactored buffer handling in IOSImplementation . java , and introduced SmallByteArrayOutputStream . java for improved
oglesshader now use vertexbuffer . type instead of string . getname ( ) .
updated the JDBC connection property from " close " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure proper shutdown of the
changed the type of ` firstExchangeTimestamp ` and ` lastExchangeCompletedTimestamp ` from ` Date ` to ` Object ` and added null checks
updated Javadoc and added locale handling in TestHtmlTag . java , TestUseOption . java , and C1 . java to improve code cl
updated condition to check if the result is incomplete and has more than 10 items to improve handling of incomplete results and prevent potential errors
updated command - line argument usage and modified time column name retrieval logic in HybridClusterIntegrationTestCommandLineRunner . java to improve usability and
updated output format handling in SiteSnapshotVariationsTest and OutputOptions classes to differentiate between HTML and other output formats
updated condition in DeviceProfile . java to check if QSB is enabled and minimum QSB margin exceeds hotseat bar bottom space to ensure
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` and ` Gltf
added a date buffer to the generator and updated related classes to utilize it to improve the handling of timestamp data in HTTP responses
replaced instances of Adler32 with CRC32 in Store . java to use a more accurate CRC implementation
xen . heartbeat . interval default value should be null , not " any # of seconds "
added a new constant ` ZERO _ AREA _ FIN ` and refactored warning handling in ` FinSetCalc . java ` to improve
use custom serializer for document metadata in elasticsearchio
hhh - 14816 - add date _ trunc ( ) function to support trunc ( ) on oracle
added error handling for memory pool not found exceptions in MetricUtils . java and updated corresponding test cases in MetricUtilsTest . java to improve error
updated method signatures to include a ` useJavaScript ` parameter and modified return statements to use ` CompletableFuture < RetrievedFilePointer > ` to improve
updated type annotations in ValidationTask . java to use runtime object names with enclosing names to improve clarity and accuracy of type annotations for better debugging
updated the BACKFILL string from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java
replaced instances of ` new DataWord ( 1 ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( )
refactor badge handling in AllAppsContainerView to utilize a loop for child views to improve code readability and maintainability by reducing
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService and ResourceHandlerTest to clarify the expected behavior after ContextHandlerCollection is started to improve code clarity and
removed unnecessary conditional check for WORKSPACE _ CUSTOM in Cling . java to streamline code logic for better performance
truffle : remove assertion from trufflejdkservices . lookupmodule
added @ Ignore annotation to ClassicSuperHandlingTest . java to clarify that the test does not make sense until call - through is enabled
updated import statements for ItBit classes from version 1 to version 2 to ensure compatibility with the latest version of the ItBit API
ww - 4892 use isdefined ( ) instead of isobject ( ) to check for null
changed the ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois ` classes to be ` public final
added try - with - resources for ObjectInputStream in RegionsApiUtil . java to ensure proper resource management and handle potential IOException
replaced the use of ` getClass ( ) . getName ( ) . getName ( ) ` with direct references to " java . util . Vector
added tableNameWithType parameter to the warning log message in RetentionManager . java to provide more context for the warning for invalid retention time
added trimming to the fragment list check in QueryExecutorImpl . java to ensure the fragment list is not empty before proceeding
fix modfileresourcepack . getfilenotfoundexception throw by modfileresourcepack . getfilenotfoundex
refactor TransformerBuilder and TransformerBuilder handling in PartitionToolbar . java to improve code clarity and enhance functionality for managing TransformerBuilder instances
removed unnecessary condition for showing as grid in RecentsView . java to streamline the code logic for better readability and maintainability
updated the ` calculate ` method to return ` BMIViewObject ` instead of ` Map < String , String > ` to enhance data handling
removed the Comparator from the thenComparing method call in QueryCommand . java to simplify the code and improve readability
modify damage adjustment for hay bale block to adjust damage when the block ' s down is a HayBale
refactor environment variable handling to support " OPENJ9 _ JAVA _ COMMAND _ LINE " and improve handling of environment variables to enhance compatibility with
added support for custom plugin properties in OptionsParser and updated tests accordingly to enhance flexibility in configuring plugin properties during parsing
updated the condition to check if hashTable is not empty before verifying join type to improve clarity and prevent potential NullPointerException when hashTable is
updated timestamp validation logic and renamed test methods for clarity to improve accuracy of timestamp representation and enhance test readability
[ java ] use context . archivecontext ( ) instead of archivectx in clusteredservicetest .
added a condition to check if ` isCompiled ` is false before executing code in ` LambdaForm . java ` to ensure that the code only
[ geos - 6640 ] add test image2 and image2 _ joined to abstracttest . testimage2 ( )
updated methods and constants in TogglableFlag , LauncherAppState , and BaseFlags to improve clarity and functionality of default value
updated logging statements in DockerClientFactory to use parameterized messages to improve logging clarity and reduce log verbosity
added a conditional check to return early if the current platform is not Android to optimize performance by avoiding unnecessary processing for Android devices
updated assertions in RoutesTest to use Hamcrest ' s assertThat instead of JUnit ' s assertEquals to improve readability and
added new functional interfaces for byte , float , and short operations in the com . speedment . common . function package to provide functional programming
changed the return type of ` getSubsColor ( ) ` and ` setSubsColor ( ) ` methods from ` int ` to ` String
added a conditional check before deregistering the invocation in the future to ensure that operations are only performed when the future is complete
replaced ` flush ( ) ` with ` output ( null , nop ) ` in ` AbstractWebSocketConnection . java ` to streamline the
added a check for the " Redirected " flag before starting the welcome activity in LoginActivity to ensure that the welcome activity is only launched when
added a new class ` ShadowCheckedTextView ` to implement shadow functionality for ` CheckedTextView ` to enable testing of the ` CheckedText
added Serializable interface to ParserState class and marked certain fields and fields as transient in AccessorProperty and Property classes to ensure that the ParserState
8275362 : add expiry exception for identrustdstx3 alias to verifycacerts test
removed duplicate setting of TEMPDIR _ CONFIGURED and TEMPDIR to streamline code by eliminating redundancy
fix display of nickname in muc occupant . jm - 141
updated QuicSession and QuicSession classes to include a new context parameter to enhance connection management by allowing context - specific connections
replaced direct calls to ` writer . setMergeScheduler ( ) ` with ` writer . getConfig ( ) . setMergePolicy ( ) `
refactor character type checks and variable names for consistency in ICU4JImpl and TextPosition classes to improve code readability and maintainability by
added support for ComputedDateValue and ComputedNumericValue in the AddDefaultValueChange class to enhance type handling for default values in the database
renamed NbtScoreboardIoService . java file to improve clarity and consistency in naming conventions
resolve service provider metadata from classpath if it do n ' t exist
changed the visibility of the ` printer ` variable and refactored the ` createPrinter ( ) ` method in ` GraphPrinterDumpHandler .
added BigDecimal import and modified order average price calculation in HuobiAdapters . java to ensure accurate average price calculation for trading orders
updated ProjectionOperation to use ` it . getTarget ( ) ` instead of ` it . getName ( ) ` and changed field types from ` String
modify the logic for adding a player in FakePlayer . java to ensure players are only added if they belong to the viewers list to improve
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to enhance drawable state management and improve code readability
refactor connection handling in SPDYClient to improve clarity and maintainability to enhance code readability and maintainability by consolidating connection
fixprotostuffobjectoutput . writeobject ( null ) do n ' t work correctly
pdfbox - 4892 : fix checkstyle violation ; add comment
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future feature additions
ggb - 1359 do n ' t show axis when axis be not show in the graph
replaced direct calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` methods to improve
removed unnecessary whitespace in the returnToWorkspace method call to improve code readability and maintain consistency
modified SSL connection handling in CustomUrlJob . java and added CustomUrlTrustEverything . java for certificate validation to enhance security by ensuring all
fix display of used clock rate for g722
refactor TextureAtlas class implementation to improve code readability and maintainability
updated ProjectGenerator to return the module name instead of the product name and added a method to AppleLibraryBuilder for setting the module name to
added locking and unlocking to the release process in TestSlot . java to ensure thread safety during release operations
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 1 - inheritance -
updated WebSocket response handling in WebSocketServletRFCTest . java to improve connection validation and streamline parsing logic
[ wasm ] clear reference stack in case of unconditional reference type .
added TTL configuration to ClickHouseLogCollectClient and modified related classes to utilize it to enhance logging capabilities by allowing time - to -
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related logic in CustomChangeWrapper and XMLChangeLogSerializer to
replaced the use of ` QueuedThreadPool ` with ` Handler ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java ` to
added error handling for Fresco initialization and VectorDrawable creation in CommonsApplication and NearbyController to improve robustness by catching
modify return statement to handle null and empty objectName case to improve robustness by preventing potential NullPointerExceptions
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to provide
[ hotfix ] [ table ] make environmentsettings . plannerclass and environmentsettings . executorclass static final
updated variable names for clarity and improved null handling for subject and dname in KeyTool . java to enhance code readability and ensure
added a deprecation annotation to RuntimeOptions . java to indicate that the class is outdated and will be removed in future versions
replaced ByteBuffer encoding with a direct call to getBytes to simplify code and improve performance by eliminating unnecessary buffer manipulation
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a standardized way to
added ERASE _ LINE _ ON _ FINISH option to BRACKE _ PASTE and implemented cleanup logic in LineReaderImpl to
hbase - 25813 fix the logic of masterfilesystem . getserver ( ) to check if the server name do n ' t exist
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR and BLOCK
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5582 :
[ netty ] catch throwable instead of exception in defaulthttpclient and fullnettyclienthttp
changed the layout container from centering spinnerC to centering it absolute to ensure the spinner is displayed as a absolute center for better usability
[ hotfix ] [ network ] fix networkbufferpool # requestmemorysegments not be interruptable
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper management of MBeanServer instances
replaced JUnit runner annotations with RetryTestRule in AbstractIT . java to enable retry functionality for improved test reliability
refactor auto - commit logic in CallTask and QueryStateMachine classes to simplify transaction management and improve code clarity
add a package - info . java file for the org . hydromatic . optiq . test package
added support for " javax . microedition . khronos . opengles . GL " alongside " javax . net
[ hotfix ] [ test ] remove unused local variable in streamtasktestharness
refactor request handling logic in ` Request . java ` and add a test for the ` connect ` method in ` RequestTest . java `
updated the method for retrieving legacy available storage points and changed the access modifier of the KEY _ LAST _ SEEN _ VERSION _ CODE to public
added methods to handle session availability and unavailability in SessionManager to improve session management by providing priority changes for available and unavailable sessions
added a new package " liquibase . pro " to the ServiceLocator to support package scanning for Liquibase functionality
renamed the method ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` in the ` SyncedFolderProvider ` class to improve cl
modified the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` parameter for more flexible argument handling to enhance functionality
refactor relative path matching logic in FastPathResolver . java to improve clarity and correctness to enhance code readability and maintainability by
replaced ` length ( ) ` with ` toIntExact ( ) ` for ` Slice ` in ` HiveClientModule . java ` to ensure
updated method names from ` hasRandomizedType ` and ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` and ` has
added support for handling " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and updated tests in TestWindowFrame .
clear the headers of the proxy request in AbstractProxyServlet . java to ensure proper handling of HTTP headers during proxy requests
added a check to skip execution if SA attach is not expected to work in CompressedClassSpaceSizeInJmapHeap . java to ensure
added null check for bgColor before checking its alpha value in GraphicsDevice . java and created TranslucentWindow . java for fullscreen window
added error handling for null user info in UserInfoActivity to improve user experience by providing clear error messages when no info information is available
added custom field serialization for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers can be used on different machines to
[ flink - 20536 ] [ table ] fix kafkatablesourcesinkfactorybase and kafkatablesinkfactorytest
added a new file ` MultipleOutputsIntegrationTest . java ` to implement integration tests for named output groups and rule outputs to ensure correct functionality and
updated regex pattern in FileSettings . java and added content comparison logic in FileSettings . java to ensure correct parsing of content and maintain consistency in
fix npe in statelessflow when there be no flow in a versioned group
replaced instances of ` new Object [ ] ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java
added @ TaskbarModeSwitch ( mode = PERSISTENT ) annotation to TaplTestsQuickstep . java to enable persistent taskbar mode
added new device status entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance device status
improve error message when item model can not be load .
added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
fix getcurrentsurfacescale ( ) on macosx
refactor RussianLowerCaseFilter to improve code clarity to enhance maintainability and readability of the code
replaced serverProps and clientProps with EMPTY _ PROPS in CsvBulkLoadToolIT . java and simplified server retrieval in QueryUtil . java
replaced ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` FileDisplayActivity . java ` to ensure consistent formatting
[ wasm ] add a resettableinputstream so that we do n ' t have to seek to the end of the file .
added a flag to control whether to repeat the first line indentation in ColumnText to enhance flexibility in indenting behavior based on user preferences
changed the type casting of the ` oid ` comparison from ` Oid ` to ` Object ` to ensure proper type safety when comparing Oid instances
move metric and health - registry initialization to hikaripool . setmetricstrackerfactory ( ) and hikaripool . set
[ gr - 4640 ] fix loopex . controlflowanchored to not use controlflowanchornode .
added a line to disable focus painting for buttons in WindowsPlacesBar . java to improve user interface responsiveness by preventing unint
added a condition to check for UniqueConstraint and ForeignKey types in DatabaseSnapshot . java to ensure proper handling of backingIndex for both PrimaryKey and
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated the ` AccountAPI `
check dc . title be not contain a dc . title mdv in the group
refactor GapInsertionDetector to handle empty utterance cases and improve error handling to enhance robustness and clarity of utterance processing logic
added unit test base on user forum issue
updated thread reference from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and
increased the FASTSCROLL _ THRESHOLD _ MILLIS value from 40 to 10 in RecyclerViewFastScroller . java to improve
updated the SystemClassName string to point to " Ljava / lang / System " instead of using MetaUtil to improve clarity and maintainability
hhh - 13644 - fix procedurecallimpl . getresultstream ( ) to return the result stream
added a null check for the APIProperties map before accessing it to avoid potential NullPointerException when APIProperties is not set
added BinaryFrameGenerator and TextFrameGenerator classes to handle WebSocket payload generation for binary and text frames
danielwagnerhall : fix flaky test on firefox
updated lat and lon calculations in RandomGeo3dShapeGenerator . java to use randomness to improve randomness of geographical data generation
http : / / issues . apache . org / activemq / browse / amq - 2370 - keep the classloader in the
change return value from false to true in SQLiteDatabase . java to indicate successful operation instead of failure
do n ' t report jsr166 _ concurrent _ sig warning if it do n ' t exist
added MkdirStep to the commands list in AndroidAar , AppleBundle , ApplePackage , and FatBinary classes to ensure that
updated coordinate calculations and error handling in MeshLeveler . java for improved clarity and accuracy to enhance error reporting and ensure accurate boundary checks
[ drools - 7 ] skip kpmml parse and compilation when jpmml be not available
updated the condition from ` locationMode ` to ` thermalStatus ` in ` ShadowPowerManager . java ` to improve clarity by using
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility with macOS environments for temporary directory creation
added a conditional check for memory mapped buffers in PrjFileReader and CatalogManager to ensure proper handling of memory mapped buffers based on the operating
added a null check for the organization in the pom . xml file to ensure that Plugis is required to have an organization in the pom
updated copyright notice in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused listener implementation to streamline the codebase
updated the method call to use the system ' s class path instead of an empty string to ensure the child process uses the correct class path for
replaced the use of ArrayUtils . EMPTY _ BYTE _ ARRAY with direct byte arrays for cryptKeyInit , cryptKeyPriv , and md5
added a test method to ` AddLicenseHeaderTest ` to verify that Javadoc changes are handled correctly to address issue # 3198 and improve test
change the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the feature for phone synchronization
added a ` div . class = ' noPrint ' ` tag to the ` HtmlThreadInformationsReport ` class to improve the display of
update LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and update TEST _ VERSION _ CURRENT
added macosx symbolicator and task handles in BsdDebuggerLocal . java and expanded OS detection in PlatformInfo . java to support mac
use weak reference in fmlclienthandler to prevent memory leak .
do n ' t log connection reset by peer in networkdispatcher
[ java ] use default admin buffer if not specify in the conductor .
added a break statement to the TouchImageView class to ensure proper flow control in the switch case
chore : [ dialogflow - cx ] fix typo in dialogflow . proto ( # 113 )
removed SSL handshake handling from FeedableBodyGenerator . java to simplify the code by eliminating unnecessary SSL handshake checks
added checks for ` java . lang . Object ` and ` java . lang . generic . Variance ` in ` TypeUtils . java `
replace nonblockinghashset with concurrentskiplistset for memtablespendingflush
added null check for ` tree . errs ` in ` MemberEnter . java ` and improved error handling in ` JavaCompiler . java `
change browser default from NO _ BACKGROUND to NONE in BugInfoView . java to improve the visual appearance of the browser by using a more
updated the negative button ' s action from ' finish ( ) ' to ' dialog . cancel ( ) ' in AboutActivity . java to
fix integerstamp . div ( ) to handle negative range
added a method to read an InputStream and updated the image instance initialization to ensure that the image is read from an input stream before passing it to
added methods to manage and write variable declarations in CaseStmtToken and updated ExprGenerator to utilize this new functionality to enhance the handling of variable
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during cipher initialization
removed " psapi . lib " from the AdditionalDependencies attribute in WinGammaPlatformVC10 . java to include " psapi . lib "
updated string concatenation in StringUtilsTest . java to use system - based line separator to ensure compatibility across different operating systems
added encoding settings in TemplateEngineFreemarker and updated maliciousJavascript to include quotes to ensure compatibility with different template formats and improve
replace ByteArrayInputStream with String for unmarshalling in CRDGeneratorTest . java to improve code readability and facilitate debugging
make some field final so they can be reuse by other class .
added a conditional check for ` testngEmailableReporter ` before adding it to the reporter to ensure that the emailable reporter is only added
added handling for quote quotation marks in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to improve command parsing logic and ensure correctness of
removed the ` public ` modifier from interface and class declarations in multiple Java files to enforce package - private visibility for better encapsulation
added a method to set the number of reduce tasks in the job to enhance task management by specifying the number of reducer tasks
fix schemageneratorhelper . getfieldvalue ( ) to return the default value if the field name do not match the value ( #
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the latest file version changes
updated extension checks in FloatTextureData . java to include support for GL _ ARB _ texture _ float to ensure compatibility with different OpenGL
add fileserver . write ( string filename , string value ) and fileserver . closefile ( string filename , string value )
added a conditional check for ` outputDirectory ` and ` jarStream ` before setting the output directory to ensure that the output directory is set only when
added performance measurement to the getFuture method in ShadowSQLiteConnection to improve performance measurement for database operations
updated references from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java `
[ geos - 7012 ] add resourceerrorhandling enum to handle resource error .
added a check to ensure ` pos ` is within the bounds of ` BUFFER _ SIZE ` in ` RAMInputStream ` and introduced a new test
update error handling in DefaultServlet and JspServlet to include localized messages to improve user experience by providing context for error responses
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext class for permission testing to enhance thread
updated CHECK _ EVERY _ N constant and modified checkFreeMem ( ) calls to use bitwise operations to improve performance by reducing the number
hbase - 26969 fix checkstyle violation in hbase - split ( addendum )
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test for JAAS demos in DemoModulesTests . java to validate the functionality of the DemoDemo class to
updated the conditional check to include spanX and spanY parameters in the folder creation logic to ensure that the return value accurately reflects the
updated CacheOffHeap . java file to improve cache management efficiency
createtable : throw a feature _ not _ supported _ error if the table depend on another table .
added validation for current layer height and improved error handling in TiledLoader . java , and modified data string comparison in TiledLoader .
added synchronized keyword to the setWorkingSet method in InMemoryTileCache to ensure thread safety when modifying the working set
added a new file ` Solution . java ` that implements a solution for finding the starting stone in a given integer to implement a solution for
add addresschecker interface to make tracker request processing more robust .
fix npe in multilayermodel when rendertype = = translucent
added tag removal functionality to the toolTip in GuiConfigEntries . java to improve user experience by removing default tags from the tooltip
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` and updated its usage in ` Capability ` and ` Net
added null check for recieptents before mailing and changed time conversion from seconds to milliseconds to improve robustness and ensure accurate time representation
refactored the single check logic into a separate method to improve code readability and maintainability
make dockerclientfactory # client ( boolean failfast ) more robust .
added resourcesMode parameter to AndroidMetadata constructor and updated perfStatsCollector to include resource mode information to enhance metadata management by associating resources with specific
fix for act - 1641 : fix date handling in historicprocessinstancequeryimpl
replaced ` importProject ` with ` importProjectCore ` in ` OpenAndroidModule . java ` to utilize the new method for importing
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting and debugging for command - related exceptions
refactor TreeMap class implementation to improve performance and readability of the code
added methods for enabling asynchronous stack traces and improved exception handling in the Display class to facilitate asynchronous stack trace management and enhance
added a method to set the glow color in BubbleTextView and updated Folder to utilize this new method to enhance customization of
added styling for link and description elements in LinkedFilesEditor . java to improve the visual appearance of file - row - text elements in
modify AbstractJdbc2ResultSetMetaData to return " java . lang . Short " and add a new test for class matching in ResultSetMetaDataTest to
removed error handling for file deletion in Lucene40LiveDocsFormat . java and simplified file deletion in SimpleTextLiveDocsFormat . java to
added null check for _ info before checking the status code to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class to initialize the provider to allow customization of the ShadowLocation instance
updated maxRAM calculation in LauncherPreferenceJavaFragment to accommodate larger device RAM values to ensure proper memory allocation for 32 - bit
add miss stats for map that do not have data
add some logging to fileprofileactivator for easy debugging
corrected a typo in the error message from " noname1234 " to " invalid _ " to improve clarity of the error message
changed collection type from toList ( ) to toSet ( ) in GuildImpl . java to improve readability and maintainability of the code
updated the limit for the number of uploads from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter .
added unit tests for the ` delete ` method in ` DashboardUserMapperTest ` to ensure the correctness of the ` dashboardUserMapper `
update instructorfeedbackresultsspagedata to use primaryparticipant instead of recipient
sulong : fix a bug in the deref handle when the address be a native object .
added a method ` getBufferSize ( ) ` to ` BufferedIndexOutput ` to provide access to the ` bufferSize ` property
make terasology command help auto - width
updated action bar title handling in DrawerActivity . java and added notification handling for new interactions in notificationList . java to improve user experience by
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line parsing functionality
updated constants and interpolators in QuickstepAtomicAnimationFactory , PortraitStatesTouchController , and PortraitStatesTouchController to improve
updated the method to use ` javaNameFromExternal ( externalName ) ` instead of ` Character : : toUpperCase ( ) ` to improve cl
added native methods for setting and frame in CWrapper . java and released an object in NSObject . java to enhance functionality and support for frame
added constant value checks in the Checker class and created a new ValueTest class to ensure only constant values are accepted in the environment
updated test files for MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen to improve test coverage and ensure accurate
removed unnecessary null check for constructors in PojoUtils . java to simplify code logic and improve readability
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
updated string formatting in UploadBuild . java for better readability to improve clarity of error and coverage reporting
updated bounds calculations in DeviceProfile . java to include search bar offset to improve layout accuracy by accounting for search bar positioning
do n ' t disconnect from pulseaudio when idletimeout be zero .
refactor task launching logic to run on the UI thread for better responsiveness to ensure UI updates occur on the main thread for better
updated the ` getSourceGroup ` method to return a ` Pair < String , ImmutableList < AppleSource > > ` instead of an ` Optional
increased the timeout values for trigger firing in TestSimTriggerIntegration . java from 22 , 6 , and 7 seconds to 30 seconds to
updated variable names from ` outputPositionCount ` to ` positionCount ` in ` FloatSelectiveStreamReader . java ` to improve clarity and
check distance between distfromstartsq and distfromstartsq to avoid false positive
added a check to skip processing for Form and Dialog components in ResourceEditorView . java to improve performance by avoiding unnecessary processing for specific UI
replaced ` UiThreadHelper ` with ` LauncherModel ` for background thread handling in ` DragView ` and ` FloatingIconView
added a null check for the commitPoint variable and initialized it to the latest commit if it is null to ensure that the commitPoint is always
added unit tests for ` getImeiForSlot ` and ` setImei ` methods in ` ShadowTelephonyManagerTest
added debug logging functionality to the SimpleHostRoutingFilter class to enhance debugging capabilities for HTTP requests
added a ` destory ` method to various classes and implemented resource cleanup in the ` BitmapInvertedIndex ` to ensure proper resource management and
[ rip - 10 ] add test case for statictopicit and normalmessagesendandRecvit
replaced Charset . forName ( " UTF - 8 " ) with StandardCharsets . UTF _ 8 in OutputStreamWriter to improve code readability and maintainability
hbase - 26905 bulkload should not crash if bulk load fails
added a nullable ` commission ` field to the ` DefaultWithdrawFundsParams ` class and modified the constructor in ` RippleWith
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
consolidated multiple catch blocks into single catch blocks for SolrServerException , IOException , and KeeperException to improve code readability and reduce red
added error handling for method invocation in Java2TypeScriptTranslator and updated test assertions in OverloadTests to improve robustness of method invocation and
replaced direct call to ` sweepDisk ( ) ` with a ` StacklessLogging ` to enhance logging capabilities for better debugging
added serialization support to ` MutableColumnDataType ` and refactored ` Entities ` class to use static fields instead of instance variables to enhance data
rename test classes SubExactLConstantTest and SubExactLNonConstantTest to improve clarity and consistency in naming conventions
added null and empty string check for claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by handling potential null values and
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory and introduced a singleton instance to improve flexibility and maintainability
updated the ` processTypeHintForNestedDocuments ` method and added unit tests for mapping null values in ` UpdateMapper ` and ` UpdateMapper
replaced ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and updated method
fix npe in moddirtransformerdiscoverer due to miss list initialization
updated error message formatting in AbstractQuerydslProcessor . java to improve readability of error messages for better debugging
improve debug information for inlining intrinsics
rename methods and variables from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and
( chore ) camel - mail : use objecthelper . getidentityhashcode ( ) to avoid reflection
fix for http : / / issues . apache . org / activemq / browse / amq - 2892 - allow to set
updated getIdentifierName ( ) to return setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure proper handling of property names in identifiers
create the wave generator activity and use it instead of a toast .
added logging for missing overrides and improved null checks in KeyedProperties and SheetOverlaysManager classes to enhance error handling and provide clearer
test : add integration test for log and exec in podit
added a new test method ` testNoWriter ` in ` TestReplicationHandler . java ` to verify behavior when no index is detected to ensure
do n ' t call super . dispatchmethodkernelokra ( range , args ) if the range do n ' t match the argument
updated record handling in DnsClient , DefaultDnsClient , and DefaultMxRecord classes to improve type safety and implement Comparable interface for better sorting
refactor thread creation in XToolkit to use a privileged action for better encapsulation to improve code readability and maintainability by redu
added validation and selection logic in SelectBox and set the dropdown ' s selected value in UITest to ensure the dropdown reflects the correct
[ hotfix ] use collector . printstacktrace instead of throw illegalstateexception
added a parentSplit parameter to the createState method and updated related logic in FlowBuilder and SplitState classes to enhance state management by allowing parent
changed ` connectionState ` from ` int ` to ` volatile int ` and modified return statement to use ` connectionState ` directly to improve thread
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and modified the integration test assertions in EnableIntegrationTests . java to
replaced ByteBuffer - based memory allocation with MemoryUtil . wrap for ASCII , UTF8 , and UTF16 encoding to improve memory management efficiency and
added exception handling for ` IOException ` and ` DocletAbortException ` in ` HtmlDoclet ` and ` AbstractDoclet ` classes to
[ java ] unusedmodifier : fix false positive with enum
refactor lambda expressions to method references for cleaner syntax to improve code readability and maintainability
updated parameterized annotation to include SSL name in AbstractHttpClientServerTest to improve clarity of test output by specifying SSL context
added exception handling for IllegalFormatException in TransformationHelper . java to improve robustness and provide clearer error messages during transformation failures
updated the retrieval of active connection permissions from userPermissions to activeConnectionPermissions to ensure accurate access control for active connection management
replaced direct equality checks with Apache Commons EqualsBuilder for better readability to improve code maintainability and leverage built - in equality methods
updated the process method to handle null outputRoot safely to improve robustness by preventing potential NullPointerExceptions
added annotation filtering functionality to PDPage , PDFRenderer , and PageDrawer classes to enable filtering of PDAnnotation objects based on specified criteria
refactor StackTraceCleaner class for improved error handling to enhance code clarity and maintainability
added handling for CSS and JavaScript content types in PluginServlet to ensure proper content type assignment for different file types
skip test that fail on oracle and sql server
add upgrade method to improve hard fork
added getStats ( ) methods to multiple classes and changed data types from AtomicInteger to AtomicLong in DocBuilder and related classes to enhance functionality and provide
added support for long polling functionality in KieClient and KieConfig classes to enhance the reliability and responsiveness of the Kie
updated gesture handling in multiple classes to use scroll functionality instead of gestures to improve user experience by enabling smoother scrolling experience
updated unlocks initialization in UI . java and added a button in PausedDialog . java to enhance the user interface by providing functionality for unlock
added a call to clear the drop list in PlayerEventListener to reset the drop state before processing new events
added a new constant DEFAULT _ PARAM in StreamResult . java to provide a default parameter for input name configuration
updated exception type in testNormalizeOrder method from MalformedURLException to IOException to improve error handling by using a more specific exception type
updated printBoth method to include chunk type information and adjusted skipIndex calculation to improve output clarity by including the chunk type and adjusting the
added a set to exclude Swift headers in UmbrellaHeader and updated ProjectGeneratorTest to check for these headers to exclude specific headers to
rename ` onHttpError ` method to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java ` to improve
added encode ( ) method call in RequestPlugin . java to ensure proper encoding of request data
mondrian : fix native float expression for db2
added password validation in LdapAuthenticationProviderImpl and created TestLdapAuthenticationProviderImpl for testing to ensure LDAP users have a valid password before proceeding
pdfbox - 4892 : remove unnecessary call to long . tostring , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper resource management and prevent potential memory leaks
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings and improve code clarity
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and modified the condition to check if ` classInfo ` is null to
added error handling and improved error message formatting in ErrorResponseException . java to enhance error reporting and clarity in error reporting
added a constructor to the EventSourcingRepository class that initializes attributes to ensure that the eventStore is not null to avoid potential NullPointerExceptions
refactor variable names for clarity and consistency in binary node handling to improve code readability and maintainability
modify search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper formatting of the search text to improve user experience
[ nuvo ] use ` ` # alloff ' ' instead of ` ` # all _ off ' ' in standalone mode
tmi - tiff : use chunky planar instead of extension planar
added a call to close the input stream in ItemListTag . java to ensure proper resource management and prevent memory leaks
move average calculation into a separate utility class to reduce code duplication .
added two new Java files , SigInt . java and SigIntBarrier . java , implementing signal handling in the agrona framework to
refactor graph handling in ExporterGEXF to support hierarchical graph scenarios to improve compatibility with different graph types during export
refactor TCTLSeparatedProtocol to replace byte buffer handling with Text for improved string encoding to enhance performance and maintainability by
[ # 7373 ] add validation for rubric index and sub - question index
updated CatalogComparator to check for ORIGINAL _ CASE instead of DB2Database to improve compatibility with different schema and catalog cases
refactored test methods in BrowserMobProxyTest for clarity and added resetWebdriverProxySettings method to improve test structure and ensure
updated criticalErrors string formatting to use Integer . toString ( ) for clarity to improve readability and maintain consistency in string representation
removed redundant reset ( ) call from mTextWatcher in InPlaceEditView . java to streamline code by eliminating redundancy
truffle : fix javadoc warning in internalbytearray and trufflestring
[ hotfix ] [ graph ] fix the wrong type information in the graph interface
refactor Java6 assertion classes for consistency and clarity to improve maintainability and readability of the codebase
deleted the file ` Class Á . java ` and added a new file ` DiacriticTest . java ` with a test
replaced CountDownLatch with CyclicBarrier and added a new assertExecutionsDone method to improve synchronization handling and enhance test reliability
added error handling for ` ComponentLookupException ` in ` DefaultMaven . java ` and improved null checks in ` DefaultGraphBuilder .
[ scb - 2171 ] fix testserviceregistryconfig test case ( # 2175 )
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure that only one instance of ` Servlet ` is
added logging and expiration logic for server and system time in BinanceExchange and BinanceBaseService classes to improve tracking and debugging of server time
added support for binding " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) " in Tomcat 8.5 to
added a null check for the component form before deregistering animations to ensure that the application does not crash when the component form is not available
added options parameter to ` decodeResource ` and ` drawBitmap ` methods in ` ShadowBitmapFactory ` and ` ShadowCanvas ` classes to enhance
[ java ] make rate subscriber and publisher more thread - safe .
added functionality to handle click and long - click events for tweets in TimelineArrayAdapter to improve user interaction by allowing specific actions to be
added " text " to the unmodifiable data types in PostgresDatabase and refactored conditional checks in NumberType and ColumnSnapshotGenerator to enhance
remove @ ignore from entryprocessorbouncingnodest . testentryprocessorwhile2nodesbebouncing
updated method names and states in AmbariManagementControllerImpl . java and AmbariManagementControllerTest . java to improve clarity and
added a check for the existence of a bridge before adding it to the inbox in CreateBridgeServlet . java to ensure proper handling of bridge re
refactor ` PreconditionEnforcer ` and ` CrawlServer ` classes to improve robots expiration checks and synchronization to enhance code clarity and ensure
updated display name checks in TestInterfaces , Equals , and IndexTest classes to handle potential null values to improve robustness and prevent potential NullPointerExceptions
updated SpriteBatch and ImageButton classes to include a default shader option for shader creation to enhance flexibility in shader management by allowing customizable
added property settings for synchronous commit in TestUtil . java to enable synchronous commit functionality for improved performance
added element coercion checks and improved sorted set creation in SortedSetTypeCoercer to enhance robustness by preventing duplicate elements from
update notification strings and button handling in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality of confirmation actions based on file
added a condition to check if the character is less than 256 before accessing the safe array to prevent potential ArrayIndexOutOfBoundsException when accessing the safe array
updated the port handling in UserContext . java to use a dynamic port instead of a hardcoded value to improve flexibility and maintainability of
ambari - 20536 . fix hostresourceprovidertest failure due to mock . clusters . getclusters ( ) .
[ hotfix ] remove unused parameter in yarnentrypointutils . loadconfiguration ( )
refactor : move validation and repaint logic to init method in sipcommbeanframe . java
deleted the ShadowHtml . java file and updated HtmlTest . java to remove unused ShadowHtml class to streamline the codebase by eliminating
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated logger names from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and "
changed the visibility of the ` addListeners ` method from private to public in ` MockSettingsImpl . java ` and added validation tests in `
[ hotfix ] [ runtime ] fix checkstyle violation in statehandlestore
updated import statements to use org . eclipse . jetty . http . security . Constraint instead of org . eclipse . jetty .
[ # 7272 ] instructor : add parameter to control section ( # 7273 )
use try - with - resources instead of try - with - resources
camel - 13545 : camel - test - make it easy to run camel - 135 - camel - itest - infra -
added ` BuildTarget ` and ` androidLibraryBuildTarget ` to several classes and refactored jar parameter retrieval methods to improve code clarity
corrected a typo in the error message from " validating - cerficates " to " learn more about peer certificate verification " to
api : remove the overridden getpagesizeval ( ) method in listcapacity
added a case for the CLOSED state in IteratingCallback . java to prevent further processing when the callback is closed
added a boolean field ` isAuthorized ` and updated its initialization in ` AccessControlContext ` , and introduced a method to ` ProtectionDomain `
added a conditional check to ensure the app is not an instance of AbstractOSGiApp before sending events to improve robustness by preventing
added a condition to set the MIME type for tiff files in DLNAMediaInfo . java to ensure proper handling of Tiff
fix thread safety issue in optimizedcalltarget
added a new file ` CubocDesktop . java ` and modified the ` Map . java ` and ` MapRenderer . java ` to
updated PolicyMonitor initialization to use the target directory instead of the test resource directory to ensure the tests run in the correct directory for testing purposes
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure that all files are removed from the trashbin list
replaced the import of ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` with ` com . sun .
sulong : add checkglobalnode to the llvm backend .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted related data handling to enhance event processing by associating intent
update burningmanpresentationservice to set max burn amount to 100
refactor UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database and improve handling of unique constraints to enhance compatibility with H2 database
modified the item construction logic in DMLTransformer . java to handle empty insert statements to improve clarity and correctness of SQL query generation
updated PGT URL parameter from " http : / / www . github . com " to " https : / / www . github . com
updated the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a ` hideDefaultName ` method to improve function
updated JarLauncher . java for improved functionality to enhance performance and maintainability of the code
updated generic type usage in multiple classes to improve type safety and eliminate unchecked warnings
do n ' t send hole punch packet if we ca n ' t send it .
added a test method for updating a PGobject in ResultSetTest . java to ensure correct handling of date updates in PostgreSQL
updated PasswordResetEndpoints to handle unprocessable email requests and added a new test for non - UAA origin in PasswordResetEndpointsTest to
updated the way properties are retrieved from the XML document to improve code clarity and maintainability by using a more direct method for obtaining the
updated caching logic in Cache . java to improve performance and maintainability of the code
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone . java and SPTResource . java
add a check for invalid bind on the light relay . close # 162
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to use it to enhance the functionality of
refactor Model class to improve code readability to enhance maintainability and facilitate future feature additions
updated the recordedTime calculation to include a new value of 619315200000L to ensure accurate time tracking for the application
added a condition to resize the status if the terminal type starts with AbstractWindowsTerminal to ensure proper resizing behavior for Windows terminal display
updated host version setting logic to only apply if the state is not NOT _ REQUIRED to ensure that host versions are only marked as skipped when not
updated constants in IntegrationTestCase , JsInteropRestrictionsCheckerTest , and NativeSourcesErrorTest to use TEST _ ROOT and JRE _
( chore ) camel - maven - plugin : use linkedhashset instead of hashset to preserve order
changed the declaration of the ` op ` variable to be ` final ` in ` OperationServiceImpl . java ` to improve code clarity and
refactor property configurer resolution in KnativeEnvironment . java to improve code readability and maintainability
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming
added connection handling in CloudSolrClient and a test for upload configurations in TestCloudSolrClientConnections to ensure proper connection management and validate configuration uploads
added synchronization to the add and remove methods in Breakpoint and DebuggerSession classes to ensure thread safety when accessing shared resources
added methods to clear files and cache in ShadowContext and refactored file handling in RobolectricTestRunner to improve resource management and
added LinkedHashSet and TreeMap to the list of styles in SecureXStream . java and updated tests in XStreamPersisterTest . java to enhance the
[ drools - 7 ] add kymodulemodel to the kiemodule model to allow kie - maven - plugin to
updated block event handling logic in BlockEventListener to check for Farmland instances to improve accuracy of soil drying behavior based on current and
added a default implementation of the ` getLocalIp ( ) ` method returning ` null ` to provide a default implementation that returns ` null ` for
updated JdbcStepExecutionDao to deserialize integer values and modified test cases in AbstractStepExecutionDaoTests and StatefulRetryStepFactoryBeanTests to
updated comments in AbstractDictionary , BiSegGraph , and HHMMSegmenter classes for clarity and consistency to improve code readability and maintain
fix build for tensorflow on window ( issue bytedeco / cpython / mkldnn )
refactor PluginTab to improve table management and refresh functionality to enhance user experience by allowing dynamic updates to the table model
changed log level from info to warn for error messages in DefaultHistory . java to improve logging granularity for better error handling
cloudstack - 5391 : fix npe in vmwarestorageprocessor when vm be in stopped state
changed sshd . stop ( ) to sshd . stop ( true ) in SftpServerTestSupport . java to enable graceful shutdown of
renamed ExperimentalMockitoJUnitRunner class for clarity to improve code readability and maintainability
updated GpsSettingsActivity to disable the options on serial ID and refactored code to use a new utility method for serial ID retrieval to
refactor SwapGBuffers class for improved performance to enhance efficiency of buffer operations
remove the skeleton control from the spatial if it ' s null to ensure that the skeleton control is only removed when it ' s not null
added functionality to set smart replies in the ShadowRanking class and updated ShadowRankingTest to utilize the RankingReflector to
[ java ] do n ' t add segment file to archive if they do n ' t exist .
updated the retrieval of the carrot2ResourcesDir variable in CarrotClusteringEngine . java to streamline the code and improve readability
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new class ` bug8004298 .
updated method signatures in ScriptUtils and changed ASM API version in CompilationConfig to ensure compatibility with the latest ASM features and improvements
replaced null return statements with exceptions in RecommenderMapper , Retriever , and CacheTest classes to improve error handling and provide clearer feedback
added clientInfo field and updated method signatures in SurrogateAuthenticationEventListenerTests to include client information to enhance test coverage by associating client information with
added a boolean variable isUserView to CardPresenter . java to manage user view state effectively
refactor GraphvizJavaExecutorUtility to GraphvizUtility across multiple files for consistency and clarity to improve code readability and maintainability by
refactor histogram creation to use local variables instead of method calls to improve code readability and maintainability
added a new module - info . java file for the SQLite connector to define module exports and dependencies for SQLite integration
added a delay of 500 milliseconds in StreamResetTest . java to improve test stability by allowing time for operations to complete
removed conditional check for " new " in permissionsManager initialization to streamline code by eliminating unnecessary checks
refactor DateParser and TestDateParser classes to improve date parsing functionality and enhance test coverage
added a method to get the depth of the SpringLoadedState class to provide a default value of 0.5 f for depth calculations
refactor data handling in BinaryDecoder to use a predefined minimum size constant to improve code readability and maintainability by using a defined minimum size
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
removed unnecessary swipe layout bindings and refactored notification handling in NotificationActivity and NotificationRenderer to streamline notification management and improve UI responsiveness
updated exception handling in DefaultExceptionConverter and modified test cases in ExceptionsTest and EndpointTest to improve clarity of error messages and enhance test coverage
fix checkstyle issue in entity / glowcontainer . java ( # 721 )
replaced MethodHandle with reflective method for setting a target field to improve compatibility with Java ' s reflection framework
changed the type casting of integer values from ` int ` to ` Integer ` in ` MathTest . java ` to ensure proper type handling for
updated return statements in BaseEmailContentFormatter to remove the use of StringUtils . join to simplify string concatenation for better readability and performance
added functionality to manage the visibility and management of the layoutProvidedPanel in LayoutPanel . java to improve user interface responsiveness by ensuring proper
added a null check for the location variable in the ServerCallable class to enhance robustness by preventing potential null pointer exceptions
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for key parameters in BasicChecker . java to ensure that a valid key is provided to avoid runtime errors
refactor MediaTypeRequestMatcher to use a helper method for checking ignored media types to improve code readability and maintainability by encapsulating the logic
updated task number logging format in LlapBaseInputFormat . java to improve clarity and consistency in task attempt handling
added a property to the SpringBootTest annotation in EventServiceTests . java to enable bean definition overriding in the test configuration
added a null check before closing the indexReader to prevent potential NullPointerException when indexReader is null
changed package structure and visibility of BTCMarketsStreamingService and BTCMarketsStreamingExchange classes from ` service ` to ` btcmark
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to ensure that the code does not
added a new file CompatibilityTest . java with methods for testing internal DTDs and verifying properties to facilitate testing of
added new file ` VariantComponentsModule . java ` , ` PushUtils . java ` , and ` SecurityUtils . java ` , along with
updated the logic for determining the number of replicas in ` TableRebalancer ` and modified related tests in ` TableRebalancerTest ` to improve
bump version to 2.7 . 0 and update release note
log4j2 - 1349 fix line separator in test
add a workaround for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 559
set default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are
renamed methods and variables from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and consistency
removed the command " am wait - for - broadcast - idle " from LauncherInstrumentation . java to streamline the code by elimin
added unit tests for font tag and link tag attributes in ResourcesTest . java and modified span calculation in ResStringPool . java to ensure proper
fix miss patch in guistatscomponent . java ( # 3640 )
added phone permission request handling in Launcher . java and updated Utilities . java for SDK version 23 and above to ensure proper app permission management and
updated return value from 32 to 36 in SimulationPanel and modified method signatures in multiple classes to include flightData and improve error handling to enhance
refactor GeoEncodingUtils to remove the fromBytes method and update the BUF _ SIZE _ LONG constant to improve code clarity and maintain
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to provide a way to determine if the Docker
added a public static final String VPX with a value of " vpx " in CodecTypes . java to provide a standardized representation
added a coordinator address option to DistBuildFactory and DistBuildRunCommand , and modified the getCoordinatorAddress method in AbstractDistBuildExecutor
added path matching functionality in FsUtils and refactored timer usage in WrapTimer to enhance path matching capabilities and improve thread safety in timer management
added a conditional check before adding labels and updating totValue in TestTaxonomyFacetSumValueSource . java to ensure that label values are only added
make sure ` ` true ' ' and ` ` false ' ' do n ' t return undefined
removed the @ Test annotation from the TestPerfBenchMarkDriver class to clean up the test code and improve readability
added materialization time handling in ObjectStore and a corresponding test in TestObjectStore to ensure that the creation metadata reflects the correct materialization
[ vosk ] upgrade sdk and handle unsatisfiedlinkerror exception ( # 13391
remove the ' is _ one _ way ' property and modify the ' browse _ message ' and ' clear _ message ' method in jmss
update break weight logic in GlyphView . java to improve accuracy of break weight determination
hive - 16463 : rcfile : reduce number of read read from syncfile ( siddharth seth )
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to
refactor data handling in ToePool to use a LinkedList for unwound step and processor values to improve readability and maintainability of
removed the ` flavorsForFormats ` parameter from the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable .
hbase - 20536 testthriftserver should use random free port instead of hardcoded one
added a check for end of file in RegExpScanner . java to ensure proper handling of end - of - file scenarios
refactor metrics and timer handling in Debug . java to use sets for enabledMetrics and enabledTimers to improve performance and maintainability by avoid
fix npe in chatroomjabber . sendmessage ( ) when the nickname be null .
add error message for miss file in sketch
refactor refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove unused field in yarnflinkapplicationmasterrunner
added a synchronized method nativeGetHardwareBuffer to ShadowNativeImageReaderSurfaceImage . java to provide a placeholder implementation for hardware buffer retrieval
updated the SSL URI for the BTCChinaMarketDataService instance to ensure that the service connects to the correct BTCChina
pmd : make the output file write relative to the project ' s base directory
added two new files , OauthController . java and Oauth2PluginTest . java , and modified the ` Oauth2PluginTest . java `
refactor SemgrexPattern class for improved functionality to enhance performance and maintainability of the code
refactor ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` and move them to ` EntryStream ` and ` Stream
updated error logging message in RestCodec and added exception handling in ExceptionToProducerResponseConverters to improve clarity of error messages and enhance error reporting
updated the condition for determining if a class loader should be used for Android projects with mixed Surefire to ensure compatibility with Maven Surefire
do n ' t try to transcode audio if it ' s already transcoding
updated the type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test for current timestamp in Create
add test for normalizedmultivestest for gml 3.3 and gml 32.0
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` , ` UaaHttpRequestUtilsTest ` ,
added conditional checks and improved exception messages in ColumnarDataSource , RowProcessor , and BinaryResponseProcessor classes to enhance code robustness and cl
refactor ` splitIntoThirtyParts ` to ` splitIntoThirtySecondsParts ` and introduce ` getPositionsArraySize ` for
added ` XLCDCommunicator ` and ` XLCDController ` classes and modified ` FirmwareUtils ` to use a switch
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . internal .
updated retry logic in event query checks to include checks for non - empty messages to enhance robustness by ensuring retry times are greater than zero
replaced asynchronous thread state assertions with thread join calls in WorkerProcessPoolTest . java to improve test reliability by allowing more time for thread
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
increased resource freezes and unfreezes from 20000 to 10000 in EnergyCost . java to increase resource management
updated the ` command ` method to throw a ` ConfigurationException ` to ensure proper handling of configuration errors during command execution
deleted the ` SpringTransactionHooks ` class and replaced its usage with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest ` to
refactor AbstractClassAssert for improved readability to enhance maintainability and ease of understanding for future developers
added a new file ` GetUninitializedStringValueTarg . java ` to demonstrate the use of ` GetUninitializedStringValue `
added support for provided dependencies query in AndroidLibraryDescription and updated related tests in GraphEnhancementQueryEnvironment to improve dependency management and enhance query
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard open
replaced the retrieval of system anomaly message with a mechanism to save the bugreport state to ensure that system anomalies are only
added a constant for " cinepack " format in FormatConfiguration . java and updated LibMediaInfoParser . java to handle cinepack
added camera bobbing functionality and adjusted hand movement animations in the Player class to enhance player experience by allowing customizable camera behavior during gameplay
replace ` data . describe ( ) ` with ` b . digest . toString ( ) ` in GrpcCasBlobUploader . java to
deleted the HSQLDBServerFilesFilter class and replaced its usage with a custom FilenameFilter in TestUtility . java to streamline file listing
added null checks for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that restoreFromSeed and restoreFromKey are
updated the latest version from APIUtils . getApiDataVideoVersion ( ) to APIUtils . getApiDataSeriesVersion ( ) and added a trace
added a method to handle method invocation based on type existence in ` HasTypes . java ` to ensure that the correct method invocation is returned based
replaced hardcoded array size with a constant for number of values in AmbientCubemap . java to improve code readability and
[ netbeans - 5394 ] show mode reset when current mode be not configure properly
added checks for zero values in multiple UDF mask classes to ensure proper handling of zero values and return appropriate data types
boundedoverheadblockstoretest and derbyblockstoretest : use junit ' s temporaryfolder instead of hard - coded db _
added itemstack . isitemstackdamageable ( ) and gethasubtypes ( ) method to check if the item stack be
fix mc - 167447 by set line _ width to 1.0
danielwagnerhall : set default browser startup page to 0
added a condition to check for connection upgrade status in Http1xClientConnection . java to ensure proper handling of connection upgrades during HTTP / 2
changed the accept method from " compile " to " process - classes " in JoobyMojo . java to accurately reflect the
replaced the shutdown method with a closeIdleConnections method in HTTPHC4Impl . java to improve connection management by ensuring idle connections are closed
added a condition to check if the aggregate function suffix is not present before processing aggregate functions to ensure metrics are only added if the function suffix is
added a method to set fullscreen parameters in TaskOverlayFactory and updated the corner radius retrieval in TaskThumbnailView to enhance functionality by allowing full
added a new Java class to count integers and print their frequencies to provide functionality for counting integers based on their frequencies
[ vmware ] set socketchannel to null to avoid npe in clusteredagentmanagerimpl
rename MutisignOperationerGodicTest . java file to improve clarity and consistency in naming conventions
added exception handling for NoSuchElementException in StaxEventItemReader and a new test for restarting at the end of the file to improve robustness
simplified import statements and added null check for resourceName in TestAttributeSet to enhance code readability and prevent potential NullPointerExceptions
updated import statements from org . nimbusds . jose . json to net . minidev . json in ClaimConversionServiceTests
updated OS detection from " Linux " to " AIX " and added a mapping for " Linux - s390x - 64 " to
server : use router . getoutercontrolip ( ) instead of router . getprivateip ( ) for vr access
added a new method ` invokeWithoutBlockingWithResultSync ` to facilitate the invocation of a runnable without blocking
remove xmpp - ignore test that do n ' t work
refactor calculations for right , bottom , and primary snapshot dimensions in PortraitPagedViewHandler . java to use Math . round for
[ test ] fix checkstyle violation in testclusterdumper
hbase - 26463 addendum fix memory leak in hregioninfo . tostring ( )
camel - 16462 : camel - core - optimize to reduce object allocation during type converter registration .
added handling for ConditionalTask instances in SparkCrossProductCheck . java to improve task processing logic for conditional tasks
added ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions to LauncherAppState
updated conditional logic in LoginInfoEndpoint and added tests in LoginInfoEndpointTests to ensure passcode prompt is present when at least one active OAuth
hbase - 2596 add todescriptivestring ( ) method to print region state , timestamp , and server information
renamed the ` message ` field to ` msg ` and introduced a new ` result ` field in ` HuobiAccountInfo ` to
added support for " PER " in MariaDBDatabase and created a test for it in AddColumnGeneratorTest to ensure proper SQL generation for
[ beam - 10619 ] improve documentation for portable runner config option .
added documentation for Android 7.1 - related changes in VersionChangeLogs . java to inform users about the usage of Launcher shortcuts and fixes
updated NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java and added a static import in TestUtil .
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] move aeron client invoker invocation into archive and consensus module .
updated type validation logic in ` Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` to improve type safety
refactor menu item visibility and visibility management into separate methods in FileMenuFilter to improve code readability and maintainability by encapsulating menu item
updated transaction history types in BTCETransHistoryResult . java and modified corresponding test assertions in BTCETransHistoryJSONTest . java
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and ensure uniqueness of series and exceptions
added a @ Deprecated annotation to the PluginLoader class to indicate that the class is outdated and should not be used in new code
updated condition in LastQueryExecutor . java and added a new test case in IoTDBLastIT . java to improve query execution logic and ensure
updated the newline character in the reqStr append method call to ensure proper formatting of the request string
added a static block to set a system property for SLF4J ' s simple logger to " ERROR " to configure logging behavior for HTTP
added a safe area to the titleBar in Sheet . java to ensure proper area visibility for the title bar
replaced a for loop with a for loop to iterate through TimeSeriesChunkMetaDataList to improve code readability and maintainability by avoiding for
added SQL alterations to the test table and column renaming functionality to ensure that the ALTER TABLE command can be correctly parsed and deparsed
changed the visibility of the copyState method from package - private to public to allow access to the method from other classes
fixed - taskexecutorservice . executeasync ( ) method should return a completablefuture instead of a non - completable object . # 5
rename ` ` . part ' ' to ` ` . part ' ' for consistency
[ hotfix ] [ table - planner - blink ] fix typo in javadoc
reordered conditional checks for valueArg and nameArg in CompareFunctionsProcessor . java to improve code readability and maintainability
reduce scope for compaction task when check available disk space to reduce scope
modified the ` toString ` methods in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to include
added checks to prevent processing if the handler is invalidated and unregister the task stack listener if the last gesture state is null to improve stability by
added methods to get and set lock timestamp in AppPreferences and updated PreferenceManager to use instance methods instead of static methods to improve flexibility and
refactor artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by encapsulating artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 5396 : fix npe in splittext when no header be specify .
added support for loading and setting the key store type in HttpsConnectorFactory to ensure compatibility with Windows - specific key store handling
increased DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java
added a condition to check for FILE _ NOT _ FOUND result code in FileSyncAdapter . java to ensure proper handling of non - existent
added animation functionality to the Slider class to enhance user experience by allowing customizable animation settings
rename ` eol ` to ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to improve clarity and consistency in naming conventions
updated maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to improve texture packing options for better performance
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest ` and modified the condition in `
camel - 16400 : fix npe in camel - hazelcast when poll with timeout
added a new ` TextFeedbackTest ` class and refactored ` TestRunner ` methods to improve test coverage for text feedback functionality to enhance
replace Math . round with Float . compare in DefaultSolrHighlighter . java to improve precision in score comparison logic
updated display density constants in ` AddAndScaleMultiImage . java ` and ` ResourceEditorApp . java ` to use try - with -
added a new method ` arrayClassElementOffset ` to ` HotSpotReplacementsUtil ` and modified ` ArrayCopySnippets ` to read
added checks to skip processing if the log message starts from zero to improve performance monitoring by skipping unnecessary log entries
added support for remote SCM functionality in the configuration and runtime environment to allow users to enable or disable remote SCM support for remote systems
added additional states " END " , " STATE _ RINSE _ HOLD " , and " RINSE _ HOLD " to
replaced instances of StatsLogCompat with SysUiStatsLog in the StatsLogCompatManager to utilize the new logging system for launcher events
renamed the logger variable from ' log ' to ' LOG ' in LocalZookeeper . java to improve clarity and consistency in naming con
added unit tests for ProjectGenerationEvent ' s Finished and Started events to ensure proper serialization and deserialization of ProjectGenerationEvent objects
ggb - 1193 add preview point to selection menu ( for example )
refactor JavaCompiler class to improve code structure to enhance maintainability and readability of the code
added a check to reduce the amount of data written per server in IntegrationTestTimeBoundedRequestsWithRegionReplicas to ensure that the test does
updated multiple Java files to improve code structure and organization to enhance maintainability and readability of the codebase
added options for garbage collection sections and nocopyreloc in NdkCxxPlatform . java to optimize memory allocation for improved performance
updated the ` SpringCloudCircuitBreakerFilterFactory ` to expand the fallback URI path using ` ServerWebExchangeUtils ` to ensure that the fallback
danielwagnerhall : fix checkstyle issue in util / browser / browsertest . java
fix for bug # 56464 - allow read - only share string table to be read from xssf
added a method to retrieve the account network in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to enable
added a check for text width before returning it in SwingUtilities2 . java and modified the Look and Feel setting in Test66351
simplified the instantiation of ` FlatteningIterator ` and introduced a new test class ` FlatteningIteratorTest ` to enhance code readability
remove HTML bold tags from title and body when processing notifications to ensure consistent formatting by preventing unwanted HTML elements in notification
doc : generate sample code in the java microgenerator ( # 241 )
update instructorfeedbackeditQuestionsuitest to reproduce test failure
modify return values and condition checks in HSSFSheet . java and add assertions in BaseTestSheet . java to ensure correct handling of row
added permission checks for launcher activities and PendingAddItemInfo in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious int
[ java ] send heartbeat to the consensus module when the consensus module be down .
updated equals and hashCode methods in AbstractParquetMapInspector to handle null keyInspector and valueInspector correctly to ensure proper comparison and hashing behavior for
added handling for remotely closed HTTP / 2 connections to ensure proper flushing and releasing of the Quic session when the connection is closed
added AutoCloseable interface to SplitReader and removed the close method from the interface to ensure proper resource management and prevent potential memory leaks
added a deepCopy ( ) method to the GsonBuilder class to facilitate deep copying of GsonBuilder instances
return not _ found instead of null in lorsourcebuilder . buildsulong ( ) .
refactor file handling in RestClientRequestImpl to use CompletableFuture directly instead of an array to simplify asynchronous file operations and improve code readability
removed unnecessary whitespace in the dispatchStatusString method call to improve code readability and maintain consistency
added a new ` SearchingClassLoader ` class and modified ` MockFactory ` to use it for class loader management to improve class loading efficiency by
[ scene2d ] add test to show that refresh flag be work in between node .
added a condition to check for LEFT _ SEMI _ JOIN in the condition check to ensure proper handling of LEFT _ SEMI _ JOIN in
refactor HttpReceiver and HttpSender to simplify response completion checks to enhance code readability and maintainability by reducing unnecessary variable declarations
updated array length offset references to use arrayOopDescLengthOffset instead of arrayLengthOffset to improve clarity and consistency in naming conventions
fix for http : / / issues . apache . org / activemq / browse / amq - 2882 - add default policy
updated multiple Java files related to BadKdc , BadKdc2 , BadKdc3 , and other components to improve code organization and
added a check to ensure the appCtx is not running before stopping it to prevent potential NullPointerExceptions when the application is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return a GlyphLayout object instead of void to
refactor metrics handling in SpringmvcClient and improve error handling in CodeFirstSpringmvc to enhance reliability and maintainability of
removed the static final long SAFE _ ACCOUNT _ AGE _ DATE and updated the mapping logic in AccountAgeWitnessService . java to
reformatted code in StructureHeader . java and StructureReader . java for improved readability to enhance maintainability and clarity of the code
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and integrated it in DefaultLoginWebflowConfigurerTests and DefaultLogoutWeb
add dexreturninliner and deadassignmenteliminator to dexbody . transform ( ) and dexreturninliner
make enrichedruledto use getproperties ( ) instead of getconfiguration ( )
removed the ` NOFOLLOW _ LINKS ` option from the ` isDirectory ` method in ` PathResource . java ` and updated test cases in
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] remove the sql dialect from configuration
replaced ` rDotJavaPackages ` with ` hasRDotJavaPackages ` and introduced ` hasRDotJavaPackagesSupplier ` to enhance
[ core ] add test for astpackagedeclaration . getpackagename ( )
added a configuration property for minimum cross compaction unseq file level in IoTDBDescriptor to allow dynamic configuration of the minimum cross compaction unseq file
[ hotfix ] [ runtime ] move activeresourcemanager to activeresourcemanager . active package
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated ` ZipResource ` to use ` CLASSPATH _ SCHEME ` instead of ` CLASSPATH _ SCHEME _ PREFIX ` and improved
refactor ExpandableUploadListAdapter to improve handling of image uploads and enhance code readability to enhance functionality and maintainability of the upload process
refactor RobolectricTestRunner to merge parent class and method configuration configurations to enhance test configuration management by merging parent class and method configurations
added null checks for block and item registries before creating lists to ensure blocks and items are not null to avoid potential NullPointerExceptions
removed the abstract modifier from several methods in ` AbstractDataChangedListener ` and replaced it with concrete implementations in ` WebsocketDataChangedListener `
added support for converting enum values in JSONPojoConvertor and improved test assertions in JSONPojoConvertorTest to enhance functionality for
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper ` to inform users that the option will be removed
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and replaced manual byte reading with ` TransportFormat
added orientation correction functionality and modified mouse event handling in GyroControl . java to improve responsiveness based on device orientation changes
change biomedictionary . biome _ list _ size to use biomegenbase . getbiomegenarray ( ) . length
updated method calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and made interfaces ` Foo ` and ` Foo
reorder variable declaration in FileCompilerConfig . java to improve code readability and maintainability
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a structured way to collect bytes
added preload configuration to MMapDirectoryFactory to control the loading behavior of the map directory based on user input
added custom metrics for worlds , economy , plot expiry , and MySQL in BukkitPlatform . java to enhance monitoring capabilities
refactor QuickConnectREST class to improve code readability to enhance maintainability and facilitate future development
added aspect ratio and default card image initialization in CardPresenter . java to enhance visual representation of the card in the application
[ cocoon ] fix bug in authenticationcountselector and loginredirect
updated VectorHashKeyWrapper to handle empty arrays for long , double , decimal , and byte arrays more gracefully to improve robustness by avoiding unnecessary
added tests for ` testSystemNanoTimeJit ` and ` testSystemNanoTimeJit ` in ` TimeChangeTest . java `
added trimming of the input line in MultiPartFilter and print the request parameter in MultipartFilterTest to improve handling of input lines and enhance
fire livingexperiencedropevent instead of entitylivingbase . getexperiencedrop ( ) .
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized messages to improve user experience by providing clearer error messages and
remove unsupportedoperatortopvisitor , it be n ' t need anymore .
added support for Rdeps functionality in GraphEnhancementQueryEnvironment and implemented corresponding tests in GraphEnhancementQueryEnvironmentTest to enhance dependency
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added logic to scale entire rockets and adjusted selection option selection based on component type to improve user experience by allowing scaling of all rocket
replaced ` Arrays . toString ( ) ` with direct reference to ` bytes ` in assertions to simplify code and improve readability by reducing
added logic to retrieve and attach time boundary information for hybrid tables in BaseBrokerRequestHandler to improve error handling for missing time boundary information for hybrid tables
no need to check if the endpoint be pause before add it to the poller in the apr connector .
improve eightmuses ripper to handle both comix / picture and comix / xmp / eightmuses
replaced references to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to standardize
added a condition to check if the profile is a phone and is landscape to ensure proper layout handling for phone devices in non - landscape
replace usage of ` getValue ( query , PROPERTY ) ` with ` query . unwrap ( queryImpl . class ) ` in ` PartTreeJ
replaced direct call to ` Files . readAllLines ` with a new method ` readMatchingLines ` to enhance security by using privileged actions
removed dynamic check for streamMethod in JpaQueryExecution . java to simplify the code by eliminating unnecessary method invocation
added null check for entity in PhysicsProcess . java to avoid potential NullPointerExceptions during processing
added a test for entry processor that clears the map when value attributes are indexed to ensure that the entry processor correctly clears the map when value attributes
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color handling in Utils . java and modified htmlMessage in UtilsTest . java to ensure correct color manipulation and improve HTML message formatting
disable the menu item and normalize name when the input be empty
updated the scratch path format and added a recursive removal step in Aapt2Link . java to improve clarity and functionality of the link tree
replaced ` new Capture ( ) ` with ` Capture . newInstance ( ) ` for identifier instantiation in ` ExternalJavacTest ` and
ggb - 1353 make sure undo / redo work in desktop
do n ' t swallow emptystackexception when parse cql expression
added ` isCanceled ( ) ` method implementations across multiple call classes to standardize cancellation logic across different call types
refactored the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code consistency and maintainability by centralizing annotation presence
added a default implementation of the removeAllWidgets method in UILayout . java to indicate that the method is not yet implemented and provide a default
[ hotfix ] [ yarn ] fix flaky yarntestbase test
opensslcipher : update opensslcipher . getoutputsizeforfinal to return the max of the available output size
added handling for high - resolution content in PlaybackController to ensure proper transcoding behavior for high - resolution content on Fire TV Stick
[ beam - 10619 ] fix some minor bug in spark dataset source mock .
updated listener management in GpsLoggingService to use a set of listeners instead of a boolean preference to enhance flexibility in listener management based on
changed the parameter type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` and modified the handling of character widths to
added import for BaseItemDragListener and modified item handling logic in FolderIcon . java to enhance drag - and - drop functionality by integrating
added a new method ` createEmptyArtifact ` to multiple connector classes for creating empty artifacts and improved type casting in ` AbstractRepositoryConnector `
removed unnecessary comments from configuration lines in RabbitMQPublisherImpl . java to improve code readability and maintainability
simplified the condition for checking if the video link is " m3u8 " to improve code readability and maintainability
camel - sftp : fix camel - sftp to work on window
fix flaky baseweatherconsumertest on slow ci server
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive
added support for LARGE _ FERN specification in BlockDoublePlant and BlockType classes to enhance flexibility in double plants and
replaced ` tree . setFocusable ( false ) ` with ` tree . setRequestFocusEnabled ( false ) ` in ` TranscodingTab .
do n ' t swallow exception if vm fail to start
updated DB2TestSystem to acceptLicense and modified DockerDatabaseWrapper to check for DB2TestSystem instances to ensure compliance with licens
modified visibility of the ` units ` variable and added a setter method in ` DoubleModel . java ` to facilitate unit group changes to allow dynamic updates to the unit group and ensure correct conversions and notifications on state
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC and Z
added logic to set the number of samples based on the number of samples in TestPBRLighting . java to ensure that the fp is
updated assertions in StepWithSimpleTaskJobParserTests to remove " job " prefix to streamline test cases for clarity and consistency
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to enforce immutability and clarify that
ggbabs ( ) - > ggbabs ( ( ) ) , a suggest by valerybokov
added multiple calls to ` addServiceOutput ( ) ` and modified the logic for adding service output in ` DDLSemanticAnalyzer . java
[ drools - 1640 ] fix conversion of bigdecimal to objectcreationexpr ( # 3640 )
added " org . eclipse . jdt " to hide jdt from jetty in WebAppContext . java to improve compatibility with Jetty
changed the return value of the authentication cache check from super . useAuthCache ( ) and cacheSPNEGO to false to simplify the authentication
convert the namespace to a capitalized version of the first segment to ensure consistent namespace formatting for improved readability
camel - 16462 : camel - direct - producer should use directconsumernotavailableexception instead of camelexchangeexception for backwards compatibility .
added null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is null
removed an unnecessary space in the progress bar message to improve code readability and maintain consistency in formatting
refactor vibration handling to run on the UI helper thread to ensure UI updates occur on the main thread for better responsiveness
added a method to update the last remote stream ID in HTTP2Session to ensure accurate tracking of remote stream updates
text antialiasing should be disable by default .
[ java ] : remove unused variable and simplify code .
refactor : remove static import of enums in ctannotationimpl . java ( # 3641 )
updated ExoPlayer . java file to improve media handling functionality
updated the method for retrieving RGB pixels in WRobotPeer . java to improve performance by using a rectangle for pixel retrieval
added a new method ` newPrintStream ` for creating a ` PrintStream ` with optional encoding to improve flexibility in handling different output stream encodings
updated vibrate value from 1 to 25 in TouchableMovementMethod . java to enhance user experience by providing a more intuitive
fix checkstyle issue in ` ` findbugs . com ' ' file
reformatted constructors in WebSocketClient . java for consistency to improve code readability and maintainability
simonstewart : fix the build for the i18n test
add linkatbuildtime flag to jsr305 to detect linkatbuildtime error
added restoreAuthSystemState ( ) method call in XmlWorkflowServiceIT . java to ensure proper restoration of authentication system state during tests
add a lowercase comparator to make the feature collection case insensitive .
refactor JavadocTool to improve file parsing logic and enhance error handling to enhance robustness and provide clearer warnings for missing source files
danielwagnerhall : fix ` ` selectomatic ' ' and ` ` option ' ' option toggle in a multi select
added a validation check for the length of keys in HighestKvno . java to ensure that the count of keys is at least 9
added error handling for Huge Objects BTrees with 1 record in HDF5BatchReader . java to improve robustness by logging a warning when
return writeresult instead of pdone in bigquery / windowedtobigquery .
fix : add ` ` template ' ' attribute to process group resource ( # 3641 )
added a new file TestMultiANewArray . java for testing multi - dimensional array initialization to facilitate testing of multi - dimensional
added a configuration option for managing secondary storage in the management server to enhance flexibility in managing secondary storage based on configuration settings
refactor SyncBlockChainMsgHandler to use local variables for head and headNum for clarity to improve code readability and maintainability by
added a theme setting for the preview tab content in PreviewTabView to ensure the preview tab displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout behavior in ConnectorTimeoutTest . java and updated the ServerConnectorTimeoutTest . java to improve test coverage and
add dcoref . dictionarylist , dcoref . dictionarypmi , and dcoref . signatures property to make it easy to
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and introduced a new method ` readTagName ( ) `
updated JpaPagingItemReader and JobLaunchingGatewayParserTests to remove unnecessary type casting to improve code clarity and maintain consistency in
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for non - critical messages
refactor ColorExtractionService to utilize a new method for extracting hotseat palette to improve code readability and maintainability by centralizing
added methods to set default data table entry and cell transformations in TypeRegistry to enhance flexibility in data table transformation configuration
removed assertion that checks if newAvailableShared is less than or equal to initShared to simplify the code by eliminating unnecessary assertions
doc : generate sample code in the java microgenerator ( # 113 )
replaced the ` isProjectGenerated ( ) ` method with a direct access to ` true ` in ` WorkspaceAndProjectGenerator ` to simplify
simplified the conditional check for the USER _ PROPERTY header to improve code readability and maintainability
added contact form routes and a new Contact class to manage contact information to enhance the application ' s capability to handle contact - related data and improve
guacamole - 642 : update simpleuser to use objectpermissionset instead of permission .
update RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release version
[ drools - 7 ] fix typo find by codespell on fossies . org
updated method names and queries from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes
replaced manual closing of PerDocConsumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
( chore ) camel - core : fix typo in javadoc
added an OnClickListener to the overflow button to display the menu when the overflow button is clicked
updated failure messages to clarify null references and non - null references to improve error reporting for better debugging and understanding of null references
ggb - 1181 fix line height of help button in av
move protobufferutilitiestest to core / util package
fix wrong divider position on macosx ( # 4640 )
improve aux file generation to avoid cross reference
[ geos - 7012 ] update geoserver doc to reflect the change in geoserverfeaturesource
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by using a more descriptive
fix update the contact list when the contact avatar change .
updated import statements for Command in ShellCommand and ShellFactoryImpl classes to align with the new package structure for better organization
added a test for cleaning up the audit log table after parameters in AuditLogTest . java to ensure that the audit log table is properly cleaned
added a suppression warning and changed the return type of the inject method to Object to improve type safety and eliminate unchecked cast warnings
added regex patterns for parsing comment lines and improved error handling in ` ACLFileParser ` to enhance parsing logic to correctly handle comments starting with
updated import statements and modified the ` isReadable ` method in ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` and ` userName `
added an ` ancestorDimensionValues ` map and modified the node name formatting in ` StarTreeImpl ` and ` StarTreeNodeImpl `
added user unlock state checks before dumping plugin manager information in TouchInteractionService and refactored closeOpenViews method in Launcher to ensure
change variable name from widthStr to positionStr to improve clarity by using a more descriptive variable name
refactor PKIXValidator to improve certificate validation logic to enhance clarity and maintainability of certificate validation process
[ hotfix ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to `
vpc : do n ' t use skipprojectnetworks when listnetworks api call
updated ` RuntimeTypeAdapterFactoryFunctionalTest ` to use ` get ( ) ` instead of ` remove ( ) ` for JSON element retrieval
store undo info on property change to help with undo / redo
updated gradProp retrieval to use AccessController for privileged actions to enhance security by restricting access to system properties
[ hotfix ] [ test ] fix flaky test in streamclosetest
modified the ` doAfterFlush ` method in ` DocConsumer ` , ` DocFieldProcessor ` , and ` TermVectorsConsumer ` classes to
added handling for deprecated errors in ConfigurationMetadataGenerator and introduced NestedConfigurationProperty annotation in AbstractJpaProperties to improve error detection and support nested configuration
refactor capacity and mask variables to be final in BiInt2ObjectMap . java and Int2ObjectHashMap . java to improve code cl
updated the HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 in HiveConf . java and refactored
add some logging to help diagnose intermittent failure
added a null check for the context before returning a new instance of SchemeAndroidIDE to prevent potential NullPointerException when context is not initialized
[ gr - 16536 ] fix classloader leak in native - image - builder .
updated the ` modifyGrantedAuthorities ` method to return a list of granted authorities instead of void to enable the modification of granted authorities
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new classes ` RawJaxrsIntegrationTest `
add support for setquerytimeout ( ) and isjdbc41compliant ( ) in poolutilities .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance test coverage for various XML and supplementary
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter .
added support for MariaDB sequences in MariaDBDatabase and updated sequence handling in CreateSequenceGenerator to ensure compatibility with MariaDB and
updated string concatenation syntax in MappedResizeableBuffer . java , UnsafeBuffer . java , CompilerUtil . java , and Int2ObjectCacheTest
updated import statements and added TableDataManagerProvider . setServerMetrics ( new MetricsRegistry ( ) ) in multiple test files to utilize the
added support for both " jsse . enableMFLNExtension " and " jsse . enableMFLExtension " properties in SSLExtension
changed the iterator type from ` ObjectIterator < T > ` to ` ObjectHashSetIterator ` and modified its initialization and reset methods to simplify the
updated character remaining count in Compose . java and TweetFragment . java from 22 to 23 to correct the character limit for shortened URLs
added datapoints _ ttl to cassandra datastore to allow ttl to be set for data point .
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter and updated related logic to allow users to
added a method ` getTerrainAtCell ` to the ` TerrainGrid ` class to retrieve a terrain from a cell coordinate to
added default value printing and expression printing in Pretty . java and created a new file T6665791 . java with Java compiler functionality to
added error handling for missing quest encryption keys . json in ResourceLoader to improve error logging for better debugging when the quest encryption keys file
update push support check to include push status to ensure proper handling of push status based on push status
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
added signing functionality for local and private witnesses in BlockUtil . java to enhance security by integrating local witnesses for block processing
modified return statements to handle empty root cases and added security checks for path access to enhance robustness by preventing potential NullPointerExceptions and ensuring security
updated method names and logic in ColumnText , PdfPRow , and PdfPTable classes to improve clarity and functionality of row management and
refactor ListFragment to use SparseArray for managing undo notes instead of direct removal to improve efficiency and maintainability of note management in the List
[ # 7272 ] upload backup : add id for feedback question and comment ( # 7273 )
added a null check for the transfer data in bug8024061 . java to ensure that an exception is thrown when the transfer data is not
no effective change - remove unused pstmtdelegate
replaced custom padding handling with Android ' s default padding method in AppWidgetResizeFrame and Launcher classes to simplify widget padding management and improve
refactor MethodHandle initialization to use a static block and add a new constant for consStringFilter to improve code readability and maintainability by
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
rename ` CountDownLatch ` from ` latch ` to ` goAwayLatch ` and adjust the timeout duration in the test to improve cl
replace calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` for failure assertions in ` IterableSubjectTest . java ` to
replaced instances of ` ThreadLocal ` with ` null ` for the ` currentBook ` variable across multiple files to simplify the code and improve
added support checks for MethodInvocation and Object in ContactSecurityVoter . java to ensure only valid object types are accepted to prevent runtime errors
removed unused imports from DataLoader . java to improve code clarity and reduce unnecessary dependencies
added rowsAffected parameter to postUpdateLog methods across multiple command step classes to provide additional context about the update process based on the affected rows
ggb - 1353 fix for margin not work in desktop
set foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration . java to provide default values for fps settings
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent potential memory leaks
updated WebSocket frame handling in DefaultHttpServer to use ChannelFutureListener instead of DefaultWebSocketFrame to improve responsiveness by ensuring the WebSocket frame
updated event listener classes in StateMachineErrorTests and added new test cases for OnStateMachineError to enhance test coverage for state machine errors and
refactor SettingsActivity to use a new method for setting the list background color to improve code readability and maintainability by centralizing background setting
updated the import statement for StringUtils from Apache Commons Lang to OpenHAB ' s StringUtils and added a null check for the line variable to
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count of a weighted average average
[ hotfix ] fix checkstyle violation in replicationsink
replace VALID _ CACHE _ SET with REGEXP _ CACHE and modify the caching mechanism to improve performance by reusing regex instances instead of creating new
added a static reset method to the GameThread class to provide a way to reset the gameThread state
added a check for the realm name in the login method of DigestAuthenticator to ensure that the login process only proceeds if the realm matches the
refactor parameter merging logic in SavedRequestAwareWrapper to enhance clarity and efficiency in handling saved request parameters
updated InfoStatus messages in BasicConfigurator , LoggerContext , ConfigurationAction , and ContextInitializer classes to improve clarity of log messages and enhance debugging
replaced the conditional check for ` hasNotified ` with a call to ` wakeup ( ) ` in ` CommitLog . java `
added a condition to exclude Android O in the image view check and introduced a new utility method for Android O detection to ensure compatibility with Android O
updated schemaCrawlerOptions from minimum schema info level to basic schema info level to ensure compatibility with the latest schema information structure
replaced XML output stream with buffered output stream in SaveTask . java to improve performance by reducing the number of write operations
updated character encoding handling in TestPayloads . java to use a fixed UTF - 8 string instead of a fixed UTF - 8 byte array to
fix mc - 103516 , fix world . getentityforge ( ) not return false for entity that do n ' t have a
removed duplicate entries for " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101
[ drools - 7 ] use deepequals instead of equal in protobufinputmarshaller
[ java ] fix switch / cases indentation see camel - 14540
removed the ` public ` modifier from the ` PDFCloneUtility ` class to enforce package - private visibility for better encapsulation
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for endpoint URL resolution to improve flexibility in handling HTTP method and HTTP headers
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by
added a call to ` manager . notify ( Notification . COMMAND _ START ) ` in ` AsyncBackgroundTaskManagerTest . java ` to ensure
updated the ` computePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` before calling ` computePreviewDrawingParams `
replaced TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to enhance character filtering capabilities for improved analysis accuracy
replaced manual null checks with utility method ` nullNotPermitted ` for plot , generator , and hotspot arguments to improve code readability and
added verbosity control to the createSubContext method in ExecutionContext to allow customizable verbosity settings during execution
added a condition to convert schema to uppercase if it is not null and the database type is Oracle to ensure consistency in schema handling for Oracle database
log4j2 - 1349 add context class name to context description in asyncloggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion . java with a main method that calls System . gc ( ) to facilitate garbage collection
replaced ` split ` with ` Splitter . on ` for improved readability to enhance code clarity and maintainability by using a
removed ` utf8ToString ( ) ` method from ` AnalyzingInfixSuggester ` and added a new test method ` test
updated the handling of local attachments in PushsaferMessageBuilder . java to improve clarity and correctness in encoding content types
update stripprovenance to print jsonresult instead of provenancehash
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the visibility modifier of FORMATTER from ' private final static ' to ' private static ' in multiple test classes to allow for better flexibility
replaced Apache Commons Logging imports with Java ' s BigDecimal and RoundingMode imports , and modified the evaluate method to accept an additional parameter to
replaced direct null checks with ` ConfigParser . valueAsOrElse ` for ` injectionEnabled ` , ` useIncludedLibrary ` , and `
changed class declarations from package - private to public in Test1 and Test2 classes to allow access to Test1 and Test2 from other packages
updated permission handling in PlayerEventListener to use " deny . no _ enter " instead of " no _ permission _ event " and modified variable names
updated the ` getAdditional ` method in ` ConditionAndOr ` to include a ` Session ` parameter and modified the query execution in tests to enhance
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in
added random test cases for box and circle creation and reset friction in Box2DCharacterControllerTest to improve test coverage and ensure proper
added tests to validate memory and global buffer sizes in FLIGHT _ RECORDER _ OPTIONS to ensure that the options do not exceed the maximum
8275362 : java / lang / stringbuffer / objectalignment . java fail with ` ` must be power of 2 ' '
added functionality to extract the target package name from the APK manifest to enhance the instrumentation testing capabilities by allowing users to specify the target package for
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
updated the initialization of ` acceptableThrowawayItems ` to use a new ` ArrayList ` instead of ` Arrays . asList ( ) ` to ensure
replaced generic type usage with explicit casting for boolean , byte , char , short , and int in multiple Java files to improve type safety and
reformatted code in MessageHandler . java for consistency to improve readability and maintainability of the code
refactor Inflection class to improve code readability to enhance maintainability and facilitate future feature additions
added methods to get and set the locale in the EvaluationContext class to enable locale management functionality within the application
removed unused import of Plugin from SummaryPrinter . java to clean up the code and improve readability
added a break statement to the DrawerActivity class to ensure proper flow control in the switch case
updated import statements in MongoQueryCreator . java and modified debug logging to use getQueryObject ( ) instead of query to improve code clarity and
add a system property xwork . loggerfactory to allow customization of loggerfactory
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest to clarify the purpose of the tests related to P
updated bean names in AvailabilityHealthContributorAutoConfiguration , AvailabilityProbesAutoConfiguration , LivenessStateHealthIndicator , and ReadinessStateHealth
drill - 1071 : update local pstore provider to hold data when run in write disabled mode . allows use of web guy for profile view while debug
changed the visibility of the ` deleteFiles ` method from public to private to restrict access to the method for better encapsulation
renamed ` Provider ` to ` ServiceProvider ` and updated related methods to improve clarity and consistency in naming conventions
truffle : simplify code in javainterop reflect and message resolution .
added ` isToolchainCreated ` method to ` ToolchainProvider ` and implemented logic in ` DefaultToolchainProvider ` to determine if a
only remove context if it have not be add to the engine
replaced ` indexOf ` with ` contains ` for version and fails checks in ` AbstractCheckDescriptor . java ` to improve code readability and
updated linker flag handling in PrebuiltCxxLibrary and related tests to include exportedLinkerFlags and exportedPlatformLinkerFlags to improve cl
updated the method name from ` onConfigurationChangedInternal ( ) ` to ` updateRecentsRotation ( ) ` in ` AbsSwipeUp
updated type parameters in multiple listener classes to use generics to enhance type safety and avoid unchecked warnings in the code
abstractblockchain : use the hash of the newly create block header instead of the old one .
use getstorepathphysic ( ) instead of getstorepathphysic ( ) in defaultmessagestore ( # 5
remove unnecessary try - with - resources statement in MicrometerMetricManager . java to streamline resource management and improve code readability
[ issue # 5238 ] add compaction log statistic ( # 5239 )
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new code
added a method to check for the presence of a system UI object and execute a shell command for the keyguard status view to enhance functionality by
changed logger and principals fields from static to instance variables in SessionRegistryImpl . java to enforce immutability and enhance thread safety
added checks for empty cookie jars in InMemoryCookieStore and NullUriCookieTest to ensure that the removeAll method does not return false for empty
[ bonsai ] fix nullpointerexception in bonsaiarchive . rollforward ( ) and bonsaiarchive . rollback ( )
updated method signatures in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept CharSequence instead of String to enhance
[ java ] unignoring a test due to firefox bug
added connection return logic in SocketConnector . java to ensure proper connection handling and handle potential IO exceptions
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update references accordingly to clarify
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing the heartbeatExecutorService
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored the cancellation logic to include tracing
fix for drag - select text out of the text area ' s bound
added configuration paths for local , system , and staging directories in TestInformationSchemaWithPrivilege . java to ensure proper directory structure for testing in the
refactor graphics configuration retrieval logic in Component . java to improve readability and maintainability of the code
update server status to true in CXFTestBase . java and add new test for legacy mode in TikaResourceTest . java to
refactor doProcess method to streamline processing logic to enhance code readability and maintainability by reducing redundancy
added command - line argument handling and improved tag management in PrintTagList . java to enhance user experience by allowing users to specify a model
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
http : / / issues . apache . org / jira / browse / amq - 3877 - fix test that be fail due to
[ java ] make startfromtruncatedrecordinglogtest more resilient to timing issue .
updated the arc calculation in LineBorder . java to use a float value instead of an integer to improve precision in drawing the outer rectangle ' s
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when galleryImages is null or empty
added handling for the " DEPLOYMENT _ ID " column in the change log history service to ensure the " DEPLOYMENT _ ID "
pdfbox - 4071 : fix typo find by codespell on fdf .
removed the boolean parameter ` moreColumnOk ` from the ` getIndex ` and ` canUseIndex ` methods to simplify the method signature and improve
added provisional engine management in QuickfixjComponent and updated corresponding tests in QuickfixjComponentTest to enhance engine management and ensure compatibility with
added support for display zoom controls in RoboWebSettings to enhance user experience by allowing customizable zoom controls
add support for corporea brick , brick and slab .
refactor ConnectionFactory to improve connection handling logic to enhance performance and maintainability of connection management
added a method to enable or disable menu items based on user settings in GpsMainActivity to improve user experience by providing appropriate icons based on
updated the message for empty lists in ExtendedListFragment . java to improve clarity by using a more descriptive string resource
replaced @ ServiceRegistry . Setting with @ Setting in EntityTests . java to standardize annotation usage across the codebase
added auto - resizing functionality to the MotorMountConfigurationPanel and updated the MotorMountTableModel to use the subpanel
use system . getproperty ( ` ` line . separator ' ' ) instead of system . lineseparator ( )
added getter and setter methods for creator and subject in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java
removed redundant call to super . doStop ( ) in HandlerWrapper . java to improve code clarity and maintainability
[ java ] check for empty cnc file in aeron client .
refactor ` UnsatisfiedTypeBounds ` to replace the ` Marker ` interface with a new ` Command ` interface and introduce a new
added support for detecting and decompiling jmods in ClassFileSourceImpl . java to ensure compatibility with jmod files when processing jar files
updated TreeBackedElement and TreeBackedPackageElement to use Nullable canonicalizer to improve null safety by ensuring canonicalizer is not null
replaced tokenRequest initialization with a new PublicTokenRequest instance in Saml2TokenGranterTest and UserTokenGranterTest
updated the variable used in Array . get from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to ensure correct retrieval of
added a sync method to the ZooKeeperWatcher class and invoked it in the ZKAssign class to enhance synchronization capabilities for ZooKeeper nodes
added checks for context equality in GlUtil . java to ensure proper error handling when no current context is provided
[ drools - 7 ] avoid to remove activation when a ruleflowgroup be deactivate
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to simplify error handling and
fix clientqueuedisruptiontest . cleanup ( ) to be call after each test
refactor : use defaultjavaprettyprinter in ctreferenceimpl # tostring ( ) instead of signatureprinter . getsignature ( ) (
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
refactor GeoPoint - related classes to utilize custom GeoPointTokenStream and TermEnum for prefix terms to enhance flexibility and maintainability
added a new class ` FakeBuildable ` and modified ` OnDiskBuildInfoTest ` to use it for mocking buildable instances to
fix checkstyle issue in inventory / itemstack / guiing / universalbucket . java
updated variable and method names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity
added a check to return 0 if the velocity is less than an EPSILON to ensure that the calculation only proceeds if the velocity is less
replaced calls to ` getBucket ( ) ` with ` _ storage . create ( BlobId . bucketName ( ) ) ` in Gcs
removed redundant call to blockCloseVertxByName in TestHighwayTransport . java to ensure proper resource management and avoid potential memory leaks
hhh - 11313 - ddl - migration - add support for create view and drop view if exists
updated the expected number of clustering engines from 2 to 3 in CarrotClusteringEngineTest . java to ensure the test verifies the correct
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to being refactored
updated the ` ParserCacheCommand ` to use a new ` ParserStateObjectInputStream ` and added a new class ` ParserStateObjectInputStream `
added null checks and object quoting strategy initialization in ChangeSet and DatabaseChangeLog classes to ensure proper handling of object quoting strategy based on changeLog
updated the MetainfoParser instantiation from ` parse ` to ` fromXmlStream ` to ensure compatibility with XML stream parsing
deleted the CsrfControllerAdvice . java file to remove unused CSRF token handling functionality
updated endorsed argument handling to quote paths in AntCompiler . java to ensure proper formatting of file paths in the output
added scrim animator and modified background alpha handling in Launcher , LauncherAnimUtils , and AllAppsBackgroundDrawable to improve visual feedback
updated the return value in TypeInferenceUtils from " 2 < < 24 " to " 1 < 24 " and added additional test cases in Type
regenerate client with updated copyright year ( # 4382 )
added handling for UNC and absolute path prefixes in WindowsPathParser and updated tests in PathOps to ensure correct parsing and validation of file paths
replaced InetSocketAddress instantiation with direct instantiation of MulticastSocket in Promiscuous . java to simplify multicast socket creation and improve code readability
updated writer and query initialization in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
change return value from nBits to nBits . clone ( ) in IndexColorModel . java to ensure that the original nBits instance is
changed the visibility of the ` deriveCollectorName ` method from private to protected and added a new test for custom collector names in ` TestProfiler
datamongo - 2043 - fix type hint when write simple type
added performance measurement for proxy factory creation in ProxyMaker to improve performance analysis during proxy creation
added @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
updated ConnectionException to include the original exception as a cause to improve error handling by providing more context for connection issues
refactor reinflateWidgetsIfNecessary ( ) method to be called from the Workspace class instead of the Launcher class to improve widget management
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion functionality in a dialog to ensure that the file deletion functionality
[ fix ] lwjgl2 : do n ' t call display . update ( ) with autoflush = false
[ # 7018 ] instructor : instructor : view result page : show photo for student ( # 7019 )
refactor TestIgnorance to allow configuration of ignored tests based on environment variables to improve flexibility and control over test execution behavior based
removed the ' pointer ' parameter from the ' fling ' method in ScrollPane . java to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository and implemented a test for null pageable in QueryDslJpaRepository
[ hotfix ] [ runtime ] add ` computememorysize ` method to the ` memorymanager ` interface
camel - 16400 : camel - jms : do not wait for connection factory to be shutdown .
rename SnowballAnalyzer . java file to improve clarity and consistency in naming conventions
modified the handling of the ` previousIndex ` and ` previous ` in ` StreamingAggTemplate . java ` to initialize ` previousIndex ` to
refactor ` ` require null check ' ' to ` ` require null check ' '
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to ` StreamSupplierComponent ` to provide a convenient way to
updated log messages to clarify file movement status and added retry logic for renaming files to improve logging clarity and enhance error handling during file
renamed methods and classes from private to public in InjectorProxy , ReflectionUtil , and TestConstructorInvocation to improve method visibility and enhance flexibility
[ hotfix ] [ stream ] remove out . close ( ) from flinkstreamingcreatefunction
added unit tests for SQL parsing and deparsing in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure proper handling of unsupported
return an empty list instead of null in AppleTest . java to ensure that the method returns an empty list instead of null to avoid potential
updated the expected output in NamedSetTest . java from " Deliberate error " to " Quality Distribution , Inc . " to ensure
updated WebSocket connection handling to include a reconnect option and improved logging for connection states to enhance connection management and provide clearer debugging information during connection
replaced ` setAttribute ` calls with ` removeAttribute ` in ` AbstractProcessingFilter . java ` to simplify session management by eliminating unnecessary null
hbase - 20536 testregionreplicareplicationendpoint . testreplicareplication fail on slow machine due to hbase -
added configuration settings for PMS in FormatRecognitionTest . java to ensure compatibility with the latest configuration settings
cloudstack - 3995 : create vm data disk template only if data disk format be ovc ( # 3996 )
replaced SpringBootTest annotations with JUnit4 annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to enable compatibility with JUnit4
added multiple @ Override annotations in various classes to ensure proper method overriding and improve code clarity
updated column names from ' metricVal ' to ' metricVal1 ' in AppendOnlySchemaIT . java to ensure consistency in naming conventions
added a check to ensure the deleted documents count matches the segment ' s document count to prevent corruption by throwing an exception if the document count
add a method to get the name of the jain - sip logger and improve javadoc
updated the length of staves in FilamentFactory from 1.0 to 0.9 to accommodate staves w / no
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` to
added a new test method to the CsrfFilterTests class to ensure proper handling of access - denied requests with case - sensitive methods
replaced static final ` Fields ` with instance variable ` field ` in ` HotSpotObjectConstantImpl . java ` to improve code read
rename method ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming conventions
added a watermark to the current time in FileIO . java to ensure that watermarks are applied correctly during file operations
hhh - 14816 fix npe in sqmctestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to facilitate the use of ResultSetMetaData in query compilation tests
updated library output format to include the project filesystem ' s root path to improve clarity and provide more context in library output
updated the slider value from - 180 to Math . PI in the RailButtonConfig . java file to ensure the slider reflects the correct
updated the coordinates in ` OverlayRenderer . java ` and modified the execution of ` saveToSlot ` in ` Saves . java ` to
added support for expression language in KerberosProperties . java to enhance the configuration options for expression language support
removed unnecessary conditional checks for setting the held item mount point in ThirdPersonRemoteClientSystem . java to simplify code logic and improve readability
updated ` setupViews ` and ` ScrimView ` classes to include a ` ScrimView ` parameter for improved animation control
[ flink - 20613 ] [ state - backends ] add periodic materialization config option to enable / disable periodic materialization
added a ` value ` attribute with getter and setter methods to the ` ProtocolParameter ` class and updated the ` List ` and ` ParamTag
add a unit test to verify the behavior of the chunked servlet with the head url
added a boolean field ` isBumped ` and modified the ` parseDetails ` method to return a boolean value based on the presence of a
added a Content - Type header to the SwitchToPostInterceptor and modified the SearchRequestUnitTest to include it to ensure proper handling of HTTP
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
phoenix - 1649 add log for ignore setfetchsize ( ) in phoenixresultset
initialized AndroidNet with null parameters in AndroidDaydream . java to ensure proper initialization of AndroidNet objects
[ iotdb - 5396 ] fix the bug that segment data be not consume correctly ( # 9496 )
removed the boolean parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify method calls by eliminating
hbase - 16400 remove hbase - prefix - tree from tablemapreduceutil ( addendum )
added error handling for inflation failure in DesignerActivity and made root variable final in XMLLayoutInflater to improve user experience by preventing
refactor PushbackInputStream to improve code readability to enhance maintainability and facilitate future feature additions
lower phase : use schedule phase instead of control flow graph for lowering
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
added support for newline characters in the Makefiles parser and updated related tests to ensure consistent handling of line endings across different operating systems
replaced direct calls to ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added
updated the refresh flag handling in SimpleBatchNode to ensure proper refresh behavior based on the RF _ TRANSFORM flag
[ gr - 10705 ] replace sharedmethod # isguaranteedsafepoint with sharedmethod # isuninterruptible .
added framebuffer size callback functionality and refactored window size handling in LwjglWindow . java to improve framebuffer management and ensure
updated animations in LauncherAppTransitionManagerImpl to use offscreen values instead of left values to improve visual clarity by using a more appropriate
refactor ` LiteralNode ` to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and update related methods to improve handling of null
added methods to set file lengths in ` CompoundFileWriter ` , ` FSDirectory ` , and ` IndexOutput ` classes to enhance file management
updated manifest handling in AndroidNdkScriptGenerator and modified imports in AntScriptGenerator and LwjglDebugStarter to improve manifest management
camel - aws2 - s3 : replace copysource ( ) with sourcebucket ( ) and sourcekey ( )
added permission check for wildcard roles in RuleBasedAuthorizationPlugin . java and updated test cases in TestRuleBasedAuthorizationPlugin . java to enhance permission
refactor ZookeeperClientServerRegisterRepository to improve data handling and event type management to enhance clarity and maintainability of the registration process by
renamed methods and classes related to deep stub functionality for clarity and consistency to improve code readability and maintainability by using more descriptive
update call value handling in Runtime . java to ensure a default value is used when the call value is empty to improve robustness by avoiding
replace string concatenation with parameterized logging in BibEntry . java to improve logging performance and readability
updated the ` mapPBEAlgorithmToOID ` method to include ` throws NoSuchAlgorithmException ` and modified the algorithm name from " PBEWithHmac
tmi - tiff : improve error message for too large tiff value
added validation to check for invalid JobParameters in CommandLineJobRunner to improve error handling and provide clearer feedback for invalid inputs
updated content assertion from " foo \ r \ n " to " foo " in SmtpTests . java and MailTests . java to ensure
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for lastSequenceId instead of synchronized methods to improve thread safety and performance by using a
added a new file ` Test . java ` containing a class ` Test ` with a static method ` sum ` to calculate a sum of a
updated ` @ Config ` annotations in ` ShadowWifiManagerTest . java ` and changed visibility of fields in ` WifiUsabilityStats
added a new file named Solution . java to implement a solution for a problem with sorting and checking integers to provide a solution for a specific problem
patch by jbellis ; review by brandonwilliams for cassandra - 1343
refactor taskbar recreation logic in TaskbarManager . java to improve readability and maintainability of the code
refactor SyncFutureCache . java for improved synchronization logic to enhance performance and maintainability of asynchronous operations
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and increased the latest
[ java ] uselessstringvalueof : fix false positive for string literal
added a new test method ` testEllipseNoseconeDrag ( ) ` in ` SymmetricComponentCalcTest . java ` to verify
add option to set target max type shard size for hollowproducer
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask to improve code structure to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis . java and modified parameter handling in DDLTask . java to ensure location is not shown in test mode and
added a call to ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to execute a clear database change log table operations efficiently
added version handling and improved path comparison logic in CallPath and RestClient classes to enhance compatibility with different API versions and ensure accurate path representation
phoenix - 1349 fix race condition in phoenixdriver . close ( ) .
bugfix : fix typo ( ` ` mesurement ' ' - > ` ` measurement ' ' )
added JUnit ' s @ After annotation and a ScreenshotTest annotation to FolderPickerActivityIT , modified FolderPickerActivityIT to extend Abstract
[ gr - 16536 ] fix npe in native - image generation when devmode be not enable .
added length validation in StringHelper and a new test for the removeLeadingAndEndingQuotes method to ensure proper handling of string lengths and validate functionality through
refactor type handling in JpaQueryCreator and ParameterMetadataProvider to use a local variable for type checks to improve code readability and maintain
limit the amount of push branch id to 25 second after successful authentication .
added a dispatch ( new P25Message instance , duid , aliasList ) call to P25MessageFramer . java to ensure
added a null check for the handler before checking if it is null in WebSocketImpl . java and implemented a test for clearing client handlers on WebSocket
[ ds - 3752 ] fix test break by change to indexablepooltask
refactor padding initialization to use Launcher ' s padding for widget dimensions to improve consistency and maintainability of widget padding management
added ` hide ` methods to ` TaskbarUIController ` and ` TaskbarAllAppsController ` , and modified ` closeOverlay ` in
replaced the ` Thread . sleep ( 1500 ) ` with ` launcher . join ( ) ` in the ` launch ( ) ` method
updated the calculation of the point in JavaSEPort . java to correctly account for the canvas ' s coordinates to ensure accurate positioning of the
replaced ` notificationManager . notify ` with ` startForeground ` and added a conditional check for ` toUpload ` to ensure proper foreground behavior
fixed bug 1244536 - excessivepubliccount no longer report a warning when a static final variable be use in a class .
hbase - 21758 set the retry number for thrift client to 3 ( # 3746 )
change log level from info to debug for half offset log message to reduce log verbosity and improve performance
added exception handling for FileNotFoundException and changed debug log level to trace in ResourceUtils and AbstractCipherExecutor to improve error handling and provide more detailed logging
added a new ` BittrexTickersResponse ` class and updated ` BittrexMarketDataServiceRaw ` and ` Bittre
fix ( entityentry ) : use getenumconstants ( ) instead of getenumconstants ( )
remove unnecessary call to getclass ( ) in websocket container
updated character set representation in FileUtils . java to include additional characters to ensure accurate character representation for improved text processing
added stylesheet management methods and updated content handling in ResourceService , ResourceHandler , and DefaultServlet classes to improve stylesheet management and ensure proper handling of
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
changed method invocation from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with PointerParameterStrategy for address handling
updated database check from PostgresDatabase to CockroachDatabase to ensure compatibility with CockroachDatabase in sequence generation logic
removed the condition for checking if the name equals " java . lang . String " in ObjectStreamClass . java to simplify the logic for determining
replace UnsatisfiedLinkError with SymbolNotFoundError and create a new SymbolNotFoundError class to improve error handling by providing a more specific error type for
updated BinaryResponseWriter to conditionally create a SolrDocument based on return fields to improve handling of single and pseudo fields based on return conditions
added handling for PING and PONG WebSocket states in WebSocketImplBase . java and implemented a test for WebSocket pause functionality in WebSocketTest .
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to include the hyphen as a valid non - identifier escape
updated DnsResolverProvider to use wildcard imports and refactored DnsCache initialization to improve code readability and maintainability while enhancing the
added @ ConditionalOnClass ( MessagingTracing . class ) annotation to TraceMessagingAutoConfiguration . java to ensure that messaging tracing functionality is only enabled
mondrian : fix for mondrian - 1211 - mysql compatibility issue
updated import statements in multiple Java files to include necessary event and widget classes to enhance functionality and maintain consistency in event handling
added a condition to handle the ' / ' character in XMLLightweightParser to ensure proper handling of close tags in XML parsing
removed the call to setVisibility ( GONE ) in TouchCharInput . java to streamline the input handling by eliminating unnecessary visibility
added a null check for the current user before comparing ID to avoid potential NullPointerException when accessing the ID
updated JSObjectLinker to handle cases where the index is negative and set the member to ensure correct assignment of JSObject members based on index
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to utilize default random string generation and suffix handling to improve flex
added a @ Deprecated annotation to SecurityConfig . java to mark the class as outdated and discourage its use
added @ Deprecated ( forRemoval = true ) annotations to multiple Java files to indicate that these classes are outdated and will be removed in future versions
deleted the JoglDebugAdaptor . java file and modified RocketFigure3d . java and GuiceStartup . java to stream
added ` toString ` methods and tests for ` ExtraFieldPropagation ` and ` AWSPropagation ` classes to enhance string representation for better debugging and logging
added PendingIntent import and updated contentIntent in FileDownloader and FileUploader classes to ensure the notification reflects the current update state of the
refactored the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to introduce a ` set ` method to improve
refactor DateTimeFormatter class for improved readability to enhance maintainability and facilitate future feature additions
removed unnecessary try - catch block for ClassNotFoundException in WToolkit . java to streamline code for better readability and performance
added null and empty checks for administrator credentials in KerberosOperationHandler to ensure proper handling of null or empty credentials to prevent authentication errors
added a constant for maximum width scale for large screen and updated widthUsed calculation based on device profile to improve widget resizing behavior for tablets
add pgl . beginrender ( ) and pgl . endrender ( sketch . sketchwindowcolor ( ) ) to psurfacejog
refactor Hashing class for improved performance to enhance efficiency in hashing operations
modified the accept method to accept a folder name instead of a file name to improve clarity and accuracy of file validation logic
updated UserInfoActivity to include string resources for user info icons and modified addToListIfNeeded method to include content description to enhance localization support for user info
removed redundant null check for newType in J . java to streamline code by eliminating unnecessary null checks
updated the ACTIVITY _ START _ DELAY value from 500 to 800 to improve the responsiveness of the activity startup process
added a constant WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to improve maintainability and
reset selectedMotorSet to null and clear selection in the ThrustCurveMotorSelectionPanel to ensure the selectedMotorSet is
added BufferUtil import and invoked BufferUtil . clearToFill method in ByteBufferPool . java to ensure buffer is cleared before processing new data
add rest api test for alarm rule creation via rest api
update LDAP configuration keys from " authorization " to " authentication " to align configuration settings with authentication requirements
added deleteExchange and queueDelete calls for " x " and " q " in DurableOnTransient . java to ensure proper cleanup and queue
[ hotfix ] [ test ] fix flaky test bulkslotproviderimpltest
updated connection handling in PingService and ServerInfoService to include error handling for connection failures to improve robustness and provide clearer error messages when
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
updated Quartz2Adapter . java file to improve functionality and maintainability of the code
added exception handling to the execute method in SulongLibrary . java to improve robustness by preventing application crashes due to illegal state
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
replaced deprecated method ` helper ` with ` args ` in ` ConfigMappedNameResolverFactory ` and ` DiscoveryClientNameResolverFactory ` to
added a check for non - empty annotations before converting them to a list in JavacParser . java and created a new test class Test
added a new package name " com . sun . naming . internal . " to CheckPackageAccess . java to enhance package access checks for internal
changed the default value of strict from false to true in StaxEventItemReader . java to enable stricter data processing by default
modified the ` OfflineSorter ` to include an ` isExhausted ` flag and modified the partition reading logic to check for exhaustion
refactor ActionResetingPool to improve code structure to enhance maintainability and readability of the code
added a check to determine if the color mode is in XY mode before converting it toHSBType to improve robustness by avoiding unnecessary
refactor CellLayout to improve folder creation and reordering radius calculations to enhance visual consistency and maintainability of folder creation logic
added a call to showLoadingDialog ( ) in FileDisplayActivity and removed it from FileDetailFragment and OCFileListFragment to streamline
added null and existence checks for uigestureFile before loading logs to avoid potential NullPointerExceptions when uigestureFile is null
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for case - insensitive comparisons to ensure consistent behavior across different locales in test cases
added a method to set the listeners in the result object to ensure that the listener configuration is applied to the result
added a new method ` loadWithNewGlobal ` and modified existing method handles in ` Global . java ` and ` Context . java ` to
added JSON serialization and deserialization methods to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest ` to improve data handling and
added ObjectPostProcessorConfiguration import in HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and Saml2
replaced double quotes with single quotes in string replacement methods across multiple files to improve consistency and avoid potential issues with string literals
[ drools - 7 ] avoid npe when compare null in in operator
added import for FieldCache and modified commit and purgeFieldCache methods in TestDistributedSearch . java to ensure proper field cache management and avoid
added test case for message boundary event on subprocess and multi instance
add resolvestaticcall ( ) to the jimpleprogrammanager so it can be use to resolve static method .
http : / / issues . apache . org / activemq / browse / amq - 2638 - add a messagegrouphash
updated slot handling in Secmod . java to use constants for slot IDs to improve code readability and maintainability by avoiding magic numbers
added alignment parameter to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to improve widget alignment
[ hotfix ] [ test ] ignore unalignedcheckpointitcase test
added MIDI support imports and updated class type checks in JDK13Services . java to enhance functionality by ensuring only relevant classes are processed
added a condition to check if the keyword is not the same as the htmlFilename before adding it to the keywordToReference map to avoid duplicate
camel - 16462 : multicast eip should use size of collection instead of size of processor .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code clarity and maintainability
escape special character in flavor statsd ( # 644 )
add udp port support for member serialization and deserialization .
rename ` OperatorMulticast ` to ` OperationMulticast ` and update references accordingly to clarify the purpose of the class and improve code
increased send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for message delivery to complete before
added a try - finally block around node startup in VertxTestBase . java to ensure latch is cleared even if an exception occurs during node
hhh - 13434 : clean up cache event listener registry when destroy sessionfactory
danielwagnerhall : fix fail test on travis
[ pytorch ] update ivalueutilstest to use pytorch 2.0
added a TaskStackChangeListener to manage task visibility during pinned stack animations to improve UI responsiveness during task transitions
pdfbox - 4892 : optimize defaultsplitcharacter . checkdatepattern ( ) , a suggest by valerybokov
camel - 7017 : fix the test error of camel - cxf with no property .
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added debug logging for duration and current play time in LauncherAnimationRunner . java to improve debugging capabilities during development on debug devices
added a conditional check for ` BailoutOnException ` in ` C1XCompilation . java ` and introduced a new option ` B
updated signup and password fields to be null in mmm Links . java and modified assertions in IdentityZoneConfigurationBootstrapTests . java to allow
[ hotfix ] [ runtime ] rename previousexecutionsgraphallocations to reserveallocations in slotprofile
replaced the ` onlyFormat ` variable with a ` format ` variable and introduced a new method ` getOnlyFormat ( ) ` to improve
[ geot - 6640 ] geotiffreader now set gc _ nodata to - 9999 if no data be available
improve error message when source section be null
replace ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java
replaced ` client . blockUntilConnected ( ) ` with ` CountDownLatch . countDown ( ) ` to manage connection state to ensure
updated the ` ArrayTypeHandler ` class to handle null values for ` setNonNullParameter ` and ` getNullableResult ` methods to improve robustness
replaced the deprecated ` RegexpTunnel ` class with reflection - based prefix retrieval in ` JakartaRegexpCapabilities . java ` to improve
updated the application selection logic to use the Application class as a fallback to enhance clarity and ensure a valid application reference is used when both configurations are unavailable
[ drools - 7 ] fix npe on mutable global in phreaknode
added validation for asset name , URL , and description in AssetIssueActuator . java and introduced validation methods in TransactionUtil . java to ensure
do n ' t copy textfield in copy - paste if they do n ' t exist
updated descriptions in LGWebOSActions and LGWebOSUpnpDiscoveryParticipant to use " @ text / " instead of " @
refactor TronNetService to utilize addAll for seed , active , and trust nodes to improve code readability and maintainability by consolid
updated assertions in BaseTokenStreamTestCase to include detailed token information and changed thread array type from Thread to AnalysisThread to improve debugging information and
log4j2 - 1349 add ` ` modulate ' ' attribute to timebasedtriggeringpolicy .
added methods to ` ShadowAdapterView ` and ` ShadowListView ` for item click functionality to enhance the functionality of ` ShadowAdapterView `
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
grapher graphdecoder . aftermethodscope ( ) and pegraphdecoder . aftermethodscope ( methodscope ) , and add a debug
refactor HttpSessionDestroyedEvent to use getSession ( ) for attribute retrieval and add unit tests for security context handling to improve code clarity and ensure
added a test method to verify the change of the service name in Zipkin to ensure that the service name is dynamically set in the Zipkin
added logging for exclusion in ` JavaInMemoryFileManager ` and modified spool logic in ` JavacToJarStepFactory ` to
rename ` SeparatedProjectGenerator ` and ` SeparatedProjectGeneratorTest ` to ` SeparatedProjectsGenerator ` and update references
increased the timeout duration of the tryLock method from 4 seconds to 10 seconds to allow more time for the lock to acquire the lock
added DEFAULT _ CACHE _ CAPACITY constant and updated method signatures in ConfluentSchemaRegistryDeserializerProvider to use it to improve cache capacity management
rename the JCheckBox ' remind ' to ' checkAtStartup ' and update its tooltip to improve clarity of the checkbox ' s purpose
added method generation for weak key , weak value , expiration policy , and maximum size in NodeGenerator . java to enhance node management capabilities and improve
hhh - 10686 - fix assertion failure in cascadingactions
added support for GETPROTO and SETPROTOCHECK methods in ScriptObject to enhance object extensibility checks for prototype manipulation
updated the default read mode from " heap " to " mmap " in CommonConstants . java and refactored segment loading in ImmutableSegmentLoader
added import for ByteArrayTemplate and modified return statement in ArrayTemplateBuilder to utilize ByteArrayTemplate for byte type handling in the ArrayTemplateBuilder
added Hipchat support in SamlServiceProviderProperties and created CasSamlSPHipchatConfiguration class to enable integration with SAML service providers for
changed commandRegistryUrls from a List to a Set and updated resource retrieval logic to improve efficiency and clarity in managing command registry URLs
updated warning message to include the current context and added debug logging for uncovered HTTP methods to improve logging detail for better debugging and traceability
updated the login method in SvnRepositoryConnector and set the loggedIn flag in SftpRepositoryConnector to ensure proper authentication handling and track the
camel - 16400 : camel - activemq should not lazy create a transaction manager when use transact = false
fix checkstyle violation in vmwareresource . java
updated Timers class implementation to improve performance and maintainability of the code
replace ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to ensure
removed deprecated constants from UAX29URLEmailTokenizer and updated constructor parameters in TestUAX29URLEmailTokenizer to streamline code
removed redundant Map implementation from ScriptObject class and updated related assertions in ContextTest to streamline code and enhance type safety by using ScriptObject directly
refactor EventBusMetrics class for improved clarity to enhance maintainability and readability of the code
[ ds - 3752 ] add support for eperson in the workflow workflow
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 559 : ensure
removed null check for ` pgTypeName ` before storing it in ` _ pgNameToSQLType ` to simplify code by eliminating unnecessary null
added multiple server setups for handler0 , handler1 , handler2 , and handlerC in ScopedHandlerTest . java to ensure consistent
calltimeoutexception should be retry _ response when call be timeout .
updated the condition to check if the username or password is empty in RestLoginProcessingFilter . java to ensure that the login process handles empty passwords
updated permission check from ` Objects . equals ` to ` equals ` for ` permissionNode ` to improve clarity and correctness of permission validation
rename ` encoding ` and ` setCharacterEncoding ` methods to ` sourceCharset ` and ` setCharacterEncoding ` in ` AbstractCompiler ` and
changed the type of the postLogin variable and related methods from byte [ ] to String in HostBean . java and HostDatabase . java to
refactor simulation handling in GeneralOptimizationDialog . java for improved clarity and consistency to enhance code readability and maintainability while ensuring
camel - 16465 : camel - jbang - allow to turn off context reload by default
updated logging configuration from Log4j to ConsoleAppender in CommonTestUtils . java to improve clarity and consistency in logging configuration
refactor PrologSizeSanityCheck class for improved readability to enhance maintainability and facilitate easier debugging
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future feature additions
added a check for ` nonCloseable . markSupported ( ) ` before invoking ` invokeSafely ( nonCloseable : : reset )
added a check for embedded settings in ` EmbeddedNeo4jServer ` and modified conditions in ` DefaultBeanContext ` and ` TypeArgument
update movementdebugcommands to use prefab instead of prefab for default speed value
updated the random method to include a half length total weight parameter and adjusted related logic to improve the accuracy of the random number generation based on the
refactor GsonParser to simplify cache handling and update test cases for timestamp validation to improve code clarity and ensure accurate validation of query metrics
added comments to clarify sorting behavior to improve code readability and maintainability
replaced multiple instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract
replace ReentrantLock with PipeTaskCoordinatorLock and introduce a new lock class for managing pipe task coordinator locks to improve thread safety and
added a conditional check for ` robolectric . usePreinstrumentedJars ` in the ` DefaultSdkProvider ` class to allow
changed the condition from ` isSilent ( ) ` to ` isSilent ( ) ` in ` ExecDriver . java ` to correct the logic
added validation to ensure the dynamic field ' s default value and required attributes are not null and required to improve error handling and provide clearer feedback
do n ' t retry read repair if it ' s random
replaced ImmutableSortedSet with Iterables for adding system include roots and added a new test for include directories to improve code clarity and ensure correct
refactor ` AdaptableX509CertSelector ` to initialize ` startDate ` and ` endDate ` as null and introduce ` isSKID
log4j2 - 1349 use abstractappender . parseint instead of string . isempty ( )
added a @ Deprecated annotation to GuiScreenEvent . java to mark the class as deprecated to indicate that it should no longer be used in
added methods to manage category additions and removals in CategoryEditSearchRecyclerViewAdapter to improve category management functionality within the adapter
# 139 - enh : add servercachetype parameter to servercachemanager . getcache ( )
updated RocketComponent to use an iterator for updating mass , center of gravity , and direction to improve code readability and maintainability by using
replaced the ` doCompile ` method with ` post ` and introduced a ` destroy ` method in ` JavaCompilerService ` to improve task
refactor ` Task ` class to accept a ` Supplier < V > ` for improved flexibility to enhance task execution flexibility by allowing
refactor WanReplicationServiceImpl to use a mutex for executor management to improve thread safety and ensure proper executor initialization
added null checks for source and table paths in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
updated lambda expressions in LocalServiceRegistryClientImpl and RemoteServiceRegistry to use lambda expressions to improve code readability and conciseness
added a new test file ` FilesTest . java ` and a static method ` delete ` in the ` Files ` class to ensure proper functionality
removed unnecessary try - catch blocks around socket closure in ServerSocketAdaptor . java and SocketAdaptor . java to simplify code and improve readability by
updated the class name check in SSLLogger from " java . lang . System " to " Logger . class . getName ( ) " to ensure
refactor working directory management in Project . java to use addWorkingDir method to improve clarity and functionality of working directory management
added null check for ` cn ` in ` ItemInfo . java ` and set ` mInsets ` in ` Workspace . java ` to
changed the visibility of the String variable from public to private in GeneratedEntityDecorator . java to restrict access and enhance encapsulation
updated CSV and JSON file type URLs in SimplePostTool . java to ensure compatibility with the latest Solr configurations for CSV and JSON files
apps - 2246 make sure ` ` max ' ' and ` ` min ' ' command do n ' t have symbolic toggle
refactor client container initialization and registration in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and ensure
update condition to check if ' type ' is null or ' type ' is open with the application to ensure proper handling of cases where ' type
added ` webApplicationContext . destroy ( ) ` method to multiple test classes to ensure proper resource cleanup and prevent memory leaks
added a method to retrieve the search string from a query string and updated resource retrieval logic to include a search functionality to enhance user experience by allowing
hide the neutral button in the SetupEncryptionDialogFragment to improve user interface by making the neutral button invisible
refactor itemserviceimpl to use itemdao . countitems ( collection , includearchived ) instead of itemdao . countnot
updated SQL statements to include quotes around table and column names to ensure consistency in SQL syntax for better readability and maintainability
added logging and exception handling functionality to CheckTokenEndpoint to improve error reporting and provide better diagnostics for OAuth2 exceptions
refactor multiple Java classes to improve code structure and readability to enhance maintainability and facilitate easier future updates
updated method names and response handling in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests for consistency and clarity to improve code readability
increased the dismiss delay of ToolTipManager from 20000 to 10000 milliseconds and updated tooltip text in SQLConsole and ExtractionModelFrame
added support for running single test methods with JUnit 5 in the ActionProviderImpl class to ensure compatibility with Surefire 2.22 .
changed exception handling from ` Exception ` to ` RuntimeException ` in ` WorkerShellStep . java ` to improve error handling by providing a more specific
[ hotfix ] [ runtime ] add experimental annotation to datastreamutils , collectsink and socketstreamiterator
move streamcepstrumsource . java to util directory as well .
added a check to prevent index out - of - bounds errors in the List class to ensure index is valid and prevent potential index out - of
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure compatibility with the latest SQL parser features
updated the DebugPaste class to include a confirmation option and required type to enhance user experience by allowing the debug paste command to be executed without
use ` orelsethrow ( ) ` instead of ` get ( ) ` in endpoint management context configuration
ggb - 1395 fix for ggb - 1395 : make sure ` ` new ' ' and ` ` new ' '
replaced the ` Arg ` class with an ` AbstractGoBinaryDescriptionArg ` interface and updated related references to enhance code maintainability and align
updated environment variable retrieval logic in Jooby . java to ensure fallback to logback if application . env is not set
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduce ` SecondDummyRetryListener
fix wrong decimal representation in elasticsearch index metric ( # 498 )
updated Contribution class to use final variables for email and author , and removed null check for email and author to improve code clarity and ensure
replaced a loop with a do - while loop in JUnitFormatter . java to improve readability and maintainability of the code
updated the initialization of the elements list to handle cases where the " elements " field is of type LinkedList to ensure proper handling of non - LinkedList
update exception messages in StaxEventItemReader and StaxEventItemReaderTests to include the resource URL to improve clarity of error messages
[ scene2d ] testmultirenderender . testmultirenderenderrendertarget now use a single pointlight instead of
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction to avoid potential NullPointerException when currentProfile is null
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is added
added DSAParameterSpec and BigInteger imports for cryptographic parameters in KeyStoreManager to enhance security by integrating DSA parameters for cryptographic operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
update engine version for activiti 5 deployment to ensure compatibility with activiti 5
updated resource loader properties in SpecificCompiler . java and changed property names in VelocityEngine . java to improve clarity and consistency in naming conventions
replaced the method ` isCurrentThread ` with ` verifyIsCurrentThread ` and added a new method ` verifyThreadIsAttached ` in `
added null check for the map in GenericUDFMapValues and created a new test class for it to enhance robustness by preventing potential
renamed " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to clarify the purpose of the interceptor
add config option to turn on / off oil well generation and spouts
added a check for the " clean - me " directory before creating a new file in ImportContext . java and updated directory validation in JobQueue
updated the exception message to include a localized string resource to enhance localization support for better user experience
removed duplicate import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code by eliminating redundancy
updated constants in ZipConstants64 and added a wildcard import in ZipEntry to enhance code organization and maintainability by consolidating constants
refactor ZipFileSystemProvider to improve file validation and error handling to enhance robustness by ensuring only valid files are processed to avoid unsupported operations
replaced ` createHorizontalStrut ( ) ` with ` createHorizontalGlue ( ) ` in ` IfControllerPanel . java ` to
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper connection handling during tests
added Gson serialization annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable proper serialization and
rename databaseadapter . deleterecord ( ) to databaseadapter . deletereadbook ( ) in favor of databaseadapter . deleterecord
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
correct the position calculation for the response message in AbstractAjpProcessor . java to ensure accurate positioning of the response message
do n ' t stop the admin console server if it ' s stop .
removed the unregisterHandlers ( ) method and reorganized variable assignments in WebSocketImplBase . java to improve code clarity and maintainability by
added configuration properties for device ID transformation and ID table settings in IoTDBDescriptor . java to enhance flexibility in configuration management for IoTDB operations
updated the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and introduced a new DelayingSearchComponent class for search functionality to
updated the condition for determining if the mock TSP is being checked from " ! = null " to " ! = null " to correct the
transaction : fix serialization of p2pkh output script
updated the expression to include " / schema / types / fieldType " along with " / schema / types / fieldtype " to enhance flexibility
updated the return condition in Completers . java and added a new test class OptionCompleterTest . java to enhance null handling and ensure
fixed checkstyle issue in util / s3utils . java
change data type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to improve performance and reduce memory usage
refactored file upload logic in FtpHelper . java to improve error handling and streamline file upload process to enhance code readability and
added alpha settings for the reply button in TweetFragment . java to enhance the visual appearance of the reply button
updated expected timestamp formatting in AccessLogSupportTest . java to include a timestamp to ensure accurate timestamp representation during tests
marycachetest : move test file to tmp / testfiles - deleteme
simplified the condition for checking the presence of subscribers by removing null checks to improve code readability and simplify the logic for determining if subscribers
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unnecessary imports in AbstractSaml10ResponseView . java to improve
replaced ` printStackTrace ( ) ` with ` LogUtil . warn ( t ) ` in ` DataBrowser . java ` to improve error handling
added a condition to check if the asset directory does not contain a trailing slash in the development mode and updated the test cases accordingly to ensure that
[ hotfix ] use writeoptions in rocksdbkeyedstatebackend . put ( )
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to improve clarity
make sure dijkstrabi hint be set to ` ` true ' ' , not ` ` false ' '
update wait time from 30 seconds to 60 seconds in BesuNodeRunner . java and change nativeSecp256k1 and nativeAlt
rename ` DuclsSandboxTest ` to ` SandboxTest ` and update references accordingly to improve clarity and consistency in naming conventions
( chore ) camel - cxf : clean up duplicate code in cameldestination
make forwardpropagatetree public so that it can be use in other package
updated the group by clause in JDBCExample . java from " 0 , [ 0 , 100 ] " to " 20 , 20ms " to
[ mng - 6241 ] warn about miss project expression in profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future feature additions
added zoom functionality to handle back button events in ShareActivity to improve user experience by allowing quick navigation through zoom - out
added a condition to skip deprecated fields when reading and ignoring deprecated fields to improve handling of deprecated fields during JSON processing
added animation functionality for displaying and hiding the send view in the LauncherFragment to enhance user experience by providing visual feedback during floating - compose
updated method call syntax for readTokenStorageFile in Utils . java to improve code readability and maintainability
added progressable parameter to several methods in Utilities , PTFRowContainer , HiveBinaryOutputFormat , and HiveIgnoreKeyTextOutputFormat to
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
remove contributions from the panel and update its ordering and colors in the ContributionListPanel to ensure the panel updates correctly when a new contribution
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and removed the ` @ Component ` annotation to improve clarity
added a check to set dPath to the user ' s home directory if it is empty to ensure dPath defaults to the user ' s
defaultaudiosink : set default sample rate to 48000 if no sample rate be specify
log4j2 - 1343 add method mapfilter . filter ( mapmessage ) . filter ( mapmessage ) . filter ( map
rename VerificationInOrderWithCallsTest . java file to improve clarity and consistency in naming conventions
change axis reference from ' axis . z ' to ' axis . x ' in Quaternion . java to ensure correct axis positioning for quaternion
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to improve clarity and
add a unit test to verify that the curator work correctly with the new connectionstatelistener
fix # 5355 - fix documentation for ` ` null ' ' and ` ` null ' '
refactor one - handed mode support checks to use a boolean variable instead of direct calls to SystemProperties to improve code readability and maintainability
added onDetachedFromWindow method to manage running tasks in AppsCustomizePagedView to ensure proper cleanup of running tasks when the
lucene - 5356 : morfologik filter can accept custom dictionary resource .
replaced the count increment logic with a thrown flag in ResultSetTest . java to ensure that the test accurately reflects exception handling behavior
update initialization message to use an empty string instead of " debug " to improve clarity of project initialization messages
replaced AtomicReference with AtomicBoolean for preventing locking , locking , and MVCC anomaly detection in AbstractPhenomenaTest .
refactor tooltips handling in ComponentTree and ComponentTreeRenderer classes to improve code readability and maintainability by consolidating tooltip text logic
increased the await duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the await operation to
deviantart ripper now honor config ' deviantart . username and ' deviantart . password '
refactor Google package key constants and update method names for better clarity to improve code readability and maintainability by standardizing naming conventions
updated method call from ` solutionBusiness ` to ` createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtleTest .
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes in the application
add email description to the email output in EntityGroupKeyContentFormatter and set a default description in TestEntityGroupKeyEmailContentFormatter to enhance
replaced ` remove ( sel ) ` with ` data . remove ( sel ) ` in the ` UserData . java ` file to ensure the
refactor language retrieval logic to handle empty language strings and improve error handling to enhance code robustness and provide clearer error messages for invalid language
refactor change log parsing and update visitor creation in Liquibase . java to improve code readability and encapsulate the creation logic for
added a check to return early if the screen pinning is active in OverviewCommandHelper . java to optimize performance by avoiding unnecessary processing
added functionality to set and retrieve no chart data text in Chart . java to improve user experience by providing clearer feedback when no data is available
replaced calls to ` checkValid ( ) ` with ` checkHeadWritten ( ) ` in Http1xServerResponse . java and Http2
refactor chunk handling logic in NettyResponse . java to improve code readability and maintainability by reducing duplication
added " : scheme " header and updated header limits and limits in Http2TestBase , TestHttp2Limits , TestHttp2Section _
fixed - redissonlocalcachedmap . putall ( ) method throw npe if localcachemode . storemode = localcache #
camel - 16400 : camel - jpa - allow to inject component into jpaendpoint . thanks to benjamin
updated the variable name from fallSpeed to jumpSpeed in PhysicsCharacter . java to improve clarity and consistency in naming conventions
added a condition to check if reparsedFunction is null when no syntax extensions are present to ensure proper handling of functions when reparsedFunction is
renamed variables and variable names for consistency and clarity in BitstampPusherService . java to improve code readability and maintainability by
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient to encourage the use of updated URI methods instead of deprecated ones
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to
camel - 16400 : camel - juel : add assertion to check if a string expression can not be parse
added bounds checking for alpha value in RecentsView . java to ensure alpha value is within the valid range of 0 to 1
updated the string replacement syntax for the import - package attribute in ManifestReversion . java to ensure proper formatting of the version attribute in the import
refactor DataSyncConfiguration to improve code readability to enhance maintainability and facilitate future feature additions
added import for JavaSnippetRepository and initialized JavaSnippetRepository in JavaLanguageServer to facilitate snippet management and ensure proper initialization of the
refactor the condition for updating sums in StarTreeRecordStoreCircularBufferImpl . java to improve clarity and maintainability of the code
danielwagnerhall : use http : / / github . com / chromedriver / chromedriver / issues /
( chore ) camel - pg - jdbc : use preparedstatement instead of raw sql
updated import statements from ` com . sun . syndication . syndication ` to ` com . rometools . rome .
added content - length header handling in TransferCompletionHandler and modified NettyAsyncHttpProvider to use FluentCaseInsensitiveStringsMap for header management to
refactor Dialog class to improve code readability to enhance maintainability and facilitate future feature additions
removed the constructor from the EnhancedRuntimeException class to simplify the class initialization by eliminating unnecessary parameters
fix intermittent failure in socketappendertest on macos
( chore ) camel - core : remove unused eventadminendpointbuilderfactory from camel - dsl
updated method signatures and exception handling in ByteArray . java to ensure compatibility with JDK8 and improve error handling clarity
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unintended
camel - 6770 : camel - restlet - remove @ ignore from camel - restlet
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature by eliminating unnecessary parameters
move module - info . java from ` com . hazelcast . test ` to ` com . hazelcast . test . modulepath ` (
added a new method ` getSourceDirs ( ) ` in ` JavaServerConfiguration ` and modified the ` getCompiler ( ) ` method to include
removed visibility control for the " open web " menu item in TweetPager to streamline the user interface by eliminating unnecessary menu items
updated method names from ` nodeIsAncestorOfItself ` and ` nodeIsDescendantOfItself ` to ` nodeIsNotAncestorOfIt
updated y - coordinate calculations to use Math . max for negative values to improve robustness by preventing negative values from being processed
updated the ` selfCheckDataTypes ` method to handle ` PathNotExistException ` and improved error handling for data type mismatches to enhance
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ stream ] expose mailboxexecutor in abstractstreamoperatorfactory
hbase - 21756 allow settablestateinmeta and fixmeta to be call in securetestutil . testaccesscontroller ( #
updated method reference syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and provide clearer output information
updated BlockJUnit4ClassRunner constructor to use getJavaClass ( ) instead of getTestClass ( ) to ensure compatibility with the current class structure
[ drools - 7 ] use lasttimedata instead of remoteitems when delete a rule
adjusted calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout spacing for better user interface
[ hotfix ] [ core ] add ' org . slf4j . slf4j . org . apache . flink .
updated references from ` doc ( ) ` to ` this . doc ( ) ` in BooleanScorer2 . java to ensure consistency in accessing
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for improved performance
hhh - 14613 make session . close ( ) return void instead of connection . close ( )
refactor GetLocations class implementation to improve code readability and maintainability
updated exception handling logic in SchemaValidatorTask . java to check for null before printing to improve error reporting clarity and reduce unnecessary console output
modified the catch block to handle a broader range of IOException to improve error handling by ignoring specific exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and improve compatibility
ruby flavor : fix ` ` repeat ( ? ) ' ' syntax error
changed log level from warn to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove the usecaches option from the nio2endpoint
updated CasGeoLocationConfiguration to use Resource instead of MaxmindProperties and refactored database reading methods to improve flexibility in managing database
update instructorfeedbackresultspageuitest . html and instructorfeedbackresultspageuitest . html to reflect new view name
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance optimization checks to exclude raw scans from the
changed method visibility from public to package - private for several methods in the ApprovalStore and ApprovalsControllerService classes to restrict access
added a boolean flag to track if the download has started and cancel the download notification if it has already been started to improve user experience by prevent
replaced the method ` getOpenView ` with ` getAnyView ` in ` AbstractFloatingView ` and modified its logic in ` Taskbar
updated project version from " 1.0 . 11 " to " 1.0 . 13 " and modified copyright year from 2008 to 200
replaced instances of ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistency in
refactor GsonBuilder class for improved serialization handling to enhance performance and maintainability of JSON processing
fix a potential npe in the prover botana ' s method .
remove espresso home option for java on truffle ( espresso )
doc : fix javadoc warning in ctqueryable ( # 3642 )
made the ` DeleteSessionAction ` class final and removed the ` deleteSession ` boolean variable to enhance encapsulation and simplify session management
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to improve code read
initialize ` sz ` to 0 and modify result handling in ` JoinQParserPlugin . java ` , ` SolrIndexSearcher . java `
added a file parameter to the triggerMediaScan method call in FileDownloader . java to enhance media scanning functionality by associating the file with
removed conditional logic for posting test results in TestRunning . java to simplify test result handling by eliminating unnecessary verbosity checks
added methods to set custom G - code text in MainWindow to enhance user experience by allowing custom G - code settings
replaced PrintWriter with BufferedWriter in AdditionalJaxbMappingProducerImpl . java to ensure proper encoding when writing to the output stream
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added imports for SolrTestCaseJ4 and resetExceptionIgnores in TestBadConfig . java to handle system property unsetting during tests
added a method to remove fragments and the action bar in GpsMainActivity to improve UI responsiveness by hiding the action bar when
updated spanish token lists from " = RRB = " to " ( " , " ) " in TokenizerAnnotatorITest . java
updated RemoteMediaHandler and RemoteRawHandler to use Range . Byte instead of Range . create ( ) and Range . asByteRange ( )
updated the gcode file path and improved debug output formatting in VisualizerCanvas . java , and modified GcodeViewParse . java to
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " and
updated formatting in assertion methods in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain
added a null check and initialization for the output stage in StatementResource . java to ensure proper handling of query execution when the output stage is not
fix integritycheck fail with ` ` file : / / link do n ' t exist ' ' error
removed unused import and private Map < String , List < SolrClient > > shardToClient in ChaosMonkey . java to stream
added null check for fas before accessing its properties in ConfigurationActivator to prevent potential NullPointerException when fas is null
removed unnecessary whitespace in the NestedRepositoryTreePanel . java file to improve code readability and maintain consistency
changed the constructor visibility of ExtensionTypeHeader from package - private to public and added a constructor with validation to ensure the extension type is within the
pdfbox - 4892 : remove unnecessary catch block , a suggest by valerybokov
camel - prometheus : make pushonshutdown = true / false pushonshutdown = true / deleteonshutdown = false
added a trigger callback parameter to the handleEvent method and improved error handling in the ReactiveStateMachineExecutor to enhance error management and provide context
added a test to verify that Python executables are correctly set on the first path in the temporary folder to ensure that the correct executable paths are
added a default button to the root pane in InitialAccountRegistrationFrame . java to enhance user interface by allowing the signin button to be displayed
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging messages in RegistrationRestRepository . java to improve clarity of error messages for better debugging
move reflection - related class to org . axonframework . util instead of org . reflection . util
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created a new test class ` Oid
removed the ' center ' variable from multiple Circle , Ellipse , Polygon , and Rectangle classes to streamline the code by eliminating unnecessary
updated conditional logic in RegisterAndProcessBundleOperation . java to ensure proper comparison of pcollection names to avoid potential null pointer exceptions
refactor SslContextFactory to improve SSL connection handling to enhance security and reliability of SSL connections
updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations instead of hardcoded 5000 to ensure tests reflect the correct default maximum expectations and log
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific error message for access confirmation issues
added a new file ` ConsumerClassLoaderFilter . java ` and updated ` ReferenceConfigTest . java ` to use the current thread ' s context
modified the ` shiftRows ` method to include additional parameters for copying row height and resetting original row height to enhance functionality by allowing flexible row
replaced instances of ` setRolloverIcon ` and ` setRolloverPressedIcon ` with ` setRolloverPressedIcon ` and `
updated methods in TaskViewUtils , TaskViewSimulator , RecentsView , and RecentsView to improve handling of grid translation
refactor assertions in Assertions . java to improve code readability and maintainability
added null checks and return statements for currentDateTimeFunction in multiple database classes to ensure consistent handling of current date - time functions across database implementations
added a new method ` anonymousPath ` in ` IOUtils ` and updated ` Log4jUtils ` to utilize it to improve path handling
updated the ` call ` method in ` DigitalWellBeingToast ` to include a ` contentDescription ` parameter and modified the
[ hotfix ] [ table - planner - blink ] make sure timeout be less than 50
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
update genericitem to use stateconverterutil . defaultconversion ( ) instead of null .
added integration tests and a new PostDTO class in BidirectionalOneToOneNPlusOneTest . java to enhance testing capabilities for post retrieval
remove extra empty screen from workspace and update startSearchPageIndex to handle empty workspace screens to improve user experience by ensuring the search page
optimized the initialization of ` baseDerivedRefs ` and ` HashSet ` instances and added null check in ` IndexedValueMap ` to improve performance and
updated string literals for setting values in GoogleLineChart and GooglePieChart classes to ensure consistency in string formatting for better readability
refactor batch handling logic in SendingAccountor . java to improve clarity and efficiency in batch processing
hbase - 22766 add position option to walprettyprinter to seek to the end of the file
changed the port number from 1 to 0 in the NettyTransceiver instantiation to ensure that the transceiver does not attempt to connect
sort the start time of the event before generate the report to ensure that the generated report is sorted by the start time
added a test to ensure that the CSVLine logger correctly returns a CSV line with an escaped quote to ensure proper formatting of the CSV output for
minor refactoring to make it easy to run coref - related test
do n ' t send iq message for non - remote recipient .
removed the @ JniImpl annotation from the VM class to enable JNI implementation for improved performance
updated the calculation of ' last ' and modified configuration settings in Fetcher2 . java to improve clarity and maintainability of the code by
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java and removed
updated package names from " other _ package " to " other _ package2 " in the test assertions to reflect the new package structure and ensure
fix ` setworldborder ( ) ` and ` resizeworldborder ( ) ` in ` worldborder `
hbase - 20519 hmaster . getwalgroupsreplicationstatus ( ) should return empty map if master can not host user region
make sure we do n ' t remove the user from the view when the user click on it
updated RoutingTableTest to utilize a dynamic instanceConfigs list instead of a static ArrayList to improve flexibility and maintainability of the routing table
changed the access modifier of the FieldAttributes class from package - private to public to allow access to FieldAttributes from other packages
added a test for reading erroneous Maven project references in ProjectBuilderTest . java to ensure that the ProjectBuilder correctly handles missing dependencies and
simplified the conditional check for oldProto and protoGetSwitches in PropertyMap . java to improve code readability and maintainability by
updated the ` getControllerId ` method to accept a nullable ` configId ` parameter across multiple classes to enhance flexibility in retrieving the controller ID
replace sessionFactory . close ( ) with session . close ( ) to ensure proper resource management and avoid potential memory leaks
removed the check for ` service . isGenerateRefreshToken ( ) ` in the consent approval condition to simplify the conditional logic for better readability
removed a debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with a custom NoopGetter implementation in BaggagePropagation . java to improve code readability and maintainability by
refactor conditional logic in ConditionalOnEnabledResourceChain . java to improve resource management efficiency
added a condition to check if the treeRoot has children in BarrowmanCalculator . java to ensure that the treeRoot is not empty before
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated log messages to include " CN1 " prefix and enhanced intent result handling in FacebookImpl . java to improve logging clarity and ensure proper
updated the return value of the ` getBestDateTimePattern ` method to use a dynamic skeleton instead of a hardcoded " h : mm a "
removed KeyguardManager dependency and simplified the condition for checking device lock status to streamline code and improve readability by eliminating unnecessary checks
server : fix npe when set default disk offering for custom volume
replaced FileChannel with AsynchronousFileChannel and added position tracking in UtowBodyHandler . java to enhance asynchronous file handling and ensure accurate position
removed unnecessary try - catch blocks from signal handling methods in SigInt and SigIntTest classes to streamline code for better readability and maintain
[ web ] remove unused method in drawtext ( )
change return value from - 1 to 0 in Asset . java to correct the logic for asset processing
refactor ComputeBenchmark to use Callable and Function for improved performance and flexibility to enhance code readability and maintainability by using descriptive
added a refresh listener to the UploadListFragment to notify data changes to ensure that data is updated when the fragment is refreshed
change file handling in bibdatabasecontext to use path instead of file . tofile ( )
refactor emitters array access to use get ( i . e . , ParticleEmitter ) instead of items [ i . e . ,
refactor tomcat to use findservices ( ) . findchildren ( ) instead of getservices ( ) . findchildren ( ) .
updated error messages in Console . java and BuildRuleFactoryParams . java to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING in PlaybackController . java to optimize performance by avoiding unnecessary
replaced the use of ` findByPK ` with ` findById ` in ` DeleteServiceTest . java ` to simplify the code and improve read
refactor Java2TypeScriptTranslator and introduce InnerClassFieldClash for better inner class field handling to improve code clarity and ensure
added logging and follow redirect filters to DockerClientFactory and DockerClientProfile to enable customizable logging and redirect behavior in Docker configurations
replaced direct call to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure thread
hhh - 10183 fix test failure on sql server 2008
added a call to ` revert ( ) ` in ` OPCPackage . java ` and improved resource management in ` ZipHelper . java
changed the access modifier of the ` storeClassFile ` method from private to public to allow access to the method from other classes
updated the assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues
updated error messages in CGIHandler . java and added a start method in JavaVM . java to improve clarity of error messages and enhance
added support for additional newline characters in the LineReaderImpl class to ensure proper handling of line endings in the input string
changed method parameters and variables from List to Set in multiple classes to improve performance and ensure immutability of hash codes
add a check to return early if there are no vertices in the mesh to optimize performance by avoiding unnecessary processing when there are no vertices
renamed the method ` shouldUseArgumentTypeWhenOverloadingPuzzleDetectedByVerificationInOrder ` to ` shouldPrintArgumentTypeWhenOver
replace ` FileUtil . createData ( ) ` with ` FileUtil . createFolder ( ) ` in ` MacroService . java ` to
truffle : remove unused import from typesystem . java
refactor JsonObject class to improve data handling to enhance performance and maintainability of JSON processing
updated idle timeout condition in SelectChannelEndPoint . java and modified logic in HttpConnection . java to ensure correct idle timeout handling and improve resource management
fix farmlandblock . cansustainplant not work for custom plant . close # 3640
added multi - tenant table support and updated related tests in QueryDatabaseMetaDataIT , ConnectionQueryServicesImpl , and UpgradeUtil to enhance database metadata
updated SimpleDateFormat to use Locale . US in HttpCookie . java and added a new class B6791927 . java to ensure consistent date
removed multiple redundant calls to db . close ( ) in DbHelper . java to streamline code and improve resource management
increased the timeout duration for processing messages from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow more time
[ gr - 16536 ] add trace support for allocation stage .
fix save button do n ' t work for save _ database and save _ all
refactor ObjectMapper initialization to use a static block to ensure consistent line separator handling across different operating systems
update path handling in NativeEnvironmentRepository to ensure consistent path formatting across different operating systems
replaced instances of ` Application appTest ` with ` Application appT ` and added a ` prepare ` method to ensure proper resource management and
[ java ] remove unused recordinglog . validateexistinglog method from consensus module .
fix integration test : use errorgroup instead of groupname
remove test that do n ' t work in travis
added a private boolean variable ` reverseImage ` and updated its assignment in ` CameraManager . java ` to streamline the code by elimin
updated string comparisons to use ` . equals ( ) ` instead of ` . equals ( ) ` for better readability to improve code clarity
fix mdmmmatchlinkservice ( # 4353 )
updated JUnit imports from ` org . junit . public ` to ` org . junit . jupiter . api ` in `
performance improvement : use string . indexof ( ) instead of new arraylist ( )
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future feature additions
added LocalDateTime and TimeZone imports and modified triggerTime setting in AbstractAlertNotifyHandler to improve date formatting for better accuracy in alert notifications
added a new method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for creating ` AbstractMethodError ` instances to
camel - 16400 : simple language should not fail if the expression start with ` ` ? ' ' or ` ` [ ' ' .
removed an empty check for ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - 16465 : camel - jclouds - use copy to copy inputstream to avoid leak
camel - 16462 : camel - test - infra - maven - plugin to generate spring - boot tooling metadata for camel - tool
added a check for the ACC _ STRICT access flag on the default method in the Check . java file and created a new test class
[ java ] increase timeout for channelvalidatortest to avoid flakiness .
added a new file ` FileExtensions . java ` with constants for C++ file extensions to provide a standardized way to specify file extensions for
replaced the implementation of ` ThreadLocalDateFormat ` with a static final instance of ` ISO8601CanonicalDateFormat ` and updated the initialization method to
8274892 : remove deprecate vmdeprecatedoptions . usecgroupmemorylimitforheap
added displayName and displayName properties to Pac4jBaseClientProperties , enhanced DefaultDelegatedClientFactory , and DelegatedClientIdentityProviderConfiguration to
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing specific exceptions for early termination scenarios
removed unnecessary whitespace in the apply method call to improve code readability and maintain consistency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5952 -
fixed npe in forgeeventfactory . getcapabilities ( ) when parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by focusing only on relevant exceptions
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the service is outdated and should not be used in new code
updated variable names for clarity in HyphenationTree . java to improve code readability and maintainability
add a very small delay before close the connection once an account be remove .
add the ability to register custom image in the simple account registration dialog ( issue # 241 )
updated the description of the constant PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to clarify that
added a new boolean variable ` providersChanged ` and set it to false in ` ConfigurationManager . java ` to track the state of provider changes
added a method to handle quoted tokens in the TokenRewriteStream to ensure proper formatting of identifiers when quoting is enabled
added a check for null name in FileSystemFontProvider and handled missing ' name ' entries to ensure proper handling of missing ' name ' entries in
updated type casting and removed unchecked warnings in SolrResourceLoader . java to improve type safety and eliminate unchecked cast warnings
modified the condition for hit detection in the Window class to improve accuracy of hit detection logic
added a null check for appManifest before retrieving its target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to use a new method for adjusting configuration metadata and implement Serializable in CasConfigurationMetadataCatalog to improve code clarity
added userName property and its getter / setter methods to the HiveSemanticAnalyzerHookContext and HiveSemanticAnalyzerHookContextImpl classes to enable
added setter methods for transformer source , URL , and input stream in XsltBuilder , and modified XsltBuilder instantiation in XsltComponent to
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , and DefaultHadoopShim to enhance compatibility with Tez ' s
updated variable assignments in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve code clarity and eliminate unnecessary variable
fix a nullpointerexception in getmappingdata ( ) when the context be null
( chore ) camel - core : fix the flaky test of throughputlogger
updated debug checks in CompilerConfigFileWarning . java and ConfigFileWarning . java to use Platform . isDebugBuild ( ) to improve code readability and
replaced the usage of ` MeterStatisticsManager . statisticsOperationMap ` with a new ` statisticsModelMap ` in multiple files to streamline
replaced direct system property retrieval with a method to resolve system properties to improve code readability and maintainability by eliminating unnecessary console output
added @ NotNull annotations to method parameters and renamed the DefaultCookieValueManager class to NoOpCookieValueManager to improve null safety and clar
replace BASH _ ESCAPER with SHELL _ ESCAPER in ExecutableMacroExpander and ShellStep classes to improve command
refactor container initialization to use try - with - resources for better resource management to ensure containers are properly closed to prevent resource leaks
rename the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate shield addresses in RpcApiService to enable asynchronous processing of shield addresses in the API
changed return type of readConsoleInput ( ) from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal
updated regex patterns in TestStabilityRule . java and changed sRunFlavor initialization to use PLATFORM _ PRESUBMIT to
updated DefaultSolrHighlighter to adjust mvToMatch for multi - valued fields and added a test for preservation of multi - valued fields to improve
modified the ` tryToLogin ` method to accept a ` Uri uri ` and a ` username ` and ` password ` parameters to enhance the
refactor entity handling in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp . java ` to
( chore ) camel - jms : fix checkstyle issue
removed ` wrapCollection ( parameter ) ` from the ` update ` method call in ` DefaultSqlSession . java ` to simplify the method signature
added support for handling IllegalCurrencyException in BTCEAdapters . java to improve error handling and logging for unknown currencies
fix for http : / / issues . apache . org / activemq / browse / amq - 2370 - fix demand subscription
pdfbox - 4892 : set minimum tolerant to 0.5 a suggest by valerybokov
updated the ` startController ` method to accept a ` useTenantIsolation ` parameter and added new methods for creating broker and server tenant data to
simplified the return statement in HasSettings . java to improve code readability and performance by directly returning the response value
added a check to ensure the size of the attrs is greater than or equal to 4096 to prevent potential NullPointerExceptions when accessing the size of the
added abstract methods for retrieving JDK name , type , and language level in ` AbstractIjProjectConfig ` and refactored related classes
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and
added tests for resolving acls for scott with user details in GrantedAuthorityEffectiveAclsResolverTests to ensure correct functionality of the resolver
use solvedjavalangobject ( ) instead of reflectionclassdeclaration . new ReflectionClassdeclaration ( object . class )
added functionality to limit the number of buttons available in XToolkit to a maximum of 24 to ensure that the system does not exceed the defined
updated import statement for assertEquals from jdk . testlibrary to com . oracle . java . testlibrary to ensure compatibility with the latest testing
refactor MessagePack and MessagePacker classes to introduce a new MessagePackFactory class with multiple overloaded constructors to enhance flexibility and
add is _ desert and is _ cave tag for biome and item tag . close # 3560
rename method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
added conditional checks and UIID assignments for group elements and toggle buttons in the ComponentGroup class to improve UI responsiveness based on horizontal and
replace ` DOI _ URL _ PATTERN . matcher ( identifier ) ` with ` matcher . matches ( ) ` in ` DOIServiceImpl
replace ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLock
[ java ] use close for commit position counter in clustered service agent .
# 139 - add example for insert and update a user site ( # 139 )
refactor HttpConverterRegistrar to handle malformed URLs and port resolution more robustly to improve error handling and provide clearer error messages for invalid port
api : fix npe in listvirtualmachines api when listvirtualmachines api return capacity _ type _ storage _ already in the list
replaced the method ` openInput ` with ` fileLength ` in ` NRTCachingDirectory . java ` to improve clarity and functionality
updated JavascriptCompiler to use the new package structure and improved exception handling to enhance code clarity and maintainability by using a more descriptive
removed the synchronized modifier from the store method in UISettings . java to improve performance by reducing synchronization overhead
added a conditional check for native text input in TextField . java and changed the access modifier of fireDataChanged method from private to public to enhance
spannerio : improve error message when emulator only support one transaction at a time
simplified generic type declarations in multiple Java files to improve code readability and reduce redundancy
modified the condition in ObjectInputStream to handle short arrays instead of double arrays to ensure correct cloning behavior for different object types in ObjectInputStream
updated nonce retrieval from ` getClaim ( ) ` to ` getStringClaim ( ) ` and improved error handling for replay attack detection to enhance
added a condition to return true for relationship fields in DCInputSet to ensure proper handling of field relationships in the input set
added server slogan functionality to the file storage manager and updated related classes to enhance server slogan management and improve code clarity
refactor menu item comparison logic in DrawerActivity . java to improve readability and maintainability of the code
replaced fail ( ) with assumeNoException ( ) in SolrRequestParserTest . java to ensure the test only runs when a network connection
added a check to return early if there are no missing symbols to improve performance by avoiding unnecessary processing when no symbols are available
added a new column " 5 - 4 " and modified string formatting in StringHelperTest . java to include a new column ' 5 - 4 '
added a warning log for cases where the data provider returned an empty array or iterator to ensure that the test is not executed when the data provider
replace collections . empty _ list , collections . empty _ map , collections . empty _ set , and collections . empty _ list with collections .
update freeplane version to 1.9 . 8 and add selection style model check
update parameter name from mass to restitution in setRestitution method to improve clarity by using a more descriptive variable name
added a new file ` AutoFtpActivity . java ` and modified ` FtpHelper . java ` to use ` IActionListener `
refactor token handling in BaseSemanticAnalyzer to use a local variable for token type to improve code readability and maintainability by reducing
added methods to retrieve and set component state in multiple classes to enhance functionality for managing component state within the UI framework
added a new class ` RemoteExecutionEnabled ` and corresponding tests in ` BuildableSerializerTest ` to handle serialization and deserialization of ` Boolean `
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated file reading methods to use InputStreamReader with UTF - 8 encoding to ensure proper handling of character encoding during file reading
added assertion for working score verification in AbstractScoreDirector to ensure that shadow variables are not stale during execution
updated the SEMIJOIN _ CONVERSION configuration from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin
added logging functionality to ignore message content types in various DatagramPacket classes to improve debugging and traceability of message processing
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and modified file retrieval logic in ` File
added assertions to verify the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest class to ensure that the transaction hash is
deprecate isschemaregion # constructschemaBlacklist ( ) and add testdeletetimeseries ( )
throw a renderer exception if the samplemimetype be null .
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to ensure that
added a check to prevent creating an index on a view in MetaDataClient . java to ensure that index creation is only allowed for view types to
added a new class ` Website ` and updated ` PopulatorImplTest ` to include a test for its functionality to ensure that the `
added a setup method to set the default locale in BSFormatterTest to ensure consistent locale settings for tests
add some logging for badly download jar file .
replaced ` containsString ` with ` equalToIgnoringCase ` in ` MultiPartParsingTest . java ` to improve readability and ensure
added checks for single parameter and variable expression tokens in SimpleExprGenerator to ensure proper handling of variable expressions during analysis
added a volatile boolean variable ` createdVertx ` and modified the condition to check if ` vertx ` is created before proceeding to ensure
updated writeAttributes calls to include the node object instead of null to ensure proper handling of user objects during attribute writing
updated log messages to use " Synchronized " instead of " Synchroned " and added null checks for file retrieval in FileDisplayActivity to improve
added a new boolean property ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` Feed
replaced MavenTestingUtils . getTargetDir ( ) with MavenPaths . targetDir ( ) in multiple files to streamline resource path resolution and improve
added validation for URIRegisterDTO and MetaDataRegisterDTO in RegisterServerConsumerExecutor . java and removed redundant list processing in URIRegisterExecutorSubscriber .
updated the logic for determining if the audio is playing in GwtMusic . java to ensure that isPlaying is accurately reflects
added a new permission for admin area sudo in MainCommand . java and introduced a new constant in Captions . java to enhance permission checks for
updated query options handling in ` ServerRequestPlanVisitor ` and modified test cases in ` QueryRunnerTest ` to include trace functionality to enhance query
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
refactor assertions in ResourcesTest to use named variables for emoji and text attributes to improve readability and maintainability of test cases
replaced the method ` NMTWaitForDataMerge ` with ` NMTOverflowHashBucket ` and ` NMTMallocWith
[ flink - 20519 ] [ core ] introduce javasemplateserializersnapshot for either serialization
updated AddressResolverOptions to use default NDOTS and NDOTS _ RESOLV options instead of hardcoded values to improve flexibility
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a test case in ` RequestR
pdfbox - 4071 : avoid npe , a suggest by valerybokov
updated file paths from " liquibase / parser / core / xml / " to " www . liquibase . org /
move commonMIMETypeLocator from api . source to api . test . source and move it to test . source
changed the default value of ` repoState ` from ` INIT ` to ` NOT _ REQUIRED ` across multiple classes to align the state representation with
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to enhance the comparison capabilities for change log generation
updated JUnit test imports from JUnit to TestNG in TestBackwardAnoamlyFunctionUtils . java to ensure compatibility with TestNG
added a new file ` ProgressiveJPEGTest . java ` that implements a test for progressive JPEG rendering to enable testing of progressive JPEG
replaced the alpha test settings with a new alpha discard threshold and updated the handling of material - related variables to improve the clarity and functionality
improve error message for unsupported native - image build on window
added a null and length check before setting the size in Label . java to avoid potential NullPointerException when text is null or empty
modify readVarInt ( ) to use division by 1 _ 000 _ 000 instead of multiplication by 1 to ensure proper handling of integer values in
changed ` PushUtils ` , ` ThumbnailsCacheManager ` , and ` PushUtils ` classes to be ` public final class ` and added
simplified the calculation of the length in RocketPanel . java to improve code readability and reduce unnecessary complexity
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code by eliminating unnecessary casting
updated the file path for loading presets in Startup . java to ensure the correct file format is used for loading presets
updated accessibility announcement logic in TaskbarStashController and modified SDK version checks in InvariantDeviceProfile and FloatingIconView to
replaced ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) ` in ` home
pmd : add support to target both jdk 1.5 and jdk 1.3
replaced PowerMockito with MockitoJUnitRunner in QuotaResponseBuilderImplTest . java to improve testing framework compatibility and leverage
added standard output and error stream handling in TestSchemaToolCatalogOps . java to enable better management of system output and error streams
added a DFSClient parameter to the SaslNegotiateHandler methods in FanOutOneBlockAsyncDFSOutputSaslHelper to
updated MongoQueryMethod and MongoRepositoryFactoryBean to include RepositoryMetadata as a parameter to enhance query resolution capabilities by utilizing repository metadata
refactor : add support for entityresolver2 to allow property replacement .
removed duplicate import statements for various byte constants in MetaDataEndpointImpl . java to streamline code and improve readability by eliminating redundancy
updated the ALLOWED _ REPEATED _ DEADLOCKS value from 5 to 10 and added a retry interval for deadlocks in Txn
renamed variable ` xl ` to ` xAxis ` in ` BarChartActivity . java ` and set ` leftAxis ` start at zero in
added methods to check if a character is printable and validate system names in FsUtils . java to enhance character validation and ensure only valid system names
rename method ` ` in ' ' to ` ` using ' ' in selenide . java
do n ' t process plugins if they do n ' t exist .
fix integer division bug in proxyconnectionmanager , trafficcounter , and proxyconnectionmanager
fix integration test to work on window
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Auth
[ ds - 3642 ] add admin permission to community list servlet
added thread counter for long and short compaction threads in ThreadPoolExecutor to improve thread naming for better debugging and monitoring
updated the package name retrieval method from ` getApplication ( ) . getPackageName ( ) ` to ` getResourcePackageName ( ) ` to improve resource management by
refactor player visibility retrieval in Near . java to use a dedicated method to improve code readability and maintainability by encapsulating player visibility
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
rename MlibOpsTest . java file to improve clarity and consistency in naming conventions
[ gr - 33232 ] avoid hard - coded ` ` com . sun . management . internal . operatingsystemimpl ' '
updated the attribute name from " ReferencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test for buildable
removed Base64 encoding checks for encryption keys and iv in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary
add stability annotation for workprofiletest ( # 243688989 )
removed conditional check for bucketing version in TezCompiler . java to streamline processing by eliminating unnecessary checks
replaced ` setCursorPosition ` with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure the cursor
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced new classes ` LockFreeBucket _ FinalFields
nodeprobe : add ' tpstats ' to the list of available command . patch by jbellis
updated bitrate retrieval in ExternalPlayerActivity and PlaybackController to include user preferences to ensure bitrate settings are accurately applied based on user
refactor ZipkinHttpSpanExtractor to introduce new methods for handling trace and span IDs to improve code readability and maintainability while ensuring
move getuserpaymentaccounts ( ) to abstract class to allow subclassing
do n ' t use reflection to get the right alignment of the suggestion element ( # 5449 )
added a method to set the project in the file system to ensure the application uses the correct project context
updated JsBundle , JsBundleBuilder , JsLibraryBuilder , and JsTestScenario to utilize ProjectFilesystem for improved filesystem management to enhance
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
refactor MetricsDSLContext class structure to improve code readability and maintainability
removed the VersionConfig interface and replaced its implementation with ImmutableSet in VersionBuckConfig to simplify the class structure and improve immutability of un
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve robustness by avoiding potential
changed the access modifier of the ` validateTypes ` method from static to public and updated the error message in the ` validateTypes ` method to
fix : update gapic - generator - java with mock service generation fix ( # 136 )
added logging functionality using SLF4J Logger in SimulationStatus . java to enable better debugging and monitoring of simulation status
updated VERSION _ POSITION _ Y and VERSION _ FONT values in Splash . java to improve the visual appearance and consistency of the application
refactor notification addition to run on the Event Dispatch Thread to ensure notifications are added on the Event Dispatch Thread for better UI responsiveness
updated mock implementation in AdditionalAnswers and ReturnsElementsOf classes to improve test coverage and ensure correct behavior of ReturnsElementsOf
updated error message in ErrorMsg . java to clarify that " drop partitions for non - string partition columns is only allowed using equality "
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the functionality of ` LineFileDocs
added a method to retrieve the version code in MainApp and updated references in FeatureList and WhatsNewActivity to use this method to improve
camel - 16462 : camel - bean - allow to use bean with explicit parameter type . thanks to daniel for the patch
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java `
added bufferOwned flag and modified disposeUnsafeByteBuffer calls in IndexBufferObject and VertexBufferObjectWithVAO to ensure proper disposal of
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by providing a clearer
[ java ] fix typo in jerseyclientconfiguration javadoc .
int - 1930 : remove the class reference to characterstreamreadingmessagesource and characterstreamwritingmessagesource from the namespace definition .
updated variable names from ' s ' to ' o ' in InstanceOfPatternMatchTest . java and RemoveRedundantTypeCastTest . java
added methods to check for empty arrays and adjusted column and row counts in StringDict and Table classes to improve handling of empty arrays and ensure proper
deprecated multiple @ Deprecated annotations and implemented AutoCloseable interface in GenericContainer to enhance resource management and allow customization of container commands
updated logging level from info to error in MediaInfo . java and modified exception handling in RendererConfigurationTest . java to improve logging severity for better
added support for a schemapattern option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance configuration flexibility by allowing specification of
do n ' t throw nullpointerexception when id be null .
refactor calculations for width and height in AndroidGraphics . java to improve readability and maintainability of the code
refactor Base64 encoding methods for improved performance to enhance efficiency of data encoding operations
sulong : add miss get ( ) and setfallback ( ) for i64 - managed single context .
simonstewart : unignoring test that pass on iphone
refactor FlowBuilder and FlowJobBuilderTests classes to improve code readability and maintainability
replaced ` ResName ` with ` int ` for resource identification in ` AttributeResource ` and ` OverlayResourceIndex ` classes to simplify resource
defaultdockerclientconfig : resolve tls file from context path ( # 1188 )
updated test method names from ` @ After ` to ` @ Before ` in ` SimpleReactiveElasticsearchRepositoryTests ` to improve clarity and
refactor type variable handling in ` ppp Attr . java ` and add a new class ` T6450290 . java ` to
added logging level configuration to LoggingFlags . java and implemented logging level handling in LoggingOptions . java to allow users to configure logging levels for better
added logging statements to LauncherModel , SecondaryDropTarget , and ModelWriter classes and modified deleteItemsFromDatabase method to accept Collection instead of
added ` allFilesOption ( ) ` method implementations in ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity `
added deprecated methods ` forEachOperation ` and ` hasMatching ` to the ` MutationOperationGroup ` interface to prepare for future removal of deprecated features
updated the logic for determining the number of predicted app columns based on the device type to improve accuracy of app selection based on the device ' s
updated String initialization to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added RequestMatchers and RequestMatchersTests classes for improved request matching functionality to enhance the flexibility and usability of request matching in the security
mow - 129 fix for undo and redo in applet
updated calculations in ProgressBar . java to adjust height and width calculations to ensure proper positioning of UI elements based on background dimensions
[ native ] fix json - based - function - manager json file path
changed ` extra _ L0 ` , ` extra _ L1 ` , and ` extra _ L3 ` to be ` final ` and
added a condition to check if the state handler is invalidated in the gesture handling logic to ensure that gestures are only processed when the handler
updated layout metrics calculations in CellLayout and Workspace classes to improve layout handling for landscape and portrait orientations
added a condition to check if the redir ' s file is " / robots . txt " in HttpRobotRulesParser . java to ensure
use static resource instead of hard - coded ` ` warning . png ' '
updated widget subscriptions in AdvancedGameSetupScreen . java from " continue " and " close " to " createWorld " and " return " to
added a null check for the variable ' b ' in UDFOPDivide . java and created a new test class TestUDFO
refactor code for improved readability and add a check for ABANDONED status in the job execution logic to enhance maintainability and
replaced ` filterProcessesUrl ` with ` requiresAuthenticationRequestMatcher ` and ` logoutRequestMatcher ` in ` FormLoginBeanDefinitionParser `
added onDestroy ( ) method to unbind services in ShareActivity and ContributionsActivity to ensure proper resource cleanup and prevent memory leaks
updated references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency in naming and
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a request timeout configuration to the RaftServerConfigKeys class to ensure the request timeout is correctly configured for the Raft server
updated logging level from error to debug in TsFileResourceManager . java and refactored memory management in ResourceManagerTest . java to improve
added a method to set system properties in MavenModuleLoader to enable dynamic configuration of system properties for the model source
added metrics for readiness check success and bad metrics in various classes to enhance monitoring capabilities for readiness checks in the application
fix animatedtorch crash when interact with custom item ( # 2249 )
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing the writer
added a method ` getHiveOnTezConfFromDir ` to ` UtilsForTest ` for retrieving Hive configuration from a specified directory to
added a link to muting users in FeaturesActivity . java to enhance user experience by providing direct access to users
added a property to disable direct method handle usage in the System class to improve performance by avoiding unnecessary method handles
hbase - 20536 use steppingsplitpolicy instead of constantsizeregionsplitpolicy to reduce memory usage
[ flink - 20536 ] [ yarn ] add support for empty plugins / lib folder in yarn deployment
updated method calls from ` getPronunciations ` to ` getWord ` in ` BuildTranscriptHMM . java ` and `
removed unnecessary newline characters from JSON string in JsonUtilsTest . java to improve code readability and maintain consistency in JSON formatting
added extra handling for tweet IDs in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper identification of tweets in the application
[ java ] log a warning when a message listener be terminate due to reliable ring buffer data .
improve error message when no class be find to analyze
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
modified the initialization of the isIncompatible variable in DLNAResource . java to ensure proper handling of incompatible resources
updated the ` createAccount ` method to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and specificity of the
pdfbox - 4892 : avoid arrayindexoutofboundsexception if the range array be empty
http : / / issues . apache . org / activemq / browse / amq - 2636 - fix intermittent
changed the default value of ` enableOffHeapFormat ` from false to true and updated the default star tree format version from " ON _ HEAP
updated the title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to ensure the title does not exceed the maximum length
updated JColorChooser and BasicColorChooserUI to utilize the preview panel from the ColorChooserComponentFactory to improve the handling of the preview
change log level from info to debug for extension checking in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during development
added a null check for reusableBitmap before setting inMutable and inSampleSize in AndroidTileBitmap . java to avoid potential NullPointerExceptions when
added a method to retrieve the layout parameters of a ViewGroup in FakeView . java to provide access to layout parameters for external components
added a check to throw an IllegalStateException if the cursor is already closed in DefaultCursor . java and created a test for it in CursorSimpleTest
pdfbox - 4071 : avoid infinite loop when find a page by type , a suggest by valerybokov
temporarily disable test that fail on ci server
added a private String field ' ts ' with its getter and setter methods in the Message class to provide a way to store and manage the timestamp
added utility class for exception mapping and refactored exception mapping logic to improve code readability and maintainability
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the class from other packages
fix isochrone query with legacy parameter
removed the ` public ` access modifier from multiple test classes to enforce package - private visibility and improve encapsulation
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and maintainability
fix shadowclassloader patcher for lombok . launch . classfilemetadata
[ drools - 5251 ] allow to disable numeric value in xls ( # 3995 )
changed log level from info to debug for default value logging to provide more granular logging for debugging purposes
added null checks and improved controller management in Lwjgl3Controller . java and Lwjgl3ControllerManager . java to
updated ObjectFactory import from cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactory
refactor port forward saving logic in PortForwardListActivity . java to improve readability and maintainability of the code
added functionality to enable or disable snapshotting of Liquibase data in the GlobalConfiguration class to enhance flexibility in managing Liquib
refactor job scheduling logic in SyncedFolderObserver . java to check for null names before scheduling to improve robustness by avoiding unnecessary job
refactor LocationMarshaller class for improved clarity to enhance maintainability and readability of the code
updated touch event handling logic in StatusBarTouchController and modified gesture state checks in TouchInteractionService and OtherActivityInputConsumer to improve touch respon
refactor ` VectorReader ` from an interface to a class and update references accordingly to improve code organization and align with the new implementation structure
updated import statements from ArgumentMatchers to Matchers across multiple test files to align with the latest Mockito API changes
updated method calls to use ` getRelativePath ( ) . get ( ) ` instead of ` getRelativePathName ( ) ` across multiple classes to simplify the
refactor SegmentMapper and related classes to use RecordReaderFileConfig instead of RecordReader to enhance flexibility and configurability of record processing
added a null check for the extractor before instantiating it in ControllerMethodInvoker . java and updated annotations in Param . java and Params . java
volume upload : fix secondary storage limit for account and domain
add ` ` potion shift ' ' event to the gui screensens . close # 3640
added a deprecated constant for COLD _ READS _ TO _ OMIT _ KEY and removed its value from uncheckedOptions to indicate that the
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to ensure proper termination of the leech process
[ issue # 5596 ] add retry label to pop message metric ( # 5597 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added an @ Ignore annotation to the ShadowDateUtilsTest class to temporarily disable the test due to known issues
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references
added upgrade request and response handling in UpgradeConnection , ClientConnectTest , and JettyTrackingSocket classes to enable tracking of upgrade requests and responses
added a timeout feature to the AndroidImplementation class and implemented timeout handling methods to enhance connection management by allowing configurable timeout values
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return lists of permissions instead of throwing an ` IOException ` to
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure the SQL parser correctly handles quoted cast expressions
added conditional checks for file accessibility based on whether the file is a root directory or not to ensure correct file accessibility based on the operating
refactor FixedThreadExecutor to use dynamic properties for configuring thread pools to improve configurability and logging of executor settings at runtime
added null check for the field variable in AbstractChangeGenerator . java to prevent potential NullPointerException when accessing the field
updated event listener references from ` CasEventListener ` to ` InitializingBean ` across multiple configuration classes to improve clarity and consistency in event listener
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added a custom close method to the DeflaterOutputStream class to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` to test system property retrieval in JVMTI to ensure that system properties are correctly
refactor BeanDefinitionInjectProcessor to use concreteClassMetadata instead of annotationUtils for factory , factory , and executable types to improve code clarity and
[ scene2d ] add read / write capability to camerainode , camerainction , and lightnode .
updated the handling of popup window disposal in PopupNotificationPanel . java to improve error logging and ensure proper disposal of the popup window
replaced instances of NoInstanceException and InvalidInstanceException with InferenceException and InferenceException to standardize exception handling and improve clarity
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the feature value for external use
changed the parameter type of the after method from int to long to ensure compatibility with larger timeout values
added ` onBuild ` and ` executionDriver ` fields with their respective getter and setter methods in ` ContainerConfig ` and ` Info ` classes
updated icon display logic in Toolbar and FlowLayout classes to differentiate between right - to left ( RTL ) and left - to -
added support for enabling position increments in StopFilter to improve filtering capabilities based on user preferences
updated EmailsTest and SystemErrorEmailReportTest to use InternetAddress instead of a hardcoded string to improve flexibility and maintainability of
added a boolean variable ` mTryShareAgain ` and set it to false in ` FileActivity . java ` to control the behavior of sharing
added support for dynamic TTY name resolution based on system version in JansiNativePty . java to ensure compatibility with different JVM versions
replaced the usage of ` bytes ` with ` bytesSize ` for bandwidth calculations in ` BandwidthProcessor . java ` to ensure accurate bandwidth
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test reliability by ensuring that the
added a new API base URL constant and refactored related URLs in EaseeBindingConstants . java to improve maintainability and clarity
[ hotfix ] [ test ] increase kafka container startup attempt to 3
use is ( itemName ) instead of allof ( ) in searchresultmatcher . match ( itemname )
added SSL trust management and certificate verification in OkHttp . java to enhance security by ensuring all certificates are checked for trusted connections
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code readability and maintainability by
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of `
added nullable output and error handling for workingDirectory in ShellStep . java to improve robustness by ensuring that workingDirectory is not null before escaping
increase timeout for asyncappendertest from 1000ms to 2000ms
refactor escapeDatabaseObject methods for improved clarity and functionality to enhance the handling of database object escaping to enhance code readability and maintain
added a boolean field to track if the input field has changed and modified the condition to check if the input field ' s text matches the material
added a test for state change handling in ShadowDisplayTest . java and implemented a setState method in ShadowDisplay . java to ensure accurate state management
added directinvocationservice interface and refactored dispatchers to use it .
[ web ] add x and y key to gwt backend ( x , y )
updated SQL query conditions in PgDatabaseMetaData . java to accommodate different PostgreSQL server versions to ensure compatibility with PostgreSQL 9.0 and above
[ java ] add miss @ nullable annotation to message field in queuechannel
updated variable names and URI creation in FileUtils . java for clarity and consistency to improve code readability and maintainability by using more descriptive
added functionality to handle Jenkins nodes in the remote collector to improve monitoring capabilities for Jenkins applications
refactor attribute retrieval in ` HeadersBeanDefinitionParser ` to use a new ` resolveAttribute ` method to improve code readability and maintainability
updated exception handling and logging for malformed edits in ProtobufLogReader . java to improve clarity of error messages and enhance readability of log messages
updated destroyRegistries ( ) and destroyMetadataReports ( ) calls in DefaultApplicationDeployer . java and added shutdown logic in Nacos
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor GoAwayGenerator , GoAwayBodyParser , and GoAwayFrame classes to utilize SPDY API for version
refactor AuditEvent and AuditEventTests for improved readability to enhance code clarity and facilitate debugging
added boundary checks for FLOAT _ ROUNDING _ ERROR in Interpolation . java and changed the return statement to zero to ensure proper handling of rounding
change default folder to / defaults / instead of / defaults /
refactor code to store the executable path in a variable before adding it to the builder to improve code readability and maintainability
added assertions to verify equality of PointRangeQuery instances in TestPointQueries . java to ensure correctness of PointRangeQuery comparisons for different query
hbase - 25958 fix testhfilecleaner to work on window
added a condition to display the file name in the file label based on the download request ' s filename to ensure the file label reflects the
removed exception handling from JedisClusterCommand . java to improve error management and prevent application crashes
[ hotfix ] set default chainingstrategy to always in rowtimeminibatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to enhance URL parsing flexibility
refactor QMap benchmark classes to use HashMap and improve benchmarking logic to enhance performance measurement accuracy and reduce memory usage during benchmarking
added a new HashMap G _ SCH _ B to the HybridPlotWorld class to facilitate the management and retrieval of the
added null and empty checks for fields and refactored identifier handling in GroovyEngine . java to improve robustness and maintainability of the code
do n ' t draw angle in dependent number , make sure it do n ' t flicker
added TCP _ KEEP _ ALIVE configuration for server socket timeout and TCP _ KEEP _ ALIVE in HiveConf . java
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java
no effective change - code cleanup - remove unused import
replaced Joda - Time ' s PeriodFormatter with lambda expressions in RealtimeSegmentRelocator . java to simplify code readability and
vpc : remove useless success variable from createvpccmdbyadmin
updated interpolation logic for windowAlpha in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java to ensure windowAlpha
updated fatal error message in SecurityNamespaceHandler . java to reference Spring Security 4.0 instead of 3.2 to provide clearer guidance
renamed multiple Java classes related to protobuf assertions and subject to improve clarity and consistency in naming conventions
[ java ] make field final in disruptorprovidermanager , queueconsumer , queueconsumermanager , and disruptorprovider . ( #
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to implement a test for
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
replaced instances of ` logger ` with direct usage of ` org . slf4j . slf4j . LoggerFactory ` for
updated database queries from updatePurgedShardNodes and updatePurgedShardNodes to deletePurgedShards and deletePurgedShardNodes to ensure
added support for version " 17 " and " 17 - preview " in JavaLanguageModule to ensure compatibility with the latest Java features and improv
make fileappenderresiliencetest more resilience - wait for compression job to finish
[ wasm ] fix assertion in volatilereadnode . getlastlocationaccess ( ) .
added a method ` getSteps ( ) ` to return an unmodifiable list of steps and reformatted code for consistency to improve code readability and
removed unused ` fromBase58 ` , ` fromBase58 ` , and ` toBase58 ` fields from ` TronJsonRpc `
refactor currency pair creation to use a separate variable for clarity to improve code readability and maintainability
add test for longtasktimer and meterregistrycompatibilitykit ( # 1193 )
[ hotfix ] [ euphoria - euphoria - euphoria - euphoria
updated HostEditorActivity to use CharSequence for value retrieval and added support for ListPreference in HostEditorActivity to improve type safety and enhance user experience
rename incompatibledatabasehandler to databaseversionhandler for consistency
added a maximum number of tweets in conversation to limit the number of tweets processed in the query
updated refresh interval from 1 second to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow for a longer time for map refresh
[ hotfix ] fix queue persistence of deleted tail page
fix checkstyle issue in util / glowserver . java ( # 761 )
refactor the grow method in DataIO . java to improve code readability and maintainability
added import statement for DataOutputStream in GdxSetup . java to enable data writing functionality in the setup process
( chore ) camel - http : add miss getmittedfilename ( ) method in attachmenthttpbinding
added a method markReadForLoad ( ) to LauncherFragment . java to mark the fragment as read for loading to improve user experience by
updated JarInstrumentor . java to handle ClassNotFoundException and improved error handling for negative array size exceptions to enhance error reporting and provide clearer diagnostics
added a method to check if a partition can be spilled in HashAggTemplate to ensure proper memory management by throwing an OutOfMemoryException when
replaced calls to ` info . getDocStoreSegment ( ) ` with direct variable assignment for ` dsName ` to improve code readability and
added a default name ID format constant and a check for supported name formats in SamlProfileSamlNameIdBuilder . java to ensure compatibility with
added error handling for password change aborted in ChangePasswordPage . java to improve user experience by notifying when a password change is aborted
updated closing brace formatting in Deadlock2 . java to improve code readability and maintain consistency
added a method to get the maximum idle time in the NioReceiverMBean class to provide a way to retrieve the maximum idle time for the
deleted the FontScalingTest . java file to remove unused test class to streamline the codebase
updated date filtering logic in RRD4jPersistenceService and changed log level from warn to debug to improve date validation and enhance logging clarity
added a check to return early if numVectors is less than or equal to zero in GenericUDAFComputeStats . java to optimize performance by
test : migrate executablereftest to junit 5 ( # 4529 )
added null checks for view and glassPane in JLayer . java and created a new bug6994419 . java file to ensure
camel - 16462 : added wiretap ( expression ) to camel - core . thanks to benjamin for the patch
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
[ calcite - 2271 ] add option to enable topn optimization ( jesus camacho rodriguez ,
[ java ] remove unused aeron directory name from test .
fixed - rbatch . ping ( ) and rbatch . ping ( ) method do n ' t work correctly if queue be n ' t
remove extra file accidentally commit with hive - 3679 . ( kevinwilfong )
updated the method call to use ` criteria . getDevice ( ) ` instead of ` Device . defaultDevice ( ) ` to ensure the correct device
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to improve menu handling and item selection logic
pdfbox - 4071 : fix typo find by codespell on fossies . org
fix ( hawtio - system ) : set hawtio . dirname system property
added a condition to return SINGLE _ SPACE when comments are empty or empty to improve handling of empty comments in the code
fix double - checked locking issue in dictionary class
removed printStackTrace ( ) call from ContextHandler . java to improve error handling by avoiding stack trace printing
move customitemdroptest to integration / test / mod
added a conditional check for partition existence in DDLTask and modified related classes to handle partition creation logic to ensure that partitions are only created if they
fs : fix nfs secondary storage resource to read large file
[ java ] remove redundant call to controlrequeststreamid in service node .
[ geos - 7012 ] wfs getcapabilities now support spatial operator ( ogc : spatial _ operators )
added LuceneTestCase import and AwaitsFix annotation to BasicDistributedZkTest . java to address issue SOLR - 2
added a condition to check if the position is within the valid range of CLIENT _ PREFACE _ START in Http11InputBuffer . java to
[ java ] disable aeron cluster exclusion by default .
replaced hardcoded cache keys with an array of cache keys in HBaseStorageHandler to enhance flexibility by allowing multiple cache keys to be stored
refactor record counting logic in JSONRecordReader . java to improve clarity and maintainability of record counting logic
added filtering logic to remove items with specific year " 19 " from mergedItems to improve data integrity by ensuring only valid years are merged
replaced ` 0x00000000 ` with ` 0 ` in ` CacheableTextView ` , ` CellLayout ` , and ` Holog
removed OpenGL ES version check from Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering
ww - 3640 reset actioncontext to null after background processing
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include database name in table name handling to improve clarity
added connection timeout configuration in TestConnections . java and changed count to be final in StubConnection . java to improve connection management and ensure thread safety
added multiple assertQuerySucceeds for various aggregation queries in TestHiveAggregationQueries . java to enhance testing coverage for aggregation functionalities
updated default idle and write timeout values in WebSocketConstants and WebSocketChannel classes to improve clarity and consistency in handling idle and write timeouts
updated file sharing logic to use the user ' s platform account instead of the account name to improve accuracy of file sharing by using the correct platform
refactor Inet6Address to use generics for InetAddress and NetworkInterface to enhance type safety and improve code readability
updated variable names for clarity and refactored button enabling logic in PlaybackControlView . java to improve code readability and maintain
updated session presence checks to use session ID instead of session object to improve clarity and accuracy of session identification logic
change from adding transitive classpaths to immediate classpaths in a Java library to improve performance by reducing unnecessary classpath dependencies
disable exception probability by default in graaloptions . useexceptionprobability
updated the color assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to enhance visual
guacamole - 642 : remove usage of db update by primary key update .
added " centre " alias to the aliases list in Middle . java to support centre functionality in the application
added a new dependency injection method to CommonsApplicationComponent and modified the DirectUpload class visibility to enhance functionality by allowing direct uploads to be injected
added space top settings for left and right axes in BarChartActivity and updated range checks in BarLineChartBase to improve chart layout consistency and
added new flavors for CLASS _ ABI and SOURCE _ ABI _ FLAVOR and VERIFIED _ SOURCE _ ABI _
updated operation event handling in OnlineHubService and changed the initialization of the services list in CompositeLogService to improve event processing accuracy and ensure
added debug logging for parameter annotations in DexAnnotation . java to improve traceability and debugging of method parameters
( chore ) camel - jms : rename @ startbundle to @ setup
updated the process initialization to use a dynamic classpath string instead of a hardcoded value to improve flexibility in specifying the classpath for process execution
updated the path separator logic in PackageResourceLoader . java to ensure correct resource loading based on the package name
[ hotfix ] [ table ] remove ' this ' from dataset . minby ( ) , dataset . maxby ( int )
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated stack trace handling in ` ShouldHaveMessage ` and added a test for escaping percent characters in ` shouldHaveMessage _ create _ Test `
fixed - jcache . close ( ) method throw npe if cachemanager . geturi ( ) return null
reduce log level from severe to info for activititaskalreadyclaimedexception
added a brace to the instantiation of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
simplify entitypropertiespacket . writedouble ( ) by use instance . getbasevalue ( ) instead of value
log warn if sonos speaker be not initialize ( # 4323 )
increased the timeout duration for countDownLatch . await from 500 milliseconds to 5 seconds in multiple test files to allow more time for latch
changed log level from info to debug in LightThingHandler . java to provide clearer guidance for users on how to determine effect light type
make asyncjobmanager thread pool a fixed thread pool and add db . properties to configure db . properties
updated ` Reporter ` and ` ReturnsSmartNulls ` classes to include a ` Object ` parameter in the ` smartNullPointerException ` method to enhance
removed unnecessary casting of ` DataFrame ` to ` Frame ` in the ` generate ` method to simplify code and improve readability by eliminating
updated multiple package - info . java files for consistency and clarity to improve maintainability and readability of the codebase
added a check for non - empty physical column names in OrcPageSourceFactory and created a test for handling empty column names to ensure robust
added a method call to mixPlay in the Engine class to enhance the functionality of the mixPlay method
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
pdfbox - 4892 : fix minor correction , a suggest by valerybokov
removed redundant checks for ` leadingIncludePaths ` in ` PreprocessorDelegate . java ` to simplify the validation logic for ` leadingIncludePaths `
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and re
fix ` ` find ' ' and ` ` findall ' ' do n ' t work in eclipse
defaultaudiosink : set default sample rate to 48000 if no sample rate be specify
added methods ` getFormula ( ) ` and ` setFormula ( String formulaText ) ` to the ` XSSFName ` class and
increased the ` target ` variable from 60000 * scaleFactor to 90000 * scaleFactor ` to adjust the scaling factor for impro
mondrian : fix stringindexoutofboundsexception in simpletypegt and add test for pattern schema in gmlparsertest
added a new test class ` ClassPathXmlJobRegistryContextTests ` to verify the functionality of locating a job in the batch processing context
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 : camel - restlet should use component level endpoint instead of component level endpoint in camel - restlet
camel - 15836 : camel - log4j2 - add showout option to camel - aws2 - log component - showout
replaced the direct submission of ChromeTraceEvent with a new method writeChromeTraceMetadataEvent to improve code readability and maintainability by encaps
added a check to ensure the order status is not CANCELED , FILLED , and REJECTED before adding to limitOrders to prevent
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct handling of image layout for different pixel types
refactor timestamp handling to utilize JrubyTimestampExtLibrary for improved clarity and consistency to enhance code readability and maintainability by
added a condition to return the resource if the path ends with a slash and the resource alias does not exist in ContextHandler . java , and
changed ScriptFunctionImpl from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER to ensure
refactor scroll handling in JEditTextArea to improve clarity and functionality to enhance code readability and maintainability by using more descriptive
added a null check for callerLoopScope before setting the guard stage and stage flags in GraphDecoder . java to ensure that guard stages are only
test ( sniperjavaprettyprinter ) : migrate sniperjavaprettyprinterjavaxtest to junit
refactor URLOutputStream initialization to use a try - with - resources statement and update exception message assertions to use equalToCompressingWhiteSpace to improve
added @ Entity annotation to Mail . java to enable persistence and loading of database entities
updated default values for ` includeTablespace ` from ` false ` to ` true ` and added relevant instructions in ` -- includeTablespace `
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffer types for external use
added logic to clear ` container ` and ` fieldVectorMap ` based on the presence of a non - empty file in ` ScanBatch `
updated failure message formatting in StringSubject and modified assertions in StringTest to improve clarity of failure messages for better debugging
added a regex pattern for validating library names in LibUtils . java to ensure only valid library names are processed in CUDA mode
replaced ` ClassNotFoundException ` and ` NoClassDefFoundError ` catch blocks with ` Exception ` catch blocks in ` JrtJavaBasePackages
hbase - 2696 add checkfsafemode ( ) method to wait on safemode ( # 495 )
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and message to improve clarity of error messages for
remove plugin descriptor cache , it be n ' t use anymore
fix update the contact status of a contact when it ' s offline or online .
rename servletrequestdetails . withresourceandparams to servletrequestdetails . withresourceandparams to avoid confusion .
added a new integration test class ` AccountInfoFetchIntegration ` to verify the retrieval of account information from the BTCE exchange to ensure that
added mouse wheel functionality to VDUInput and vt320 classes and updated TerminalView to utilize this new mouse wheel functionality to enhance user interaction
fix ( native ) : set correct librarypath for jogl
no effective change - remove deprecate @ columnhstore annotation
fix : add player _ skin _ flags to metadata index ( # 721 )
updated LoadBalancerWithServiceTests . java to utilize SLF4J logging and improved service retrieval logic to enhance logging capabilities and simplify service
add miss null check for entry event
replace System . getProperty with AccessController for retrieving the operating system property to enhance security by using privileged actions for property access
updated the file suffix handling in TemplateEngineFreemarker to use a configurable suffix instead of a hardcoded value to improve flexibility
updated hash code calculation in SelectMessageQueueByHash . java and added multiple order identifiers in SelectMessageQueueByHashTest . java to improve
replaced direct access to ` dockParent ` with a ` animCallback ` for better animation handling to improve code readability and maintainability by
updated EasyBind binding logic in StyledTextAreaVisual . java to improve code clarity and ensure correct caret binding behavior
added ` declaredPlatforms ` to multiple description classes and updated platform filtering logic to improve the handling of declared platforms in C++ toolchain configurations
replaced instances of SimpleParameterAccessor with ParameterAccessor across multiple files to align with the updated Spring Data naming conventions
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and a corresponding test case in DataUtilitiesTest to ensure proper handling of array types and validate default
refactor SSL engine selection logic to improve clarity and correctness to ensure correct host name verification based on client authentication status
fix flaky test in testfstabledescriptors . testcaches ( )
danielwagnerhall : move cookie deletion from ie driver to ie driver
added a boolean flag ` mHasEndedLauncherTransition ` and modified gesture state checks in ` AbsSwipeUpHandler . java ` , and
added character set " utf - 8 " to HTML tags in both HTMLListWriter . java and HTMLWriter . java to ensure proper rendering of
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum length of the stats key prefix from 200 to 150 and modified string concatenation in multiple files to accommodate new path separators and
updated the addition of the arrowButton to the comboBox in BasicComboBoxUI . java and added a new class bug6337518 .
rename TestRandomAccessBuffer . java file to improve clarity and consistency in naming conventions
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future feature additions
added ` HomeContentProvider . CONTENT _ URI ` import and called ` notifyChange ( HomeContentProvider . CONTENT _ URI , null ) `
added methods to manage and invalidate pressed or focused background states in BubbleTextView to improve UI responsiveness during interruptions
added an ` Throwable error ` parameter to the ` getFallbackResponse ` method across multiple classes to handle potential exceptions during fallback responses
removed the condition for checking if ` env . _ dest _ dir ` is null in ` DumpBytecode . java ` to simplify the code
added null checks for tags before accessing their indices in ChannelUri . java to prevent potential NullPointerException when accessing tags
updated JAVA _ REGEX _ SPECIALS string format and renamed testSqlPatternContainsMUltipleMatchers to sqlPatternContainsMultipleMatchers to improve
updated the action bar title handling in FileActivity and added null check in FileDisplayActivity to improve user experience by ensuring the action bar title is
updated method to retrieve the last element instead of the only element in ` PythonDslProjectBuildFileParser . java ` and added a new
changed the schedule hour from " * " to " 0 " in CleaningService . java to set the hour to zero to improve clarity
added methods to validate table structure for partitioned tables and table paths in TransactionalValidationListener to improve data integrity by ensuring only valid partitions are processed
refactor ReplicationHandler and SnapPuller classes to improve polling functionality to enhance performance and maintainability of the replication process
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified SQL execution to use auto - increment instead of
updated variable name from ` proxy ` to ` _ rc ` in ` SimpleReferenceCache . java ` to improve code clarity and maintain consistency
updated error messages to include " failed to inline " instead of " failed to inline " across multiple test files to improve clarity and accuracy of
updated keep - alive timeouts and added debug logging for HTTP and web socket client creation to improve thread management and enhance logging clarity for better debugging
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
changed catch block from Exception to Throwable in Dispatcher . java and added try - with - resources in DispatcherTest . java to improve error handling by
camel - 7017 : fixed the issue that camel - cxf do n ' t work with message data format .
added a case for the ' ~ ' character in the ClientUtils class to handle the ' ~ ' character in the input processing logic
camel - Slack : add a delay option to camel - slack to set a default value .
change blockutil . getblockdropped to fire blockharvesting instead of blockdropped . getblockdropped .
updated FormLayout parameters in TranscodingTab . java and modified encodedAudioPassthrough JLabel initialization to improve layout flexibility and enhance user interface
added a new Java file for handling a specific bug related to Nimbus Look and Feel to address bug 8057791 related to
updated flags _ field logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java with a static field to improve
fix ( griffin ) : add websocketmessagemethodfactory to the runnerbuilder
changed the condition from checking if ` to . length ( ) > 0 ` to checking if ` to ` is not null to improve null safety
updated ParquetFixedWidthDictionaryReaders to handle dictionary - based reading and added a new test for big integers with a dictionary in TestColumnReader
refactor layout adjustments in PortraitPagedViewHandler . java to use dp . isLandscape ( ) for better readability
added new annotations ` @ Log ` and ` LogInterceptor ` for logging functionality in the Spring Cloud application to facilitate easier debugging and
updated string concatenation in QueuedThreadPool . java to include trace length condition to enhance readability of thread dump information when trace length is greater than
refactor CacheGenerator and CacheProvider to accept an Optional < Implementation > instead of a generic ReferenceType to enhance flexibility in handling cache implementations
added totalFrameSize parameter to the createReferenceMap method in FrameMap . java to ensure that the ReferenceMap is created with the correct total
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the code
added karaf integration test for camel - graphql
added two static methods ` bug1 ` , ` bug2 ` , and ` bug3 ` to ` RFE2891944 .
replaced URL encoding with direct string appending in HttpClientIntroductionAdvice . java to simplify string handling and improve code readability
refactor the implementation of the unsupportedPlatformTool from an anonymous inner class to a dedicated class to improve code readability and maintainability by encaps
changed the type of loopCount from double to int and updated the log message to include the duration of the retry loop to improve type safety and
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
[ drools - 7 ] make abstractaddressmanager and kieaddressmanagertest work with random index
updated layout specifications for components in VLCVideo . java to improve UI spacing and alignment in the user interface
update link from " https : / / bisq / bisq " to " https : / / github . com / bitsquare / bits
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory and refactored user XML parsing logic in MavenCli . java and MBoot . java to improve directory structure and ensure
added a call to glBindBuffer in VertexBufferObjectWithVAO . java to ensure proper binding of the array buffer for rendering purposes
refactor ServerHttpSecurity class for improved request handling to enhance security measures and maintainability of the application
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers support in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP configuration flexibility by allowing custom headers
add userpasswordnotvalidexception and thingsboardcredentialsviolationresponse for validation error
deleted the NoOpConfigPathGetter . java file to remove unused configuration path getter functionality
updated signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to improve compatibility with Apache Tuweni '
replaced CascadedStyle with CSSName and added validation for float properties in FloatUtil . java to improve handling of CSS float properties and
jbrules - 2249 : add javadocs for planningfactcollectionproperty , planningscore , planningfactcollectionproperty ,
replaced instances of ` getDefaultHeaders ( ) ` with ` defaultHeaders ( ) ` and introduced a new method ` defaultHeaders ( ) `
use java . nio . charset instead of string . name ( ) in proxyserver , realm , and simpleasynchttpclient
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare for consistency to improve code readability and maintainability
changed log level from error to debug for received HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to reduce log verbosity and improve performance
updated import statements in LegacyAuthenticationHandlerAdapter . java to include NamedAuthenticationHandler and UsernamePasswordCredentials classes to ensure compatibility with the latest authentication framework
changed the visibility of the WingDings class from package - private to public to allow access to the WingDings class from other
do n ' t remove invalid filter from network if they be not our own
added a static ` wrap ` method to ` BCPGInputStream ` and updated references in ` PGPKeyRing ` and ` PGPSecretKeyRing
replaced ` DataOutputStream ` with a buffered output stream and added a try - finally block to ensure proper resource management and avoid potential memory leaks
added a new test method ` testSelectAllFromView ` and refactored column name handling in ` HiveBaseResultSet ` to improve test
rename FocusTransitionTest . java file to improve clarity and consistency in naming conventions
[ web ] fix checkstyle issue in ` ` share ' ' feature
added a type check for ` sourceTask ` before retrieving counters and improved error handling in ` CounterStatsAggregator . java ` to enhance robust
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color selection handling in AppearancePanel to use ChangeListener for component color changes to improve responsiveness and responsiveness of color
updated the constructor parameters of TaskHelper to include ' hidden ' instead of ' false ' to enhance the functionality by allowing the task to be hidden
resolve intermittent failure in failovertimeouttest
pdfbox - 4892 : close randomaccessfile in ccittfactory , a suggest by valerybokov
added DefaultParameterHandler import in LanguageDriver . java and modified BoundSql . java , SqlSource . java , and LanguageDriver . java to
lsra spill optimization : check for spill loop depth before set spillstate
add a test for micronaut ast builder ( # 8048 )
fix : pgstatement . executeoncompletion ( ) should not call closeoncompletion ( ) twice
set default value of serviceAdvisorType to Python to ensure proper initialization of serviceAdvisorType for Python environments
refactor resolver management in GenericDatumReader to use a ThreadLocal instance to improve thread - safety and management of ResolvingDecoder instances
replaced ` Collection ` with ` List ` for subpaths in the ` Path ` constructor and modified related methods in ` PdfContentStreamProcessor
replaced hardcoded byte arrays with dynamically generated random byte arrays in SendCoinShieldTest . java to improve test reliability by using a
added a method to set personalisation with date , email , and distinguisher in SkeinParameterSpec . java to enhance functionality by allowing
removed duplicate code lines in CodeGenerator . java to improve code readability and maintainability
removed the ' percent ' parameter from the scroll method calls across multiple classes to simplify the method signature and improve code readability
changed the visibility of the ` pointer ` variable and added reset methods in ` FlatRecordReader ` to allow external access to the ` pointer `
rename class ` ContentDigestHistory ` to ` BdbContentDigestHistory ` and update references accordingly to clarify the purpose of the class
simplify castexpression . castboolean ( ) and castexpression . castboolean ( ) . castboolean ( )
refactor accept handling in AbstractResource to use a boolean variable for better clarity to improve code readability and maintainability by using a boolean
added a new boolean variable ` false ` to the TaskView class to enhance the functionality of the TaskView class
added an ` isAutoIncrement ` method to ` LiquibaseDataType ` and updated its implementation in ` CreateTableChange ` to provide a
set default value for errorText to " Command failed due to Internal Server Error " to provide a default message when an error occurs due to an
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils for performance testing to improve code cl
replaced ` toSimulate . add ( currentStatus ) ` and ` toSimulate . push ( boosterStatus ) ` with `
added support for configuring the AJP connector port in GitBlitServer . java and updated the downloadFromApache method in Build .
added type coercion logic for compound types in TransTypes . java and created a new Intersection03 . java file with assertions to ensure
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the test class
added a native method to check if the toolkit thread is already starting before creating a new thread to improve performance by avoiding unnecessary thread creation
add an option to compress the bundle in parallel .
set window . hide ( ) to false on window . close ( )
updated the temporary directory path in AbstractRecordExtractorTest from " RecordTransformationTest " to the class name to ensure the test uses the correct class
added configuration parameters for fullNodeHttpEnable and solidityNodeHttpEnable in CommonParameter . java and modified service addition logic in Args . java
added a service property to GoogleCloudFirestoreTicketDocument and updated related methods in GoogleCloudFirestoreTicketRegistry to support tracking of service -
refactor Generate class to improve code organization to enhance maintainability and readability of the code
fix json _ format ( ) to handle null argument
updated BadgeRenderer , IconPalette , ShadowGenerator , NotificationKeyData , and PopupContainerWithArrow classes to include a DOTS _
changed the ` getFreemarkerConfiguration ` method from final to non - final in ` FreemarkerManager . java `
added a test for invalid excluded package name patterns in OgnlUtilTest to ensure proper exception handling for invalid package name patterns
updated the handling of the ` deviceUdid ` variable in ` AppleTest . java ` and added SDK name checks in ` Idb
updated DefaultHttpClientFilter to use ProduceProcessorManager and modified response handling in TestDefaultHttpClientFilter to improve response management and enhance error handling for forbidden
reformatted code for better readability and consistency in AllAppsView . java to improve code clarity and maintainability
added a new constant ` TEXT _ BURN ` and modified the conditional check for ` lineCount ` to improve text rendering control based on the
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper resource cleanup after tests are executed
added a line to retrieve the parser from the specified name in SecurityNamespaceHandler to ensure the correct parser is used for namespace handling
reformatted conditional check in ` BoundedLocalCache . java ` and added a new test method in ` BoundedLocalCacheTest . java
refactor RawConnection to extend WebSocketConnection and add complete and flush methods to enhance WebSocket connection management and improve frame handling
added multiple test cases for soft assertions in SoftAssertionsPerfTest . java to improve test coverage for assertion scenarios
added error handling for test failures in PythonRunTestsStep and modified assertExitCode method visibility in ProjectWorkspace to improve test failure management and ensure correct
added a conditional check for markupEnabled in GlyphLayout . java to ensure proper handling of text rendering when markup is enabled or disabled
refactor score comparison logic in TestBooleanRewrites . java to use streams for improved readability and performance to enhance code clarity and
update enumClass assignment to use superclass instead of enclosing class to ensure correct handling of anonymous classes in the TypeHandlerRegistry
remove unnecessary cast to playersocketconnection in updatemanager and connectionmanager
added a boolean flag ` mStarted ` and modified the removal of ` OnDrawListener ` in ` Launcher ` and ` LauncherAnim
refactor multiple Java files related to index and term handling to improve code organization and maintainability
replaced specific import statements with wildcard imports and added a condition to check if the match status is not APPLICABLE to simplify import statements and
change default value of MEDIAPARSERV2 from false to true to enable mediaservice validation by default
added an ` isAcceptable ` method to ` BeanDefinitionInjectProcessor ` for handling AROUND _ TYPE ` annotations to ensure proper processing of
added assertions and verification for directory and partition permissions in FolderPermissionBase . java to ensure proper functionality and security of the database operations
do n ' t publish status when provider registration state change
updated the color generation logic in PastelColor . java to adjust the random value based on the color base to improve the accuracy of color
modified the implementation of ScriptEngineFactory to enhance performance and maintainability of the code
refactor image handling in HolographicViewHelper to use original and outline bitmaps to improve clarity and maintainability of the code
refactor request handling in CloudClient to use HttpMethod . fromString for better clarity to improve code readability and maintainability by reducing red
add a ` ` containingphrase ' ' to the multiwordpreprocessor . gettag ( ) method so that it can also infer the phrase
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
refactor class loading logic in HivePassThroughOutputFormat to improve compatibility with Hive passthrough output format
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a boundary check for the character ' start ' and ' length ' in DOMBuilder . java to ensure valid input validation before proceeding with
updated conditional logic in ClusteringCoefficient , modified edge retrieval in EigenvectorCentrality , DiameterUI , GraphDensityUI ,
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static methods and default methods to demonstrate the
camel - 16400 : defaultkeyselector now support property placeholder in keystore and keystore property
replaced instances of ` Throwable ` with ` ThreadDeath ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java
updated multiple Java files related to key management and certificate handling to improve code consistency and maintainability across the security framework
updated JGit version from " 1.0 . 0 " to " 1.1 . 0 " and modified dependencies in multiple Java files to
refactor client key assignment logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability of the code
int - 1368 add namespace handler for < transformer / > in the < config / > element
updated constants for BACK _ FACTOR and REWIND _ TIME , and modified duration checks in ResumeObj . java to improve clarity and
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and overridden it in ` JavaSEPort
updated usage formatting in UtilityCommands and DocumentationPrinter classes to improve clarity of usage messages and enhance readability of usage output
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming
added setter methods for sequence and unsequence files in CrossSpaceCompactionResource . java and updated references in RewriteCrossSpaceCompactionSelector .
removed duplicate @ Override annotations from the Observation class to improve code clarity and maintainability
simplified the logic for updating the project ruleset and improved logging messages to enhance readability and maintainability of the code
fix a deadlock in abstractsootfieldref . getfieldunsafe ( )
add support for custom naming convention in elastic meter registry ( fixes # 399 )
added methods for listener , command creation , and command estimation in IController and TinyGController , and updated BackendAPI to use IController
added a new test method ` hugeHorizontalRule ( ) ` to ` PathologicalTest . java ` to verify the rendering of a large
replaced System . out . println with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to standardize
updated multiple Java files to improve code structure and readability to enhance maintainability and facilitate future feature additions
changed the condition from checking if frameLength is zero to checking if frameLength is less than or equal to zero to ensure that frameLength is
updated return statements in IntFloatMap and IntIntMap to return default values instead of zeroValue to ensure consistent behavior by returning the default value
updated Image handling in ImageDownloadService to run on the UI thread for UI updates to ensure UI updates occur on the main thread for thread safety
added a null check for the registered variable in HandlerRegistration . java to improve robustness by preventing potential null pointer exceptions
removed the ` hasNextSibling ( ) ` method from multiple node classes and updated return logic in ` IeNavigator . java ` to streamline
fixed - npe in redisdistributedmapcacheclientservice if result set be null
updated log messages in MobFileCache to include cache size , periods , and remain ratio to improve clarity on cache configuration and enhance
rename ColConvCCMTest . java file to improve clarity and consistency in naming conventions
refactor code to use local variables for ` target ` and ` allowCovariantReturns ` instead of local variables to improve code readability and
pdfbox - 4892 : fix warning , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X
added a return statement to the GenericFileConsumer class to ensure proper termination of the method execution
added a Runnable to invoke the EventQueue on the Event Dispatch Thread to ensure UI updates occur on the Event Dispatch Thread for thread safety
updated maxSize calculation to use getMaxBinaryMessageSize ( ) instead of getMaxBinaryMessageBufferSize ( ) to ensure the maximum size of text message
updated steeringValue calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to adjust steering
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
updated JdbcSerDe to use LocalDate , LocalDateTime , and UTC for improved date handling to enhance code clarity and maintainability by using more
updated version number from 2 to 3 and modified metadata handling logic to accommodate new version requirements
stop jpa and a custom flyway bean from cause a startup failure
added a sorted ( ) method to the ClassesImpl class to ensure the classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code structure to enhance maintainability and readability of the code
refactor TestCloseScope0 to support different memory management methods based on the Java version to ensure compatibility with different Java versions while maintaining functionality
increased the timeout value from 500 to 5000 in the test method to allow more time for socket operations to complete successfully
refactor CaptchaChannelProcessorTests to improve test coverage to enhance reliability of Captcha functionalities
added a condition to update the owner collection if the item ' s handle is not the owner of the collection to ensure that the item ' s
added retry logic for saving registry cache files in AbstractRegistry . java to improve reliability by allowing retries when save properties fails
updated the initialization of TrackingDirectoryWrapper to use ' directory ' instead of ' mergeDirectory ' to improve clarity by using a more d
[ java ] unusedimports now work with jdk 1.5
added validation to prevent inserting overwrite queries on bucket partitioned Iceberg tables to ensure that operations on non - bucketed Iceberg tables
updated SAML configuration assertions in BootstrapTests . java to reflect the correct expected values and added a check for legacy keys to ensure accurate validation of SAML
updated methods to check for non - static local types in Exuder . java to ensure proper handling of non - static class types in the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5952 - do n
removed unused comment constants from CommentsParser . java to streamline comment processing and improve code clarity
added IOException handling to lock release methods and introduced a new LockReleaseFailedException class to improve error management and provide clearer exception handling during lock release
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to organize the code under org
updated conditional logic in ` SpelExpressionTransformer ` and modified return statements in ` OperatorNode ` , ` LiteralNode ` , and ` Mongo
updated ByteBuddy instantiation to use TypeValidation . DISABLED to disable type validation for improved performance
updated the ` AnnotationSetScanner ` and ` JavacRoundEnvironment ` classes to use ` TypeElement ` instead of ` DeclaredType `
updated lock handling in LockModePessimisticReadWriteIntegrationTest and modified global lock wait timeout in MySQLTableLockTest and MySQLTable
refactor the ` setSystemProperties ` method to remove the ` LogFile ` parameter and simplify its implementation to enhance code clarity and maintain
added a method to check if a redirect is allowed and modified the connection handling logic to limit the number of HTTP redirects and improve error handling for
added constants for service and version mappings in ServiceCombConstants and updated MicroserviceFactory to utilize these constants to improve configurability and maintain
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX to be static and improved database prefix handling in BaseAndroidTestCase . java , while enhancing database
updated return statement to retrieve unread count from HomeDataSource to ensure accurate counting of unread items based on the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool
added a limit to the method ` getAllOrder ` and introduced a constant ` MARKET _ COUNT _ LIMIT _ MAX ` in ` Parameter `
updated user retrieval logic in HomePage . java to handle null users gracefully to improve robustness by avoiding null pointer exceptions
updated ` LocalFileSystem ` to use ` getAbsoluteFile ( ) ` for absolute file paths and added a test for matching relative wildcard paths to ensure
added bounds validation for the instance ' s width and height in ComponentBuilders . java to ensure that the instance ' s dimensions do not exceed the
added SLF4J logging and deprecated methods in CommonsHttpSolrServer . java to improve code maintainability and facilitate future
removed duplicate error handling code from PrintController . java to streamline error handling and improve code clarity
refactor hash filename formatting in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code readability and
added number validation logic in SpellChecker . java and a corresponding test in SpellCheckerTest . java to improve spell - checking accuracy for
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and consistency
added methods to retrieve OCFileListFragment and show file actions in FileDisplayActivity to improve code organization and enhance file action handling functionality
added a daemon mode to the ReplicationHandler and improved error handling in SnapPuller to ensure that the puller is not daemon and
simplified the update method call in StoreCachedTest . java to improve code readability and maintain consistency
renamed the constructor parameter from ' materials ' to ' theMaterials ' and added a loop to remove specific file column parsers from the file
added new dependencies and updated existing ones in DependencyBank . java and Controller / Gamepad API . java to enhance clarity and organization of dependencies
set maximum recycled views for various view types in AppsContainerRecyclerView to optimize memory usage and improve UI responsiveness
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to verify the functionality of building
improve baritone control so that it do n ' t crash when you click on a valid tag .
added import statements for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating parsed node
added null handling support in FilterOperatorUtils and corresponding tests in NullHandlingEnabledQueriesTest to enhance filtering capabilities and ensure correct behavior when null values
added validation checks for bootstrap method argument types and their types in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap method
try to fix the ci error of camel - jms
clear the formatters in CucumberInstrumentation . java to ensure a clean state for the runtime options
replaced ` RegisteredServiceContact ` with ` DefaultRegisteredServiceContact ` and added ` CollectionUtils . wrap ` for ` principalId ` and `
updated padding calculations for workspace labels in DeviceProfile . java to ensure proper visibility of workspace labels based on cell and icon dimensions
updated assert statements in ReplicationFactorTest . java to include cluster state information and improved assertion messages to enhance clarity of test failure messages and
sulong : llvmlanguage should not be initialize during context pre - initialization .
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to enable
replace RuntimeException with JsonIOException for better error handling to provide a more specific exception type for JSON - related issues
replaced Integer . valueOf with Integer . parseInt in VisualScoreTagTest . java to improve clarity and consistency in parsing integer values
updated error messages and file tree walking parameters in the Copy . java file to improve clarity of error reporting and enhance file traversal efficiency
refactor segment name validation logic to use dedicated methods for high and low - level consumer segment names to improve code readability and maintainability by
added methods ` startActivity ` and ` startActivityForResult ` to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure
updated the method to return a new DateTime instance using the current time instead of the current time to ensure accurate representation of the current time in the
update CPU type return value in TargetCpuType . java to specify the target architecture for Android to ensure compatibility with Android ' s architecture requirements
added a method to delete all files associated with a specific account in FileDataStorageManager to improve resource management by ensuring all related files are deleted
update help message format in SchemaCrawlerCommandLine . java to improve clarity of command - line option usage instructions
added a factory method to create ` Description ` and updated ` equals ` and ` equals ` methods to use ` fUniqueId ` instead of `
replaced the deprecated ` decode ` method with ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the code and improve performance
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor by eliminating unnecessary parameters
add unit tests for range pasting in GWCZoomContextFinderTest to ensure correct functionality of range calculations in the ZoomContext
added a new configuration option for enabling dependency tracking and modified the JRubyScriptEngineFactory to conditionally activate the dependency tracker based on this
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
catch already exist exception when try to create table or keyspace . patch by jbellis
use cache image for splash screen to reduce memory usage
updated tuner configuration handling and error logging in RTL2832TunerController . java and R820TTunerConfiguration . java to
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test case in ShBinaryRuleIntegrationTest to enable testing capabilities for sh
added a condition to set ` includeString ` to " db : hsqldb " in ` TestFilter . java ` to ensure proper handling
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do n ' t materialize host exception when there be no stack trace
graal : export jvmci service provider to service file if available .
added test for duplicate command handler resolver in aggregateannotationcommandhandlertest
[ flink - 21925 ] [ core ] introduce fine - grained . shuffle - mode . all - blocking to avoid resource deadlock in batch job that apply fine - grained resource management
fix entityfishhook not be able to place fish block in vanilla world .
camel - 14263 : camel - ftp should use source code generate configurer to avoid reflection configuration .
rename method ` getCommandRunner ( ) ` to ` getStepRunner ( ) ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and update related references to enhance clarity
added a check to return early if the items list is empty to optimize performance by avoiding unnecessary processing for empty items
added @ ConditionalOnMissingBean annotation to ZipkinAutoConfiguration to ensure that the REPORTER _ BEAN _ NAME bean is only
http : / / issues . apache . org / activemq / browse / amq - 2882 - add property to xmllayout
added a constant for " omitHeader " in CommonParams and updated response handling in BinaryResponseWriter , JSONResponseWriter , and XMLResponseWriter
updated EscherProperty to use getPropertyNumber instead of _ id and added a new test class for Escher properties to ensure accurate property retrieval and
updated return statement in Description . java to ensure consistency in method naming to improve code readability and maintainability
add call to scene . modifyhierarchy ( ) in fasthierarchy and sootclass
added null checks for disputesPerTradeId , disputesPerDelayedPayoutTxId , and disputesPerDepositTxId
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , and modified method signatures in ` Table
wallet : sendtx should set confidencetype = not _ see _ in _ chain .
refactored argument handling logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability of the code
fix craftinghelper . processconditions ( ) to correctly handle condition . json
hbase - 2696 catch all throwables in region . close ( ) in hregion . close ( )
simplified null checks and refactored length comparison logic in Credential . java to improve code readability and maintainability
[ java ] check subscription . hasimage ( ) before check subscription . hasimage ( ) .
updated the ` destroy ` method to throw an ` InterruptedException ` and modified its implementation to use ` process . waitFor ( ) ` instead of reflection
added support for Oracle database compatibility in TestDefaults . java to ensure compatibility with Oracle database configurations
( chore ) camel - mail : check if mailstore be connect to mailstore before use it .
added token handling logic in the parser to throw a ParseCancellationException if there are more tokens in a query that have not been consumed
camel - 16850 - aws - translate : list all the available language in the enum - start with ` ` l ' ' complete
added a method to retrieve the data file name in the Model class and modified the model assignment logic in Voice class to enhance flexibility in handling
added emailDomain field and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes , and updated tests accordingly to support email domain
added new configuration constants for request timeout settings in Configuration . java to provide configurable timeout values for views requests
do n ' t run processDeferredConcepts ( ) if myConceptLinksToSaveLater ( ) be empty
added RedisCategory import and category annotation to RedisServiceRegistryTests to categorize tests as Redis - related functionality
updated ` FindDeprecatedMethodsTest ` to use ` @ ParameterizedTest ` and ` @ NullAndEmptySource ` annotations , and modified the `
updated paintComponent calls in OverlayPanel and WaterfallPanel classes to ensure proper rendering of the overlay panel
removed unused imports from multiple configuration classes to improve code cleanliness and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule and added getter / setter methods in LogEventWrapper to improve clarity and functionality of event
updated the filter condition to check if the session name ends with an underscore to ensure that the session name does not end with an underscore to avoid
mapview : fill fill rectangle with background color instead of clear it
[ drools - 7 ] fix npe when invoker be not find in the package
removed unnecessary print statements from multiple Java files to improve code cleanliness and reduce unnecessary console output
added a conditional check for NaN score values before assertions in TestFieldCacheSort . java to ensure that assertions are only performed when score values are
updated the initialization of oldKeys to use a copy of getEntityKeys ( ) to ensure immutability of the oldKeys set before reassign
added checks for zero - time strings in ColumnSnapshotGenerator and created a new test for date default values in MySQLIntegrationTest to ensure proper handling
replace ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` taker
updated generic type parameters in FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGrouping
[ drools - 7 ] add kiesessionmodel . editsessionmodel ( ) test case
updated the instantiation of the HiveMetaStoreClient to use the current configuration to ensure proper context is used for the HiveMetaStoreClient instantiation
added a conditional check to return early if the modalness matches the current modalness to optimize performance by avoiding unnecessary processing when the modalness
added a new test method ` createFromProfileLevel ` in ` ShadowMediaCodecListTest ` and implemented ` native _ getGlobalSettings ` in `
fix # 5460 when enter key use , focus be wrong
added input validation for width and height in SunVolatileImage . java and improved error handling in XRPMBlitLoops . java
updated thousands separator from an empty string to the Unicode character " \ u00a0 " in FormatData _ uk . java to ensure
refactor AsyncStressTest and StressTest to use AtomicInteger instead of int arrays to improve thread safety and performance in concurrent scenarios
added beta flavor check and updated menu visibility handling in AchievementsFragment and LeaderboardFragment to improve user experience by providing clear feedback when
added context attributes for access , name , and description in SearchMethodVisitor . java to enhance functionality by associating access , name , and description
added two sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling to include InterruptedException to ensure proper execution of SQL operations and
reformatted code for setting media duration in DLNAResource . java to improve code readability and maintainability
camel - 15836 : camel - core - optimize resequencers to reduce stack frame in use during batch / stream rese
refactor transaction handling in TableReader by introducing acquireTxn ( ) and readTxnSlow ( ) methods to improve code clarity and ensure
flume - 2272 : use ssl . keymanager . algorithm and ssl . trustmanager . trustmanager . keymanager . trustmanager
replaced ` JavaIsoVisitor ` with ` TreeVisitor ` in the ` getSingleSourceApplicableTest ` method to utilize ` Applicability
fix tab key not work in multi - window mode
replaced instances of ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to clarify the purpose
renamed the method ` unHandled ` to ` unhandled ` and updated related error logging to improve clarity of the method ' s purpose and
refactor stripes and stripe statistics assignment logic in OrcInputFormat . java to improve clarity and maintainability of the code
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
change myhentaicomics . com from http : / / myhentaicomics . com to https : / / my
added command - line argument handling to display the current version of the application to provide users with information about the current version of the application
change split ( ) to splittokens ( ) for export list
refactor rotation handling in ConsoleActivity and implement input input connection in TerminalView to improve user experience by ensuring correct rotation settings based on keyboard keyboard
change the type of the ` hq ` variable from ` HitQueue ` to ` PriorityQueue < ? extends ScoreDoc > ` to
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 16400 : camel - jbang - allow to configure custom headersmapfactory for camel - jbang .
updated closing brace formatting in JavaCompiler and Diagnostic classes to improve code readability and maintain consistency in formatting
int - 1395 , int - 1396 , int - 1397 , int - 1398 , int - 139
updated the index variable from ` i + 1 ` to ` i + 2 ` in the ` ArrayFunctions . java ` file to correct the
refactor script engine initialization and error handling in AbstractScriptProcessor and InvokeScriptedProcessor to improve script engine management and enhance error logging for better
added PGStatement to the list of proxy instances in PooledConnectionImpl . java and created a test for it in ConnectionPoolTest . java
refactor flushMemTables ( ) to flushMemTablesAndRefreshSizeEstimates ( ) in CassandraIOTest . java to ensure that
changed log level from error to warn in AtomicRemainder . java to improve logging severity for fragment limit issues
do n ' t use aggressive expiration when compaction complete
fixed - rblockingdeque , rblockingqueue , rblockingdeque , rblockingdeque , rblockingdeque , rblocking
removed unnecessary string formatting from printMap calls in JobInspectCommand . java to simplify code for better readability and maintainability
refactor Engine class to improve code readability to enhance maintainability and facilitate future development
refactor sorting logic in ChildHolder to use entrySet and class comparator to improve readability and maintainability of the code
[ rip - 12 ] remove acl - related class in favor of sessioncredentials .
changed the condition from ` numIndexDims = = 1 ` to ` numDataDims = = 1 ` in BKDWriter . java
[ zeppelin - 5441 ] do not print stacktraces to stderr in notebookserver ( zeppelin
rename functionn to lt in expressionnodeevaluator for clarity
changed method visibility from public to package - private in NodeIdAccessor . java to restrict access to these methods for better encapsulation
server : fix the error message when attach a volume to a vm before create snapshot
removed the ` public ` access modifier from the ` write ` , ` flush ` , and ` clear ` methods in ` ItemWriter . java
updated the mock Thing instance from an empty string to a specific test string to ensure that the test environment is correctly configured for testing purposes
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory for directory creation in TestNorms . java to improve performance and reduce memory usage during testing
replaced the lineHeight calculation with a conditional assignment based on the actual height of mDrawTextRectBuffer to ensure lineHeight does not exceed
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the code
[ netbeans - 4354 ] remove unused variable from oqlengineimpl . getinitstream ( )
removed menu item from the button group in the chat transport selector box to ensure proper management of menu items in the chat window
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
fix npe in prefspayload when bsqblockchainexplorer be not set
added methods to manage and retrieve session attributes in the StandardSession class to enhance session management by allowing retrieval , setting , and removing attributes
added assertions to verify the properties of the found bean in TestDbJson _ List . java to ensure the correctness of the stored bean properties
updated the initialization of the averages array from pageSize to initialPageCount to ensure the averages array reflects the correct initial page count
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and facilitate future feature additions
added JDBC data source and transaction manager beans to BatchMetricsApplication to enable integration with HSQL databases for improved data management
fix checkstyle issue in io / glowroot / glowrootloghttpservice . java
pdfbox - 4892 : use non - stroke java composite , a suggest by valerybokov
removed synchronization from the close method in DocumentsWriter and updated the deleter variable in DocumentsWriterPerThread to improve performance by reducing
added methods for retrieving and setting multiple choice options and validation constraints in UiBinding . java to enhance property management capabilities for UI components
updated method calls from ` builder . setReflectively ( ) ` to ` builder . setReflectively ( ) ` for consistency to improve cl
added a fullSave flag and modified the action handling for tree saving in Save . java to ensure that the tree is only updated when saving is
refactor Affix and Dictionary classes to use Pattern instead of String for condition handling to improve efficiency and maintainability of affix processing
replaced explicit type parameters with string literals for KrakenFee instances in KrakenAdaptersTest . java to improve code readability and
removed unused CharTermAttribute import from DefaultIndexingChain . java to streamline code and improve performance by eliminating unnecessary attribute retrieval
refactor NBJavacTrees . java for improved structure to enhance maintainability and readability of the code
removed unsupported operation exception for non - plain data encoding in VectorizedPrimitiveColumnReader to improve error handling for unsupported data encoding
updated logging logic in HttpSolrCall . java to keep / gradlew check happy to enhance visibility of logs for better debugging and monitoring
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service instances
improve defaultentityqueryrepository to prevent infinite recursion
updated error message handling in HubChangeExecListener . java to differentiate between null changelog ID and non - null changelog ID to improve clarity
add try harder hint to the blackbox test case
updated methods in CxxPreprocessAndCompileStep to return a ProcessExecutor . Result instead of an integer exit code to improve error handling by
modified the logic for setting the maximum number of events in the query to ensure that the query does not exceed the defined maximum events limit
simplified the validation checks in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability
fix concurrentmodificationexception in entityawareworldprovider
removed redundant type checks in InifyArrayCopyPhase . java to streamline the code for better readability and maintainability
remove unnecessary logging in testcoyoteadapter
removed the WantedAnywhereAfterFollowingInteraction class and updated related test assertions to simplify exception handling and improve clarity of error messages
added null checks for ` ownerAddress ` and ` keyAddress ` in ` AccountPermissionUpdateActuator ` and ` PermissionAddKeyActuator
refactored scriptlauncher to use treemap instead of comparator
chore : [ workflow ] update go _ package to match open source code ( # 113 )
replaced ` _ metadataProperties . addProperty ` calls with ` _ metadataProperties . setProperty ` for improved readability to enhance code clarity
updated AsmLoader constructor to accept a ClassLoader parameter to enhance flexibility by allowing different ClassLoader implementations
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
updated namespace declaration formatting in Java2TypeScriptTranslator . java to improve clarity and maintainability of the code
replaced ` EmptyServerHandler ` with ` AbstractHandler ` in ` HttpClientTest . java ` to ensure proper handling of HTTP requests by copying
removed unnecessary String arrays from input listeners in HelloInput . java to simplify code and improve readability
hhh - 14810 - fix npe in abstractsqmpath when getroot ( ) return null
updated package declarations in multiple test files to improve organization and clarity of test classes
refactor image creation and filtering logic in AwtCanvas . java for improved performance and clarity to enhance image handling efficiency and maintainability
make native image location qualifier configurable and initialize libgraal on startup .
remove dataflowportabilityapiunsupported class from pardstest .
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 336 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
rename CallStack . java files to improve clarity and consistency in naming conventions
log warn if max size configuration do not allow any data in the map
update messages from " AST " to " LST " across multiple files to clarify the purpose and usage of the LST element in
refactor code for improved readability and maintainability in ThreadedAcousticScorer . java to enhance code clarity and
replaced an assertion exception with a null return in NetHooks . java to improve error handling by returning null instead of throwing an assertion failure
fix flaky test in applicationcontrollerfluentleniumtest
added default ` makeString ` methods to ` ParallelIterable ` , ` RichIterable ` , ` AbstractSynchronizedRichIterable ` , and
replaced hardcoded order value with a static final constant in OidcServicesManagerRegisteredServiceLocator to improve code readability and maintainability by
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer class and updated its usage in WeakAssociationsCatalogLoader and WeakAssociationsAnalyzerTest to allow
modified the Deflater class implementation to enhance compression efficiency and improve performance
added exception handling for IOException in Font . java to improve robustness by throwing an IOException when an error occurs
added a null and empty check for content in VersionTypeBinding . java to ensure safe handling of empty content and avoid potential NullPointerExceptions
refactor variable names and method calls in NearbyListFragment . java for consistency and clarity to improve code readability and maintainability
convert the content type check to lowercase in MailConverters . java to ensure consistent behavior regardless of the case of the content type
openssh : make ` ` openssh - key - v1.0 ' ' public , rather than ` ` openssh - key -
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding to enhance flexibility in handling folder name suggestions based
updated import statements and modified cache annotations in InheritanceCacheTest . java to streamline annotations and improve cache management functionality
updated import statements in ConnectOAuth2RequestFactory . java and implemented getUserApprovalRequest method in TofuUserApprovalHandler . java to ensure
fix name convention not apply to tag value ( # 645 )
do n ' t show resolution for marker that do n ' t have resolution
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to ensure correct handling of cookie - related requests
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated references in ` Subject . java ` to standardize
added functionality to manage the visibility and visibility of the clear all action in OverviewActionsView to enhance user experience by allowing users to toggle the
updated ` desiredRepoVersion ` to be ` final ` and added a null check for ` existingCSVer ` in ` ClusterStackVersionResource
remove memoryleaktest since it be no longer use
modify the return statement in ServletTester . java to include localhost address to improve clarity of the returned URL for better debugging and monitoring
added a new setting for MVDWPlaceholderAPI and modified the plugin condition in ServerListener . java to ensure compatibility with MVDWPlaceholder
add assertclustersizeeventually ( ) to abstractpartitionassignmentcorrectnesstest
added a singleton holder class for FFIProvider and implemented loading logic based on JNA usage to enhance flexibility in managing FFI provider instances
add a unit test for hierarchical file list in batchprocesstest
added null checks and updated id property assignment logic in MongoTemplate . java , and implemented new test cases in MongoTemplateTests . java to ensure
updated position initialization logic in NodeClass . java to use NODE _ LIST instead of 0 to improve clarity and maintainability of the code by
added ` accTradeValue ` field and its getter / setter methods to ` BithumbTicker ` , and updated trade history parameters in `
updated logging statements in RealtimeSegmentDataManager and AvroUtils to include segment name in log messages to improve logging clarity and provide more context
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replace ArrayList with CopyOnWriteArrayList for header and data readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex
update copyright year to match last edit in java file .
added a null check for destBuffer before proceeding with operations to prevent potential NullPointerExceptions during execution
fix camel - msv test which randomly fail on slow ci server
updated the condition to check if ` beginCycle ` is greater than ` currentCycle ` in ` DelegationService . java ` to ensure proper
updated the ` RandomValueStringGenerator ` from ` 6 ` to ` 10 ` in ` JdbcExpiringCodeStore ` , ` CodeStore
added a condition to check if the object is an instance of UniqueConstraint before matching it to ensure that only unique constraints are processed in the change
updated string handling and refactored language code management in MediaDetailFragment . java to improve code readability and maintainability while ensuring accurate language
handle arrayindexoutofboundsexception and classnotfoundexception in findbugs2
add listimagecmd with referencefilter ( reference ) and withfilter ( key , value ) with referencefilter ( key , value )
camel - 15836 : camel - jms should not use bridgeerrorhandler a it be not support on the jms endpoint .
added checks for specific conditions in OpExclusionUtils . java to handle cases where no operations are found for exclusion to improve error handling and provide
added two return statements in DatabaseCommand . java to ensure the method correctly returns false
update politician example to use the new politician
[ zeppelin - 5441 ] fix npe in beanshellinterpreter when initfile be empty ( # 5
camel - 16400 : camel - restlet - add port option to allow port number to be use for restlet endpoint
removed unused import statements for BlockID . WALL _ SIGN in SchematicFormat . java to streamline code by eliminating unnecessary
added a system property to set the maximum query length to 100MB in QTestUtil . java and removed overridden configurations from SessionState . java
changed access modifiers of variables and refactored HttpConfiguration initialization in WebServer and WebServer classes to enhance encapsulation and ensure proper server configuration
updated processor names from " writeHdfs " and " streamKafka " to " hdfsSink " and " kafkaSource " across multiple Java
updated the logic for setting the Spark app name in HiveConf and HiveSparkClientFactory to ensure the correct application name is set based on
rename variable ' whiteName ' to ' includedName ' for clarity to improve code readability and maintainability
simonstewart : add a new maximize window handler to the remote server
updated methods in ` AbstractEmbeddedCellBuckOutInfo ` and ` DefaultProjectFilesystemFactory ` to include ` mainCellBuckOutInfo
updated assertion in TestXMLEntityExpansion to check for the presence of " entity expansions " to ensure that the error message is
modify table offset and length assignments to use bitwise AND with 0x7FFFFFFF to ensure that offset and length values are within the valid range
removed the customization method from DirectMethodHandle to ensure that the form ' s customized state is not null
refactor buffer allocation and coordinate comparison logic in LineChartRenderer . java to improve readability and maintainability of the code
refactor flavor handling in AndroidBinaryDescription and update related tests in AndroidBinaryFlavorsIntegrationTest to improve clarity and functionality of flavor
updated buffer index reference from ` offset ` to ` i ` in ` LwjglGL11 . java ` to ensure correct buffer assignment
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` for handling ` NoClassDefFoundError `
remove shutdown hook only if group property ` ` shutdownhook . enabled ' ' be set to true
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and simplified the constructor of ` VirtualFilterChain ` to streamline
[ hotfix ] [ table - planner - blink ] use arrays . sort ( ) for percentile aggregation
added checks to ensure schemas are not loaded before loading them in MetaDataBasedSQLCompletionProvider and modified mdTable assignment in QueryTypeAnalyser
changed the initialization of baseType to null and initialized literalPrefix , literalSuffix , and localizedTypeName with empty strings to simplify the handling of column data
updated HTML link formatting in multiple Java files to improve readability and maintainability of the code
replaced multiple instances of ` getInstance ( ) ` with direct instantiation of ` ObjectEqualEvaluator ` , ` ObjectNotEqualEvaluator ` , and
updated configuration file references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " and " third -
added sound effect playback functionality in AllAppsView . java to enhance user experience by enabling sound feedback during interactions
changed the exception type from Exception to IOException in the main method to improve error handling by providing a more specific exception type
added granularity setting to the leftAxis in BarChartActivitySinus . java to enable the left axis ' s granularity for better data visualization
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated file handling in ContextHandlerGetResourceTest to utilize MavenTestingUtils and added OS _ ALIAS _ SUPPORTED checks to ensure compatibility with
added a close ( ) method to multiple transport classes and updated connection handling in JsonAsyncHttpPinotClientTransport to ensure proper resource management and
log4j2 - 1343 use blockingqueue in mockappender to reduce contention
[ beam - 4142 ] fix illegalstateexception in hadoopresourceid . getdirectory ( )
removed multiple unused import statements from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
fix nullpointerexception in itemserviceimpl # unbind ( item , item )
refactor Config and Attribute classes to improve code structure to enhance maintainability and readability of the code
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
set navbardarkintensity base on dark theme in
replaced abort with throw in PolyBenchLauncher . java to ensure proper exception handling when language determination fails
replaced bootstrapMethodIndex and nameAndTypeIndex with refKind and memberIndex in ClassWriter . java to improve type safety and clarity in
added BlockFormattingContext parameter to findBox and findElementBox methods to enhance layout handling by incorporating block formatting context
refactor WorkerProcess and WorkerShellStep to improve error handling and logging to enhance reliability and clarity in process execution and error reporting
added null check for operator in Collections . checkedList and improved error handling in CheckedListReplaceAll . java to enhance code robustness and
added a new boolean flag ` _ testFill ` and a FutureCallback ` _ writeCallback ` in ` SslConnectionTest . java ` to
added listener registration for device configuration changes in DeviceFlag . java and changed the visibility of mCurrentValue in FeatureFlags . java to enhance device configuration
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue gh - 1114
removed the import of MalformedURIException from StandardRequestHandler . java to clean up unused imports and improve code clarity
added focus to the end of the date box in the instructorfeedbackeditpage
refactor synchronization logic in KrakenStreamingTradeService . java to improve readability and maintainability of the code
changed System . err . println to System . out . println for logging the " ignoring Class - Path entry found " message to improve logging visibility
mondrian : introduce randomaccessrows option to sparserowmatrix
server : fix npe when delete volume from storage pool
updated the way the job path is handled by differentiating between local and local configurations to improve flexibility in specifying job paths based on configuration settings
[ beam - 10619 ] fix build break by change to guava
reset internal state in soshutdown ( ) to free memory
fix a nullpointerexception in the conferencechatmanager . sendchat ( ) .
added file write validation to ensure the file can be written before proceeding to prevent exceptions when attempting to save a file that cannot be written
added FolderSyncActivity and created FolderSyncActivity for managing folder synchronization functionality to enhance user experience by providing a dedicated activity for folder synchronization
[ hotfix ] [ test ] fix resource leak in sequentialchannelstatereaderimpltest
spanishtreenormalizer : add support for % sign in word separator
replaced the use of ` PointReader ` with ` PackedValueSlice ` in ` SimpleTextBKDWriter . java ` to
added LocaleRandomizer and its corresponding test class to generate random locale values to facilitate the generation of random locale values based on available
tika - 3892 -- add mime type detection for font - printer - metric and font - type1
[ netbeans - 4354 ] upgrade to netbeans 4.1 . 0 , add 10.0 . 0 to list
removed the ` AccessController . doPrivileged ` call from the ` run0 ( ) ` method in ` TCPTransport . java ` to streamline the
fix http / 2 test break by http / 1.1
updated default dispatch delay from 120 to 600 in TimelineMetricConfiguration . java to improve performance by allowing more time for metrics processing
updated error message to include the name of the primary key column to improve clarity of error messages for better debugging
added Joda - Time support for date fields in ThirdEyeJiraClient to enhance date handling capabilities in the application
refactor HeadersGenerator and PriorityGenerator to use a dedicated method for generating priority headers to improve code readability and maintainability by centralizing priority
added a constant for maximum scalar replace code size and modified the condition for scalarReplace to ensure that the scalar replacement logic does not exceed the maximum
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder to use DATE _ TAKEN instead of DISPLAY _ NAME to
updated drawing drawing parameters in TexturePacker2 . java to correctly account for image dimensions to ensure correct rendering of images based on specified dimensions
refactor JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to streamline WebSocket filter management to improve code clarity and maintainability
added shutdown calls for ` validateSignService ` , ` TransactionsMsgHandler ` , and ` trxHandleHandlePool ` to ensure proper resource
added RawJsonRequestBodyAnnotationProcessor and integrated it into Echo and TestJaxrs classes to enable support for raw JSON request bodies in the Swagger
added a new method ` newTarget ` to ` LoggerUtils ` for creating a ` Target ` instance to facilitate the creation of
updated the ListBeanContainer to use an ArrayList for entries and added a new BeanContainerTests class for testing to improve performance and ensure correct functionality
change metric name from blockCountHitPercent to blockCacheCountHitPercent in TestMetricsRegionServer . java to clarify the purpose of
camel - 7017 : fixed fileinputstreamcache to not leak resource on completion .
add deviceid to teltonika position ( fix # 3751 )
updated the method for reading the first line from ` Files . readFirstLine ( ) ` to ` Files . asCharSource ( ) `
added a null check for the operator in the visitAssignop method and created a new Test class with a test method to ensure proper handling of
added a boolean flag ` enableAccountHandling ` and modified the ` onCreate ` call in ` BaseActivity ` to conditionally invoke ` on
[ isochrone ] use a heuristic to find the maximum number of point in a multi - polygon ( # 1358 )
updated DrillViewTable to accept a List < String > for the path parameter and modified its constructor to accept it to enhance flexibility in
updated the constructor of PooledByteBufAllocatorL to include default configuration parameters to enhance flexibility and configurability of the allocator settings
modified the condition in ObjectInputStream to handle short arrays instead of double arrays to ensure correct cloning behavior for different object types in ObjectInputStream
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE in HiveConf . java and updated executor initialization in LlapIo
8u171 : remove sun . security . ssl . debug and sun . security . ssl . ssllogger from securityservicesfeature
refactor LatLonGrid and TestLatLonGrid to utilize minRange for boundary checks and add a new test method for growing polygons
danielwagnerhall : add ` expectconditions . invisibilityofelementwithtext ` and ` expectconditions . refresh
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated related logic to handle ` isInsertOverwrite ` to
added a test for the ` getEnclosingObject ( ) ` method of ` SomeInnerClass ` in ` ReflectorTest . java ` to
added " auto _ generate _ android _ facet _ sources " configuration to ConfigIgnoredByDaemon and modified IjProjectBuckConfig to enable
refactor message handling in HubChangeExecListener to use a message variable instead of hardcoded strings to improve code readability and maintainability by
added properties property handling in the Link class and corresponding tests in QuickLinksConfigurationModuleTest to enable dynamic property resolution for quick links in the configuration
updated ` @ EqualsAndHashCode ` and ` @ EqualsAndHashCode ` annotations and added a ` toString ` method in ` YamlConfigFileDTO `
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCallListener to improve type safety and clarity in the code
added ` @ CallerSensitiveAdapter ` and ` forName ` methods with ` ClassLoader ` and ` isAdapter ` annotations to enhance class loading functionality by
updated import statements and modified method calls from ` isEmptyOrNullString ` to ` isEmptyOrNullString ` in ` RequestItemRepositoryIT . java `
replaced ` ThreadPoolExecutor ` and ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` and ` LinkedBlockingQueueEx ` in ` Group
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated TimeStepdefs . java to replace HumanTime with a new Chronoic date representation to improve clarity and functionality of date handling in
fix wrong placement of spark upgrade item in banner .
updated RestProxyFactory to use Uri instead of ExchangeSpecification for proxy creation to ensure proper URI handling for proxy creation
removed multiple debug print statements from RecordGenerator . java to streamline output for better readability and maintainability
camel - 16400 : camel - kafka : enable autocommit by default . thanks to johannes for the patch .
removed lock release logic in Liquibase and updated LoggingExecutor and StandardLockService to improve lock management and ensure database change log lock table
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added deprecation warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code clarity
removed unnecessary synchronization around method calls in Database and SessionRemote classes to improve performance by reducing unnecessary synchronization overhead
polish ` ` fix spring - boot auto configuration maven plugin ' '
updated the ticker adaptation from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure correct ticker adaptation for
( chore ) camel - core : fix checkstyle issue
replace UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure
resolved - issue batch - 1365 : synchronize date / number / decimalformat / longnumberformat / date / longnumberformat / long
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
updated height scale from 256 to heightScale in FractalHeightMapGrid . java to allow dynamic adjustment of the height scale based on the
replaced ` assertEquals ` with ` assertNotSame ` in ` SecurityConfig ` and updated equality check in ` SecurityConfigTests ` to
changed the default value of dumpPartitionId from " dump - partition - id " to " dump - partition - id " to ensure that partition
added unit tests for UTXO handling in UTXOSetTest . java to ensure proper transaction output and output management in the blockchain
[ java ] unusedassignment , unusedformalvarvar and unusedlocalvariablerule now check for ` ` unused ' ' and ` `
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the job restart properties handling in JsrJobOperator and added a new test for job parameters overriding previous restart parameters to ensure correct job restart
added a protected boolean field ` disallowBatchOnCascade ` and its getter method to the ` DatabasePlatform ` class to allow control over batch
updated the principal initialization logic in JaasAuthenticationHandler . java to ensure proper handling of principal creation based on the presence of subject principals
refactor core shutdown logic to use an ExecutorService for improved thread management to ensure that the MDCLoggingContext is cleared after shutting down the
added visibility control for mActionsView based on fullscreen progress to improve user experience by hiding the actions view when fullscreen progress is not
refactor parameter handling in RunIdIncrementer to use a conditional expression to improve code readability and maintainability
refactor BasicEntity and TestUtil classes for consistency to improve code maintainability and readability
added assertions to validate the number of matched device retrieval in SchemaRegionBasicTest to ensure that the schema region tests accurately reflect the expected number
[ 3.0 ] add tryinvoke ( ) method for metric event event ( # 9496 )
added a conditional check for ` max ` in ` EigenvectorCentrality ` and created a new ` EigenvectorC
updated registry creation and lookup logic in LookupIPv6 . java to use a random port instead of a hardcoded registry port to enhance flexibility
updated GeometryGenerator to include the ifcProduct OID and modified buffer creation methods to include databaseSession context to enhance geometry data handling and improve type safety
updated the amplifier setting from 2 to 0 in the BlockEntityBeacon class to ensure that the beacon is not incorrectly marked as un
refactor TubeCalc class to improve code readability to enhance maintainability and facilitate future feature additions
disable health check by default ( # 6321 )
make group list immutable and add validation for inherit group
updated JList selection annotations and added a timeout for the test to address issue 8057791 and improve test stability
make the thread daemon to allow speedment application to exit via main method completion fix # 322
update version parsing in ItemLexicon . java to use the version variable directly to improve clarity and maintainability of version handling
added reflection access check in JavaAdapterFactory . java to enhance security by ensuring proper reflection access validation
try to fix the ci failure of camel - mina
updated initialization of I / O context in CombineHiveRecordReader and HiveContextAwareRecordReader to include RecordReader as a parameter to enhance
deleted ClassLoaderHolder . java and LoaderManager . java files , and modified the VerticleManager . java and VerticleManager . java files to
added a method ` configurationChanged ` to ` FileStore ` and updated ` JavaLanguageServer ` to check if the configuration changes to ensure that
added try - catch blocks around registerSessionCallback and unregisterSessionCallback methods to handle potential exceptions during session callback registration and unregistration
updated index creation paths to remove " src / test / org . apache / lucene / index / " and added " 23 . cfs
[ refactor ] [ runtime ] extend akkarpcserviceutils to support instantiate custom akkarpcservices
added a retry configuration for mapreduce . map . maxattempts in TestExportSnapshot . java to limit the number of attempts in the mapreduce
pdfbox - 4892 : use non - symbolic instead of non - symbolic , a suggest by valerybokov
added a new test class SslConnectionTest for SSL connection handling to ensure proper functionality of SSL connection management in the Jetty client
added validation for address family type in InetAddress and NetworkInterface classes to ensure only IPv4 and IPv6 address types are accepted to prevent runtime errors
added a test method for serializing a list of dates in DefaultTypeAdaptersTest . java to ensure correct date serialization functionality for various date types
refactor Message class to improve message handling logic to enhance performance and maintainability of message processing
nifi - 2321 : fix bug in putdatabaserecord when the first update key be not generate .
corrected the loop condition in TableOutput . java to ensure proper calculation of the running width
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
use high _ priority instead of normal _ priority for formatstringchecker .
[ java ] localvariablecouldbefinalrule - ignore non - final loop variable in for - each statement .
added PDF version and full compression settings in PDFExporter and updated sample path in PDFExporterTest to ensure compatibility with the latest PDF format and improve
add unit tests for LdapUserDetailsMapper to ensure role attribute mapping functionality works as expected
add configuration for ldap read timeout ( # 3649 )
rename TestDescription . java files for consistency to improve clarity and maintainability of the codebase
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` and related variables to ` shouldAvoidAllocation ` and update references accordingly to clarify the purpose of the
added a condition to check if the state handler is invalidated in the gesture handling logic to ensure that gestures are only processed when the handler
updated ` mMaxDistanceForFolderCreation ` and ` mOldRotationPageIndex ` variables in ` Workspace . java ` to improve folder creation
updated configuration handling in OciConfigConfigSource . java by replacing ConfigProvider with ConfigProviderResolver and modifying property checks to improve clarity and
refactor Testjsig class to improve code readability and maintainability
fix mana ring , ring , terra pick , and mana tablet not respect the item count . close # 364
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the serialVersionUID field and added a @ SuppressWarnings annotation in P11TlsPrfGenerator . java to simplify the code by eliminating unnecessary
refactor file validation logic in DataRegion . java to improve clarity and handling of empty and non - empty files to enhance code readability
added two new Java files , Switch21 . java , Switch19 . java , and Switch21 . java to implement switch - case pattern matching
updated error message formatting in ComparableSubjectTest . java to improve clarity of error reporting for conversion conversions
updated StreamHelper to use Apache POI ' s Internal API and added a new TestStreamHelper class for XML processing to enable standalone XML processing
updated size validation logic and improved exception messages in Int2ObjectCache . java , and added an equals method in Map . java to enhance
added order annotations to security filter chains in WebSecurityConfiguration and WebSecurityConfigurationTests to ensure that security filter chains are loaded in the correct order
removed the TimeInForce reference from the order type in BinanceTradeService . java to streamline order processing by eliminating unnecessary time
refactor ` FloatRangeRandomizer ` to extend ` AbstractRangeRandomizer ` and add validation for min and max values to enhance randomness
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' to ensure compatibility with newline characters
camel - 14850 : camel - activemq - make it easy to configure component and whatnot .
added error handling for ` bound ` in ` SourceUtils ` and created a new test class ` TestGetBound ` to improve robustness of
refactor filter builder logic in LeafFilterFactory to use a helper method for better readability and maintainability to improve code maintainability and reduce
added checks to ensure originalArtifactName starts with SCOPED _ TARGET _ BEAN _ PREFIX and improved resource management in JobContextFactoryBeanTests
added a loop to read certificates from an input stream and updated the server key generation to include the serial number and issuer DN for each certificate to
refactor configuration handling in ` Config . java ` and add a new ` DnsFallback . java ` class for testing DNS fallback behavior to improve
ww - 3640 add the cause to the strut exception when write a tag
changed the ` success ` field to ` url ` and updated related JSON properties in ` DepositAddress . java ` to store the URL
replace the Privilege class implementation with a lambda expression and ensure LocalFree is called after the drop operation to improve code readability and ensure
removed " address " and " phone " scopes from the OAuth2 registration scope in the CommonOAuth2Provider and its tests to simplify the scope
refactor the submission process in ManagedSelector to use a separate Start class to improve code organization and ensure proper synchronization of the selector ' s start
added constants for hue65535 and saturation255 , and modified the request handling logic in WLedHandler . java to improve precision of color
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set in ` VectorizationProvider . java ` to improve code
added a new method caseJSRInst to the InstSwitch class to support JSR instruction handling in the application
added transactionmanager to subscriptionactivatingsubscriber to ensure that subscription activation be run on the correct thread .
modified SQL update statements in DBMSProcessor . java for better handling of metadata updates to ensure data integrity and prevent potential errors during database operations
updated elevation calculation in ContactItemInflater to ensure proper elevation settings for devices running Lollipop and above
renamed variable ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
replace direct file access with privileged actions in SandboxFileManager . java to enhance security by ensuring file operations are executed with the appropriate privileges
updated GroovyParserVisitor , GroovyPrinter , and GSpace classes to include additional space handling for binary operations to improve the parsing and printing of binary
updated warning message to include the class name of the exception to improve clarity of error logging for better debugging
refactor character reading and writing logic in RecordInputStream and UnicodeString classes to improve code clarity and ensure correct handling of Unicode characters
test : add test for norway character in file name
replaced RuntimeException with a custom CancellationException and added methods to check cancellation status to improve error handling and provide clearer feedback on request cancellation
fix npe in timedmemberstatefactory when statistics be null
refactor MongoTemplateTests to improve readability and add a test for removing an object from an explicit collection to enhance code clarity and ensure
updated copyright year from 2015 to 2022 in multiple Java files to reflect the latest copyright year
[ beam - 10670 ] change newline to use % n instead of \ n
added a flag to track if the clear all button is fully revealed and refactored scroll logic in RecentsView and Pag
added a COMMON _ HMS _ PROPERTIES map and refactored parameter handling in HiveIcebergMetaHook and HiveIceberg
added a method to check if an address is already in use and refactored error handling to use this new method to improve code readability
added a command - line argument to the TestNestmateAttr class to specify the classpath for the test class
changed the logging level from VERBOSE to verbose _ schema in Grep . java to provide more detailed logging information for better debugging
remove unused import and add miss @ override annotation
# 113 - add support for nested transaction savepoint ( # 113 )
refactor fetchSize to use ThreadLocal instead of a fixed integer to improve thread safety and ensure proper management of fetch size
[ java ] use noopidlestrategy instead of backoffidlestrategy .
refactor blocking calls in HttpClientIntroductionAdvice to use a new handleBlockingCall method to improve code readability and maintainability
added a check for the HDP _ VERSION environment variable before setting it in SliderAppsViewControllerImpl . java to ensure that the application
refactor ` JavacProcessingEnvironment ` to include ` loaderClass ` , ` jusl ` , and ` loader ` variables ,
added deep cloning functionality and modified method visibility in ParameterizedRobolectricTestRunner and RobolectricTestRunner , and introduced Deep
added binding for JETTY _ SHOW _ STACKTRACE to Boolean . FALSE in ResourceBase . java to enable stack trace visibility for debugging purposes
added a type check for OBJECT in NativeObject . java to return null if the object is of type OBJECT to ensure proper handling of object types
replaced instances of ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot . types
updated ` JwkKeyListView ` to use ` PublicKey ` instead of ` RSAPublicKey ` and added support for Base64 encoding to
useonlywritablebootimageheap instead of spawnisolates when useonlywritablebootimageheap .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve readability
added ` getOwnerAddress ( ) ` method to multiple actuator classes and updated the ` Validator ( ) ` method to return a ` ByteString `
fix for http : / / issues . apache . org / activemq / browse / amq - 2852 - add a simple
updated byte array handling for min and max parameters in BinaryClient . java to improve flexibility in sending commands based on minimum and maximum values
update protobufannotationserializer to handle edge with no index .
[ java ] remove the correlationid from the async command id set when an event be receive .
added method calls to save conflict states in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure consistent handling of file conflicts
updated generic type usage in multiple classes for improved type safety to enhance code clarity and prevent unchecked warnings
replaced instances of ` StrUtils . splitFileNames ( ) ` with ` splitFileNames ( ) ` across multiple filter factory classes to
added support for Oracle and MySQL driver properties in DatabaseFactory to enable compatibility with Oracle and MySQL databases
updated the ` interceptor ` initialization in ` SignedSupportingClassProxyFactory ` to include a ` handler ` parameter and added a ` serialVersionUID `
updated time calculations in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of Date . getTime ( ) to improve accuracy of
[ hotfix ] [ table - planner - blink ] add classloader to executioncontext # createtable ( )
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to ensure UI updates occur on the UI thread when the terminal text view overlay
reformatted code in ConfigDispatcher . java for improved readability to enhance maintainability and clarity of the code
refactor freeze action logic to differentiate between static and non - static calls to enhance flexibility in managing frozen operations based on VM configuration
added insecure configuration options to TlsConfig and updated TlsUtils to use insecure trust manager to enhance security by allowing configuration of insecure connections
refactor JavadocTool to simplify path handling and add a new class T7091528 for testing to improve code readability and maintainability
changed attribute column names from ` nodeColumns ` to ` edgeColumns ` and replaced ` toLowerCase ( ) ` with ` equalsIgnoreCase ( ) ` for
added cascade option to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the DefaultUserInfo entity is not persisted in a foreign key
change message . equals ( ) to use array . equals ( ) instead of messageid . hashcode ( )
updated the response body from " ? ? ? " to " \ u017D \ u017D " in AsyncProvidersBasicTest
[ hotfix ] [ test ] remove unused method in rocksdbSerializedCompositeKeyBuilder
added static permissions handling in ProtectionDomain and updated SubjectDomainCombiner to utilize it to improve security checks by allowing access to static permissions
fix crash when try to use float flower with a recipe that do n ' t exist .
refactor parse index handling in Parser . java to improve clarity and structure to enhance readability and maintainability of the code
added a method to show a connection error popup in the UploadMediaDetailFragment and implemented it in UploadMediaDetailsContract to improve user experience by
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to check for unsupported media types before returning
change bit shift from 1 to 1L in NodeBitMap . java to ensure correct type conversion for bit manipulation
refactor ImportLayoutStyle class to improve code readability and maintainability
replaced ` gitBashConfigValue ` with ` useStdin ` in ` ConsoleWrapper ` and ` ConsoleUIService ` to enhance
replaced Mockito mocking with TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest . java to improve test clarity and ensure
simplified the retrieval of the enclosing type by directly using the enclosing type from the wrapped object to improve code readability and maintainability by
renamed methods in Pairs , InPairsExpression , and TestCacheViaComplexNaturalKey3 to follow Java naming conventions to improve
hbase - 16400 remove timeout from putallcallable # set ( keyvalue , value )
[ rocketmq ] fix npe in mqclientinstance # unregisterconsumer ( ) when consumer be empty or not
[ java ] generate source identity before send message to the driver .
added a new file ` TopTabAction . java ` that defines a toolbar action for displaying a " lalal " label to provide a
camel - 16400 : camel - core - optimize rout engine to reduce stack frame in use during rout .
updated the ` AggregateItemReaderTests ` class to use JUnit 4 annotations instead of JUnit 4 annotations to improve test structure and align with
added generic type parameter ` < T > ` to the ` Procedure ` constructor in ` AbstractObjectValueTypeMap . java ` to enhance type safety
added functionality to track and manage Wikidata edits based on the user ' s session to improve user experience by allowing dynamic updates to the
added validation to ensure ' len ' is within Short . MAX _ VALUE to prevent illegal argument exceptions during sorting
clear and report all bug in dumbmethods . java if the load of minvalue be true .
refactor various dataset classes to improve code organization to enhance maintainability and readability of the codebase
updated the exception message to include the acceptable values of the credential type in ProvisionClusterRequest . java and modified the expected exception in ProvisionClusterRequest
updated random number generation for v [ 0 ] and v [ 1 ] in TestVectorUtil . java to ensure uniformity in random number generation
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the comparison logic to improve precision in
added SSL property management and updated SSL handling in TestUtil and PGPropertyTest classes to ensure proper SSL configuration and improve test reliability
danielwagnerhall : set safebrowsing to true for chrome . download ( file extension )
added null check before cloning flight configuration in BaseMotorMount . java and RecoveryDevice . java to ensure that oldConfig is not null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on configuration
improve handling of empty lists in DataTable and TableDiffer classes to enhance robustness and prevent potential NullPointerExceptions when comparing empty lists
added a new constant ` CustomIgnoreTag ` and modified ` RobustJavaMethodParser ` to conditionally remove it from the iterator based on
camel - 16463 : camel - jdbc - optimize should use optimisticlockingoperationexception instead of generic runtimeexception
fix @ configurationproperties ( ` ` parent ' ' ) for @ configproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments to enhance UI responsiveness and ensure proper
deleted the ClusterNodeInfo . java file to remove unused or redundant code from the event bus implementation
updated return statement in ShieldedTransferActuator . java to ensure consistent return behavior
added debug output for cipher suite selection in ServerHandshaker . java to provide visibility into the chosen ciphersuite during the handshake process
update ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle template selection based on the size of ` templateList
added functionality to handle duplicate nodes with labels in the ImportContainerImpl and ImportContainerParameters classes to improve error handling and provide clearer feedback when
added a new file R2303044ListSelection . java to test the selection of a list item to ensure that the list item is
[ java ] remove registrationid from publicationregistration so that it can be reuse .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the compound property is correctly
updated the calculation of new row counts in StatsRulesProcFactory . java to use a new instance of rowCounts to improve clarity and maintain
updated path handling in ` SpringBootDocBuildTemplate . java ` and refactored parameter extraction in ` DocUtil . java ` to improve
fix findbugs issue in com . sun . tools
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and added conditional logic for source file materialization to improve
updated RuntimeException to include detailed error message for JSON parsing failures to improve debugging by providing more context about parsing failures
added a DEBUG mode to the log statement in WidgetsModel . java to avoid logging unnecessary messages when DEBUG mode is enabled
refactor Console and Scanner classes to improve code readability and maintainability
simplified the calculation of numTerms in SimilarityBase and added a new test for discount overlaps in TestSimilarityBase to improve
added reflection checks for ` SimpleMailMessage ` and ` MailSender ` methods in ` SimpleMailMessageItemWriterTests ` and ` MimeMessage
added new exit and quit methods with corresponding properties to Global . java and removed the old quit method from ScriptingFunctions . java to streamline
updated variable name from ` ac ` to ` context ` in ` LoanBrokerGateway . java ` and ` LoanBrokerSharkDetector
rename methods and variables from ` getFirst ` and ` getLastInvocationStackTrace ` to ` findFirstUnverified ` and ` findLastInvocationStackTrace `
[ vmware ] use requestcontext . getcookie ( ) instead of requestproperty . requestproperty ( ) . setcookie ( ) in vm
updated assertions in ResinAcegiAuthenticatorTests to remove unnecessary whitespace to improve code readability and maintain consistency in assertion formatting
updated the bigIntegerToBytes method calls to specify a default value of 32 to ensure consistent byte size for ECKey instances
rename fml . disabledmods property to fml . modstates instead of fml . disabledmods
refactor account selection logic into a separate method ` showAccountChooserDialog ( ) ` to improve code readability and maintainability by reducing
improve error message when collectsink fail to connect to the client
updated ValidatorContractController to handle unexpected empty results from validator smart contract calls to improve error handling and provide clearer feedback for unexpected results from the
modified TexturePackerFileProcessor to handle empty settings file gracefully to improve robustness by preventing null pointer exceptions during JSON parsing
remove a redundant null check for datasource in PooledConnection . java to streamline the code by eliminating unnecessary checks
updated TARGET _ MB and WINDOW values and introduced a sink byte array in TestRefprocSanity . java to optimize memory allocation and improve
fix a crash on startup problem ( console be null )
set the credentials refresh delay to 100ms to improve user experience by allowing more time for credentials to be refreshed
refactor alert dialog creation into a separate method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
added a new parameter ` pack ` to the ` test ` method and modified its usage to include it to enhance functionality by allowing the method to
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and modified dependency
updated import statements and modified dependency resolution logic in PluginBundleManager . java to simplify import statements and ensure dependencies are only resolved if they are not
added a HashSet to manage ZipFileInputStream instances and updated the releaseInflater method to ensure proper resource management and prevent memory leaks
rename datamatrix to data _ matrix for consistency
[ hotfix ] [ test ] fix sequencegeneratorsource to wait for key to be idle
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer . java and BlobServerGetTest
replaced ` findAny ( ) ` with ` findFirst ( ) ` and added a new method ` getAnnotations ( Class < T > type )
added support for " ppc64 " and " ppc64le " architecture checks in Bits and ByteArrayAccess classes to ensure compatibility with additional
added a link to the GitHub link in the RuntimeException message when resolving an activity to provide clearer guidance for debugging activity resolution issues
updated waitWithDeadline parameters from MINUTES to Long . MAX _ VALUE in TransactionImpl . java to improve timeout handling for transaction retries and rollback
replaced instances of ` new Date ( ) ` and ` OffsetDateTime . now ( ) ` with ` Instant . now ( ) ` and
refactor BytesRef class implementation to improve performance and maintainability of the code
added a toast message indicating when YouTube Player does not work on Lollipop yet to inform users that the YouTube Player does not
added error handling for unterminated dollar quotes , string literal , identifier , and block comments in the parser to ensure proper syntax errors are thrown
do n ' t show vibration when there ' s no vibration
updated border and background color settings and modified arrowhead and arrowtail assignments in DotRenderer . java to improve table rendering consistency and enhance arrowhead
added a method to check if a Hive configuration is encoded and modified the SetProcessor to utilize it to improve handling of encoded Hive query strings
pdfbox - 2852 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved certificate validation to enhance security and maintainability of certificate handling
fix ` wavefrontconfig : : uri ` implementation ( # 3903 )
refactor image loading logic to use NetworkedCacheableImageView instead of ImageView to improve image loading efficiency and manage background and profile images
removed the ` View target ` parameter from the ` LauncherAnimUtils . ofFloat ` method calls across multiple classes to simplify the method signature
updated controller version handling in DependencyBank . java and modified BuildScriptHelper . java to utilize the new controllersVersion variable to ensure compatibility with
refactor LaunchedURLClassLoader to improve URL loading logic to enhance performance and maintainability of the class loading process
updated DataSourceHealthIndicator to use DataAccessUtils for querying results to ensure correct column count is used for data retrieval in the health indicator
add a no - cache header to the layout tag
updated the warning message formatting to use Locale . ENGLISH to ensure consistent message formatting across different locales
updated SolrQueryParser constructor to include an Analyzer parameter to enhance flexibility in query parsing by allowing different analyzer configurations
updated copyright year from 2016 to 2017 in multiple Java files to reflect the correct copyright year
removed an unused import statement from MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve code readability and maintainability
added handling for VoidColumnVector in VectorizedRowBatch . java to ensure consistent behavior when processing void column vectors
updated the parameter from templateName to req . getName ( ) in StatementGenerator . java to ensure the correct request name is used for processing statements
removed a private static method ` isTypeMatch ` from ` AbstractConfig . java ` to simplify the code by eliminating unnecessary complexity
[ java ] add ` offer ` method for sessiondecorator . offer ( ) and reset ` sessionheaderencoder . timestamp ` .
renamed methods and parameters in XForwardedRemoteAddressResolver and its tests to improve clarity and consistency in naming conventions
add a new annotation ` NoBootstrap ` in ` manifold . api . host ` and modify ` BootstrapInserter . java ` to
updated maxFileSize and flushSize retrieval logic in TableDescriptorChecker . java to handle null values more gracefully to improve robustness by ensuring default values
updated variable names from ` maxCommits ` to ` requestedCommits ` for clarity to improve code readability and maintainability by using a more
8023475 : [ test bug ] test javax / swing / jslider / 6794831 / bug6794831 . java do not wait long enough for test
added a constant BUILD _ ID and refactored the fillInOriginFromCache method in BuildInfo and CachingBuildEngine classes to improve build
removed unused imports of TxInputUtil and TxOutputUtil from TransactionCapsule . java to clean up the code and improve readability
removed redundant call to markAsDone in HttpProtocol . java to streamline code by eliminating redundancy
added default configuration handling in TezConfigurationFactory to enhance configuration management for improved performance
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added null checks before stopping recent sounds and implemented a forget method for sound management to enhance robustness by preventing potential NullPointerExceptions when stopping
clear position discontinuity when update state
added decimal formatting for number tick units in NumberAxis . java to enhance the display of tick units for better user experience
refactor TargetGraphAndBuildTargets to use factory methods instead of builder pattern to improve code readability and reduce boilerplate in the builder
removed the ` IndexFileNameFilter ` class and modified the file deletion logic in ` IndexFileDeleter . java ` to streamline file deletion
add a new configuration option to check the entire entity ' s collision bounding box for ladders instead of just the block ' s stitch
added a default compression level parameter to several methods in ApkBuilderStep , ApkBuilder , and SignedJarBuilder to allow customizable compression
add a test to verify that static fields are included in the generated jar to ensure that static fields are correctly included in the generated jar
added support for " BYTES " data type in MetricFieldSpec and related classes to enhance data handling capabilities for byte - related operations
updated string formatting in multiple failure error messages to include a newline to improve readability of error messages for better debugging
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the
added cache management functionality and thread handling in Spring Data JPA services to enhance performance and reliability of cache updates in the application
generalise maryproperties . localeprefix ( ) : for locales other than german , english or tibetan , use the string representation of the locale a prefix ( e . g . , en _ uk ) .
added null check for postbody in SimpleHttp . java and updated test cases in TestHttpPlugin . java to ensure proper handling of null post
added dispatcher and executor service shutdown functionality in ClientSideSlb and ClientSideSlbTest to improve resource management and ensure proper shutdown of the
added conditional logic to set V2 based on texture flip status to improve texture positioning based on whether the texture is flipped or not
improve error message for unknown property on discovery strategy
added a null check for contextPath and initialized it to " NA " if it is null to ensure contextPath is set to " NA " when it
[ drools - 7 ] make kie - api projectclassloader # reinittypes ( ) return a list of removed class ( #
added serialization support for the BTreeMap root header in SerializationHeader to ensure proper data handling during serialization and deserialization
added precompiled header checks and improved error handling in C++ source rules to ensure that precompiled headers are not used in the same rule
added a new ` AccWeakReference ` class and modified the ` ImageWatched ` class to utilize ` AccessController ` for privileged
changed access modifier of ` findNextIndex ` method from package - private to private in ` ObjectMap ` and ` OrderedMap ` , and modified
changed the assignment of isDirect from true to false in VertexBufferObject . java to correct the logic for determining if the object is direct
bugfix : do not try to get audio effect help text if there be no audio effect
changed return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to return ` Vector2 `
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added a null check before removing the close hook in the context to prevent potential NullPointerException when the context is not initialized
updated border spacing and padding calculations for folder layout in CellLayout and DeviceProfile classes to improve layout responsiveness for folder items in scalable
refactor numeric handling in ColumnConfig to use a new ValueNumeric class to improve code readability and encapsulate numeric parsing logic
added a condition to return _ deferred if the response is not deferred to ensure proper handling of deferred authentication scenarios
updated argument checks in StartArgs . java from " -- module - start - ini = " to " -- add - to - start " to
added default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure a default partition value is used when no partition value is provided
[ hotfix ] [ stream ] add null safety check in streamnode
updated return statements in DefaultArtifact . java to include classifier and artifact ID to improve clarity of artifact identification and representation
camel - 16400 : camel - kafka - rebalance should not call staterepository . getstate ( ) twice .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor to provide clearer error messages when a dependency is missing in the classpath
fix ` ` enable _ gmail _ notifications ' ' for jabber account registration wizard .
doc : [ typo ] fix docstring formatting in cryptokey . proto ( # 113 )
updated expectedMessageCount and expectedMessageCount in LumberjackMultiThreadTest to use dynamic concurrency based on available processors to improve test reli
fix checkstyle issue in entity / player / glowplayer . java ( # 721 )
updated the Exchange class implementation to improve performance and maintainability of the code
api : api key / secret key must be specify with secretKey / apiKey in updateUserCmd . java
refactor switch - case statements to if - else statements for consistency across MfaProvider , IdleTimer , and JdbcMfaProviderProvisioning classes
refactor AbstractMetaDataExportMojo to improve code organization to enhance maintainability and readability of the codebase
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to provide clearer error messages when attempting to drop tables that use a materialized
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in naming conventions
added a new deprecated class ` RoboExecutorService ` in the ` org . robolectric . util . concurrent ` package to mark the
add ` ` add subgroups ' ' and ` ` remove subgroups ' ' menu item to group tree
updated method and variable names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if
refactor the handling of dynamic GCThreads in TestDynamicNumberOfGCThreads . java to improve clarity and maintainability of
changed return types of several methods and variables from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes .
update CreateTable , CreateTableDeParser , and CreateTableTest classes to utilize PlainSelect for dynamic SQL creation options to enhance flexibility
updated the background drawable initialization in ChatViewerFragment . java to set the alpha to 64 to ensure the background is fully transparent for the user interface
test : migrate ctiteratortest to junit 5 ( # 4329 )
lucene - 1101 : tokenstream . next ( token ) reuse ' policy ' : call token . clear ( ) should be responsibility of token producer
[ net . sourceforge . pmd ] add a test case for astinitializer .
refactor StateMachineConfiguration and StateMachineFactoryConfiguration classes to remove dependency on Enum type to simplify type safety and provide clearer error messages when
simonstewart : fix a bug where we do n ' t have to check if the locator start with ` ` link = '
updated StringConverter to set maximum fraction digits for Double and Float types and modified corresponding tests to ensure accurate representation of decimal values and improve test coverage
simplify aggregatelifecycle . getcurrentscope ( ) by always return the current scope
updated touchable insets to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE _ INSETS _ CONTENT to
removed a condition that checks for the ' ~ ' character in FencedCodeBlockParser . java to simplify the code by eliminating
added socketTimeout property to manage socket read operations to enable configurable timeout settings for socket connections
added a sleep delay in ElementAttributeTest . java to handle potential interruptions during execution
updated InputStreamReader to use UTF - 8 encoding to ensure proper handling of character encoding in HTTP responses
refactor List class to improve code structure to enhance maintainability and readability of the code
added URI and Path parameters to AsyncFileImpl constructor and updated error handling in AsyncFileImpl to improve flexibility in handling file paths and ensure
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are intended to be part of
fix npe in case there be no nuage vsp device configure on the physical network
rename ` retryUploads ` to ` retryFailedUploads ` and update related logic in ` FileUploader ` and ` ConnectivityActionReceiver ` to
updated Java version checks in ConstantPoolTagTests . java to use classFileVersionJava9 instead of getJavaVersion to ensure compatibility with Java 9 features
ignore specific error and warning in compile ( )
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to clear the client header map to provide a way to remove
replaced Vector with ArrayList for managing input and output file names to improve performance and simplify code readability
updated the DEFAULT _ GRID _ COLUMN constant from 4.0 f to 3f to adjust the default grid column for improved user experience
added a condition to check if view creation is not defined in the query builder to ensure that the planner does not process view creation when the defined
updated date pattern pattern and refactored assertions in TestHS2HttpServer . java to improve date validation accuracy and enhance readability of date
added error handling for object creation in GraphPrinter . java to improve robustness by catching potential exceptions during object conversion
danielwagnerhall : add a method to allow access page with an insecure ssl certificate
replaced ` byteOffset + = BYTE _ BLOCK _ SIZE ` with ` Math . addExact ` for ` byteOffset ` and added a
refactor InteractionValueEncoder to use non - static fields for firstEncoder and secondEncoder , and update string formatting to use Locale . ENGLISH
added exception handling to the stop latch in TcpTransport to ensure graceful shutdown of the transport when an unexpected error occurs
add miss @ suppresswarnings ( ` ` serial ' ' ) to papplet . java
updated ` OcamlDebugLauncher ` to extend ` AbstractBuildRule ` instead of ` AbstractBuildRuleWithResolver ` and removed ` Source
added confirmation dialog to discard change and return to the main window
added service access validation logic in OAuth20DeviceCodeResponseTypeRequestValidator and improved error logging in OAuth20AccessTokenEndpointController and Nex
added a check for a specific index in DrillBuf . java to ensure that the index is valid before proceeding with operations
added input format class parameter to the initTableMapperJob method in TableMapReduceUtil . java to enhance flexibility by allowing different input format classes
updated the append method call in AbstractJRubyMojo . java to ensure the correct element is appended to the classpath
sulong : throw an exception if a language be not find and access to the internal language be not allow .
added deprecation warning for ' master . RESERVE ' and ' RESERVE ' in ReplicationHandler . java to ensure compatibility with Solr 7
renamed ` cacheVariableName ` to ` cacheForeignKey ` and updated references accordingly to improve clarity and consistency in naming conventions
updated ECKeyPairGenerator to use Object arrays instead of long arrays for key pair generation to improve type safety and eliminate unnecessary native method calls
added a suspend method to the Restarting class and updated the StateWithExecutionGraph to include a status override parameter to enhance the suspension
replaced instances of ` RotationTouchHelper . INSTANCE ` with ` RotationTouchHelper . constructor ` in ` RecentsAnimationDevice
refactor port table filtering and mapping logic in UniFiControllerCache . java to improve code readability and streamline processing of port
updated method signatures and variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity
refactor offer removal logic in OfferBook . java to check for existing offers before adding new ones to improve clarity and correctness of offer
use constant instead of hard - coded value
added conditional handling for mock types in MockitoMethodInvocationControl . java and updated imports in SystemClassUserTest . java and SystemClassUser
updated the ` NotLoadedException ` constructor to accept a ` PartialDatabaseObject ` parameter to improve exception handling by associating the exception with the
removed the import of DisplayUtils and added a null extra to the intent in FileDisplayActivity to ensure proper handling of file data in the activity
added error handling and logging for file renaming failures in StoreDirect and StoreWAL classes to improve error reporting and ensure proper resource management during file
added a task snapshot retrieval before stopping the swipe - to - home animation in AbsSwipeUpHandler . java to ensure that the task snapshot
added hidden functionality to CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to enhance command argument management by allowing visibility control
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test runs on the correct
[ geos - 7560 ] remove layergrouphelper . getcatalogfromstyle ( ) and use geoserverextensions . bean (
added permission checks for launching and launching shortcuts in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents
added getId ( ) and setId ( ) methods to TiledMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection URL to include version parameter to ensure compatibility with version 0.13 in the database connection
added new properties for schemas and includeSchema in LiquibaseGenerateChangeLogMojo . java and modified the diffOutputControl initialization to
replaced ` putIfAbsent ` with ` put ` in ` registryCache ` to simplify cache management and improve performance
benchmarker : log singlebenchmarkrunnerexception rather than error
removed the final modifier from the doPutRecord method in AbstractCacheRecordStore . java to allow method overriding in subclasses
update folder path formatting and remove unused physical width and height variables in Tools . java and FileSelectorFragment . java to improve code clarity and
refactor FastCGIProxyServletTest to use asynchronous response handling and add tests for large and slow responses to improve performance and reliability of
added startService call to MarkReadService . java to start the ReadInteractionsService service
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are only logged when the
added logic to set the SMTP port to a default value of " 25 " if the specified port is not set to ensure proper configuration of the
added retry logic for SSLFactory reloading and improved error handling in TlsUtils . java to enhance reliability of SSLFactory renewal
updated the date format in ObjectMapperProvider from HH : mm ' T ' HH : mm ' Z ' to HH : mm : ss ' Z
updated the assertion message in SpyingOnRealObjectsTest to clarify that the exception is due to the visibility issue of Mockito
added functionality to control line endings on line endings in InlineBoxing and LineBox classes to ensure proper formatting of line endings in
updated filePathString construction to handle null parent cases to improve robustness by avoiding potential NullPointerExceptions
removed unused import of DocCollection from TopicStream . java to clean up the code and improve maintainability
refactor NinjaServletContextTest to use createHttpServletRequestInputStream and add a new test for handling Windows - 1250 multipart requests to improve
added a properties property to the AbstractCasEndpointTests class to enhance configuration flexibility for web exposure settings
added a check to ensure the current graph is a dynamic graph to enforce data integrity by preventing invalid graph configurations
fix : disable eager initialization of bean with @ scopeone ( # 8041 )
camel - 14850 : camel - jsonpath - add option to suppress exception when generate jsonpath expression
removed duplicate call to ControllerLeaderLocator . create in HelixServerStarter . java to streamline the code by eliminating redundancy
updated usage messages in CLHSDB and HSDB to reflect correct command syntax to improve clarity and accuracy of usage instructions for users
refactored ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` and removed redundant registration in ` SimpleStepFactory
remove deprecate write . java and move it to io . write
refactor ShadowAccessibilityManagerTest to use accessibilityManager directly instead of calling getAccessibilityManager ( ) directly to improve code clarity and
add a new analytics group to track usage statistic ( # 3995 )
removed the ` SourcePathResolver ` from several classes and replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` to simplify the
replaced the existing EnumDataTypeHelper implementation with a new class named PostgreSQLEnumDataTypeHelper to improve code organization and encapsulate enum value retrieval logic
updated log path assertion in LogFileTests . java to ensure compatibility across different operating systems
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in naming con
added support for dropping index tables in HiveMetaStoreClient to prevent operations on index tables that cannot be dropped
added visibility check for mActionsView in RecentsView . java to ensure actions are disabled when the view is not visible
added a conditional highlighter for non - Windows operating systems to enhance syntax highlighting for non - Windows environments
rename xss _ request _ parameter _ to _ http _ header and xss _ request _ parameter _ to _ http _ header to hs
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed an unused parameter from the removeCaptureListener method in SelectBox . java to improve code clarity and maintainability
changed the value of ` _ metaDataComplete ` from ` true ` to ` false ` to indicate that the metadata has already been completed
modified the ` removeTaskTarget ` method to execute execution on a separate thread and updated bitmap handling logic to ensure task removal is executed on the
added environment variable handling for release and Android flavors in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest .
modified type casting logic in ` mmm Lower . java ` and added a new class ` ppp T6500701 . java `
added unit tests for crlf new lines in comments and Javadoc formatting in AutodetectGeneralFormatStyle to ensure proper handling of new line
added a check for a non - empty hubMode in AbstractLiquibaseChangeLogMojo and defined a protected field in AbstractL
simplified the initialization of skipPolicy in JsrFaultTolerantStepBuilder and removed unnecessary null checks in JsrChunkProcessor to
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce to improve error handling and provide
simplified the method retrieval for setting the indexer thread pool in LuceneTestCase . java to improve code readability and maintainability by
removed the port number from the address string in GameCanvasImplementation . java to simplify the address format for better readability
added a copy method to the MapJobExecutionDao class and updated its usage in the MapJobExecutionDaoTests to ensure consistent serialization and deserialization of JobExecution
added a new file ` DownloadTest . java ` to implement a test for downloading images from a file to facilitate testing of image
updated language handling in multiple classes to normalize the language to ensure consistent language representation across the application
hive - 6069 : improve error message in genericudfround ( alexander pivovarov via vikram dixit
added null check for selectedVersion before accessing its properties in ManageDependencies . java to ensure safe access to the version tag when selectedVersion is null
added multiple AntPathRequestMatcher matchers for various URLs in SecurityConfig . java to enhance security by matching additional requests
added JUnit @ Ignore annotation to TestConcurrentDInserts . java to temporarily disable the test due to known issues
refactor BeanDefinitionInjectProcessor to check if the concrete class name matches the class name before processing to ensure proper handling of superclasses during bean
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
changed the access modifier of SUPPORTED _ THING _ TYPES to static final in OpenWebNetEnergyHandler . java and OpenWebNet
simplified the execution of SocketEventProcessor in AprEndpoint . java to improve code readability and maintainability by eliminating unnecessary
deleted the SunToolkitSubclass . java file which contained a method for flushing pending events from the application context to the functionality is no longer
replaced MathUtils with Matrix4 for translation handling in DefaultRenderableSorter . java and added hasRotationOrScaling method in Matrix4 .
added JUnit imports and a new test method to register wrapper handlers before primitive types in TypeHandlerRegistryTest . java to address issue # 16
added a method to convert PDLab colorspace to RGB images in PDSeparation . java to enhance color space handling for PDL
updated URLs in CommonsApplication and related classes to use BuildConfig instead of static final strings to improve maintainability and consistency by centralizing configuration
camel - 16400 : camel - health - add health check example for camel - main - http
fix a nullpointerexception in the thorn chakram .
added a test for altering tables with indexes extending primary keys in AlterTableWithViewsIT . java to ensure that the system correctly handles
replaced the initialization of ` offset ` with ` docBase ` and adjusted assertions in ` TestFunctionQuery ` to improve clarity and ensure
removed the ID field from the MongoRecordReader class to clean up unused fields during record reading
added disposal methods to YeelightHandlerBase and DeviceBase classes and modified connection handling in WifiConnection to improve resource management and
added support for the " AUTO _ INCREMENT " option in the parser and created a test for it in the compatibility test to ensure that the
fix : make sharedindexinformerfactory # sharedindexinformers work again
server : fix the bug in update template detail for private template ( # 5449 )
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for improved image management to enhance compatibility with Robole
added new properties ` isShortcut ` , ` uri ` , and ` displayMode ` to the ` LauncherProvider ` , and removed deprecated
[ drools - 7 ] move data file to drools / examples / broker / data
added legendTop variable and updated offset calculations for the PieChart to improve legend positioning by incorporating the top and bottom legend
added a check to return early if the world transformation is zero in BaseShader . java to optimize performance by avoiding unnecessary processing when the world
added a new file ` MaryScriptCreator . java ` that creates a script from input and output to facilitate the creation of
nifi - 2592 : add attribute to restlistener . remote . source . host to allow listenhttpservlet to specify the remote source
refactor compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leak
updated URL attributes from " xlink : href " to " href " in ComponentDescription . java to ensure consistency in link handling across components
added a constant for the timeout checker executor name in AWS2S3StreamUploadProducer . java to improve code readability and maintainability by
hbase - 20536 add log for regionserver transition when cluster be shut down
added null check for spans before logging in Slf4jSpanLogger and improved warning message formatting in DefaultTracer to enhance code robustness
trim whitespace from the active option before adding it to the configuration to ensure consistent handling of active options by removing leading and trailing whitespace
added preferences for wallpaper depth effect and modified wallpaper zoom logic to allow dynamic adjustment of wallpaper depth based on user preferences
updated the assertion in OverseerTest to check for success count to ensure the test accurately reflects the expected outcome of the overse
removed conditional logic for determining if xattr is enabled based on the kernel version to simplify the attribute checking process by always returning true
refactor ExecConstants for improved readability to enhance maintainability and facilitate future feature additions
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for testing purposes
added a new method ` setScanAttributeForPaging ` to ` ScanUtil ` and invoked it in ` TableSnapshotResultIterator ` to
added validation for lowRange in Request and RequestV2 classes to ensure lowRange is within a valid range of 1 , 000 , 000
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and modified cache size calculation in Async
server : fix zoneid field in listhosts api response
[ zeppelin - 5231 ] fix print ( ) with utf - 8 character set
updated the remove method to include zfs as a parameter to simplify filesystem removal logic and improve code clarity
replaced the ` Object ` field with a ` String ` for JSON serialization in ` HttpRequestBuilder ` to improve clarity and maintainability of
increased the ` hardCommitWaitMillis ` from ` 2 ` to ` 529 ` in ` SoftAutoCommitTest . java `
do n ' t fail if selenide fails to take screenshot if browser be not present
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
updated logging statements in SyncQueue . java for consistency to improve clarity and maintainability of error messages
update RyukContainer version from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features and improv
updated ` getBootstrapPaths ( ) ` to return ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
fix checkstyle issue in net / fml / fmlclientlaunchprovider . java
[ hotfix ] [ yarn integration test ] remove yarnclient from yarnitcase
provide map stats for the map which only have a proxy but do n ' t have any data ( # 9657 )
deleted the AllTests . java file to remove unused test suite to streamline the codebase
added handling for Unicode characters for non - breaking hyphens and zero - width spaces in AbstractWordConverter to improve string formatting for Unicode characters in
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that a mock does not starve memory
updated the method call to use getResultMappingsForRowKey instead of getResultMappings to improve accuracy of row key mapping for nested results
added a boolean variable ` eventHandled ` and set it to true in ` UIText . java ` to ensure that the event is properly
deleted the ` @ Controller ` annotation from ` io . jooby . annotations ` and renamed ` Weldby ` class to `
ruby flavor : allow zero - width quantifier to monitor capture group in empty check
removed the initialization of liquibaseProLicenseKey and added a protected field to allow configuration of the Liquibase Pro license key
mondrian : refactored setMeasuresHierarchyMemberReader to be private to improve code readability and maintainability
make - g a custom option for generate debug info .
mondrian : fix typo in mondrianproperties javadoc
added ` getFriendPaths ( ) ` method to ` KotlinConfiguredCompilerFactory ` , ` KotlinLibraryDescription ` , and
added aliases for character scripts , BATK , BRAHMI , and MANDAIC , and refactored main method in
updated equality checks in ExecutionCommand to use ` equals ( ) ` instead of ` equals ( ) ` and added JSON serialization methods in StageUtils
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve file handling logic to enhance performance and maintainability of file operations
added a toString ( ) method to the SystemScope class to provide a readable string representation of the object for easier debugging and logging
updated CSS parsing logic to handle both number and percentage types to improve robustness of the cmyk ( ) function by ensuring parameter values are
added unit tests for local index functionality in LocalIndexIT . java to ensure correct behavior of reverse scan functionality in local indexes
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and updated assertions in ` BackupHelperTest `
updated string resource references in multiple activity classes to improve localization support and consistency across the application
simplified condition checks in RendererUtilities and added a new test case in RendererUtilitiesTests to improve code readability and ensure accurate testing of
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid operations to improve type safety and avoid potential NullPointerExceptions
added a try - catch block to handle potential SQLiteException when attempting to add a duplicate column to the database to prevent application crashes due to
removed console output statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
updated data size calculations in ConvertJoinMapJoin . java to utilize a new method for calculating online data size to improve accuracy of data size
updated the ` buildView ` method to accept a ` Context ` parameter and utilized theme attributes for background resources to enhance flexibility by allowing
added an assertion mechanism to the ` withAuthentication ` method in ` SecurityMockMvcResultMatchers ` to allow customizable authentication behavior during form login
vpc : set vpcid to null to avoid npe
[ beam - 10955 ] ignore flinksavepointtest for 1.11
changed the access modifier of several fields from ` @ int ` to ` @ Cue . int ` in multiple Java files to improve type safety
updated loop condition and modified action handling logic in Actor . java to improve code clarity and ensure actions are only processed if they are within the
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange and modified the exchange specification to ensure compatibility with Bitmex
add integration test for virtual metadata in relationshiprestrepositoryit
added null check for spatial before processing in LodControl . java to prevent potential NullPointerException when spatial is null
updated token filtering logic and added new filters in ConditionalTokenFilter , FixedShingleFilter , TestRandomChains , TestConditionalTokenFilter , Test
update unsafestorenode to use stateafter instead of graph . unique ( )
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to verify that the CasEventRepository ' s load method returns false to ensure that the event repository is not empty before proceeding
removed the ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` parameters from the ` AuthenticationAttrProcessor ` class to stream
added null key validation in MacOSXPreferences . java and created RemoveNullKeyCheck . java for testing to ensure that a non - null
removed the ` setTypeface ` method from ` CodenameOneTextPaint ` that throws a runtime exception to ensure that the method does not
added ` open ` method implementations in AzurePinotFS , LocalPinotFS , HadoopPinotFS , and PinotFS classes to
simonstewart : remove the deprecated fail ( ) method from webdriverrunner
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to replace the ResultObject class with a direct reference to useConstructorMappings to improve code clarity and maintainability by
updated SQL generation syntax in CreateTableGeneratorTest . java to ensure correct SQL syntax for foreign key constraint creation
added handling for filter mode in VectorizationContext . java to ensure correct evaluation of filter expressions based on their type
updated the type declaration of ` moveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to improve type safety by explicitly
replace ReorganizeTableStatement instantiation with modifyDataTypeStatement to streamline code by eliminating unnecessary parameters
refactor cluster name handling to use constants from configuration files to improve code readability and maintainability by reducing hardcoded values
improve logging and exception handling in peergroup . connect ( ) .
added logic to handle multiple style strings in Nano . java to improve flexibility and usability of style styles in the application
fix mceditschematicreader and spongeschematicreader to use adventure nbt converter .
updated the return message in NoToStringOnStringType . java to clarify the purpose of the string to improve user understanding of the
8274396 : test / java / lang / management / managementthreadfailure . java fails due to incorrect heap size allocation
fix : dataprovider # getverdic do n ' t retry if data provider do n ' t support it
updated the method to return the bandwidth value instead of the first token to improve accuracy of token retrieval based on the bandwidth
simonstewart : add some unimplemented method to the seleniumbackedselenium interface
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated the certificate owner information to streamline the method signature and
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for invalid component states in Dialog and Frame classes to ensure proper component state management and prevent illegal state exceptions
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure that the ` state ` array
added RedisStandaloneConfiguration and RedisPassword configurations to RedisObjectFactory to enhance configuration flexibility for Redis connections
added logic to check if the last see message have be delay before update the room property .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method to simplify
replaced direct share creation with service - based operation handling in FileOperationsHelper and OperationsService to streamline sharing process and improve code maintainability
removed the check for ` isInjected ` in ` BeanDefinitionInjectProcessor . java ` and added dependency injection in ` FieldPropertyInject . java
replaced direct calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` in ` ClassicPlotManager . java ` to
simonstewart : fix npe in smackintegrationtestframework due to nullpointerexception
do n ' t read exif sub - directories with interop sub - directories
added support for the ENABLED _ LS mode in VersionedTargetGraphCache to enhance dependency management based on the ENABLED _ LS flag
added a condition to check if the child format is a video format before processing media to ensure that media processing only proceeds when the format is
refactor AutoMlClient for improved readability to enhance maintainability and facilitate future feature additions
added loading logic for native libraries and modified the load method in LwjglNativesLoader to enable dynamic loading of native libraries based on
updated CSVRequestHandler to handle escape characters and improved error handling for encapsulator validation to enhance flexibility in CSV processing by allowing users to specify
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure only supported grant types are accepted and improve
updated exception handling to include additional context and improved error messaging to enhance debugging capabilities and provide clearer context for exceptions during self - suppression
updated query execution and iterator initialization in DerivedTableIT and ClientAggregatePlan to improve test coverage and ensure correct behavior of the OrderedResultIterator
added RSquare mapping and verification in RegressionEvaluator and StreamExpressionTest to enhance regression evaluation accuracy and ensure correctness of the RSquare
added context attribute handling for request headers in ThreadContextMDCServletFilter to ensure proper management of request headers in the servlet filter
refactor SparkPlanGenerator to use a local variable for MapWork and update related configurations to improve code readability and maintainability by reducing
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport to use a cache for images by country name to improve efficiency
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer resolution in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for
sulong : do n ' t cache interop function type in interopinteroptype . get ( )
replaced the existing ` MILLISECONDS . sleep ( 500 ) ` call with a new one in ` AbstractBasicMockingIntegrationTest . java `
added a new file ` KernCrash . java ` that implements a custom font rendering system to demonstrate the use of a
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure proper failure handling during tests
added a new method ` getInterfaceAddresses ` to retrieve network interfaces with a specified prefix to enhance functionality by allowing dynamic retrieval of network interface addresses
cancel housekeeper task when shut down the pool
updated the client address check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java `
refactor assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to verify the functionality of creating a TreeMap in a MapDB database to ensure that the
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the `
updated date validation logic in ValidatorTest . java to include date leap year checks to ensure correct validation of date fields based on the validity of the
added GrblLookups for handling alarm and error responses in GrblController . java to improve error handling by associating alarm and
updated the scroll format return logic to include a label for home button when there are no screens to improve user experience by providing a clear
removed the ' count ' parameter from the ' getTrades ' method across multiple classes to simplify method signature by eliminating unnecessary parameters
updated ConsoleReader and MemoryHistory classes to improve handling of null strings and index calculations to enhance code robustness and prevent potential null pointer exceptions
updated the jdkPath initialization to remove the " . jdk " suffix to simplify the path for better readability and maintainability
refactor method calls from ` getDescription ( ) . getBuildRuleType ( ) ` to ` getType ( ) ` across multiple classes to improve code
updated JFCModel and related classes to accept a logger for warning messages to enhance visibility into warning messages for better debugging and monitoring
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is positive to prevent runtime errors
added methods to create and drop views in TestUtil . java and a corresponding test in DatabaseMetaDataTest . java to enhance functionality for view management
added support for verifying stable float and double types in NaNTest . java to ensure tests are only executed on supported CPU architectures
added a new DesktopTaskbarUIController class to manage hotseat icon visibility to enhance the visual appearance of the hotseat
added progress tracking functionality to the ModItemAdapter class and updated related UI components to improve user experience by enabling or disabling extended buttons based
refactor file handling methods in Files . java to improve code readability and maintainability
replaced ` Set < ServerInterceptor > ` with ` Collection < ServerInterceptor > ` in ` AnnotationGrpcServiceDiscoverer . java `
updated DomainAwareServicesManager and ChainingServicesManager interfaces to extend ServicesManager and implement DomainAwareServicesManager to enhance functionality and maintain consistency in
add a debug log to resourcepackloader . generatepackinfo ( ) .
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
added grow ( ) and growX ( ) methods to the Cell class to provide functionality for growing cells in the Cell class
refactor bindings handling in DefaultInputHandler to improve clarity and efficiency to enhance code readability and maintainability by simplifying key binding logic
fix intermittent test failure on window
replaced long arrays with byte arrays in MetricsMemoryTester . java and added a memory fail count check in TestDockerMemoryMetrics . java
deleted the JobParametersPrototype . java file to remove unused class to streamline the codebase
[ flink - 23737 ] [ table ] add support for security enable / disable mapping table
rename APPLE _ SWIFT _ OBJC _ Cxx _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the value of DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable dumping to
do n ' t require ospropagation for aws afts by default
[ java ] check if the meta buffer be connect before update the publisher limit .
added a condition to check for no information output when dbInfo is null to ensure that no information is displayed when no output options are provided
enable ssl by default when ssl = false
added DOMOutputOptions to DOMConverter for setting error output options to enhance error handling by allowing XHTML syntax output
refactor assertions in Assert . java to improve code readability and maintainability
[ java ] add ` ` retain ' ' option to publish message to allow to retain message .
[ hotfix ] [ test ] remove @ jsonignore annotation from testresultsummary
[ hotfix ] [ table - planner - blink ] add ` ` $ tumble ' ' a a alias for ` `
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . core . Parsed ` in ` LatexToUnicodeAdapter
make ssl context thread - safe .
replaced ` . size ( ) = = 0 ` with ` . isEmpty ( ) ` for string concatenation in ` AppModule . java `
replaced CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to ensure compatibility with the new SQL dialect implementation
change log level from debug to trace for firmware update logging to improve logging granularity for better troubleshooting
added unit tests for retrieving null dates and timestamps in GetObjectTest . java to ensure correct handling of NULL values in database queries
refactor string representation in StringSubject and Subject classes for improved clarity and consistency to enhance readability and maintainability of the code
added unit tests for repository permissions in UserModelTest . java to ensure correct handling of multiple repositories with different registrant permissions
added a new file Test7088020 . java that utilizes MethodHandle for testing method type mismatches to ensure proper error handling for
refactor audience restriction matching logic in Saml2ResponseValidator . java to use a HashSet for better uniqueness to improve error handling for assertion audience
refactor cache management methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code clarity and maintainability by consolidating
changed the default behavior of the _ stderr variable from System . err to null to ensure proper handling of null stderr streams to avoid potential NullPointerExceptions
added a new warning constant SEPARATION _ ORDER in the Warning class and updated the BasicEventSimulationEngine to track active stages to improve warning
updated the parameter in the query optimizer ' s optimize method from offlineTableConfig to realtimeTableConfig to ensure the query optimizer uses the correct
refactor SQL statement construction and add split point handling in PhoenixHBaseAccessor . java and UpgradeCatalog240 . java to enable
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass functionality and tests in ShadowBluetoothDeviceTest . java and ShadowBluetoothDevice . java to enable testing of Bluetooth
rename method ` contains ` to ` containsprofile ` in ` glowplayer ` and ` uuidlistfile `
[ drools - 7 ] allow empty list to be pass to sum ( )
replace graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) to simplify code and improve readability
updated coreNodeName construction in ZkStateReader . java to use nodeProps . getCoreName ( ) instead of nodeProps . getNodeName ( )
added updatebackpressure to chatactivity . update ( ) and remove refreshrequest ( ) from update ( )
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for tag parsing functionality
added ` @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) ` annotation to ` BaseVectorSimilarityQueryTestCase
updated the conditional check in ` Types . java ` and added a new class ` T7005671 . java ` with multiple methods to handle
updated triangle coordinates in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTriang
added @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern to improve readability and maintainability of the test code
refactor yellow zone state management in StackOverflowCheckImpl . java to improve readability and maintainability of the code
added static shadow methods for ` ShadowSQLiteDatabase ` , ` ShadowContentValues ` , and ` ShadowSQLiteDatabaseTest ` to enhance
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced the ` bytesPerDim ` field with a ` comparator ` field and updated comparison logic to use ` ArrayUtil . ByteArrayComparator ` to improve
added a script parameter to the Locale constructor and updated default locale retrieval logic to enhance locale management by allowing dynamic script retrieval based on the specified language
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct alpha value is returned for the last set
updated warning message from " Confimap PropertySources do not match " to " ConfigMap PropertySources do not match " to improve clarity and accuracy
replaced specific test class imports with a method call to ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` to streamline
added trimming of whitespace from token tokens in GzipFilter . java and updated test parameters in GzipFilterDefaultTest . java to ensure cleaner input
updated the output type assignment in the Response class to ensure consistency in output type handling
updated the default regex implementation from JDK to JONI to ensure compatibility with the updated regex implementation
replaced ` LooperExecutor ` with ` FutureTask ` and refactored task handling in ` ViewCapture . java ` to improve task
[ mary ] add support for list of style in feature processor .
added error handling for folder creation in GitBlit . java to ensure that the application does not attempt to create a directory that does not exist
updated the fallback node discovery IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " in the
( chore ) camel - jbpm : fix typo in camel - core
pdfbox - 4892 : remove unused import , add private constructor
renamed ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and updated related methods to improve clarity and consistency in naming conventions
refactor multiple Java classes related to Dalvik to improve code organization and enhance maintainability
refactor : remove redundant code in defaultjavaprettyprinter . java ( # 2246 )
added a call to free memory in the driver context to ensure proper memory management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , and StringQuery classes to remove unnecessary line breaks to improve code
refactor ConcurrentLRUCache to use AtomicLong for evictionCounter and rename cumulativeStats to statsList in FastLRUCache to improve thread
do n ' t run action on javafx thread in source tab
do n ' t check if the local host be not an ipv4 address in the networkaddressmanagerserviceimpl
added RuntimeEnvironment initialization to MainFrame . java to set database and source root paths for the application
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` constructors to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration
[ hotfix ] [ table ] fix checkstyle violation in tableenvironment
replaced the method ` setStatementTimeout ` with a direct timeout setting in ` MapperBuilderAssistant ` and adjusted fetch size in ` Executor
updated method signatures to remove the unused ` hangingTscTimeout ` parameter across multiple transpilation classes to improve code clarity and maintain
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and Geo
updated precondition checks and refactored artifact handling in ArtifactFilesystem and ArtifactFilesystemTest to improve clarity of error messages and enhance code readability
tika - 3746 -- fix for tika - 3747 -- do n ' t throw an exception if the document be not
[ web ] fix concurrentmodificationexception in ggbscript # setvalue ( )
do n ' t attempt to read data if no data be available
added assertions to check for equality in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest ` to improve error messaging
updated visibility elements in BackgroundAppState and modified scrim animation logic in ShelfScrimView to enhance user interface responsiveness and
[ fix ] fix npe in matdefeditorlelement when nav be null
mow - 1349 fix image positioning when mow _ pin _ image feature be disabled
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve error reporting and debugging capabilities
[ astro ] use schedulewithfixeddelay instead of scheduleatfixeddelay in astrodiscoveryservice
simplified the initialization of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability
temporarily ignore test hang in jms test
added specific imports for AbstractModule , Injector , and Stage in GuiceFactoryTest . java to enhance dependency management and facilitate easier
added system feature management functionality to RobolectricPackageManager to enable tracking and controlling system features in the Robolectric framework
refactor RCAFrameworkLoader to handle multiple paths and add a new test class RCAFrameworkLoaderTest to improve code clarity and ensure
[ hotfix ] [ runtime ] remove unnecessary log in task . cancel
added a null and empty check for enumerationValues in RADProperty . java to prevent potential NullPointerExceptions when enumerationValues is empty
replaced ` needInline ` with ` needStartText ` and ` needEndText ` variables in ` BoxBuilder . java ` , and
added asynchronous telemetry data collection and a method to retrieve the public IP to improve asynchronous processing of Telemetry data and enhance debugging capabilities
removed MySQL - specific column alteration logic in UpgradeCatalog260 . java to simplify the code and improve maintainability by eliminating unnecessary
updated error messages for index and temp resources directories in BaseTableDataManager . java to provide clearer guidance on available space and write -
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added selector ID to the key in Matcher . java to include the selected object ' s identifier in the key
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated taskbar visibility and animation logic in multiple controllers to improve user experience by managing taskbar visibility based on system UI states
updated the formatting of key exchange constants in KeyExchange . java to improve code readability and maintain consistency
added a type check for JdbcConnection before executing the version ( ) method to prevent potential ClassCastException when the connection is not an instance of JdbcConnection
refactor file index handling in ServerMainTest . java to use a variable for the file index to improve code readability and maintainability by
added methods to retrieve the media recorder mime type in CodenameOneImplementation , MediaManager , and Display classes to standardize mime type retrieval
use shaderhelper . useshaders ( ) instead of confighandler . useshaders ( ) .
updated the BindableFilter condition to include an OR operator and changed the expected return value from C = 6588 to C = 13500
updated ZkStateReader instantiation for consistency in CloudSolrServer . java to improve code readability and maintainability
pdfbox - 4892 : disable external entity detection , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
changed the condition from checking if ` result . indexOf ( " < script > " ) ` is greater than or equal to ` result . indexOf
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic for handling varargs access to
refactor border property checks to use a helper method to improve code readability and maintainability
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and provide more granular
updated the ` register ` method in ` HubUpdater ` and ` InternalDropAllCommandStep ` to return ` HubRegisterResponse ` instead of
replace bitwise operations with Byte . toUnsignedInt for unsigned byte values across multiple classes to improve code clarity and maintainability by standardizing unsigned
removed unnecessary parentheses in string conversion in OpenTracingTransactionProducer . java to improve code readability and maintainability
updated the default value of CachingBuildEngine . DepFiles from ENABLED to CACHE to enable caching by default for improved performance
changed the rangePannable property from true to false in CategoryPlot . java to disable range pannable functionality for better user experience
refactor work mode switch handling in AllAppsContainerView . java to improve clarity and ensure proper management of view states
changed access modifiers for GLCapabilities , GcodeRenderer , and FPSAnimator variables in Visualizer2TopComponent to enhance encapsulation and improve code readability
added handling for CancellationException in FunctionTest . java to improve error management and prevent application crashes
change constructor visibility from package - private to protected in JarFileResource and JarResource classes to enhance encapsulation and restrict instantiation to subclasses
rename DefaultTrackSelector . java file to improve clarity and consistency in naming conventions
added a loop to sleep after unseq merging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq merging operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest to reflect the correct currency being used in the test
updated SQL queries in Hibernate , HibernateDTOProjectionTest , and JPADTOProjectionTest to use consistent naming conventions and improve code
refactor Unicode handling methods for improved clarity to enhance code maintainability and readability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added methods to update Hive LLAP settings if required to enhance
reformatted the onComplete ( ) method call in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
[ beam - 15836 ] fix json serialization of ssecustomerkey ( # 15836 )
added support for BIG _ DECIMAL type in RangePredicateEvaluatorFactory to improve handling of BIG _ DECIMAL values and provide clearer error messages
updated variable names from ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity
removed annotation printing code from ParameterInfo . java to streamline output by eliminating unnecessary annotations
added support for AC3 streaming in PlaybackController and introduced default extractor in VideoManager to enhance video playback functionality and improve timestamp extraction for better
[ grid ] fix null value in httpresponse return by localnode
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to address compatibility issues with Commons
added a test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to include
updated RTimerTree . java file to improve timer functionality and performance
changed package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
jme3 - test and fix for issue # 358 ( npe )
added a name to the client threads and a custom scheduler in the ClientConnector class to improve debugging by providing context for the client thread and scheduler
modified visibility of JScrollPane and JSplitPane in ViewResultsFullVisualizer . java and adjusted layout settings to enhance encapsulation and improve UI
added phone number fields and descriptions in ScimUserEndpointDocs . java to provide users with information about their phone numbers and descriptions
changed class visibility from package - private to public and added a private constructor to enhance encapsulation and prevent instantiation of classes
added null checks for responseMap and HTTP status codes in JsonHttpPropertyRequest . java and URLStreamProvider . java to improve error handling and
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a condition to check if ` DEFAULT _ PARALLEL ` is false when ` parallel ` is false in ` XmlSuite . java
fix checkstyle issue in ` ` testvmware ' ' module
updated condition to handle SCARD _ E _ NO _ SMARTCARD alongside SCARD _ W _ REMOVED _ CARD in
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary logging output for troubleshooting purposes
camel - 14850 : camel - bindy - allow to turn on / off key - value pair for camel - bindy
change default ` ` useowner ' ' and ` ` usetimestamp ' ' to ` ` false ' '
updated method signatures to use ` ThrowingRunnable ` instead of ` Runnable ` to improve type specificity and clarity in exception handling
refactor hash function to handle null values for ' via ' , ' viaContext ' , and ' pathFromSeed ' to improve robustness
camel - 14263 : camel - aws : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquib
change default value of proxy . cert . validity to 90
updated frame handling and delta calculations in ThreadHandler . java to improve responsiveness and accuracy of frame processing
added a null check for the paginator in HttpBatchReader and refactored URL parsing logic in HttpScanBatchCreator to ensure proper handling of
added null check in ` Worker . java ` and a test for ` FindNextCompactRequest . java ` in ` TestWorker . java `
refactor fragment state handling in ShadowFragmentActivity and add a test for onSaveInstanceState method in FragmentActivityTest to ensure that fragment state is
reformatted code for clarity and consistency in BatchResourceFactoryBean . java to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure correct parsing of color references in the color resource loader
added error handling for NoResultException in AbstractJPAQuery and a new test for uniqueResult in AbstractStandardTest to improve robustness by
renamed the variable ` fromCache ` to ` owner ` for clarity and updated the logic for adding communities to improve code readability
updated the method to retrieve the wallpaper depth effect using LawnchairApp instead of l to ensure compatibility with the latest Lawnch
removed duplicate import of ProcessTools in LocalManagementTest . java to streamline code by eliminating redundancy
simplified the method signature of ` updateTotalEnergyAverageUsage ` by removing the ` now ` parameter to improve code readability and
updated the ` toString ` method in ` ExtensionStack ` to handle null extensions gracefully to improve robustness by preventing null pointer exceptions during string
2 . x : fix observable . flatmap ( ) to dispose on cancellation
added connection manager timeout configuration and logging for connection timeout exceptions to improve connection management and enhance error handling for timeout scenarios
reformatted the assignment of androidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to update the testing
replaced instances of ` SystemResourcesEdgeEventFetcher ` and ` TenantResourcesEdgeEventFetcher ` with their respective fetchers in ` EdgeSync
added a new test for output hash calculation in CachingBuildEngineTest to ensure output hash is not calculated when cache is not writable
camel - 16400 : camel - netty - allow to turn off use bytebuf for a payload .
updated the partition alteration method to use Warehouse ' s qualified name instead of the old name to ensure accurate partition alteration by using the
improve error message when try to create domain socket with prefernativetransport = true
test ( core ) : add test for custom color type
rename StreamEx . java file to improve clarity and consistency in naming conventions
added hint settings for query and lock timeouts in SessionImpl . java to enhance query performance by specifying timeout values
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to provide a singleton logger binder for SLF4J
hbase - 2645 addendum fix the bug in hbase - 2649 ( addendum )
updated orientation handling in TaskbarManager to account for new orientation changes to ensure proper resizing behavior when the new orientation changes
unescapes the nickname in the xmpp room to prevent xxe vulnerability .
added a new test class ` Issue265Test ` and modified the ` longStackPut ` method in ` StoreDirect . java ` to improve
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress unnecessary warnings and improve code clarity
[ drools - 7862 ] move executionflowcontroltest to drools - test - infra
updated formatting and improved array copying in multiple Java files to enhance code readability and maintainability
modified the ` NBWriteServlet ` and ` TestWriteListener ` constructors to accept an ` unlimited ` boolean parameter to enhance flexibility in
updated the method call from ` updateTotalDifficulty ( block ) ` to ` updateTotalDifficulty ( block ) ` in ` Blockchain
simplified the logic for determining current window seekability in DefaultPlaybackController to improve code readability and maintainability by reducing redundancy
replaced ` Collections . synchronizedList ( new ArrayList < > ( ) ) ` with ` CopyOnWriteArrayList < > ( ) ` in
added uniform allocation logic and modified position calculation in AllAppsView . java to improve memory management and ensure correct positioning in the application
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper validation of the key format
updated CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to include PrincipalResolver as a parameter to enhance flexibility in handling principal resolution during authentication
replaced ObjectMapper with Noggit for JSON parsing in DelegationTokenResponse . java to improve compatibility with modern Noggit features and handle
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve handling of trailing slashes in string operations
added methods to ` PatternsMatcher ` for pattern matching and updated tests in ` PatternsMatcherTest ` to improve pattern matching functionality and ensure
updated error message formatting for clarity in LoadIncrementalHFiles . java to improve readability and maintainability of error messages
fire fire fire on water now fire on water potion .
swapped the parameters of the ` beginOrAdjustReorderPreviewAnimations ` method in ` CellLayout . java ` to ensure consistency in
refactor calculations for decreasePercent and increaseFactor in ContractStateCapsule . java and adjust conditional checks in ReceiptCapsule . java to improve
added debug logging for ` isReady ( ) ` in ` AsyncContentProducer ` and modified state handling in ` BlockingContentProducer ` to improve
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that a valid weight field is provided to avoid runtime errors
refactor AppleBundle to use ImmutableMap for plist variable substitution and add a new test for info plist variable substitution to improve code clarity and
allow laser to turn turret if they ' re not in the team .
refactor adaptOrder method to return a generic Object instead of OrderCreateApiRequestBuilder to improve type safety and clarity in order adaptation logic
added a new file ` PreParseGrammarTest . java ` for testing XML grammar parsing functionality to facilitate testing of XML schema pre
8274892 : suppress warning on non - serializable non - transient instance field in javax . swing . plaf
added FontManager import and overridden font in ExtendedEditText . java to enhance font management functionality in the application
added null check for currentUser in AuthorizeTag and implemented a test for unauthorized access when no user is found in AuthorizeTagTests to ensure that
camel - 3645 : fixed the issue of camel - cxfrs do not warn about unsafe encode character .
added setUpData method to JDBCGeometryTestSetup class to ensure proper setup of data for testing purposes
removed unused import of DumpHandler from MultipartFilterTest . java to clean up the code and improve readability
[ flink - 20536 ] [ runtime ] stop restore attempt for already cancel task
add server . rmi . create property to control rmi registry creation
use stringutils . join instead of string . join in compactionmanager
added display metrics retrieval and qualifiers handling in various test classes to ensure accurate retrieval of display metrics and validate default qualifiers behavior
[ java ] add cluster member id to cluster heartbeat counter to track the member id of the service heartbeat .
added conditional logic to set total thread allocated bytes based on the major version check to ensure accurate tracking of thread allocated bytes for compatibility with newer versions
updated the evaluation logic in CustomExpression to handle negative and positive infinity cases to ensure proper handling of NaN values and maintain consistent hash code generation
updated logging statements to use placeholder syntax and improved exception handling in AjaxListener . java to enhance code readability and maintain consistency in logging pract
added GET and POST routes for authentication and authorization in the AuthenticityController to enhance functionality by allowing users to authenticate and authorize users easily
lower phase : add assertion to ensure node be alive
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
make defaulttrackselector . compare ( ) consistent with other .
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of serialization processes
ggb - 1193 image cropbox will now work with cropbox if the image be crop .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated its usage in ` WidgetPreviewLoader ` and `
added content type parameter handling in MailContentHandler to ensure proper resource name is set when contentDispositionFileName is blank
updated the URI construction in ThumbnailsCacheManager . java to use the local ID instead of the remote path to improve the accuracy of the preview
added support for marking and resetting input stream in Source . java to ensure proper handling of input streams when mark is supported
added @ Deprecated annotation to multiple classes including AsyncProcessor , BehaviorProcessor , AsyncSubject , and SerializedSubject to indicate that these classes are outdated and
added configuration property ` SERVER _ SHOW _ ERROR _ STACKS ` and its default value to control the visibility of error stacks on the error page
cloudstack - 5396 : delete templates / vms only when cleanup be successful
removed null checks for foreign calls in SPARCArithmeticLIRGenerator . java to simplify foreign call emission logic and improve error handling
[ drools - 7 ] add ruletemplateconfiguration interface to decisiontableconfigurationadapter for backwards compatibility
added ' waitingForResult ' variable and modified the onRequestPurchaseResponse method to run on the UI thread to ensure that the purchase callback is
increase timeout in unboundedsourcesystemtest from 100ms to 1000ms
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct handling of resource names
deleted ` MrefStat . java ` and ` MrefStat1 . java ` files to remove unused classes and methods related to lambda method
updated the scope handling in DependencyInsight . java to use StringUtils for blank checks to improve robustness by avoiding null pointer exceptions when the
refactor error handling in BTCETradeServiceRaw to use constants for message constants to improve code readability and maintainability by avoiding
[ hotfix ] use hamcrest assertion instead of junit in tests
add a method to retrieve payment request URLs in BitcoinURI to enhance functionality for handling multiple payment protocol requests
planner - 383 do n ' t throw illegalargumentexception when a variable be annotate with a collection .
removed duplicate calls to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
jfr : remove unnecessary call to vmerror . guarantee in jfrbuffernodelinkedlist
replaced a null check with a for - loop for null values in BasicAbstractTuple . java to improve code readability and enforce non -
refactor linter configuration file handling in LintUtility . java to utilize InputResource for improved resource management to enhance flexibility in managing
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable to ensure UI updates occur on the main
updated patch values for inventory tick handling in Inventory . java to correct the patching logic to ensure accurate tracking of inventory tick events
added a new case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY
[ hotfix ] [ state ] add miss @ publicevolving annotation in statettlconfig
added null check for parameter ' x ' in PreparedStatement and adjusted array index handling in Array to ensure proper handling of null values and improve data integrity
[ java ] improve archive tool output for invalid recordings
replaced ` append0 ( " \ n " ) ` with ` append0 ( ' \ n ' ) ` in ` StringBuilder . java
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` to verify JSON serialization functionality for database connections
added a method to remove transactions and blocks from the cache in BroadTest . java to improve cache management by ensuring transactions and blocks are properly
added handling for LensMaskOpen , LensMaskOpen , and LensMaskClose commands in AmcrestHandler and Dahua
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to
updated the constructor of ChangeLogIterator to accept both a list of ChangeSetFilters and a list of RanChangeSet to improve flexibility in
do n ' t swallow guest exception in polyglotlauncher
updated the method to retrieve the value of the " OPT _ OUT _ TRACKING " environment variable to ensure compatibility with system properties instead of
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization of these classes
refactor parent handling in SpacesVisitor to use dropParentUntil for better readability to improve code clarity and maintainability by consolidating
# 1193 - enh : add servercacheoptions . copy ( boolean nearcache ) ( # 1194 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to ensure that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` Project
replaced LIVE _ URI with PROD _ URI in KucoinExchange . java and added logging for Kucoin host exceptions to
updated string concatenation syntax and improved search path handling in SpringResourceAccessor . java to enhance code readability and ensure correct path formatting
update unit tests for MICROGRAM _ PER _ CUBICMETRE and MICROGRAM _ PER _ SQUARE _ C
updated vertexMask retrieval to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure compatibility with size - packed vertex
deleted the Tls12SocketFactory . java file to remove unused or redundant SSL socket factory implementation
fix npe in textexentryresolver when citations do n ' t have any entry
added a method to check if the application is running in Robolectric legacy mode to ensure compatibility with Robolectric ' s legacy
added a condition to return a new DatabaseDataType for FirebirdDatabase to support specific data type handling for Firebird databases
added null checks for dataSource and transactionManager in DefaultBatchConfigurer to ensure proper initialization of DataSource and TransactionManager to avoid potential NullPointerExceptions
[ unittest ] add miss package - info . java in unittest . stubs
updated test command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1
no effective change - code cleanup - use try - with - resources
modify TermScorer to conditionally return FREQS or NONE based on scoreMode to ensure correct scoring behavior based on score requirements
fix npe in dataflowmetrics when there be no metric
server : fix npe in listvirtualmachines by accountid and instanceid
refactor DynamicPartitionPruner to use a new method for finding the target object inspector to improve code clarity and maintainability by centralizing
added a method to remove build artifacts from the ArtifactFilesystem and updated tests accordingly to ensure that outdated build artifacts are removed from the filesystem before execution
added row selection logic in ThrustCurveMotorSelectionPanel . java to ensure the table updates its row if the selected row is greater
refactor assertThrows calls to assertThrowsArrayStoreException for improved clarity to enhance readability and maintainability of the test code
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environment name handling and user agent configuration in HttpClientBuilder and HttpClientConfiguration classes to enable dynamic identification of HTTP requests based on the environment ' s
refactor session handling in MemorySessionStore to use a dedicated method for session restoration to improve code readability and maintainability by encapsulating
updated assertions in IssueTest . java and changed the type of results from String to Object in Reporter . java to improve clarity of error messages
updated content type handling in ConsumeEWS . java to ensure a default value is used when the file ' s content type is null
send an event when an activation request can not be reject . fix # 449
updated method calls and added @ Override annotations in GraphApplet . java to improve code clarity and ensure proper method overriding
added a method to update the snapshot radius in RecentsView and modified the visibility of the updateSnapshotRadius method in TaskView to ensure
added logging for Swagger generation in StaticMicroserviceVersions . java to improve traceability of schema generation for 3rd - party services
changed the return type of the put methods from void to int in ArrayMap . java to allow retrieval of the index of the put operation
updated KafkaContainerCluster to include a startup timeout and improved KafkaContainerCluster initialization to enhance startup reliability and clarity in Kafka container setup
[ bugfix ] add retry logic in defaultmqpushconsumerimpl . sendmessageback ( )
update header checking logic in StaticServerHttpHeadersWriter and add a case - sensitive header write test in StaticServerHttpHeadersWriterTests to ensure
added package access check before loading the EventListener class to enhance security by ensuring that package access is validated before attempting to load the listener class
added a CustomAdapter class to manage application lists and updated the onCreateView method to use it to improve code organization and facilitate
updated the applyIcon method to accept nullable Task objects and added null checks for iconView and task to improve null safety and prevent potential NullPointerExceptions
updated DownloadTracker and DownloadManager to use try - with - resources for DownloadStateCursor to ensure proper resource management and prevent potential memory leaks
fix a bug in basesqmtosqlastconverter that cause a stack overflow when handle insert statement
updated HibernateCursorItemReader integration test classes to use JUnit ' s @ Test annotation and removed the ExecutionContext variable to simplify test setup
added asynchronous handling and logging for the poller ' s state in DataInputStreamWithTimeout . java to improve responsiveness and debugging of the poller '
added ENABLED _ TS constant to VersionTargetGraphMode and integrated ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management
refactor UpgradeCatalog150 . java for improved functionality to enhance code maintainability and readability
rename ` testnet3 ` to ` oldtestnet ` in ` networkparameters `
do n ' t update object panel if there be only one geos select
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and modified the ` flush ` and ` flushBuffer ` methods in ` Hdfs
pdfbox - 4892 : do n ' t copy clip rectangle if there be no path
simplified local address assignment logic in SocketChannelImpl . java to improve readability and maintainability of the code
refactor row addition logic into a separate method ` addToRow ` to improve code readability and maintainability by encapsulating logic in a dedicated
added a utility method to check if the operating system is Windows and modified file renaming logic accordingly to improve code readability and maintainability by central
close issue # 496 : correct checksum for certain code 39
updated the logic for executing unexpected types in NodeGenFactory . java to improve type handling and ensure correct type casting for executed types
removed redundant check for stored fields in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : fix timestamp with nanosecond in where clause ( # 3748 )
simplified stack trace handling in LwjglCanvas . java to improve code readability and maintainability
updated descriptions in AbstractGCSProcessor . java for clarity to improve readability and maintainability of the code
replaced the ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization by ensuring that
updated method calls to use " single " instead of " null " in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java
refactor FaultTolerantChunkProcessor to use a filterCount variable instead of a size parameter to improve clarity and maintainability of the
updated import statements and modified method visibility in FileWithTabs . java and T4994049 . java to improve code clarity and ensure
replaced conditional checks with assumeTrue for WindowsTerminal in ConsoleReaderTest . java to improve readability and maintainability of the code
remove check for non - admin user from getfeedbacksessionsaction .
updated calculations for newSelection and adjusted velocity and position checks in AllAppsView . java to improve responsiveness and accuracy of the selection logic
remove threadinfo . initialize ( boolean trackresultsavailability )
added model loading and refresh functionality in DataModelManagerDialog , modified connection handling in DbConnectionDialog , and updated message handling in ExportPanel to
updated variable names from ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` for consistency and clarity to improve code readability and maintain
refactor segment size calculation in DocumentsWriter and add a new test case in TestIndexWriter to improve code clarity and ensure accurate segment
bugfix : do n ' t try to load mesh data if it ' s deformvert
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
avoid fill in stack trace in applyspecialization
update label height calculation to use a stream to improve performance and readability of the code
updated the ` RotationTouchHelper ` constructor to accept a ` DisplayHolder ` parameter instead of using a static instance to improve flexibility by
added logic to handle quoted values in valStr to improve handling of single quotes in string processing
replaced Long . valueOf with IdConversion . convertToLong and updated parentSpanId handling in ServletHandlerInterceptor . java to ensure proper conversion of
renamed the method ` name ` to ` testSmall ` and added a new test method ` testBig ` in ` ServerDatagramConnector
updated the substring method in TestSqlEntityProcessorDelta . java to correct the syntax to ensure accurate parsing of the COUNTRY _ CODE _ s
updated caching logic in Cache . java to improve performance and maintainability of the code
updated variable names and scopes in ResourceSetRegistrationEndpoint . java to improve clarity and ensure correct scope configuration
removed unused imports and modified the ` doBefore ` method signature in ` TestUnifiedHighlighterTermVec . java ` to streamline code
added a JFrame with a JScrollPane and a JButton for adding Gcode commands to the GcodeTable to enhance user interface functionality by allowing
updated the connection timeout constant to use a configurable value from the configuration to improve flexibility by allowing dynamic configuration of the connection timeout
updated various Java files for consistency and clarity to improve code readability and maintainability
rename TestMediaService . java file to improve clarity and consistency in naming conventions
removed the static String HELP _ ABALOG _ USER _ GUIDE _ LINK from Messages . java to streamline the code by elimin
add option to print btc / btc / btc in desktop
add validation for the ' component ' parameter in the EndpointAddressInterceptor to ensure only alphanumeric and dash characters are accepted to enhance security by preventing
added methods for registering security key start and completion in AccountProxy and HttpAccount classes to enhance the functionality of the security key registration process in the
rename ServerSpanThreadBinder . java files to improve clarity and consistency in naming conventions
updated user reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified block bounds
replaced " Location " with " the _ geom " and added " number " to the CSV2Shape builder to improve clarity and consistency
replaced callGasWord ( ) with gasCost in VM . java and removed unused imports in Program . java to improve code clarity and
refactor parameter handling in the Parameters class to improve code readability and maintainability
added ` piePlot . setIgnoreNullValues ( true ) ` to ` MultiplePiePlot . java ` to improve handling of null
refactor bundle loading logic to improve clarity and efficiency to enhance code readability and maintainability by simplifying bundle loading logic
pdfbox - 4892 : fix typo , a suggest by valerybokov
do n ' t allow edit on action that do n ' t have annotation
added a userModified flag to the LoginSamlAuthenticationProvider class to track the modification status of the authentication process
added a new file TestSealedObjectNull . java to test the behavior of the SealedObject class with a null cipher to ensure that
rename the ` onOpen ` method to ` setResponse ` and add a ` succeeded ` method in ` ConnectPromise ` to improve clarity and
added support for SNOW and POWDER _ SNOW in the BlockEventListener class to ensure compatibility with server versions 1.17 and above
added an ` id ` field to the ` CryptsyPublicTrade ` class and updated the ` Trade ` constructor to include it to
added a try - catch block to close the MSC connection in HiveStreamingConnection . java to ensure proper resource management and handle potential exceptions during
use random . nextlong ( ) instead of system . currenttimemillis ( ) for seed generation
updated icon sizes and added a new device profile for Nexus 5 in DynamicGrid . java to enhance visual consistency and support for the Nexus
2 . x : fix refcount not reset if disconnect before connect
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to enhance security by utilizing ReflectUtil for type instantiation
added a new ` WHITESPACE _ AROUND _ TEXTUAL _ OP ` token and modified formatting logic in ` FormatVisitor ` and ` Token
added checks to ensure that the file exists and does not overwrite an existing file in SaveTask . java , and introduced new test cases in Save
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety when accessing shared resources
added support for MutableLogEvent in SmtpManager to enable serialization and deserialization of MutableLogEvent instances
changed the PADDING constant from LengthLike to NonNegativeLengthLike to ensure that the padding value does not exceed the defined limits
replaced calls to ` getUser ( headers ) ` with a simplified ` createContext ( ) ` method in multiple resource classes to simplify context creation
refactor methodirbuilder . buildexceptionentries ( ) to use sets . newset ( ) instead of stream . collect ( )
updated import statements and improved error message formatting in JUnitRunner . java and AndroidPlatformTarget . java to enhance code readability and provide
increased cacheSize from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to check if ` start ` is zero in ` InvocationStageTrace . java ` and modified JSON structure in ` TestInvocationPublish
added a try - catch block to handle potential null pointer exceptions during key loading to ensure that a default keystore is used when the input is null
updated server socket and port handling in UpstreamCheckUtilsTest . java to allow dynamic port assignment and improve test reliability
[ web ] fix wrong dimension when move a web view ( web )
added conditional checks for shader - specific extensions in GLRenderer . java to ensure compatibility with different OpenGL versions based on device capabilities
refactor PopulatorContext to improve code structure to enhance maintainability and readability of the code
do n ' t send save notification for non - project project
added charset handling and improved JSON serialization in ZQLJobManager . java to ensure proper character encoding is used for JSON serialization and deserialization
added a condition to check if the argument length is greater than zero before verifying if it is an instance of Table to ensure that the argument
replaced string literals with a constant for header names in FakeOSSOHeaderDecoder to improve maintainability and readability of header definitions
added @ Deprecated annotation to multiple classes to indicate that the suffix strategy should no longer be used in favor of a hidden option
removed unnecessary debug logging statements in DerbyDatabase . java to improve code clarity and reduce log verbosity
drools - 3671 wait for expiration propagation flush in expiration test ( # 2262 )
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by redu
updated conditional checks for ` operationType ` and improved error messaging in ` HubUpdater . java ` to enhance robustness and provide clearer feedback
added constants for Java VM and Eclipse OpenJ9 version information in Constants . java and a corresponding test in TestDDRExtensionGeneral .
refactor message construction in FontFamily . java and add a new DebugFonts . java file to improve clarity of log messages for different
added HTTP version checks in NegotiatingServerConnectionFactory to ensure compatibility with HTTP / 1.1 negotiation
added rate control settings for HTTP / 2 in SettingsBodyParser . java and set it in MaxConcurrentStreamsTest . java to enhance HTTP /
added a new Java file ` Test6741426 ` that implements a Swing component with a JComboBox and a JTextField to implement a
updated error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest . java to include exception message to improve clarity of error response
added null checks for ` madeManagedDir ` and ` madeExternalDir ` in ` HMSHandler . java ` to ensure that operations are
added package declaration for S3CopyObjectRequest . java to organize S3CopyObjectRequest for better clarity and maintainability
refactor setup methods to remove accentColor parameter and use viewThemeUtils for theming to simplify code and improve maintainability by reducing red
updated error message in TemporaryFolderUsageTest to include the file path to improve clarity of error messages for better debugging
updated type information declarations in MappingMongoConverter . java to use ClassTypeInformation directly to improve code readability and maintainability by reducing unnecessary
fix ` ` empty ' ' and ` ` null ' ' address in ` ` clientnetworkconfig . addaddress ( ) ' ' ( #
added a new certificate " keynectisrootca [ jdk ] " to the VerifyCACerts class to enhance certificate verification by including
return the number of output read from the pipeline for performance optimization
added a condition to check if the popup is not clicked or is popup showing before setting the menu mode to ensure the mode is only set when
pdfbox - 4892 : avoid arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to test finalizer and heap information functionality to
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
refactor the handling of the ` receiverAddress ` in ` BurningManService . java ` to use ` Optional < String > `
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future feature additions
increased the byte array size from 1 , 000 to 1000 , 000 and added an @ Ignore annotation to BatchValidateSignContractTest .
changed the method name from ` setMaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
updated query formatting in RetweetActivity . java and Search . java to replace " @ " with " from : " to ensure consistency in query
added a conditional check for rebalance in SimulatorDiscoverer . java to ensure proper handling of rebalance scenarios during simulation discovery
added JSON import functionality to YubiKeyAccountRegistryEndpoint and corresponding tests in YubiKeyAccountRegistryEndpointTests to enable users to save and
changed shader and texture parameters from " texture " to " tex " across multiple Java files to standardize texture naming conventions and improve clarity
added null check for ` cnt ` in ` paintOnTopLoop ` and set safe area in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
update caption assignment logic in HierarchyBase . java to handle null subName to ensure proper caption assignment based on the presence of a subName
changed the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to enable
updated conditional checks and improved variable naming in CustomExpression . java to enhance code clarity and prevent potential NullPointerExceptions
do n ' t send republish request when vote be miss
added a new test method ` testCase4 ` to ` PostgresTest . java ` for testing PostgreSQL connection behavior to ensure that the database
updated string delimiters from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintain consistency
updated line separator handling in DefaultJavaPrettyPrinter and CommentTest to use a constant for line separators to improve code readability and maintainability by
[ truffle ] fix race condition in singleimplementor . getcurrentsnapshot
added null checks and improved query filtering in SimpleFacets . java to enhance robustness and prevent potential NullPointerExceptions during query processing
fix merging of child of a bridge ( # 3995 )
replace usage of ` printHelp ( ) ` with ` error ( ) ` in ` Ktab . java ` to provide clearer feedback on
added a check to ensure the output file exists before proceeding with operations to avoid errors when the output file already exists
added date parsing logic for T , + , and minus seconds in DateConverter . java to enhance date parsing capabilities for specific date formats
added query functionality to retrieve post by slug in PostRepository and updated test assertions in SpringDataJPALockTest to enhance data retrieval efficiency and
changed the ` canAccessDbaRecycleBin ` variable to ` Boolean canAccessDbaRecycleBin ` and added null checks before
added a custom HTTP request factory with timeout settings in ClientRegistrations . java to improve request handling by allowing timeouts for better reliability
added assertions to verify the integrity of the file path and its contents in SourceTest . java to ensure that the source can be canonicalized and
remove graalvm . version system property in favor of graalvm . version
added validation checks for access and refresh token validity in ClientAdminBootstrap to ensure that clients have a valid token before proceeding with operations
update androidAPIVersion return logic to use Android API version from options to ensure compatibility with different Android API versions
removed ' this ' references from multiple method calls in PropertyPlaceholderHelper . java to improve code readability and maintainability
removed the number parameter from the Subject Public Key Algorithm in the certificate owner string to simplify the output format for better readability
updated ZkSolrClientTest to track and assert the number of collections processed in parallel to improve test reliability by ensuring that all collections are
added BigInteger import and registered simpleTypes in MongoMappingContext to support BigInteger type handling in MongoDB mapping context
added a condition to check if the button text equals the string resource to ensure that the toast message is displayed only when the button text matches the
modified conditional logic in MEncoderVideo . java to include a check for MEncoder no out of sync configuration to ensure proper handling of MEncoder
increased the default number of event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more
changed access modifiers of several methods and variables in CountMin4 , IncrementalResetCountMin4 , and PeriodicResetCountMin4 to
added methods to retrieve the file float source and created a new test class for external file field sorting functionality to enhance functionality and ensure correct sorting behavior
updated error message in FetcherException from " Invalid URL " to " Connection error " to improve clarity of error reporting for connection issues
updated event handling to include source ID in OpenRocketSaver and modified FlightDataBranchHandler and RocketComponentSaver to include
changed the visibility of the check method from private to protected to allow subclasses to access and override the check method
added synchronization handling in FileActivity to manage file conflicts to improve user experience by providing appropriate error messages when a sync operation fails
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for better URL encoding to ensure proper handling of special characters in the
added a null check for the " cn1 $ infinite " property in the InfiniteContainer class to prevent potential NullPointerException when the client property is
updated the calculation of the ` total ` variable in ` IntHashSet . java ` to correctly increment the value based on its value
added a lock timeout check before updating the feed in FeedRefreshUpdater . java to ensure that updates are only performed when the feed has been locked
refactor conditional statements in SolarisAclFileAttributeView . java for better readability and maintainability to enhance code clarity and
refactor the creation of edges in LatLonTree to use an array instead of a list to improve efficiency and readability of the code
added IOUtils to manage resource closure in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
replace \ n with \ x0a in comment with \ x0d and \ x0a
added strict mode functionality to command line parsing in Main . java and corresponding tests in MainTest . java to ensure correct handling of unknown parameters and
allow custom constraint validation for @ constraint ( validationby = ... ) and @ constraint ( validationby = ... )
camel - 14850 : camel - http4 - fix the test error of camel - http4
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to improve test reliability by allowing
simplified conditional statements in UBJsonWriter . java to improve code readability and maintainability
rename ApplicationTest . java file to improve clarity and consistency in naming conventions
replaced String with StringBuffer for string concatenation in ConnectionFactoryImpl . java to improve performance and readability of the code
rename ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] allow archive archive to abort when dispatch complete .
added cache key and lookup key attributes to the EntityProcessorBase class and updated related logic to ensure proper handling of missing cache key and lookup key
added a new file PutfieldError . java to demonstrate handling of IncompatibleClassChangeError to ensure that the expected behavior of
fix the issue that clientconnectionmanagerimpl # triggerconnect do n ' t translate the address correctly .
patch by jbellis ; review by brandonwilliams for cassandra - 1343
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple Java
removed the deprecated ` encodedLength ( ) ` method from ` Flyweight . java ` to streamline the interface by eliminating unnecessary
rename TestMethodResultMapBuilder . java file to improve clarity and consistency in naming conventions
do n ' t try to invoke a method that do n ' t exist in jdk 1.5 .
[ hotfix ] remove dead code from tasklocalstatestoreimpl
updated return statements in Utils . java to append " m " , " h " , and " d " instead of string concatenation to improve cl
updated conditional checks in Utilities . java and FloatingIconView . java to handle DeepShortcutView instances to improve type safety and ensure proper drawable
updated JwtIssuerValidator to use a Predicate for the claim value validation and added tests for issuer URL matching to enhance validation logic to allow more flex
renamed methods for buying and selling quick rates in Coinmate classes to improve clarity and consistency in naming conventions
added a new CoverageConfig class and updated CoverageController to use it for class loading to improve code modularity and maintainability by centralizing coverage
fix eventbus double register on
added ascii - only normalization logic in NormalizerBase . java to ensure only ASCII characters are processed during normalization
[ hotfix ] fix check for migration task allowance in jobcoordinationservice
added error handling for SQL update statistics in SpillableGroupByIT . java and updated test category in NoOpStatsCollectorIT . java to
( chore ) camel - cometd - http : / / issues . apache . org / activemq / browse / camel -
updated attributes in HtmlTag . java from " attrs ( AttrKind . USE _ CSS , ... ) " to " attrs ( AttrKind . OK
added a line break to the HTML output in HtmlCoreReport . java to enhance the output formatting for better readability
updated ramBytesUsed calculation to account for null scores to ensure accurate memory usage estimation when scores are not provided
added StringHolder and StringHolderTypeAdapter classes for serialization and deserialization of collections in CustomTypeAdaptersTest . java to enhance JSON handling capabilities for
added extra data handling in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure that extra data is utilized from mining parameters for
added a static final ` numArgs ` map and updated the ` argsToProperties ` method to include ` numArgs ` as a parameter to
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
refactor variable names from ' configedThreshold ' to ' configuredThreshold ' and introduce a constant for the migration delay time to improve code
renamed the parameter ` part ` to ` partOrList ` in the ` attach ` method and its usage in ` RestClientRequestImpl
[ drools - 6642 ] move twitter bootstrap resource to their own directory
spanishtreebanklanguagepack : remove ppostag pattern from spanishtreebanklanguagepack
hhh - 16464 : deprecate entityloader . load ( ) in favor of entityloader . load ( )
hbase - 25827 remove unnecessary taskpool . take ( ) in regionserverflushtableproceduremanager and regionserversnapshotmanager (
set size of java2d if width or height be zero
reformatted the fillPool ( ) method in HikariPool . java for consistency to improve code readability and maintainability
added assureMatchVersion ( ) method to multiple filter factory classes and initialized luceneMatchVersion to LATEST to ensure compatibility with the
fix execution of aop concrete method in an introduced class . fix # 3039
[ drools - 7 ] fix drlparser to not throw a npe when parse a drl file with comma
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
improve error handle for invalid websocket frame payload length .
refactor package structure and import statements for PublishSubscribeChannel and PublishSubscribeChannelParser to improve organization and clarity of the codebase
updated executionId types from String to Long across multiple classes to improve flexibility in handling scheduled query execution IDs
added multiple byte updates for image dimensions in ImageProcessor . java to enhance image processing efficiency by optimizing digest updates
added imports for CollectionParams , CoreAdminParams , and LocalSolrQueryRequest in SolrConfigHandler . java and SolrConfigHandler . java to
updated the delayUntil calculation in FileSyncAdapter . java to use the current time instead of a fixed value to avoid too many automatic synchronizations
updated the declaration of the ` afterConversionTime ` variable in ` SegmentV1V2ToV3FormatConverterTest . java ` to
refactor ` addPathToMTree ` to accept a ` Path ` object instead of a ` String ` for the ` fullPath ` variable to
added URI handling for URL parsing and improved exception logging in DefaultPackageScanClassResolver to enhance robustness of URL processing and provide clearer
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` to provide functionality for retrieving the principal and credentials from
updated the implementations of AbstractConcurrentArrayQueue and ManyToOneRingBuffer to improve performance and reliability of concurrent access handling
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
updated the dialog implementation in GenericViewFragment to use a cached list instead of a hardcoded auto - suggest dialog to improve user experience by providing
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and updated assertions in ` StoreAPITest .
updated the method signature of ` stream ` in ` MongoTemplate . java ` to use ` collectionName ` instead of ` collection . getName ( )
map overview : fix zoom ( x ) and zoom ( y ) on mouse wheel
added similarity support to the KNearestNeighborClassifier class and updated related tests to enhance classification accuracy by incorporating default similarity settings
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance and simplify query parsing
updated the reason retrieval from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to ensure accurate representation
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
added tests for the ` requestMtu ` method in ` ShadowBluetoothGattTest ` and implemented it in ` ShadowBluetooth
refactor the creation of the servlet output stream into a separate method to improve code readability and maintainability
added logging for UnsatisfiedLinkError and set log level to WARNINGS in VoskSTTService to improve error handling and provide
replaced HashMap with ConcurrentHashMap for mProcessingChains in ChannelProcessingManager . java to improve thread safety and performance in concurrent environments
updated Japanese text resource strings in Resources _ ja . java to improve clarity and accuracy of user interface messages
updated condition in JDBCTypeMapping to check for size greater than 1 and modified assertions in JDBCTypeMappingTest to ensure correct handling of data types
added synchronized keyword to addPlayer and removePlayer methods and refactored entity addition and removal to use streams to ensure thread safety when modifying player
replaced the ` isScreenReaderActive ( ) ` method with a new ` stateTester ` instance and updated the handling of accessibility
updated command behavior checks to include SIDE _ NAVIGATION in MenuBar . java and modified closeButton handling in SideMenuBar .
removed the import of Disposable from PoloniexManualExample . java and added error handling in WampStreamingService . java to simplify
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and corresponding tests in UpdateSettingForEnergyLimitContract
updated variable names for clarity and added protocol handling in PostmanJsonBuilder . java and UrlBean . java to improve code readability and
add getter / setter for namespaceprefixref in soapjaxbdataformat to allow customization of the namespace prefix
refactor date comparisons in TestRange . java to use a helper method for comparison to improve code readability and maintainability by reducing duplication
added server checks and security verification in BasicAuthIntegrationTest . java and updated security property retrieval in ZkStateReader . java to ensure proper
set correct currency code when use sticky market price
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a consistent variable
updated variable names and logic for determining the end index in NativeString . java to improve code clarity and ensure proper handling of the end index
added functionality to download and save files in FileDataStorageManager to improve file management and ensure download status is consistently applied
refactor RandomAccessFile initialization to use a named variable for clarity to improve code readability and maintainability by using a more descriptive variable
added methods ` checkIfRegistryRunning ` and ` deleteFileIfExistsWithRetry ` to ` FileUtils ` to check if a registry is running and handle file
removed unused import statements and added componentPresetDao . startLoading ( ) in Quick3dMain . java and TextureTest . java to stream
removed unused private variables and added @ SuppressWarnings annotations across multiple Java files to improve code clarity and suppress unchecked warnings during compilation
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when instances are null
phoenix - 2549 modify phoenix databasemetadata implementation for transaction support
added transaction attribute handling in AbstractStepFactoryBean and improved error handling in ItemOrientedStep and SkipLimitStepFactoryBean to enhance
replaced ` CasClient ` with ` DirectCasClient ` and refactored the ` CasManagementSecurityInterceptor ` class to improve client
hide the " add category " menu item in ListFragment and update the list of items in NavigationDrawerFragment to improve user experience by allowing category
renamed the method ` cancel ` to ` cancelMatchingOperation ` and updated the method name from ` observeDownloadWorkerState ` to ` observe
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve text size consistency and clarity in font size management
check if the fact be valid before modify it in constantanalysis .
refactor multiple Java files related to dependency management to improve code organization and maintainability
replace return statement to create a new ArrayList instance to ensure that the returned spans list is a new ArrayList instance
removed unnecessary lock management in Liquibase . java to streamline code and improve performance by eliminating unnecessary locking
added a method to set the revision in MicroserviceVersions and modified InstanceCacheChecker to set it to null to ensure proper handling of the revision
updated foreign key and index name handling in TableRetriever . java to include hash codes for better identification to improve clarity in foreign key and index
camel - 15836 - camel - aws2 - s3 : add uri - endpoint - override option to all aws2 component - aws
removed unnecessary import of TradeHistoryParamCurrencyPair in BitstampAccountService . java and added a new method to BitstampAccountServiceRaw
added error handling for retrieving component instances in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing component instances
make pushbuilder and streamprocessor return whether push be enable or not .
refactor LegacyAddressTest to read data from a file instead of a hardcoded string to improve test reliability by avoiding hardcoded values
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor Snackbar setup logic in NotificationsActivity and closeDrawer method in DrawerActivity to improve code readability and ensure Snack
close the channel if an ioexception occur , close the channel if an exception occur .
updated null checks and variable names in LdapPasswordPolicyEnforcer . java for consistency and clarity to improve code readability and maintainability by using
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable tests related to PHOENIX - 2840
nifi - 7017 : add timezone support to the about / flow resource .
do n ' t split own range if we do n ' t have one
removed exception handling for deserialization in BeanContextSupport . java to simplify code and improve readability
removed redundant synchronized block in CircuitManagerImpl . java to streamline code by eliminating redundancy
replace GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
flume - 2272 : refactor polledriversourcerunner and pollablesourcerunner to use source and sink
updated logging level from error to info for user authentication failure to improve logging clarity and provide more informative error messages
refactor ContainerOrderFocusTraversalPolicy class to improve focus traversal logic for better user experience
mondrian : make sure point [ freehand ] return int instead of double
renamed the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve clarity and consistency in naming conventions
refactor database connection handling in SchemaCrawlerMain and Executable classes to ensure proper resource management and enhance logging of connection lifecycle
update default tl version to support jdk 1.2
[ hotfix ] fix typo in countermanager error message
modified audio stop logic and adjusted ndx calculation in MediaManager . java to ensure proper handling of audio queue position and prevent potential issues with audio
updated debug logging statements in HttpConnection . java to include the cancelled state to improve logging clarity by capturing the state of the upgrade process
added support for JPA ' s @ Transient annotation in JpaPersistentPropertyImpl and its unit test to ensure proper handling of transient fields in
updated stack version assertions in UpgradeResourceProviderTest . java to reflect the correct version from " HDP - 2.1 . 1 " to
trufflevm : make eval ( uri , string , reader , mimeType ) return object instead of symbol .
changed the visibility of the ` isBinaryType ` method from private to public and added a check for binary encoding in ` Proxy . java `
updated the value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE in HiveConf . java to
remove the ` findProblem ` method from ` javaproducer ` and remove the ` priority ` field from ` javaprodu
replaced ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType . java ` and ` BloomFilterHandler .
updated string formatting in TableWriterTest to use the system ' s line separator to ensure consistent line endings across different operating systems
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate easier debugging
added a boolean field ` ownsTexture ` to the ` ParticleEffect ` class to check if the particle effect owns the texture before proceeding
added LDAP authentication configuration options to HiveConf . java to enhance security and configuration options for LDAP connections
fix checkstyle issue in ` ` cloud - datacatalog ' ' , ` ` cloud - datacatalog - api - java ' ' , `
updated InputMethodManager usage in DetailActivity . java to include SHOW _ FORCED flag and adjusted soft input toggle behavior to improve user experience by
added a test for converting between primitive and primitive data types in DataTableTypeRegistryTableConverterTest to ensure correct conversion of primitive and object data structures
updated the size of the file system from 100 , 500 to 10 , 50 , and changed the size of the file from 100 , 500 to
updated error message for M2 . 4 exception handling in ContentTypeManager . java to provide clearer guidance on potential resource management issues
made the ` dropSequences ` method abstract in ` AbstractDatabase ` and added it in ` DerbyDatabase ` , ` MSSQL
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated the variable assignment in the binaryField . createField method to improve clarity by explicitly assigning the result of the createField method
bug fix : do n ' t gather leaf and parent style in hierarchicalicons
added a test method to verify the behavior of ` findOne ` after upserting a non - existing object to ensure that the system correctly handles non
hbase - 15413 fix findbugs warning in hbase - util
added stats tracking for app launches and refactored broadcast intent creation to improve app launch tracking and handle null shortcuts more gracefully
replaced the way the renderer is set in JavaSEPort . java by creating a graphics2D instance and disposing it to improve rendering
update instructorfeedbackresultspagedata and instructorfeedbackresultspagepagedata to use correct data for last participant and receive team .
modified the inventory ID generation logic to return an ID if the player ' s inventory id is zero to ensure that a valid inventory ID is returned
added a conditional check before breaking the loop in ConfigDescriptionRegistry . java to ensure that break is only executed when the condition is met
updated return type handling in multiple parser visitor classes to ensure consistent behavior when returnType is null to improve code clarity and prevent potential null pointer exceptions
refactor TileMapRenderer to handle null blended tiles more gracefully to improve robustness by avoiding null pointer exceptions
updated Classes annotation to include only " java . crypto . SunJCE _ l " instead of " java . crypto . SunJCE
take into account the last segment when calculate the area of a point
updated lockOnSync initialization and modified throttleRate assignment logic to improve clarity and correctness of throttle rate management
updated PipeEventBus and PipeBehaviourEmzuli classes to change method visibility from static to instance methods to enhance encapsulation and ensure proper
updated ZkController timeout value from 1000 to TIMEOUT in ZkControllerTest . java to allow more flexible configuration of the ZkController
added a test for the passcode endpoint with client parameters in TokenMvcMockTests . java to ensure proper handling of passcode requests with client
added LengthFilter and KeepWordFilter constructors to brokenOffsetsConstructors in TestRandomChains . java to ensure compatibility with the latest Lucene features and
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to enable the test to run and ensure
changed the argument type from int to unsigned long for putI1 , putI8 , putI16 , and putI32 in LL
replaced direct calls to ` btCollisionObject ` and ` btRigidBody ` with direct calls to ` btCollisionObject .
added a new constant for the build copyright year and updated the openrocket URL in the AboutDialog to reflect the current copyright year to
add getdistributedobjects ( ) method to jetclientinstanceimpl ( # 11938 )
added print statements in FinSet . java and updated expected values in MassCalculatorTest . java to enhance debugging output and correct variable values for
updated memory management constants from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to improve memory management by
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and updated parameter name in CreateAlignedTimeSeriesPlan . java to
do n ' t validate delayed payout tx if not active
updated the input string format in JsonLoaderTest . java and added exception handling for " big _ integer _ t " to improve clarity and
updated the threshold for the capacity in ObjectSet from 1 to 0x40000000 to allow for a larger table size to enhance flexibility in
updated import statements in ColumnSnapshotGenerator . java and added null check for DATA _ SCALE in ColumnSnapshotGenerator . java to improve code clarity
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to streamline the code by eliminating unnecessary annotations
added exception handling for SecurityException in FileHelper . java and updated content handling in TextHelper . java to improve robustness of file retrieval and ensure
added tests for attribute resolution in ShadowThemeTest to ensure correct handling of multiple attributes in the theme
updated sheet creation logic in HSSFWorkbook and modified test cases in TestHSSFWorkbook to improve sheet management and ensure accurate testing of
updated the primary color reference from ` primaryColor ( ) ` to ` elementColor ( ) ` in ` ManageAccountsActivity . java ` to
updated handler initialization logic in DefaultEventBus . java and simplified path resolver in DefaultPlatformManager . java to improve handling of null replyHandler and
added binary collation support to MariaDbDbmsType , MySqlDbmsType , and other DbmsType classes to enhance SQL query generation
added a method ` whenType ` to return an ` Optional < T > ` based on the type of the tree to enhance type safety and
refactor navigation logic in ItemLauncher . java to use a dedicated method for user view destination retrieval to improve code readability and maintainability by
changed the response type from OK to temporaryRedirect in FeedREST . java to provide a temporary redirect for the application settings service
[ flink - 20536 ] [ kinesis ] make deserializer non - serializable in flinkkinesisconsumer
( chore ) camel - core : fix checkstyle issue in camel - core
added a try - finally block to ensure zkClient is closed even if it was not created to improve resource management and prevent potential memory leaks
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
refactor ` read ` method in ` ProxyHandler ` to use a dedicated ` read ` method to improve code readability and maintainability by
replaced instances of ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to simplify
modified the return type of ` prepareStreamsToUpload ` from ` void ` to ` boolean ` and updated its implementation to improve clarity and
replaced direct comparison with Integer . compare for order comparisons in AbstractConfigLoader . java and updated configuration model parameters in TestMicroserviceConfigLoader
added a new file ` PicOfDayAppWidget . java ` for managing app widgets with image loading functionality to enable users to update app widgets
default lbvm offering id to 0 instead of null ( # 5446 )
updated HiveParserCalcitePlanner to use HiveRelOptUtil for splitting join conditions and modified join condition handling to improve code clarity and
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] mark table - planner - blink a
added user and password options for JMX access in NodeToolCmd . java to enhance security by allowing users to access remote jmx credentials
removed redundant initialization of scratch in Stemmer . java to streamline code by eliminating unnecessary variable declarations
updated widget handling in AppsCustomizePagedView . java to utilize the page view icon cache based on the number of widgets to
ggbapplet . getview ( ) do n ' t return active euclidianview if there be no 3d view
updated rotation calculations in GcodeRenderer . java to ensure rotation values are non - negative to improve robustness by preventing negative values from being
added a new option ` WORKSPACE ` to the ` OptionEnum ` class and updated ` TerminalClient ` to set the workspace directory to enhance
updated file path from " target / test - classes / options . apt " to " target / test - classes / options . html "
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and enforce pollution prevention
updated the OAuthConfirmationController to use a session attribute for the authorization request and modified the method signature to use a Map instead of a ModelAnd
updated assertions in HibernateIT to assert that the second - level cache hit count is equal to 9 to ensure that the test accurately verifies
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
rename MultiPaintEventTest . java file to improve clarity and consistency in naming conventions
removed the final modifier from mNewScale in WorkspaceStateTransitionAnimation . java to simplify the variable declaration for better readability
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the synchronization process
added uniqueKey field handling in LukeRequestHandler to ensure uniqueKey fields are correctly stored in the schema
added document filter for strokeColor and backgroundColor in BorderEditor . java and updated color retrieval in EditableResources . java to enhance document filtering capabilities
add compilerasserts . neverpartofcompilation ( ) to binaryparserexception .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchSchedulingtest
added logging statements for pending and resumed requests in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes , and modified
added toolbar menu item click listener to the RecentChatFragment class to provide users with a toast message when a menu item is clicked
updated ` InfoDropTarget ` and ` UninstallDropTarget ` to extend ` UninstallDropTarget ` and refactored related methods to
renamed methods from ` add ` and ` removeTail ` to ` push ` and ` peek ` in multiple classes to improve clarity and
updated API and HOME URLs from " https : / / test " to " https : / / commons . wikimedia . org /
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by encapsulating index
replaced ` Collections . sort ( ) ` with ` Collections . sort ( ) ` for sorting collections across multiple classes to improve code readability
added date and time patterns to the FormatData _ hr _ HR . java file to enhance formatting capabilities for date - time and time -
added a call to clear the focus of the clickedView in DetailFragment . java to ensure the clickedView remains visible after clicking it
replaced ` notifyDataSetChanged ( ) ` with ` spinnerDescriptionLanguages . setSelection ( position , true ) ` in ` DescriptionsAdapter
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added native methods for registerGlobal , registerWeak , and accessFieldsViaHandle in FastGetField . java to enable dynamic registration and access
added default value handling for UNION and NULL types in ReflectData . java and updated tests in TestReflect . java to ensure correct serialization and deserialization
increased the offerTimeout from 300 to 1000 in the SedaBlockWhenFullTest to allow more time for the blocking operation to
added a null check before remapping the R class in ResourceMerger . java to avoid potential NullPointerExceptions during resource mapping
added a constructor to multiple dialect classes that accept a DatabaseVersion parameter to ensure proper initialization of the dialect with the appropriate database version
camel - 16400 : http producer should send connection close header if connection be close
increased the socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete successfully
added an assertion to verify that the count of tickets is zero in BaseReservationFlowTest . java to ensure that the query returns an empty result
refactor Parser class to improve code readability to enhance maintainability and facilitate future feature additions
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
simplify code by use getfirstelementchild ( ) instead of getchild ( ) . getchildren ( ) . getchildren ( )
planner - 544 : fix removal of non - enum value in shiftassignmentpillarpartswapmovefactory
[ java ] wait for cluster node shutdown to complete before exit .
change log level from warn to info in ELContextCleaner . java to provide clearer information about the absence of BeanELResolver .
added a content type constant for " application / octet - stream " in WebdavEntry . java to ensure proper handling of binary data types in
added a method to get the queue size in LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure the correct queue size is returned
fix distanceop to skip line that do n ' t have a minimum distance
rename ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity by indicating the purpose of the
removed the next ( ) method implementation and added updateProgress ( ) in PurgingPartitionIterator . java to streamline the process of updating progress
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide a
added validation to ensure polygons contain at least 3 points and updated localVertices assignment accordingly to improve error handling and ensure vertices contain at least 3 points
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to utilize the updated ObjectMappers utility for impro
do n ' t create a squarefree array if the equation may be polynomial
updated the handling of Unicode name length and multibyte flag in ExternalNameRecord . java and added a new test case for bug 473
updated the description of the JMS destination type in AbstractJMSProcessor . java to specify that the destination type must be ' QUEUE ' or '
added logic to exclude username and password prompts based on a boolean flag in LoginInfoEndpoint . java to ensure that sensitive information is not included
replaced ` remove ( listener ) ` with ` removeIf ( listener ) ` in ` AbstractController . java ` to improve listener management by
added a spin action for the pie chart in PieChartActivity to enhance user experience by providing a smoother and smoother
citrixresourcebase : kill copy process if copy _ vhd _ to _ secondarystorage fails
hbase - 16463 skip normalization of table that have quota ( liu shaohui )
updated import statements in AndroidInput . java and added a resize method in AndroidInput . java to improve code clarity and ensure proper resizing
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and reformatted the ` @ VisibleForTesting ` annotation to improve
ignore fail test in clientmapnearcachetest because it be always fail and block PRs
fix a bug with hopperhock not be able to place item within their bounding box .
added authentication dialog functionality to the SsoWebViewClient class to enhance user experience by allowing authentication credentials
refactor document deletion methods in TestStressIndexing2 . java for improved clarity and functionality to enhance code readability and maintainability
[ flink - 22559 ] ignore upsertkafkatableitcase test due to flink - 22559
replaced ` get ( j ) ` with ` computeIfAbsent ( j , k ) ` in ` ResTable . java ` and corrected the
added a configuration to accept single values as an array in DefaultEntityMapper to ensure proper handling of single values as arrays during deserialization
updated localization message from " Localization update : " to " Localization update : BE , UK , and SL " to improve user
[ netbeans - 4354 ] add ` ` application ' ' a a shortcut for cl . app . categories
( chore ) camel - feel : fix parsing of ` ` instance of ' ' and ` ` and ' ' expression ( # 1
nifi - 1641 : add mime - type attribute to gethttp response so that content - type be report by the http content -
do n ' t create a new instance of resourcehistoryprovenanceentity if it do n ' t exist
updated button references from " exit " to " done " in HelpActivity . java and modified URI construction in SearchBookContentsActivity . java to
updated NatsConfiguration . java file to improve configuration handling for better performance
refactor ` invalidateStalePartition ` method to ` invalidateStalePartitions ` to accept ` List < PartitionNameWithVersion > ` instead of using
use buffer instead of boundedfifbuffer and add pagination support for view result tree
updated drawable resources from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to improve visual representation of chat - related
changed method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure thread safety
updated method names in MocksCreationTest for consistency and clarity to improve readability and maintainability of the test code
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator
increased timeout duration from 10 seconds to 30 seconds in multiple awaiter calls to allow more time for the phaser to complete before proceed
simplified the ` publishBuildSlaveFinishedEvent ` method by removing the ` BuildSlaveFinishedStatusEvent ` class and its associated event bus
vmware : fix findbugs encode warning in vmwarestoragemanagerimpl . java
added a test for depositing workspace items without a workflow test and a new method in CollectionBuilder to ensure proper functionality of the workflow items
added distinct ( ) to the classpath collection in ClassLoaderSupportImpl . java to ensure unique classpath entries are processed
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to use contains instead of equals for encoding , string , and templateDir to improve code readability and
added a check for non - external tables before deleting the directory in HiveMetaStore . java and updated tests in TestHiveMetaStore .
updated HIVE _ SERVER2 _ ASYNC _ EXEC _ THREADS and HIVE _ SERVER2 _ ASYNC _ EXEC _ K
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for the execution task role and improve the handling of service and component names to enhance code readability
added a new variable ` diff ` to store the current configuration information in ` OperationSetTelephonyConferencingSipImpl . java `
add a method to clear the flutter log tree ( # 2293 )
updated return statements in ChannelEndPoint . java to include checks for socket state and input / output shutdown to ensure proper handling of input / output shutdown
refactor SetNullableGenerator for improved nullability handling to enhance code clarity and maintainability
camel - 16400 : camel - example - reportincident should use newfile component instead of file component .
simplified import statements and refactored content type handling in NettyRoutingFilter and FormIntegrationTests to enhance code readability and maintain
added @ ApiOperation annotations to multiple service classes for " hello " and " helloWithValue " to enhance API documentation clarity and usability
refactor lifecycle listener management in Lwjgl3Application and update method signature in Lwjgl3Window to improve clarity and
updated the FG _ FK color from 90 to 200 to improve the visual appearance of the UI
set mp3 support to false by default
fix secondaryindexmanagertest by use system . getbuiltindexes ( ) instead of execute ( )
pmd : add about group to the generalpreferencespage .
[ hotfix ] [ test ] fix test instability in customserializationitcase
refactor MediaFormatUtil to improve code readability to enhance maintainability and facilitate future development
added a method ` isCellEditable ` to the ` GeneralTab ` class that always returns ` false ` to provide a default implementation for cell
added a new method ` isOnlyPrintCommands ( ) ` and modified the message formatting in ` AbstractUnusedDependenciesFinder ` , ` JavaB
changed the scaling factor from 2.0 to 0.85 in VocalTractModifier . java and VocalTractScalingProcessor .
updated import statements for BaseScalarUdfTest in TestUDFRound and TestGenericUDFConcat classes to ensure consistent usage of BaseScalar
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing for instances of UaaAuthenticationDetails
testskeletoncontrolrefresh now use bone animation instead of bone animation .
rename ` nodefilter ` to ` nodecountfilter ` and change ` isfiltered ( ) ` to ` iscounted ( ) `
updated the condition to check if the sync block to fetch is less than or equal to the specified batch size to ensure that the synchronization limit is
update state from 365 to 366 and modify debug expression messages to enhance clarity of debug output for better debugging
updated dependency resolution logic to check for transitive scope to improve accuracy in identifying dependencies based on their transitive scope
renamed methods ` tmp ( ) ` and ` ler ( ) ` to ` dst2 ( T v ) ` and ` ler
[ grid ] default ` ` args ' ' to ` ` { gridhubconfiguration } ' ' when not specify
refactor RustBinaryDescription to use ImmutableList for linker arguments and add linkerFlags to enhance flexibility in managing linker flags during Rust build
[ # 1640 ] fix test failure in adminemailpageuitest ( # 1641 )
added configuration for " hive . query . name " in HiveConf and improved logging format in GenericUDTFGetSplits to enhance configuration
removed the import of ` java . io . File ` from ` TileAtlas . java ` to streamline the code by eliminating
[ netbeans - 4354 ] make gradle daemon thread safe
updated the ` validateQuery ` method to include an additional ` arguments ` parameter to enhance error handling by providing more context for query validation failures
updated index version from 1 to 2 and refactored tree retrieval logic in LuceneExecutor . java to improve indexing efficiency and streamline repository
[ flink - 11 ] [ runtime ] add test for kryo serializer registration
added null check before removing configuration properties and updated configTypesUpdated to avoid potential NullPointerExceptions during property removal
refactor boolean conversion logic in MetaStoreDirectSql . java to use BooleanUtils for better readability and error handling to improve code maintainability
added hideCustomizationDrawer ( ) method to Launcher . java to improve user experience by hiding the customization drawer
refactor warning handling in TermVectorComponent to use a constant for warnings to improve code readability and maintainability by centralizing warning management
added conditional logging for optimistic types and improved log message formatting to enhance clarity and control over logging behavior based on the optimistic types
refactor Expect class to improve code readability to enhance maintainability and facilitate future feature additions
added UnixSocketConfigurationStrategy to the DockerClientFactory and created a new file for Unix socket configuration to enable support for Unix socket connections in Docker
added JUnit 5 flaky test annotations to CloseableDoSFilterTest . java to mark tests as flaky to improve test reliability and
camel - 16400 : camel - core - reactive - streams should use reactivestreamsnoactivesubscriptionsexception instead of illegalstate
refactor ` Vectorizer ` and ` TezCompiler ` to use ` MapWork ` instead of ` MapRedTask ` for better cl
updated constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to enhance functionality by allowing additional behavior during initialization
fix npe when guipackage be null in jmeter tree model
add linkage . isweak ( ) and linkage . getencodedvalue ( ) . getencodedvalue ( ) . getencodedvalue
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
no effective change - add test for defaulttransactionthreadlocal
added a validation check for invalid operation handles in HiveStatement . java to enhance error handling by logging warnings for invalid operations
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ TABLE _ ALTER
camel - 14850 - camel - aws : create an aws secret manager component , add unit test
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from the error response message in UserREST . java to simplify the error response for better readability
added a ` subTree ` parameter to the ` fromContent ` methods and modified the ` fromContent ` method to include it to enhance functionality
update column width calculation in Sheet . java and add unit tests in TestHSSFSheet . java to ensure correct column width calculations and validate
updated the ` commands . less ` method to include ` configPath ` as a parameter to enhance configuration flexibility for command execution
replaced ` Set ` with ` Collection ` for table and weak associations in ` DotWriter ` and ` GraphExecutable ` classes to improve flex
use sshd 1.0 . 0 instead of sshd @ sha256 in testcontainersconfiguration
cloudstack - 6892 : remove unnecessary assertion from agentmanagerimpl . java
refactor key generation logic in DefaultGroupKeyGenerator to use BlockSingleValIterator for improved clarity to enhance code readability and maintain
updated the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and improved error handling in ` TestMultiMMap
fix bcsiliconrecipes use nbt instead of nbt for the ingredient stack
rename put ( key , value ) to putobject ( key , value ) in graphhopperconfigmixin
updated visibility logic in CellLayout and refactored drag exit handling in DragController to improve code readability and maintainability by encapsulating animation
updated the ` ModifyRequestBodyGatewayFilterFactory ` to use ` getRewriteFunction ( ) . apply ( originalBody ) ` and added a new
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure only accessible types are processed
replaced instances of ` logger . warn ` with ` logger . trace ` for various log messages in ` LoggingHandler . java ` to improve
updated prefix extraction logic in WhiteBlackList . java and added a new test class Issue348 . java for wildcard handling in Issue348
added new imports and refactored image retrieval logic in GalleryActivity . java to enhance functionality and improve code organization for better maintainability
added lazy initialization for MongoDB service instances in MongoDBServiceFactory to improve performance by avoiding repeated instantiation of MongoDB services
added tests for replacing boolean values with their respective boolean representations in InlineConstantMutatorTest . java to ensure that boolean values are correctly replaced with their
updated the ` decode ` method to include a ` Blackhole ` parameter for better handling of black holes to enhance the functionality of the ` decode
fix : update gapic - generator - java with mock service generation fix ( # 174 )
updated the ` getAllUnitStrings ` method to return a ` Map . Entry < String , String > ` instead of a ` String ` stream
removed the clearing of witnesses from the database manager to ensure the database state is reset before tests run
do n ' t throw prestoexception when abort
refactor stack property management in NativeError to use getter and setter functions instead of a direct property assignment to enhance encapsulation and control over the stack property
removed a condition that checks if the path name starts with " . " to simplify the path filtering logic
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before each test execution
updated the BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 in HSSFFont . java to correct the representation of
updated ` fThreadGroup ` to be ` volatile ` and modified ` fLookForStuckThread ` and ` fLookForStuck
changed the access modifier of the ` getValue ( ) ` and ` setValue ( ) ` methods in ` ValueResultData ` class to improve encaps
updated hash code and equality check in FuzzyQuery to ensure proper comparison and hashing based on superclass behavior
removed debug print statement from PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to simplify method signatures and improve usability
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest and Schema
updated the principal retrieval method to use a resolved principal with a new HashMap parameter to improve the handling of principal resolution without attributes
changed log level from info to warn for connection - related messages in OpenWebNetBridgeHandler . java to provide more informative logging for connection
rename methods and variables from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in
added a constructor to ThumbnailGenerationTask to initialize parameters to ensure storageManager is not null and prevent potential NullPointerExceptions during thumbnail generation
updated loop condition from ` nrFound = = 0 ` to ` nrFound < count && tries > ` in ` GroupSelectionQuery . java
added a new file ` Bug1933922 . java ` implementing recursive compilation functionality to address bug 1933922 related to recursive program
removed unnecessary parentheses in conditional statements across multiple files to improve code readability and maintainability
updated the validation check for control characters from 33 to 32 in FileResolver . java to ensure that control characters 0 - 31 is valid and improve
added requestFocus ( ) method call in Display . java to ensure the component receives focus when necessary
[ add ] instructorhomepageuitest : add test data for new instructor
rename JsonParserAsync to JsonStreamParser across multiple files to improve clarity and consistency in naming conventions
removed the cancelAllCroutons ( ) method call and updated message handling in DetailFragment . java , and modified the onPause ( )
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to validate
refactor Dialog class to improve code readability to enhance maintainability and facilitate future feature additions
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . start ( ) ` in ` SourceCompiler .
updated the method to increment the past window using 127.0 . 0.1 instead of the local host to ensure accurate metrics tracking for the
refactor the handling of controller and base variables to use a separate method for setting subsystem to improve code readability and maintainability by reducing
added assumptions to check if the Apple platform is available in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed
rename jvmciversioncheck . validateproperties ( ) to getrequiredproperty ( ) .
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve memory management testing for large pages
updated ` BinaryParser ` , ` PlainTextParser ` , ` ParsingExecutionContextView ` , and ` ParsingExecutionContextView ` classes to
added support for handling multipart form data compliance in HttpConfiguration and introduced a new enum MultiPartFormDataCompliance to improve flexibility in handling multipart form
added a new JDK version " 7.2 " to GradleDistributionManager to support compatibility with JDK 17 features
refactor type management in DatabaseSnapshot and SnapshotControl classes to use a unified addType method to improve code clarity and maintainability by centralizing
refactor Term class to improve code structure to enhance maintainability and readability of the code
updated return statement to handle null or empty runWith values to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / activemq / browse / amq - 2636 - add test case to show
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
attempt to fix a bug in the detection of luminances that could lead to an off - by - one error .
updated the variable name from ' amount ' to ' mTintAmount ' in TaskView . java to improve code readability and maintain consistency in
added a new file ` SumZeroFunctions . java ` to implement a GAGREGATE function for summing distinct values to provide functionality for
[ hotfix ] [ table - planner - blink ] fix test failure on oracle
updated the ` getAllocationFailWarningMessage ` method to include a ` BucketAllocatorException ` parameter and improved string formatting to enhance clarity
added a null check for propName before putting it into roleObject properties to avoid potential NullPointerException when propValue is null
added @ VisibleForTesting annotation to several fields and methods in StatusBarTouchController . java , and modified task removal logic in RecentsView
added methods to log container streams in DockerClient . java to enable logging of container logs for better debugging and monitoring
add test case for mvstore cache performance
updated the long value from " L " to " J " in PrimitiveType . java to reflect the correct representation of long values
changed the access modifier of the delegatingApplicationListener method from public to static to allow the method to be called without an instance of Delegating
set the message body to null in RestBindingAdvice . java to avoid potential NullPointerExceptions during message processing
added ` FileDeletingTasklet ` and ` TaskletJobFunctionalTests ` classes for managing files in a directory to facilitate
bugfix : only update center and orientation regarding view when size change
updated index references from ` index + 1 ` to ` index - out - of - bounds ` in multiple Java files to improve code clarity
updated the ` sendEventToTest ` method to ` sendStateEventToTest ` and modified related calls to use state ordinal instead of event
added support for video thumbnail requests in the RequestHandler and RequestHandlerV2 classes to enable handling of video thumbnails based on the renderer ' s user agent
bug fix : do n ' t try to highlight problem in scrolltoerrorline ( )
added conditional logic to adjust the layout of the open button based on the user ' s theme to improve user interface responsiveness based on the
updated Skia . java to include " libskia " and modified link and preload configurations to ensure compatibility with the latest library structure and improve
added support for unittestnet in networkparameters . java
added validation to ensure only valid format arguments are provided in the query command to improve error handling and provide clearer feedback for users
refactor capacity and isPositionValid variables to use length - 1 instead of capacity to improve clarity and maintainability of the code
updated ` walkRuleAndAdd ` method to include ` srcTarget ` as a parameter and modified dependency checking logic to ensure that tests are only
[ netbeans - 4354 ] fix module name override when run with - dclasspath = - dclasspath = module
[ java ] remove redundant check for protocol version in election .
added conditional logic to set the default OwnCloudClientManagerFactory policy based on SAML authentication status to ensure proper handling of client creation based on authentication
improve error message when a maptableresource ( table ) be miss
use utils . close ( ) instead of try - catch block
refactor AnonymousAuthenticationFilter to use a deferred context for authentication to improve flexibility in handling anonymous authentication scenarios
modified the removeActor method to include an unfocus parameter for better control over actor removal behavior
refactor configuration prompt handling in SolrCLI . java to use a constant for valid configurations to improve code readability and maintainability
added logging capabilities and modified response handling in NettyHttpServer , RoutingInBoundHandler , and NettyHttpServerConfiguration to improve response management
refactor multiple Java files related to parsing and formatting to improve code readability and maintainability
replaced ` update ( ) ` with ` invokeLater ( this : : update ) ` in ` CodeDependenciesPanel . java ` to ensure
camel - 16400 : camel - groovy - optimize to reduce object allocation .
use set instead of list to keep track of versionless dependency
[ flink - 20536 ] [ python ] make class and interface accessible from other package
replaced ShadowSharedPreferencesEditor with TestSharedPreferencesEditor and added a new test class TestSharedPreferencesTest to improve test clarity and ensure
removed storage alias retrieval and certificate chain retrieval from HttpsMessenger . java to streamline code and improve certificate chain management
danielwagnerhall : throw a more informative exception if we ca n ' t convert the response to json
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow
add dropresources function for server level ( # 6240 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality by allowing retrieval and checking spatial location calculator configurations
refactor multiple Java classes related to community detection , GSA connected components , GSA page ranking , label propagation , and page ranking to improve
replaced keySet ( ) . isEmpty ( ) with a new isEmpty ( ) method in TreeTrie . java and added corresponding tests in TrieTest
updated foreground and background methods in AttributedStringBuilder . java to use ' r ' , ' g ' , and ' b ' parameters to improve
updated the fingerprint handling logic in PeerSync to conditionally enable fingerprinting based on system property to improve flexibility in fingerprinting behavior based on
changed the access modifier of the moveFunds method from private to public to allow broader access to the method from other classes
refactored event emissions in MongoTemplate and added test cases for PersonWithIdPropertyOfTypeUUID in MongoTemplateTests to improve event
fix serialization of collectionitem and collectioncontainer ( # 1745 )
added null check and closing functionality for the InputStream in TikaCLI . java to ensure proper resource management and prevent potential memory leaks
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling specificity
removed unnecessary whitespace in the import statement to improve code readability and maintain consistency
[ fix ] fix checkstyle violation in instructorfeedbackcopyactiontest
fix checkstyle issue in io / jobservice / portablerunner / portablerunnertest . java
updated DisplayTextVirtualDatapoint , HmDatapoint , HmDatapoint , HomDatapoint , HomDatapoint , and
updated log messages for clarity and refactored lock acquisition and acquisition methods in PostgreSQLReadWriteAdvisoryLocksTest . java
remove duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to improve code clarity and maintainability
danielwagnerhall : fix testgettextcontent for simon
refactor Logger to use ThreadLocal for logger management to improve thread - safety and management of logger instances
added @ VisibleForTesting annotation to the convertToCompilationUnit method and replaced JMockit with MockitoJUnitRunner in FunctionInitializerTest to enhance
added a method to handle boxed types and updated type checking logic in the Types and Infer classes to improve type handling and ensure correct type
initialize mFocusedTaskViewId to INVALID _ TASK _ ID and update orientation state based on newFocusedTaskView to ensure proper handling of task
updated the method to retrieve regions by table name directly instead of using a stream to simplify the code and improve readability by eliminating unnecessary
added logic to preserve and clean up original repository references in TransactionExecutor . java to ensure proper handling of contract changes and maintain data integrity
replace hardcoded TOKEN _ ISSUE _ FEE with dynamic properties retrieval in TokenIssueProcessor . java and adjust timestamp conversion in Program .
refactor cache management in RealisticRenderStrategy to use URI - based texture management to improve texture loading efficiency and resource management by using URI -
refactor raster creation and composition logic in Blit . java and add a new Bug7049339 . java file to improve code
added unselected style handling and updated string width calculations in multiple classes to improve text alignment and ensure consistent text styling across components
updated ArrayList initializations to specify initial capacity to optimize memory allocation based on available space
removed the ' flags ' parameter from several methods in ShadowApplicationPackageManager and added a new constant FLAG _ PRIMARY in ShadowUserManager to simplify
refactor PingRequestHandler to improve code structure to enhance maintainability and readability of the code
add ` mp4 : / / sample _ with _ increasing _ timestamps _ uri _ string ` to ` android : / / media / mp
[ tradfri ] do n ' t log warn for old firmware
refactor AjaxElementLocator class to improve code structure to enhance maintainability and readability of the code
updated condition in DefaultLayout to include " table - cell " in addition to " block " to ensure proper handling of table - cell display in
refactor JsonDecoder to improve array level handling and add a new test for reordering fields in TestJsonDecoder to enhance code clarity and
updated the removal listener to use ` blockCacheLocation ` instead of ` notification . getKey ( ) ` and ` blockCacheLocation ` to improve
temporarily disable savepointtestbase test until it ' s fix
( chore ) camel - jbang : add miss @ test annotation to test
changed fields in ContextRegisterListener from non - final to final to enforce immutability for better thread safety and performance
refactor ObjectHashSet to initialize iterator only if it is null to improve efficiency by avoiding unnecessary instantiation of the iterator
added batch size validation in SparkReduceRecordHandler and ReduceRecordSource to ensure batch processing does not exceed defined limits
replaced ` MODE _ WORLD _ READABLE ` and ` MODE _ WORLD _ WRITEABLE ` with ` MODE _ PRIVATE ` in
updated logging message to clarify that close ( ) is called after abort ( ) and added exception handling for database connection destruction to
updated animation state from ` getState ( ) ` to ` mState ` and added importance for accessibility in ` Workspace . java ` to
changed log level from warn to debug for malformed edits in ProtobufLogReader . java to reduce log verbosity and improve performance during debugging
updated scope assignment in UaaTokenServices and added a new test case in UaaTokenServicesTests to ensure scope length does not exceed 1000
updated import statements and modified logger declaration in ` AvailableJDBCDrivers ` , ` TestAvailablePlugins ` , and ` AvailableJDBCDriversTest ` classes
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . api
( chore ) camel - jms : cleanup unused jdbctableservice
added padding getter methods in CellLayout and modified bitmap creation in Launcher to improve padding management for better layout flexibility
refactor cands assignment logic in LineReaderImpl . java to handle empty string scenarios to improve robustness by avoiding unnecessary stream creation when
updated ` SamlMetadataUIParserAction ` to use ` Action ` instead of ` SamlMetadataUIParserAction ` and added null check
added a method to check the number of open LDAP processes to ensure that the LDAP port is available before proceeding with operations
log4j2 - 1343 fix checkstyle issue in loggercontext
updated URL filtering logic and improved logging levels in Fetcher . java and HTMLMetaProcessor . java to enhance URL handling and provide clearer
updated SolrQuery and SolrQuery parameters in TestSpellCheckResponse . java to use a specific name for the " samsang " spell
refactor terminal initialization to use Karaf Console API based on parameter count to ensure compatibility with both old and new Karaf Console API
bugfix : meshhelper . getverticescolors ( ) return mcol instead of mloopcol when blender be not compatible
added exclusion of timestamped reports directory and modified file copying logic to exclude timestamped reports to improve reporting accuracy by excluding non - timestamped reports
datavalidatortest : use parameterizedtest instead of junit 4 test
pdfbox - 4892 : remove unused private method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure proper error handling when binding form errors occur
removed debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added a boolean flag ` allowExtractingPrivateFields ` to ` FieldSupport ` and modified the ` readField ` method to accept it to
added a replacement for the device name in WebDataHandler . java to ensure that the device name is correctly formatted for processing
replaced direct instantiation of Lookup with a null check for lookupConstructor to improve flexibility in creating Lookup instances based on Java 8 types
updated method names from ` weights ` to ` weightsByDouble ` in ` ZParams ` and ` SortedSetCommandsTest ` to improve clarity
added Database parameter to the writeCustomHTML method across multiple writer classes to enhance functionality by associating custom HTML writing with specific database context
updated BTreeMap . java to improve key deserialization and added assertion for null values to enhance code robustness and prevent potential NullPointerExceptions
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw specific exceptions instead of a generic Exception to improve
make profiler heap zerofile configurable ( netbeans - 1181 )
updated error handling and message sending in ChangeSet and Main classes to improve clarity and consistency in message sending
updated the buffer size from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java and added a generic record in H
added import statements for ChunkListener , ItemProcessListener , ItemReadListener , and ItemWriteListener in multiple Java files to enhance batch processing capabilities
refactor code for improved readability and structure in AbstractProviderModule . java to enhance maintainability and clarity of the code
updated string concatenation in ` SearchFiles . java ` and modified method calls in ` SortedSetDocValuesFacetCounts . java ` and ` MessageFiles
refactor Test7005594 . java for improved readability to enhance maintainability and facilitate easier debugging
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code structure to enhance maintainability and readability of the code
server : fix npe in listvirtualmachines api when vm id be null
fix gamepad crosshair resize ; switched trigger detection from digital to analog test .
updated method names and parameters in IterableSubject and IterableTest classes for clarity and consistency to improve code readability and maintainability by using more
camel - 8709 : fixed the issue of camel - defaulthttpbinding do n ' t filter the name and value if the name be
added assertions to verify the expected results of native queries in ActivityHistorySQLServerStoredProcedureTest to ensure that the database queries return the expected results
added LargeValueFormatter class and updated BarChartActivityMultiDataset to utilize it for value formatting to improve code readability and maintainability
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
removed the @ SuppressWarnings annotation from Platform . java to eliminate unnecessary warnings related to incompatible argument types
tracelineatelanguage : fix typo in tracelinearscan lifetimeanalysisphase
added a TODO Auto - generated method stub in NullAssertionValidator . java to prepare for future auto - generation of method stubs
added support for appending " . buck " to rule keys in DefaultRuleKeyBuilderFactory to enhance rule key generation for Buck build processes
added system profile directory creation and teardown methods in PmsConfiguration , DLNAMediaInfoTest , and SearchRequestHandlerTest classes to ensure
refactor thread factory instantiation to use a dedicated method to improve code readability and maintainability by encapsulating thread creation logic
updated the method for retrieving the number of messages in HttpChannelOverHTTP and HttpReceiverOverHTTP to improve code clarity and maintainability by
added " accept " attribute to the " Image / * " element in ImageFileInputDialog . java to allow users to select an image file
refactor ElasticIndexWriter and TestElasticIndexWriter to utilize PreBuiltTransportClient and Node instead of Headers to improve code clarity and
added detailed information about the witness class and its simple name in ForkController . java to improve debugging and provide clearer insights into the witness
added a new file ` NullPointerAndEmptyArrayTest . java ` to test the behavior of ` CustomURLClassLoader ` with null and empty
updated ` findConfiguredGeneratedSourcePathsUsingDeps ` method and modified ` IjProjectBuckConfig ` and ` AbstractIjProjectConfig
updated UaaStringUtils to include a replacement function for wildcard patterns and modified related tests to enhance wildcard pattern construction flexibility and improve test coverage
added validation for map work aliases and table scan count in Vectorizer . java to ensure that only one alias is processed and improve error handling for
updated Mockito import from ` org . mockito . runners . MockitoJUnitRunner ` to ` org . mockito . Mock
added error handling for setting values in TinyGFirmwareSettings . java to log warnings and handle potential FirmwareSettingsException to improve robust
replaced specific Java imports with a wildcard import and modified the getLangs method to return a Set instead of an array to simplify import statements and
updated import statements and modified assertion logic in LazyTraceScheduledThreadPoolExecutorTests . java to improve clarity and correctness of test assertions
hbase - 20536 add prepare ( ) method to takesnapshothandler ( ) and disabletablesnapshothandler ( )
[ wasm ] add support for ` ` isnull ' ' - > ` ` isnull ' ' - > ` ` isnull '
added a test method to verify the modification of HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the HTTP RPC endpoint behaves
added a volatile boolean variable ` isSuspended ` and modified thread suspension handling in the ` Thread ` class to ensure proper thread state management
replace ` Javadoc . Author ` and ` Javadoc . Since ` with ` Javadoc . Hidden ` and ` Javadoc . See ` and ` Javadoc .
fix npe in camelproxyfactorybean when camelcontextid be null
removed redundant @ Override annotations from multiple security configuration classes to streamline code and improve readability by eliminating unnecessary overrides
added module imports and modified eval statements in Java2TypeScriptAdapter , EnumTests , MyComplexEnum2 , and MyComplexEnumsAccess
update the default language in xssfexporttoxml from w3c to http : / / www . w3c . org /
added content description handling for badged app items in BubbleTextView to ensure accurate notification counts for badged apps
added mouse wheel support in TestMouseWheelScroll . java to enable scrolling functionality based on mouse wheel movement
added closing functionality for PDF documents in VisualTester and introduced a new test for positioning absolute in VisualRegressionTest to ensure proper resource
updated currency pair references from " BTC _ ETH " to " XRB _ BTC " in KucoinAdapters . java and
use string instead of object for location in vacuumcontroller , vacuumframe and vacuumview
simplified the currency conversion logic in BitfinexAdapters . java to improve code readability and maintainability
updated import statements and modified field handling logic in JsonFormat . java to improve code clarity and ensure consistent output of default values based on message
updated JacksonXmlFormatMapper to handle array and enum types correctly to ensure proper serialization of arrays and enums in JSON format
refactor VirtualThread constants and variable names for consistency and clarity to improve code readability and maintainability
refactor DirectoryTaxonomyWriter to use a static NO _ OP _ CACHE instance instead of a new NoOpCache class to improve memory management and
refactor VetoableChangeSupport class to improve code structure to enhance maintainability and readability of the code
update calculation of height in BrowserContentPane . java to correctly account for the height adjustment
pdfbox - 4892 : remove the ` ` throw invalidpasswordexception ' ' from the method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
ggb - 1181 show ` ` close ' ' instead of ` ` open help ' ' and ` ` close ' ' when menu
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread . sleep ` with ` ThreadHelper . waitUntil ` in ` BackendInitializerHelper ` and ` TerminalClient ` , and
updated version checking logic in SwingStartup . java to utilize ReleaseStatus for exception handling to improve accuracy of release status verification during startup
add databasemigrationconfig . includegeneratedfilecomment to allow comment to be serialize to xml .
updated usage and usage descriptions to use " | * " instead of " < player > " in multiple files to improve clarity and consistency in
deleted ` BadHdfsThreadsFilter . java ` and ` BadZookeeperThreadsFilter . java ` files to remove unused classes to streamline
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in method naming conventions
added a condition to check for PARALLEL _ CLASSES in TestNGContentHandler to ensure proper handling of parallel test scenarios
updated logic for enabling acting master and improved null check for oldAddr in RouteInfoManager . java to enhance code clarity and
refactor : remove static import of enums in ctmethodimpl . java
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across different versions
rename DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve clarity and consistency in naming conventions
updated ShibbolethCompatiblePersistentIdGenerator to use a constant separator for SHA - base64 hashing to enhance flexibility in hashing by allowing
updated parameter handling in ` Parameters . java ` and modified the condition in ` TestAction . java ` to improve null safety and clarify
added a new class named Person in the org . apache . maven . it0074 package to provide a structure for representing a person in the
do n ' t pass local _ address to gossipsiper . start ( ) . patch by jbellis
convert timeStr to uppercase before checking its index in AbstractClient . java to ensure consistency in time string comparison across the application
added assertions to verify time column , time unit , and total documents in SegmentMetadataImplTest . java and updated SegmentMetadataImpl . java to
updated the color import from AWT to OpenRocket ' s Color and modified the foreground color setting in the SimulationPlotPanel to improve
added a call to disconnectEmitters . onNext ( a new Object ( ) ) in NettyStreamingService . java to ensure proper handling of
changed the type of scopeHierarchy from String to Class < ? extends Annotation > to improve type safety by using Class < ? extends Annotation > instead
danielwagnerhall : add a test to make it easy to click an element with double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
jbpm - 5640 : add a system property to configure the default jndi location for transaction synchronization registry
changed the visibility of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the code by eliminating unnecessary functionality
replaced variable ` enabledCiphers ` with ` result ` for clarity to improve code readability and maintainability by using a more d
[ beam - 11930 ] fix timestamp conversion in bigqueryutils ( # 11931 )
replaced manual null checks with a utility method ` requireNonNull ` in ` Identifiers . java ` and ` DatabaseConnector . java ` to improve
refactor variable name in valuesresolver for clarity ( # 2321 )
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that the index is within the valid range of the table
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure that the scroll selection is visible
[ java ] unnecessarylocalbeforreturn - fix false positive with method
replaced the variable ` scriptEngineManager ` with a direct instantiation of ` scriptEngine ` and removed null check for ` scriptEngine ` to
updated comparisons in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest to reflect new correlation values to ensure accuracy in correlation calculations and improve
fix npe in datatracker when sstables be null
updated the relativize method to include an additional parameter and added null checks for path parameters to improve path relativization logic and ensure robust
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator . java and modified value formatting in DataType . java to ensure proper handling of
replace file deletion with filtering for the current writer head file in DeadLetterQueueWriterTest . java to ensure only files with " . tmp "
change hex string conversion from hexadecimal to JSON hex in TronJsonRpcImpl . java to ensure proper representation of byte array data in JSON -
rename ErrorHandlerController to Error403Controller and create new Error404Controller and Error403Controller files to improve organization and clarity of error
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in UnixTerminal . java and WindowsTerminal . java to
[ netbeans - 5241 ] add support for new array type on java 11 +
refactor connection removal logic in ConnectionPool . java to improve readability and maintainability of the code
updated method and variable names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in ` LPPEAuthenticationHandler
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve clarity of error messages for better debugging
updated thread join durations and added exception handling in LargeStreamletTest . java to improve test reliability by allowing more time for reader and
updated the way extra pages are handled in HomeFragment to dynamically increment extra pages based on user preferences
added a try - catch block to handle potential exceptions when creating a bitmap image to improve robustness by preventing application crashes due to unsupported
added @ SuppressSubnodes annotation and modified return statements in BaseParser . java and ImplicitActionsConverter . java to ensure proper handling of node sup
refactor FDFParser initialization to use try - with - resources for better resource management to ensure proper closure of RandomAccessRead resources to prevent
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for testing purposes
added a command to execute the " keyevent 82 " command in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation
added JSON serialization of the filename to the URL in FileDumper . java to facilitate the saving and loading of the filename to a
make resetresultsnotified flag thread - safe
replaced texture loading methods with image loading methods in TextureHelper . java to streamline image loading process and improve code clarity
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests from " application : " to "
updated test values for aNewIsbnRandomizer from " 9781797745008 " to " 978179784500
updated notification sound setting to include a ringtone string to enhance flexibility by allowing users to specify a ringtone for notification settings
added a method to report loop count in RootNode . java to enable tracking of loop counts for better debugging and monitoring
added version finalization logic for standard repositories in FinalizeUpgradeAction . java and updated merge method in ClusterImpl . java to ensure proper cleanup of
server : fix npe in listbyregionidandstatescommand when listbyregionidandstatescommand be pass in
removed redundant call to streamManager . open in ItemOrientedStep . java to streamline code by eliminating redundancy
added a new file ` CountedLoopProblem . java ` that generates a string and checks its hash code to demonstrate the behavior
[ gr - 38686 ] do n ' t pass metaspace argument to native method .
make pendingfailedspeculationoffset in graalvmconfig configurable .
updated KafkaStreamsTracing and ITKafkaStreamsTracing classes to replace TransformerSupplier with ValueTransformerWithKeySupplier to enhance tracing capabilities by using a
update feedbackconstantssumquestiondetails and feedbacksessionslogictest to reflect recent change
removed the call to ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` from ` BaseApplication . java ` to streamline the code
added thread management and stack dump functionality in CloseRace . java to improve debugging and ensure at least one child thread is terminated before proceeding
updated the return statement to use ` intValue ( ) ` instead of ` val ` in ` IntPointField . java ` and added assertions in
change ` arcSize ` from ` int ` to ` double ` for ` arcSizeFraction ` and update calculations accordingly to improve flexibility in
updated image width settings from 768 to 640 in AddAndScaleMultiImage . java and ratioWidth in ImageBorderCuttingWizard . java to optimize image scaling for better performance and resource
rename ` setMinifySqlEnabled ` to ` shrinkWhitespacesInSql ` in ` Configuration ` and ` SqlSourceBuilder ` to improve cl
refactor ` waitForStateTransitionToEnd ` and ` waitForStateTransitionToEnd ` methods in ` WorkProfileTest ` and ` AbstractLauncher
added CasCoreConfiguration and CasCoreHttpConfiguration classes to multiple test files to ensure compatibility with the latest CAS configuration standards
refactor byte reading logic in Volume . java to use DataIO for improved efficiency to enhance performance by reducing the number of read operations
( chore ) camel - http : fix potential npe in camel - http
refactor classpath creation to use builder pattern to improve readability and maintainability of the code
added support for audio and voice management in the smarthome - automation module
added methods to retrieve and set the layer manager in AnimComposer and modified event handling in AnimEvent to ensure proper management of layers and
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks and improved exception handling in MapRecordProcessor and TezProcessor to enhance robustness and provide clearer error logging
refactor ` CylinderRegion ` to use ` Vector2D ` instead of ` Vector ` for center calculations to improve clarity and
replaced manual exception handling with JUnit ' s ExpectedException rule in TestBadUseCases . java to improve readability and maintainability of
modify the handling of subqueries in QueryExecutorImpl . java and add a new test for multi - execution in StatementTest . java to improve
visualvm - security : allow customization of security environment by default
added a new parameter ` rctag = android % 20app% 20edit ` to the ` @ GET ` method in ` ReviewInterface
updated test cases in Test . java to improve test coverage and reliability
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader . java ` to ensure proper handling of section definitions in the
added distance calculation and warning logging for large jump detection in GpsLoggingService . java to improve accuracy of GPS logging for large jump detections
removed redundant print statements from TableCellLayout , TableLayout , and TableLayout2 classes to improve code clarity and reduce unnecessary logging
doc : generate sample code in the java microgenerator ( # 241 )
refactor InsightFilter to use WeakReference for rootNameFn and sourceFilterFn to improve memory management and prevent potential memory leaks
replace binary search with direct addition in AllAppsList . java to simplify code and improve performance by eliminating unnecessary binary search
replaced ThemedPreferenceActivity with PreferenceActivity in SettingsActivity and removed ThemedPreferenceActivity from SettingsActivity to streamline theme management
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
removed unnecessary whitespace in assertRootArcs ( ) method to improve code readability and maintain consistency
added an assertion to check if the security policy does not exist or is a file to ensure that the security policy is valid and does not contain
camel - 14263 : olingo2 - add olingo2configuration . getconfiguration ( ) so olingo2component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution to complete before
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception details
added action to publish xmpp image via http
camel - 16400 : camel - netty - producer should use channel . setattachment ( ) instead of channel . get ( )
updated URL _ TEMPLATE regex to allow hyphens in host names and added tests for invalid host names in BalancedClickhouseDataSourceTest to improve
removed the system property " org . apache . jasper . compiler . disablejsr199 " from FragmentActivator . java to enable
added support for null values in CSVRecordReader and CSVRecordReaderConfig to enable handling of null values in CSV output
added @ LiquibaseService ( skip = true ) annotation to multiple database connection classes to skip Liquibase operations that are not
updated references from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to ensure compatibility with Java source
fix ( trigger ) : change event . topics to include command / state / item / command / item
replace ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error handling
deprecated the " zkCredientialsProvider " case and added a deprecation warning for " zkCredentialsProvider " in SolrXmlConfig . java
fix mana tablet damage not show in creative
added a method to set the identifier collection in the P25P2DecoderState class to ensure that the current call event ' s identifier collection
removed unused imports of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter from TestRandomChains . java to clean up the code
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
updated assertion in TypeDefinitionRegistry to include the definition parameter to improve clarity of error messages when the definition cannot be null
removed the visibility of the shareWithMeIcon view in LocalFileListAdapter to improve user interface by hiding the share - with - me icon
updated the stylesheet reference from HTTP to HTTPS in multiple filter classes to enhance security by using a secure connection for the signin stylesheet
updated imports and method parameters in RouterFilter , RouterServerListFilter , and RouterDistributorTest to use @ NotNull annotation and Collections . emptyMap
updated assertion message in TestIndexWriterMergePolicy . java to include additional context to improve debugging and traceability of assertion failures
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in new development
added a null check for the context in the CrawlerSessionManagerValve and modified the createRequestExpectations method to include a contextPath parameter to ensure
modified the ` getJspApplicationContext ` method to use ` AccessController . doPrivileged ` for security checks to enhance security by ensuring the application context is accessed with
refactor RocketComponentConfig to use minL and maxL for calculating length and axial offset calculations to improve accuracy of component length calculations
replaced the import of ` Singleton ` with ` Scopes . SINGLETON ` in ` OpenIDAuthenticationProviderModule . java ` to ensure consistent
added a call to ` thenCompose ` for updating child links in ` FileWrapper . java ` to enhance functionality by allowing updates to child links
refactor method signatures and parameters in SpringCloudPlugin . java for improved clarity and consistency to enhance code readability and maintainability by
increased the delay time in the publishWithDelay calls from 100ms to 500ms to allow more time for the publish operation to complete
add a new boolean attribute to control the behavior of the ` mShiftCodesAlways ` variable to ensure that the ` mShiftCodesAlways `
updated heartbeat monitor logic to check for active cluster coordinator and leader election status to improve accuracy in determining if a node is leader or not based on
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer . java to use isReference ( ) instead of getName ( ) to improve clarity and accuracy
updated the ` newInstance ` method signatures across multiple classes to use a single ` noop ` parameter instead of ` AbstractCommandOptions ` to simplify the
added a sleep delay to the catch block in TestListenTCPRecord . java to improve responsiveness by allowing time for I / O operations
updated the handling of method call arguments in PatchExtensionMethod . java to ensure original arguments are preserved during method call execution
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing ` RawNative
int - 1599 add support for ' apply - sequence ' and ' ignore - send - failures ' attribute in router configuration
added support for X.509 certificate publishing in the ClientKeyPublisherMapping and JwkViewResolver classes to enable publishing of X.509 certificates
updated the logic for setting the ` subReader ` variable in ` QueryComponent . java ` to ensure that ` readers [ 0 ] ` is
replaced custom ValueSourceParser with Double2Parser for " max " and " min " in ValueSourceParser to enhance parsing functionality for document
simplified return statement in the Container class to improve code readability and maintainability
removed unused variables from Highlighter , SpanGradientFormatter , and TokenSources classes , and modified the next ( ) method signature in TokenSources to
server : add uuid to the db insert statement ( # 3321 )
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ObjectProvider for flowBuilderServices to enhance flexibility in
refactor WriteJdbcPTest . java to improve connection management and naming conventions to enhance code readability and maintainability while ensuring proper connection
removed conditional check for " editor . laf " before setting its default look and feel in DefaultPlatform . java to simplify the code by
updated method calls from ` getStateEntity ( ) ` and ` getDesiredStateEntity ( ) ` to ` stateEntity ` and ` desired
simplified margin calculations in FloatingTaskView . java to improve readability and maintainability of margin handling logic
added a conditional check in RootFolder . java and updated the look frame status line in NavigationShareTab . java to improve control flow and provide
do n ' t increment thread number in cpuflescallgraphbuilder . getthreadinfo ( ) , since it do n ' t
ggb - 1343 fix for ggb - 1344 and ggb - 1345
added NetworkAddressChangeListener implementation to HomekitImpl and updated log messages for clarity to enhance network address management and improve log output formatting
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of lease to improve
replaced ` arg . prefixHeader ` with ` arg . linkStyle ` in ` CxxLibraryDescription . java ` to initialize ` arg
added a null check for the message in ExceptionHandlerRegistryFactory and introduced a new test for handling fatal IOException with a null message to ensure robust
replaced ` nextID ` with ` nextID ` and modified synchronization in ` DirectoryTaxonomyWriter . java ` to improve thread safety and ensure
resolve intermittent test failure on slow ci server
added HasSourcePath interface and implemented it in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes
replaced StringBuffer usage with direct string concatenation in IllegalArgumentException to simplify error handling and improve code readability
added a custom index field name to the facet fields in OrdinalMappingAtomicReader and modified test cases in TestOrdinalMappingAtomicReader to
updated the ` toEpochMilli ` method to handle negative seconds and negative nanos correctly to improve accuracy of milliseconds returned by ` toEpochMilli `
changed the method call from ` getBufferType ( ) ` to ` getBufferType ( ) . name ( ) ` in OGLESShader
added functionality to manage block update scripts in CopyPaste . java to improve user experience by enabling or disabling specific scripts based on app
added a new file ` TestCMoveLimitType . java ` with methods for testing character move limits in ` CharBuffer ` to facil
refactor audio packet handling and reset temporal attributes in ChannelState and enhance recording capabilities in AudioPacketWaveRecorder to improve code clarity and ensure
camel - 16400 : camel - sql - parser - add scaletoken to the list of expect token
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor code to encapsulate console creation logic into a new method ` makeCustomConsole ` to improve code readability and maintainability by redu
replaced the token validation logic in ` InputStreamBinder . java ` with a new method ` validateToken ` for improved token validation to enhance
added EOFException handling in Http11InputBuffer . java to ensure proper error management when reading non - positive input
added unit test for defaultgroupprovider . deletemember ( ) .
( chore ) camel - ftp : remove unnecessary new object [ ]
deleted the V2ReplicationProtocol . java file to remove unused replication protocol implementation to streamline the codebase
replaced references to ` BuildRule ` with ` SourcePath ` in multiple Java library classes to improve clarity and consistency in handling source paths
added new classes ` ConstructorArgsDemo ` and ` StrictDemo ` , and modified ` StupidFinal ` to ` StupidFinal
refactor directtemplatefeaturecollectionfactory to use threadlocal instead of linkedlist
fix writeresponsehandler assertion to account for 2 * replicationfactor
added null check for indexNumber in ItemRowAdapter . java to prevent potential NullPointerException when accessing getIndexNumber ( )
fix typo in ' showanchestors ' - > ' showdescendants '
added a check to return early if the application ' s width is less than 12 to optimize performance by avoiding unnecessary processing when the application is
updated the equality check in ChangeLogParameters from ` = = ` to ` . equals ( ) ` and added a new test for parameter values
changed the logger variable from static to an instance variable in LogFactory . java to ensure that the loggers map cannot be reassigned after initialization
modify return statement to call getBasePlot method with a boolean parameter to enhance functionality by providing a default behavior for base plots
updated the createUploadDir method to include an initialCreation parameter to control the logging behavior when the upload directory does not exist or has been deleted
added a boolean parameter ` sendStatus200 ` to several constructors and methods to control HTTP status responses to enhance flexibility in handling HTTP status responses
added a condition to check if the comment length is greater than zero in the multi - line comment check to ensure that comments are only processed when
added file type management functionality in BuckModule . java to ensure proper cleanup of file associations between Buck and UnknownFileType instances
simplified import statements and changed method return types from ToLong to ToInt in ComposedUtil . java to improve code readability and
8015362 : [ testbug ] add support for rtm on unsupported cpu or os version
reformatted code for consistency and readability in AccountsActivityTest . java to improve code maintainability and adhere to coding standards
refactor Player class to improve code structure to enhance maintainability and readability of the code
added a static method to mock the import of ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate testing
fix off - by - one error when check for guest to host reflective call .
set ` systemContext ` to ` null ` in ` AndroidTestEnvironment ` and implement reflection - based methods in ` ShadowFontsContract `
added Joda - Time library support and modified time calculations in TimeGranularity . java and PinotDataSourceMaxTime . java to improve time
updated control flow handling logic and improved null safety in ControlFlow . java and Guard . java to enhance robustness and prevent potential NullPointerExceptions
updated array equality checks to provide clearer error messages when arrays do not have the same size to improve clarity of assertion failure messages for better
fix checkstyle issue in block / item / windowclicklogic . java
update index calculation in MeshBuilder . java to correct bitwise operation to ensure accurate indexing of mesh indices
nifi - 1640 : remove unused variable in standardprocessscheduler
added support for processing processor names in KotlincToJarStepFactory and introduced a test annotation in KotlinLibraryIntegrationTest to
updated RESCROLL _ DELAY from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION and refact
added shortcut permission checks and refresh logic in LauncherModel and DeepShortcutManager classes to ensure shortcuts are refreshed only when the app has the correct
added case handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance user experience by allowing navigation through history search
added null check for core names in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to enhance robustness of core reloading
added marker selection functionality in NearbyMapFragment to manage the visibility of the bottom sheet when a marker is selected
added a catch block to handle Throwable in FileSyncAdapter . java to improve error handling by providing stack trace information for exceptions
refactor testMemoryAwareness to use OutputAnalyzer for better error handling to improve robustness of tests by catching runtime exceptions during execution
updated method calls to use ` UnitOfWork . run ( sessionFactory , ... ) ` instead of ` UnitOfWork . run ( ) ` for
log warn if defaultdrmsessionmanager be use on wrong thread
updated packageType and resourceCompressionMode to use Locale . US in AndroidBinaryDescription . java and added a new method in AndroidBinaryBuilder .
updated XML MIME type from " text / xml " to " application / xml " in multiple test files to ensure correct MIME type is used for
updated variable assignment syntax in Args . java to improve code readability and maintain consistency in naming conventions
replace " sleep 5 ; exit 1 " with " exit 1 " in HostPortWaitStrategyTest . java to simplify test execution by removing unnecessary
updated mathematical calculations in HiveExpandDistinctAggregatesRule . java to use LongMath instead of IntMath to improve precision in grouping ID
added multiple checks for headless environments in mmm Toolkit . java and ppp Toolkit . java to ensure compatibility with headless environments
added a condition to check if the current recipe matches the furnace before attempting to smelt it to ensure that only valid furnace
planner - 544 : provide more information about move thread count in log message
fix issue with rev - include do n ' t select resource with same sp name ( # 4352 )
added a new test file ` Issue582Test . java ` to implement a test for sorting and sorting features in a MapDB database to
[ native ] add e2e test for overflow and division
refactor LoadingCache class implementation to improve performance and maintainability of the caching mechanism
add a new rule " AvoidNonConstructorMethodsWithClassName " to NamingRulesTest . java to enhance rule functionality for class naming conventions
danielwagnerhall : handle staleelementreferenceexception in expectedconditions . isselected ( )
refactor ` ViewExistsPrecondition ` to use ` getGenerator ` for view existence checks to improve error handling for view existence checks
refactor DOMUtil class methods for improved performance to enhance efficiency and reduce memory usage during XML processing
added translation calculations and logging functionality in TaskViewUtils and Utilities classes to enhance animation responsiveness and improve debugging capabilities
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a ` walk ` method to ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to handle document frequency comparisons to improve
added SolrQueryRequest parameter to the create methods across multiple factory classes to enhance request handling capabilities for document augmenters
added triggers for content , update , and announcement validation in SingleTableMySQLTriggerTest . java to ensure proper handling of null values in database queries
refactor comparator handling in FieldValueHitQueue to use a dedicated setComparator method to improve code clarity and maintainability by encapsulating comparator
updated SQL query strings to include quotes around column names in PhoenixQueryBuilderTest . java to ensure compatibility with SQL Server queries that may
added Spark import and called Spark . awaitInitialization ( ) in the init ( ) method to ensure proper initialization before proceeding with tests
added methods to retrieve and save total storage pool and fee in DynamicPropertiesStore . java to enhance functionality for managing storage properties in the application
added support for reading assets from a source directory and improved error handling for resource retrieval in development mode
updated the method to retrieve the map mark key using a helper function to improve code readability and maintainability by using a dedicated method for key
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance parsing of default values based on
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` Main ` , and ` JavacProcessingEnvironment ` classes ,
refactor file path handling in JxBrowserManager and add exception handling in FileUtils to improve code clarity and handle potential exceptions during URL loading
added a check for the " AppVersion " property in IOSImplementation . java and updated equality checks for image file formats in IOSImplementation
replaced ` getBridgeUID ( ) . getId ( ) ` with ` getUID ( ) ` in the ` SomfyT
disable flaky test on github
replaced the SSL context initialization with static properties for SSL configurations to improve flexibility and configurability of the test environment
add warn to dynatraceexporterv2 when the underlying backing object expire
removed a session ID from the sessionIdToSessionInfo map to streamline session management by eliminating unnecessary sessions
added hostname setting for alerts in HeartBeatHandler and improved logging format in AlertReceivedListener to enhance alert management and provide clearer
simplified the buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie / kmodule
added unit tests for seeking functionality in ShadowMediaPlayerTest . java and modified the seekTo method signature in ShadowMediaPlayer . java to
rename method ` createTask ` to ` createThrowingTask ` across multiple classes to improve clarity and consistency in naming conventions
added a conditional border to the CloseButtonTabbedPane for Aqua LAF mode to improve the visual appearance of the close button
updated HTTP method and connection timeout settings in TSPTimeStampService . java and refactored import statements in TestSignatureInfo . java to improve
updated the XStreamUtils class to include new methods for creating XStream instances with customizable security policies to enhance flexibility in XStream creation
added error logging for non - generic diamond types in Attr . java and created a new class DiamondRaw . java to improve
[ hotfix ] [ table - planner ] fix checkstyle violation in reloptutil
updated validation conditions for setting IDs and values in Http2Settings . java to ensure that setting IDs and values are both unsigned and unsigned 32 -
deleted the file MapInterfaceTest . java and Issue664Test . java to remove obsolete test cases that are no longer relevant
krb5 : remove dead code from sessionspooltest . testdisposedsession
added start and end methods to the jsonWriter for the root object in GeoJsonWMSBuilder . java to ensure proper serialization of the root
updated the method for setting the selected index in PopupMenuButton to use intValue ( ) instead of a hardcoded value to improve code cl
added a check to determine if the application can currently manage unstashing to ensure that the system behaves correctly based on the user ' s
camel - 16462 : camel - core - dump route with customid should not be dump to xml if customid be not specify in
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting for expected events to enhance flexibility in handling event mismatches based
added a new file ` HeaderFixer . java ` to process header files and output them to facilitate the processing and output of
added functionality to send a broadcast for first loading completion in the launcher to enhance user experience by notifying users of the first loading process
deleted the file SuperJumperAndroid . java from the project to the functionality was no longer needed in the project
updated the return value from ` true ` to ` table . isDistributed ( ) ` in ` SystemTableScan . java ` and re
removed the KeyValuesProviderAware interface and its methods from ObservationConventionAware to streamline the codebase by eliminating unused interfaces
make sure we do n ' t remove remapped item from registry if they do n ' t have them
update return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use a long type to ensure correct calculation of the base value
added caching mechanism for data format retrieval in HSSFCellStyle . java to optimize performance by reducing redundant string retrieval
updated the query in RemoteAuthenticationEndpointTests to filter users by username to ensure that only users with the same username are processed in the remote authentication
replaced the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to
updated logging mechanism in Launcher to use container info and workspace properties to improve logging accuracy by associating container information with the current page
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
delete deadlocktest . java that be no longer need
add more debug info for resource change , content provider fix for change during ` ` move / rename class ' ' refactoring
added a menu item to open the server in the browser and modified its action handling to improve user experience by allowing users to open URLs in the
added a new error message for output specifications that cannot be present multiple times to improve error handling and provide clearer guidance on semantic errors related
added an entry listener and a predicate parameter to the addEntryListener method in BasicTest . java to ensure that the addEntryListener method handles
fix coordinatearray . reverse ( ) to return early if the input array be empty
updated the method call from ` setOpen ( ! isOpen ( ) ) ` to ` setOpen ( ! isOpen ( ) ) ` to ensure
added a new variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper initialization of the
replaced conditional enterOverviewMode ( ) with showOverviewMode ( true ) to simplify overview mode display logic
added a line to set the destination of the message dispatch in NetworkRouteTest . java to ensure that the message dispatches the correct destination for
change default return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of
fix checkstyle issue in util / math / biginteger / nestedarithmetictest . java ( unused variable )
updated HttpClientRequestImpl and HttpTest to use new buffer handling methods to improve buffer management and enhance testing reliability
updated log level and artifact replacement logic in GetMavenDependenciesTask . java to improve logging clarity and ensure correct artifact formatting
pdfbox - 2852 : use getcosdictionary instead of getdictionaryobject , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to streamline code and improve readability
make field visibility predicate environment aware of the query type
added solidityJsonRpcHttpPort and solidityNodeHttpJsonRpcEnable parameters to enable dynamic configuration of JSON - RPC server port and enable
added a type check before removing the drop target in the drag - and - drop action to prevent potential ClassCastException when removing the drop target
refactor stub jar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability
added new feature descriptions for Setup wizard , Probe Module , and Workflow helper in StartPageTopComponent . java to improve clarity and usability
move meteredflusher . schedulewithfixeddelay out of cassandra daemon . patch by jbellis
simplified the check for availability in OnlineTestCase . java to improve code readability and maintainability
change returnattributes . none to returnattributes . all _ user in ldapusergraphicalauthenticationrepository
modified the handling of ` onIdleTimeout ` and ` onWriteFailure ` in ` HttpChannelState . java ` , and added failure listener
updated CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to improve responsiveness and prevent blocking operations
updated TABLE _ HEADER _ SEPARATOR regex and modified header matching logic in TableBlockParser . java , and added new test cases in TablesTest .
change the return value from 32.0 f to 31.5 f in the Camera class to improve the accuracy of the camera ' s rendering

updated the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to improve security by using a stronger
updated error message in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include the enablePassingNulls parameter to ensure clarity in error messages
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable test due to race condition
updated PinotFS initialization and registration logic in SegmentGenerationAndPushTaskExecutor . java to ensure proper initialization and registration of PinotFS instances
added locale - specific date formatting logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting for non - English locales
added MetalLookAndFeel to the UIManager to enhance the visual appearance of the application
refactor Bot class to use synchronized for message sending and ping task management to improve thread safety and ensure proper shutdown of the executor service
updated error handling in GlobalErrorHandler . java to use throwable instead of throwable . getMessage ( ) to improve error reporting by providing the full throwable context
renamed parameters in ModuleTable and PackageTable classes from ' module ' to ' from ' to improve clarity and consistency in naming conventions
changed exception handling from ` Exception ` to ` CmdLineException ` and added logging for ` Exception ` to improve error handling by logging specific exceptions
replaced ` super . equals ( ) ` with ` isEqualTo ( ) ` and marked the ` hashCode ( ) ` method as deprecated to
updated variable types from ` Boolean ` to ` boolean ` and adjusted popup menu positions in ` CustomPlaybackOverlayFragment . java ` and ` Image
updated zoom level minimum and maximum values for map zoom controls in BasicMapViewer . java to improve user interface responsiveness by reducing zoom
refactor user and group retrieval logic in DrillRoot . java to utilize ImpersonationUtil for retrieving process user and group names to
replaced ` AccessController . checkPermission ( ) ` with ` sm . checkPermission ( ) ` in UnixFileSystemProvider . java and WindowsFileSystemProvider .
added argument extraction functionality to the DelegatedClientAuthenticationAction class to enhance service resolution flexibility by allowing custom argument extraction
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure that the
fix memory leak in tilesizechanger . destroy ( )
removed redundant calls to ` addInfoRow ` and ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment . java ` to streamline
refactor cleanEntriesForFeedsWithoutSubscriptions ( ) and cleanFeedsWithoutSubscriptions ( ) methods for improved clarity and functionality to
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with direct references to ` auth ` in ` ImmutableAssertionTests . java
nifi - 10663 : use temp folder instead of fileutils to delete file on teardown
make sure conic - fivepoints work with non - zero input
reformatted code for consistency in RandomAccessReader . java to improve readability and maintainability of the code
added @ SuppressWarnings ( " unchecked " ) annotations in mmm Fields . java and mmm MockitoBeforeTestNGMethod . java to suppress
refactor ` createFromImage ` method to ` imageToArray ` and add new methods for handling multiple images in ` CImage ` to improve code
changed the type of the comparator from WritableByteArrayComparable to ByteArrayComparable in MapRDBFilterBuilder . java to align with the updated
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to clarify the purpose of
replaced manual null checks with utility methods from java . util . Objects to improve code readability and reduce boilerplate code
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and added nullable annotations to improve clarity and
added verification for default view properties in NinjaDefaultTest . java to ensure that the application correctly handles various HTML error and request scenarios
renamed methods and variables related to all apps width and height in DeviceProfile and InvariantDeviceProfile classes to improve clarity and functionality of
updated padding and list view position offsets in DetailFragment and ListFragment classes to improve layout responsiveness and adjust list view positioning based on
updated exception handling to catch both KeeperException and InterruptedException in ZkStateReader . java to ensure proper handling of thread interruptions and
added null checks for field values in HttpFields . java and introduced a new test for empty headers in RequestTest . java to ensure proper handling
fixed npe in listvirtualmachines api when staticnat be not support in the network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added functionality to remove extra empty screens from the workspace to improve user experience by eliminating unnecessary empty screens
added a fixedWidth flag and modified glyph positioning logic in BitmapFont . java to improve flexibility in glyph positioning based on its fixed
removed the boolean parameter from the createFragment method and refactored related code to simplify the method signature and improve code readability
added preEvent , preTransition , postTransition , and stateMachineError methods to AbstractStateMachineFactory . java to enhance state machine interception
refactor ConfigDescriptionProvider to improve configuration handling to enhance code readability and maintainability
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase and TestStorageBasedMetastore
refactor sorting logic in FacetComponent to use a boolean variable for clarity to improve readability and maintainability of the code
refactor PropertiesExpander to use a local variable for overridingProperties and update the cache file path to improve code readability and ensure the correct
refactor jetty handling in DeleteInactiveReplicaTest . java to improve clarity and functionality to ensure proper management of Jetty instances and their
added a filename argument to the newInstance method in FileActionsDialogFragment and updated its implementation to include the file name as a parameter to enhance the
updated reorder direction handling in CellLayout . java to improve clarity and functionality of drag - and - drop operations
updated variable names and API path annotations in InnerTransferRequest and AccountAPI classes to improve clarity and organization of API endpoints
fix assertjobrunningeventually in sinkstresstest . testfailjob
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to
simplified import statements and added new visitIdentifier methods in FindTypes . java to enhance code readability and maintainability by utilizing wildcard
added a method to set the action text color for the primary dark theme to enhance the visual appearance of the authenticator activity
added find methods to Manager , StreamSupplierComponent , AbstractManager , MockManager , MockManagerImpl , and MockManagerImpl classes to enhance functionality
rename ` addTestStepsForHooks ` and ` addTestStepsForBeforeHooks ` methods to ` createTestStepsForHooks ` and `
corrected the spelling of " valid " in method names in StaticHandlerMethodResolverTests . java and MethodInvokingMessageHandlerTests .
added a method to cancel a client connection in RpcServer and modified the startDriver method to include it to ensure proper handling of child processes and
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` and ` ParamInfo ` classes
initialize lastDisplayedUser to Optional . empty ( ) to avoid potential NullPointerExceptions when lastDisplayedUser is null
added an implementation of the ` findAll ` method in ` QueryDslMongoRepository ` and a new test in ` AbstractPersonRepositoryIntegrationTests
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions when stopping instances
planner - 1181 : do n ' t warm - up in case of a failure .
feature - add xread ( ) and xreadgroup ( ) method to pipeline interface
updated method calls in LinkedBufferInput and StreamInput classes to improve clarity and functionality to enhance code readability and maintainability by standardizing
added support for web security customization in CasWebAppSecurityConfiguration and refactored the configuration methods in CasWebSecurityConfigurerAdapter to
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to implement
added a method to register content providers in ShadowContentResolver and refactored ContentProviderController to utilize this method to improve content provider registration
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to improve type specificity by using the fully
added a line to set keep - alive configuration in SingleConnectionManager to enhance connection management by allowing configurable keep - alive settings
[ java ] use a supplier for multicast sender flow control in the driver .
ggb - 1343 fix npe in ggb - 3d locus with no point in 2d
updated imports and improved error handling in multiple classes to enhance code clarity and ensure proper resource management during asynchronous operations
simonstewart : add ability to turn screenshot on / off by default
updated JUnit assertions from ` assertEquals ` to ` assertThat ` in multiple test files to improve readability and leverage AssertJ '
truffle : remove trufflelanguage . getcontextreference ( ) deprecate .
modified exception handling in StubberImpl . java and added new test classes StubbingWithBadThrowablesTest . java and Uninstantiable
updated error handling in Actor and Group classes to throw an IllegalArgumentException for non - ascendant actors to improve clarity of error messages for better
added location permission handling and updated the ` getCenter ` method in ` LocationPickerActivity ` to utilize a dialog for location access to enhance user
added a new file ` CounterMDB . java ` that implements a message driven bean to facilitate the tracking and management of
added a standard cookie specification to the request configuration to ensure compliance with HTTP standards for requests
replaced a conditional check with a single method ` overlaps ` in the ` Intersector ` class to simplify the code and improve readability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering method to improve audio
added a monitoring URL parameter to several ScrollingPanel , ScrollingPanel , and SystemInformationsButtonsPanel classes to enhance the panel ' s
polish ` ` remove unused config option kubernetes . service . create - timeout ' '
updated icon handling in NearbyListFragment to differentiate between landmark , city , and empty photo icons to improve user experience by providing
added null check for type . getPackage ( ) in DefaultPackageScanClassResolver . java to prevent potential NullPointerException when type . getPackage ( ) is
added a new file PrintInlining . java containing a main method that prints " Passed " to demonstrate the functionality of
fix ( javadoc ) : fix nest brace in javadoc tag ( # 4323 )
[ java ] remove unused private field in archivetest .
updated EdgeDataTable to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) to ensure compatibility with the latest graph structure
remove unused import of ClassPathResource and ResourceLoader from SpringResourceProperties and PasswordManagementConfiguration to streamline code by eliminating unnecessary dependencies
updated Timber log messages to use float placeholders instead of d to improve logging precision for better debugging
do not send room _ removed event when clustering be disable .
updated the variable name from ' minimize ' to ' cores ' in AutoScalingHandlerTest . java to clarify the purpose of the variable in
added flipping and generating mips functionality to the key in TextureHelper to enhance texture rendering capabilities and improve performance
refactor PythonDslProjectBuildFileParser to utilize EventReportingProjectBuildFileParser and CloseRecordingProjectBuildFileParserDecorator for better
added a new class ` LibraryNormalizationPass ` and modified ` J2pTransiler ` to use it for processing ` NormalizationPass `
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory `
[ hotfix ] [ test ] make memorysegment visible for test only
added JPA @ Temporal annotation to ConsoleSessionVO . java to enable the use of timestamp data type in the session management
added Hbs . java and HbsTest . java files for template rendering and testing to facilitate the use of Handlebars for
refactor chat message handling to improve readability and maintainability to enhance code clarity and ensure proper visibility of UI elements based on message presence
updated the iteration method from ` keySet ( ) ` to ` values ( ) ` for measurement keys to ensure accurate retrieval of measurement values from the
simonstewart : add test for waituntilalertdialogappears ( )
added a condition to return null if there are no distinct column indices in ReduceSinkDeDuplication to optimize performance by avoiding unnecessary processing
refactor MiscUtils . java to improve path handling and error logging for better debugging and clarity to enhance code readability and maintainability
chore ( deps ) : update java microgenerator to 1.0 . 1 ( # 4382 )
updated Jetty websocket dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and "
replace ` toUnmodifiableMap ( ) ` with ` Collections . unmodifiableMap ( ) ` in ` SAMLAuthenticatedUser . java ` to ensure
make sure ` ` save ' ' button do n ' t disappear if the saved program change
replaced instances of ` new Double ( ) ` and ` new Float ( ) ` with direct return values in multiple classes to simplify code and
updated JdbcDataSource to store the timestamp instead of the date to ensure accurate representation of timestamp data in the result
added a condition to check for " javax . naming . Context " in the HtmlJndiTreeReport class to ensure proper handling of JNDI
updated database options handling in StorageUtils . java and improved logging in Manager . java to enhance configuration flexibility for different database types and enhance
changed the condition from checking for " double " to checking for " mutual " in ImporterGEXF . java to ensure correct handling
replaced the static final integer FLAG _ SLIPPERY with a new import for LayoutParams . FLAG _ SLIPPERY to
fix truffleconstantfieldprovider . getarraydimension ( ) to handle array .
added methods to get and set the Google Drive folder path in PreferenceHelper and updated related classes to utilize this preference to allow users to
ggb - 1359 shuffle suggestion on enter , up , and down
added @ Nullable annotation to several assertThat methods in Truth . java to improve null safety and clarify that target parameters can be null
update bitwise operations for case 2 in ArrayUtil . java to improve clarity and correctness of the code logic
added a new test file ` ApiExceptionTest . java ` and modified ` ClassInstrumentor . java ` to check for constructor instrumentation before instrumenting
add wait for anticompaction to streamin / streamout . patch by jbellis
added methods to manage keyguard secure status in ShadowKeyguardManager and updated related tests in ShadowKeyguardManagerTest to enhance functionality and ensure
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization of the class
replace ' > ' with ' ' and add a conditional check for overrideParts length in GrblUtils . java to ensure proper handling of
corrected a typo in the method name from " assertEmptyThrowsMutipleFailureExceptionForManyThrowables " to " assertEmptyThrowsMultiple
added a condition to checkDrained ( ) in AsyncFileImpl . java and implemented a new test in FileSystemTest . java to ensure
updated light parameters and shader configuration in HybridLightTest . java to optimize lighting and improve shader performance
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple integration test files to ensure consistent use of
refactor path handling in RuntimeOptions and CucumberFeature to use PathWithLines instead of String to improve type safety and clarity in
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to streamline the code by eliminating unnecessary annotations
added a call to close a ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added thread - local prefix index management in ` BasisLibrary ` and modified prefix index handling in ` Stylesheet ` to improve thread safety and
added logging configuration for HttpConnection in TestDistributedStatsComponentCardinality . java to improve debugging visibility for HTTP connection issues
added ` throwIfImmutable ( ) ` calls to ` IntList . java ` to ensure that modifications to ` IntList ` cannot be modified
added @ NotNull annotation to the onApplicationEvent method in GrpcServerRunner . java and modified ManagedChannelBuilder initialization in GrpcClientBuilder
refactor Graal class to use a Supplier for workDir instead of a static method to improve code readability and maintainability by lever
synchronize insightinstrument . keysunchanged ( ) and insightpercontext . invalidatefunctionsarray ( ) to improve thread safety and
added platform - specific handling for writing XML files in GenerateManifestStep . java to ensure proper handling of line endings in manifest files on Windows
updated priority of ` findNullDeref ` from LOW _ PRIORITY to HIGH _ PRIORITY and added a new class ` RFE35
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and modified null checks in ThingResource to improve null safety and enhance code clarity
make createcancellationexception ( ) return runtime exception instead of throwable
pdfbox - 4892 : initialize the cropbox before use it in the pagedrawer
refactor ManagerBase to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to allow users to enable access
refactor FragmentActivity initialization to use Robolectric for improved testing capabilities to enhance code maintainability and leverage Robolectric
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and added a new method ` getDecimalCoords ` to improve clarity
rename class ABCase1 _ 1 , ABCase2 _ 2 , ABCase3 _ 4 , and ABCase7 _ 3 to Test
renamed the parameter ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
refactor event handler setup in OpenRocketViewer to use a separate variable for better readability to improve code clarity and maintainability by
add a new recipe class ` ChangeDependencyGroupIdAndArtifactId ` to manage Maven dependency updates to enable users to change both groupId and artifactId for
refactored variable initialization and added a check for indexability in IndexingJob . java ; added length validation in SegmentChecker . java to
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use memoized Supplier instances for managing replacement paths and source paths to improve code efficiency and readability by reducing
rename JsonExamples class to Examples and update package - info . java to improve clarity and consistency in naming conventions
added debug logging statements to the ViewExtractor class to improve traceability and troubleshooting during the extraction process
fixed typo findbylinktext - > findbylinktext
added a new file ` Main . java ` containing a class to demonstrate the usage of the ` java . oop ` entry
fix a race condition that could cause a npe in the sip registration wizard .
removed duplicate continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unused
refactor dependency resolution logic to use memoization for improved efficiency to enhance performance and reduce memory usage during dependency resolution
replaced the method call from ` count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling in ExtractingDocumentLoader to ensure proper content encoding is used for document loading
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in databaseconfig . java
added a check to return early if the slot is - 1 in PlayerInventory . java to optimize performance by avoiding unnecessary processing when the slot
add -- ignore - transitive - repositories option to maven - execution - api
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and improve compatibility
added null check before closing the selection object to prevent potential NullPointerException when closing the selection
added a condition to break the loop if the current index equals the string length and the matcher starts and ends to improve performance by avoiding unnecessary
updated the @ IntegrationTest annotation to include the server port configuration to ensure compatibility with the specified server port for integration tests
added a new " reverse " UDF and registered it in the FunctionRegistry to implement functionality for reverse text manipulation in Hive queries
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple files to improve clarity and consistency in context
rename Tracer . java files to improve clarity and consistency in naming conventions
[ hotfix ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability
added synchronization and clearing logic in StarTreeRecordStoreCircularBufferImpl . java and a corresponding test in TestStarTreeRecordStoreCircularBuffer
updated forecast settings from 0 , 12 , and 6 to 60 , 48 , and 8 days in OpenWeatherMapOneCallHandler . java
add a timeout to the abstractpageoperationtemplatetest . testlastfetchtime ( )
updated RemoteTargetGluer and FloatingHeaderView classes to enhance animation handling and suggestion mode functionality to improve user experience by providing smoother
updated the ` splitAndMap ` method to ` splitAndThenFlatMap ` and modified the return type of ` parseRerunFile `
add livingwood and quaries to the creative tab so they can be add to the creative tab .
updated assertions in TestRadioButtons . java to use the expected size of optItem and retrievedOptions to ensure that the tests accurately reflect the
added support for handling file sizes in RCFileCat and implemented a method to retrieve the number of rows in RCFile to enhance functionality and provide
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability
[ jna ] add a check for mxnet ndarray that be already close .
[ hotfix ] [ doc ] fix typo in blobserver
fixed bug 1244536 - unusedprivatemethod no longer report false positive for method call from initializer
rename lexicalScope variable to lexScope for consistency to improve code readability and maintainability
added a test for the auto - startup attribute in the inbound inbound adapter parser to ensure that the sftp auto - startup feature works correctly with the
added methods to retrieve level , root , and item boundables in Node , Quadtree , and AbstractSTRtree classes , and updated STRtree
updated version parsing logic to handle minor version numbers correctly to ensure accurate version identification for improved accuracy
fix npe in itemregistryimpl when no tag be available
added methods to parse and convert date strings to epoch milliseconds in DateTimePatternHandler and DateTimeFunctions to enhance date parsing functionality and improve error handling for
hhh - 17100 fix nullpointerexception in customtype # disassemble
updated Log4j2ConfiguratorServlet . java file to improve logging configuration handling
replaced the creation of HiveException and AuthorizationException with direct return statements to simplify exception handling by eliminating unnecessary initializations
updated CC value handling in CGoCompileStep and added a new test for CgoLibrary with prebuilt dependencies in GoBinaryIntegrationTest to
fix # 1326 : make customresource buildable so that customresourcefluent be
added an @ Override annotation in the Only class to ensure proper method overriding and improve code clarity
added a timeout constant for HTTP connection parameters in HttpClientFactory to improve connection stability by allowing more time for requests to complete
added new pipeline names and updated scope naming in PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline to improve cl
simonstewart : add an enable / disable other constraint to the server
added @ Singleton annotation to ApplicationController . java to ensure that the application cannot be recreated multiple times
refactor username retrieval to utilize OwnCloudAccount for improved account handling to enhance user experience by dynamically retrieving the username based on the
added BatchStatus import and a test for resume paused job execution in SimpleJobLauncherTests to ensure job execution correctly handles paused instances in the job
added a null check for cacheConfig in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java to
danielwagnerhall : do n ' t send ` ` delete ' ' command to the grid if the session be a
update compilationunitcontext to use default package name instead of ` ` java . lang ' '
pdfbox - 4892 : use nonsequentialparser for non - sequential parser , a suggest by valerybokov
mahout - 1342 fix checkstyle violation in mahout - distributed - solver
refactor HttpServerTestBase class for improved request handling to enhance test reliability and maintainability
refactor test cases in PortletApplicationMapTest to use keySet instead of entrySet to improve readability and maintainability of the test code
added tests and methods to handle nested bean lists in BeanTableSchemaTest and NestedBeanIgnoreNulls to ensure correct serialization and deserialization of nested beans
add redissonautoconfigurationcustomizer interface to allow customization of spring bean
fix indicator . todouble ( ) and add unit test
added new methods ` execInContainerWithUser ` and ` execInContainer ` in ` ContainerState ` and ` ExecInContainerPattern `
update interestedInByteMessages and interestedInTextMessages assignment logic in NettyWebSocket . java to improve clarity and maintainability of the code
added tests for semantic graph attributes in SemgrexTest . java to ensure correctness of semantic graph matching logic
added a broadcast intent to clear the pull pull notification in HomeFragment to enhance user experience by allowing quick access to shared resources
simplified the initialization of scroller and overScroller in TouchImageView . java to ensure compatibility with newer Android versions
add a flush method to the defaultprofilevalidationsupport bean so we do n ' t need to call it .
camel - 16462 : camel - core - optimize to reduce object allocation in camelcontext
added FloatingActionButton functionality to manage FAB navigation in ShareActivity to enhance user experience by providing quick access to the main FAB menu
added inline parsing functionality to the ToDateTokenizer class and updated related tests to enhance date parsing capabilities and improve test coverage
updated TestAnonymousClassUnloading . java for improved test coverage to enhance reliability of anonymous class unloading tests
updated Swedish localization messages in various resource files to improve clarity and accuracy of error reporting
added a check to ensure the server is checked before binding the OperationsService connection to prevent unnecessary service binding when the server is already checked
updated Position class to use getBeginLine ( ) and getEndColumn ( ) instead of getBeginColumn ( ) and getEndColumn ( ) to accurately
added waitFor ( ) method and exception handling in CxxPreprocessAndCompileStep . java and ManagedThread . java to ensure proper process termination
added a boolean property ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` to handle " all "
remove checkifloaded ( ) method from defaultrecordstore , fix maxsizechecker . getApproximatemaxsize ( ) .
added support for configurable SSL protocols in NettyWebServer and related classes to enhance flexibility in SSL configuration management
replaced ` AtomicBoolean ` with ` AtomicReference ` and introduced a wrapper class for thread - safe references to improve thread safety and simplify the
updated the return statement in QueryDslMongoRepository to handle null properties and added a new test in SpringDataMongodbSerializerUnitTests to
updated assertions in RoundRectBorderTest to check for self - equality and improved error messages to enhance clarity of test failures and provide clear
added checks to ensure the cluster is not empty before creating the genesis configuration and refactored variable names for clarity to improve error handling and
remove test that do n ' t work in parallel
updated CountDownLatch and ArrayList initialization to use ' min ' instead of ' cnt ' and added a length check for ' sign ' to ensure
updated conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` to ensure proper handling of non - Windows environments
refactor methods in MoreCollectors to improve clarity and consistency to enhance code readability and maintainability by standardizing method names
added null checks and WebSocket client extension handler in BitmexStreamingExchange , BitmexStreamingMarketDataService , and Bitmex
added validation checks for lat and lon in GeoPointField . java and created a corresponding test case in TestGeoPointField . java to ensure
updated method names and logic for creating and saving workflow files in OozieProxyImpersonator and WorkflowFilesService to improve clarity and
refactor ResponderId class to improve code organization to enhance maintainability and readability of the code
updated the ` getTableDocument ` method to include a ` withDependents ` parameter for better control over whether to include dependent tables in the table
added conditional handling for consecutive uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing a confirmation dialog for number of consecutive uploads
added caching functionality and a new endpoint for viewing profile data in ProfileResources . java to improve performance by reducing redundant serialization of profile data
refactor JpaMetamodelEntityInformation to improve handling of identifier derivation and property retrieval to enhance code clarity and maintainability while ensuring
added methods for bootstrapping last DDL timestamps for tables and views in UpgradeUtil and updated corresponding tests in UpgradeIT to enhance functionality and ensure accurate
add ` registerdefaultexceptionmappers ` property to ` abstractserverfactory ` to allow customization of exception mapping in the server
added ' false ' parameter to ' storeFieldAction ' method call in EntryEditor . java to ensure proper handling of field visibility in the entry
modified the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter and updated its usage accordingly to enhance window pointer management by
rename database table from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to improve clarity by using a more descriptive identifier
added a new " STOCK " feature to the Tile class and modified event handling to include it to enhance the game ' s ability to
fixed - rbuckets . set and rreadasync . readasync ( ) and rwriteasync ( ) method throw classcastexception . #
add findunrelatedtypesingenericcontainer annotation to findunrelatedtypesingenericcontainer class
refactor ` LauncherBackAnimationController ` to integrate ` BackProgressAnimator ` for improved back animation handling to enhance the responsiveness
changed the visibility of the ` _ initialPageNo ` variable from final to non - final and added logic to increment ` _ contentLimits `
fix the calculation of crc16 and increase total operation in crc16 benchmark
added support for parsing SQL comments in the FormattedSqlChangeLogParser class to enhance change log parsing functionality by allowing comments to be applied to
removed initialization of JarArchiver in MavenArchiver and added setting of the JarArchiver in AbstractJarMojo to streamline the arch
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing a more specific
simplified conditional checks in TSServiceImpl . java and added a multiAggregationTest method in DaemonTest . java to improve code readability
added checks for supported formats and types for pixel buffers in GwtGL20 . java to ensure compatibility with GWT backend and provide clear error messages
updated method names and added a new test for debug information in OutputMemoryTest . java , PrintR . java , and VarDump . java
replace UnmodifiableClassException with a custom exception handling mechanism in InlineBytecodeGenerator . java to provide clearer error messages when Byte Buddy
[ gr - 10705 ] add trace for class initialization trace .
[ bugfix ] fix typo in basebrokerrequesthandler
updated cache implementation from Google Guava to Benman ' s Caffeine in TopicRouteService . java to improve cache performance and
modified the ` createDataSource ` method to include a ` readOnly ` parameter to enable data source configuration to be read - only for improved flex
updated regex pattern in ` INVALID _ SOURCE _ TARGET _ RELEASE ` and added a fatal error message in ` FailureLogAnalyzerTest ` to
updated the URI construction in DetailFragment . java to include a check for location availability before setting the geo URI to ensure that the location intent is
updated the initialization of referencedIds to handle null inheritedParameterContexts gracefully to improve robustness by avoiding potential NullPointerException when accessing referenced parameter contexts
refactor ClassLoader to improve code readability to enhance maintainability and facilitate future feature additions
added the ` addOriginResponseHeader ` method to ` ProxyRequestHelper ` and a corresponding test in ` ProxyRequestHelperTests ` to ensure
added a new ProfileSettingDrawerItem instance to the GpsMainActivity to enhance user experience by providing a profile setting drawer
added a new constant XML _ VALIDATION _ ATTR and updated related classes to utilize it to improve configurability and maintainability of XML
simonstewart : add a test for firefox string handling
added maxRows handling and validation for fetch size and maximum rows in IoTDBStatement . java to ensure that the query does not exceed the defined
refactor ` isCountOptimizable ` to ` allActionsAreOptimizableFilters ` for improved readability to enhance code clarity and
added event handling for node and mouse left clicks in StandardVizEventManager to improve user interaction by enabling selection features
refactor memory setting logic in ManyToOneRingBuffer to use a dedicated zeroBuffer method to improve code readability and maintainability by reducing
[ drools - 7 ] make xorgroup field accessible from terminalnode
removed the ` getHeight ( ) ` and ` getWidth ( ) ` methods from ` LCDUIImageMonochromeBitmapSource ` to stream
refactor path resolution logic in SourcePathResolver to use getPathPrivateImpl for improved clarity and maintainability to enhance code readability and
[ dstu2 ] fix encode and parse for dstu 2 identifier ( # 4352 )
updated ` changeSchemeIfIsWebSocketUpgrade ` method to be static and included a parameter for encoded parts to improve functionality to handle encoded URLs correctly during WebSocket upgrades
rename ` ` sulong - test - suite - compile ' ' to ` ` sulong - test - suite - compile ' '
added a method to retrieve the CxxPlatform from HaskellBinaryDescription to improve flexibility in obtaining the CxxPlatform based on
added import statements for IndexReader , IndexReader , and Hits in multiple Java files to enhance documentation clarity and maintain consistency across the codebase
added null check for current element in ConcurrentLinkedStack and refactored method names for clarity to improve error handling and enhance test coverage for
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is null
updated condition to check if overview state is enabled and first layout is not active to improve user experience by preventing unintended gestures
added multiple package - info . java files for various Lucene packages to provide package - level documentation for the Lucene framework
added functionality to display the visible status of the AutoLeveler component to improve user experience by providing a clearer visibility indicator
added postOptimizeCallbacks call to update handlers in DirectUpdateHandler and DirectUpdateHandler2 , and introduced event listener handling in UpdateHandler to
updated Inflater and Deflater initialization to include a boolean parameter to ensure proper handling of compressed data by explicitly setting a dummy byte to
added a check for user data in Shaderc . java to ensure data integrity during shader operations
added a condition to check if ` base . isLocalMetaStore ( ) ` in ` RetryingMetaStoreClient . java ` to ensure retries
updated import statements and added null check for hostStatus in HeliosSoloLogService . java to improve error handling and logging clarity
refactor Subject class to improve code structure to enhance maintainability and readability of the code
add referencetype . weak and referencetype . strong to map ( # 11858 )
updated color distance calculations in HSSFPalette . java and added a new test in TestHSSFPalette . java to ensure accurate color
doc : generate sample code in the java microgenerator ( # 113 )
danielwagnerhall : fix elementfind test for android ' s xpath library .
added an integer flags parameter to multiple receiver registration methods to allow customization of receiver registration behavior through additional flags
updated FFmpegTest . java to use Mockito ' s Answer for mock behavior to improve test reliability by allowing mock behavior for the run
modified the OggInputStream and OpenALMusic classes to manage input streams and ensure proper resource management to improve memory management and prevent potential memory
replaced hardcoded string " Response was null " with a constant RESPONSE _ WAS _ NULL to improve code readability and maintainability by
[ te ] fix anomaly migration when there be no anomaly
refactor Toast display logic in BaseActivity and DetailActivity to use a new method to improve code readability and maintainability by centralizing
updated the request creation method in TracingFeignClient . java to use the method from the delegate ' s request template to improve clarity and
added validation for LDAP names and improved referral handling in LDAPCertStore . java to enhance robustness by ensuring only valid names are processed
refactor retain logic in GatewayRSocket to use a new private method to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for ` OnItemClickListener ` in ` AdapterViewTest
[ hotfix ] [ test ] use classrule instead of setup method in checkpointfailuremanageritcase
remove genericitemuiprovider ( no longer use )
added ` ` select object ' ' field and getter / setter for the ` ` select object ' ' field in ` ` sipcommselectorbox
added @ Isolated annotation to MetaInfConfigurationTest . java to enable access to the static method of FileSystemPool for testing purposes
added a line to set the server connector ' s host to HTTP _ INFO . bindAddress to ensure the server correctly connects to the specified bind
updated access token , ID token , and refresh token validity settings based on grant types to enforce different expiration policies for various client authentication
added a new class ` CloverInstrumentationFilter ` and updated ` SplitLogCounters ` to handle ` AtomicLong ` type checks to improve
added a new device type ZHIMI _ HUMIDIFIER _ CB2 and updated the write statement in ReadmeHelper to support
plausible to break only if duration > cost _ inf
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repository info in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to provide clearer feedback when the repository list
modified the return condition in the IntHashSet class to use logical OR instead of logical AND to simplify the logic for better readability and maintainability
added Serializable interface to RuleAdministrator to enable serialization of RuleAdministrator instances
replaced List with Set for allowedOrigins , allowedOriginPatterns , and allowedOriginStore , and updated related methods to utilize these sets
updated G3D file paths in BaseG3dHudTest . java and NewModelTest . java to replace " g3d
added a check for negative solidifiedPosition in the updateLatestSolidifiedBlock method to improve error handling and logging for invalid solidified position updates
hbase - 2594 fix npe in execresult . getregionstatus ( )
added a new method ` hasAccess ` and modified error handling in ` HttpServer . java ` to check for unauthorized responses to enhance security by ensuring
replaced the ` writeTo ` method with a new ` getStubClassBytes ` method in ` ClassMirror ` and refactored the `
added a TextView to display the internal link text based on the file ' s folder or file type to enhance user experience by providing clearer information
updated the assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
changed the condition from checking if the day of the week is equal to the week from " SATURDAY = = " to " S
refactor hideInput and hideIme methods in AllAppsContainerView and LauncherAllAppsContainerView classes to improve UI responsiveness
use inmemoryeventstorageengine in eventhandlingconfigurationtest and sagaconfigurationtest
refactor BsdFileStore to use BsdNativeDispatcher for retrieving mount directory name to improve code clarity and maintainability by encapsulating
add test case for issue # 1599 resolve method call expression
added x , y , and z parameters to the spawn command and implemented error handling for argument errors to enhance command functionality and improve error messaging for
added a minimum content dimension constant and refactored related methods to use this constant to improve code readability and maintainability by centralizing the
move debug . dump ( ) from hotspotcryptosubstitutiontest to graalcompilertest
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added failed checks to ` m _ failedChecks ` in ` UpgradeCheckRegistry . java ` and reformatted the ` addColumnsToUpgradeTable
refactor Environment class to improve code readability to enhance maintainability and facilitate future development
added LuceneTestCase import and annotation to RecoveryAfterSoftCommitTest . java to address a known issue related to bug SOLR - 74
updated home string construction in CodenameOneImplementation . java and removed unnecessary error logging in HashtableContent . java to improve code clarity and
changed the flag from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS
updated import statements and modified resourceAccessor initialization in LiquibaseEntityResolver . java , and modified XMLChangeLogSAXParser . java
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing TLS algorithms from being used
replaced instances of ` CxxDeps . EMPTY ` with ` CxxDeps . of ( ) ` in ` CxxLibraryDescription .
rename ` expectedDirectory ` and ` actualDirectory ` lists to ` expectedStubDirectory ` and ` actualFullDirectory ` , and introduce `
updated the declaration of the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to ensure consistency in code formatting
updated folder name hint logic to check for empty titles before setting hint to improve user experience by providing a clearer hint when the folder name is
updated client loading methods in UaaResetPasswordServiceTests to include the client ID " uaa " to ensure that the tests correctly reflect the
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated string representation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to account for the ' isClosed ' state to ensure accurate logging
refactor MimetypeIconUtil to improve code readability to enhance maintainability and facilitate future feature additions
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParenthesesTest ` and modified the ` UnwrapParentheses `
added a built flag and a teleport method to the Location class , and modified the instantiation logic in the Location class to enable teleportation functionality for
replaced the use of Spring Security ' s Base64 with Spring ' s built - in Base64Utils for encoding and decoding to improve code
updated import statements and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename the ` ContainerAnnotation ` interface to ` ContainedBy ` to clarify the purpose of the annotation related to ContainedBy
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the id is not null to prevent potential NullPointerExceptions
refactor retweeter handling in TimeLineCursorAdapter to improve clarity and maintainability of retweeter management logic
replace HoloTextView with TextView for the verified text based on the user ' s theme setting to improve flexibility in displaying the verified text
modified the AbucoinsDigest constructor to remove the static instance variable and changed the visibility of timeDiffFromServer to private to enhance encapsulation
camel - 14850 : camel - mongodb - allow to configure the mongoconnection on the endpoint .
[ geos - 7012 ] add support for a source index in attribute mapping ( # 7013 )
log warn when alter partition with corrupt column stats
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks in the authentication process
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
escape the contact email in the home page to prevent security vulnerabilities
fix ( modulemanagerimpl ) : do n ' t enrich reflections with subsystems
update JoinModeller to use dynamic feature count instead of a hardcoded value to ensure that the output reflects the correct feature count in the
ggb - 1349 fix for ` ` < ' ' , ` ` < ' ' , ` ` < math > ' ' ,
added conditional debug and trace logging checks before logging messages in SingleNodeKafkaResumeStrategy . java to improve performance by avoiding unnecessary log statements
replaced hard - coded ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAY
updated IgnitionConfigurationHandler , MotorMountHandler , AxialStage , and ParallelStage classes to handle ' automatic ' separation
tika - 3998 -- fix for tika - 3998 , tika - 3998 , tika - 399
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to temporarily disable tests on JDK 1.7 and 1
refactor lock file creation into a separate method to improve code readability and maintainability by encapsulating lock file creation logic
updated notification settings for version 5.3 and version 5.3 _ 1 in UpdateUtils . java to ensure compatibility with the latest updates and
added a check to return null if the username equals FEDERATION _ USER in AuthenticationManager . java to ensure proper handling of federation
truffle : do n ' t execute method on object that do n ' t implement truffleobject .
replaced ` Collectors . collect ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest
do n ' t attempt to access a file that do n ' t exist
refactor Collection and Map classes to improve code readability and maintainability
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize Lucene ' s Version
added handling for missing backing indexes in the MissingPrimaryKeyChangeGenerator class to ensure correct schema management for foreign indexes in comparison databases
added MetastoreException handling to MsckOperation and a new test for invalid partition names in TestMSCKRepairOnAcid
[ hotfix ] retry committable in kafkaproducer if committable already exist
[ rip - 3 ] remove the receipthandle from the request when send the message ( # 3995 )
added a service list to DockerComposeContainer and modified the runWithCompose method to handle cases where no services are provided to improve flexibility in
fix : use copy set to avoid concurrentmodificationexception
removed unnecessary HTML cleaning and simplified return value in FeedParser . java to streamline code and improve readability by eliminating unnecessary components
removed unnecessary condition for disabling all apps in Launcher . java and updated child index retrieval in Workspace . java to streamline code logic and
change data type of energy reactive variables from int to double in MeterRealtimeBodyDataDTO . java to allow for more precise energy re
added a new file ` bug4150029 . java ` that implements a JApplet with a file chooser to create a temporary directory
added a boolean flag and methods to manage Spark configuration updates in HiveConf . java , modified SparkClient . java and SparkTask . java to
added a long press indicator to AppIcon and AppIconMenuItem classes and modified Launchable and Workspace classes to utilize it to enhance user experience
added handling for empty polygons in WKBWriter and improved test cases in WKBWriterTest to ensure proper serialization and validation of edge cases
refactor UnflavoredBuildTarget creation and interning in NativeLibraryMergeEnhancer and AbstractUnflavoredBuildTarget to
added a new file MultiplyByMaxInt . java that implements a test for multiplication by maximum integer to demonstrate the use of
updated ` onActionViewCollapsed ( ) ` and ` drawerIndicatorEnabled ( ) ` methods in ` OCFileListFragment . java ` to
changed the package of TestRAMDirectory from ` org . apache . lucene . index . store ` to ` org . apache . l
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton ` and ` Operations ` classes to simplify code and improve performance
dmn dmnvaluatorcompiler : improve error message when no expression define for a name ' on node '
replace occurrences of @ ContainedBy ( AC . class ) with @ Repeatable ( AC . class ) in multiple Java files to align annotation
updated the message to include the duration of the file sending process to provide clearer feedback on the duration of the file sending process
updated class name handling in OpenMBeanAttributeInfoSupport . java to use a local variable for base class name to improve code clarity and ensure
fix regression in quorumresponsehandler when response count be less than 1
updated freeSize calculation in StoreDirect . java to improve memory management by adjusting freeSize based on input values
fix touch event not be fire when swipe up to the keyboard ( # 1352 )
replaced instances of SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to ensure compatibility with the latest SSL
removed the PrivilegedSocket class and simplified the connection creation in PG _ Stream . java to simplify code and improve readability by eliminating unnecessary
rename InputTest . java file to improve clarity and consistency in naming conventions
updated the ` finishRecentsAnimationOnTasksAppeared ` method to include an additional ` onFinishComplete ` parameter and adjusted related calls
added a null check for curLatLng before removing the current location marker to prevent potential NullPointerException when curLatLng is null
updated the client removal method to use the client ID directly instead of the client object to ensure the correct client ID is used for secret removal
updated SQL query parsing and configuration assertions in SqlSourceBuilderTest . java to improve test accuracy and ensure compatibility with new XML structure
resolve http : / / issues . apache . org / activemq / browse / amq - 2636 - wait for consumer termination
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in the dataset
updated filterConditions initialization to use Optional and added return statements in ZookeeperSyncDataService and ShenyuTrieRuleListener to improve null
[ scene2d ] refactored lightcontrol to use cloner instead of spatial .
refactor stack trace handling and improve code clarity in StdErrLog . java to enhance readability and maintainability of the code
added debug logging and null check for the ApplicationContext in HttpSessionEventPublisher to improve traceability and ensure the context is not null before publishing events
added a semantic exception message to indicate that the CREATE CQ statement has changed from version 0.14 to ensure clarity in the error message
[ hotfix ] fix typo in javadoc of flinkiottdbsink
add a counter to track the number of custom simplificationconsiderednodes in canonicalizerphase
updated the method call to include the ` context ` parameter in the ` getFileTypeIcon ` method to ensure the correct context is used for icon
updated ` readIdentifierWithSchema ( ) ` to accept ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( ) `
fix bigquerytableiterator . read ( ) for timestamp field ( # 2649 )
added ` findViewWithTag ` method implementation in ` ShadowView ` and ` ShadowViewGroup ` classes to enable retrieval of views with specific tags
updated generic type declarations for Enumeration in multiple Java files to improve type safety and code clarity
removed unused import of PColumnFamily from IndexTool and MetaDataClient classes to improve code cleanliness and maintainability
added JSON value and JSON creator constants to DocAnnotationConstants and modified value retrieval logic in SpringBootDocBuildTemplate to enhance annotation handling and improve
svm : do n ' t try to access resource feature for jar file
updated CUDA _ R _ 16F , CUDA _ R _ 32I , and CUDA _ R _ 32U constants in cudnn
updated the ResourceLoader class to include file filtering for layout directories to enhance flexibility in loading resources from different directories
fix classcastexception in redstonetorch . getattachedface ( )
[ calcite - 3640 ] support varbinary type in reltostageconverter
removed the import of DateHelper from NoteAdapter . java to streamline dependencies and improve code clarity
updated backup loading error messages and error handling in Backup . java and Captions . java to improve clarity and specificity of backup - related
# 3906 replace position . absolute to relative . should work with z - index .
simplified the creation of a temporary file in ShadowParcelFileDescriptor . java to improve code readability and maintainability by elimin
resolved - issue int - 158 : securitycontextholderstrategy should use addfirst instead of poll ( )
move booleaninversion to controversial ruleset until i can look at it a bit
improve canonicalization of integer equals canonicalization for octal reference .
added a constant STRING _ ARRAY to the TypeFactory class to facilitate type handling for String arrays in the application
refactor keyboard hiding logic to use a dedicated method in ` AllAppsContainerView ` to improve code readability and maintainability by encaps
force bit density to fix network network issue . close # 3550
updated assertion messages in TimelineMetricCacheSizingTest . java and modified imports in TimelineMetricCacheTest . java to improve clarity
add an optimization to the gl _ max _ texture _ size in minecraft .
[ java ] stop log recording when stop consensus module .
added a condition to reset startPosn in the SemanticAnalyzer if in transform mode to ensure proper initialization of startPosn when transformation occurs
replaced the ` StarTreeUtils . isStarTreeDisabled ( ) ` method with ` QueryContext . isSkipStarTree ( )
added a lockNearbyView flag and modified refreshView and setupPlaceList methods to handle nearby view refresh behavior to improve user experience by
add maptransformer . of ( map ) and bimap . of ( map ) for convenience
rename methods and classes in EmeddedObjects and EmbeddedObjects to improve clarity and consistency in naming conventions
added support for handling launcher widget span information in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to improve widget management and accessibility within the
replaced the use of ` ChangeListener ` with ` StateChangeListener ` in the ` StageSelector ` and ` StageAction ` classes to align
added methods to get and set calling UID and PID in ShadowBinder . java and updated tests in ShadowBinderTest . java to enhance testing capabilities
replaced AutoValue with Google Guava ' s Objects for better null handling in the ExpectationFailure class to improve code clarity and reduce
bitcoinserializer : remove warn log for no support for deserializing message .
simplified the assignment of new dimensions in ImageReplacedElement . java to improve readability and maintainability of the code
added handling for single quotes and double quotes in Markdown processing to ensure proper formatting of special characters in Markdown output
refactor password sharing logic into a separate method for improved readability and maintainability to streamline password sharing process and enhance code maintainability
refactor method invocation in IoUtil to use a new MappingMethods class to improve modularity and maintainability by encapsulating reflection logic
changed access modifiers of methods and variables from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test .
added new options for the Slider AM keytab and its configuration in LlapOptionsProcessor . java to enhance flexibility in configuring slider
modified the ` tearOutGraphViewContainer ` method to accept an ` JFrame ownerFrame ` parameter and added animation control functionality to enhance
added a mechanism to handle binding completion and assertions in LauncherModel . java to ensure shortcuts are only added when the workspace is loaded and improve
updated data and isFinished fields to be final and simplified isFinished logic in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and Node
added a new method ` setCheckValid ` in ` IssueInterface ` and renamed ` ValidationReport ` class to ` JsonValidationReport ` to
added a method to safely retrieve the cipher provider name and updated the output message to include it to improve error handling and provide clearer debugging information
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration for clarity
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance
removed conditional check for ' i ' and ' size ' in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static in DefaultMapScaleBar . java to allow access
removed the @ Ignore annotation from CovariantOverrideTest . java to clarify that covariant overrides are not implemented
refactor curly method calls to use a dedicated qtype method to improve code readability and maintainability by reducing duplication
camel - 16400 : camel - spring - boot - reload should load route definition from xml instead of load them from xml .
added minimum and maximum space settings for the X - axis in ScatterChart to improve visual spacing for better data visualization
removed duplicate quotes around " INTERVAL " in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` and implemented it in ` BaseState ` to
added a check for the presence of the " UTF8 " property in the properties file to ensure that the application does not throw a runtime exception
updated TestReproduceMessage to print system error output and modified LuceneTestCase to use seed decorators for randomness testing to improve
added logging functionality for long - pressing an AllApps item in the StatsLogManager and ItemLongClickListener classes to track user interactions and improve
added a null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java to ensure that
show sector land info only if the preset be not null or set to true
[ hotfix ] [ table - planner - blink ] fix unchecked warning in type inference
refactor Enum class to improve code readability to enhance maintainability and facilitate future feature additions
added validation to nearby selection configuration to ensure that only valid distribution parameters are used for random selection
use cachebuilder instead of custom thread pool for temporary cache
[ geos - 6790 ] hide the layer import and sql view container in the new layer page
initialize the Availability _ availability variable to UNAVAILABLE to ensure the availability state is properly initialized before use
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , and ` PbftDataSyncService ` to
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
changed the ` _ freeSpaceReclaimDisabled ` variable to ` _ freeSpaceReclaimQ ` and modified the ` freeSpaceReclaim
changed KDCOptions constants from public to private static in KDCOptions . java and added a new KdcDefaultOptions . java file to
refactor JsonWriter initialization to improve clarity and ensure proper null handling to enhance code readability and prevent potential NullPointerExceptions
reformatted code for consistency and readability in ProfilePager . java to improve code maintainability and adherence to coding standards
rename paintBackground to paintComponentBackground in Slider . java to better reflect the method ' s purpose of painting the component background
added a method ` valueFromClassConstant ` to retrieve configuration values from class constants to enhance configuration flexibility by allowing dynamic value retrieval from class
added logging for service initialization failures in KafkaService . java to improve error handling and debugging for service initialization failures
changed the type of RESOURCES _ TO _ ALWAYS _ ACQUIRE from Set to ImmutableSet and added " usr / share / zoneinfo /
add ' auto - createchannels ' option for default message bus output channel
added keyword indexing support in HTMLDocument and a corresponding test case in TestDemo to enhance the HTML document ' s functionality by allowing keywords to be
updated the SDK version check from " S " to " R " to ensure compatibility with the latest SDK version
refactor address assignment logic in MemcachedSessionDataMapFactory . java to improve readability and maintainability of the code
replaced instances of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall .
refactor Builder class to improve code readability to enhance maintainability and facilitate future feature additions
change isbntobibtex fetcher to use http : / / www . ebook . de / tools / isbn2bibtex
sulong : fix race condition in polyglotimpl . enterifneeded ( ) .
added null check for text before firing data change events to prevent potential NullPointerException when text is null
add option to enable the use of treepack and simplifiedmodel in the sentimentmodel
added trimming of whitespace from the line variable in SuffixURLFilter . java to clean up unnecessary whitespace before processing
added a conditional check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when the player is in
ggb - 1193 text input dialog do n ' t close the input dialog when click on it
refactor LinkedHashMapCache and BoundedLinkedHashMap constructors to accept a maximum size as a boolean parameter to improve flexibility in cache initialization by allowing
removed unnecessary _ channel reference in ChannelEndPoint . java to streamline code for better readability and maintainability
added null check for keyIndex and refactored KeyIndexBuilder instantiation in multiple files to improve robustness of key index validation and remove unnecessary
added Locale import and modified exception handling in DirectUpdateHandler2 . java to ensure consistent exception handling across different locales
add writenode . storecheckguard to allow add a guard to the writenode
[ wasm ] remove redundant check of reachable block in bciblockmapping
add cloud . get getClassificationVariance ( bugInstance b ) and make it consistent across clouds
replaced ` BuildTarget . copyOf ( ) ` with direct assignment for ` unstrippedTarget ` and added ` JsonIgnore ` annotation to
[ hotfix ] [ table - planner - blink ] fix typo in sqlrunner
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and
rename ` knownApis ` to ` knownSdks ` and update related methods in ` DefaultSdkProvider ` and ` Robolectric
use confidenceprogressindicator instead of progressindicator in createofferview
updated header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 , and modified UPNPControl to
do n ' t iterate block that do n ' t have a block iterator . close # 349
added new view type constants and modified the onCreateViewHolder method to differentiate between message and noflex views to enhance flexibility in
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
mondrian : fix a bug in the grammaticalRelations class , which could cause an infinite recursion .
removed the canvas parameter from the insert and insert methods in TexturePacker . java to simplify method signatures and improve code readability
replaced ` getVisitors ( ) ` method with a default ` apply ( Refactor < S , T > refactor ) ` method in `
added methods ` getChildByName ` , ` getChildByNameRecursive ` , and ` getChildrenByName ` to retrieve child elements by name in XML format to
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and its corresponding test in BasicHttpSolrServerTest to ensure
refactor SystemUiController to use a new SystemUiControllerFlags annotation and update UI state management to improve code clarity and maintainability by
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to streamline the code by eliminating unnecessary dependencies
updated the exception message in HiveRecordSet . java to provide more context about the error during Hive split opening to improve debugging by providing more context
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unused variables
rename the backup snapshot configuration from BackupSnapshotAferTakingSnapshot to BackupSnapshotAfterTakingSnapshot to clarify the purpose of the
added score calculation to the merge method in TextFragment . java to ensure that the score does not exceed the defined limits for fragment merging
removed the private Digester field from Md4PasswordEncoder . java to streamline the code by eliminating unused variable
added validation to ensure the maximumUnimprovedStepCount property is greater than or equal to 0 to ensure that the maximumUnimpro
added a check to return early if there are no currently opened editors to improve performance by avoiding unnecessary processing when no editors are open
replaced direct calls to ` verify ` with ` Mockito . verify ` in ` BDDMockito . java ` and added new methods
updated the class loader reference in PathScanner from the current thread to the PathScanner class to ensure the correct class loader is used for improved
refactor ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a ` String ` to enable asynchronous execution of
add logging for abstractsplitbraintrotectiontest ( # 11343 )
added null checks for ` http . logout ` before adding the ` logoutPageGeneratingFilter ` in ` DefaultLoginPageConfigurer ` and `
[ giac ] fix problem with degree ( ) in ca
added logging functionality to DockerComposeContainer and created a corresponding test class to enhance logging capabilities and improve test coverage for DockerComposeContainer
updated the generic type parameter in the testMapping method from ` Class < ? > ` to ` Class < ? > ` to ensure type safety
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to ` ThrowingSupplier ` to provide a convenient way to convert a ` Supplier < T > `
replaced ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure the method returns a boolean value indicating
camel - 14850 : camel - platform - http - add support for end response body in camel - platform - http
added platform - aware path handling methods in MorePaths and updated references in CopyStep and AarWithLibsIntegrationTest to ensure compatibility with different operating systems when working with file paths
added null check for authorizationContext parameters before processing to avoid potential NullPointerExceptions when processing Solr parameters
replace ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` in ` NativeLibraries . java ` to improve error handling by checking if
updated SDK version from " 4611349 " to " 4514284 " and implemented speak and stop functionality in ShadowTextToSpeech
queuetransactionlog : add miss transactionlogkey class to avoid duplicate log entry .
added a boolean property ` enableSqlWithoutProfile ` and its getter / setter in ` JdbcEnvironmentProperties ` , modified ` JdbcEnvironmentRepository `
added a try - finally block around the write operation in ConnectHandler . java to ensure that the _ data is reset even if an exception occurs
fix type inference issue in modloadingstage . createregistry ( )
pdfbox - 4892 : use calendar instead of date , a suggest by valerybokov
updated thread info retrieval methods in ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSet ` classes to include stack trace depth to improve
added a new protected variable ` prevTlogOnPrecommit ` and modified commit logic in ` UpdateLog . java ` , and modified sleep
updated FastAsyncWorldEdit job version from " net / job / FastAsyncWorldEdit - P2 - V6 / " to " net
added directory creation and null check for input path in SegmentGeneratorConfig . java to ensure the output directory is created if it does not already exist
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored its usage in ` TriangulationHelper ` to
updated the ` find ` method in ` JdbcAuditService ` to include ` IdentityZoneHolder ` for retrieving audit events to ensure that the audit
refactor SpanCollector class to improve code organization to enhance maintainability and readability of the code
added a null check for the getCurrSession ( ) method in the AuthorizationFilter class to ensure that the method does not throw a NullPointerException when
refactor TransactionIsolationLevel class for improved transaction management to enhance performance and maintainability of the code
rename method ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to
added thread name setting in TestSession . java to improve debugging by providing context for the current thread ' s remote URL
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
removed unnecessary array creation in LauncherExtension . java and replaced it with an empty ArrayList to streamline the code by eliminating redundant
added a new OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user experience by providing a
refactor hotseat scaling and translation handling in LauncherState and WorkspaceStateTransitionAnimation to improve clarity and functionality of hotseat
added a check to exclude JUnitRule elements from stack trace filtering in DefaultStackTraceCleaner to ensure that only relevant JUnitRule elements are
updated buffer handling in MappedResizeableBuffer to use isDirect ( ) instead of hasArray ( ) to improve clarity and correctness of
refactor balance listener management in DepositListItem . java to use a private variable to improve code readability and maintainability by encapsulating
updated color conversion logic in RealisticRenderer to handle edge mode to ensure correct color representation for non - sticky edges
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and removed redundant redundant lines in multiple test classes to improve code robustness and
remove patternutil . checkpattern ( ) from gl200 decoder
refactor conditional logic in FullDetailsActivity to improve readability and maintainability to enhance code clarity and ensure accurate timing checks for playback events
spanishxmltreereader : add multi - token token support to spanish xml tree reader
added a check to clear the language context if the value is empty in InstallItem . java to ensure proper handling of empty values in the item
updated the ` overrideScheme ` initialization to use secure scheme based on the ` retrievedInstance ` ' s secure status to ensure that the scheme is
[ issue # 5238 ] fix memory leak in defaultmessagestore ( # 5239 )
[ gr - 16536 ] remove final modifier from nativeimagedebuginfoprovider . fullfilepathfromclassname .
replace anonymous inner class with lambda expression in ShadowBackupManagerTest . java to improve code readability and reduce boilerplate code
rename ` isNonUSLanguageSupported ` to ` isNonENLanguageSupported ` across multiple Java files to clarify the purpose of the
simplified null check for redeemData in LocalTransactionSigner . java to improve code readability and maintainability
added minecraftforgeclient . java and minecraftforge . java , and make it compatible with minecraft 1.
added a return statement to the TxCacheDB class to ensure proper termination of the method execution
replaced imports from ` com . sun . xml . internal . ws . objectweb . asm ` with ` jdk . internal . object
refactor FastDictionary class implementation to improve performance and maintainability of the code
improve handling of closed connection in nioconnection . close ( ) .
updated ` FlightEvent ` parameters in ` FlightEventsTest . java ` and modified the ` epsilon ` variable in ` FlightEvent
[ beam - 1862 ] upgrade protobuf to vendored 1.26 . 0 ( # 1862 )
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is added
update instructorfeedbackresultspagedata to use getstudentprofilepictureslink ( ) instead of getprofilepicturelink ( )
added short rules to DefaultPasswordValidator and introduced a test for alphabetic and numeric sequences in DefaultPasswordValidatorTests to enhance password validation by
danielwagnerhall : move capturescreenshottostring command to a separate class to improve code readability and maintainability
removed unused import of JUnit ' s Test annotation from ProxyClassSerializationTest . java to clean up the code and improve readability
updated the scale and padding arguments in DLNAMediaInfo . java to use " thumbnailWidth " and " format = bgr24
replace speculative guard movement phase with canonicalizer phase .
added checks to prevent overriding of the authentication manager bean definition in the AuthenticationManagerBeanDefinitionParser to ensure that the application does not throw exceptions when
updated the handling of forwarded request fields in ForwardedRequestCustomizer . java and added tests in ForwardedRequestCustomizerTest . java to
set the StringBuilder ' s length to zero in ConsoleReader . java to ensure the string builder is properly initialized before use
changed the access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access and override the roles lists
update OpenIDE - Module - Specification - Version and its base version in multiple Java files to ensure compatibility with the latest OpenIDE - Module -
hbase - 20650 set default tls wrap size for hbase - server ( # 3649 )
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
replaced JUnit ' s TestCase with JUnit ' s Test and added new test cases in FixedLengthTokenizerTests . java to improve
refactor OpenSamlAuthenticationRequestFactory to use a configurable protocol binding URI instead of a hardcoded value to improve flexibility in configuring SAML
refactor SurfaceControl transaction handling in DepthController . java to utilize AttachedSurfaceControl for better transaction management
updated version return value in AsciidoctorConventions . java from " main " to " 2.5 . x " to ensure
hbase - 21756 change accesscontroller . prepreparebulkload and accesscontroller . precleanupbulkload from write to create ( #
updated the subList method calls in TsFileManagement . java and modified measurement schemas in MergeMultiChunkTask . java and MergeTaskTest . java
camel - 16400 : camel - file : add support for java . io . file to fileinputstream on camel - core .
added a login method to the ShardManager interface and modified the DefaultShardManagerBuilder to conditionally call the login method based on a login parameter
removed unnecessary whitespace in the DeleteGlobalRef method call to improve code readability and maintain consistency
rename the table " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of the table
modified response completion handling in HttpSender . java to check if the completion is marked before processing the failure to improve error handling by avoiding unnecessary
added a condition to check if the student is a student before verifying the response ' s giver team to ensure that the response is only
added checks for linked profile permissions and platform - specific configurations in BMPImageReader . java to enhance security by restricting access to
corrected a syntax error in the setSimpleCuboid method calls in ClassicPlotManager . java to improve code readability and maintain consistency
added wait message for PMD status and refactored action handling in PMDOpenTool . java to improve user experience by ensuring PMD
refactor grid size handling in StdGridFragment to use a dedicated method for setting grid sizes to improve code readability and maintainability by encaps
updated return values from false to true in ContributionsListFragment . java to reflect the correct functionality of the method
added a testSkipRange method to DistinctPrefixFilterIT . java and modified the query handling in BaseResultIterators . java to improve
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to enable retrieval of the last modified timestamp for
added a validation check for the " metaTable " property in the HiveIcebergStorageHandler to ensure that only valid metadata tables are processed
add support for default currency selection in cashdepositform
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all types of exceptions
added a boolean flag ` mStartedEnterAnimation ` and modified the animation handling logic in ` IconRecentsView . java ` to improve task
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to store the configuration of the active key identifier
updated action labels and method names in SendMailActions for better clarity and consistency to enhance code readability and maintainability by using descriptive
changed the ` isActive ` variable to be volatile in ` SocketServer . java ` to ensure thread safety when accessing the ` isActive ` variable
updated method names from ` isDesc ( ) ` to ` isAsc ( ) ` in multiple files to clarify that the query is
fix for ggb - 1342 : make sure string . tostring ( ) do n ' t cast to charsequence
added a check for the OWNCLOUD _ APP _ NAME in the date validation logic to ensure that the app ' s name matches the
hbase - 11383 add a check for kerberos authentication before create the root dir .
update method calls from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServlet
refactor Instant class to improve readability to enhance maintainability and facilitate future updates
updated state format handling in collectionsHandler , ExternalCollectionsTest , and AbstractFullDistribZkTestBase to return String instead of int to
removed the type variable from the log statement in CentralAuthenticationServiceImpl . java and modified the type check in AbstractTicket . java to simplify
pdfbox - 4892 : ignore illegalargumentexception , a suggest by valerybokov
updated the file check condition in AbstractFileResourceSet . java to ensure proper file validation before processing
[ mng - 7012 ] fix path translation for plugin parameter
[ beam - 10663 ] move protobuf coder to extension package .
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer . java and added a new test for handling signed numeric literals
updated LaunchLugHandler and RailGuideHandler to include a parentLength parameter for setting instance count and separation to enhance functionality by allowing
removed the implementation of the getNonceFactory method in BitmexStreamingExchange to streamline the code by eliminating unnecessary implementation
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] use default timer interval in driverconductortest .
changed the default value of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` ScanSpec . java ` to disable loading
added focus management for the search field in FullTextSearchPanel . java to improve user experience by ensuring the search field receives focus when necessary
refactor NioParams initialization in TlsConnectionLogging . java for clarity to improve readability and maintainability of the code
updated the assertion in StatementTest . java to check for random values to improve test reliability and clarity
updated the assertion message in TestSolrConfigHandler . java to include the expected and actual server URLs to improve clarity and accuracy of error reporting
updated ` CsrfWebFilterTests ` to use ` ServerHttpRequest ` and ` ServerWebExchange ` instead of ` HttpMethod ` to improve
added import for Filters . Density and modified drawable string formatting in FilterResourcesStep . java to improve accuracy of drawable string representation based on the
added a private method to retrieve the button UIID and updated UIID updates accordingly to improve code readability and maintainability by centralizing UI
removed the import of DisplayMetrics and updated the rotation condition in RecentsAnimationDeviceState . java to simplify the condition for better readability
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java to implement tests for array
added import for LuceneTestCase and annotated the ReplicationFactorTest class with @ AwaitsFix to address issue SOLR - 6157
fixed - npe in redissonexecutorservice . scheduleasync ( ) if nextstartdate be null
simplified the condition for determining if to update credentials in FileDownloader and FileUploader classes to improve code readability and maintainability by
updated file scanner initialization and closing logic in Compactor . java to ensure proper resource management and avoid potential memory leaks
updated NetMetrics to use getOrDefault for both received byte , sent bytes , and sent packets to ensure default values are set to zero for better
added nonce parameter and claims retrieval for token claims in TokenMvcMockTests . java to ensure that the token claims accurately reflect the intended nonce
renamed multiple chart editor classes for consistency to improve clarity and maintainability of the codebase
added width and height settings for formLayeredPane in Form . java to ensure proper layout management for the form layered pane
added maxY method to BrowserContentPane to calculate the maximum height based on the owner ' s height
modified the ` openDatabase ( ) ` and ` openSharedDatabase ( ) ` methods to return a boolean indicating whether the database is connected to
rename DOCKER _ COMMAND to Platform . DOCKER _ COMMAND in DockerTestUtils . java and add it in Platform . java to
added a null check for the input stream before processing in the initializeParameters method to improve robustness by handling cases where the input file is missing
added a color parameter to the drawLeaveBehind method in TaskbarView and CellLayout classes to allow customization of the folder leave behind
report an error if the plugin do n ' t work with canary version of android studio
api : check for null table name before call identityproxy . getuuid ( )
added methods for enabling and disabling modules in StartArgs . java to enable and disable modules in the application
updated argument validation logic and improved error messaging in GeminiMarketDataService . java to ensure that the last trade time argument is
changed HashSet to LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure consistent iteration order of questions in the flow scope
add a testerresponse and testrealmbase class for unit test
added multiple JSP files to the exclude list in AuthCheckFilter . java to exclude specific setup settings from the authentication check
added a flag to track if a post - delayed task is executed and refactored the runnable execution logic to improve efficiency by avoiding unnecessary
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to use varargs instead of arrays to
refactor XML parsing logic to handle end - of - stream conditions to improve error handling by ensuring end - of - stream is encountered when reading
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address issues with overflow
added pivot position adjustments for the arrow in DeepShortcutsContainer . java to improve the visual appearance of the arrow based on its icon
fix checkstyle issue in ` ` jabref / jabref / jabref / main ' ' and ` ` jabref
refactor ` AbsSwipeUpHandler ` and ` RecentsView ` to include a ` refreshView ` parameter for thumbnail updates to
pdfbox - 2576 : use class name instead of class name , a suggest by valerybokov
updated InternetAddress instantiation and improved hostname validation in EmailFormatSpecifier . java and HostnameFormatSpecifier . java to enhance error handling and ensure valid
replaced usage of ` this ` references with direct calls to ` this ` in multiple activity classes to simplify code and improve readability by redu
updated ` SizeBasedDocIdIterator ` to use ` _ maxDocId ` instead of ` _ totalDocs ` and modified ` next `
modified the ` promptToOpenFile ` method to accept an additional ` existingFileName ` parameter and updated the logic for setting the current directory to
updated widget and app page counts handling in AppsCustomizePagedView . java to improve responsiveness and maintainability of widget and
refactor FlightConfiguration to improve coordinate handling for active components and update expected length in FlightConfigurationTest to enhance accuracy of the flight configuration
( chore ) camel - micromemter : use direct endpoint instead of seda endpoint
updated DateTimeFormatter to use Locale . ROOT for date formatting to ensure consistent date formatting across different locales
filter out hidden metadata in the response to the user
added a test for missing required dimensions and metrics in StarTreeConfig to ensure that the StarTreeConfig correctly handles missing dimensions and metrics
camel - 16400 : added integration test for dynamic and static recipient list
refactor InlineLayoutBox to iterate through parent boxes and update HoverListener to utilize PaintingInfo for repainting to improve layout handling and
replaced the detection of authentication method with service - based operations in AuthenticatorActivity to enhance the authentication process by integrating operations service functionality
