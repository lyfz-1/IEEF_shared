refactor SocketAppender initialization to use setter methods for remote host and port to improve clarity and maintainability of the socket configuration
refactor prompt header handling in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability
updated message length retrieval in ManyToOneRingBuffer . java to ensure consistency in message length handling
server : fix npe in capacitymanagerimpl when vm detail cpu / ram be null
added a flags field and modified the constructor and getter methods in ShadowPaint . java , and updated test cases in PaintTest . java to use
updated the title in MassSetFieldsDialog from a hardcoded string to a localized string to improve user experience by providing a more descriptive
test : make sure eclipse be not use to compile the project
do n ' t throw an exception when the realm do n ' t have a scheme
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to utilize it for handling connection events to improve the
reformatted conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
updated filtering logic in HomeConnectBridgeHandler to check if the thing is enabled before proceeding to ensure that only enabled items are processed in the
added null checks before removing and adding policies in AuthorizeAdminServlet to prevent potential NullPointerExceptions during policy management
updated assertions in tests to use ` matches ( ) ` instead of ` isEqualTo ( ) ` for JSON serialization to improve clarity and consistency
added JSON serialization for context and description in TezTask . java to provide detailed context information for debugging purposes
updated time retrieval logic in ` ComputedSummary . java ` and added ` getHeapTime ` method in ` HprofHeap . java `
replaced RxJava2Tasks with CommonsApplication for retrieving upload count and refactored the upload count retrieval method to improve code maintainability and
remove lock _ mode _ read _ committed check from mvtable . lock ( )
[ issue # 5868 ] make defaultmessagestore . gettimestamp ( ) always return timestamp ( # 5869 )
added a check to ensure the folder info is not open when it is not already open to improve error handling and prevent unintended actions on
added a test method to verify sorting of PGProperty names to ensure that PGProperty names are consistent in ascending order
added a constant ` HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN ` to the ` Common ` class
changed the type of the ` supportsDrop ` and ` getUninstallTarget ` methods from ` Object ` to ` ItemInfo ` to improve type
updated assertion in RequestBuilderTest to use getMessage ( ) instead of hasMessage to improve clarity and accuracy of error message validation
refactor NearbyActivity to utilize NearbyListFragment instead of a generic RetainedFragment to improve fragment management and enhance code
[ java ] fix npe when free profile container .
added a boolean field ` sendZeroAnomalyEmail ` to ` EmailConfiguration ` and its getter / setter in ` EmailReportJob ` to
[ hotfix ] [ kafka ] fix checkstyle violation in flinkkafkaconsumerbase
added methods to retrieve user and geofence data in DataManager . java to enhance functionality by allowing retrieval of user and geofence data
added a constructor to BlockingResponseListener that accepts a maximum length to provide flexibility in configuring the maximum length for processing requests
change the parameter type of mcastservice . memberbroadcastsreceived and mcastservice . memberbroadcastsreceived from xbytebuffer to byte
replaced System . out . println with logger . info and added a try - finally block for resource cleanup to improve logging and ensure proper resource
updated the URL format in the assertion statements in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistency in URL formatting across test cases
rename ConfigMetadataProviderTest . java file to clarify the purpose of the test class
updated import statements in ListFragment and modified the updateNoteReminder method to use ' this ' keyword instead of ' note ' to improve cl
added a private static class AcceptAllFilter to streamline directory stream filtering to improve code readability and maintainability by encapsulating the filtering logic
refactor JdbcTestDataSet class to improve code readability and maintainability
[ gr - 21212 ] fix classnotfoundexception in jvmci . lookuptype ( ) .
added validation logic for Docker image names in GenericContainer . java and created DockerImageName . java and DockerImageNameTest . java to ensure valid Docker
updated error messages for failed username and password in LoginActivity to improve clarity of error reporting for incorrect credentials
added ` setAutofocus ( " autofocus " ) ` method to multiple form classes to improve security by preventing interaction with sensitive data
add unit tests for SamlConfig in SamlIDPRefreshMockMvcTests . java to ensure proper handling of SAML identity zones with different
added logic to handle non - empty and non - digit lists in ComparableVersion . java and introduced a new test method in ComparableVersionTest .
updated bottom mode and margin properties in Sheet . java and added padding and margin properties in UIManager . java to improve layout responsiveness and
moved ` ParallelUniverse ` and ` ParallelUniverseTest ` to the ` internal ` package and updated imports accordingly to better organize
refactor method invocation in LocalCacheFactory and NodeFactory to use a constant for method return type to improve code readability and maintainability by
change fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve consistency in
added functionality to draw self loops and edges in the ProcessingPreview class to enhance graph visualization by providing a visual representation of self loops
updated configuration and method names from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLID
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity by accurately reflecting
added a line to reset the vertical position of the drag handle indicator to improve the visual appearance of the drag handle indicator during transitions
removed unnecessary log statements in CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging and improve code readability
updated the documentation for pushing predicates in HiveConf . java to clarify that filters may be pushed down in the operator tree to improve
added an assumption to skip the test in ScanningAppProviderRuntimeUpdatesTest due to OS issues to address issues related to the build server when
added Maven bundles for " jetty - alpn - java - client " and " jetty - alpn - client " in TestJ
act - 113 : added optimisticlocking to executionmanager . executeasync ( commandcontext )
refactor Transaction class to improve code readability and maintainability
replaced @ CustomFieldBehavior with @ ExcludeFromRuleKey in GenruleBuildable . java to exclude certain genrule execution from caching to
added ` whichExec ` method to ` AsyncExecute ` and modified ` FirefoxCustomProfileLauncher ` to utilize it to enable dynamic execution of
added a check to prevent duplicate entries in the colFamToDynamicColumnsMapping map to ensure that only unique entries are added to the map
[ hotfix ] [ test ] remove rawtypes suppression in hadoopoutputcollector
added logic to retrieve and update views based on client version in MetaDataEndpointImpl . java to ensure proper handling of views based on client version and
fix issue where student id be not update when delete a student
updated import statements in AllXSSFTests . java to use TestCellReference instead of TestCellReference to align with the updated project structure
added hardness check to the block check in LensPiston . java to ensure that only valid block blocks are considered for obsid
added a new file LongPointerPressTest3049 . java to implement a network error dialog with network error handling to demonstrate
truffle : remove trufflecompileroptions . getvalue ( ) from partialevaluator .
refactor null checks to a ternary operator in BaseBuilder and XMLConfigBuilder classes to improve code readability and reduce duplication
simplified the indentation check in ListBlockParser and added a new test for deeplyIndentedList rendering in SpecialInputTest to improve code
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve code reusability and
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to mark the test as un - ignored due to issue # 1070
[ wasm ] make testcase . savemessage public again .
updated the closing brace formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the video format is a video before proceeding to ensure compatibility with video formats during playback
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to improve security by preventing unnecessary algorithms from being used
server : do n ' t allow vm creation if the storage pool be in local scope .
updated cache entry retrieval and logging format in Driver . java and QueryResultsCache . java to improve clarity of log messages and enhance readability
added a skipModelUpdate option to manage dependencies and updated related logic to prevent updates to the POM when managing dependencies
added a test for the ` getLastIntentSenderRequest ` method in ` ShadowActivityTest ` and implemented the ` send ` method in ` Shadow
replaced GLJPanel and GLCanvas initialization with GL - enabling FBO and GL - disabling FBO , and refactored
added synchronization to the controllerListeners list and introduced a dispose method in HydrawiseControllerHandler to ensure thread safety when modifying the list of listeners
solr - 9893 : disable EasyMock for Java 9 compatibility
updated year retrieval method in TimestampUtils and refactored date formatting in SetObject310Test to improve accuracy of year representation and enhance read
fix possible npe when stop jabber connection .
updated the column name from " committed . ws _ table " to " cur _ ws _ commit _ id cur _ ws _ commit _ id
replaced ByteChunk with ByteBuffer in BufferedInputFilter . java to optimize memory usage and improve performance
added a new method ` toSync ` to ` AsyncUtils ` for converting a ` CompletableFuture < T > ` to a ` CompletableFuture < T
added ActionGraphBuilder to various compiler factory classes and updated method signatures accordingly to enhance functionality by integrating ActionGraphBuilder in the compilation process
danielwagnerhall : add a test for handling hidden file input in upload
removed redundant try - catch block for creating tables in SQLManager . java to streamline error handling and improve code readability
added a check to return the local Maven directory if the file does not exist to ensure that the method returns the correct directory when the file is
bugfix : hide algebra label in desktop
fix : fix npe in ctelementimpl . getmetadata ( ) .
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG
added a condition to check if the cached is not sorted by ID in the reordering logic to ensure that reordering only occurs when the cached
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) " to cl
added null check for backupFolder before logging the expiration message to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates the use of ` java . lang . reflect .
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler and GccCompiler classes to ensure that the ToolType field
replaced hardcoded timeout values with a constant PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability by
add isampled ( ) method that return true for prometheus
removed @ Ignore annotations from multiple test classes to streamline test execution by eliminating unnecessary tests
remove unnecessary cast to jmsconnection in consumeuncompressedmessagetest
updated the condition to check if the table name is not artifical to ensure that only non - artificial tables are processed as valid
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to ensure correct
refactor session attribute handling to check for null or empty attributes before processing to improve robustness of session attribute management and prevent potential NullPointerExceptions
replaced the method ` setFixedSize ( ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java ` to
refactor stopping logic in AbstractConnector to use CountDownLatch for thread - safe counting to improve code readability and avoid potential null pointer exceptions
removed unnecessary whitespace from method parameters in HuobiStreamingService . java to improve code readability and maintain consistency
( chore ) camel - core : avoid use deprecated stopwatch
[ hotfix ] [ test ] fix timing issue in delayedmonopublishertest
replace assertTrue with a conditional check for WebSocketHandshakeException to improve error handling by providing a more informative failure message
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener directly to simplify layout change handling and improve code readability
refactor variable names from ' theHandler ' to ' handler ' for clarity to enhance code readability and maintain consistency in naming conventions
int - 1421 added support for ' default - output - channel ' attribute on < xpath - router > element
changed ` cacheSeconds ` from an ` int ` to a ` String ` and updated its usage in ` MessageBundleProperties ` and ` Cas
updated openapi version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to
removed the append method call from ByteBufferPool . java to streamline buffer handling for improved performance
added a check for the presence of " alt - rt . jar " in the boot class path to improve error handling and provide a warning message
updated test cases in JdbcScimUserProvisioningTests to use user names and their upper case to ensure consistency in user identification across different scenarios
updated imports and modified the return statement in FlightRecorderProfiler . java to use ArrayList and add conditional options for Java version 1.7 to
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view is not empty in HttpParser . java and implemented a new test case in ProxyServletTest .
fix typo find by codespell on fossies . org
updated conditional checks for " println " , " printf " , and " print " methods in Java2TypeScriptAdapter . java to ensure proper
added a new file ` TestCapacityUntilGCWrapAround . java ` and a native method ` incMetaspaceCapacityUntilGC ( ) `
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the end time calculation in the SamplingStatCalculator class to accurately calculate the end time based on the resource ' s timestamp
added unit test base on user forum issue
do n ' t throw exception if icc _ profile ' chunk count or icc _ profile ' chunk index do n ' t match
fix the rod of the sky be able to be reequip . close # 389
updated bindings in JoobyModule , SpringModule , and JoobyExtension to handle configuration and environment beans more efficiently to
use container . getparentclassloader ( ) . getparentclassloader ( ) instead of thread . getcontextclassloader ( ) . get
make nameupdater more resilient to miss ' nameupdater . properties '
stop ellipsoidregionselector from start if it do n ' t start
replaced instances of " http " with " https " in the JavaSEPort . java file and added a default Codename One com
[ geos - 7011 ] validate sortby attribute before use it in getfeature
updated null check for grantor assignment in AbstractJdbc2DatabaseMetaData . java to improve code clarity and prevent potential NullPointerExceptions
added graphics - related imports and modified image comparison logic in DiagramGenerationTest . java to enhance image handling and ensure compatibility during drawing operations
fix npe in fmlcommonhandler # getminecraftlogger if sideddelegate be null .
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
make the locktest more tolerant to slow machine
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenization and concatenation to enhance string manipulation capabilities for
use response . sendError ( 404 ) instead of response . setStatus ( 404 ) .
refactor command parsing and highlighting logic in SystemHighlighter . java to improve command handling and enhance command highlighting accuracy
updated version and version date to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to prepare for a
updated the position parameter in StarTreeRecordStoreCircularBufferImpl . java from ' idx ' to ' dimensionSize ' to ensure the buffer
added support for drag - and - drop functionality in the QuickstepTestInformationHandler and SystemUiProxy classes to enhance drag - and - drop
log4j2 - 1343 fix test that fail on java 7
added PSK - AES256 - GCM - SHA384 + TLSv1.2 cipher to TestCipher . java to enhance security features
updated description text retrieval from place . getDescription ( ) to place . getLongDescription ( ) to ensure accurate representation of place data
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of the ' value ' field
refactor HqlQueryRenderer to utilize a list for reserved words and improve query parsing to enhance readability and maintainability of reserved word
updated the error message from " d is null " to " s is null " in ObjectHelper . requireNonNull to provide clearer context for the
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
updated the ` offsetStreamIndex ` method to include a new parameter ` indexStartsAtOne ` and adjusted its logic accordingly to enhance functionality by
tika - 697 : fix magic detector to correctly detect . cpio file .
[ hotfix ] [ table - planner ] remove flinkoperatortable # getmonotonicity ( )
added JPA @ Inheritance annotations and implemented equals and hashCode methods in OneTimeTokenAccount and OneTimeToken classes to enable table - based
added a condition to check if the assistant has not been launched before fling to ensure fling only occurs when the assistant is not launched
added a new file SolarisShortDSA . java that implements a test for DSA key pair generation and verification to address Sol
added a method call to toggle the search label in the ListFragment to improve user experience by disabling search functionality
server : use lock instead of find to lock volume during snapshot creation
replaced the existing ServiceConnection instance with a new DetailsServiceConnection class for better management of service connections to improve code clarity and ensure proper
refactor error handling in HttpClientTLSTest to use AtomicReference for better clarity to improve readability and maintainability of the failure management
removed the equals method from the ConjunctionScorer class to simplify the comparison logic for Scorer objects
added a null check for the variable ` v ` in the ` bindItems ` method to handle potential null pointer exceptions during item binding
fix race between member add and remove operation ( # 11933 )
log a warning if the cache be full .
updated API endpoint from v2 to v3 and added new fields for type and currency in CryptoFacilitiesAccountInfo and related classes to align
added a method ` empty ( ) ` to the ` freenect2 ` class to provide a utility for checking if the freenect
added null handling for page data in AsyncPageReader and updated test annotations in TestEmptyParquet and TestDrillParquet to improve resource
updated argument handling and modified channel name construction in SerumStreamingService . java to improve input validation and provide clearer messaging for subscription types
add a config option to disable the charging animation in the mana pool .
[ java ] make cluster node restart test more robust .
( chore ) camel - wait : fix checkstyle issue
updated assertions in DefaultServletTest to use assumeTrue for directory checks to improve clarity and maintainability of test cases
removed redundant injection of dialog and open screen styles in ResourcesInjectorFull . java to streamline code by eliminating unnecessary complexity
refactor ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for
updated equality check in BlockWorldVector to use getter methods instead of object properties to improve code readability and maintainability by using getter methods
changed the access modifier of the CacheEntry class from private to private final and added a TODO comment to clarify the purpose of the class and
replaced the ` singleElement ` method with a ` regex ` for string literals in ` ReflectionProcessor . java ` to ensure proper handling of
updated FileCredentialsCache to handle KRB5CCNAME environment variable and modified EmptyCC to accept command - line arguments for the KRB5
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
p2p : increase the default fast sync max peer count to 3 minute ( # 1193 )
danielwagnerhall : fix checkstyle issue in util / webdriver / webdriver - servlets / webdriverservlet . java
bugfix : do n ' t expand ' areequal [ segment [ x , y ] , segment [ x , z ] format expression
added a check to clear pending rendering operations if it exceeds the maximum allowed size to ensure that pending rendering operations are properly managed when the minim
fix spurious failure in hazelcasttestsupport # sleep
fix for write - behind issue [ hz - 3034 ] ( # 21781 )
added functionality to clear the icon of a JLabel in GroupTreeCellRenderer to improve user interface clarity by disabling unnecessary space representation
updated test methods to use ` setStrictMatch ( false ) ` instead of ` setStrictMatch ( true ) ` to clarify that
added new imports and refactored test methods in ShutdownMonitorTest . java for improved clarity and functionality to enhance test coverage and ensure
updated the fill rate calculation logic in RandomAccessStore . java to improve clarity and correctness of the fill rate comparison logic
refactor type handling in Json . java to use a local variable for clarity to improve code readability and maintainability
[ hotfix ] [ runtime ] move componentclosingutils to runtime . operators . coordination
server : clean up volume on snapshot creation failure
server : fix ipv6 ipv6 range issue ( # 5239 )
rename ` userDetails ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` and update related references to improve clarity
increased the timeout duration for the leader retry from 15 seconds to 30 seconds to allow for a longer wait time for the leader to become
refactor ` errorMessage ` methods to remove the ` String input ` parameter and add logging for invalid input messages to improve error handling clarity and
update drawing coordinates in URLImage . java to use negative values to ensure correct positioning of image elements
updated field name comparison in SolrTestCaseJ4 from solrDocument1 to solrDocument2 to ensure consistency in field names comparison between documents
mondrian : fix for bug 2666196 , which involve performance degradation when non - highcardinality set be evaluate .
updated StreamTaskException to include the exception as a second parameter to improve error handling by capturing the cause of the exception
refactor tag parsing logic in Preprocess . java for improved clarity and efficiency to enhance readability and efficiency of tag processing
reformatted the read method in MessagePack . java for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a mechanism for defining
do n ' t encode empty extension list in json parser
update artifact extraction logic to handle special characters and improve artifact management to enhance robustness by ensuring only valid internal names are processed
added an alias " node _ popup _ scripting " to the entryNavigator in ScriptingMenuEntryVisitor . java to improve clarity and
updated constants and modified animation logic in OverviewActionsView and RecentsView classes to improve UI responsiveness and user experience on tablet
camel - jms : jmsproducer should use getout ( ) instead of getout ( )
[ hotfix ] remove useless ` ` throws ioexception ' ' declaration
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove obsolete code that is no longer needed
updated ` GzipHandlerTest ` to use ` final ` for the ` __ content ` variable and added a new ` MicroServlet ` for handling
updated the method to retrieve consumer capacity using ` BackpressureUtils . getAndAddRequest ` and modified import statements in ` OnSubscribeRedo .
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and provide clearer insights during component
add a new servlet to load dspace . oai . config from servletcontext . dspace - config . xml
hbase - 11321 improve performance of kvscanners . scan ( )
( chore ) camel - test - infra : enable / disable jmx by default
replaced hardcoded ' / ' with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java ` and
added functionality to retrieve and print YARN and YARN applications in Hive configurations to enhance application monitoring capabilities for Spark applications
updated database type check to include " maria " alongside " mysql " to support additional database types
hbase - 15921 masterwalmanager . splitlogmanager # log ( string , string ) should not print ' - 1 '
added a new file ` ExecuteAndReturnStringTest . java ` to implement network error handling in a browser component to facilitate testing
added a new file ` InvokespecialInterface . java ` implementing an interface and demonstrating its behavior to demonstrate the
refactor EvictingBoundedList class to improve code readability and maintainability
do n ' t set edge _ base _ 2dir if turncosts = true
added null check for backgroundDisabled and validation for selection in SelectBox . java to ensure proper handling of disabled states and prevent invalid selection values
added a null check for the ` md ` variable in ` RpcServer . java ` to throw an ` UnsupportedOperationException ` when ` md ` is
updated the calculation of hotseatCellSize and hotseatIconCenter to include border spacing to improve the visual appearance of the hot
replaced the method of obtaining partition name and value in ExpressionTree . java to simplify code and improve readability by using a more direct
fix serialization of namedtaskdecorator v4 _ 1 field
updated the retrieval of the index directory from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is
changed the default value of the ` equal ` variable from ` false ` to ` true ` and updated its assignment logic to ensure that display mode
replaced UnicodeToLatexFormatter with a conditional check for non - BMP codepoints and updated HTMLUnicodeConversionMaps to include additional characters
added handling for ISO control characters in OAIDCCrosswalk . java and improved null handling in Item . java to ensure consistent handling
simonstewart : make the selenium - backed selenium implementation more robust
added a clear action button to the DataBrowser for clearing all tables and modified the condition in StringSearchPanel to enhance user experience by providing a
updated the way the base URL is constructed in OAuth2AuthorizationRequestRedirectFilter to utilize UrlUtils for URL construction to improve URL handling and
updated date parsing and assertion messages in SoftAssertionsTest . java to improve accuracy of date comparisons and enhance assertion clarity
modified the ` adaptOrders ` method to include a ` reverse ` parameter for order adaptation to enhance flexibility in order adaptation by allowing
delombok now print ' var ' if type variable be not find .
danielwagnerhall : unignoring some test for now
updated Configuration instantiation to initialize with a default value and added a debug log statement to enhance configuration flexibility by allowing customizable default values
replaced ` drawChildren ` with ` draw ` in ` WidgetGroup . java ` to standardize method name for better clarity and consistency
added unit test base on user forum issue
refactor to use context . getcatinabase ( ) instead of system . getproperty ( )
added unit tests for the best date - time pattern in ShadowICUTest . java and modified the logic in ShadowICU . java to
added information style to the object map and implemented color codes for left and right rows to enhance the visual representation of plot interactions in the application
added ZuulProperties support to the TraceRestClientRibbonCommandFactory and its usage in TraceZuulAutoConfiguration to enhance functionality
tika - 3748 -- add unit test for fontparsers ; fix unit test
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) `
updated the calculation of ` xDist ` to use ` Math . abs ( ) ` instead of casting to ` mScroller ` to ensure
remove guirwtester . java since it be not use anymore .
removed nullable annotations from method parameters in LazyMessage and StandardSubjectBuilder classes to simplify method signatures by eliminating unnecessary null checks
updated error message format in TestStream . java to include a placeholder to improve clarity of error messages for better debugging
move templateparser from org . thymeleaf . templateparser to org . thymeleaf . templateparser . markup to make it
added a test method for XPath parsing in XPathTest . java and updated XPath evaluation in XPathTest . java to ensure correct parsing of XPath strings
added @ Nullable annotation to FutureUtils . java to enhance code clarity by indicating nullable parameters
add a warning when invokedynamic be not resolve in call graph construction .
updated email addresses from " @ gmail . com " to " myfakeemail @ example . com " in ContextTest . java to ensure
updated error message from " BAD _ ENCODING " to " 200 " in HttpConnectionTest . java and changed URI comparison logic in URIUtil .
implemented the ` getColumnDataType ` method in ` AbstractResultSet ` and ` ResultTableResultSet ` classes to provide a standardized way to retrieve column
( chore ) camel - aws : make the service . clientconfiguration ( ) method default to the default implementation
refactor HSSFPictureData class to improve code readability and maintainability
replaced ` long ` and ` long ` types with ` Instant ` and ` Duration ` for better time representation to improve code readability and
added version handling and improved debug logging in LibMediaInfoParser . java to enhance compatibility with MediaInfoLib versioning and provide clearer
removed reflection - based proxy creation for IdeaDependency in ProjectReader . java to streamline dependency management by eliminating unnecessary proxy creation
added a new class ` SerialHeap ` and updated references to use it to improve code organization and clarify the purpose of the heap mapping
added multiple @ SuppressWarnings ( " serial " ) annotations to GsonTypes . java to suppress serialization warnings for better code clarity and maintainability
replace mouse . getposition ( ) with mouse . getposition ( ) in the mouse wheel
datamongo - 1608 - fix nullpointerexception in findfirstnameignorecase ( )
[ hotfix ] [ table - common ] add multisettypeinfo to maptypeinfo
added a method to retrieve identity providers by their issuer in XOAuthProviderConfigurator to enhance error handling for incorrect provider retrieval based on issuer
pdfbox - 4892 : add support for parse cmap file with poor whitespace
refactor ContactsBackupJob to use a ServiceConnection for managing file expiration and operations management to improve code maintainability and ensure proper management of
refactor type constraints and introduce new classes T6938454a and T6938454b for improved type handling to enhance type
re - add is _ account _ config _ hidden flag to accountlist . is _ account _ config _ hidden .
added a check to log an error if the number of supported display bounds matches the number of supported display states to ensure the application does not exceed
replaced ` SchemaUtil . getSchemaKey ( ) ` with ` schema . getSchemaKey ( ) ` in ` PMetaDataImpl . java `
make sure passive login work in web
added Box2DTest class and updated GDXTester and Box2DTest files to include it to enable testing of Box2D graphics
add more debug log around index apply ( patch by jbellis )
[ hotfix ] [ network ] set default buffer request timeout to 5 minute
doc ( regen ) : update sample code to set total timeout , add api client header test
added a help button to the OpenOfficePanel to enhance user experience by providing access to the help page
[ java ] add child option for tcp _ nodelay .
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceFundingHistoryParams to use wildcard generics to improve type
refactor class loading logic to use a transient class reference to improve performance by avoiding repeated class loading operations
move connection . connect ( ) outside of try / catch block .
add support for querydsl ' s sort . nullhandling
added null check for actor in ParallelAction and modified index comparison logic in SequenceAction to enhance robustness by preventing null pointer exceptions during action
test ( refactor ) : fix checkstyle violation in cttypetest
added synchronization around the iteration over sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its implementation ` JJ ` and ` JK ` , and created a
added certificate revocation functionality in CertificateManager and a corresponding test in CertGenerationTest to enhance certificate management capabilities and ensure proper error handling during agent certificate
added handling for HTTP / 1.1 responses without body codes in AbstractHttpTest . java and implemented a test in HttpServerTestBase . java
added error handling for script engine loading in ScriptTransformer . java to improve robustness by providing clearer error messages for unsupported scripts
added support for Hikari connection pooling type in Hive configuration to enhance database connection management and improve error handling
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file lock and unlock functionality in the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing users to toggle file locking
updated versioning logic in mmm Version . java and ppp Version . java to ensure consistent versioning across the application
clear endpoint cache when update keyspace
refactor synchronization logic by introducing a new private method ` waitForState ` to improve code readability and reduce duplication in waiting logic
updated methods in SkylarkDescription and SkylarkRuleContext to use SkylarkRuleContextAttr instead of separate method
michaeltamm : move storage interface to a base base class to make it easy to subclass the storage interface
fix npe when create or replace view ( # 11931 )
changed exception handling from catching Exception to catching Throwable in SegmentGenerationJobRunner . java to improve error handling and provide more informative error
updated the method of retrieving the ' q ' parameter in SpellCheckComponent . java to ensure the correct query is retrieved based on the request
added validation for header values in Headers . java to ensure only valid characters are processed and improve error handling
replace instanceSize with arrayBaseOffset in HybridLayout . java and add afterFieldsOffset in HostedInstanceClass . java to improve cl
change apexcommentcontainer to extend abstractapexcommentcontainernode instead of astcommentcontainer
hhh - 16400 : log warn about lazy association with @ fetch ( fetchtype . join | fetchtype . lazy )
refactor filters to extend ` AbstractSpecFilter ` instead of implementing ` SwaggerSpecFilter ` to enhance code reusability and maintainability by
added database and table name assertions in TestCompactionTxnHandler and updated database and table name settings in TxnHandler to ensure correct database and table
camel - 1640 : added support for graceful shutdown to the timer component . thanks to jonathan
added a check to ensure the trace is only added if the block is not processed before adding it to the work list to avoid adding duplicate traces
updated null check in ProviderManager to use CollectionUtils for checking providers to improve robustness of provider validation logic
simplified the database version check in InsertOrUpdateGeneratorPostgres . java to improve code readability and reduce unnecessary complexity
added tests for local index limit functionality in LocalIndexIT . java and updated related classes to handle local index limit handling to improve test coverage and
added validation to prevent adding a collection with the same name and type in AlterTableStatement . java to ensure that collections with the same name
updated cursor positioning logic in VDUBuffer . java and modified cursor handling in vt320 . java to improve responsiveness to screen changes
added a static final String USE _ RETRIES with a value of " useRetries " in HttpShardHandlerFactory . java to provide a
updated the VERSION _ NUMBER regex in JavaVersion . java and added a test case in TestJavaVersion . java to ensure accurate version number parsing
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no gates are available
added a JUnit test annotation to the TestReceivingMessageSourceParserTests class to ensure proper testing of message source parsing functionality
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when accessing properties
updated IOException handling to initialize the cause instead of throwing it directly to improve error reporting by capturing the cause of the IOException
updated error message formatting in multiple Java files to improve clarity and consistency in error reporting
added a TxConfidenceListener to manage transaction confidence updates and removed it from the wallet service to ensure proper transaction confidence updates when a listener is
[ netbeans - 44 ] add ` ` perm gen ' ' to the list of supported perm gen in jmx
removed unused imports and simplified return statement in NearbyController . java to improve code readability and maintainability
pdfbox - 4892 : make class public , a suggest by valerybokov
added checks for home activity type in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activity types during swipe up animations
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and modified variable names for clarity to improve code readability
updated test methods in ShadowTelephonyManagerTest to include case handling for network and sim country ISO to improve test clarity and ensure consistent
remove setUnfreezeAmount call from UnfreezeBalanceV2Actuator . java to streamline the code by eliminating unnecessary duplication
updated the description for published timeslot and room from " per minute " to " per match " to clarify the purpose of the description
danielwagnerhall : replace files . copy with fileutils . copydirectory in firefoxprofile
refactor assertion classes for consistency and clarity to improve maintainability and readability of the assertion framework
2 . x : fix javadocs for addobservable ( ) and removeobservable ( )
refactor ` pushAll ` method to use ` addMultiFieldOperation ` and add tests for handling multiple fields to improve code clarity and
added a null check for randomUUID before setting it in MockHubService to avoid potential NullPointerExceptions when randomUUID is null
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve hover event processing for better user interaction
added a delay of 10 seconds when the " bootstrap _ conf " configuration is not set to true to ensure proper timing during startup when the server
camel - 16400 : camel - netty - http should use maxheaderssize option instead of maxheaderssize
increased the HBASE _ CLIENT _ RETRIES _ NUMBER from 5 to 15 in HBaseTestingClusterAutoStarter . java to
replaced ` File . toPath ( ) . toFile ( ) ` with ` new File ( baseDirectory . getAbsolutePath ( ) . separator ) `
make encodedgraphcachetest more resilient to failure
updated SQL commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added functionality to adapt currency data from Kraken assets to ensure accurate representation of currency data in the KrakenAdapters
added a ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test ` to
updated variable names and logic for group email recipient and subject name in AlertTaskRunnerV2 . java to improve clarity and consistency in email
fix npe in influxdbpublisher due to miss measurement
( chore ) camel - util : rename dotransform to downcast to avoid confusion
updated filtering conditions for local addresses in NetUtils . java to improve address validation by ensuring unique local addresses are filtered
updated the ` writeRowHeader ` method to use a new method for quoting column names to improve code clarity and maintainability by encapsulating
added methods for setting and getting properties in WrapSystem and retrieving properties in StrUtils , and updated method calls in CompileMethodEntity and StrUtils
added a constructor to UpdateRequest that accepts a URL to initialize UpdateRequest with the provided URL
changed the visibility modifier of the EnumSerialization enum from static to instance to allow the EnumSerialization enum to be accessible from other classes
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` and its usage in ` DataImportHandler ` and ` ReplicationHandler
updated debug logging to include module names in a formatted string to improve readability of module names for debugging purposes
bug fix : use font size instead of hardcoded 10 % row height
updated method signatures and variable declarations in DefaultBrokerHeartbeatManager . java to improve code readability and maintain consistency in parameter order
added variables for meanPartitionSize , partitionCount , and splitCount in CqlInputFormat . java to improve code readability and maintainability
simplified the condition for checking JUnit tests in JUnitTestsShouldIncludeAssertRule . java to enhance code readability and maintainability
[ drools - 7 ] add equal ( ) and hashcode ( ) to ruleterminalnodelefttuple to avoid npe
added import for StageIDsRearranger and implemented stage ID rearrangement logic in TezCompiler . java to ensure proper handling of
fix mbean registration for messagingservice . patch by jbellis
refactor memory consumption logic in LotsOfOutput . java to improve clarity and maintainability of memory consumption checks
added javadocs imports for Document and DimConfig in several classes to enhance documentation clarity and maintain consistency across the codebase
polish ` ` enable anonymous read - only for ldap context source ' '
refactor DatabaseMetaData class for improved readability to enhance maintainability and ease of future updates
changed the visibility of the EchoInputDoFn class from public to private to restrict access and enhance encapsulation
added finishMocking method to MockitoSession and modified its implementation in DefaultMockitoSession and StubbingWarningsTest to improve error handling
refactor dependency management in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve code clarity and
refactor buffer and handler management in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve efficiency by reusing buffers and
use getlowingblock ( ) instead of getstaticblock ( ) in liquidwrapper .
updated location handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use data URI instead of extra data to improve compatibility with external location services
fix typo in aprendpoint javadoc
[ hotfix ] [ cli ] add support for streamingplan in clifrontend .
fix potential npe in craftingmanager . getshapedrecipes ( ) .
fix intermittent test failure on window
simplified whitespace and indent condition checks in TabsAndIndentsVisitor . java to improve code readability and maintainability by elimin
added a pattern to filter lines containing " . * pg _ temp _ " in NeuteredLinesFilter . java to ensure proper handling of
doc ( regen ) : update sample code to set total timeout , add api client header test
added handling for INTERVAL data type in DataTypeFactory and updated data type checks in UnknownType to improve type management for INTERVAL data types and
add distribution to wavefront if it ' s publishing
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to use ` springCloudSelector
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable listener registration functionality within the sensor manager
added exception handling for SocketException in SelectChannelServerSslTest to log warnings for SSL connection issues during tests
camel - 16400 : fix camel - ignite to work on karaf 4 . x
added conditional checks for empty sets and modified result handling logic in AbstractClient . java to improve clarity of output for empty sets and ensure accurate
pdfbox - 4892 : catch exception instead of ioexception , a suggest by valerybokov
added tests for HDR capabilities in ShadowDisplayTest . java and modified ShadowDisplay . java to handle unsupported operations to ensure proper functionality and error
added a finally block to clear the classLoader variable to ensure proper resource management and prevent memory leaks
enhanced error messages in SemanticAnalyzer to include source and target alias details to improve debugging by providing more context during semantic analysis failures
added a default constructor to the Message class to provide a default implementation for the Message class
do n ' t report warn about java . awt . component in serializableidiom
updated the constructor of PhoenixDecimalObjectInspector to accept a PrimitiveTypeInfo and improved null handling to enhance type safety and ensure proper
refactor compression response handling to differentiate between committed and non - committed responses to improve response management and avoid unnecessary gzipping of committed responses
renamed the parameter ` WWWAuthenticate ` to ` authenticateHeader ` in the ` getAuthorization ` and ` parseWWWAuthenticateHeader ` methods
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 539 , do
added a method to retrieve the thread group name in ThreadLeakTest . java to improve code readability and handle potential null values gracefully
added logging functionality and refactored the ` afterPropertiesSet ` method in ` MethodInvocationPrivilegeEvaluator ` to enhance debugging capabilities and improve code
changed the package of DmozParser from org . apache . nutch . crawl to org . apache . nutch . tools
removed unnecessary Lombok import from ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to streamline code and improve readability by elimin
kvm : add iso to the list of available disk for user vms
updated signal handling logic and test method names in SigInt . java and SigIntTest . java to improve clarity and functionality of signal management
replaced static imports of ` ArrayUtils . isEmpty ` with direct usage of ` ArrayUtils . isEmpty ` to improve code readability and maintainability by
fix test after change to spring boot 2.2 . 1
added method overrides and modified color interpolation logic in ColorRGBA . java to improve code clarity and ensure proper color interpolation functionality
planningentityselector cleanup : remove deprecate uninitializedplanningentities ( ) method
updated ` TwoLevelArtifactCacheDecorator ` , ` ManifestRuleKeyManager ` , and ` CachingBuildRuleBuilder ` to include ` build
replaced ` getFields ( ) ` with ` getDeclared ( ) ` in ` GroupByOperator . java ` and added a new variable ` ag
added a null check before adding block appearance to prevent potential NullPointerException when the block is null
added support for a new currency pair CNC _ BTC and introduced a new currency pair CNC _ BTC in the Currencies class
updated skewAllowance from 5 to 15 and refactored SamlProfileSamlAuthNStatementBuilder and SamlProfileSamlConditionsBuilder to
added sorting functionality to songs in SongListActivity and updated query logic in Utils to enable sorting of music artists by name for better
removed unused imports and refactored the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to improve code clarity and reduce
reintroduce legacybaseblockwrapper for backwards compatibility
refactor Iceberg branch creation logic to handle tag existence to improve error handling and provide clearer feedback when a tag does not exist
replaced ` newArrayList ` with ` Collections . singletonList ` for whitelisting in ` AbstractLdapMockMvcTest ` to improve code readability and
fix ( demo ) : remove bounce count from physonmappingdemo
updated password requirement checks in IdentityProviderEndpoints . java and added password policy validation in IdentityProviderEndpointsMockMvcTests . java to ensure proper handling
added a method call to remove ` assumeReflective ` from ` notInitializedInConstructors ` to ensure that non - reflective fields are not
modify exception handling in JdbcExecutor to differentiate between closed and closed connections to improve error messaging and provide clearer context for SQL exceptions
added a new test method ` testRequiredBody ` to validate the functionality of a ` RestTemplate ` with a specific microservice name to ensure
updated regex patterns for user and password in CredentialInjector . java and modified JDBC URL format in CredentialInjectorTest . java to improve flexibility in
added a new menu item " Item4 " to the menuItems array and introduced a KeyStroke for the ENTER key to enhance functionality by allowing
updated print statements in TestCoreParser . java to include the class name of the query and modified the assertion message format to improve clarity of
change variable name from ' children ' to ' id ' in SimpleNode . java to improve clarity and consistency in comparison logic
changed the visibility modifier of the PopulatorContextStackItem class from public to package - private to allow the PopulatorContextStackItem class to
updated the document count retrieval logic in ` MoreLikeThis . java ` and added a new test in ` TestMoreLikeThis . java `
refactor event triggering logic in QuestManager . java to improve readability and maintainability of the code
[ hotfix ] [ test ] make networkbufferpooltest extend from testlogger
updated query construction to append " $ lt " instead of just " $ gt " to improve clarity and efficiency in handling session expiration
add substitution for unsafe . getlong in truffle .
updated time zone identifier for Asia / Amman from ARAST to EET across multiple language files to reflect the correct time zone representation
updated deprecation log ID from 90000010 to 90000011 to improve deprecation logging accuracy and facilitate easier debugging
hhh - 16400 - fix for session . get ( ) for rollback - only mode
fix ` ` no extension find ' ' error when download external file
bug fix : menu bar do n ' t work on macos
[ ca ] add piecewise test for x ^ 2 and x ^ 3
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a new field ` modWhiteListPattern ` and a test method ` testConfigWhiteList ` in ` TestJdbcWithSQLAuthorization `
do n ' t add entry to invalidclasses in entryloader . update ( )
use player . team ( ) instead of team . sharded ( ) in mobileinput # getclosest ( )
updated cookie domain from a hardcoded domain to a dynamic host name to improve flexibility and maintainability of the domain configuration
added validation logic for nullable columns in ` MissingColumnChangeGenerator ` and ` MissingTableChangeGenerator ` , and modified ` ColumnSnapshotGenerator `
updated multiple SecurityTokenService and related classes for consistency to enhance code maintainability and readability across the security - related components
added delete and add documents in CustomCollectionTest . java and refactored variable declarations in CompositeIdRouter . java to improve code clarity
added snapshot handling for bytea types in ` ExecutablePreparedStatementBase ` and introduced a new test for blob types in ` PostgreSQLIntegrationTest ` to
updated conditional checks for ` _ cache ` and ` max _ cache _ size ` in ` DefaultServlet . java ` to ensure proper handling of
fix drag and drop of library tab ( # 4558 )
updated method names and assertions in ExecutionUnitRunner , CucumberTest , and CucumberTest to improve clarity and consistency in description
replaced ` isEmpty ( ) ` and ` isEmpty ( ) ` with ` StringUtils . isNotEmpty ( ) ` for better readability to improve code
changed method visibility from public to package - private for several methods in TimeUtils . java and reorganized imports in GitBlitSuite .
added a new method ` isSecurityFrameOrInjectedInvoker ` and refactored class name checks in ` RefectionMHTests `
updated file extension check from " jpg " to " . jpg " in PreviewImageFragment . java to ensure correct file type matching for
[ gr - 21212 ] fix debug info provider for hostedmethod .
added Icon methods to Data , Data , Data , and Data classes , and updated display logic in DataTableTopComponent and EdgeDataTable to improve icon
added a check for the last index of the request name before extracting it from it to improve robustness by avoiding potential null pointer exceptions
updated the regex replacement logic in ` FindAndReplace . java ` to handle dollar signs to ensure consistent behavior when replacing dollar signs in
change xmppconnection to connection in xmppconnection . getserver ( ) and xmppconnection . getsocketaddress ( ) .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method to copy source and destination directories in IO . java and refactored the copyContents method in SpecWebAppTest . java
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for unknown data types
refactor ABI retrieval logic in DefaultJavaLibraryBuilder to use HasJavaAbi for better clarity and efficiency to improve code maintainability
removed background padding from itemHeight calculation in SelectBox . java to simplify height adjustment by eliminating unnecessary padding
added normalization of database and table names in ObjectStore . java to ensure consistent identifier formatting for database and table names
added handling for Oracle database type in DbSqlSession . java to ensure correct schema is used for database queries
removed the logout callback from the activity in HomeFragment . java to simplify the code by eliminating unnecessary API client interactions
[ hotfix ] [ test ] fix flaky test
added null check for result before retrieving types in FastImportAction . java to ensure stability by preventing null pointer exceptions
updated the check for managed beans in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve clarity and correct
rename iexecutionattributesdialect to iexecutionattributedialect for clarity
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that metadata is cleared before processing
miss commit for ggb - 744 remove java . util . calendar from freehep , add ` ` geogebra ' ' to creator string
added a null check for measurement in TabletInsertionDataContainer and introduced a custom exception handler in DisruptorQueue to improve robustness by handling
deleted the Session2Token . java file to the functionality is no longer needed in the media package
volume create / expunge : add event and cleanup when volume can not be remove .
added installation functionality to SystemShortcut and InstantAppResolver classes to enable support for instant apps in the launcher
added a new class ` NullAuthoritiesPopulator ` and updated ` LdapAuthenticationProvider ` to use it to provide a default implementation of `
added a fallback mechanism for retrolambda jar retrieval in the Executor and CN1BuildMojo classes to ensure fallback to the default version when
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` method in ` ShadowCamera . java ` to simplify the method call
replaced FixedBitSet with Bits for sorting live documents in DocumentsWriterPerThread . java to improve performance and flexibility by utilizing
bugfix : handle null result in jmesspathextractor . getpath ( )
updated import statements and added null check for user authorities in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
updated assertions to use ` new Date ( ) ` instead of ` DateTimeUtils . dateOf ( ) ` and replaced ` DateTimeUtils ` with
cloudstack - 5248 : vm snapshot with memory can be use for vgpu enable vms .
updated ` RobolectricTestRunner ` to use ` methodClassConfig ` and changed ` ArrayList ` to ` Set ` to improve cl
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to align with the new socket connector implementation
refactor partition key comparison logic in HiveAlterHandler and add test cases in TestHiveMetaStore to improve accuracy of partition key comparisons and
added a new BooleanFlag named ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to provide a debug option for
corrected spacing in the conditional statement in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback for deploying and undeploying handlers to simplify code structure and improve readability
added workspace listener functionality to handle workspace events in PreviewControllerImpl to enable dynamic graph building based on workspace state changes
added a check for VM anonymous classes in ReflectionFactory and modified the class name comparison in ReflectUtil to ensure correct handling of anonymous classes and improve
refactor TransportHelper to improve code readability to enhance maintainability and facilitate future development
added ResourceLoader import and modified the file path format in CatalinaAcegiUserRealm . java to improve resource loading efficiency and simplify
added logging statements for initializing and starting the ActionManager in AmbariServer . java to improve visibility of server and agent initialization processes
added null checks and improved handling of forNode initialization and modification to enhance robustness and prevent potential NullPointerExceptions during execution
updated method signatures to accept a FileSystem parameter in SliderAppsViewControllerImpl . java to enhance flexibility by allowing different FileSystem types for HDF
added a check to ensure the backgroundManager is only attached when it is not already attached to prevent potential NullPointerExceptions when the manager is not attached
updated tab management in AllAppsTabbed , Launcher , and PagedView classes to improve user experience by ensuring the correct tab is displayed
added null check for URL in BaseDataSource . java and a corresponding test case in SimpleDataSourceTest . java to improve error handling for invalid URLs
enable pebblemodetest to run on jdk 11 ( # 2352 )
added an EditNameDialog to handle directory creation and dismissing in FileDisplayActivity to improve user experience by prompting users to create a directory
added functionality to toggle bar border width across multiple activities to enable toggling of the chart ' s border width for better user interaction
updated SSL URI and host from OKCoin to OKEx in OkCoinExchange . java to align with the latest OKEx API standards
[ drools - 1340 ] add deciderscorecomparator to the step scope creation in the test
replaced FileChannel with SeekableByteChannel in Files . java and added a new file reading test in BytesAndLines . java to improve
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and improve variable naming for clarity to enhance
rename ` MockHandler ` and ` MockHandlerTest ` to ` MockHandlerImpl ` and ` MockHandlerImplTest ` to improve clarity
removed unnecessary checks for SERIALIZATION _ TYPES _ KEY and PROXY _ SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser to
added memory limit configuration for ActivityManager in QuickstepProcessInitializer to manage memory usage for debugging purposes
refactor sumWithCompensation to store the result of applyAsDouble in a variable before modifying it to improve code readability and maintainability
http : / / issues . apache . org / activemq / browse / amq - 2282 - remove @ ignore from bundle
[ hotfix ] fix checkstyle violation in precompactedrow
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new class InvalidRenderIntentTest . java
add meterregistrylifecyclelistener to close meter registry on shutdown
[ 3.0 ] use info log instead of warn when config center not specify
added error handling for certificate generation in CertificateFactoryTest . java to ensure robustness by verifying expected certificate types
( chore ) camel - core : fix issue with ambiguity in simple expression
refactor onTabUnselected method to improve focus handling by ensuring windows are dismissed when the tab is selected to enhance user experience by
updated error logging to include the user ' s name in the error message to provide more context for debugging the access log error
updated file names and matrix scaling values in SkeletonModelGpuSkinningTest . java , modified animation time in OgreXmlLoader .
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that certain classes or methods are outdated and should not be used
added support for generating d . ts files along with the JavaScript output directory in the transpiler to allow users to specify an output directory for
[ hotfix ] [ kinesis ] fix fetch timeout for kinesis consumer
[ hotfix ] add ` ` . html ' ' to timestamp in streamingdataflowworker
increased the maximum number of metastoreserver threads from 100 , 000 to 1000 to allow more than 1000 threads for the metast
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` to indicate whether the snapshot change was successful
update shadow radius parameter in SwipeUpAnimationLogic . java to use shadowRadius instead of mMaxShadowRadius to improve flexibility in shadow
added test for chain nesting and aggregation in chainparsertests .
updated loop condition from ' limit ' to ' end ' and added a failure assertion in MarketSellAssetActuatorTest . java to
fix check for interoperability between polyglotcontextimpl and polyglotcontextimpl
updated condition in CreateKeytabFilesServerAction . java to check for null before comparing cachedKeytabFilePath to ensure proper handling of null values
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance functionality by integrating display management features in the launcher
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUI to ensure consistent tooltip display for desktop
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize (
fix the generic signature of the recognise ( ) method in tensorflowrestrecogniser ( )
added methods to insert and remove entities and retrieve entities in JPASQLBase . java , and introduced new test cases in JPAS
removed debug print statement from FreeformFinSetConfig . java to streamline the code by eliminating unnecessary debug output
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to ensure compatibility
added a call to ` program . spendAllGas ( ) ` in ` Runtime . java ` to improve error messaging and ensure all gas spend
updated error message formatting in ` ElementsShouldSatisfy ` and ` ZippedElementsShouldSatisfy _ create _ Test ` classes to
added a @ Deprecated annotation to the Weights class to mark the Weights class as outdated for future removal or replacement
refactor unsafe plugins registration into a separate method to improve code readability and maintainability
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancer
changed the ` mCenterPagesVertically ` variable from ` true ` to ` false ` in ` AppsCustomizePagedView .
reordered the call to ` doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure consistency in migration processing sequence
replaced ` HOST ` with ` BASE _ URL ` and updated related constants in ` KonnectedBindingConstants ` , ` Kon
updated attribute type from Object to List < Object > in WSFederationClaimsReleasePolicy . java and added assertions in WSFederationClaimsRelease
refactor test table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to improve
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing of CASE expressions with brackets
added input device checks and refactored copy mode logic in ConsoleActivity . java to improve code readability and maintainability by encapsulating copy
updated the ` writeXmlOutput ` method to accept a ` Writer ` instead of a ` String ` for the output file to improve flexibility
camel - 16400 : fixed nullpointerexception when use custom aggregation strategy with empty body .
( chore ) camel - core : camel - core - optimize to reduce dependency on util
move basicconfigurator to main package to avoid conflict with other package .
do n ' t add phi node for typeQualifier dataflow analysis
remove unused import of SharedStringSource from TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with specific parameters
renamed multiple classes related to box and whisker calculations and datasets to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] migrate readableconfigurationtest to junit5
updated equality checks to use ` . equals ( ) ` instead of ` = = ` for string comparison to enhance code readability and prevent potential
changed the access modifier of the singleton instance and its constructor from public to private to enhance encapsulation and restrict instantiation of the singleton instance
refactor test cases in IfStatementTest for improved clarity and structure to enhance readability and maintainability of the test code
changed method from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
removed the nullSafe method from TypeAdapter and updated its usage across tests to simplify the type adapter registration process and improve code readability
updated the expected size in BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new file EXIFReader . java and modified ImageProcessingService . java to utilize it for processing EXIF files to enhance functionality
handle unknown unit in CloudWatchMeterRegistry by returning none instead of UNKNOWN _ TO _ SDK _ VERSION
[ drools - 5331 ] fix pmml4 to use the correct type of parameter when apply a pmml model ( # 3
improve the error message in fluentprotocol for good debugging
added a check to ensure the bubble bar is visible before proceeding to prevent further actions when the bubble bar is not visible
reset label range when aarch64 backend crash .
added a try - finally block around the initialization of the JDKLogManager in JDKXRLogger . java to ensure that the initPending flag
added a new method ` find ( Class < Ticket > ticketClass ) ` to ` TicketCatalog ` and refactored ticket retrieval logic in
refactor SSL trust store and connection string construction in TestSSL . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix memory leak in sort - merge
updated constructors of Read and Write classes to include additional parameters to enhance functionality by providing additional parameters for reading and writing operations
updated PluginHandleController and related classes to include type and sort parameters to enhance functionality by allowing filtering of plugin handles based on type
updated method calls from ` start ( ) ` to ` start ( ) ` in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig
added configuration parameters for GLKViewDrawable color format , depth format , and stencil format in IOSApplicationConfiguration and IOSGraphics classes to
refactor login process to use attemptLogin method instead of direct calls to sendKeys to improve code readability and reusability by reducing
fix ( pytorch ) : throw unsupportedoperationexception for real ( ) and complex ( )
removed thread interruption check and replaced with a loop that waits for null lockName to improve thread management by ensuring all threads are processed before
renamed Implements . java and ShadowPicker . java files to improve clarity and consistency in naming conventions
refactor HttpClientOptions initialization in RestTransportClient and add new connection configuration methods in TransportClientConfig to improve code organization and enhance HTTP / 2 connection
updated type checks and improved error handling in DynamicStruct and SolidityFunctionWrapper classes to enhance type validation and provide clearer error messaging
added a default value for " text - align " and " font - size " properties in InlineLayout and FontUtil classes to ensure consistent behavior
added overloaded constructors to ` CopyStep ` and a new test method ` testGetShellCommandInternalPath ` in ` CopyStepTest `
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method throw illegalargumentexception . #
fix camel - core test which randomly fail on slow ci server .
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed List < String > to List < ByteString > for several methods in WitnessScheduleStore . java to utilize ByteString instead of String for
added a check for empty results before printing them in TestElementsAnnotatedWith . java to avoid unnecessary print statements when no results are available
refactor ConcurrentLinkedQueue to improve item removal logic and introduce a new class for testing to enhance performance and demonstrate potential memory
added a boolean parameter ` addSpecialTokens ` to several ` encode ` and ` decode ` methods in ` HuggingFaceTokenizer ` to
[ hotfix ] [ runtime ] replace arraylist with collections . ncoprocessor in taskmanagerservices
updated data size handling in LoadSingleTsFileNode . java to improve clarity and maintainability of chunk data management
added session storage context to the BrowserSessionStorage and updated DuoSecurityMultifactorWebflowConfigurer to utilize it to enhance
add an ignored test case that demonstrate a problem with the jsp document parser .
added a default constructor to TypeAdapter and updated the @ Ignore annotation in Java17RecordTest to ensure proper instantiation of TypeAdapter and clar
do n ' t throw an exception when kill be call after the debugger be stop .
refactor AntPathRequestMatcher for improved clarity to enhance code maintainability and readability
refactor addbitstreamsaction , deletepointsaction , deletepointscollection , deletepointsaction and deletepoint
added null check before releasing _ deflaterEntry in GzipHttpOutputInterceptor . java to prevent potential NullPointerException when _ deflaterEntry is not
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup after each test execution
replaced Unicode character removal with normalization in the CheckSum implementation to ensure consistent MD5 computation by removing unknown characters
refactor command handling in Example . java for improved clarity and null safety to enhance code robustness and prevent potential NullPointerExceptions
fixed checkstyle issue in util / basicprofilestate / basicprofilestate . java
updated JSON object handling in MongoTemplate and added a test for saving JSON strings in MongoTemplateTests to improve type safety and ensure correct JSON serialization
added support for multiple remote addresses in RequestUtils . java and created a corresponding test in RequestUtilsTest . java to improve handling of remote addresses
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` and updated its implementation to return ` ObjectBuilder `
refactor CookieManagerTest to use a static method for obtaining the local host address and update URI construction to improve code readability and ensure
refactor glyph processing logic in GlyphLayout . java and add a test case in BitmapFontTest . java to improve handling of whitespace and ensure
[ hotfix ] [ connector / pulsar ] add pauseorresumesplits method to pulsarsourcereaderbase
added a new configuration variable for script operator ID in HiveConf . java and utilized it in ScriptOperator . java to facilitate
updated the ` getListedTermCounts ` method to utilize ` Stream ` for improved efficiency and readability to enhance performance and maintainability
added a new action ` UseSeparateStepSizeAction ` to the platform plugin to provide users with a separate step size option for improved
added userId and refactored file unlocking logic in FileMenuFilter . java to enhance user experience by ensuring appropriate visibility and visibility based on
replaced LinkedList and LinkedList with ArrayList and StringUtils for improved readability and consistency to enhance code clarity and maintainability by using more d
updated HTTP header values from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and its tests to
pdfbox - 4071 : use ioutils . closeclose instead of manual null check
implement fullscreen mode functionality in GwtGraphics and update viewport settings in GwtApplication to enable proper rendering of the application based on screen dimensions
updated WebfingerIssuerService to use URI instead of String for issuers and parameter name to enhance URI handling for better compatibility with different URI
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of ` Dubbo ` in
updated file path handling in SkinLoader . java to use ` resolve ( fileName ) ` instead of ` Gdx . files . internal (
updated logging levels from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to improve logging clarity
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` for ` PMS . REALTIME _ LOCK ` across multiple
reformatted the package declaration for clarity to improve code readability and maintainability
fix false positive for null deref and redundant comparison
updated DashRendererBuilder to use DefaultHttpDataSource and renamed method from onManifestError to onSingleManifest to improve clarity and consistency in
added a configuration property for the maximum number of prepared statements cached per database connection in the execution scheduler to allow configuration of the maximum number of prepared
[ hotfix ] change return type of configuration . set ( ) from writableconfig to configuration
added error handling for command operations in AutoScalingHandler to ensure proper error reporting for invalid commands
updated method signatures and variable names in CombinedDataset . java to improve code clarity and maintainability
changed the variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve clarity
remove ` ` javax . crypto . jcesecurity . cryptography ' ' restriction from mainviewmodel
added a check to ensure the player is not cancelled before spawning the portal to improve the game ' s responsiveness by preventing
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to ensure proper handling of long text
added a null check before setting the vectorization context in Vectorizer . java to avoid potential NullPointerExceptions during context initialization
convert speed to 0.539957 for wialon
hbase - 16400 disable metric user aggregation by default
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
added a boolean flag ` mAttached ` and modified receiver registration logic in ` Launcher . java ` to ensure the receiver is only removed when
refactor AsyncFile , HttpClientRequest , HttpServerResponse , and ReadStream classes to improve code organization and maintainability
add params to the zadd ( ) method so you can pass the parameter to the zadd ( )
fix checkstyle issue in util / xml / dspace / dspace - api / metadataimportit and mocksherpaservice . java
rename ` ` testasyncmessages ' ' to ` ` testasynccallsperformance ' '
refactor ` VersionedTargetGraphBuilder ` and ` VersionPropagatorBuilder ` to improve handling of non - existent targets and enhance testing capabilities to
updated conditions for checking epoch seconds in TimeZoneProvider . java to improve accuracy of time zone validation logic
updated the return value in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to ensure
updated the initialization of the variables ' row ' and ' column ' in JSONParser . java to correct the logic for determining the number of rows
replaced ` JavaType . ShallowClass . build ( fullyQualifiedTypeName ) ` with ` java . util . StringUtils . aspectjNameTo
updated DETAIL _ THUMB _ HEIGHT and introduced ACTION _ PLAY _ TRAILER for playback functionality to enhance user experience by
replaced direct call to StrikeCache . freeLongPointer with a new method removeGlyphInfoFromCache in CStrike . java to improve
act - 1349 : terminate all process after terminate all activity ( e . g . when terminate all execution )
camel - 16400 : camel - core - allow to configure a custom xmlrootelement for the generated type .
updated the valid endpoint in the test from " http : / / www . apereo . org / scottb . html " to
add -- prdef to reset all preference to default value .
changed access modifiers of several fields and methods in ThriftMetrics and ThriftServer classes from private to protected to allow subclasses to access these methods for better
removed deprecated channels from DanfossAirUnitHandler and updated related references to reflect the removal of deprecated channels to streamline the code and
use hamcrest assertion instead of junit in examples / microprofile / basics / testendpoint
removed redundant null check for expansionHelper before stopping it to improve code readability and maintainability
added equals and hashCode methods to PartitionFactory and modified PartitionPanel to handle index - 1 to improve object comparison and hashing functionality
server : fix vm disk size issue during vm expunge ( # 4558 )
added preference management for suggest apps visibility in PredictionRowView to enhance user experience by conditionally showing suggestions based on user preferences
[ geos - 7013 ] support invalid bbox cr in api bbox parser
added methods to validate value and position parameters in LibrustzcashParam . java to ensure that values and positions are non - negative
deprecate ithrowableentity in favor of fml . common . registry . ithrowableentity
updated the initialization of NodeDataImpl to use random values for x and y to improve randomness of node attributes
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor variable declarations and initialization in JavacStep . java to improve clarity and maintainability of the code
updated the VERSION constant from " 0.9 . 1 " to " 0.9 . 2 " to reflect the release of version 0.
added a condition to check for deep shortcuts in LoaderCursor to ensure proper handling of deep shortcuts in the loader
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for instances of TimeGranularitySpec
changed access modifiers of classes ` BooleanWeight ` and ` DisjunctionMaxWeight ` from private to protected and added ` weights ` field to allow
added a boolean flag ` useProxyResponseCode ` to control proxy response handling in ` HttpURLConnection ` to ensure proper handling of NTLM proxy
aarch64 : fix a bug in aarch64move . cpp where scratch register be miss .
server : fix npe while get reserve / used vm capacity
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and modified the query in ` Test
updated audio recoder duration from 22050 to 44100 in AudioRecorderTest . java to improve audio recording accuracy and performance
modify the calculation of newOriginX in RocketFigure . java to adjust the calculation based on subject dimensions and scaling factors
updated error handling for null or empty Druid data source in DruidQueryBasedInputFormat . java to improve robustness by providing clearer
added the ORIGINAL _ TYPE constant to the CustomProperty class and updated the regex pattern to include " Original Type " to enhance functionality by
added a static method ` create ` to create an instance of ` Index ` using a parent and data map to facilitate the creation
simplified the return statement for checking boundary periods to improve code readability and reduce unnecessary variable assignments
updated schema compatibility logic to include an index parameter and added new test cases for schema compatibility scenarios to enhance compatibility checks for reader and writer types and
added persistent attribute type checks and modified join logic in QueryUtils . java and tests in EclipseLinkNamespaceUserRepositoryTests . java to enhance
added synchronization to the spans list in TestSpanHandler . java to ensure thread safety during concurrent access to spans
replaced List < Object > with List < ? > in multiple methods to improve type flexibility in method signatures across different text provider classes
added exception handling for InvocationTargetException and improved logging messages in ViewContextImpl . java to enhance error reporting and provide more detailed information during authentication failures
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
updated error messages to clarify request rejection status in SCBEngine and TestSCBEngine to clarify that the service cannot
added two new file files for iOS iOS data and moe resources in GdxSetup . java to support iOS data and media resources in the
updated imports in TestSearcherManager . java to use ConcurrentMergeScheduler to improve thread safety during merging operations
updated conditional checks in QTestUtil and improved list handling in GenericUDTFInline to enhance code robustness and prevent potential NullPointerExceptions
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ticket # 3899 : prevent click on the ` ` copy ' ' and ` ` paste ' ' in the spreadsheet
refactor HibernateBundleActivator to manage persistence and session factories more effectively to improve resource management and ensure proper cleanup of service registrations
fix incorrect timeout calculation in hikaripool . getconnection ( )
create non - packaged resource if it do n ' t exist
updated file name handling in Compat . java and FileOpener . java to use File . separatorChar for consistency to improve cross - platform
changed the return type of the row ( ) method from Cell < T > to void to simplify the method signature for better usability
add port clash check to ensure we do n ' t allow port to be specify multiple time
added a null mask feature to WebSocketClient and modified WebSocketConnectionD12 instantiation to use a dynamic mask generation based on the provided value
refactor return type of genUDTFPlan to return a Pair instead of a RelNode to improve method usability by allowing direct return
added counters for bucketed and non - preferred nodes in NodeScheduler and NodeSelectionStats to track the number of selected nodes for improved performance
added a new file ` Person . java ` containing a class ` Person ` with getter and setter methods to facilitate the management and
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to track the presence of an
added clock functionality and updated fade - in behavior in PlaybackOverlayFragment to enhance user experience by providing a smoother transition effect and visual
remove duplicate call to updatecomparatoroutputlevel ( ) and markdirty ( ) .
changed the ` IMPL ` variable from ` static final Class ` to ` private static Class ` and modified exception handling to improve flexibility and
replaced direct cell assignment with SwingUtilities . invokeLater in Sudoku . java to ensure UI updates occur on the Event Dispatch Thread for
replaced DefaultInetAddressAdapter with CollectionTypeAdapter and modified method signatures to accept Class < T > as a parameter to enhance flexibility
added methods to retrieve double , long , boolean , and string data types in the Series class to ensure that the Series class does not throw exceptions
updated the option key for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch "
updated boundary checks in GeoRelationUtils and modified GeoRect construction in GeoUtils to improve accuracy in geometric calculations and enhance code readability
fix service offering lookup to use getdiskofferingid ( ) .
shut down all instance in case of test failure
added unit test for no - padding throw by cipher . getinstance ( )
added filters for printing operations logs in QFileClient to improve clarity and control over logging output for operations
fix issue with type argument pass to aop proxy . fix # 737
fix issue # 561 . add proxy address to currentconnectionaddress if it be null .
replaced Math . addExact with MathUtils . cappedAdd for demand calculation to simplify error handling and improve code readability
refactor image output handling to use try - with - resources syntax to ensure proper resource management and avoid potential NullPointerExceptions
refactored search - related methods in TvApp , BaseActivity , EnhancedBrowseFragment , StdBrowseFragment , and StdGridFragment
removed the ' this ' keyword from ` SchemaCrawlerOptions ` and modified the ` toString ( ) ` method in ` GrepOptions ` to
fix for http : / / issues . apache . org / activemq / browse / amq - 2292 - add osgi
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests . java to facilitate dependency injection for repository management in
updated exception type from ` Exception ` to ` InterruptedException ` in ` UIServer . java ` and corrected log message format in ` TestVertx
add more cactus case to the switch statement in the blockcactus switch statement .
refactor mouse handling logic in ThemeSelector . java to improve responsiveness to mouse events for better user experience
refactored AbstractMinMulticastFlowControl to extend AbstractMinMulticastFlowControlRhsPadding and added a new class AbstractMinMult
added alignment and verticalAlignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance flexibility in managing text
throw an illegalargumentexception instead of an exception in stattokentannotator
added distinct query handling in ClusterIntegrationTestUtils and QueryGenerator classes to improve query execution logic for distinct queries
[ gr - 38686 ] add a method to get the closely find a closely linkage .
fix checkstyle issue in gui / textfield / jsyntaxtextarea . java
added a null check for the children array before iterating to avoid potential NullPointerException when children is null
added token position and current position variables to MessagePackParser and updated JsonLocation return logic to implement JSON parsing functionality and improve error handling
added locale management and cleanup after tests in AbstractSolrMorphlineTestBase to ensure consistent locale settings after tests are executed
simplified status bar size calculation in LauncherFragment . java to improve code readability and maintainability
added a new test class MetricsReporterTest for metrics - related functionality to ensure correct registration and reporting of metrics in the reporter
camel - 14850 : camel - osgi do n ' t register type cache in osgi service registry
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
[ hotfix ] [ test ] fix test failure in streamkafkaptest
refactor DSAParameterGenerator to improve handling of strength checks and replace BigInteger . ONE with BigInteger . ONE to enhance code clarity and ensure
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and refactored related methods to use it to improve hostname
fix flakyness of clientoutofmemoryhandlertest by wait for client to be shutdown
refactor shape - related methods to use a new method ` getCmoObjectId ( int shapeId ) ` to improve code clarity and maintain
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of querying distinct entities
refactor multiple classes related to trav execution to improve code organization and maintainability
fix # 2266 : add adapter bind / unbind hook to managedKubernetesClient
replaced direct retrieval of official rating and body with a new method getInfoRow in Utils . java to improve code readability and maintainability
updated JUnit imports and annotations from version 4 to version 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager . java to
do n ' t swallow exception when generate summary html
simplified the reset method calls for intPool and bytePool in TermsHash . java to improve code readability and reduce unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to enhance code readability and maintainability
updated the API level check from S _ V2 to TIRAMISU and introduced a new WindowSessionDelegateU class to enhance compatibility
refactor URL handling logic to differentiate between scheme and port to improve clarity and correctness in URL construction based on request scheme and port
added support for MSSQLDatabase in foreign key constraint generation to enhance compatibility with MSSQLDatabase in foreign key constraints
hbase - 20519 fix checkstyle issue in hbase - store
remove debug print from emzuli pipe , add a filtereventhandler to make it easy to debug .
simonstewart : make it easy to set the logging flag on the htmlidentifier
[ hotfix ] [ table ] fix typo in hivelookuptablesource and hivelookupjoinitcase
clarify usage of listenerset # setthrowswhenusingwrongthread .
updated the SCHEMANAME column assignment in SequenceSnapshotGenerator . java to use CatalogAndSchema for improved schema management
updated color scaling in SpriteBatch and SpriteCache classes and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugSt
fixed - redissonconnection . join ( ) and redissonconnection . getbody ( ) method throw classcastexception . # 3881
added logic to update statistic year cores based on the base URL in SolrLoggerServiceImpl . java to ensure that the statistic year cores are only
renamed the method ` launchTask ` to ` launchTaskFromView ` and added a new method ` launchTask ` to improve clarity
updated MorfologikFilter and MorfologikFilter classes to use specific dictionary resources instead of wildcard resources to improve flexibility
updated sorting options in GridFragment to use " community _ rating " and " critic _ rating " instead of " stars " to improve cl
added imports for ViewKt and ListRow , and modified visibility logic for the header view in CustomListRowPresenter to ensure proper handling of
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
renamed HttpClient class to improve clarity to enhance code readability and maintainability
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ( DB2Database ) ` in multiple files to ensure compatibility with DB
add java time module support for jsr310 serialization .
updated MDC import from org . apache . log4j . MDC to org . slf4j . MDC to utilize
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling by eliminating unnecessary type casting
reformatted code in CoinbaseTransaction . java for improved readability to enhance code clarity and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to use it to improve the flexibility
added a call to System . gc ( ) in the IdleStrategy initialization to ensure proper resource management and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` class and updated related references in ` FileSyncAdapter `
removed unnecessary state check before setting autoscale and self - loop checkboxes in ReportPanel . java to streamline code by eliminating unnecessary
[ hotfix ] [ test ] fix nullpointerexception in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` to implement a recipe to remove calls to ` System . gc ( )
removed unnecessary super ( ) calls from multiple exception classes to streamline code by eliminating unnecessary super calls
added a method to set the UIID for the ScaleImageLabel class to ensure that the icon is correctly set based on the provided ID
replaced instances of ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity and maintainability by
updated argument handling to support both " - classpath " and " - cp " options alongside " - classpath " to enhance flexibility in
replaced ` options = { " default " } ` with ` compiler = { " default " } ` in the ` avutil ` link
updated the initialization state of the variable in StorageService . java to ensure consistent initialization logic
updated Test7196045 . java file to improve test coverage and ensure compatibility with recent changes
updated density and decay values in ShaderParametersLightShaft . java from 1.5 f to 1.0 f and 0.9
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and modified ` OidcRedirectActionBuilder ` to
# 1627 - ddl - alter table add unique constraint : use unique constraint if not null ( # 1627 )
updated federated share checks in UsersAndGroupsSearchProvider and EditShareFragment to incorporate validation for federated sharing capabilities to ensure
added a method ` needsDocValues ( ) ` that always returns true in the ` TestBBoxStrategy ` class to ensure that document values are
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for improved clarity and error handling to enhance code readability and provide clearer exception messages
added an ` intForEach ` method to ` Int2ObjectHashMap ` and modified the ` IntObjConsumer ` interface to include a special
fix worldserver not be able to share scoreboards early . close # 3790
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository classes
updated logging conditions for MTree snapshot creation in MManager . java to improve clarity of log messages and enhance snapshot creation logic
refactor dot product calculation in VectorUtil and update corresponding tests in TestVectorUtil to improve accuracy of dot product calculation and enhance test coverage for
added IRREVERSIBLE _ THRESHOLD and updated methods in Parameter and Manager classes to manage and update the last confirmed block number dynamically
refactor locale setting logic into a dedicated method in Systems class to improve code organization and maintainability by centralizing locale handling
added functionality to check if a new database was created in the LauncherClings and LauncherProvider classes to ensure proper handling of database state
sec - 1640 : remove object from collection list in basicaclentryafterinvocationcollectionFilteringprovider . remove ( object )
refactor conditional logic for determining 64 - bit bit in Constants . java to improve code readability and maintainability
added a thread check to ensure the current thread does not change before proceeding with operations to prevent potential issues with concurrent access
changed the access modifier of the ` closeDatabase ` method from private to protected to allow subclasses to access the method for better flexibility
updated imports and references from ` apiclient . model . dto ` to ` jellyfin . sdk . model . api ` for
added attribute handling for SVG elements in BatikSVGDrawer . java to ensure all elements are imported from the SVG document
removed the ` inputrcUrl ` parameter from the ` catch block in ` ConsoleKeys . java ` to streamline error handling by
added functionality to handle " WaitForResult " in the CodenameOneActivity to manage the waiting state based on the " WaitForResult " intent
refactor ` HitQueue ` , ` SpanPositionQueue ` , ` PriorityQueue ` , ` TopOrdAndIntQueue ` , and
refactor widget handling in WidgetCell . java to improve clarity and functionality of widget display to enhance user experience by providing context - sensitive information
added a maximum attribute count limit and a validation check in the Attribute class to ensure the attribute registration does not exceed the defined maximum limit and prevent
move predicatestest from com . hazelcast . query to com . hazelcast . query . impl . predicates
camel - 16400 : added case insensitivity option to the default header filter strategy . thanks to michael for the
refactor InlineLayout and Breaker classes to improve handling of unbreakable strings and boundary checks to enhance code clarity and correctness in
added null checks and improved error handling in the getView method of ShareUserListAdapter to enhance robustness and prevent potential NullPointerExceptions during view
simplified instrumentation logic by removing unnecessary package and exclude lists to improve code readability and maintainability by consolidating instrumentation logic
added a condition to check if the association is not null and if it is an insert destination before source to ensure the correct column count is returned
updated memory limit retrieval in CmdModifierTest . java to use a dynamic method for retrieving the memory limit file to improve flexibility in managing memory
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxx
added error handling for missing specified source under test in JavaTestRule . java to provide clearer feedback when the specified source is not among its
disable minecraft 1.10 proxy for minecraft 1.9 . 4
added a check to ensure atIndex is non - negative to ensure atIndex is always non - negative to avoid potential errors
increased timeout duration from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 500 milliseconds to allow more time for tests to
refactor TaskOverlayFactoryGo to accept AssistContentRequester and update its constructor to improve dependency management and encapsulation of AssistContentRequester
updated the way the witness address is formatted in VoteWitnessProcessor . java to ensure proper encoding of the witness address to enhance security by preventing
refactor DefaultMethodRegressionTests to improve test coverage to enhance reliability and accuracy of method regression tests
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the code
updated Kafka exception handling from KafkaProducerException to KafkaException to align with the correct exception type used in the tests
added a call to close the loader in the DesktopGeneratorController to ensure proper resource management and prevent potential memory leaks
added a ` clear ` method to ` ExceptionThrowingTaskletStub ` and new test cases in ` FaultTolerantExceptionClassesTests
[ hotfix ] [ runtime ] improve error message in configbuilder
added a ` Map < String , String > ` parameter to multiple ` applyTunerConfigs ` method across multiple classes to enhance flexibility by
added a check for in - progress instances before adding them to the list of segments to ensure that only active instances are added to the list of
added a condition to check if the touchable is disabled before proceeding to prevent further actions when the table is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to ensure that the
throw a retryable exception if cache config do n ' t exist
refactor node package installation check into a separate method in ProcessUtil to improve code readability and reduce duplication in npm installation logic
added JMX annotations to MBeanContainer and Destroyable classes to enable monitoring and destruction of the component in MBeans
changed the condition from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan .
updated string comparison methods in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( )
updated the condition in ` Types . java ` and added new classes ` T6558559a ` and ` T6558
updated player print statements to include player ' s block and size information to improve clarity of player position information for better debugging
camel - kafka : make sure to shut down the kafka consumer when the endpoint be terminate .
removed the example ( ) method from the Schema class to streamline the code by eliminating unused functionality
modified thread interruption logic and added a break statement in AgentRunner . java to ensure proper termination of the loop and handle potential interru
remove the time column from the dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure data integrity by removing the time column
simplified condition in FacetComponent . java by removing unnecessary parentheses to improve code readability and maintainability
replaced linker dependency retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription and RustLibraryDescription to streamline
added name property with getter and setter methods in JaasAuthenticationProperties , JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes
do n ' t swallow exception if the igv can not be connect to the node
refactor scan threshold handling and introduce a new constant for small scan threshold to improve code readability and maintainability by centralizing small scan
added routeId to the filter toString method in RetryGatewayFilterFactory to include the route ID for better debugging and monitoring
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ( ) ) ` in ` LineReaderImpl .
refactor ` onOverviewShown ` method to utilize ` DiscoveryBounce . showForOverviewIfNeeded ` for improved code organization to enhance
refactor conditional checks for ` globalMinPackedValue ` and ` globalMaxPackedValue ` in ` CheckIndex . java ` and
updated the parameter passed to the publish method from ' true ' to ' updateLastState ' to ensure the publish function accurately reflects the
updated string literal syntax in MetastoreDirectSqlUtils . java to ensure proper formatting of string list values in SQL queries
added a null element to the exp list in SpliteratorCollisions . java to ensure proper handling of null values in the collection
alexeibarantsev : add ` ` text ' ' and ` ` exacttextcasesensitive ' ' method to the condition class
replaced the ` do ` loop with a ` while ( true ) ` loop in ` ManyToManyConcurrentArrayQueue . java ` to improve
# 113 - enh : add ` ` forwardonlyfetchsize ( ) ' ' to ormqueryengine
( chore ) camel - http : do not swallow closedchannelexception
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated the window radius calculation in QuickstepAppTransitionManagerImpl . java to include support for rounded corners on windows to enhance flexibility in window
refactor ` DesktopTaskView ` to use ` View ` for background and icon management instead of ` ShapeDrawable ` to improve flexibility
refactor UpstreamCheckService instantiation in UpstreamCheckServiceTest . java to improve code readability and ensure proper initialization of upstreamCheckService
changed log level from warn to debug for session immortal logging to improve logging granularity for better debugging insights
replaced error logging with a return statement for locks retrieval to simplify the code by eliminating unnecessary error handling
[ hotfix ] fix checkstyle violation in executionconfig
added a boolean flag ` containsCustomData ` to control mipmap generation based on its value to ensure mipmap generation only occurs when
replaced double quotes with single quotes for password and secret key assertions in DefaultMaskingFormatterTest . java to ensure consistency in string representation for
list : added ability to select ' nothing ' , and ability to disable item selection ( + bug / defect fix )
removed a condition that checks if the first vector value count is zero in LlapArrowBatchRecordReader . java to streamline the logic to
added file separator handling and improved logging in PolicyContext . java and added a test for file separator expansion in TestPolicyContext . java to
changed ` Set ` to ` List ` for ` flatQueries ` and ` expandQueries ` to use ` ArrayList ` instead of ` HashSet `
updated the implementation of TLSRestrictions . java to improve security and performance of TLS operations
kafkamanager should submit daemon thread when close the producer .
added a " freedisk " parameter to the assertNodeStateProvider method and modified its implementation to remove ignorable node values to improve node state
added a lock file deletion mechanism in RocksdbMavenPomCache . java to ensure proper resource management and prevent memory leaks
hbase - 2181 fix testhquorumpeer . testclientport ( ) in minizookeepercluster
added a new method ` getResponse ` to handle HTTP response retrieval with logging to improve error handling and provide better debugging information during HTTP requests
replaced ` segmentTarURIs . toString ( ) ` with ` segmentTarURIStrs . toArray ( ) ` for converting ` segmentTar
updated loginStudent calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to enhance test
added a null check for ` mCurrentItem . getItemId ( ) ` in both ` EnhancedBrowseFragment . java ` and ` StdBrowse
increased the number of strings from 500 to 100 in TestSpecialOperations . java to optimize test performance by reducing the number of expected
replaced the custom ` hexToBytes ` method with a direct instantiation of ` ByteArrayInStream ` and modified the initialization of ` inStream ` to
rename the method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to clarify the purpose of the method ' s purpose
added a method to check if a state is a direct sub - state and updated tests accordingly to ensure proper handling of state transitions and verify expected
added equality check for ListMultimap and SetMultimap in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation class to enhance functionality by integrating join operations
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify PostgreSQL functionality to ensure that
resolve intermittent test failure on slow ci server
rename AvaticaDatabaseMetaData . java file to improve clarity and consistency in naming
changed ` lifeTime ` , ` idleTime ` , and ` maxWaitTime ` from ` int ` to ` String ` in ` MongoDb
do n ' t cast to mediastreamfactory to avoid npe .
refactor filter handling methods in FacetProcessor to return boolean values indicating applied filters to improve clarity and functionality of filter processing logic
added support for enabling or disabling a timeout handler in the ShuffleHandler class to improve control over timeout behavior during execution
replaced hardcoded value ` - 1 ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED ` in ` O
camel - 16400 : camel - xpath - add debug log to help troubleshoot
updated InputStreamReader in NNDataSet . java and ClauseTest . java to utilize DataResource class for resource loading to improve code clarity and
pmd : add test case for # 1751
added a check for the presence of the ' atlas ' property in the map to ensure that the map does not contain the ' atlas ' property
camel - 16400 : camel - core - add an option to turn off property placeholder resolution .
added database closure in BlockchainTest . java and removed redundant Kafka message broadcasting logic in KafkaTest . java to ensure proper resource management and
refactor line splitting logic in CoreMarkdownNodeRenderer to use a dedicated method to improve code readability and maintainability
removed unnecessary import statements from WebServiceInboundGatewayParserTests . java to streamline code by eliminating unnecessary dependencies
replaced ImmutableList . Builder with List for storing SQL bindings and added logging for deprecated methods to improve flexibility in handling null - friendly bindings and
added a check for the " OpenJDK " system property in the VirtualMachine class to enhance compatibility with additional Java vms
added keep - alive functionality to the ReactorClient class to enhance connection stability by allowing the client to keep alive
replaced string literals for position , texture coordinates , normal , and texture coordinates with constants from ShaderProgram to improve maintainability and readability
camel - 16400 : add support for property component to be able to load property component .
updated null check logic for accountCapsule in UnfreezeBalanceActuator . java to improve clarity and prevent potential null pointer exceptions
update version number for 3.8 . 1 to 3.8 . 1 .
replace occurrences of ` t ` with ` t . unannotatedType ( ) ` in ` mmm Types . java ` and ` pp
updated assertions and initialization for sequence TsFile processors in StorageGroupProcessorTest . java to ensure correct handling of sequence TsFile files during testing
updated multiple classes to use the new Environment class for better environment management to ensure compatibility with the latest Jetty features and improvements in the
added a parameter ` waitbeforestart ` with a value of ` 2500 ` in ` FFMpegVideo . java ` to ensure that
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related methods to simplify the constructor by eliminating
removed unused imports and refactored test methods in AccessorsTest . java to improve code clarity and maintainability
minor refactoring of the lirgenerator to make it easy to get the framemap from the lirgenerator
replaced ` @ Ignore ` with ` @ ConditionalIgnore ` in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestRisk
fix boat have wrong y - coordinate when use water .
updated toString ( ) and getLockID ( ) methods in Directory . java and RAMDirectory . java to improve clarity of object representation and provide
removed the method ` allowExperimentalOptions ( ) ` from the conditional statement to simplify the logic for determining experimental options
added utility methods for asserting paths and assertions in BDDAssertions . java to enhance code readability and facilitate easier assertion
renamed variable ` hp ` to ` hostField ` and updated its usage in ` ForwardedRequestCustomizer ` to improve clarity and
updated log messages in Config . java to provide clearer warnings about missing Kubernetes configuration files to improve log clarity and provide users with guidance
added functionality to handle file uploads and manage upload statuses in the FileUploadService and FileStorageUtils classes to improve upload management and enhance user experience
added new ` ProviderLoader ` and ` ProviderLoaderListener ` classes and refactored ` TerminalManager ` and ` TerminalManager ` to use
replaced references to ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to align with the new
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig for computed fields to improve flexibility and maintainability of the database change log history retrieval
hhh - 13446 - fix test failure on postgresql
fix potential negativearraysizeexception in internalpartitionservicelitemember
added scheduler state checks and improved error handling in ExecutionScheduler and ExecutionSchedulerImpl classes to ensure proper scheduler state management and enhance error reporting during
updated InlineBox initialization and condition checks in BoxBuilder . java to improve code readability and maintainability
reformatted argument checks in StatisticMap . java for improved readability to enhance code clarity and maintainability
updated the return value of getStagedRectSlideEnd method from 383 to 500 to increase the staged rectangle size for better user experience
updated button labels in WaveInfoDialog and PlacementFragment to use localized strings instead of hardcoded strings to improve localization support and enhance usability by
updated the condition to check for both KILL _ ROAD _ ITEMS and getOwnedPlotAbs in BukkitMain .
added a test for touch exploration enablement in ShadowAccessibilityManagerTest . java and modified the listener handling in ShadowAccessibilityManager
pdfbox - 5328 : fix getsubtabletest , a suggest by valerybokov
use getname ( ) instead of getpropertyasstring ( ) for testelement . name
replaced the instantiation of ` NPOIFSFileSystem ` with a factory method ` POIFSFileSystem . create ` to streamline the
added imports for PS and PlotArea , and modified the return logic in Move . java to retrieve plot area information to ensure accurate handling of plot
updated regex pattern for version detection in TestWebHCatE2e . java to ensure compatibility with additional version formats
updated the validation condition for ` count ` from ` - 0 ` to ` - 1 ` to ensure that ` count ` does not exceed the
camel - kafka : fix client id to be unique in kafkaproducer
replaced the import of ` IsolatedClassLoader ` and added a check for the success condition in ` JavacCompiler . java ` to
ggb - 228 do n ' t repaint the dialog if it ' s already close
camel - spring - batch - fix a typo in the comment
added a method ` isAnimationFinished ( float stateTime ) ` to check if an animation has finished to provide a mechanism to determine if an
updated imports in LoginInfoEndpoint . java and LoginMockMvcTests . java , and added a new test method in LoginMockMvcTests .
added null check for otherUrl in TimeLineCursorAdapter . java and modified the refreshing text string in HomeFragment . java to enhance robust
mow - 103 fix space in the ` ` edit ' ' button on android
refactor ObjectHashSet class implementation to improve performance and maintainability of the code
refactor null checks and comparison logic in DataUtilities . java to improve clarity and maintainability of the code
fix mc - 12770 , allow for deletion of enchanted books , allow for deletion of enchanted books
test : add test case for async resource ( # 5391 )
rename the header map suffix from " - target - flat - headers . hmap " to " - target - user - headers . hmap
added error handling for SendFailedException in MailService . java to improve debugging and provide more informative messages during email sending failures
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItem
added unit tests for retrieving partitions by names with single and multiple batches in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed the type of ' sharees ' from ArrayList to List in OCFile . java and OCFileListAdapter . java to improve type
update the index used in the removeViewInLayout method from the last child to the last one to correct the view removal logic for improved
removed unnecessary " org . eclipse . jetty . servlet . util . server . internal " from hide statements in JettyWebSocketConfiguration and
do n ' t use ssl by default for s3
fix jfxradiobutton to update animation when timeline be null
[ flink - 3245 ] [ table - runtime ] fix the logic of deweynumber . tostring ( ) to throw an
updated categorySet handling in MwVolleyApi . java to replace " Category : " with an empty string to ensure consistent formatting of category
updated error message from " Invalid close control status code " to " Invalid close code " in WebSocketClientTest . java to clarify the
added a null check for classLoader in WebappLoader and updated the expected length in TestVirtualWebappLoader to ensure proper handling of null class
no effective change - code cleanup - remove redundant code
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
add a new test class TestPorterStemFilter for testing the PorterStemFilter functionality to ensure the correctness of the PorterStemFilter implementation using predefined test data
updated the method name from ` postBatchMutate ` to ` postBatchMutateIn dispensely ` and added a success parameter to
update package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix concurrent modification exception in chat window manager .
replaced multiple instances of ` Sys . touch ( ) ` with a single import in ` APIUtil . java ` and removed duplicate code in
updated the command in HgCmdLineInterface to include " - mardu " and modified the untrackedFiles method in NoOpCmd
camel - 16400 : camel - netty - use a thread - safe timer to prevent potential thread leak .
changed variable declarations from ` public ` to ` public final ` in ` DirectionalLight ` , ` PointLight ` , and ` SpotLight
replaced direct calls to ` target . getWidth ( ) ` and ` target . getHeight ( ) ` with variables ` w ` and ` h
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a way to convert
add classfinder . findannotatedclasses ( string [ ] ... ) and classfinder . findannotatedclasses ( string ... ) to avoid
modified length adjustment logic in BytesColumnVector . java to handle integer overflow more gracefully to improve robustness by preventing overflow when newLength is
fix test which randomly fail on slow ci server
changed the parameter type of ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and
[ web ] add function . isequal ( ) to check if a point be equal to another
added a null check for the table before setting the column class to avoid potential NullPointerException when table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential class cast exceptions to improve robustness by avoiding runtime exceptions when
added methods to retrieve ` BuckConfig ` and ` Optional < ImmutableList < Path > > ` from ` DistBuildConfig ` , and updated
do n ' t show ` ` no export ' ' warning for double entry
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a known issue
modified the return type of ` doJoin ` and ` doJoin ` methods to return a boolean indicating success or failure to improve the clarity
removed the getAutodeps ( ) method from JavaLibraryDescription . java to streamline code by eliminating unused functionality
added FLAG _ ACTIVITY _ NEW _ TASK to intent creation and modified intent flags in LauncherTimelineCursorAdapter . java to ensure that
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance the functionality of the ` Spi
updated assertions in RepositoryConventionPluginTests to reflect the correct Maven repository URLs to ensure the tests reflect the correct Maven repository configurations
of - 2716 : add affiliate . affililiate task to allow customization of affililiate
improve error message when an invalid tag library uri start with a dot .
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling and refactored cache key creation in CacheKey . java and CacheKeyTest . java to improve object comparison logic and enhance
updated file type detector implementations across different platform - specific files to enhance compatibility and improve file type detection across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
updated ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallback ` and ` VirtualSensorDirectChannel
added a condition to check if the context object is not before execution in HttpSessionSecurityContextRepository to ensure that security contexts are not removed from the session
replaced the variable name ` lch ` with ` loopback ` and modified the logic for retrieving the loopback address to improve clarity and functionality
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and refactored buffer management in ` Zlib .
updated security checks and improved exception messages in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to enhance
added a check to ensure the icon change listener is only added if it ' s already installed to prevent unnecessary actions and improve performance by avoiding
added support for Russian language in the application to enable localization support for Russian in the application
hhh - 11348 use nanoseconds instead of second in basescanttosqlastconverter
disable frame state verification in substrategraphkit .
added methods to reset system properties in RobolectricTestRunnerTest and reset them in TestUtil to ensure proper cleanup of system properties after
added a system class for " org . slf4j . " in ViewClassLoader and updated tests for its functionality to ensure proper loading of
added a check for " jar " packaging in ChangePackaging . java and implemented a custom toString method in Xml . java to ensure proper
fix flaky test : download file with \ ' txt ' extension
clear the nk _ buffer _ clear method in GLFWDemo . java to reset the buffer before processing new commands
updated JogService and Settings classes to use preferred units instead of default units to improve consistency in unit management across the application
[ log4j2 - 1342 ] fix test failure in datepatternconvertertest
reformatted return statement in Terminator . java to improve code readability and maintain consistency
improve error message when hdfs namenode can not be resolve
fix ( freezev2 ) : use jabrefexecutorservice # submit instead of executorservice # schedule
updated FtpReconnectAttemptServerStoppedIT to replace sleep durations with awaitility and added a method to count active connections to improve reliability of
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve performance by using a more
added ` ignore ` methods to ` JavaUtilLog ` , ` Logger ` , ` Slf4jLog ` , and ` StdErr
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when runningTaskView is null
removed unnecessary type casting for getDamage ( ) in BukkitWorld . java to simplify code by eliminating unnecessary type casting
remove image cleaning from the panel manager to improve image handling efficiency
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMap and SimpleFS directories to enhance flexibility in directory operations by allowing
added null check for the BaseColor object in PdfCleanUpProcessor . java and updated test cases in PdfCleanUpProcessorTest . java to
updated the field name in the graphTerms assertion from " field1 = field1 " to " field1 _ s maxDocFreq " to
updated the implementation of the ExtendedOperatingSystemMXBeanImpl class to improve performance and maintainability of the code
added methods to install left commands and initialize title bar status in SideMenuBar . java to enhance navigation functionality by allowing commands to be displayed on
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to
added SybaseDatabase support to the condition for dropping primary keys in DropPrimaryKeyGenerator . java to ensure compatibility with Sybase database operations
refactor Client class to improve code structure to enhance maintainability and readability of the code
[ java ] update lastrecordingposition when leader be ready .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to ensure proper termination of the method after processing
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added shutdownHttpServer method to handle server startup exceptions to improve robustness by gracefully shutting down the server if an exception occurs
camel - 16171 - camel - aws2 - s3 : support multipart upload , fixed c
[ hotfix ] [ webmonitor ] fix typo in taskmanagermetricshandler
db upgrade : do n ' t drop key that do n ' t exist in 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to include a password check to ensure that
added maxEnergyLimit variable and updated energyLimit assignment logic in VMActuator . java to ensure energy limit is accurately assigned based on
added maxInMemorySize property and its getter / setter in HttpClientProperties . java , and modified the WebClientPlugin constructor to accept it to
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
added new Cucumber test and step definitions files for Cucumber testing to facilitate easier testing and execution of Cucumber
handle double value parsing in TypeJsonUtils . java and add corresponding tests in TestArrayOperators . java to improve robustness of double handling and
updated byte array part extraction and appending logic in Utf8StringBuilderTest . java to ensure correct handling of additional input formats
added a check for parameter set before processing in the Params class and introduced a new method to verify parameter handling to enhance parameter processing robustness and
camel - 16400 : camel - circuitbreaker should limit the number of output to a maximum of 1 . thanks to jo
updated the maximum buffered documents configuration and modified the assertion in TestIndexWriterExceptions . java to ensure that the document frequency is set to a minimum
replaced usage of string hashing with Sha1HashCode for resource APK , primary dex , and string assets hash updates to improve efficiency
removed unused methods ` enumValue ` , ` intValue ` , and ` longValue ` from ` AsmRuntime . java ` to streamline code
add new biome tag ( is _ mANGROVE _ SWAMP , IS _ DEEP _ DARK , IS _ DEEP
use dedicate thread for image request ( issue # 113 )
changed access modifiers of fields in BaseTableUpsertMetadataManager from private to protected and refactored the preloadSegments method to improve accessibility and
replaced occurrences of " ă ă ă " with " ă ă " in multiple files to
updated image comparison method from ` getImage ( ) . equals ( ) ` to ` hasImageEqualTo ( ) ` in ` AbstractSunSecure
camel - jbang - add -- repos option to run command
added handling for NaN scores in CrawlDbReader to improve robustness of score processing
added cleanup method to delete temporary files after tests in OnStartupTriggeringPolicyTest to ensure clean - up resources after tests are executed
replace ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and refactor focus handling
[ hotfix ] [ runtime ] implement autocloseableasync in checkpointscleaner
added a new file ` XPathWhiteSpaceTest . java ` that includes XML schema validation to facilitate testing of XML schema handling in a
[ bonsai ] do n ' t overwrite trie log layer when rollback be not override
refactor FilledNewArrayInstruction class for improved memory management to enhance performance and maintainability of the code
added ` @ Test ( timeout = 60 seconds ) ` to the ` @ Test ` annotation in ` SimpleNetworkTest . java ` to ensure
updated the method to check if the parentPath ends with a slash to improve robustness of path validation logic
added a console message to indicate failure to load the skin file to improve error handling and provide feedback during skin loading failures
added dirty state management and validation methods to LgoLevel2Update and LgoGroupedLevel2Update classes to improve handling of state changes and
added a static final ` UNDEFINED ` constant to the ` Result ` class and replaced it with an instance of ` Result ` in ` TestStep
updated exception handling in TestTransactionCallback from PersistenceException to NullPointerException to ensure proper handling of potential null pointer exceptions during database operations
use non - jet support for uploadjobmultipartoperation ( # 16331 )
( chore ) camel - core : improve error message when recover from the scheduled job journal
bug fix : do n ' t use getchildnodes ( ) in viewlayoutstrategy
removed the ` volatile ` modifier from the ` pos ` variable and added a ` sizeMask ` field in ` DataOutput2 ` to improve
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark these tests as ignored due to cr
replaced the variable ` targets ` with ` endpoints ` and modified the assignment of ` messages ` to improve clarity and correctness in handling
updated parameter order in FileManager . java for consistency to improve code readability and maintainability
updated TransformFunctionType to include descriptive names for arithmetic operations to enhance readability and maintainability of the code
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and updated package - info . java files
updated RFC reference from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with RFC 5280 standards
updated the VERSION constant from " 2.17 . 3 " to " 2.17 . 4 " and changed the type of ' cval
refactor ListActivity to use a loop for retrieving selected items and replace HashMap with SparseBooleanArray in NoteAdapter to improve performance and efficiency in
reorder conditional checks in DirectUpdateHandler2 . java for better readability to improve code clarity and maintainability
update ConfigFileApplicationListener to use ResourceUtils for URL handling and add a test for absolute resource defaults to enhance URL validation and ensure correct file path
updated ` TaskViewSimulator ` and ` TaskThumbnailView ` to accept ` Context ` as a parameter and modified ` PreviewPositionHelper `
[ java ] only publish leadershipterm when there be a new leadershipterm .
added error stream logging and updated assertions in PMDCoverageTest . java to improve clarity and accuracy of error messages during tests
refactor the skip logic in ByteArrayInputStream and add a new Skip class for testing to improve handling of skipped bytes during input stream operations
refactor conditional checks in UpdaterTask for clarity to improve readability and maintainability of the code
changed the visibility of MAX _ HEADERS from final static to public static and added a check for the number of headers in the block chain download
added ` rt . jar ` to the ` STANDARD _ LIBRARIES ` list in ` ModClassLoader . java ` to include additional library
do n ' t send a hello message if the local node be not ready
[ geos - 7017 ] make sure we get the heterogeneous name from catalog , not use hardcoded string
added a check to ensure response is not committed before sending error to improve error handling by avoiding unnecessary error messages when the response is already committed
simonstewart : fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
modified fade - out behavior in ` HomeGestureTutorialController ` and added feature flag checks in ` SwipeUpGestureTutorial
fix ( prefab ) : do n ' t log unknown component in prefabserializer
updated external group setup in LdapMockMvcTests . java to include " internal . superuser " and " cn = superuser " to enhance
updated the thirtyDays variable declaration in FreezeBalanceActuator . java and added a validation check in TransferActuator . java to ensure
replaced hardcoded slash with the platform - specific file separator in FileResolverTestBase . java to ensure compatibility with different operating systems
ggb - 1340 make sure undo / redo work again
updated GpsMainActivity to retrieve session description instead of an empty string and modified AnnotationViewFragment to use EventBus for event handling instead of
updated JsoupNonVisualRegressionTest to create a PDF file if the number of pages does not match to ensure that the test does
* replace androidbufferallocator with androidnativbufferallocator ( # 1193 )
added checks for flag names starting with " ! " and modified flag checking logic in multiple files to improve flag handling and ensure accurate flag processing
added a NOPMD comment to the ResultSet initialization in JDBCHistoryCache . java to improve code clarity by indicating that the query
updated the condition for checking item use from equals to equals in BattlePassManager . java to improve code clarity and maintainability by
http : / / issues . apache . org / jira / browse / amq - 3892 - add a test case to show
server : fix race condition in affinityapitest
added a null check for the command in Main . java and updated the argument check in Main . java to handle help commands and improve argument validation
updated LightOutputStream initialization from a fixed value of 7 to a dynamic value of 4 in multiple classes to improve performance by optimizing light output size
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
modified ClassWriter . java to introduce a showBlank option and updated conditional checks accordingly to enhance the control over the visibility of the presence of blank
removed assertion for length in Person . java to streamline validation process by eliminating unnecessary length checks
added null check for the file extension before checking if it exists to ensure robustness by preventing potential NullPointerException when the file extension is invalid
replaced return statement with continue in ContactRightButtonMenu . java to ensure proper execution flow and prevent potential infinite loop
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
refactor the binding and closing logic of PlainSocketImpl to use a delegate instance for improved clarity and maintainability to enhance code read
added functionality to manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by properly removing items from the adapter
updated log message from " center of element " to " in - view center point " in Actions . java to clarify the context of
added a new file ` bug4865918 . java ` to implement a GUI test for a scrollbar to address bug 4865918
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to utilize the newer ` Velocity `
simplified import statements and added group triggers handling in QuestCommand . java to enhance code readability and provide feedback when a group does
do n ' t try to select an account if no file manager available
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to facilitate object - oriented string conversion
updated the configuration URI in the CloudService annotation to use a constant for the configuration URI to improve code readability and maintainability by centralizing
removed viewport component and JScrollPane settings in BrowserPanel . java to streamline the scrolling functionality for improved user experience
updated key mappings and event handling in LwjglInput , ParticleEditor , and TwoL classes to improve keyboard navigation and enhance event
added a conditional check for " moreIndexingFilter . indexMimeTypeParts " before retrieving MIME type parts to enhance flexibility in handling MIME type parts
added a author pattern to identify and format comments in JSDoc . java to improve code readability and maintainability by separating authority checks
rename constants from DELTA _ TOTAL _ DATABASES and DELTA _ TOTAL _ TABLES to CREATE _ TOTAL _
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for improved schema management to enhance
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` for query parameters to enhance flexibility by
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al
added a condition to check if Firefox is not supported in WebAudioWrapper to ensure compatibility with non - Firefox browser scenarios
added an ` appendInterceptor ` method to the ` GrpcServerBuilder ` class and removed the private constructor from ` InterceptorConstants ` to allow
added support for " DEFAULT " engine in SQL table creation statements to ensure compatibility with different database engine requirements
modified the ` WriterRecordBatch ` and ` StreamingAggTemplate ` classes by adjusting the ` kill ` and ` return ` statements to improve
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean flag ` hasFrom ` to the ` Delete ` class and modified the ` DeleteDeParser ` and ` DeleteDeParser `
renamed the method ` isSuccess ` to ` isMultiStatus ` and updated related logic for handling multi - status synchronization to improve clarity and functionality
refactor applicable tests check into a new method ` RecipeSchedulerUtils ` to improve code readability and reusability by encapsulating logic
updated regex pattern for log line parsing in LogAnalyser . java to improve clarity and accuracy of log output formatting
( chore ) camel - test - infra : re - enable integration test in camel - google
fixed - redisearch numericfilter should n ' t set exclusive range by default # 5012
refactor CCLicenseStep to use generics and simplify license selection logic to enhance type safety and improve code readability
added null check for ifcRoot . getGlobalId ( ) before accessing its value to prevent potential NullPointerException when accessing the ifcRoot
updated equality check in OptionalAssert to use comparison strategy to improve accuracy of value comparison in assertions
refactor NoNewLineParagraphCssApplier and ParagraphCssApplier to use a boolean variable for memory management to improve code readability and maintain
added a new file ` TestArrayCopyToFromObject . java ` to test array copy behavior to ensure that ` ArrayStoreException ` is thrown when
replaced ` \ ` with ` Escaper . escapeAsPythonString ( MorePaths . pathWithUnixSeparators ( ) ) `
fix regression introduce with connector refactoring .
fix checkstyle issue in generator / objects / craftinghelper . java
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to instability
[ java ] fix intermittent failure in testinternalinputbuffer
added a ` autoloadLocks ` set and modified the ` autoloadCall ` method to include a lower name parameter to improve concurrency management during class loading
updated the server version comparison logic in CustomPlaybackOverlayFragment . java and modified PlaybackController . java to use the current server version to ensure
replaced instances of ` writeJAASConf ( ) ` with ` writeJAASConf ( ) ` in ` BasicKrb
modify Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a JSR250
updated import statements in MP4Parser . java for better organization and clarity to enhance readability and maintainability of the import statements
added a new constant HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to enhance session parameter management and provide
camel - 16400 : add snappy compression codec to camel - hdfs
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing during tests
fix bug # 49966 - allow xssfcell . setcelltype ( cell . cell _ type _ blank ) to work correctly
updated glyph rendering logic in GlyphLayout . java and modified a test message in BitmapFontTest . java to improve text rendering accuracy and clar
refactor imports and variables in Fabric8IstioIT . java for improved clarity and consistency to enhance code readability and maintain
replaced direct calls to ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with calls to ` getPlaybackManager ( )
fix potential resource leak in simpleauthority
skip putfromloadall if the value do n ' t exist in memory
updated return statement to use bitwise OR with ERROR _ BIT instead of bitwise AND with ERROR _ BIT to ensure correct handling of both LENGTH _ BIT
do n ' t allow to create a default policy if there be no read policy
added a ConcurrentHashMap to manage CompositeFont instances to improve performance by reducing redundant creation of CompositeFont instances
set prefHeight to 0 and adjust its value accordingly to simplify the calculation of prefHeight by removing unnecessary height adjustment
dmnfeel : improve error message when use dmn expression ( # 3649 )
removed unused imports and modified the ` isVacant ` method in ` CellLayout ` , ` DeferredHandler ` , and ` Utilities `
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public and updated its invocation in ` NavHandleLongPress
added null checks for node and edge types in ElementFactoryImpl and ImportContainerImpl , and improved edge type handling in ImporterGDF
[ beam - 9545 ] drop unknown response future from fn api control client ( # 9552 )
nifi - 10261 : fix npe in binfiles when process flowfiles larger than the bin limit .
replaced the method of finding the closest tile with a loop that calculates the closest destination to improve efficiency by eliminating the need for finding
added content - length check in ` RestTemplateCopyHeaderFilter ` and a corresponding test in ` TestRestTemplateCopyHeaderFilter ` to ensure
added case handling for TYPE and CHAR in Java2TypeScriptTranslator and updated transpile method in SyntaxTests to improve type conversion accuracy and
updated filter parameters and adjusted sample sizes in the FilterFactory , ChannelizerViewer , and TwoChannelOutputProcessor classes to improve filtering accuracy and enhance
hbase - 1746 canary canary should add - allregions command - line option to specify regionserver mode
removed NodeModule import from CassandraConnectorFactory and modified ImmutableMap initialization in TestCassandraConnector to simplify code by eliminating unnecessary dependencies
added a call to reset cursor position in KahaDBStore . java to ensure proper cursor state management during operations
increase the minimum size of the call dialog and adjust the size of the one - to - one call window when the window be resize .
fix miss loss of state information in blockfalling . close # 3636
simplify and reorganize test suite for httpmirror
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic to improve code clarity and ensure proper cleanup of principal entities
removed the boolean parameter from the getTableSnapshot method call to simplify the method signature for better readability
remove the maintain flag from the timeout check and add an exception handler to handle any cause of the poll error .
updated the error message for the android . licenseKey in AndroidGradleBuilder . java to clarify the required build hint for the Android
updated the instantiation of ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed unnecessary
[ drools - 5331 ] add support for drools - root . classes ( # 5331 )
added an assumption to skip the CheckIndexTest on Java version 19 to ensure the test does not run on unsupported features
removed the context parameter from the assignTargetsForSplitScreen method and updated target assignment logic to streamline target assignment process by eliminating unnecessary
[ hotfix ] [ doc ] fix typo in leaderlatch javadoc
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService to enhance functionality for initializing zk - SNARK parameters for
transactionconfidence : add getdepthfuture ( ) to allow change the depth of a transaction .
updated variable and method names from ' longtitude ' to ' longitude ' across multiple classes to improve clarity and consistency in naming conventions
set default value of platformName to " ios " to ensure platformName defaults to " ios " for consistency
doc ( regen ) : fix typo in javadoc
remove unnecessary whitespace in conditional statements for consistency to improve code readability and maintainability
pdfbox - 4071 : fix typo find by codespell on fossies . org
added error handling for outgoing frame processing in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing
replaced the try - catch block with a privileged action for getting the caller class to improve security by using AccessController for privileged actions
added logic to update the parent of child categories based on their ID to ensure that all child categories are removed from the database
update contrib manager dialog to use localized title instead of hardcoded strings to improve localization support for different contribs
added a ` vwap ` field to the ` Ticker ` class and modified the constructor and methods accordingly to enhance the ` Ticker
added functionality to display a ` noWidgetsView ` and adjusted bottom inset handling in the ` SearchAndRecommendationsScrollController ` and
add rendergraphapi . java and update worldrendererimpl . java to use it .
added primary color setting to NCFirebaseMessagingService to enhance the messaging service ' s appearance based on the primary theme color
updated ShadowUsbManagerTest . java file to improve test coverage for USB functionalities
add some logging to make sure we do n ' t start and stop evaluation of all preference
added a call to update the selected configuration in the Rocket class to ensure the configuration updates correctly after changes
updated width and height calculations in AndroidGraphics . java to ensure that a minimum value of 1 is returned to prevent runtime errors
[ ci ] use linkedhashmap instead of hashmap to preserve order
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to utilize a more efficient closure management approach
( chore ) camel - core : migrate route - main to junit5
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , for WebSocket integration testing to implement and
[ ds - 3952 ] fix typo in abstractimportmetadatasourceservice . java .
refactor authentication equality check to use a dedicated method to improve readability and maintainability of the authentication comparison logic
added a conditional check to return false based on the system property " jnr . ffi . compile . x86asm " to ensure that the
refactor code to use a local variable ` callNodeType ` instead of repeatedly calling ` callNode . getType ( ) ` to improve code read
added a new annotation ` Insecure ` in the ` MessageBuffer ` class and modified the constructor visibility in ` MessageBuffer ` to enhance encapsulation
added new Hive configuration variables to HiveConf . java to enhance configuration options and improve code readability
initialize scopes and policies as new HashSet instances to ensure safe initialization and avoid potential NullPointerExceptions
updated the ` decrefOnClose ` variable to be final and modified the constructor of ` MultiReader ` to accept a ` Collection < Reader
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 classes to
replaced ` sendKeys ` and ` sendKeys ` methods with ` setValue ` and ` setValue ` methods in ` InputFieldTest . java
refactor ` getFirstTypeArgument ` method for clarity and consistency across multiple classes to improve code readability and maintainability by standardizing method
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Collection < Integer > to improve type
added duration and bgColor properties to FlipTransition class to allow customization of transition duration and background color
removed trace logging for invalid subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
bump major and minor version to 9.10 in forgeversion . java
replaced usage of ` System . err . println ` with ` LoggingUtil . log ` for warning messages based on Java version to improve logging
update javaparser version to java 16
updated padding settings for the background view in ExpansionViewHelper . java to improve the appearance of the status view when there are more replies
call onresponse ( ) if no namespace be specify in the node ' s versionmap
added metadata handling functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional data associated with seed URLs
[ drools - 725 ] fix npe in patternbuilder when declaration be null
refactor TestCoprocessorWhitelistMasterObserver for improved clarity to enhance code maintainability and readability
added package name handling in AnnotationActionValidatorManager and updated related tests to ensure the correct package name is used for action validation
updated assertions to use ` Arrays . asList ( ) ` and added a new test method for verifying the behavior of iterables with null values to
added stream ( ) and parallelStream ( ) methods to MapIterable and PrimitiveObjectMap classes , and created corresponding unit tests to enhance functionality for
replace return statement to return a cloned instance of notifInfo to ensure that the original instance of notifInfo is not modified
make sure we do n ' t try to compare ` ` a ' ' in order to ` ` a ' '
update AEADBlockCipher . java for improved encryption handling to enhance security and performance in encryption operations
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a check for null ID in PackageResourceTable and changed the default resource mode from best to legacy in RobolectricTestRunner to
added a conditional check for ` ulSize ` and ` ulPos ` before accessing ` head _ Table ` and ` post _ Table ` to
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static messageReaders list to enhance flexibility by allowing multiple message readers
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
removed unnecessary import and validation check for MavenDeployer in StandardMavenAuthenticationProvider . java to streamline code by eliminating unnecessary checks
refactor AudioNode class to improve code readability to enhance maintainability and ease of future updates
added SSL context initialization and improved exception handling in LinkyHandlerFactory . java and enhanced cookie store management in EnedisHttpApi . java
added imports for OracleSqlOperatorTable and modified the HiveFunctionRegistry class to use streams for string manipulation to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4892 - add instance name to mbean name
renamed the parameter ` alias ` to ` possiblyFlavoredAlias ` and modified the return statement in ` getBuildTargetForAlias ` to
camel - 16400 : camel - olingo2 - optimize olingo2consumer to reduce call to getresultsprocessed ( )
added version mapping for EquivALENT _ VERSIONS in MetaStoreSchemaInfo . java to ensure compatibility with the latest Hive version
server : do n ' t expunge vm if expunge fails
added multiple @ Deprecated annotations to the AbstractDateAssert class to indicate that certain methods are outdated and should not be used
refactor ONDashClockExtension to use a new method for retrieving the note title and update AlarmReceiver to use this new method to
renamed ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and updated test assertions in ` TotpEndpoint
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls across multiple classes to improve performance and readability by using
replaced ` TestController ` and ` TestController ` with a new ` TestIdleListener ` in ` AsyncTimeoutTest . java ` to
make testbigquerytable unique in bigqueryio integration test
added background resource management in HotseatPredictionController and reset the icon in BubbleTextView to improve visual appearance and ensure proper
mondrian : fix typo in property name .
[ native ] add test for native query execution
refactor feature retrieval logic in LIMEExplanation . java and add assertions in LIMEColumnarTest . java to improve code clarity
added support for passing arguments for running with - r in the AppleSimulatorController and InstallCommand classes to enhance functionality by allowing users to
refactor methods to use GenericStyledArea for obtaining current paragraph and position to improve code readability and maintainability by reducing method
add a check for the availability of the lifecycle . getstate ( ) . isavailable ( ) before proceeding to ensure that the manager and
added a line to center the background in QsbWidgetHostView to improve the visual appearance of the UI elements
added timing and tracking for flag processing in SQLManager and improved handling of plot flags in BlockTypeListFlag and PlotArea to enhance performance
replaced specific GL _ DEPTH _ TEST imports with a wildcard import and modified glEnable / glDepthFunc logic based on the floatingText
rename target _ com _ oracle _ truffle _ nfi _ backend _ libffi _ backend _ libffi _ backend _ lib
added getter and setter methods for the propagationBehavior variable in JdbcAggregationRepository to allow dynamic configuration of the propagation behavior for transaction transactions
add support for l1 and l2 regularization in layer validation ( # 1353 )
do n ' t exit the server in case of read / write failure
changed the visibility of the colorStack array from static to instance and updated its assignment to use the instance variable instead of a static instance to allow
changed boolean parameter from false to true in getMappedStatement and hasStatement methods to enable statement mapping functionality
convert currency to lowercase when retrieving depth in BTCEPollingMarketDataService to ensure consistency in depth retrieval by converting currency to lowercase
fix invalid command value in unit test
removed the ` versionedHashes ` field and related methods from ` EnginePayloadParameter ` and ` AbstractEngineNewPayloadEIP6110Test `
set triggerPrice to empty and notify onTriggerPriceTextFieldChanged in MutableOfferView . java to reset the trigger price and update the trigger price
modify studentfeedbacksubmissioneditsaveaction to make it easy to edit student feedback submission
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2640 addendum make sure we do n ' t log a stack trace if we ca n ' t run the
# 113 - fix beanstate . getchangedproperty ( ) when set many property on bean
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control whether to always
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for
replaced specific imports with wildcard imports for java . awt and javax . swing , and added the firePopupMenuWillBecomeVisible method
make stressprofile more resilient to race condition
replaced the use of ` scala . collection . JavaConversions . asScalaIterable ` with a static import of ` collectionAs
added null check for requests and improved logging in MockServerEventLog . java and HttpForwardObjectCallbackActionHandler . java to enhance robust
( chore ) camel - base - engine : log warn if property file can not be load
refactor SessionDataSet initialization to use try - with - resources syntax to ensure proper resource management and avoid potential memory leaks
added checks for multicast support and NIC status in SetOutgoingIf . java to ensure proper handling of multicast connections based on network connectivity
updated the constructor of sqlCommand to include a length parameter to ensure the command string does not exceed the specified length for accurate parsing
updated methods in UnDelegateResourceActuator and removed duplicate calls in BandwidthProcessor and EnergyProcessor to streamline consumption time management and
added a method to set an invalid session strategy and updated its usage in the SessionManagementConfigurer class to ensure that the invalidSessionStrategy is
enhanced error message in ` FailedSerializationError ` to include additional context about the token retrieval failure to improve debugging by providing clearer context about
add a new test class ` MapAssert _ containsKeys _ Test ` to facilitate testing of the ` containsKeys ` method in
replaced references to ` stgen ` with ` psgen ` and added a new interface ` JDBC4TemporaryPreparedStatementMethods ` with a
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified the ` DirectUpgradeTest ` to use ` Handler ` instead of `
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to improve type safety and performance by using a more suitable data structure
pdfbox - 2576 : avoid npe , a suggest by valerybokov
replaced the initialization of MethodHook array with a static final EMPTY constant to improve memory efficiency by avoiding unnecessary object creation
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified authentication logic to handle access control to improve flexibility
updated the afterJob method to accept a JobExecution parameter across multiple classes to enhance job listener functionality by associating the listener with specific execution context
added a condition to check if the file can be executed before checking if it can write to ensure the file is writable before proceeding with operations
doc ( regen ) : update protoc to v3.15 . 3 ( # 355 )
rename ` ` result ' ' to ` ` event ' ' for consistency
added new constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , and PROFILE _ NAME in BundleConstants
change searchexpression . applyrule ( ) to accept a map instead of a hashmap
mow - 169 use absolutescreenlocateable instead of geowidget for drag and drop
updated texture handling and UI stage initialization in ProjectiveTextureTest . java to improve texture format and filtering , and enable viewport scaling for better rendering
changed the return type of setResourceToDelegate from void to File and updated file creation logic to improve resource handling by allowing the method to return the
camel - 16400 : fixed property placeholder be not resolve correctly . thanks to joao for the patch .
updated conditional check from ' > ' to ' > = ' in ActionScheduler . java and modified assertion in TestActionScheduler . java to ensure
updated debug _ zip path and added a null check before replacing debug . log to ensure that debug logging is properly formatted and avoid potential null pointer
fix ( renderdebugconfig ) : fix npe when hud hide
add pipe . resetgate ( ) to make it easy to reset gate state .
added locale management in TestSupplementary . java to ensure consistent locale settings during tests
updated the random color generation of the team ' s HSVtoRGB value from 0.8 f to 0.4 f to enhance the
replaced Set with Collection for activeMatchedStates and modified logging statements to check for log level before removing states to improve performance by avoiding unnecessary
updated the condition to check for null and empty annotations in SoftAsserts . java to ensure correct handling of null and empty exceptions
updated error handling in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve error reporting and provide more informative
replaced report calls with a new method ` toCsvFile ` for generating CSV files to improve code readability and maintainability by consolidating
added null checks for note and updated activity references in DetailFragment . java and WidgetProvider . java to improve robustness and ensure proper access to
added tracking for peak tasks and modified loading calculation logic in AssetManager . java to improve performance by accurately reflecting the number of loaded tasks
simonstewart : make the firefox driver support native event on window
added methods to manage custom score and fetch interval in the Injector class to enhance scoring functionality by allowing customization of score and fetch interval
updated imports from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` to ensure compatibility with the
modified the condition in CoreContainer . java and added a method to check if the zkController is null , and added a test for the share
updated sizeInBytes ( ) method calls to accept true as a parameter across multiple classes to ensure accurate size representation for improved performance
replaced assertions for version1 _ 2 from assertEquals to assertNull in VersioningTest . java to ensure that version1 _ 2 is
modified SQL queries to include an additional check for non - null attributes in PostgreSQL attributes to ensure correct handling of non - null values for domain types
[ java ] update follower commit position when append new leadership term event .
removed unused import and modified the buildMediaType method in WebClientPlugin . java to streamline the code and improve readability by eliminating
updated method names from ` fillUsingLengthPrefix2 ` to ` fillAndGetIndex ` and ` fill ` to ` fillSlice ` across multiple
updated conditional checks in AcidUtils . java and added a new test in TestCleaner . java to improve code clarity and ensure proper
set default value of storageScheme and qualifierEncodingScheme to ONE _ CELL _ PER _ COLUMN or NON _ ENCODED _ QUAL
added new files for ` PojoProducersCustomized ` and ` RestProducersCutomized ` in the ` demo ` package to
replaced string literals with constants from CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve code readability and maintainability
register aes gcm siv proto serialization at the end of the siv key manager .
add wooden slab replacement to ore dictionary , close # 363
refactor session management classes for improved consistency and clarity to enhance maintainability and readability of session handling code
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
updated table names in DenormalizedTablePhysicalIncludedTableConstraintTest . java to include " SUPTABLE " and " SUBTABLE " to
update sprite batch drawing coordinates in HelloWorld . java to correct positioning of textures
updated the y - coordinate calculation logic in PlayerFunctions . java and modified the toString method in PlotId . java to correct the y - coordinate
added a deprecated version constant for Lucene 8.5 . 0 to signal that this version should no longer be used in future development
updated the string concatenation format for the closeSocket method in SSLSocketImpl . java to improve readability of the log message for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL statements can be correctly parsed and
refactor dependency type into an enum to improve code readability and maintainability
refactor ` makeTargetDescription ` to be public and simplify method calls in ` ParseContext ` to improve code readability and maintainability by
replaced the method ` testFromMain ( ) ` with ` test ( ) ` in ` TestOutOfMemory . java ` to simplify the
replaced the array size of ` configBlocks ` from ` Block . blocksList . length ` to ` 256 ` to optimize memory usage by
refactor version checking logic in BukkitMain . java to improve clarity and ensure compatibility with Bukkit ' s versioning
updated SQL statement escaping in ` AbstractSQLChange ` and modified test cases in ` ExampleAbstractSQLChangeTest ` to ensure proper SQL syntax handling
added ` ofAll ` and ` withAll ` methods to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
added validation for HTML file names and improved error handling in BuildNavAndPDFBody . java to ensure proper handling of HTML escape codes and
updated MqttBrokerConnection constructor parameters from true to false to adjust connection behavior for improved performance
updated change set retrieval logic to use the root change log if available to improve performance by avoiding unnecessary retrieval of change sets
[ type : refactor ] fix code style issue ( # 4325 )
added HiveMetaStoreClient to manage database cleanup and logging in TestHiveMetaStorePartitionSpecs and TestObjectStore to enhance database management and
added a order _ currency parameter to the BithumbAuthenticated and BithumbAccountServiceRaw classes to enhance functionality by allowing users to specify
remove ssefluxwebconfig because it be n ' t use
updated method return type checks from ` getFullyQualifiedName ( ) . getFullyQualifiedName ( ) ` to ` getReturns ( ) . isVoid
replaced the static YAML _ READER with a static YAML instance and added a new endpoint to list YAML configurations to improve code readability and
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enforce encapsulation and
refactor thread factory implementation to use a lambda expression instead of an anonymous inner class to improve code readability and reusability
added unit tests for adding to a list in MongoTemplateTests . java and created a new PersonWithAList class to ensure correct functionality of
do n ' t update size of applet panel when resize
replaced direct visibility setting of toolbar with a delayed execution using a Handler to improve UI responsiveness by delaying toolbar visibility updates
refactor the first page reader logic into separate methods for checking overlapped pages to improve code readability and maintainability by reducing duplication
server : save vm password if vm fail to start
added new boolean flags ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to ` Response . java ` to
added a warning check for assignment side effects in GroupDialog . java to ensure proper handling of assignment side effects during group operations
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated height adjustment condition in FileUploadApiController . java from maxHeightWithMargin to maxWidthWithMargin to ensure icon dimensions do not exceed the maximum
refactor ` fetchPublicKey ` method and replace ` EncodingUtils ` with ` JcaPEMWriter ` and ` StringWriter ` for improved memory
added a new method ` checkContentTypes ` to handle content type checks and modified import statements in ` Basic . java ` to improve mime type validation
added JZlibDecoder and JZlibEncoder for handling compression in NettyConnection to enable compression functionality for improved performance
added a static method ` doesClassLoaderDescendFrom ` to the ` Util ` class and refactored the ` Class ` and ` MethodHandles
modified the method signatures of ` doConnect ` to ` connect ` in ` ChannelProvider ` and ` ProxyChannelProvider ` to improve clarity
drill - 1342 : fix csvreader to correctly handle empty final column .
added compass gravity and margins for bottom and left alignment in NearbyMapFragment . java to improve the visual appearance of the map
added unit tests for the ` computeNearestDistance ` method in ` GeoPathTest . java ` to ensure the correctness of the interpolation function
added HiveException handling and improved error messaging in the LeafFilterFactory and ParquetFilterPredicateConverter classes to enhance error reporting and provide clear
added a condition to set the audio track ' s language if it is blank to ensure the current audio track reflects the correct language for video
log warn if schema in new version do not match old version
replaced manual array resizing logic with a consolidated ` addAll ` method across multiple array types to improve code readability and reduce duplication in
reformatted the closing of the connection in DataSourceProxy . java to improve code readability and maintainability
refactor InMemoryClientRegistrationRepository to accept a map of ClientRegistration objects and enhance null and empty checks for registrations to improve flexibility and
added a method to reset the UI state in SchemaUpgradeHelper to ensure that the UI state is properly reset during upgrades
added a failedStep flag and modified the logic for reporting failures in JUnitReporter to handle pending and non - strict scenarios to improve reporting accuracy
fix playerselector not accept command from server . close # 2796
added the Closeable interface to the Selector class to ensure proper resource management and allow for closing resources
updated connection pool implementation in MaxConcurrentStreamsTest . java to use MultiplexConnectionPool for improved performance and resource management
added stringType ( ) method calls to CoreOptions . java to enhance configuration options for string type handling
updated HqlQueryRenderer and related tests to handle different character and parameter types to improve query rendering flexibility and ensure compatibility with EclipseLink
updated HTTP status checks and introduced a constant for NOT _ SET _ 000 to improve clarity and consistency in handling HTTP status codes
pdfbox - 4892 : avoid npe , a suggest by valerybokov
fix flakey test by use a mock data source
updated file selection logic in ParquetFormatPlugin . java and improved metadata handling in ParquetGroupScan . java to enhance file selection efficiency
updated the success flag and improved error handling in Jsr199Javac . java to ensure accurate compilation success reporting and enhance error reporting
added a base model listener to the DefaultSortedTableModel to notify when changes occur to the table model
increase default value of server . max . value . max . value . per - server . max . value ( # 1193 )
added support for document provider authority in AuthenticatorActivity and AccountRemovalJob for KitKat and above to enable document management functionality on devices running
removed the startLogging call from MainApp . java to streamline logging process for improved performance
updated exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to improve robustness by ensuring only wrapped RequestRejectedExceptions are
updated the arraycopy method to use ' this . length ' instead of ' length + length ' for clarity to improve code readability and maintain
pdfbox - 4892 : check if filter list be empty , throw exception if decode fails
new utility class tbstopwatch add to improve performance measurement experience
set the initialized state of PListStore to true to ensure proper initialization of the PListStore instance
added @ Deprecated annotation to multiple classes to indicate that these classes are outdated and should not be used in new development
[ zeppelin - 5271 ] fix classloading issue for remote interpreter server
fix checkstyle issue in block / entity / fml / forgehooks . java
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with newer Android
renamed the parameter ` indexInTickArray ` to ` tickArrayIndex ` in the ` timerIdForSlot ` method and updated its
# 174 - enh : add beandescriptor . getsimplename ( ) and beandescriptorelement . getsimplename ( ) ... for
updated JavaScript and CSS URLs from " wro / all . js " and " wro / all . css " to " static / all
added a new test method ` showLatestTimeseriesTest ` in ` IoTDBMetadataFetchIT . java ` to verify the functionality of retrieving
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to clarify the purpose of the configuration
updated exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve clarity and specificity in exception management
benchmarker : add an option to disable write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 482 )
added a new file ` Issue _ 815 . java ` to implement a test for the ` SortedTableMap ` class to ensure that the slice
add a shapeless recipe for pipe water and slime ball to the game registry to enhance the game ' s ability to demonstr
mondrian : fix infinite loop in sequentialaccesssparsevector . iteratortest ( ) .
added handling for Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to manage and manage player metadata
added a method ` getDebugLogger ( ) ` to both ` DIHWriter ` and ` SolrWriter ` classes to provide a centralized way
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5885 - max _
added a check for tag matching in the UpToTagChangeSetFilter class and implemented isSeenTag method in the UpToTagChangeSetFilter class
[ beam - 1340 ] use arraylist instead of linkedlist for good performance
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of routing processes
changed volumePaint and upPaint values from gray and green to GRAY and GREEN in CandlestickRenderer . java to improve
updated variable names and added layout parameter handling in InsettableFrameLayout . java to improve code readability and enhance layout management functionality based on
added a duration property to the BuildTargetDurationListener and updated related tests to include duration information in the JSON output
refactor database migration integration tests to use ` assumeTrue ` instead of ` @ Profile ` annotations to enhance test reliability by ensuring appropriate profile
added a null check for the user before processing claims in OAuthConfirmationController to avoid potential NullPointerExceptions when user is null
camel - 1640 : added advicewithroutebuilder to camel - test to replace from endpoint .
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance by utilizing a more efficient data structure for statement
api : listpublicipaddresses - add networkid parameter to listpublicipaddresses command
added a test for ignoring battery optimization in ShadowPowerManagerTest and implemented it in ShadowPowerManager to ensure correct behavior of battery optimization
updated the method to retrieve the Jetty version from the build properties to ensure the version reflects the correct build configuration
added tests for verifying invocations with different verification modes in NumberOfInvocationsInOrderVerifierTest . java to ensure correct handling of invocation failures
refactor debug evaluation logic in TRegexExecNode . java to improve clarity and maintainability of the code
added a " - foreground " flag to the startProfile method call to specify the foreground directory when starting a profile
refactor executor handling in MiniSolrCloudCluster to use separate launcher and closer thread pools to improve resource management and ensure proper cleanup of resources
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related code
updated log message to include the file name in CodeEditorView . java and added null checks in EditorTextActionWindow . java to improve logging
added detailed error messages to skipped entries in ClassFileReader and updated warning message format in JdepsTask to improve clarity of error reporting and enhance
added LinkStorage and updated related methods in Fetcher , FetcherMain , and FetcherTask classes to improve document storage management and enhance performance
updated the populateBubble method to include an existing bubble parameter and modified bubble population logic to enhance bubble management by incorporating an existing
camel - 16400 : camel - core - optimize camel - scheduler to reduce log noise
refactor methods in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to accept a single Method parameter instead of multiple methods
[ java ] use consistent delay generator for multicast and unicast .
updated Gson instantiation and added client - related properties in ClientInformationResponseView . java to enhance JSON serialization capabilities for client information response
added a check to ensure openOrder fieldAmount is non - zero before setting the average price to avoid division by zero when it is zero
replaced the method ` rawExecutionReports ( ) ` with direct assignment of execution reports to streamline the code by eliminating unnecessary method
modified the ` fail ` method to handle exceptions and adjusted the timeout threshold in ` LdapTimeoutTest . java ` to improve error handling and provide
fix for ticket : 141 -- if the installed / folder do not exist , log an info instead .
updated password handling logic in AmbariServerConfigurationHandler . java and modified test expectations in RootServiceComponentConfigurationResourceProviderTest . java to
added a method ` isParsed ` to ` SegmentChecker ` to check if a segment already has been parsed to improve robustness by preventing
[ hotfix ] add yarn . application - attempt - validity - interval config option
log a warning if the h2 driver be not include during startup
hbase - 18911 make scan readtype configurable for snapshot - based inputformat
added fixedHeight and fixedWidth properties with their respective getters and setters in LoginInstance . java to enhance the login process by allowing dynamic configuration of
added cornerRadius parameter to update methods in ActivityControlHelper , ClipAnimationHelper , and LauncherLayoutListener to enhance corner radius handling during
updated COMMANDS _ TO _ REMOVE to include additional descriptions and added a warning filter for cross - product queries in QFile . java to
added a retry mechanism to retry connections from the pool in TxnHandler . java to improve robustness by avoiding connection issues from the pool
http : / / issues . apache . org / jira / browse / amq - 4390 - add backup reserve operation
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to facilitate the storage and retrieval of string data
updated delete statements to include " DELETE ROWS CLIENT SELECT " and " DELETE ROWS SERVER SELECT " and added ExplainPlanTextTest class
updated exception handling logic in BaseServiceException to differentiate between SocketTimeoutException and IOException to improve robustness of the retry mechanism for service exceptions
added support for rapidInstallTypes in AdbHelper , RealAndroidDevice , AndroidHelperFactory , and related classes to enhance functionality by allowing
updated the seed pattern in SortTest . java to match negative arguments to ensure valid input for seed matching
refactor ` MultimapSubject ` to use factory methods for creating ` IterableSubject ` instances to improve code readability and maintainability by redu
simplified the return statement by removing the conditional check for landscape orientation to simplify the logic for determining the vertical position of the hotse
add transformer . builder . settransmux ( true ) to ignore transmux
added localization support for strings in the Picker class to enhance user experience by ensuring strings are consistently localized
camel - 234 fixed the test error of cxfrsconsumertest
hhh - 11887 - postgresql 8.1 do not throw lockacquisitionexception for deadlock detection
added assertions to verify that the queryId is null before executing a database query and modified HiveStatement to use the LimitedPrivate annotation to improve
[ beam - 8470 ] add usesunboundedpcollections test to runner test
updated the HTML structure for the filename text in GpsSimpleViewFragment . java to simplify the display of the filename and its formatted file
[ java ] remove unused leadershiptermid parameter from joinlogasfollower .
replaced direct calls to ` getHttpExchange ( ) ` with instance variable ` exchange ` in ` HttpSender ` to improve code clarity and
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
rename ` token ` method to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity by using a more d
added null check for the tree before processing markers and introduced a new MarkersTest class with Lombok ' s EqualsAndHashCode annotation to
use double instead of float for font size in xwpf run
addressbookdocoonomoreresultparser : fix parsing of email address
refactor exclusion handling in RawMavenResolver to improve clarity and efficiency to enhance readability and maintainability of the exclusion management logic
added support for handling currency pairs in DSXAdapters , DSXPairInfo , and DSXBaseService classes to improve error handling and provide
[ hotfix ] [ test ] fix checkstyle violation in io test
[ drools - 90 ] fix incremental build when kmodule pom be invalid
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` before
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code readability and maintainability
replaced reflection methods for getter and setter with direct field access in HostFieldDesc . java to simplify code and improve performance by eliminating
added a method parameter annotation for the completion stage of a CompletableFuture in DefaultNullnessAnnotations . java to ensure proper handling of completion stages in the
adjusted the calculation of mFreezeCheckPoint to adjust the playback duration to improve the accuracy of the freeze checkpoint by adjusting the duration
removed unused imports and added Whitebox import in AbstractCommonPowerMockRunner . java to streamline code and ensure internal state is set correctly during
updated method call to use realType ( ) instead of typeCode to ensure accurate type handling during unmarshalling
refactor indentation logic in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced LuceneTestCase with JUnit TestCase in the TestSingleTokenTokenFilter class to align with JUnit ' s testing framework
replace ` newColumn ` with ` < tt > < tt > ` in ` HtmlProcessInformationsReport . java ` to ensure proper formatting
refactor JdbcStepExecutionDao , MapStepExecutionDao , and MockStepExecutionDao to improve execution context management and enhance code clarity
added a condition to check if the new media folder should be hidden before adding it to the list to ensure the mon is only added when the
added null check for the actor before setting the first and second widgets in SplitPane . java to ensure that the application does not throw an exception
add support for processing parameterized Java types in RemoveUnusedImports . java to enhance type management for parameterized Java types in the package
fix npe in uniquemodlistbuilder when there be no modinfo
changed the logger variable from instance to static in TicketGrantingTicketImpl . java to improve performance by avoiding unnecessary instance of the class
updated SQL string in PhysicalPlanTest . java to use RLE . 81 + 12 for timeseries creation to ensure compatibility with the latest SNAPP
added a method ` isValue ( String value ) ` to ` AttrData ` and modified ` Converter ` to utilize it to improve value comparison
updated key handling logic in CPlatformResponder . java and added utility methods in LWCToolkit . java to improve localization support for character
[ java ] set publication connection timeout in ctestmediadriver and use it in spysimulatedconnectiontest .
added a condition to check if the request URI starts with " / css " , " / images " , and " / favicon " in
added assertions to verify the installation failure for the APK installation process to improve error handling and ensure the device is rooted during the installation process
no effective change - add @ ignoreplatform for test for oracle
updated tests in ` TestSimpleBodyHandler ` and ` TestVertxTLSBuilder ` to mock MultiMap and increase the expected value from 1 to
updated Java library references in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest Java versions
added a flag to track if dismissing haptic is running in TaskViewTouchController to improve user experience by preventing unnecessary hapt
add projectile source for projectile explosion .
removed unused import and modified the getItemId method in SymbolInputAdapter to streamline code by eliminating unnecessary checks and improving performance
updated query parameters in the getBook method and changed limit _ bids and limit _ asks from 10 to 50 to improve query flexibility and
fix test failure on window due to lack of quote
[ hotfix ] [ runtime ] add more information to zookeeperleaderelectiondriver ' s tostring ( )
refactor SqlSessionFactoryBean for improved session management to enhance performance and maintainability of SQL session handling
[ 3.0 ] fix tripleinvoker do n ' t use reflection
replace error handling with a direct exception throwing in PolygonRegionLoader to improve error management by providing a clearer runtime exception
added a method ` isStarted ( ) ` to check if the current deadline is in ` Deadline ` and updated ` RawStoreProxy ` to
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages related to channel operations
modify how genres is displayed in ItemListActivity to handle null values to improve robustness by preventing null pointer exceptions when the genres
[ hotfix ] [ runtime ] reset all master hook after recovery
fix : add support for map container in prefab
[ hotfix ] fix npe in walnode when get old unpinned memtableinfo
added a new test method for retrying the same host on callback failure in HttpTest . java to ensure proper handling of failures and validate the
fix package - info . java in truffle / tutorial / background so it do n ' t conflict with other package .
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL Server escape functionality to ensure correct handling of special characters in SQL Server queries
updated CamelModule constructors to add nullability checks and refactor the context parameter to improve code safety and clarity by ensuring required parameters are not null
replaced manual synchronization with a utility method for waiting on the buffer to improve code readability and reduce boilerplate
changed package structure of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
pdfbox - 4892 : fix npe in cropperutils . crop ( ) when an image be not a bitmap
removed appName parameter from configure methods and introduced getAppName ( ) in LineReader to simplify method signatures and improve code readability
[ gr - 28686 ] add test for ignored and broken dependency during install .
simonstewart : add ` ` -- headless = chrome ' ' argument for chrome test
updated value assignment to use intern ( ) method to improve memory efficiency by reusing cached values
added support for " MOVE " status in the connection check to enhance connection functionality by supporting additional status codes
updated ISO8601 _ PERIOD _ MICROS and ISO _ MONTH _ DAY _ YEAR4 _ TIME definitions in FixedDateFormat . java
replaced the import of ` org . apache . curator . shaded . com . google . common . collect . Lists ` with direct
[ hotfix ] [ runtime ] make hsbuffercontext # startspilling return a boolean instead of void .
updated permission checks for untrusted visit flags in the Plot class to ensure proper handling of untrusted visit permissions for players
do n ' t attempt to register a jabber account if it be already register .
update BasicURLNormalizer to handle curly brackets correctly to ensure proper normalization of URLs with curly brackets
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict access to the methods
added lock rate comparison logic in EncodingConfiguration . java to ensure correct ordering of clock rates when encoding values are equal
added a method to retrieve the project path and modified the return type of ` generateProjects ` to return an ` ImmutableSet < Path > ` instead
added a check for the calendar ID before setting the zero digit in HostLocaleProviderAdapterImpl . java to ensure that the code does not exceed
added a new file ` MSwingUtilities . java ` with utility methods for image scaling and exception handling to provide a standardized way to
camel - mail : make it easy to use asynccallback in camel - mail .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable refreshing of configuration properties for improved resource management
added unit test base on user forum issue
added Main and ScriptRenderer classes for scripting integration to facilitate the execution of scripts within the application
added a condition to check if the input state is reset before processing the form - encoded request to ensure that form - encoded form - encoded form
updated BitmapFont , Group , FlickScrollPane , SelectBox , and modified touch focus handling in multiple classes to improve focus management and ensure proper
replaced direct failure reporting with a method call to run the close hooks in DeploymentManager . java to improve error handling by ensuring proper context closure
add a forceignore flag to the lexiconrecipemappings . gettostring ( ) so that the recipe do n ' t have to
increased the sleep duration from 100ms to 500ms in the ConstantTimeBackoffTest . java file to allow more time for thread execution
replaced specific utility imports with a wildcard import and added a check for non - blank and non - blank short names to simplify import statements and
remove classpathurlstreamhandler , use classloader . getresource ( ) instead
added a new utility class FieldUtils with methods to retrieve accessor name , field , and protected field information to facilitate easier access to
removed the speculative type check in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify
updated workspace layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for custom content to improve UI
update xabber account sync state after account be load .
added a new method ` setvar ` to facilitate variable variable manipulation in the command - line interface
fix cat entity fire animaltame event . close # 3891
improve error message in case of invalid value for range frame
pdfbox - 4892 : add test for pdfbox - 4893
set the mode of the application in the PageListController to ensure the application displays the correct mode for user interactions
added support for specifying Docker file paths and arguments in ImageFromDockerfile and created a new DockerfileBuildTest class to enhance flexibility and
added a null check before creating a new ThreadInfo instance to prevent potential null pointer exceptions when accessing thread information
updated the condition in PieChartRenderer to use a utility method for floating - point comparison to improve code readability and maintainability by using
[ hotfix ] add log for singleinputgate and singlecheckpointbarrierhandler
added new schema constants to the Schema class to enhance schema management capabilities
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors and updated related calculations to enhance flexibility in fuzzy queries by allowing
updated method name from ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
fix a bug in layoutwrappingencoder that allow immediate flush property to be set within the enclosing appender .
updated AutoConfigureAfter annotations in ZipkinAutoConfiguration . java to include additional auto - configuration classes for RabbitAutoConfiguration and KafkaAutoConfiguration to
modified JLayer removal logic to handle null component cases and added a new test class for bug 6875716 to ensure proper handling of null
replaced the import of ` avro . shaded . com . google . common . base . Function ` and ` avro . shaded .
do n ' t create new block for each loop in the bciblockmapping .
added getter and setter methods for legacyRenderer in mmm Label . java and ppp Label . java to enable better control over the rendering behavior
replaced custom intToFourBytes method with Ints . toByteArray in AbstractJweDecrypter and AbstractJweEncrypter classes to
added null check for mObserver before checking if it is not null to prevent potential NullPointerException when mObserver is null
updated the signature of the ` thenComparing ` method in ` TypeTest . java ` and added a new test class ` Department `
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
update end time to use current bucketMillis instead of null to ensure accurate time representation in anomaly results
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure robustness by verifying that NumberFormatException is not thrown
added a class loader to the enhancer in MockFactory to ensure proper class loading for mock objects
added a new OriginalFormat class to the ConverterWithEnumFormat class to enhance formatting and parsing functionality for enum types
replaced string literals for date formatting with a constant pattern to improve code readability and maintainability by avoiding magic strings
refactor JAWTRenderer class for improved performance to enhance rendering efficiency and responsiveness
camel - 15836 - camel - aws2 - * : enable autowire on the lambda client , fixed test
cloudstack - 6279 : fix mac address generation for vmware ( # 6279 )
removed a condition that checks if the string header name equals " Authorization " to simplify the authorization check logic
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to ensure proper execution of commands based on context management
added ` getDetails ( ) ` and ` setDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and `
changed the variable ` randUsePoints ` from ` randomBoolean ( ) ` to ` random ( ) > = 0 ` in ` SolrTest
rename method ` ` appenddot ( ) ' ' to ` ` endSentence ( ) ' ' in multiple classes to improve clarity and consistency
updated ` formatForConsole ` method to include ` Locale ` parameter across multiple files to ensure consistent formatting across different locales
updated import statements and modified the handling of parsed arguments in GroovyParserVisitor . java and GroovyPrinter . java to improve code clarity and ensure
added inset calculations for bottom , left , and right insetPx in Border . java to ensure correct positioning of elements in the layout
refactor gesture state management in TouchInteractionService to use a constant for the default state to improve code readability and maintainability by centralizing
replaced Joda - Time with Java ' s built - in Instant and DateTimeFormatter for version string conversion to improve compatibility with newer date - time
updated openblas . java and openblas _ nolapack . java files to improve functionality and maintain consistency across the project
replace ioutils with java . io . close ( ) in torrent storage . close ( )
added synchronized keyword to initTxnMgr method to ensure thread safety during transaction manager initialization
increased recovery timeout from 120 seconds to 480 seconds in AbstractDistribZkTestBase . java to allow more time for recovery
added a new class ` SearchResults ` to manage search results to facilitate the retrieval and management of search results in Lucene
bugfix # 20519 , threadcpusampler should not create a new threadcpusource if it do not exist .
make sure to initialize the body if it be not already initialize .
added new versions " 8.10 . 0 - cfs " and " 8.11 . 0 - nocfs " to TestBackwards
changed the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the
added a new API endpoint to retrieve tenant pools for current instances to enhance functionality by allowing users to retrieve tenant pool configurations
refactor ` canEarlyTerminate ` method to include ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix
added a condition to check if the object is a string in InlineBytecodeGenerator . java and improved test cases in InlineByteBuddy
added logging statements for compiling and preprocessing commands in CxxCompileStep and CxxPreprocessStep to improve visibility into command execution and
fix stringutil . removereplace ( ` ` - ' ' , ' ' ' ) when ` ` - ' ' be remove from
[ 3.0 ] make metadata service protocol configurable ( # 9551 )
[ drools - 7 ] add a transformer interface to allow to transform object into a map
changed the type of values and objval from Collection < ? > to Collection < Number [ ] > and added type casting for Number [ ]
simplified conditional checks in FormatStringChecker . java to improve code readability and maintainability
removed redundant initialization of SolrCore in ElectionContext . java to improve code clarity and maintainability
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor database connection handling to use try - with - resources syntax to ensure proper resource management and avoid potential resource leaks
added a new method ` testMapModel ` to ` CodeFirstPojoClient ` and implemented it in ` CodeFirstPojoIntf
pdfbox - 2576 : avoid npe , a suggest by valerybokov
refactor selection logic in ScaleDialog to handle null scaleOffsets and improve selection state management to enhance robustness by preventing null pointer exceptions during
refactor itemtravelBelt . updatePlayerStepStatus to tickBelt and add null check for attrib to improve stability and prevent
pdfbox - 4071 : do n ' t throw an exception if there be no appearance stream create
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to maintain insertion order for keys
increased TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and modified
updated the preload library from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the latest
added a conditional check for agentSupport before setting all constructors toPublic and created new classes for mocking static methods with private constructors to ensure that
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
fix ` ` java . awt . x11 . xtoolkit ' ' to work around ` ` java . awt . x11 . x
updated depth calculation based on pixel size in XRSurfaceData . java to ensure correct transparency based on the pixel size
added error handling for reading an unsuccessful response body in OkHttpDataSource to improve error reporting for failed HTTP responses
added a static ` exit ` method to ` TopLogging ` and replaced ` Thread . sleep ( ) ` with ` TopLogging . exit (
updated the logic for determining the start index in NativeRegExp . java to ensure accurate tracking of the last index when regexp is not global
planner - 468 ignore fail test when upgrade to optaplanner 6.3 . 1 +
updated the index used to retrieve the high allocation from availableAllocations to ensure the correct allocation is assigned based on the high index
added a method to clean entries without feeds in the DatabaseCleaner and FeedEntryDAO classes to optimize resource management by eliminating unnecessary entries
change return type of appendToLabel method from void to AtomicCounter to enable method chaining for better usability
[ java ] use noopidlestrategy instead of busyspinidlestrategy .
add handling for NOT _ MODIFIED status in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper response management when headers are
rename method ` constantValueInertSpliceInstrumentListener ` to ` constantValueInertToolEvalNodeFactory ` and update related references to
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to correctly calculate the dimensions of the tab area to improve
updated KrakenMarketDataService and KrakenMarketDataServiceRaw to accept an additional argument for depth and trades retrieval
( chore ) camel - file : make it easy to reuse the file separator between the file component .
added a new method ` build ` to ` JavaProvenance ` and modified the ` MavenProjectParser ` to include ` testDependencies ` parameter
added trace logging for Hive UDFs and modified the deterministic check condition in the EqualityVisitor class to improve traceability of UDF registration and ensure
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to accommodate new data processing requirements
do n ' t send hint for deleted column family . patch by jbellis ; review by brandonwilliams for cassandra -
added a check for writable output files in NativeErrors . java to provide a clearer error message when the output file is still writable to avoid
added PackageInfo checks in LauncherModel . java to handle potential NameNotFoundException to improve error handling and provide a fallback mechanism when package information is
server : fix npe while upgrade from 4.0 . x to 4.2 . 0
updated exception handling in ` AbstractFaultTolerantChunkOrientedTasklet ` and ` FaultTolerantChunkOrientedTask
replace ` startsWith ( completed ) ` method with ` regionMatches ( ) ` method in ` LineReaderImpl . java ` to improve clarity
added import statements and modified data table handling in Recipe . java to enhance data table management and improve error handling
added task dismissal logic in TaplTestsTaskbar . java to ensure all tasks are dismissed when the overview has tasks
server : add dbupgrade . db . upgrade . systemvmtemplate interface to update systemvmtemplates during db upgrade
modified connection handling in LdapClient by removing unnecessary null checks to simplify connection management and improve code readability
refactor index handling in SequenceAction . java to improve clarity to enhance code readability and maintainability
make sure we do n ' t try to set a keyspace that do n ' t exist . patch by jbellis
added a check to skip synthetic fields in ReflectUtils . java to improve performance by avoiding unnecessary processing of synthetic fields
added LoggerProvider to manage SLF4J logging and integrated it into the application to enhance logging capabilities by integrating SLF4J for
refactor ` ServerStatusCommand ` to replace ` String ` with ` Object ` for improved type safety to enhance flexibility in handling port
added deprecation warning for Spring contexts in SpringFactory . java and improved error handling in SpringFactoryTest . java to ensure users are aware of
added a new method ` deepStart ` to process a list of startables to facilitate the conversion of a list of startables
removed the deprecated method reservePrimitiveExtensionArray from Shape and its implementation in ShapeImpl to signal that the method is outdated and should not be used
fix laser not be able to drop target block .
refactor object name validation logic in AbstractJdbcDatabase . java to improve clarity and maintainability of the code
removed unused import statements for CachingTokenFilter , TokenStream , and MemoryIndex in TestSolr4Spatial2 . java to streamline code
setExpireMessagesPeriod to 0 in MemoryLimitTest . java to optimize memory consumption by reducing unnecessary delay
removed unnecessary null checks for ` p ` and ` handlerName ` in ` RequestHandlers . java ` to simplify code logic and improve readability
modify the return statement to replace ' - ' with ' . ' in the servlet name to ensure proper formatting of servlet names in the log output
updated Python module search path handling in ProjectBuildFileParser . java to improve clarity and maintainability of environment variable management
refactor audio data handling in DirectAudioDevice and Toolkit classes to improve clarity and error handling to enhance robustness by ensuring audio data
added null check for enums before converting to String to ensure safe handling of null values and avoid potential NullPointerException
updated error message format in CommitLogReader . java to improve clarity of error messages for better debugging
added a policy initialization in the WebSocketSession class to ensure proper management of WebSocket connections based on the policy
simplified the logic for initializing static fields in the Java to TypeScript translation to improve code clarity and maintainability by removing unnecessary checks
updated the webroot parameter in the server context creation to allow dynamic configuration of the web application directory
( chore ) camel - spring - sql : upgrade junit5 to junit4 ( # 4421 )
[ netbeans - 4440 ] use editorregistry . getfocuscomponent ( ) instead of registry . getmostactivecomponent ( )
renamed the ` printHeaderObject ` method to ` createHeader ` across multiple files to improve clarity and consistency in header creation logic
consolidated multiple import statements for trade - related classes and added a placeholder method for placing stop orders to streamline import statements and implement
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is
updated the condition in FloatingDecimal . java from ' less than or equal to ' to ' less than or equal to ' and added a
updated property type validation logic in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper handling of property
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to simplify version retrieval by eliminating unnecessary maximum
modified the ORIGIN setting logic in NettyRequestFactory to conditionally include the scheme or origin based on whether the URI is secured to
updated animation methods in RecentsView , TaskView , and LayoutUtils to use alpha instead of visibility for smoother transitions to improve
updated error messages and variable names in ORCRecordReader . java for clarity and consistency to enhance error reporting and improve code readability by
remove mp4 video demo sample ( # 2692 )
replaced HIBERNATE52 _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE43 _ JPA _ MET
updated log paths in ExecRPCInvoker and WritableRpcEngine classes to use the correct package for logging to improve clarity and specificity in logging
added logging functionality and a diagnostic listener for diagnostic warnings in TestSpecificCompiler . java and created a new Position . java file to enhance diagnostic diagnostics
modified the WebSocket session creation logic to return and added a new test for session closure to ensure proper session management and validate session closure behavior
refactor service classes to replace ` onDaoStateBlockChainChanged ` with ` onChangeAfterBatchProcessing ` and update related references to improve cl
add miss mapping for xwork 2.1 . 0
added conditional checks for stream stop and video track retrieval in WebCamInputPanel . java to ensure proper handling of video tracks when stopping or
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
updated import statements in GMLExamples . java to utilize SimpleFeatureBuilder and WKTReader2 classes to improve code clarity and
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in ` TargetType58 . java ` to improve performance by
hhh - 10956 - add support for use an identifiergenerator in abstractentitytuplizer
rename ` ` find full text ' ' to ` ` download full text ' '
refactor URI registration logic to improve handling of host and port information to enhance clarity and correctness in URI registration process
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for a blank OSDB hash before retrieving the API result to improve robustness by avoiding null pointer exceptions when the OSDB
added functionality to transfer tokens based on call and token IDs in the contract to enhance the transfer process for smart contracts
camel - 16400 : camel - ftp - do not try to delete a file if it be in stepwise mode .
updated method reference from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure the correct
added validation for join results and modified join logic in MapJoinOperator . java and HybridHashTableContainer . java to enhance error handling and
updated the ` HTTPSPDYAsyncEndPoint ` constructor to accept ` AsyncEndPoint ` as a parameter and added methods to retrieve local address ,
added extra " id " to intent in multiple adapter classes to include the tweet ID in the intent for better tracking and user experience
added proxy authorization handling and refactored disconnect logic in HttpURLConnection to improve connection management and ensure proper handling of proxy authentication
replaced the ` _ numChildren ` variable with an ` AtomicInteger ` for thread - safe incrementing it to improve thread safety and avoid potential
updated various Java classes to improve code consistency and clarity to enhance maintainability and readability of the codebase
disable the test in ValueTypeTests by setting the expected exceptions to false to ensure that the test is not skipped during execution
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . io
replaced instances of PredicateType . IN with PredicateType . NOT _ IN in multiple predicate classes to clarify the purpose of the predicate
refactor account handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling and provide a user friendly display name for account
added null check for witnessService before validating the permission to avoid potential NullPointerException when witnessService is null
updated the construction of the taggedCol string to use getExprString ( ) for better readability to improve code clarity and maintainability by
added a check to ensure the ` item . getJavadoc ( ) ` is not present before setting it in ` AbstractJavaClassTranslator ` to
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add ` RedefineInterfaceCall . java
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) for tab revalidation to improve animation safety by ensuring animations are
[ hotfix ] [ test ] use dummyinitializationcontext instead of unsupportedoperationexception
updated the calculation of the y - coordinate in the Polygon class to use a new variable for oldX instead of modifying it directly to improve accuracy
added a Configuration type to the cacheManager . createCache method call to ensure proper type handling for cache configuration
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new class Bug2974855 . java with
refactor ShadowCookieManager class to improve cookie management functionality to enhance performance and maintainability of cookie handling
added a new configuration for external table drop permission in HiveConf . java and implemented the disallowDropOnTable method in TestStorageBasedAuthorizationProvider
updated conditional check for Desktop and Applet types in Stage . java and modified drawable positioning in ProgressBar . java to improve code clarity
sulong : add support for get the platform byte order in llvmlanguage .
updated the property name for Windows client provider timeout from " namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout
updated ` initWebViewLogin ` method to accept a URL base URL and modified web view login logic to allow dynamic URL loading based on the
corrected a typo in the exception message from " Paramter " to " Parameter " to improve clarity in error reporting for JDBC type
updated the @ RequestParam annotation to remove the ' required ' attribute and modified the request parameters in AuditEventsMvcEndpoint and AuditEventsMvcEndpointTests
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` and update related references to improve clarity and reflect the purpose of the timer
added functionality to remove and delete soft bodies in the SoftBodyTest class to ensure proper resource management and prevent memory leaks
changed interfaces for SinkFunctionProvider , SourceFunctionProvider , and InputFormatProvider to be public to allow access to these interfaces from other packages
[ zeppelin - 5391 ] improve error message in zeppelin - websocket
add test to demonstrate that jingle do not have redundant namespace .
add a null check for the redplasma , and fix a npe in the stat collection .
added support for HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
refactor conditional checks for plot ownership and deletion in the Remove . java file to improve code clarity and maintainability by standardizing the removal
updated delimiter and string formatting in SimpleReport . java to ensure consistent spacing and improve readability of report output
updated the ` ignoreSymbolFile ` option in ` JavapTask ` and added a new file ` T6863746 ` to
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and modified the access level of the ` start ` method to improve clarity
added null checks for contract creation , validation , and address retrieval in the transaction processing logic to improve error handling and provide clearer feedback when contract
make sure input3d be create only if not in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
change scripttagpayloadreader to return false instead of throw a parserexception
renamed the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` to clarify the purpose of the method in its implementation
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` and updated return statements accordingly to
refactor IOSGLES20 to use instance variables instead of instance variables to improve code clarity and maintainability by centralizing object initialization
removed the UploadPathActivity class and its associated imports from ComponentsModule . java to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to conditionally return total term frequency or sum total term frequency based on index options to improve clarity
fix : fix implicit constructor be set incorrectly ( # 4328 )
added a database parameter to multiple ` populateValidateNullableIfNeeded ` , ` populateValidateUniqueIfNeeded ` , and ` populateValidateForeignKeyIfNeeded ` methods
refactor Database class to improve code readability to enhance maintainability and ease of future updates
refactor SpringApplicationBuilder to improve code organization to enhance maintainability and readability of the code
updated IndexOptions usage in DefaultIndexingChain and PointInSetQuery classes to improve code clarity and ensure correct iterator assignment
removed the mapping operation for rawName in SchematicHandler . java to streamline name processing by eliminating unnecessary mapping
added type handling for collection assertions in AbstractCollectionAssert . java and updated tests in CollectionAssert _ isUnmodifiable _ Test . java to improve type
changed the visibility modifier of the Option enum from static to instance to allow the Option enum to be accessible from other classes
refactor confirmation logic in Compose . java and ComposeActivity . java to handle twitlonger user experience to improve user experience by
replaced the toggleKeepInSync method with a direct usage of FileObserverService for syncing files to streamline the file synchronization process by
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added new files ControllerCounter . java and DBCallback . java to implement MongoDB document tracking functionality
added ' final ' modifier to the parameter of the deleteTicket method to improve clarity and enforce immutability of the parameter
added a new file FlywayMigrationRunner . java to initialize Spring application context to facilitate database migration testing in a Spring environment
replaced ` isEmpty ( ) ` checks with ` size = = 0 ` in ` HashMap ` and added a new class ` OverrideIsEmpty
updated the VERSION constant from " 0.6 . 0 " to " 0.7 . 0 " to version 0.7 . 0 to
updated ` modify ` method to accept nullable ` EnumSet ` in ` CompressionCodec ` , ` WriterImpl ` , and ` ZlibCodec `
refactor main attribute handling and jar creation logic in LauncherHelper and Arrrghs classes to improve error reporting for missing main manifest attributes and
renamed test classes to include " Tests " for consistency to improve clarity and maintainability of test class naming
rename methoddatagraal _ node _ count to methoddata : : _ jvmci _ ir _ size to avoid name clash
remove the cloneable implementation from cellcopypolicy , and make it public .
added a method to reset the icon load result and updated its usage in FloatingIconView to improve code clarity and maintainability by central
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView to handle landscape orientation and adjust dimensions based on device orientation to improve layout handling for different screen orientations and ensure
deleted the AddAdapter . java file which contained a ListItem class to streamline the codebase by eliminating unused components
fix a bug in non - static lifting where constructor code list be empty .
added a boolean parameter ` processSortCols ` to the constructor of ` OpTraitsRulesProcFactory ` to control the processing of sorting columns based
refactor the logging mechanism in TestLogWatcher to use a new looper method to improve error handling and provide clearer diagnostics when no messages
added a print statement to the Java2TypeScriptTranslator class to improve output formatting for better readability
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the new release version
set the property SPRING _ AOP _ PROXY _ TARGET _ CLASS to " true " in the environment if it does not exist to
removed the conditional check for singletonLock in TypeCachingBytecodeGenerator to simplify the lock implementation by directly using BOOTSTRAP _ LOCK
improve documentation for ` responseclasscallback ` and ` forwardclasscallback ` in ` callbackactionexample `
added new utility method ` appendToFile ` and refactored ` writeFile ` in ` Utils ` , ` SuiteHTMLReporter ` , and
updated the logic in ` MavenExecutionContextView ` and ` MavenRepositoryMirror ` to return the mirror instead of returning the first mirror to improve
added an ` name ` parameter to ` SourcePath ` constructors and updated related methods to support name management for source paths in the build system
updated the redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests to
refactor annotation handling by introducing a new ` AnnotationParser ` class for converting maps to arrays to improve code maintainability and reduce redundancy
updated method calls in UserManagerCompatVL to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawable
updated the default value for the system property " line . separator " to include " LF or CRLF " as a description to provide clarity on
fix bug in configurationmanagerutils . isimplementinginterface ( ) and add unit test .
add ` ` _ ' ' a special character in the server name , server name , etc .
chore : update java microgenerator to 1.0 . 1 , add request initialization to sample code ( # 374 )
removed the @ Ignore annotation from the buildFileNamesCanBeDifferentCrossCell test method and added an IOException declaration to test file names for cross
refactor CountersReader to improve code readability to enhance maintainability and facilitate future updates
updated container type assignments in ` AllAppsRecyclerView ` and modified the ` logDeepShortcutsOpen ` method to accept a ` View `
hbase - 11321 add deprecation warning for hbase . ipc . server . reservoir . initial . buffer . count and
[ native ] add support for left _ table to native join
added a method to retrieve all generic parameter types and updated references to use this new method to improve code clarity and maintainability by standardizing
refactor TestFSTs . java for improved readability to enhance maintainability of the test code
ggb - 1342 fix height calculation of input box for latex label
hbase - 16400 increase the max size of increasingtoupperboundregionsplitpolicy to accommodate small region .
removed and modified model loading methods in LauncherClings . java to streamline resource management and improve loading efficiency
updated the handling of keys and updates lists in ManagedSelector . java to improve clarity and ensure consistent date formatting
http : / / issues . apache . org / activemq / browse / amq - 2352 - add support for exclude datasource
add undo info after a column be delete ( bug fix )
[ hotfix ] [ kinesis ] allow custom client configuration for kinesis proxy
[ VelbusSensorHandler ] improve channel handling by introducing a loop to handle multiple channel to enhance performance and allow for more flexible
disable unfavorable benchmarks in LocalCacheSelectorCode and simplify delay condition in BoundedLocalCache to improve performance by eliminating unnecessary
added a test for illegal database names and improved error handling in the IoTDBSessionSimpleIT class to ensure that illegal database names are properly
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly reset during processing
updated ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and
refactor whitespace in CharTokenizer . java for improved readability to enhance code maintainability and clarity
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
fix a typo in the constant name of xenservernetworklabel
updated libGDX version from 1.5 . 6 and 1.5 . 7 - SNAPSHOT to 1.5 . 6 and 1
removed the metricNames field and its getter method from SolrCore . java to streamline the code by eliminating unused metrics
replaced URI . create with Path . fromUrl for working directory and absolutePath to simplify path handling and improve code readability
replaced direct calls to System . getProperty ( " os . name " ) . contains ( " mac " ) with a constant IS _ MAC
refactor JdbcAggregationRepository to improve code organization to enhance maintainability and readability of the code
clear the slotList before adding it to the slotList to ensure that the slotList is consistent and maintains its original state
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predCount for accurate testing
added import statements and implemented the ` mergeProperties ` method in ` ConfigurationSpringInitializer ` to enhance property merging functionality for better configuration management
use slf4j . logger instead of ch . qos . logback . classic . logger in cli
change the type of ` aliasToWork ` from ` HashMap ` to ` LinkedHashMap ` across multiple files to ensure the order of elements in the
added logic to retrieve the superclass of type handlers in TypeHandlerRegistry to ensure proper handling of type handlers for improved type management
added debug logging for item writing in Hibernate , JPA , and JMS item writers to facilitate troubleshooting and
modified the parsing of the language range string to handle cases where the last character is a comma to improve robustness by avoiding unnecessary parsing of
updated the handler execution in ` VertxHttp2Handler ` and modified ` Http2Test ` to use ` context ` to ensure proper context
improve performance of xssfevaluationworkbook . gettable ( ) by cache xssftable
updated schema text detail type checks and simplified primary key symbol assignment logic to enhance readability and maintainability of schema text formatting
updated MongoNamespaceReplicaSetTests to use MongoClientFactoryBean instead of MongoFactoryBean to improve compatibility with MongoDB client management
replaced instances of ` HashSet ` with ` LinkedHashSet ` for ` roots ` and ` leaves ` in ` SparkWork . java ` to maintain
replaced the declaration of ` tableScanCloneOpsForJoin ` with a new variable ` tableScanCloneOpsForJoin ` and added a
added a null check for the client ID before retrieving the registered client to avoid potential null pointer exceptions when the client ID is not available
reset achievementlist . field _ 187981 _ e . clear ( ) after remove it .
initialized fields in MutableDatabaseInfo and MutableJdbcDriverInfo classes with empty strings to ensure default values are provided to avoid potential null pointer exceptions
updated permission string from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog and Sh
added LongBuffer functionality to ByteBuffersDataInput for reading long data to improve performance by reducing the number of data read operations
updated variable names and introduced a new method to convert last modified time to seconds in UnixFileAttributes . java to improve clarity and consistency in
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` to test garbage collection behavior of ` Lar
added functionality to control the visibility of the search bar based on user preferences to improve user experience by allowing dynamic visibility of the search bar based on
updated method call from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java ` to
added null checks for ' cur ' and ' next ' in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` and integrated it into the menu to enhance user experience by allowing quick reload of displayed pages
changed log level from info to warn for specific log messages in SQLManager . java to provide a more appropriate warning level for non - existent entries
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided before proceeding
use serviceloader . load ( ) instead of factoryregistry . lookupproviders ( ) to improve performance
added a ` closeTable ( ) ` method and overridden the ` finalize ( ) ` method in ` HiveHBaseTableInputFormat ` to
added a ` stopStatementExecutor ( ) ` method to manage statement execution in ` JdbcConnector ` and ` JdbcViewImpl ` to ensure proper
added feature settings for disallowing and disabling external DTD declarations in DocumentFactory and updated hints initialization in XMLSAXHandler and ElementHandler
replaced ` jdb . command ( ) . waitForPrompt ( ) ` with ` jdb . contToExit ( 1 ) ` and
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enable retrieval of type information based
updated method calls in ExpressionThreadPoolManager to use a local variable for the runnable to improve code readability and maintainability
updated the HTTP port property from " port " to " vertx . httpPort " to ensure the application uses the correct HTTP port configuration
replaced ` addCaptureListener ` with ` addListener ` for the ` buttonTable ` to ensure proper listener management for the button table
updated the DEFAULT _ BATCH _ SIZE constant to use available processors instead of a fixed value to adjust the batch size based on the number of
added error handling for establishing Resource Manager connection in TaskExecutor to improve robustness by logging errors when establishing the connection fails
initialize classFile to null and return a new LambdaExpressionFallback instance if it is null to improve error handling and provide a fallback mechanism for dynamic expression
updated the error message for the IllegalArgumentException to include min and max values to improve clarity of error messages for better debugging
updated method signatures to include an ' owner ' parameter for better context to enhance clarity in message processing by associating messages with their respective entities
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` for managing database - related operations to provide a structured way to handle
updated assertion classes for consistency in naming and structure to improve code readability and maintainability
# 227 - enh : add setbeanid ( ) and setbeanid ( ) to ebeanserver , enh : add
updated the transformation method in RuleSetToDocs to use getAddToSiteDescriptorXsl ( ) instead of a hardcoded string to improve
replaced the direct addition of request matchers with a list of RequestMatcher instances to improve flexibility in handling multiple request matchers
added ` hashCode ` and ` equals ` methods to ` ContactResource ` class to ensure proper comparison and hashing of ` ContactResource ` instances
move request / response initialization to abstractprocessor so it can be override by subclass .
updated log messages for better clarity and consistency in FileManager . java to improve log readability and provide clearer feedback on the status of
reset mockControl in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource management and optimize database operations
updated class references in SyntaxTests . java for consistency and clarity to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
tika - 1349 -- use a fallbackparser instead of an emptyparser for the parserdecorator
fix fmlsecuritymanager to work with dedicatedserver and dedicatedclient
removed unused parameters from AccountUtils , IndexedForest , and CustomPopup classes to simplify code by eliminating unnecessary parameters
updated the parameter key from " swap " to " rename " in CoreApiMapping . java and modified the RENAME method to include a new
added a test method to JsLexerJsxTest and refactored comment handling in Parser and DumpingVisitor to improve test coverage and enhance
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording during tests for better performance monitoring
added a new test method to verify error handling when Buck configuration is missing to improve error reporting and provide clearer feedback when Buck configuration
added physical memory management checks to TestStringBufferAndBuilderGrowth . java to ensure the test runs only if the machine has physical memory available
added a deprecated constructor to the ConversionService class and updated conversion logic in MapToLocalDateConverter to improve code clarity and encourage
added a success flag to the HiveMetaStoreClient class to indicate successful execution of operations
updated string comparison from ` equals ( " * " ) ` to ` equals ( " * " ) ` in ` ResourceReferenceInfo . java
updated conditions for checking ` vine . co / v / ` and ` amp . twimg . com ` in ` TimeLineCursorAdapter
mark the AreaReference class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
rename ElementType and Target classes for consistency to improve clarity and maintainability of the codebase
added assertions and modified reference kind handling in MemberName . java to improve assertion clarity and ensure correct reference kind management
changed the default value of ` __ submitKeyUpdates ` from ` false ` to ` true ` and added synchronization around the ` runChange `
change the conditional check from ` if ( firstEvent instanceof MouseEvent ) ` to ` if ( firstEvent instanceof MouseEvent ) ` to ensure
camel - 1640 fixed the issue of beanexpression . findbyname ( ) do n ' t work if the bean name start with
refactor BenchmarkPublisher , LoopMQTTHandler , ProtocolDecodingServer , and PublishBomber classes to improve code organization and enhance maintain
[ java ] fix checkstyle issue in ` agentrunnertest `
updated descriptions in multiple classes to provide clearer descriptions for Maven project property changes and removals to enhance clarity and usability of the description
refactor face management logic in ObjLoader . java to improve readability and maintainability of the code
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future development
corrected variable name from ' reentrantLock ' to ' lock ' in multiple files to improve code readability and consistency in variable naming
updated ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBomTest ` classes to include
replaced back ( ) with back ( evt . getComponent ( ) ) in UIBuilder . java to ensure the correct component is passed to the
do n ' t check if certificate verification fails if the server certificate verification fails .
updated nullable annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity in method signatures
replaced NutchConf with getConf in multiple files to standardize configuration retrieval across the codebase
replaced the removal of the boards pane with a deselected state in SheetAssembly . java and modified stub selection logic in Stubs
added a method ` getSessionId ( ) ` to return the ` sessionId ` to provide access to the session ID for external use
added null checks before setting time intervals for nodes and edges in ImportContainerImpl . java and new test cases in ImporterGEXF2
removed the log level argument from the server command in MockServerContainer . java to simplify command execution by removing unnecessary log level information
updated error logging format in FunctionRegistry . java to improve clarity of error messages for better debugging
restore ` ` robotshonoringpolicy ' ' to ` ` crawldatametadata ' ' in place of ` ` robotsh
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready yet
updated file path checks in DefaultPackageScanResourceResolverTest . java to use File . separator for cross - platform compatibility to improve cross - platform
added a method ` alternativePath ( ) ` to ` ExpectNewDemo . java ` that returns a ` InputStream ` and handles potential runtime exceptions
replace input . init ( ) with input . getFirstFilter ( ) . init ( ) in LogEntryParseTester . java to ensure the input
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance functionality by integrating protection domain during buffer alignment operations
added a dispose method to properly release resources associated with mesh , batch , and texture to ensure proper resource management and prevent memory leaks
added a configuration option to disable certain optimizations and operations on external tables in Hive to allow users to disable certain operations on external tables
updated the description of the Authorization header from " uses basic authorization " to " No authorization is required for requesting public keys . " to clar
removed the FLAG _ SHOW _ WALLPAPER in Launcher . java and set wallpaper offsets to zero in Workspace . java to
change return value from false to true in SybaseASADatabase . java and modify sequence handling in CreateSequenceGenerator . java to ensure correct
nifi - 1558 : putsql do not commit or rollback if auto _ commit be set to false
added error handling for creating a parent directory in SnapPuller . java and updated test cases in TestReplicationHandler . java to ensure that
updated the AppTarget ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency in the
modified framer and messageframer classes to accept an output bytebuffer instead of just a bytebuffer to improve performance by avoiding unnecessary
removed unnecessary parameters from several OAuth2 - related classes to simplify method signatures for better readability and maintainability
updated documentation for the GenericUDFStringToMap class to provide clearer guidance on how to split text into key - value pairs to improve
updated PlainFormatter to utilize ChronoUnit for improved precision in time representation to ensure accurate representation of timestamps in formatted output
renamed TIMEOUT _ MS to RETRY _ CLOSE _ TIMEOUT _ MS and refactored the close method to use it to improve clarity
hhh - 16927 - fix classloadingstrategyhelper . uselookup ( ) for unsafe injection
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the log message
added JUnit @ Ignore annotation to SamplingNamingTest . java to skip tests that have at least one sample result due to performance issues
updated the error message for the IllegalArgumentException in GridLayout . java to clarify that rows and columns must be greater than zero to improve user
updated method calls and string concatenation in DecisionNode and WagonCART classes for consistency and clarity to improve code readability and maintain
added support for ordered BSRs in XLS2CSVmra and implemented BOF position sorting in BoundSheetRecord to enhance data organization and
refactor averageImpulse calculation to separate start and end thrust variables for clarity to improve code readability and maintainability by separating
niftyjmedisplay : update niftyjmedisplay to use niftygui . getinputmanager ( )
refactor hash code handling in UniverseBuilder . java for clarity and consistency to improve readability and maintainability of the code
remove block # getmesh ( ) since it be deprecate
[ hotfix ] fix typo in yarnapplicationmanagerrunner
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matcher logic in ` LineReaderImpl ` to handle empty words and typo
do n ' t push view replica update when write commit log be enable
added functionality to auto - open a web file in PreferencesActivity and defined a default button ID in ResultHandler to enhance user experience by providing a
added a test method ` testBatching ` to ` JoinedTableTest ` and overridden ` additionalProperties ` method in ` JoinedTable
updated logging behavior in JpaPersistenceService to differentiate between EntityExistsException and other errors to improve error handling and provide more detailed logging for
replaced deprecated -- format option with a plugin annotation in CucumberOptions and RuntimeOptions classes to encourage the use of the deprecated
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary functionality
simplified the back key handling logic in ExtendedEditText . java to improve readability and maintainability of the code
updated the capacity calculation in AbstractStringBuilder and added a new Capacity class with tests for string buffer capacity to ensure correct behavior of StringBuilder capacity management and
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to update the method
added support for handling endnotes in the XWPFDocument class and updated related tests to ensure proper parsing and retrieval of endnote references in
added clientInfo parameter to the CasAuthenticationTransactionSuccessfulEvent publication to enhance event tracking by including client information
add a test to check if the gdal version be available
added a new file ` Lifecycle . java ` implementing network error handling to provide a framework for managing network errors in the application
fix for http : / / github . com / codenameone / codenameone / issues / 263 , add an extra check to
removed unused imports from BodyTubeShapes and RocketFigure classes to clean up the code and improve readability
added support for ScalableSurface in PJOGL . java and updated viewport and pixel scale handling to improve rendering performance and flexibility in
show ` ` pub . dart . lang . org ' ' if pub be unavailable ( # 113 )
replaced PackedInts and FormatAndBits with BlockPackedWriter and BlockPackedWriter in DiskDocValuesConsumer . java to improve
updated DefaultStatusRoute to use originatingType instead of HttpStatus and changed routesByStatus collection type to TreeSet to improve type handling and eliminate potential
simplified the creation of ` MetaData . Response ` by removing unnecessary data collection logic to streamline the code and improve readability
added support for setting a property for a map in ReflectionUtils and created a new FluentSetterBean class to enhance bean management capabilities and support fluent setter
updated the ` post ` method in ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to return a ` HttpResponse ` instead of a raw type
( chore ) camel - base - engine : fix fail unit test on window
updated lastAppearedTaskTarget logging to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve
add methods to manage image scaling information in RtfDocumentSettings to enhance PDF document configuration options for better compatibility across different operating systems
added aggregate function name handling in TSServiceImpl . java to improve clarity and functionality when processing aggregate queries
updated test classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase ` to improve test structure and cleanup
added functionality to enable or disable XCap features based on registration status to enhance user experience by allowing dynamic configuration of XCap server URI
add ` ` struts . handle . exception ' ' constant to allow custom exception handling
added a ` stopTextEditing ` method to ` CodenameOneImplementation ` , ` Display ` , and ` AndroidImplementation ` classes to
nifi - 1640 fix npe in controlrate when group attribute be not set on the flowfile
updated the ` showDialog ` method to include a new parameter for always opening presets and modified the visibility of the ` selectPreset ` method to
fix a possible deadlock when send a message to the server .
added a condition to check if the test is running on MS Windows to ensure that the test is only run on Windows to avoid potential issues
added SQL _ SERVER _ SNAPSHOT to the SERIALIZABLE enum and included SQL _ SERVER _ SNAPSHOT as a parameter to support SQL server
replaced the direct addition of a new record ID with a loop that waits for a new record ID to ensure that the process does not hang
[ ci ] use java . util . zip . zipfile instead of jrecompat
added a null check for the command class before creating a new RegisteredServiceImpl to ensure that the service is only created when the command class is
make diskfailurepolicy . disk _ failure _ policy default to ` ` ignore ' ' rather than ` ` best _ effort ' '
minor refactorings to make ripper interface method package - private
[ java ] do n ' t try to connect to 127.0 . 0.1 in ipv6 .
removed the setter method for JobIdentifierFactory in SimpleCommandLineJobRunner . java to streamline the code by eliminating unused functionality
added a new ` ClusterDataCache ` parameter to the ` computePartitionAssignment ` method in ` PinotSegmentRebalancer . java ` to
douniaberrada : add container auto - remove option to remove container .
simonstewart : fix parsing of pipe - separated command
add retry to createglossarytest to avoid occasional flakiness
update references to ` allOfRef ` and ` oneOfRef ` to use constants from ` Components . COMPONENTS _ SCHEMAS
updated EntityDeletedEvent to use JsonUtils for JSON serialization and refactored deleted event handling to improve code clarity and maintainability by util
added a new constant ` MI _ GOP ` and its usage in ` FormatConfiguration ` , and modified ` DLNAMediaInfo
added a new file TestProfileReturnTypePrinting . java that contains a class for testing method return types to facilitate performance testing of
added a configLock to manage concurrent access in ParseConfigUtils . java to ensure thread - safety during configuration refresh operations
added acquire and release functionality for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management by releasing
simonstewart : remove @ ignore from firefoxprofiletest . java
updated the return type of ` getSystemBars ` from ` String ` to ` Map < String , String > ` and added additional annotations to
do n ' t use @ checkfornull in favor of @ checkfornull
bugfix # 21616 , use different color for disabled label in gtk
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code for better readability and maintainability
fix scheduleaction . computenexttimebasedscheduledexecutiontime ( ) to return date in the future
replaced the upload button with an action menu for single upload functionality to streamline the upload process by utilizing the action menu for improved
renamed multiple classes related to message expressions and security configurations to improve clarity and consistency in naming conventions
added ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to provide functionality for loading exchange metadata
added a custom serializer for Hadoop Writable objects in CrawlDbReader . java to enable proper serialization of Hadoop Writable types in JSON format
remove test that do n ' t pass on ci server
added service and configurationPid to the MDNSDiscoveryService component to enable discovery functionality for the MDNS service
added a null check for the messageItem before scrolling to the position to prevent potential NullPointerException when messageItem is null
updated ForkJoinPool instantiation in TestBPIndexReorderer . java to use a custom ForkJoinWorkerThread to improve thread management and enhance
removed assertions for DATANODE and NAMENODE in RoleCommandOrderTest . java to streamline test cases by eliminating unnecessary assertions
added methods for restoring and restoring local information from table information in PartInfo . java to enhance code clarity and ensure that table information
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added transformation and scaling for logo sprite in BitmapFontTest . java to ensure proper rendering of the logo during tests
added a check for built - in aggregates in the aggregation call stream to ensure that aggregation functions are only applied when the built - in aggregate is
removed the ` hasPendingEcho ` field and updated related methods in ` EndpointState ` , ` Gossiper ` , and ` Server
rename isanyhostdown to isanystoragehostdown in gossiper . getunreachabletokenowners ( )
make sure x ^ 2 = x ^ 2 be not change to multiplication
modified content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure correct content type is set based on saved request
refactor variable access modifiers and initialization logic in XToolkit . java to improve encapsulation and ensure proper initialization of graphics environment variables
refactor RecommenderJob and AbstractJob classes for improved code organization to enhance maintainability and readability of the codebase
refactor lock management in EnvironmentImpl to use ReentrantReadWriteLock instead of Object to improve thread safety and reduce synchronization overhead
added a test method to verify identity provider functionality in a zone to ensure correct handling of identity providers in other zones
updated job scheduling to use ExpireJob instead of JobHandle and added null check for timestamp in PointInTimeTrigger to improve job management by
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ rip - 10 ] send heartbeat to allbrokerwithlock ( ) when rebalance
fix ( cairo ) : add ` cairo . detached . mkdir . mode ` system property ( # 2616 )
[ java ] add test to ensure that message send to slow follower do not interfere with the leader .
change default label to ` ` auth ' ' instead of ` ` authors3 ' '
updated dependency management in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for parsing time dependencies to
refactored the OAuthService handling in GoogleCloudAPI and added a dispose method in GoogleTTSService to improve resource management and ensure proper
camel - 1640 : fixed file consumer not work with dynamic file name . thanks to benjamin
added a boolean flag ` reopenReaders ` to ` SolrConfig ` and modified the condition in ` SolrCore ` to allow configuration of reopening
add dialect = version attribute to mapwriter . write ( )
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition implementation to use lambda expressions instead of anonymous classes to improve code readability and reduce boilerplate
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java for improved search performance to enhance search efficiency by using a more
removed unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added a new method ` providesDirectNearbyUploadPreferences ` to the ` CommonsApplicationModule ` class to retrieve direct nearby upload preferences
added support for handling " SYSIBM " mode in the parser and mode classes to support compatibility with different database modes
refactor logging and sampler configuration in ` TraceGatewayEnvironmentPostProcessor ` , ` SamplerAutoConfiguration ` , and ` SamplerAutoConfiguration
added lastPid tracking and updated property retrieval logic in POIXMLProperties . java , along with corresponding unit tests in TestPOIXMLProperties
geotiffreader : fix for negative infinity in nodata
updated ` CliDriver ` and ` SessionState ` classes to improve error handling and code structure to enhance reliability and maintainability of the command
replaced the httpExecutor with httpScheduler in MockRestAdapter . java and updated related code to streamline the execution process and enhance error handling
added a default method ` selectByRuleIdSet ` to ` RuleConditionMapper ` for processing a list of rule IDs to enhance flexibility
added a new method ` addExitDescription ` to ` ExitStatus ` and updated its usage in ` AbstractJob ` and ` AbstractStep `
fix the multiblock render handler not work on the minecraft server .
renamed ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` and updated related methods accordingly to improve clarity and consistency in
swapped the order of left and right range length calculations in PlotConfiguration . java to ensure accurate range length calculations
refactor DefaultIOSInput to use UIAlertController instead of UIAlertView for improved clarity and functionality to enhance code readability and
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
rename the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descriptive
added an assertion to check if the service message is null to ensure that the service message is properly validated before proceeding
refactor key conversion logic in MappingMongoConverter . java to improve clarity and maintainability of the code
updated Timber logging syntax in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 16400 : camel - core - add support for generate xml dsl source code to be able to load property from classpath or file
updated FuzzyLikeThisQuery to use Terms for term extraction and added a test for non - existing fields to improve flexibility and ensure correct
refactor ` writeApplicationsLinks ` to accept a boolean parameter ` tabularList ` for better readability to enhance the functionality of the application link
[ ds - 3952 ] remove usage of dspace . utils . dspace . utils . dspace . identifiers . createm
replaced bytes . length with bw . getLength ( ) in assignBytes method calls to ensure accurate length retrieval for byte assignments
changed the return type of the getDisplayScript method from abstract to a concrete implementation to provide a default implementation of the method
danielwagnerhall : fix keyboard interface test in firefox
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added synchronization and synchronization for empty active interfaces in NetworkConfigurationWatcher . java to ensure thread safety when accessing network configurations
refactor HSSFWorkbook to include a method for retrieving all embedded objects to improve code readability and maintainability by encapsulating object retrieval
replaced the import of ` Shdr ` from ` jogamp . common . os . elf ` with a new import from `
replace hostParams with roleParams for better clarity to improve code readability and maintainability by using more descriptive variable names
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbol font
replaced glStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
refactor LiveTvGuideActivity to use a current guide start date instead of a generic start date to improve clarity and maintainability of
updated method invocation in MockGateway . java to use Whitebox . getMethod instead of getDeclaredMethod and added new classes CommonParentTest . java and
added calls to ` libfreetype . so ` and ` libfontmanager . so ` in ` JREUtils . java ` to
mondrian : fix bug in multi - variable function
loop safepoint optimization : add guard support for unsigned range guard .
move instanceof check to a separate method for clarity to improve code readability and maintainability
added a new ` LocalizedString ` class and refactored ` Attr ` and ` Resolve ` classes to utilize it for type argument
added a boolean property ` disableClasspathSearch ` to ` ServerConfig ` and updated its usage in ` DefaultContainer ` to allow configuration of classpath
replaced manual array copying with Arrays . copyOf for improved memory management to enhance code readability and performance by leveraging built - in
updated default retry values from 0 to 2 in multiple classes to allow more flexibility in retry configuration
added settings handling and updated usage message in TexturePacker . java to improve flexibility in specifying settings for texture packing
updated AchievementsFragment to use AppCompatTextView for displaying uploaded images and images used by Wi - Fi to improve user
added multiple mock and end annotation processing round tests in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing and
added a new ` CategoryInfo ` class and modified the ` MwQueryPage ` class to include it to enhance the functionality of category information
updated error messages for username and password in AuthzAuthenticationRequest . java to improve clarity of error messages for better debugging
added accessibility support to the TaskbarStashController to improve user experience by hiding the taskbar when it ' s auto - h
added a condition to check for the ' ^ ' character in the signature parsing logic to ensure that a NoSuchElementException is thrown when a ^ character is
updated access flags in ClassVisitorDriverFromElement . java and added multiple test cases in StubJarTest . java to ensure correct handling of class
added null checks for input in IntervalFilter and improved null handling in LowpassIntervalsSource to enhance robustness by ensuring input is not null
added tests for the ` getEntrySetIteratorLastHashNext ` and ` getNext ` methods in ` MapInterfaceTest ` to ensure correct iterator behavior
added a serialVersionUID field to TreeMap . java to ensure serialization compatibility for the TreeMap class
change the timestamp format in ImageData from milliseconds to seconds to ensure accurate representation of the created time in the image data
grobcov : add grobcovf2m and grobcovc1 to the list of available grobc
added encryption key deletion for private and public accounts in AccountRemovalJob . java to ensure sensitive data is removed for accounts
make keep - alive header configurable in jetty - asynchttpprovider
fix postjoinmapoperation when map have no interceptor and lite member join
simonstewart : remove duplicate processor in standarddialect
removed spillEnabled parameter from several methods in BaseHybridHashTable and LongHybridHashTable to simplify the constructor by eliminating
refactor environment variable retrieval to use helper methods for clarity and efficiency to improve code readability and maintainability by reducing duplication
fix checkstyle issue in util / defaultactionmapper . java
added SerializableMode import in Mockito . java and modified closing brace in PluginSwitch . java to ensure compatibility with SerializableMode and clean up code
resolve issue with reflection field injection point not be environment aware and not respect @ nullable . fix # 2610
added support for isolation level in select statements and refactored related logic in the parser to enhance database compatibility and support for isolation level in select
replaced HIVE _ SERVER2 _ TRANSPORT _ MODE and HIVE _ SERVER2 _ THRIFT _ HTTP _ PATH constants with
added an ` isCacheable ` method to ` GlobalOrdinalsWithScoreQuery ` that returns false to provide a default implementation for caching
added a new file TestStrangeControl . java that contains a thread executing StrangeControl . test ( 42 ) to demonstrate
updated file extension from " . json " to " . jsfile " and " . jslib " in JsFile and JsLibrary classes to
added selection start and end variables and methods to set and get selection start and end in ShadowEditText . java to enhance text selection functionality and
refactor grpc server initialization to use try - with - resources syntax to improve resource management and ensure proper shutdown of gRPC servers
modified the ` use ` method in ` Jooby ` and ` Router ` classes to include a path parameter and added validation to ensure
added a null check for the ' fst ' variable in FreeTextSuggester to prevent IllegalStateException when lookup is not supported
updated string handling in T4975569 and T6729471 to use ` System . getProperty ( " line . separator " ) `
added support for loading and loading the ABI writer class in JavacInMemoryStep to enhance functionality by allowing dynamic loading of ABI
added a suppression annotation to indicate that a boolean method is always inverted to improve code clarity and prevent unnecessary warnings
fix npe in pullmessageservice when shut down
refactor EnergyEndpointer class for improved clarity to enhance code maintainability and readability
refactor ` ComponentPresetChooserDialog ` to use a list of displayed column keys for improved clarity and efficiency to enhance readability and
remove unused import to fix build
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and modified ` CxxLibraryMetadataFactory `
deleted the files mmm Constants . java and mmm DistanceUtils . java to remove unused components to streamline the codebase
refactor key splitting logic in RandomPartitioner . java for improved clarity and efficiency to enhance readability and maintainability of the code
fix build - time error during native - image generation with @ fold annotation
k8s : fix rolebindingoperationsimpl . create ( ) to return rolebinding instead of rolebinding
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to enhance traceability and debugging capabilities during session cookie configuration
updated the calculation of ` fName ` to use ` Calendar . DAY _ OF _ YEAR ` instead of ` LOG _ DAYS ` to ensure
corrected a variable name from ' o ' to ' v ' in the ObservableBlockingSubscribe class to improve code clarity by using a more
added error handling for ` fileManager . handleOption ` and created a new test class ` T8033711 ` to validate output from ` javap ` to improve robustness of option handling and ensure correct error messages are generated
replaced calls to ` . collect ( Collectors . toList ( ) ) ` with ` . toList ( ) ` in multiple Java files to stream
changed log level from error to warn and modified exception handling logic in TaskDriver . java to improve logging granularity and handle shutdown scenarios more effectively
[ hotfix ] [ network ] add parameter to inputgatespecutils to specify whether to enable tiered storage
refactor status code checks into a separate method for clarity to improve code readability and maintainability by centralizing status validation logic
added support for OpenGL 2.0 in Cuboc and set it to true in CubocDesktop to enable support for OpenGL
remove useless check for method . getreturntype ( ) in jimplebody
replaced ` DefaultSourcePathResolver ` and ` SourcePathFinder ` imports with ` AddToRuleKey ` and refactored the `
fix flakiness of logexceptionsqltest . testnolightjobsleventually ( )
added a condition to check for non - Windows build files in MergeWordsListTask . java to ensure that duplicate words are not processed in the
refactor instructorfeedbackresponsecomment so that it do n ' t show duplicate comment .
removed unnecessary whitespace in the ` Container ` class to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` containing a class ` A ` with methods to demonstrate the behavior of
replaced direct stream skip and read operations with IOUtils . skip and IOUtils . read to improve code readability and reduce dependency on deprecated methods
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 537 : jdbc
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of error scenarios
hbase - 11313 lrublockcache . getcurrentsize ( ) should return 0 if the block cache be not find
removed unnecessary null check for taskCount in RecentsView . java to simplify code by eliminating unnecessary checks
added instance configuration change listener to HelixBrokerStarter and increased sleep duration in HelixServerStarter from 1000ms to 5000ms to
added CoinmateMetadataServiceRaw and CoinmateStatic classes for retrieving exchange metadata to enable dynamic retrieval of exchange metadata for testing purposes
improve warning message when systempath be not point at the project . basedir
pdfbox - 4892 : avoid npe , a suggest by valerybokov
add ptransform . setdisplaydata ( list < itemspec > ) to allow set display data
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat
disable cryptographic algorithms in the JSSE configuration to enhance security by preventing certificate path errors
updated error messages for subcommand groups in OptionData . java to clarify that they cannot be created with subcommands or groups
updated module - info . java files for mmm and ppp modules to improve module dependencies and organization
added error handling for unknown server errors in the ensureConnection method to improve robustness by ensuring that unknown server errors are properly managed
updated state management in LauncherInstrumentation and LogEventChecker classes to ensure proper cleanup and prevent potential memory leaks
refactor exception handling and resource closing logic in FileSinkOperator . java and SortedDynPartitionOptimizer . java to improve error logging and resource management
added diagnostic output for JavaFileObject in SchemaGenerator . java to improve debugging by displaying diagnostic information during task execution
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve type specificity
updated test cases in DataSourceMonitorTests . java to improve test coverage and ensure accurate data source monitoring
added a HashSet to track loaded resource paths and modified the scanning process to optimize resource loading by avoiding redundant scans and improve performance
updated the method for retrieving the test instance and improved error logging in TestServiceUtil . java to enhance error handling and provide clearer diagnostics
added null check for the object before processing and modified response handling in RoutingInBoundHandler . java to ensure proper handling of null values and improve
added natIp field and improved logging message format in EkeyConfiguration . java and EkeyHandler . java to enhance debugging information by including
updated imports and refactored buffer allocation in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , and Serializer classes to improve memory management
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP headers and body in HttpConnection . java and implemented a new test case in RFC2616BaseTest . java to ensure
refactor subscription handling in MultiTimeout . java to use an AtomicReference for upstream and requested initial subscriptions to improve clarity and ensure proper subscription
speed up leveledmanifest . getcompaction candidate ( ) by limit the number of compaction
added a test annotation to TestOrcTimezone1 . java to enhance test coverage for timezone - related functionalities
updated metrics and timer detection logic to incorporate substring matching for improved accuracy to enhance accuracy in matching metrics and timers based on substring
replaced direct usage of ` JsonUtils . objectToJsonNode ` with a try - catch block for better error handling to improve robustness
added null check for columnClass in JTable and created a new test class Test6888156 to improve robustness of JTable rendering
added conditional handling for the SHELL environment argument in IDEService . java to ensure proper execution of shell commands when the environment is available
updated delete method call from ` deleteWithoutSubscriptions ( 10 ) ` to ` deleteWithoutSubscriptions ( 1 ) ` to correct the number of subscriptions
replaced ` LinkedList ` with ` Set ` for test instances and modified the ` collectParentTestInstances ` method to use ` LinkedHashSet ` to
rename FieldMonitor class to improve clarity to enhance code readability and maintainability
replaced the ` deleteFilesAfterClose ( ) ` method with ` transactionDisable ( ) ` in ` BTreeMapTest . java `
modified the iterator handling in SortedIntList and added a new test class SortedIntListTest to improve iterator management and ensure proper testing of Sorted
camel - 16400 : remove jmxhelper . unregister ( ) to avoid leak .
[ hotfix ] [ doc ] change default writebuffer size of rocksdb to 64mb
removed the default value from the constructor of Style to simplify the constructor parameters for better readability and maintainability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message arguments without encoding
[ hotfix ] remove unused json graph in samza runner
feat ( demo ) : make helloaudio use ocean waves instead of nature
refactor LoopRotateBadNodeBudget . java for improved clarity to enhance code readability and maintainability
added a new method ` convertToMongoType ` to handle ` TypeInformation < ? > ` and updated related methods to utilize this new method to
fix ` ` i ' ' - > ` ` i ' ' - > ` ` i ' ' in inputboxes
simonstewart : fix the tostring ( ) method in sendkeytoactiveelement , and add a test
added methods to scale and scale images in AddAndScaleMultiImage . java to improve image rendering performance and error handling
removed the extendArgumentCheck ( ) and extendWrapStore ( Engine ) methods from DBMaker . java to streamline code by eliminating
fix shift state for multi - tap ( issue # 388 )
removed the ` DETECTED _ ACTIVITY ` constant and related methods from ` CSVFileLogger ` , ` CustomUrlManager ` , and
updated import statements to reflect the new package structure for ExtensionConfig to improve organization and clarity by aligning imports under the protocol package
removed import of Buildable from AaptPackageResources . java to streamline dependencies by eliminating unnecessary dependencies
added comments to ` CodeException ` , ` ConstantInvokeDynamic ` , ` ConstantMethodType ` , and ` ConstantMethodType ` to improve clarity
updated the error message in WebSocketUpgradeHandler to include the status of the upgrade protocol to provide clearer feedback on the status of the upgrade protocol
updated the blockMode assignment logic in P11Cipher . java to ensure correct parsing of mode based on the length of algorithmParts
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed duplicate code for checking plot ownership in Merge . java to streamline code logic for better readability and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code by eliminating
use de . dfki . lt . unitselection . featureprocessors . phoneset instead of com . sun . speech . freetts
refactor the ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` for consistency to improve code reusability and maintainability
refactor rendering logic in DLNAResource and Request classes to improve clarity and maintainability of rendering state management
[ mng - 5331 ] add all resolution repository to the list of repository in plugin manager .
camel - 16400 fixed the test error of cxfrsproducerclientfactorycachetest
doc ( sample code ) : update doc for physicsclient
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failure
added a new File object instantiation in the ZipFile class to enhance file handling functionality for improved file management
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method is no longer recommended for future
[ core ] make channel uid non - null by default . ( # 3649 )
added logging functionality and a new StackTraceUtils class for better stack trace management to improve debugging and traceability of transaction execution
removed the @ Test annotation from FormLoginIntegrationTests . java to ensure proper test execution for the FormLogin integration tests
refactor unparseList calls to conditionally handle parentheses in FunDefBase and ParenthesesFunDef to improve flexibility in argument
updated GET _ CONFIGS _ SELECTED _ THAN _ ONCE _ QUERY to include cluster names and modified the handling of selected configs to
replaced ` supressWarnings ` with ` suppressWarnings ` and added a conditional check for ` jdk . internal . misc . Innoc
updated JsonTreeReader to handle unexpected JSON elements and improved error messaging to enhance robustness of JSON parsing and provide clearer error messages
added support for command line arguments with dash in TestCommand . java and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest . java
added methods ` dedup ` and ` indexSolr ` to the ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality by allowing
[ hotfix ] [ table ] [ examples ] use flink planner instead of blink
added a call to clear the database in MssqlIntegrationTest . java to ensure the database is reset before each test execution
updated progress handling in ` Progress ` and ` RSSReader ` to include a ` displayPercentage ` parameter and modified the ` dispose ` method to
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added methods to write and close POIDocuments in IOUtils . java to improve resource management and ensure proper closure of output streams
replaced println statements with print statements for runOptions , sketch name , and exportClassPath to improve readability of command line output
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods in ` ITextRenderer ` to
added LDAP authentication handling in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to improve user authentication process
added default port handling functionality in NettyHttpServer , DefaultRouteBuilder , DefaultRouter , and UriRoute classes to enable dynamic port configuration for
updated SnmpTargetHandler to check if the handler is initialized before updating the status to ensure that the status updates only occurs when the handler is
added permission check to allow submission of instructor with submit privilege
added @ Incubating annotation to AvailableSettings . java to indicate that these settings are outdated and should not be used in future development
refactor path extraction logic in FileResolverImpl . java and add WarFileResolverTest . java to improve handling of jar and zip file
updated log message format for newFlushedSize in DocumentsWriterPerThread . java to improve clarity of log output regarding the inclusion of
fix dirt . dirt . getunlocalizedname ( ) instead of dirt . dirt . func _ 149739 _
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated the thread count in FeedRefreshUpdater from a fixed value to a dynamic value of 1000 to improve resource management by allowing more time for thread
updated the parameter in ` deserializeFrom ` from ` false ` to ` exactSearch ` in ` TsFileSequenceReader . java ` and added
simplified the date formatting by removing the dateFormat parameter from the makeResultFromDelimitedString method to streamline code by eliminating
added preferred size adjustment for FList components in NavigationShareTab to improve layout responsiveness based on user interface size
replaced OffsetAttribute with State in BeiderMorseFilter and added a new test for custom attributes in TestBeiderMorseFilter to
updated UpnpAudioSinkReg , UpnpHandler , UpnpRendererHandler , and UpnpEntryQueue classes to improve code organization and maintain
fix warp lens lens not use blockpos . getblockpos ( ) .
test : add testfactory to test json . tojson ( )
updated MutableContextDataSupplier class implementation to improve performance and maintainability of context data handling
changed the exception handling from ` Exception ` to ` Throwable ` and added a warning log statement to improve error handling and provide a more informative
updated KubernetesMockServer constructor to use HTTPS instead of true to enhance security by using secure connections
compute stamp of math intrinsics before add them to the graph
updated HTTP method handling in DefaultServlet and modified test assertions in DefaultServletTest to support both GET , HEAD , OPTIONS , and POST requests to
fix for tika - 449 ( update parser to extract geographic metadata ) from jukka to ensure that the lat and longs be correctly format in all locale
replaced exceptions with response exception handling in ShowFileRequestHandler . java and added a new test case in ShowFileRequestHandlerTest . java to improve
added try - catch functionality to handle exceptions in the ReflectorClassWriter class to improve error handling and ensure proper exception management during reflection operations
added a ` clamp ` method to the ` Vector ` and ` Vector2 ` classes to provide functionality for clamping vector elements within specified limits
added client details handling and updated access token creation logic in ChainedTokenGranter . java to improve access token management and ensure correct scope
refactor BC _ instanceof to improve code readability to enhance maintainability and facilitate future development
replaced the method ` setSaveFlags ( SAVE _ ALL ) ` with a logger instance in ` EditorBottomSheetBehavior ` to improve
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in UaaUrlUtilsTest . java to utilize JUnit 5
hhh - 11393 fix nativesqlqueryimpl . addScalar ( ) to return basicdomaintype instead of type
added a caching mechanism for font - related boolean values in SunLayoutEngine to improve performance by avoiding repeated checks for font attributes
change blockpositionbyhash to use intarraylist instead of intbigarray
danielwagnerhall : fix a bug in the selenium - backed webdriver
[ hotfix ] fix checkstyle violation in brokerrequestutils
refactor instance handling in InjectorBuilderImpl to improve clarity and order of elements in the instance map to enhance readability and maintainability of
updated method calls to use ` buildTarget . getBasePath ( ) ` instead of ` cell . getBuckConfigView ( ) . getAbsolutePathTo
( chore ) camel - echomessage : avoid npe when value be null
fix possible memory leak with jabber connection .
updated the DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to improve the precision of the
added methods to retrieve and utilize DataTypePhysicalVariation arrays in VectorizationContext , VectorPTFOperator , Vectorizer , and Vectorized
move htmlassettranslator and stringsresourcetranslator into com . google . zxing and com . google . zxing . client . j
updated conditional logic in OverviewState . java to include a check for the removal of the shelf to improve the responsiveness of the
added JPA @ Entity annotation to BaseActivityEventEntity . java to enable entity management for persistence entities
added tracing for touch interactions in NavBarSwipeInteractionHandler and TouchInteractionService to improve debugging and performance tracking during interactions
added a new file ` InvalidOptions . java ` to test Java options to ensure that the application correctly handles and reports invalid options during execution
added a check to log an error if the number of supported display bounds matches the number of supported display states to ensure the application does not exceed
refactor code to move the ` getClientIdAndClientSecret ` method from ` OAuth20UsernamePasswordAuthenticator ` to ` OAuth20Utils ` to
set the ` _ unwrapServletException ` variable to true in ` ErrorPageErrorHandler ` and update its value in ` AsyncContextTest ` to
added a conditional check to set the status to DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcut status updates
camel - 16400 : seda component now allow to configure the size of a seda queue by default . thanks to jo
add batchstart ( ) and batchend ( ) to make sure start ( ) and end ( ) work
added HttpClientBuilder and HttpClientConfiguration to ThirdEyeApplication . java to enable HTTP client configuration for improved request handling
added sorting functionality to JobInstanceFetchRequest and modified related methods in JpaJobPersistenceImpl and JobInstanceFetchRequest to enable sorting of job
updated the cancelCryptoFacilitiesOrder method to return null instead of throwing an exception to improve error handling and provide a default implementation for canceling
[ web ] hide keyboard when click on click in algebra view
sulong : use a native function for memcopy ( ) to improve performance
removed unnecessary whitespace in method declarations in BindLdapAuthenticationHandler . java to improve code readability and maintain consistency
ggb - 1889 disable block tooltips in the mode menu
updated DefaultDateTypeAdapter to accept a customizable time style instead of a default date pattern to enhance flexibility in date formatting by allowing custom
replaced " < UID : " and " > " with " ( " and " ) " in playerSet to improve clarity of player
added a check for empty lists in the List class to ensure proper handling of empty lists and prevent potential NullPointerExceptions
added exception handling for ` InvocationTargetException ` in ` ParametricCallable ` to ensure proper exception propagation for command execution errors
modified the ` getLikeExpression ` method to include a ` isLike ` parameter for different expression types to enhance the functionality of expression filtering based
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to provide functionality for starting and stopping stream supplier
added locale handling in the runChild method of LuceneTestCase to ensure consistent locale management during child execution
refactor multiple Java classes for improved code organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method to improve code readability and maintainability
add a test to show how to re - create a routebuilder in osgi
nifi - 2262 : fix test to allow execution . error attribute to contain any value
refactored the ` returnTypeSubstitutable ` method to accept a ` Warner ` parameter and updated type comparisons to improve clarity and
added ThrottleType enum and modified throttle processing logic in TestExecutor . java to support dynamic throttling behavior based on the throttle type
removed unnecessary pixel assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to streamline code and
refactor annotations in Annotation and AnnotatedElement classes to improve code clarity and maintainability
added a new ` Model ` interface and modified ` Sheet ` and ` Workbook ` classes to implement it to establish a standardized structure for
( chore ) camel - base - engine : replace hardcoded pattern with constant
added a ` clearEntityManager ` property and its getter / setter in ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to
added null checks for shortcuts and improved error handling in the InstallShortcutReceiver , Launcher , LauncherModel , and Workspace classes to enhance
changed TwoDimensionalCollectionValuedMap instantiation from default to true in CoreMapNodePatternTrigger . java to enable the use of two - dimensional
updated exchange specification host and exchange name from " btc - e " to " wex . nz " and " BTC - e " to
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and modified buffer setting in EncodedTreeReaderFactory . java to
added null check for files in SegmentInfos . java and a new test case in TestIndexReader . java to ensure robust error handling and verify
fix test failure in fhirresourcedaor4searchwithelasticsearchit
modify the return statement in DeviceHandler to use a variable for percentValue to improve code readability and prevent potential errors due to negative or negative
update limit checks from ` limit < 1 ` to ` limit < = 0 ` in ` RangeInputStream ` and ` RangeReader ` to ensure
camel - 16400 : camel - core - optimize rout engine to reduce stack frame in use during load
fix incorrect playlist start position calculation in hl .
updated test classes to extend from LuceneTestCase instead of TestCase to improve compatibility with Lucene ' s testing framework
[ hotfix ] fix outputhandler not set next input in statefuloperatortest
removed null check before setting bitmap shader shift in Area and Line classes to streamline code by directly using the tile object ' s origin
added database existence checks and improved import statements in Blockchain and BlockchainTest classes to enhance blockchain management and ensure accurate testing of database existence
added trimming to the value extracted from the matcher to ensure leading and trailing whitespace are removed from the result
attempt to fix intermittent test failure on window .
ggb - 1342 fix : divider location be wrong for web
added health check metrics and updated the ` checkHealth ` method to ` checkHealthLegacy ` to enhance health check functionality for better monitoring and reporting
set visibility of shared avatars view to GONE in LocalFileListAdapter to improve user interface by hiding shared avatars when necessary
do n ' t use clientbundle . source for mow and open - screen . scss
updated conditional checks from ' > = ' to ' > = ' in multiple Java files to improve clarity and correctness in argument validation
add a check for log level before executing the command in LogInterceptor . java to ensure that commands are only executed if the logging level is fine
replaced CountDownLatch with assertWaitUntil for span verification in EventBusTracingTestBase . java to improve test reliability by ensuring all
refactor QueryParser to initialize locale directly and add getter / setter methods for locale management to improve code clarity and facilitate locale
fix : use linkedhashset instead of arrays . aslist in entrycustomizationdialog
[ drools - 7 ] make rulebaseimpl public and add test case
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` and ` OCSPResponse ` to handle unauthorized responses
updated server state management in SSL . java to improve responsiveness and error handling during server operations
added a new COUNTER _ OPEN _ CONNECTION _ COUNT and implemented connection count tracking in the SourceCounter and AvroSource classes to enhance connection management
add builder . fields ( list < fielddefinition > ) method to allow customization of field definition
refactor ` BuckConfig ` to encapsulate the retrieval of source root paths into a new method ` getSrcRoots ( ) ` to
replaced Writer with PrintWriter in ScriptExecutable . java to improve output handling by utilizing PrintWriter for better performance
[ hotfix ] [ test ] fix flaky test filesourcetextlinesitcase
added support for converting DataTable instances in JRubyStepDefinition to enhance functionality to support data table integration in the application
updated method names and parameters in ` SearchImagesRenderer . java ` and ` ApacheHttpClientMediaWikiApi . java ` to improve clarity and
fix typo find by codespell on fossies . org
updated error message formatting in FormulaParser . java to provide clearer context for parsing errors near characters
added bind address getter and setter methods in WebSocketClient . java and modified visibility of the WebSocketFuture class to enhance WebSocket connection management and improve error
[ java ] delete archive and archive directory when prepare for election .
replaced manual resizing logic with a unified ` setSize ` method to improve code readability and maintainability
replace direct comparison of OPT _ SESSION _ FIXATION _ MIGRATE _ SESSION with Boolean . valueOf to ensure proper type conversion for session fix
add a switch statement to handle different edge options in LALogicLinesFragment . java to improve clarity and functionality of channel initialization
danielwagnerhall : add a linear backoff mechanism to the chromedriver to increase the frequency of thread . sleep (
added URI _ TEMPLATE attribute and modified ClientResponseWrapper constructor to include HTTP method and HTTP route to enhance request handling by associating URI templates with HTTP
fix potential npe in precompactedrow . patch by jbellis
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new class InvalidRenderIntentTest . java
[ # 7011 ] add ` ` on ' ' and ` ` on ' ' to ` ` contribution question ' ' field
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
added @ SuppressFBWarnings annotation to KafkaExactlyOnceSink . java and removed Serializable interface from KafkaRecord . java to improve code clarity
added PGConnection to the proxy instantiation in PooledConnectionImpl . java and introduced a new test for PGConnection in BaseDataSourceTest . java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log level from warn to info for missing token encryption secret and changed log level from warn to trace to provide clearer information about the abs
remove @ deprecated from ` hazelcast . getconfiguration ( ) ` ( # 2640 )
added topology update event handling and adjusted unlimited key JCE requirement check in AmbariManagementControllerImpl . java , refactored command
modified the ` NamedListCodec ` class to handle ` ITERATOR ` and ` END ` types and improved the ` readIterator `
fix possible npe in migrationmanager . assigncompletelylostpartitions ( )
added schema inclusion rule to ApiExample . java to enable the use of public schema in the application
updated the expected value in the assertion from 3.0 to 7.0 to ensure the test accurately verifies the difference between mean and var
refactor ring creation logic in SDO . java and add new test cases in SDOCreateTest . java to improve code clarity and
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve the base name and
bug 58642 : add a setdebugevaluationoutputfornexteval ( ) method to formulaevaluator and xssfevaluator
test ( refactor ) : migrate testmodule to junit5 ( # 4329 )
updated ExoPlayerProfile instantiation and modified isLiveTv condition in PlaybackController to ensure proper handling of live TV playback based on
added a return statement to the DynamicStyleBar class to ensure proper termination of the method execution
added SLF4J logging for property management in the Utils class to improve traceability and monitoring of database property changes
refactor ReactiveAuthorizationManager class implementation to improve code readability and maintainability
updated the condition to promote both object and boolean types to ensure compatibility with both object and boolean types
[ gr - 3995 ] make llvmpackframenuller public and add llvmpackframenuller .
updated multiple Java files related to operation locator , transport , dynamic schema loading , and configuration to improve code organization and enhance maintainability
add test to verify cache proxy work with caffeine cache
added a method ` calculateBoundingBox ( ) ` to calculate the bounding box of a mesh to improve the bounding box calculation functionality for mesh elements
added a new command - line option to specify the hash function for computing target hashes to enhance flexibility by allowing users to choose which hashing function
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of configuration settings
updated high light color settings in ListViewMultiChartActivity and modified highlight paint alpha in BarChart to improve visual clarity and control over highlight
remove duplicate entry in pgSgPathPlanMap to improve code efficiency and maintainability
updated InfinispanRemoteProducerIT . java with a new parameter value from 2 to - 1 to improve test coverage for remote producer integration
added locking mechanism to the artifact fetching process in MavenArtifactFetcher and modified test assertions in MavenDependencyResolver to improve reliability of artifact fetching and
updated the fragment shader in SpriteBatch . java to include an optional GL _ ES declaration to ensure compatibility with OpenGL ES for improved
hbase - 26400 use set instead of sortedset for rsgroup . getservers ( )
added a try - catch block to load the JspPage and changed log level from warn to debug to improve error handling and provide more detailed logging
refactored version handling in CustomAnalyzer and added a test for version aware filtering in TestCustomAnalyzer to enhance the functionality of the CustomAnalyzer
added a test method to verify the behavior of ` getApplicationInfo ` in ` ShadowPackageManagerTest ` to ensure that ` getPackageArchiveInfo `
replaced direct method invocation with MethodUtil . invoke and added package access checks in several classes to improve method access control and ensure proper package access
added import statements for ProjectConfigurationStartEvent and TaskStartEvent , and modified the progress listener to include additional operation types to improve project configuration handling
douniaberrada : remove unnecessary synchronized block in androidwebdriver . java
do n ' t set initializationfailfast if initializationfailtimeout < 0
removed the ` timeout ` parameter from the ` getResult ` method and added an ` error ` method to simplify the method signature and enhance error handling
changed the ` isNative ` field to be transient and modified the entry addition logic to ensure the ` isNative ` field is correctly serialized and
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ` ` ruleenablehandler ' ' to ` ` ruleenablementactionhandler ' ' ( # 5372 )
fix javadoc warning ( miss javadoc tag )
updated debug log messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of log messages for better troubleshooting
updated method names from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and refactored variable names for clarity
added null check for repository existence in UsersPanel . java to improve error handling and provide feedback when a repository cannot be found
added support for font file extensions " . otf " and " . OTF " in the font manager to ensure compatibility with font file formats
refactor type checking logic in AnnotationMatcher to improve clarity and accuracy to enhance readability and maintainability of type comparison logic
updated error message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting for better debugging
added a check for debug logging before logging in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when debug
changed the ` includes ` and ` excludes ` lists from ` includes ` to ` excludes ` in ` SurefirePlugin . java ` to
added logic to conditionally move to the default screen based on the ` shouldMoveToDefaultScreenOnHomeIntent ` method to enhance user experience
updated maximum bitrate from " 110 " to " 30 " in the configuration to increase the bitrate for better performance
removed the ` getOptions ( ) ` method and directly returned ` optionsMap . values ( ) ` to simplify the code by eliminating unnecessary
trim whitespace from the returned description in MutableDatabaseProperty . java to ensure consistent formatting of the returned description
simplified the output filename for JDK8022548 . out to improve readability and maintainability of the code
simplified log message by removing the process ID from the error log to improve clarity and reduce verbosity in error reporting
added ` getLoadedMusic ` and ` getLoadedSound ` methods to ` MusicLoader ` and ` SoundLoader ` classes to
updated type declaration to use generics in OnBeanCondition . java to improve type safety and avoid potential ClassCastExceptions
added ScreenRecordRule annotations to RequestPinItemTest . java to enable screen recording for test cases
disable the lrPause button when it ' s active in CPUFeature and MemoryFeature classes to improve user experience by preventing unintended behavior
replaced instances of ` PreferenceMultiline ` with ` mAccountsPrefCategory ` and refactored related methods to improve code readability and
do n ' t send ' available ' presence when no available presence be available .
modified the initialization of StringBuilder in ObjectInputStream to accommodate large utflen values to optimize memory usage by pre - allocating it with a minimum
disable stats export by default in integration test
refactor InterruptedException handling in the code to improve clarity and maintainability of exception management
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactored SSL connection handling in ConnectionCheckOperation . java to improve clarity and maintainability of the connection check logic
updated the conversion logic in ArgumentArrayMessageMapper to handle both String and Map types to improve type safety and prevent potential ClassCastException during conversion
[ ds - 3952 ] fix test failure in xml workflow
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the intent in PasscodeManager . java to ensure the activity is
refactor : remove @ deprecated from patternparameterconfigurator ( # 2638 )
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check for ` image . getDrawable (
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests due to known issue LUCENE - 4488
added null check for the root variable and collected components from the tabbedPane to prevent potential NullPointerExceptions when the root is null
move confusionmatrix to testclassifier and testSentence to save confusion matrix
performance improvement : do n ' t call postprocessors if result be null
refactor ShadowBluetoothHeadset to use a HashMap for storing Bluetooth device connection states instead of a List to improve state management and retrieval efficiency for connected devices
camel - 16400 : fix typo in property bind support .
added " clone " method to the objectMethods set and introduced a finalizer method for finalization in ResultObjectProxy . java to enhance object
[ hotfix ] [ test ] add null check for counter in integrationtestbiglinkedlist
send not _ implemented reply for referencing object .
updated the parameter in the setRegisteredServiceFilter method from ' service ' to ' serviceId ' to ensure that the service matches the registered service before
added null check for getActivity ( ) before running a Runnable to prevent potential NullPointerException when getActivity ( ) is null
[ hotfix ] fix checkstyle violation in heartbeat / scheduler
added getter and setter methods for ` _ stringType ` in ` DatabaseAdaptor ` and modified access modifiers in ` JDBCSessionDataStore ` to allow
updated test cases in UIMAUpdateRequestProcessorTest . java to replace " language : english " with " suggested _ category " and modified
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods to improve code read
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
dmn - 1340 add test case for dmnruntime # evaluateall ( )
add glflush ( ) to ensure texture map creation finish before move on mac
added tooltip text for the checkboxes in RocketPanel to enhance user experience by providing context - sensitive help for the checkboxes
fix : use addtype ( ) instead of gettypes ( ) . add ( )
add miss text and description for reload / restart action ( # 5371 )
bugfix : use ` ` default ' ' instead of ` ` simple ' ' for spreadsheet label
changed the type of BRIGHTNESS _ FACTOR from int to double to ensure proper type handling for brightness calculations
add support for ` ` context ' ' revision in sscm history
added an ` isAdmin ` parameter to the ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods to enhance user
added checks for return types in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a new Test6723447 class
updated logging statements in DynatraceExporterV2 to use placeholder syntax to improve performance and readability of log messages
updated method parameter names from ' runnable ' to ' task ' for clarity to enhance code readability and maintain consistency in naming conventions
fix npe in mixinitemstack # setcapabilitiesfromspongebuilder ( nbt data ) .
updated assertion in LifecycleUtilsTest to compare execution ID to ensure consistency in execution ID comparison
refactor contract creation logic to include checks for both CreateSmartContract and TriggerSmartContract to ensure only valid transactions can be created with one account
added new package - info . java files and updated module - info . java for several packages to organize package structure and improve module management
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a while loop instead of synchronized block to improve performance by
added duplicate file handling in JavadocTool and improved test execution in T7091528 to enhance robustness of Javadoc processing by preventing
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to ensure proper handling of
added support for adding new user parameters in the LoginServerTokenEndpointFilter and created a test for it to enhance flexibility in handling OAuth token
added a new language key " c " and modified language comparison logic in LanguageFactory and CPPParserTokenManager to support additional language keys and
replaced direct instantiation of ThreadPoolExecutor with a new method ` newSingleThreadExecutor ( ) ` in ` BuckEventBus ` to improve
added cache control headers and expiration handling in LoginService and FormAuthenticator classes to improve HTTP response management and ensure proper caching behavior
updated error logging to include the exception message to improve error reporting by providing more context in error messages
updated HSSFTests to replace AllHSSFUtilTests with TestAreaReference , TestCellReference , TestRKUtil , and
renamed FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve clarity and consistency in naming conventions
refactor output handling in TestCommand . java to check for null before obtaining the class directory to improve robustness by avoiding potential NullPointerException
added external resource control priority to Java2DRenderer to optimize resource management during processing
added exception handling for ` ArrayIndexOutOfBoundsException ` in ` TestTriggerCoverage . java ` to ensure that the test does not fail on non - Windows
changed the visibility of the ` mbean ` variable to final and refactored CPU time checking logic into a separate method to improve thread CPU time
updated whitespace checks in TabsAndIndentsVisitor . java to include comments when determining if the last whitespace is empty to ensure proper handling of
removed logging statement from SimDistribStateManager and updated assertions in TestTriggerIntegration to improve log clarity and increase accuracy in tests
updated string comparison methods to be case - insensitive for change sets to ensure accurate comparison of change sets regardless of their path and author
added a method ` getString ` to retrieve a value from the map in ` ShadowBundle ` to enhance the functionality of the ` getString ` function
updated date formatting logic in TweetActivity . java to ensure consistent date representation based on locale settings
fix for npe on processsession . getconnections ( ) when there be no connection
refactor focus request logic in DetailFragment . java to improve readability and maintainability of the code
fix extra classpath issue on window .
make sure solve ( ) be thread - safe
add an import statement for Message in GenericMessage . java to enable integration with the Message class in the Spring framework
updated SQL query construction in PostgresConnector . java and added a join method in TaskAttempt . java to improve code readability and streamline
updated file filter handling in AquaFileChooserUI to improve filtering logic to ensure only valid file filters are applied to the file chooser
synchronize on the wrapup sync root to prevent potential deadlock
refactor the ` toFormulaString ` method in ` ArrayPtg ` and add a test case in ` TestArrayPtg ` to
updated import statements in PGtokenizerTest . java to use specific assertion methods to enhance readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator and add a new test for nested anonymous classes to improve code clarity and ensure correct handling
added support for PostgreSQL auto - increment columns in AddAutoIncrementChange . java to enable support for auto - increment columns in PostgreSQL
updated byte handling logic in DataInput . java to improve clarity and correctness of byte reading
fix imageparsertest . testimageparsertest failure on window
updated the method call from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` to ensure proper retrieval of the parent component
refactor import statements for consistency and clarity across multiple Java files to improve code readability and maintainability
replaced ENGINE _ finish and ENGINE _ free with ENGINE _ free and ENGINE _ init in NativeCryptoTest . java to improve resource management and
added iteration functionality to multiple controller classes and updated method names for consistency to enhance the control flow and improve clarity in event handling
updated HttpContent assignment and release logic in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and avoid potential memory
added deleteLogs ( ) method to TestRecovery . java to implement log deletion functionality during recovery tests
modify URL handling in BrowserActivity to launch a new activity if the URL contains " twitter : / / " to improve user experience by launching
[ hotfix ] [ test ] fix flaky deployment group test
change logResult from false to true for " Listing labels allowed " in VisibilityController . java to enable logging of enabled labels for improved
increased the maximum number of auto retries from 0 to 25 in RestTemplateRetryTests . java to improve test reliability by allowing more
removed System . out . println statement from TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to streamline
added support for parsing fraction resources in the R . java file to enable accurate representation of fraction values in the application
remove unnecessary file confirmation check in BasicFrame . java to streamline the code by eliminating unnecessary checks
added assertions to ensure groupId and artifactId are not null before finding the newer dependency version to improve robustness by ensuring that groupId and artifactId are not
hbase - 22727 use quotacexceededexception instead of donotretryioexception when table do not exist (
refactor multiple Java classes related to token handling and attribute management to improve code organization and maintainability
updated TestFuzzPreLoop . java file to improve code readability and maintainability
added a check to set f0 to 0.0 if it is less than zero to ensure f0 is non - negative before proceeding
removed connection catalog retrieval and added null checks for primary and foreign key columns in TableRetriever to improve robustness by avoiding potential NullPointerExceptions during
use a thread - safe cache for the b2c converter in the inputbuffer to avoid a concurrentmodificationexception .
added SharedPreferences support for enabling / disabling empty pages in the workspace to improve user experience by allowing users to control page loading behavior
added a warning log message about the deprecation of cucumber - needle to inform users about the deprecation of cucumber - needle to enc
refactor ShadowThemeTest and ShadowArscAssetManager to utilize a new theme instance and improve attribute resolution to enhance code maintainability and
updated string concatenation for byte array fields in VerifyFast . java to improve readability of failure messages for better debugging
no effective change - code cleanup - remove unused migration
updated method handle access modifiers and added new prototype property functions in ScriptObject to enhance accessibility and improve prototype management in script objects
added a random seed to the readers list in TestFilterDirectoryReader . java to improve randomness of readers during testing
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to differentiate between remote clarification and known remote clarification to improve
updated path handling in CookieRetrievingCookieGenerator to ensure a default value is provided when the path is blank
updated closing brackets in Jvm and JvmJvmstatModel classes to improve code readability and maintain consistency
updated cache name retrieval and backup count check in AbstractCacheService . java to ensure accurate cache management based on total backup count
updated pageNumber comparison logic in ValidationResult . java to ensure correct validation of page numbers
added a null and equality check for the focused widget in the UIDropdown class to ensure that the highlighting functionality behaves correctly when the
fix checkstyle issue in util / soundutil . java ( # 700 )
refactor ApplePackageDescription to utilize the new getAppleCxxPlatformFlavorDomain method for retrieving platform flavors to improve
simonstewart : add a test case for showololoed format tab - separated with type
updated method names from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor EnglishPTBTreebankCorrector class to improve code readability and maintainability
added a new file ` TestGetLoggerNPE . java ` to test the behavior of ` Logger ` with different security policies to ensure that
added a ` getData ( ) ` method to ` PathSharingContext ` and removed unused ` sharedMap ` in ` ScriptedProcessor ` and
do n ' t catch espressorexception and cast to object [ ] .
added support for " NEXT VALUE FOR " syntax in NextValExpression and related classes to enhance flexibility in handling different value types in SQL insert
add more info to vmerror . unsupportedfeature error message
modified the handling of pending writes in BoundedLocalCache and added a new test case in BoundedLocalCacheTest to improve cache management and
added " Leverage _ Level " parameter to QuoineExchange and implemented order direction handling in QuoineNewMarginOrderRequest to enable
added bound initialization for properties in PropertyDescriptor . java and created a new test class Test7192955 . java for validation to ensure properties are
replaced failsafeWidth and failsafeHeight with a new SetDisplayModeCallback interface and updated display mode handling to improve flexibility in setting
added a check to reset buttonsAwatingRelease if it ' s not null to ensure proper cleanup of resources when a button is active
improve line cell wrap size calculation ( fixes # 537 )
corrected a typo in the error message from " argomento del parser non - deve essere nullo " to "
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
refactor return statements to use String . format for string concatenation to improve readability and performance of string concatenation in the code
replaced the use of ` getNamespaceContext ( ) ` with a direct call to ` getNamespace ( ) ` in ` StaxXmlPullParser
no effective change - remove test config . nestedjoins
server : allow root admin to enable / disable management server
added caching functionality for JavacFileManager and modified the constructor of CompletionTaskProcesor to include a cursor parameter to improve performance by
added configuration for Hive ' s METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest matchers instead of J
add utility . createthandler ( ) to make it easy to use
fix ( griffin ) : symbolmapreaderimpl # offsetmemsize should be byte instead of long . size
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up unnecessary console output during tests
removed the ` Reflection ` class and updated the package declaration in ` Jooby . internal . guice ` to streamline code by
refactor ThreadlessExecutor to remove dependency on ExecutorService and introduce isFinished ( ) and setWaiting ( ) methods to improve code clarity
refactor DateTimeFormatter to handle NullPointerExceptions and add unit tests for date formatting to improve robustness of date formatting logic and enhance test coverage for date
renamed ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduced a new method ` chunkLengthInKB ` to improve
added a case for WILDCARD in Types . java and created a new file T7034495 . java with generic interfaces to avoid crash
replaced a ' do ' loop with a ' while ' loop in LotsOfEvents . java to improve readability and maintainability of
[ java ] fix bug in transclusiondeciderule where the first occurrence of a non - navlink or refer do n ' t
remove versionutils . printmicronaut ( ) from micronaut - java
added unit tests for handling " Print _ Area " formula in HSSFEvaluationWorkbook to ensure correct formula processing for the " Print _ Area
updated MindIconFactory to use a dynamic description string based on the presence of a slash to improve flexibility in handling different resource descriptions
modified the ` onHomeIntent ` method to accept an ` internalStateHandled ` parameter to enable processing of the internal state when handling the home
updated the preference logic for dependency tree in CxxBuckConfig . java to ensure consistent handling of dependency preferences
modified the showDetails method across multiple activities to include an active tab parameter to enhance user experience by providing context - sensitive information when displaying files
updated function names from " $ apply " to " apply " across multiple files to enhance clarity and consistency in naming conventions
added randomization logic to the byte array in MinimalEncoder . java and updated corresponding tests in HighLevelEncodeTestCase . java to improve
updated string formatting for header and parameters in SourceBuilder . java to improve clarity and consistency in object parameter representation
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter updates correctly when data changes
removed the method setDefaultWALSyncMode from ShadowSQLiteConnection . java to streamline the code by eliminating unused functionality
refactor type checks in RemoveJavaDependenciesAdapter and add tests in Collections to improve type safety and validate ArrayList behavior
remove unused getter from defaults3csasyncclient
updated error messages in the dudPasswordTest method for better clarity to improve error reporting for better debugging and understanding of stream limitations
fix mislead assertion message in hazelcasttestsupport . testsize ( )
[ fix ] do n ' t bailout if a condition be always false .
ggb - 228 make sure the pen image be visible at the right bound .
refactor SQLXML class for improved readability to enhance maintainability and ease of future updates
added a ` QueryParam ` parameter to the ` getOrderBook ` method and modified its implementation to include a ` limit ` parameter to enhance flexibility
updated exception handling from GotWrongOOMEException to HeapOOMEException across multiple files to improve clarity and specificity in naming conventions
nifi - 2262 : add support for stream read constraint in dataflow ( # 5331 )
updated the method of retrieving the engine string and changed the locking mechanism to use a default value to improve robustness by avoiding potential null pointer
refactor ` TimerWheel ` and ` TimerWheelTest ` classes to use ` WheelIterator ` instead of ` FullIterator `
improve error message if bug pattern can not be generate
[ hotfix ] [ test ] increase timeout for localchunkprovidertest
changed the visibility of the ` uncomplete _ checklists ` menu item from ` true ` to ` false ` to ensure the menu is not
refactor result map handling in DefaultResultSetHandler and add a new Contract class with associated tests to improve clarity and functionality of result map retrieval
added null check for defaultHome and improved receiver unregistration logic to enhance robustness and prevent potential NullPointerExceptions
removed the VertxGen annotation from PumpImpl . java to streamline code by eliminating unnecessary dependency
removed unnecessary type casting in FileDetailFragment and OCFileListFragment to simplify code and improve readability by eliminating unnecessary type casting
trim trailing and leading spaces from tokens in ConfigAttributeEditor and add a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure proper
rename classes from " ClassUsingAnotherAuxiliary " and " ClassUsingAuxiliary " to " ClassUsingAuxiliary " and " Self
[ gr - 11932 ] fix classloader . getunnamedmodule ( ) for jdk9 + .
modified the logic to determine the relKind for database types based on the presence of " pg _ " to ensure accurate representation of the database type
chore : use http : / / github . com / googleapis / gapic - java / v1.0 . 1 for all the
updated RQST field description from - 1 to 1 in ThriftHiveMetastore . java and changed exception type in HiveMetaStore
added a new module - info . java file for the com . speedment . runtime . core module to define module exports and required dependencies for
updated flush state handling in SslConnection . java to improve clarity and functionality of fill state checks
updated Log4j2LogDelegateFactory to check if the logger exists and modified the createDelegate method to return a boolean value to improve error
refactor ExecutionEnvironment and Test7029048 for improved handling of server VM checks and file paths to enhance code clarity and
rename ` ExecutableFindOperation ` , ` MongoOperations ` , and ` ReactiveFindOperation ` classes to improve clarity and consistency in naming con
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to enable proper configuration of PostgreSQL connection pooling
disable interprocesssemaphore and interprocesssemaphore due to flakiness
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names for better readability
added a new file ` OSvTerminal . java ` and updated ` TerminalFactory . java ` to support OSV terminal support to enhance terminal
updated file extension checks to include " . gr " and " . grs " alongside " . gs " in ClassType . java
replaced instances of HashMap with TreeMap in DrillTestWrapper . java to improve performance by using a sorted map for iteration
added a condition to check if the index is within the bounds of names and values to ensure that the loop does not exceed the bounds of the
refactor WebSocketPolicy class for improved clarity to enhance code maintainability and readability
changed static boolean flags to instance variables for readPhoneStatePermission and accessWifiStatePermission in ShadowTelephonyManager and ShadowWifi
log4j2 - 1343 - allow resolution of message from a template - based context .
replaced direct type casting with ` asSubclass ( ClassVisitor ) ` for better type safety in the ` AsmUtil ` class to
added LoggingAuditService and UaaAuditService classes for auditing user authentication in the UAA framework to enhance logging capabilities for user authentication processes
added nullability annotations and improved temperature value handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robust
do n ' t generate proxy for abstract abstract class . fix # 1769
camel - 1554 : added option http . proxyhost and http . proxyport to http component . thanks to michael
updated the maximum encoding version from 1.1 to 1.2 in TemplateDTO . java to support new features and improvements available in
added a call to jdkSerialFilter ( ) in System . java to ensure proper serialization of the system property
camel - core - optimize to reduce object allocation when pool size be high
replaced the method ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple files to simplify the method signature
updated the parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in the ` ensureRealtimeClusterIsSetUp
added methods ` isError ( ) ` and ` error ( ) ` to ` ValidationReport ` , modified error handling in ` DisallowValidator `
updated InvariantDeviceProfile . java to replace displayOption . inlineQsb with closestProfile . inlineQsb and introduced new constants for Q
updated the ` createClassPath ` method to include ` throws Exception ` and changed the URL encoding method to decode the location correctly to improve error handling
updated regex patterns in TransformSteps . java to replace occurrences of " 10 " with " ( . * ) " to improve flexibility in matching
fix npe in java2d fillrect ( ) with null image
replaced hardcoded timeout values with a variable ` timeoutMs ` to improve code readability and maintainability by centralizing timeout management
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to enable dynamic image loading based on the environment settings
[ drools - 7 ] fix compilation error on window .
rename AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve clarity and consistency in naming conventions
replace the ` createHardLink ` method with a new ` copyFile ` method for copying files to provide a way to copy files to a target
refactor methods to replace ` appendToDescription ( ) ` with ` getDescription ( ) ` for improved clarity to enhance code readability and
fix ( training ) : make sure all ndarrays be in the same device ( # 2646 )
added a condition to check if the XML is an instance of Xml . Document before visiting them to optimize performance by avoiding unnecessary visit calls
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in ` NotesHelperTest ` and ` ReminderHelperTest `
added new instances of ProofOfWorkRule , GasLimitRule , and ParentGasLimitRule to CommonConfig to enhance configuration flexibility by integr
changed the visibility of the setupData ( ) method from public to private and removed it from multiple test classes to encapsulate the setupData (
rename ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and update related references to clarify the purpose
[ triple ] do n ' t close the deframer when the endstream be null ( # 9049 )
[ hotfix ] [ doc ] add site . url to config option for restart strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` for parsing and deparsing SQL queries to address issue #
refactor Common class to improve code organization to enhance maintainability and readability of the code
refactor the app launching process to use a Closable context for better resource management to improve resource management and prevent potential memory leaks
[ hotfix ] [ stream ] fix typo in javadoc of streamdeduplicate
added a warning log statement to indicate errors when sending Kafka messages to a topic to improve error reporting and facilitate debugging
added PersistentPropertyAccessor and PersistentPropertyAccessorFactory methods to SimpleElasticsearchPersistentEntity and implemented the isImmutable method in SimpleElasticsearchPersistentProperty to enhance
make sure setcoord ( ) do n ' t set undefined for segment
added scroll handling and logging for swipe gestures in AskGestureEventsListener . java to improve user experience by managing swipe gestures
updated comparison logic in NGramEstimator to include key comparison to ensure accurate ordering of values in the comparison process
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to align
updated method calls in StatsLogCompatManager to retrieve folder icon state and cardinality to improve accuracy of folder icon information for better logging
replaced instances of ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
8278272 : c2 : add a test for sulong optimization
added a ` setHandler ` method and improved equality checks in ` SelectionHighlighter ` to enhance the functionality of the ` equals ` and
added a new file ` StringResultConverter . java ` and modified ` AsmRuntime . java ` and ` AsmUtil . java `
( chore ) camel - base : use @ disabled instead of @ disabledifsystemproperty
updated the condition from checking if ` waitForSingleObject ( console , 100 ) ! = 0 ` to checking if ` waitForSingleObject ( console
added null check and buffer limit handling in BufferUtils . java to ensure proper buffer management and prevent potential NullPointerExceptions
updated the assertion in TestSolrDiscoveryProperties to check for file separator instead of hardcoded data path to improve compatibility with different operating systems and ensure
updated OS detection logic in AutoUpdaterServerProperties . java to support Windows and macOS environments to ensure proper handling of pre - 10.15
changed the lockFile parameter type from File to String in the Lock class to allow for more flexible identification of lock names
replaced appIcon with allApps and adjusted visible bounds calculation to align UI elements with the new app structure
updated references from ` Invocable . InvocationType ` to ` ClientDatagramEndPoint . this ` for consistency to improve code clarity and
changed the order of the GET _ STEP _ EXECUTIONS constant from " oreder by STEP _ EXECUTION _ ID " to "
changed return value from Buttons . LEFT to return - 1 and added a check for unknown buttons in LwjglInput . java to
added admin token retrieval and validation for submit approve and reject parameters in TaskRestRepositoriesIT . java to ensure proper handling of unauthorized submit
replaced instances of ` logger ` with ` LOGGER ` in multiple response builder classes to standardize logging approach and improve code readability
removed the minimum duration from the expiration time in ` SsoAccessTokenProvider ` and updated related tests in ` SsoAccessTokenProviderTest ` to
[ geos - 8470 ] make test run faster on window
added implementation of alarm suppression methods in ` GreetResourceMockedTest ` and ` OciMetricsCdiExtensionTest ` classes to
rearranged conditional checks for the default close operation in JFrame . java to improve code readability and maintainability
replaced direct call to MediaDatabase with a try - with - resources statement for better resource management to improve code safety and avoid potential NullPointerExceptions
refactor metrics context handling in SuggestComponent to improve clarity and consistency in metric initialization
refactor file and folder output logic in OCFileListFragment . java to improve readability and maintainability of the code
updated the default value of " HashKnownHosts " from " yes " to " no " and changed the return type of loadKeys ( )
refactor SourceVersion class for improved clarity to enhance code maintainability and readability
added a new test class ` ThreadFactoryTest ` to validate thread creation and error handling in a concurrent environment to ensure that thread factory functions correctly
refactor lock period retrieval logic in DelegateResourceActuator . java and update expiration time calculation in ProposalUtil . java to improve clarity and
added a new TicketModel instance to the EditTicketPage class to facilitate ticket management in the application
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the dimiss application functionality from
updated constructors in various assertion classes to include the selfType parameter to enhance type safety by ensuring proper casting of objects
added a new menu option for quote and updated related menu items in TweetActivity . java to enhance user experience by allowing users to open a
make sure interrupt lock be only acquire when interrupt be complete .
rename ` codecPassthrough ` to ` decryptOnlyCodec ` in ` MediaCodecAudioRenderer ` and update related methods to improve clarity
added a condition to check if the result is true before invoking offerFailure and accept methods to ensure that failure handling only occurs if the operation is
updated German and French error messages in XSLTErrorResources _ de . java and XSLTErrorResources _ fr . java to improve clarity
added ThreadSafe annotation to CheckpointsCleaner . java to enhance thread safety for concurrent access to checkpoint data
replaced ` Observable . OnSubscribeFunc ` with ` Observable . OnSubscribe ` in multiple files to simplify subscription handling and improve code clarity
reordered the try - catch block for better readability in ComponentPresetManager . java to improve code clarity and maintainability
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and modified column qualifier handling in TestJdbcDriver and TestJdbc
fix for ticket : 284 -- fill example text only when a voice be select .
added session validity check and improved exception handling in Session . java and SessionHandlerTest . java to ensure that invalid sessions throw an appropriate exception
hhh - 15108 - tweak to not ignore exception in aggregateclassloader . findclass ( )
updated keyPairGenerator initialization from 256 to 255 in JceX25519Domain . java to ensure compatibility with new cryptographic standards
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene 4.
[ hotfix ] [ runtime ] add log for empty checkpointrange header
added support for the RSA / ECB / OAEPPadding algorithm by importing RSA / ECB / OAEPPadding to enhance functionality
rename ` DARWIN _ AARCH64 ` to ` MACOS _ AARCH64 ` across multiple files to ensure compatibility with macOS
updated exception handling in DebugSourcesResolver to include a warning log message to improve error reporting and provide clearer diagnostics when source resolution fails
modified conditional logic for returning UNIX socket values in AbstractTest . java to ensure proper handling of UNIX socket scenarios for both UNIX and non - UNIX
updated error handling in FileUploadUtils and modified default value in JERSEY _ ADMIN _ IS _ PRIMARY to true and improved file
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory cleanup in ` BufferUtils ` to improve memory management and
change the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable streaming support in the FastSyncChainDownloader
updated the DST _ OFFSET setting in SimpleDateFormat . java and added a new class Bug7130335 . java for testing date formatting to
refactor references to mRollo . mState to use a local variable for iconCount and currentSelection to improve code readability and reduce
server : fix bug in listvirtualmachinemanagerimpl # listvirtualmachinewithvolume - do n ' t return
refactor StringBuffer methods for improved performance to enhance efficiency of string manipulation operations
added a uid field to the rule object in RuleResource . java to ensure that the rule ' s unique identifier is correctly associated with the specified
added null check for the listener before unsubscribing to prevent potential NullPointerException when listener is null
add a property to apply pretty print to jolttransformjson
make access to access table public .
updated error messages in ` DataSourceInitializer ` and ` DataSourceInitializerInvokerTests ` to provide clearer context for missing resources to improve user understanding
make xmpptransport . dountrun ( ) public so that it can be override by subclass .
refactor multiple Java files related to event directory and response handling to improve code organization and enhance maintainability
added parameters for effective cluster version and upgrade suspension status in AmbariManagementControllerImpl . java to enhance error handling during cluster upgrades
updated copyright year in FindsByCssSelector . java to ensure compliance with the current copyright standards
added a final List < Field > to store writer fields to improve performance by reducing unnecessary field retrieval
added a constructor to OAuthProperties that initializes encryption and signing keys to ensure default values are set for secure connections
hbase - 22763 addendum remove the htabledescriptor . getcolumnfamilystore ( ) . length usage
updated the alias check method in SampleWebJspApplicationTests . java to use a more concise syntax to improve code readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info files to improve code organization and maintainability
[ java ] add a reset method to cluster interface to allow for good control over idle strategy .
updated currentChunkID increment logic in ChunkedWriter . java to ensure correct tracking of chunk IDs during writing
added a new abstract class AbstractJobExecutor for job execution management to facilitate the execution of job executions in a batch environment
updated the replay method to store the replayFuture and changed the return statement to break to ensure proper handling of the replay operation and improve control flow
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to retrieve service IDs based on the consul discovery status to ensure that service IDs are only returned when the service discovery is enabled
replaced ` Math . random ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for hashSalt generation to improve security by
add option to verify runtime compilation framestates during bytecode parsing
updated currentStart and baselineStart calculations in TimeOnTimeComparisonHandler . java to ensure accurate tracking of time intervals
added handling for abstract methods in CallsRealMethods . java and new test cases in creatingMocksWithConstructorTest . java to ensure correct behavior
refactor checkPackageAccess method to accept Class objects instead of String names to improve type safety and enhance security checks for package access validation
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup and cleanup methods to improve test structure and
refactor ContribTablePanel to use a model variable instead of dtm for better variable naming to improve code readability and maintainability by standard
added support for the ` REQUEST _ HAS _ TIS ` parameter in the ` QuickstepTestInformationHandler ` and ` TestInformationHandler `
replaced the try - catch block with a direct call to Event . EVENT . writeAccess for connection dialogs to improve code readability and
changed the type of ` showRulesResult ` and related methods from ` String ` to ` BuildTarget ` to enhance type specificity and improve
[ wasm ] add ` ` native ' ' and ` ` javaemul ' ' marker for j . l . primitive and j .
added support for home and end key navigation in the Less command to enhance user interface functionality by allowing navigation through the command line input
replaced the synchronized block with a direct method call to get connected plots to simplify the code and improve performance by eliminating unnecessary synchronization
removed package installation checks and replaced it with a chooser for sharing activities to streamline code and enhance user experience by providing a simpler intent
make roster constructor package - private to allow reuse of roster instance
added basic constraints to certificate generation in TestUtils . java to enhance certificate validation by enabling basic constraints
added a new test method ` testFixedNestedTransform ` in ` TextVisualRegressionTest . java ` to address a failing test due to
replaced conditional assignment of precisionStep with direct assignment in TrieDateField . java and TrieField . java to simplify code by eliminating
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher and BaseQuickstepLauncher to streamline the code by elim
added a new file ` ArrayLength . java ` that tests the ` getFields ( ) ` and ` getDeclared ( ) ` methods for an array
added logging and wait for process destruction in hzstartit . teardown ( )
replaced the @ Singleton annotation with the @ ApplicationScoped annotation and added an initialization method to ensure proper lifecycle management of ApplicationSettingsService during application
[ safepoint ] fix safepoint . setvalue ( ) bug
updated thread name field type from char array to string and changed return type from charArray to stringOopToString to improve type handling for thread
updated the DEFAULT _ RAND _ SEED constant from the current time to a random value of 42 to improve performance by reducing the frequency
fix for stroke ( ) and font ( ) in java2d
mondrian : fix dynamic star expansion in window / group by ( jimmy )
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to enhance the functionality of ` Comment2000 ` to
added status code warning for the HTTP server in HTTPServer . java to enhance user experience by providing a warning icon for HTTP status codes
use getmodifiersex ( ) instead of getmodifiers ( ) , deprecate old method
node cost : use cycles _ 3 instead of cycles _ 6 for count lead and trail zero .
added null check for contentTransferEncoding and refactored content transfer encoding initialization in EntityParser . java ; introduced a new test case in AS
refactor Locale class for improved locale handling to enhance code readability and maintainability
added a new button ` clearLogButton ` to ` ErrorConsoleController ` and implemented a ` clear ` method in ` LogMessages ` to
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
refactor Debug , CaptionMap , DummyCaptionMap , and LocalizedCaptionMap to use LocaleHolder and set instead of Map to improve locale
updated connection pooling logic and modified execution count in tests to improve resource management and ensure accurate connection pooling behavior
danielwagnerhall : add opera support to the list of supported browser
show an error dialog when the file can not be download
added multiple LIFX product entries for " Switch " , " Beam " , " Color " , and other features in the Lifx
added asynchronous request handling for adding replicas in OverseerCollectionProcessor . java and modified collection handler in CollectionsHandler . java to support asynchronous operations
refactored the ` PGSQL _ PK _ BYTES _ LIMIT ` and ` PGSQL _ PK _ BYTES _ LIMIT ` constants in `
updated LogPage and SummaryPage to use objectId as a reference to ensure the LogPanel uses the correct head if the refid is not empty
fix a bug in skeletoninter bonewire that cause the model to always be render in the wrong place .
added a ` destroy ` method to the ` AndroidImplementation ` class and removed the ` deinitialize ` method from ` AndroidImplementation ` to simplify
added a wait for active collection in the AutoScalingHandlerTest to ensure that the test runs in a valid state before proceeding
refactor loop to use an index - based approach and add rounding for color attributes in ScreenTerminal . java to improve performance and readability of
updated the controller state check in SoftResetAction . java to include additional states to enhance the accuracy of the soft reset functionality based on the backend
disable on - disc stream cache to speed up texture pack reload
added logic to retrieve the parent folder in Request and RequestV2 classes to ensure proper handling of media resource retrieval based on the media renderer '
rename ` ` ispersistent ' ' to ` ` persistent ' ' to clarify the purpose of the variable
replaced the ` deleteOnExit ( ) ` method with a custom ` close ( ) ` method that deletes the temporary file to ensure proper
added error handling for HTTP 403 responses in StandardGitHubRepository . java to improve robustness by gracefully handling forbidden responses
log4j2 - 1349 add method getoriginal ( ) to provide a way to retrieve the original message factory .
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern for version number from 1.2 to 1.3 to match version numbers in the application
updated tooltip delays in ExtractionModelFrame . java to improve user interface responsiveness
refactor method signatures to use ` ImmutableSet < BuildTarget > ` instead of ` TargetGraph ` to improve code clarity and maintainability by
added UTC timezone setting and an assertion for formatting long values in TimeTest . java to ensure accurate representation of time zones in tests
refactor MediaSessionConnector class to improve session management functionality to enhance performance and maintainability of media session handling
use getsslsupport from the endpoint instead of create a new jssefactory instance .
updated the retrieval of altitude and accuracy from getAltitude ( ) to getAccuracy ( ) in GpsLoggingService . java to ensure accurate
added functionality to enable or disable futures in BinanceExchange and updated BinanceAccountService and BinanceTradeService to utilize this feature to
refactor adminaccountmanagementservlet to use instructor course table instead of instructor list .
added a method to set the accept queue size in the ThriftHttpCLIService to allow dynamic adjustment of the maximum accepted queue size for improved
replaced the use of ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to
added a condition to check if the composite data scheme is SSL to ensure proper handling of SSL connections in the application
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker ` and updated test cases in ` TestWindowFunctions `
updated the calculation of the duration by replacing an assertion with a direct assignment to improve clarity and prevent potential errors in duration calculations
fix : nodewithjavadoc should return empty optional for method with line comment
replaced the method ` reserveMemory ( long size ) ` with ` readReservedMemory ( ) ` in ` ReserveMemory . java `
added calls to checkForRegionClosingOrSplitting ( ) and checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java
hbase - 2746 hbaseadmin # waitforoperation should print the procedure id ( ashutosh chauhan )
camel - 16400 fixed the c error of camel - cxf
refactor YamlChangeLogSerializer to use a map for databaseChangeLog serialization to improve code readability and maintainability by using a structured map
replaced ` println ( ) ` with ` print ( ) ` for output formatting in ` SchemaPrinter . java ` to improve readability of
replaced ` ChunkLoc ` with ` C . NOT _ IN _ PLOT ` in ` DebugRoadRegen . java `
updated references from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure compatibility with the current context
updated ` @ GeneratedValue ` annotations to include ` @ GenericGenerator ` for native generation in multiple Java files to enable the use of native -
removed the country parameter from the getSystemTimeZoneID method and related code to simplify the method by eliminating unnecessary parameters
added position and remaining information to the output stream in BZip2Codec . java and changed input byte buffer initialization in TestBZip2Codec
move startlogger ( ) method from appwapplet to geogebraframe so that it can be use by applet
added a new constant ` VALUE _ TYPE _ EMPTY ` and modified the ` create ` method in the ` Value ` class to use it to
refactor group equality checks from ' = = ' to ' . equals ( ) ' for better readability to enhance code clarity and prevent
updated Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
rename SimplexNoise class to improve clarity to enhance code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and replaced instances of ` newInstance ` with ` newInstanceExact ` in `
rename columnfamilystore . getminrowcompactedsize ( ) to getminrowsize ( ) and getmaxrowcompacted
fix jackson serialization issue with version reference .
updated the logic for setting and deleting elements in the NativeArray class to ensure proper handling of previous and next elements in the array
updated file handling logic in FileUploader . java to set the parent ID of the current upload to improve clarity and maintainability of file management
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure that supplementary characters are correctly processed
added unit test base on user forum issue
updated assertions in BinanceIntegration and BinanceUsIntegration to include " ethbtc @ depth " and " ethbtc @ depth20
added a resetAllocation method to the Wrapper class and invoked it in SimpleParallelizer to reset allocation state for better resource management
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up unnecessary dependencies and improve code clarity
replaced direct calls to System . getProperties ( ) with synchronized access in mmm Agent . java and added a new AgentCMETest class
refactor ModelUtils to improve code readability to enhance maintainability and facilitate future feature additions
refactor methods in AbstractDoubleArrayAssert to improve code readability and maintainability
updated width and height calculations in Legend . java to account for edge cases to ensure proper alignment of labels when there are more than one entry
added delay and abort tests in CodeFirstSpringmvcIntf and CodeFirstSpringmvcIntf classes to enhance testing capabilities
replaced ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` in ` MoreLikeThis . java ` to
replaced ` requireRule ` with ` new BuildTargetSourcePath ` in ` Omnibus . java ` to improve clarity and
add a disabled message when versioning be not enable in the command download
changed the type of ` filePaths ` from ` Collection ` to ` List ` and introduced ` numberOfFiles ` in ` MediaFolder ` ,
updated command - line argument from " - b " to " - b " in AidlStep . java and GenAidlTest
delete obligation on comparison ( # 1792 )
added a TODO comment to the FakeHttpLayer class to indicate that the test is currently failing
replaced ` handleError ( cause ) ` with ` revokeLeadership ( ) ` in ` EmbeddedLeaderService . java ` to improve clarity
replaced Stream API with RxJava for reactive operations in CompositeDiscoveryClient . java to improve code readability and leverage reactive features
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to enhance clarity and consistency in naming conventions
[ hotfix ] [ config ] add description of jobmanager . max - execution - attempts - remain - in - history
rename ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` and modify visibility logic for views based on adapter type to improve clarity
added error handling for WSTX output factory and improved test assertions in MultiVersionXmlParserTest to ensure compatibility with Woodstox
refactor test setup in AuditAliasCommandIntegrationTest to use a private ProjectWorkspace variable to improve clarity and encapsulation of workspace initialization
removed unnecessary logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to improve code clarity and reduce unnecessary
( chore ) camel - cxf : use @ disabled instead of @ test annotation
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging exceptions during the update process
refactor ` ChainingAuditPrincipalIdProvider ` to use ` @ RequiredArgsConstructor ` and add a new method for adding providers to improve
added checks for default background fills in HSSFCellStyle . java and modified color retrieval logic in HSSFPalette . java to ensure
updated ZonedDateTimeFormatterBenchmark . java file to improve performance and accuracy of date formatting
refactor the update logic in ` DistributedUpdateProcessor ` and add a new test class ` DistributedUpdateProcessorTest ` to improve testability and
added a null check for ` rocket . getStage ( stageNr ) ` in the ` SimulationListHandler ` class to ensure that
added / editreplace and / editscript command to replace all existing blocks inside a region , and modified getItem method to accept a boolean parameter to
refactor ExtendedMasterSecretExtension to improve code structure to enhance maintainability and readability of the code
changed the declaration of the InputProcessor variable to be final to ensure immutability of the processor variable
added an event listener to handle end - of - stream scenarios in WritableKeyProcessor to ensure proper handling of end - of - stream scenarios during
added " CUBE " keyword to MySQLDatabase . java to support CUBE functionality in the database
added a try - catch block around the rm operation in TestReplicationHandler . java to handle potential IOException when removing the directory
rename ` ExperimentalRobolectricTestRunner ` and ` ExperimentalRobolectricTestRunnerTest ` to ` MultiApiRob
replace reflection - based field access with direct access to the httpClient instance to improve code maintainability and reduce reflection overhead
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added null check for input stream in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerException when processing input streams
ggb - 1340 make sure we do n ' t show ` ` precise ' ' in portrait mode
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified its implementation to check if the command is from
refactor HttpRequest class to improve request handling logic to enhance performance and maintainability of HTTP requests
added functionality to store unread pull notifications in shared preferences to enhance user experience by allowing unread pull notifications
make isnullnode more resilient to non - null value .
updated parameters in Box2DTest . java and refactored OrthographicCamera instantiation in Pong . java to improve memory management and
refactor ViewPostDetailFragment to utilize LinearLayoutManager for layout management based on tablet and landscape orientation to improve performance by avoiding
change log level from trace to warn for aborting background operation
added debug output for method instance name and flags in JimpleBodyBuilder . java to facilitate debugging by providing insights into method
ggb - 1391 do n ' t call touch event listener on ie 10 +
updated the ` getNotificationUsers ` method to include ` deviceId ` parameter and modified its implementation to filter users based on their device ID to enhance
replaced the base URL in CGIARProvider . java from " droppr . org / srtm / v4.1 /
removed unused listeners and reset bottomPanel in MotifFileChooserUI . java , and added a new class bug6520101 . java
change hollowdiffuirouter , hollowhistoryui , and hollowexplorerui to return a boolean instead of void .
refactor methods in BuildRuleResolver for improved clarity and consistency to enhance code readability and maintainability by consolidating rule retrieval logic
updated the visibility of the transportSpinner based on the makingShortcut flag to improve user interface responsiveness by hiding the transport spinner when making
added null check for attributes _ field and introduced new classes A , B , A , and T7073477 to ensure proper handling of
modified backPressed methods across multiple fragments to return a boolean indicating whether the back button was clicked to enhance user experience by preventing unintended
added support for long view index management in QueryServices and related classes to enable or disable long view index functionality based on configuration
corrected the casing of the string " V " in SDRTrunk . java to ensure proper formatting of the output string
updated the method to clean the private key path before comparing it to the original path to enhance security by removing sensitive information from the path
removed column position parameter from diffDropColumn method and related calls to simplify method signature by eliminating unused parameters
updated IndexWriter initialization to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with the latest testing
hbase - 11321 add a ' no . strict ' option to importtsv to disable strict column family check
[ java ] use a long variable to track the number of log subscription instead of a string .
replaced calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent ) ` and added voice button handling logic to
added a condition to return early if the first character is " i " in the JSON node to handle cases where the first character is " i
refactor Procedure class to improve code structure to enhance maintainability and readability of the code
updated resource bundle loading to include default locale and system class loader to ensure consistent resource loading across different locales
[ j2kt ] implement normalization pas for kotlin array creation .
added a condition to check if mincount is greater than 1 or hasAnyCount before incrementing the term enum to ensure that the increment only
fix npe in modmetadata . getauthorlist ( ) when author be null
added OSGiTest . java and modified module - info . java to include a static jdk . unsupported requirement and created OSGi
nifi - 1553 : only enable controller service when dependent service be enable
hbase - 2640 addendum use ` ` to ' ' instead of ` ` setautocommit ' '
test ( annotation ) : add test for annotation annotation in class ( # 1769 )
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and its implementation in ` SimpleFeatureImplTest ` to ensure that user
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify method signatures by elimin
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the enableLogging method from JavaCompiler . java to streamline logging configuration for improved performance
added a new class InJavaSourceSet to search Java source sets and updated imports in UsesJavaVersion to improve code organization and enhance type safety
added a variable for the GDAL file name and modified the way the resource is retrieved in the TestGDALParser class to improve code read
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of getter instances with specified attributes
removed the check for " useExtStorage " in the SDK version condition to simplify the condition for SDK version compatibility
added a new constant ` INDEXER _ NO _ COMMIT ` and modified ` IndexingJob ` and ` IndexingOutputFormat ` to
server : allow disk offering id to be null to createvirtualmachinecmd .
updated assertions in ` BaseTestCellComment ` to check for non - empty notes instead of empyy notes to improve clarity and correct
added null checks and logic for handling ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper
added a new file ` Issue382 . java ` to implement error handling in the Jooby framework to improve error management and provide
replaced custom signum method with static import for Integer . signum and simplified return statement to improve code readability and eliminate unnecessary complexity
added visibility control for text in AttachmentAdapter to improve user interface by hiding text when certain conditions are met
test ( refactor ) : fix bug in astparentconsistencychecker , jdtimportbuilder , ctimportbuilder , ctimportimpl # getimport
simonstewart : fix a npe in the xpidriverservice . getprofile ( )
make liquidblock a ` ` bucketpickup ' ' to implement bucketpickup .
fix intermittent test failure on the ci - server
updated the timezone setting from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure correct
[ java ] remove duplicate code in distincterrorlog . newobservable ( )
updated systemPropertyAsBoolean calls to include specific TestGroup annotations for several tests to ensure that tests are only enabled for specific classes in the specified
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 558 : sql
add miss access denyaccess ( class . class , method . class ) to graalcontext
fix for load ( ) and save ( ) in pgraphics2
updated HiveAbstractReader to use ` partition . getSd ( ) ` instead of ` table . getSd ( ) ` to ensure consistency in
updated the logic for determining if the overlay should scroll or zero based on the last scroll position to improve the responsiveness of the launcher overlay
hhh - 13434 add implementation for batchbuilder interface to allow modification of the jdbc batch size
improve error message for unexpected input during analysis
added a test for spying on a class retain state in ` PartialMockingRetainsStateTest ` and created ` MockWithStaticState
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing with
modify the return statement in SecurityUtil to handle exceptions when ugi is null to improve error handling and ensure proper execution of actions when ugi
added error handling for audio buffer allocation in OpenALMusic . java to provide more informative error messages when audio buffer allocation fails
camel - 16400 : fix camel - quartz to resolve reference parameter . thanks to joao for the patch .
updated the calculation of the SQL type for precision and scale in RexNodeConverter . java to ensure accurate representation of decimal types based on the
updated ` WebAuthnMultifactorDeviceProviderAction . java ` to use ` Optional ` for retrieving vendor properties and device properties to enhance
updated the assertion in WalletTestAccount003 to use the current timestamp instead of a test name to ensure the test accurately reflects the current
replaced ` AxialStage ` with ` RocketComponent ` in ` BasicFrame ` and refactored the selection logic in ` Design
added a long running time parameter to the mmm Args . java and ppp Args . java files to allow configuration of the long running time
updated comparison logic in ` FindRefComparison . java ` and added a new class ` Ideas _ 2012 _ 05 _ 21 . java `
replaced the use of ` sun . misc . ServiceConfigurationError ` with ` java . util . ServiceConfigurationError ` and refactored
[ geot - 5338 ] fixed xml encode for decimal type with thanks to daniel
reformatted assertions in TestRestClientRequestImpl . java for improved readability to enhance code clarity and maintainability
added a condition to check if the reference database equals the comparisonDatabase before verifying the existence of a unique constraint to ensure that the comparison database
refactor the ` addAndroidConstants ` method to return early if ` proguardPath ` is not present to improve code clarity and reduce
refactor assertions in DuplicateCookieTest and SessionRenewTest to use awaitility instead of direct method calls to improve reliability of tests by ensuring
added user _ args , is _ daemon , and timestamp to the ImmutableMap in ChromeTraceBuildListener and its test to enhance trace functionality by including
make resource bundle access thread safe for jdk11 +
corrected a typo in the log message from " set match limit " to " set match order " to improve clarity and accuracy of
added a new file TheRockMetaDataDemo . java to demonstrate how to retrieve and print exchange metadata to facilitate
made FloatingDecimal and FormattedFloatingDecimal classes strict and added a new test method to validate strictness in floating and formatted decimal types
removed unparseIdentifier from columnNamesBuilder in ColumnStatsSemanticAnalyzer . java to simplify column name handling by directly appending the column name
added a test method to replace variable declarations in JavaTemplateContextFreeTest . java and modified the contextFreeTemplate method to include a cursor parameter
added a check to ensure only non - synthetic methods are processed in InstantiateStaticClass . java and implemented a test case in Bug1282 .
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path
added handling for pending reward information in IkStepDefinition . java to improve rescue management and error handling during step execution
changed the ` equals ` and ` hashCode ` methods in ` AbstractType ` , ` BigintType ` , ` BooleanType ` , `
added a new method ` getSyncLevel ` to retrieve the default sync level to enhance flexibility in configuring the synchronization level for improved
make controlcommandstest more tolerant to slow machine
added a condition to check if the state is not CONSTRUCTION or RECOVERY in the RecoveryStrategy class to ensure that recovery logic only
updated the parameters of the create method in opencv _ core . java to ensure proper initialization of the create function
added SDKPath to AppleBundle and SwiftStdlibStep classes , and modified the makeProcessExecutorParams method to accept an ExecutionContext to
[ hotfix ] remove file deletion logic from transientblobcleanuptask
server : fix typo in warn message for createnetwork ( )
refactor PasswordEncoder and StandardPasswordEncoder classes for consistency to improve code maintainability and readability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of
refactor BetterBlockPos class to improve code readability to enhance maintainability and facilitate future updates
updated the proxy retrieval method to include the class loader to ensure compatibility with dynamic class loading in the application
refactor version handling to utilize a new method for determining nightly build status to improve code readability and maintainability by centralizing
added support for removing trailing / ' s from SQL statements in LoggingExecutor and JdbcExecutor to ensure proper formatting of SQL statements for Oracle databases
add findbugs . nullderef . assumensp to keep track of null value analysis
fix ( test ) : use different port for jolokia test
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN constants in DrawAudio . java and
added a method call to add a multifactor authentication provider to the DuoSecurityMultifactorProviderBypassConfiguration class to enhance
modified the method signatures of ` findPositionForNewNodeBestAreaFit ` and ` findPositionForNewNodeContactPoint ` to include an
[ drools - 1340 ] fix checkstyle violation in ` ` javadoc ' ' statement
added help page management functionality and refactored content update in HelpTab to improve user experience by dynamically updating the help page based on configuration
added GeocodeProviderFactory and Constants interface files to the org . feio . android . omninotes package to facilitate
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to align with the correct package structure for
[ hotfix ] [ test ] remove expectedexception rule from unit test
[ pytorch ] do n ' t try to delete object that do n ' t belong to the server .
modified conditions and document creation in SegmentsInfoRequestHandler . java and CollectionsAPISolrJTest . java to improve clarity and correctness of
updated the calculation of numPredictiveAppCols to use a conditional assignment based on whether the app is a phone to improve accuracy in determining the
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and updated its usage in ` DrillJoinRelBase `
add a blockbuildcraft class to remove an item from the craft inventory .
updated layout parameters for drag target bar in DeviceProfile . java to improve layout behavior for better user experience
use start ( ) instead of run ( ) to start the session
initialized ` m ` and ` metaStoreClient ` to ` null ` in ` HiveMetaStore . java ` and removed ` standAlone
updated the ` getDisplayScript ( ) ` method to accept a ` Category . DISPLAY ` parameter and added a test for handling ` Locale . getDisplay
updated references to ` ZkStateReader . BASE _ URL _ PROP ` and ` ZkStateReader . CORE _ NAME _ PROP
replaced ` ThreadLocalRandom ` with ` Random ` for generating random numbers to simplify random number generation process and improve code readability
added a check for launcher state before backupting favorites , screens , and widgets to ensure that backup operations only occur when the launcher
updated error messages to include specific space information for better debugging to improve clarity of error messages for better debugging
( chore ) camel - core : added unit test for resilience4j
rename ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated imports and modified file creation logic in FileMessageHistoryTest . java to improve test reliability by utilizing TemporaryFolder and enhance file validation
added debug logging statements for various log packages in Grasscutter . java to improve troubleshooting and troubleshoot
changed the ` highlightCnstScrRngQuery ` field and methods to static in ` SpanScorer ` , modified the visibility of
added a new method ` getState ( ) ` in ` Workspace ` and modified the condition in ` Launcher ` to include a check for the
updated multiple assertion classes to improve consistency and clarity to enhance maintainability and readability of the codebase
added a conditional check for ` args . cacheable ` before notifying new templates in ` SnippetTemplate . java ` to ensure that templates are
added a new constant SCOPE _ SOLR _ CORE and refactored related classes to utilize it to improve scope management by separating
updated the CREATE TABLE statement to include a primary key for the " measurement " table to ensure that the database schema accurately reflects the data
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` for clarity
refactor session creation logic in HttpSessionContextIntegrationFilter to improve clarity and maintainability of session handling logic
added a new file ` TestIfWithDeadRegion . java ` containing a class that performs a method using a ` Supplier ` to measure and
rename englishud to englishusd to fix typo
added HighResolutionTimer and refactored test execution in SnowflakeIdGeneratorTest . java to enable and disable concurrent access tests to improve performance
added a static UI setting to AppSettings and modified MainFragment to conditionally hide the toast bar based on user preferences to enhance user experience by
refactor privilege handling in WindowsSecurity to use a lambda expression to improve code readability and ensure proper resource cleanup
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added null checks in ` WhitelistLogoutHandler
updated dialog message display to use localized messages instead of hardcoded strings to improve user experience by providing clearer error messages
tika - 3746 -- add mime detection for excel file in tika - app
added logging functionality to the Runner and FeaturePathFeatureSupplier classes and modified the join method to accept a list of objects to improve debugging capabilities and
camel - 13850 : camel - eip - documentation - enricher to generate xml xsd with thanks to martin
do n ' t wait for migration from remove node . patch by jbellis
added debug logging for stored and playback devices in DeviceConfiguration . java and refactored capture device handling in PortAudioAuto . java to improve
added ` WebsocketConfig ` class and modified ` WebSocketPluginConfiguration ` to accept ` ShenyuConfig ` for maximum frame payload size
fix : cache validation listener be not call when a test run in a suite .
modified the way contentLength is stored by trimming whitespace before adding it to the document to ensure that the content length is only added if it is
do not synchronize on solvingTerminated ( ) to improve thread safety
refactor timeseries creation logic into a separate method ` internalCreateTimeseries ` to improve code readability and handle potential ` PathAlreadyExistException
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a utility for checking the status of a
changed access modifiers of several methods from public to protected in multiple shadow classes to enhance encapsulation and restrict access to these methods
server : fix the bug in listvirtualmachines api - do n ' t check if the caller be in the reserved state .
set ` _ valueString ` to an empty string instead of null in ` HttpParser ` , ` HttpParserTest ` , and ` ContextHandler
refactor thread initialization code by consolidating completion logic into a single method to improve code readability and maintainability
added methods to create and retrieve an external storage directory in ShadowEnvironment . java and created EnvironmentTest . java to enhance testing capabilities for external storage
[ jbrules - 2171 ] fix type coercion in executable model
updated log file paths and formatting in LoggingConfig and DbgPacker classes to improve code readability and maintain consistency in formatting
added exception message to log message in ActionNode . java to provide more context for exceptions during the construct process
fix parsing of tel : in some case , i . e . do n ' t support it .
refactor visibility logic for shared file visibility in FileListListAdapter to improve readability and maintainability of the code
deprecated the deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and removed its usage in TestTxnCommands3 . java
updated the ` ExecuteStatementOperation ` , ` Operation ` , and ` SQLOperation ` classes to include a ` confOverlay ` map
refactor BTCMarketsStreamingAdapters and BTCMarketsWebSocketSubscriptionService to replace Lists utility methods with Java ' s built - in
bug fix : use gettypename ( ) instead of getname ( ) in ogrdatastoretest
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to simplify the method implementation by eliminating unnecessary functionality
renamed Wallet class to improve clarity to enhance code readability and maintainability
camel - 14850 : camel - netty - http should use charset from content - type if configure to do so . thanks to
use logger instead of system . out . println in testnonblockingapi . java
added a check to return false if the row does not exceed the size of the connection list to prevent potential ArrayIndexOutOfBoundsException during execution
[ java ] add rule to detect method with the same name as the enclosing class .
added a new class ` ExtendedPlatformComponent ` and updated ` ManagementFactory ` to utilize it for retrieving and registering platform MBeans to enhance
replaced quotes in SQL statements with backslashes to ensure SQL syntax consistency and avoid SQL injection vulnerabilities
update resource paths in multiple test classes to include " org / knowm / xchange / bleutrade / dto / " prefix to ensure
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future feature additions
added a FILTER _ PARAM constant and modified the FilteredQuery instantiation in AbstractSpatialFieldType . java to allow custom filtering behavior based on local parameters
updated the email sending logic in GpsLoggingService to include a notification when the main form is visible to improve user experience by notifying users
replaced ArrayList with HashSet for inlinks and added an iterator method to improve performance and enhance iterator functionality
added a synchronized stopScan method and modified the removal of OlderResults in TradfriDiscoveryService . java to ensure proper cleanup of
updated method signatures and logic in HiveMetaStoreClient and TestFilterHooks to include a boolean parameter for filtering purposes to enhance flexibility in testing
added " Abandoned " status to the requestWorkflow , bugWorkflow , and ProposalWorkflow states in the TicketModel and TicketBasePage classes to
removed redundant initialization of columnAliasPrefix in multiple platform classes to streamline code by eliminating unnecessary null assignments
replaced Text with BytesWritable in LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer classes to improve data handling efficiency
add warn message when run on a 32 - bit jvm on a 64 - bit jvm
refactor conditional checks in PdfCopy . java for better readability to improve code clarity and maintainability
added a new daemon option to the OptionEnum and implemented its functionality in TerminalClient to enable users to start in a daemon mode and provide a
added a new file ` FlushIndexTask . java ` to implement a performance task for flushing index buffers to enable efficient flushing of the index buffer
update sstables . getflushpath ( ) to take estimated size into account . patch by jbellis
update condition in MediaLibraryFolder . java to include SEASONS as an expected output to ensure proper handling of additional output scenarios
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket using an IPv6 loopback address to facilitate testing
updated grid size coordinates in GridSizeMigrationTask . java to correct grid size values for improved functionality
updated references from ` getName ( ) ` to ` name ` in ` SerializerPojo . java ` for consistency to improve code readability and
added support for read - only context in the Context class to enhance transaction management by preventing operations on non - read - only contexts
refactor LookAndFeelCommand class for improved readability to enhance maintainability of the code
update lastRunEnd calculation and condition check in BlockBoxing . java to improve accuracy in determining if the last run end has been reached
added EOFException and EofException imports to the assertion in GracefulStopTest . java to enhance error handling by including specific exception types
refactor connection management by replacing locking mechanism with synchronized methods for improved thread safety to enhance code readability and reduce duplication in listener management
refactor NetworkParameters class to improve code readability and maintainability
updated the allowAccountAssetOptimization setting logic in DynamicPropertiesStore . java to ensure account asset optimization is applied correctly based on configuration
added a new constant J9 _ GC _ POLICY _ NOGC to the VM class to disable garbage collection policy for improved performance
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to improve robustness by throwing a P2pException for invalid protocol
[ java ] remove useless class exceptiontypechecking
updated resource retrieval to use " en / " prefix and improved error logging message to ensure fallback to English when no localization is available for a
added a new file ` ProcessorInfo . java ` to provide a mechanism to determine and read the number of available processors based on the system '
add - html , - stylesheet option to print bugreporter
polish ` ` fix npe in logbackloggingsystem ' '
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve handling of service component recovery events to enhance code clarity and maintainability by
update ` SleuthTagPropagationAutoConfiguration ` and ` SleuthTagPropagationAutoConfigurationTests ` to ensure proper handler creation based on
refactor RustCompileUtils to use a switch statement for determining Rust dependency type to improve code readability and maintainability by separating
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` for query parameters to enhance flexibility by
hbase - 2696 halfstorefilereader . getfirstkey ( ) do n ' t seek to the first key if the
add @ deprecate annotation . value ( ) . isalways ( ) and deprecate since 6.2 .
fix ( layer ) : add test for nan
refactor file sharing functionality by centralizing the showShareFile method across multiple activities to improve code reusability and maintainability by centralizing
added a new test class LiquibaseUpdateMojoExecutionTest for testing LiquibaseUpdate functionality to ensure correct execution and configuration
modified the method to convert the proxyType string to uppercase to ensure consistent handling of proxy type values
add a new mod _ minecraftforge . java file that demonstrates the use of dungeonloot retries .
refactor JdbcDatabaseSnapshot to improve handling of table and column filtering based on case sensitivity to enhance performance and accuracy of column retrieval based on
added a new container with a border and label in CSSBorderTest . java to enhance the visual appearance of elements in the UI
added conditional annotations to ` RetryAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` , and introduced a new ` RetryableStatusCodeException ` class
replaced ` FILL _ PARENT ` with ` MATCH _ PARENT ` in the ` CellLayout ` constructor to align layout behavior with the intended
updated ` parentTaskName ` to use ` currentTimeMillis ( ) ` instead of ` nanoTime ( ) ` to accurately reflect the current time for
added error handling for invalid AddService requests in ServiceResourceProvider . java to improve robustness by preventing application crashes due to invalid input
fix indexdatabase . isindexversionedfilesonly ( ) to return true when the file be unversioned
[ giac ] fix for round ( x ) in giac
rename AnonCipherWithWantClientAuth . java file to improve clarity and consistency in naming conventions
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these elements are outdated and should not be used in future development
renamed JLayer class to improve clarity to enhance code readability and maintainability
increase assertion timeout in evictiontest to allow for slow ci
replaced internal encoding method with direct password encoding in Md5PasswordEncoder . java to improve clarity and maintainability of password encoding logic
refactor the way the ViewTreeObserver is added and removed in IconRecentsView . java to improve code readability and maintainability by
refactor Response class to improve response handling to enhance performance and maintainability of the response processing
fix bug in sstablemetadata . getmaxtimestamp ( ) that return long . min _ value .
add a preferred size of 200x60 in the callparticipantpanel . this mean that the call will not be show in the contact list
added null and empty checks for replies and replyUsers in TweetActivity , TimeLineCursorAdapter , and TweetView classes to ensure robust
updated the ` toString ` and ` equals ` methods for ` HitbtcBalance ` and modified exception handling in ` Hitbtc
fix ( sql ) : fix ( sql ) : ignore order by clause in where clause
changed return value from ' s ' to ' addrs . toString ( ) ' in RetriesExhaustedWithDetailsException . java to provide
replaced ` closeOpenFile ( ) ` with ` open ( ) . open ( ) ` in ` EditGcodeFile . java `
test : upgrade httpclient to 5.1 . x ( # 5371 )
update energy management logic in PipePowerWood . java to ensure accurate energy adjustment based on available energy
added a check to delete the temporary output file if it exists to ensure the temporary output file is clean up after use
updated the constructor of BitstampWebSocketTransaction and added new test cases in BitstampStreamingMarketDataServiceTest to improve test coverage and ensure
added time limit checks in ` ReplayProcessor ` , ` ReplaySubject ` , and ` ReplaySubjectTest ` classes to ensure that
update expectedCitation string in CitationStyleGeneratorTest . java to include a newline character to ensure consistency in formatting of the expected citation string
michaeltamm : move hdrformat setting from michael to michael michael ( #
add feature flag to show only definition for equation in exam
fix nullpointerexception in sipcommtextfield . getcomponent ( ) .
hbase - 26462 add caching for meta scan ( chunhui )
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
updated mathematical operations in Math and StrictMath classes to improve performance and accuracy of mathematical operations
added a new BooleanFlag named ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a debug option for enabling transient
[ hotfix ] [ runtime ] fix checkstyle violation in execution module
added a condition to set the density of 3.0 to 3.0 if the scale is 3.0 to ensure proper scaling behavior for
rename the ` optional ` field and related methods from ` optional ` to ` vararg ` to clarify the purpose of the variable '
hbase - 13434 add exception to log message when region store can not be load
simplified the assertion in TestClusterUpgradeUtils to enhance readability and maintainability of the test code
updated logging message format and refactored async context test class names for clarity and consistency to improve logging clarity and enhance code readability
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control the visibility of the arrow in the search functionality
added lock mode handling for MVStore in Database . java and removed the testSetMode method from TestRowLocks . java to improve lock
truffle : skip biginteger test for linux / amd64 only
added checks for IntType in Scalars . java and modified return logic for StringValue and IntValue to improve type handling and ensure proper conversion of
improve error message for invalid primary key specifed
added conditional logic to set drawable resources based on the device ' s LMP status to enhance UI appearance by using appropriate drawable resources for different
fix an npe in vmservicemanager . getflutterviewslist ( ) . getflutterviewslist ( ) . getflutter
added new header writer methods for content type , XSS protection , cache control , and HTTP strict transport security to enhance header configuration flexibility and
renamed methods in ObjectEnumerableAssert for clarity to improve code readability and maintainability
[ grid ] rename smoketest to distributecdptest to improve code organization and clarity
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type of the @ AggregateRoot
added support for prebuilt libraries in Python binary execution to enhance the management and execution of prebuilt libraries in the Python environment
added client authentication handling in NetServerOptions and updated related classes to improve client authentication management and align with new configuration standards
updated REPLDIR and FUNCTIONS _ ROOT _ DIR parameters to use user ' s name instead of a hardcoded value to improve flexibility
refactor task view retrieval logic in RecentsView . java to improve clarity and efficiency to enhance readability and maintainability of the
add timeouts to avoid flaky test .
removed clearAll ( ) method from DataTableTopComponent . java to streamline code by eliminating unnecessary functionality
rename variable ` controller ` to ` flowController ` in multiple classes to improve clarity and maintain consistency in naming conventions
updated the handling of ` finalExchangeSumNum ` in ` OperatorTreeGenerator ` and added a test for ` consumeAllChildrenPipelineBreaker `
added import statement for ClassLoaderHandler in module - info . java to enable handling of class loading in the application
do n ' t update guiscoredirector ' s bestsolution when it ' s in event thread
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
changed the condition from checking if throwable is null to checking if it is not null to ensure proper handling of non - null throwable values
refactor query info retrieval to use a local variable for clarity to improve code readability and maintainability
use gui _ only instead of none for auto workbench
fix ( gl200 ) : add additional condition to gl200textprotocoldecodertest
rename timeColumnName and timeFieldSpec variables to incomingTimeColumnName and incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java to
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
added support for the new ` Initializable ` interface and its implementation to facilitate the creation and initialization of custom factories in the application
add longtasktimer sample for long task execution ( fixes # 386 )
changed the data type of SYNC _ DELTA _ RATE from float to double and modified how fetchTime is calculated and set to
improve error message for deprecated fragment expression ( thymeleaf )
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread - safety when reading attributes
http : / / issues . apache . org / jira / browse / amq - 4566 - fix for amq - 5
added new color constants and modified the ` extractInto ` method to include fallback color extraction logic to enhance color extraction functionality and support for dark text
added a check for the accessibility of the data folder before adding it to the source folder list to ensure that only accessible data folders are included
updated methods in OmniNotes , NotesHelper , and NotesHelperTest to replace TextUtils with StringUtils for content handling to improve code readability
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl to streamline session management by eliminating unnecessary instantiation
added logging for reconnection completion and error handling in NettyStreamingService . java to improve debugging and error tracking during reconnection attempts
replaced instances of ` Factory ` with ` Proxy ` in multiple files to utilize the use of ` javassist . util . proxy
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency by using a
refactor socket exception handling to use String . join for message concatenation to improve readability and simplify error message construction
added a check to verify if the view directory is under the repository to improve error handling and provide clearer feedback when view directories are not under
fix drag & drop of bib file ( # 4640 )
8274393 : [ testbug ] runtime / class / getdumpandloadclass / testdumpandloadclasswithexception .
removed error logging for invalid update log states in PeerSync . java to streamline error handling by eliminating unnecessary log entries
deleted the ConnectionHook . java file to remove unused code that is no longer needed
updated waitForReplicasInSync logic and removed redundant null assignments across multiple test classes to streamline the synchronization process and improve code clarity
camel - 13850 : camel - swagger - java - allow to configure array of primitive type in swagger - java
updated version handling in ApexLanguageModule . java and added a method in TestAccessEvaluator . java to improve version management and ensure proper namespace
update copyright year to match last edit in jdk8 langtools
replaced direct instantiation of ` Executors . newFixedThreadPool ` with a shared instance of ` IoTDBThreadPoolFactory ` to improve thread management
updated the WebSocketAsyncConnection constructor to include a ByteBufferPool parameter to enhance memory management by utilizing a custom buffer pool for WebSocket connections
added scrollToPositionWithOffset method calls in UploadActivity . java to adjust thumbnail scrolling position based on index values
fix ( griffin ) : fix sample by on timestamp override by other column alias ( # 2329 )
refactored the onDraw method in LauncherAnimUtils and added a new dispatchOnTransitionStepAnim method in LauncherStateTransitionAnimation
added a configuration option to disable the default user agent in the HttpClient to enhance flexibility by allowing users to disable the default user agent
added support for pubsubhubbub functionality in the FeedRefreshUpdater and ApplicationSettings classes to enable conditional handling of pubsub notifications based on application settings
changed the access modifier of the finalize method from public to protected to restrict access to the method for better encapsulation
update method to check for synthetic classes instead of anonymous or local classes to ensure proper identification of synthetic classes in the stub jar processing
create a new dspacewebapp . java file to provide a base class for webapps that do n ' t support rest
added a method to retrieve table aliases containing columns in the RowResolver class to improve error handling for missing columns in table aliases
updated the triggerKey identity to include a prefix to improve clarity and readability of the identity assignment
updated logging statements to use ` warn ` and ` error ` instead of ` info ` and ` debug ` for transaction broadcasting failures to improve
increased timeout for basicmaptest from 3 second to 6 second
rearranged the declaration of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java `
added a new enum TlsClientCertPolicy and refactored its usage in GitBlitServer to utilize it for managing client certificate
added a debug log statement indicating a new CHALLENGE message has been saved to streamline error handling for authenticated feed subscription
updated WebsocketRoutingFilter to include HTTP headers and subProtocols in the ProxyWebSocketHandler to enhance WebSocket request handling by allowing customizable HTTP headers
added debug logging for fetchReq in HiveQueryResultSet . java to enhance visibility into query result fetching process
updated formatting of dimensions and event label in HolidayEventFormatter . java to improve readability and consistency of the output
refactor ` FinalizePrivateFieldsTest ` to use ` ignoreInnerClass ` and add a new method ` isInnerClass ` to improve cl
updated exception handling logic in UnexpectedJobExecutionException . java to improve error handling accuracy and reliability in job execution
removed the ` jdk . internal . loader ` module and modified the ` AquaLookAndFeel ` and ` Aqua
update maxFreq and maxCost calculations in DrillSidewaysQuery . java and DrillSidewaysScorer . java to improve accuracy in
added a mapping for GeoDegeneratePath to classRegsitry in StandardObjects . java to support GeoDegeneratePath functionality in the
removed the ` preFill ` parameter from multiple constructors in the ` ParticleEffectPool ` , ` FlushablePool ` , and ` Reflection
updated taskbar state handling in TaskbarLauncherStateController and modified flags in TaskbarStashController to enhance taskbar state management and improve
added null check for default style before comparing styles in CascadeDeleteVisitor . java to improve robustness by avoiding potential NullPointerExceptions
refactor GuiUtil to use a unified setSize method for setting maximum size and preferred size to improve code readability and maintainability by central
refactor icon assignment logic in FileTreeViewHolder to use TreeFileExtension for better readability and maintainability to improve code clarity and
updated qualifier assertions from ` isEqualTo ` to ` contains ` in ` ParallelUniverseTest . java ` to improve clarity and consistency in
added synchronization to the iteration over suite results in XMLReporter . java to ensure thread safety when accessing shared resources
[ native ] add test for native probability function
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper resource cleanup and prevent memory leaks
hhh - 13829 - sybase - dialect do not drop temporary table after use
danielwagnerhall : fix htmlunitdriver to handle color value
refactor SolrCore , XMLWriter , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
updated link indexing logic in LinksIndexingFilter . java to improve performance and accuracy of link indexing
updated string representation of reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to provide clearer insights into memory allocation limits
refresh ad group when there be no ad
refactor equality check in MultimapSubject to use a temporary boolean variable to improve readability and maintainability of the equality comparison logic
updated frequency property from ' deg _ text ' to ' unit _ hz ' in WaveGeneratorActivity . java to improve clarity by using
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
simplified the instantiation of TreeMap in TestLabelOptions . java to improve code readability and reduce unnecessary method calls
fixed an issue where the format element be n ' t add to the vertex format element .
added tracing context for message sent and received in TracingClientInterceptor and ITTracingClientInterceptor , and modified span handling in ITTra
replaced the use of ` ZoneId ` with a direct call to ` TimeZone . toZoneId ( ) ` in ` ScheduledTrigger .
added ` AsyncBucket ` , ` AsyncBucket ` , ` InMemoryExtension ` , and ` InMemoryExtension ` classes to enable asynchronous bucket
refactor command - line argument handling in resexhausted003 . java for improved clarity to enhance error reporting for missing test class
updated formatting of method declarations and added exception handling in AbstractConnector . java to improve code readability and handle interruptions effectively
rename OngoingStubbing class for clarity to improve code readability and maintainability
added support for reusing a web server based on the presence of an optional web server to enhance flexibility in server management by allowing the creation
replaced productConstructor with constructor in HttpClientUtil . java and added SolrHttpClient initialization in SolrTestCaseJ4 . java to improve clarity
added a check to clear the thread allowlist if it is not empty to ensure that the thread allowlist is properly cleared before use
changed the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity
added a conditional check to skip processing of Gaps and overlaps based on the HitPolicy type to optimize performance by avoiding unnecessary processing when
[ beam - 1342 ] add a test for combine . globally with sliding window .
added a conditional check for ` allAppsDirty ` before binding all apps and improved logging message formatting to ensure app icons are only bound when
added assertions to check if the " Running " attribute exists in the JMX server to ensure that the test accurately verifies the execution status of the
updated formatting of the main method in the Solution . java file to improve code readability and consistency
refactor AquaMenuBarUI to use AccessController for property retrieval and introduce a check for embedded mode to improve code clarity and
add fall flag to setrawlocation ( ) ( fixes # 174 )
refactor query execution logic in SimpleJpaRepository to improve clarity and maintainability of the query process
added new fields for timestamp , parent hash , nonce , and number in BlockUtil . java to enhance functionality by associating with the genesis block
rename loop safepoint insertion to safepoint insertion .
added null and empty checks for child lists in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by preventing
changed access modifiers of methods and classes from package - private to public to allow access to these methods from other packages
added disposal methods for various components in ClientConnectionHandler and BulletPhysics , and improved error logging in ChunkProcessingPipeline to
added a check to ensure maxBufferedDocs is at least 1 in IndexWriter . java to enforce that maxBufferedDocs is at least 1 for
added functionality to manage the login state in LoginActivity to ensure proper restoration of the login process during configuration changes
added null checks for source and value extraction in Pump . java and implemented a new test for UUID sorting in PumpTest . java to
modified access modifiers of several fields and methods in HttpShardHandlerFactory and LBHttpSolrServer classes from private to protected to allow subclasses to
updated the order in ` BaseAuthenticationServiceSelectionStrategy ` from ` LOWEST _ PRECEDENCE ` to ` HIGEST _ PRECED
added Jetty server and handler configurations in TestJNDI . java to enhance server functionality and improve error handling
refactor code formatting and improve readability in SortedDynPartitionOptimizer . java to enhance code clarity and maintainability
modified the return value of the method from checking if the loop is an instance of NioEventLoop to always returning true to simplify the logic
updated the calculation of newNumNulls and adjusted its assignment logic in StatsUtils . java to improve clarity and correctness in handling null values
camel - 16400 : camel - jbang - export to kamelets should be able to run camel - kamelets from the
updated OSMJob . java to integrate OpenStreetMap authorization checks and streamline token upload process to enhance security by ensuring users have the appropriate
removed unnecessary print statements and refactored the main method in BasicPTXTest to improve code clarity and facilitate easier debugging
added clientAuth configuration to IoTDBRestServiceConfig and modified RestService to conditionally set trust store password to enhance security by allowing client authentication
updated the injection process in PropertyAndSetterInjection . java and added a new test class ChildWithSameParentFieldInjectionTest . java to improve
move bloomuriuniqfilter from bloomfilter32bitsplit into bloomfilter64bit and bloomuriuniqfilter to be use
updated getCursorAdapter ( false ) to getCursorAdapter ( true ) in HomeFragment . java and added a refresh _ me preference in T
updated the intermediate header height ratio in the scroller from 1f to 75f to improve the visual appearance of the header by adjusting
8040655 : when process a rewriteexception debug object , the return value have already be reset to null . we need to catch this value before that
added functionality to manage host preparation status in the execution command to enable monitoring and management of pre - installed hosts in the application
added a new boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created
added a loop to remove leading slash from the location in DefaultServlet . java to clean up unnecessary characters from URLs
added properties and validation for entity and score in the StaticPipeline class to ensure the correct number of entities and scores are passed to the StaticPipeline
refactor Whoops handling to improve file path parsing and enable / disable functionality to enhance code clarity and enable or disable Whoops
[ geos - 8470 ] catalogrepository . getdatastorebyname should return null when the datastore do not exist .
updated assertion methods in Assert . java to improve accuracy and performance of assertions
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and ` MultiLineJaggedTextTests ` , and
( chore ) camel - activemq : fix the unit test error
replaced ` writeMeasurementScheams ` with ` writeAlignedWithTablet ` and ` writeMeasurementScheams ` across multiple
updated loop structure and memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve code cl
updated the jar file name from ` slf4j12 - . jar ` to ` slf4j - reload4j - .
updated assertion in HueBridgeHandlerOSGiTest to use waitForAssert for better responsiveness to improve test reliability by avoiding
refactor package structure for AboutActivity , CrashHandlerActivity , PreferencesActivity , and TerminalActivity to improve organization and clarity of activity
jbrules - 1276 : ignore test until drools - 1276 be fix
added a constructor to PullRequestMergedEventsStream that reads a Pinot schema from a specified file to enhance flexibility and improve error handling during schema
refactor AbstractPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] fix checkstyle violation in taskslot
replaced references to ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and its test to
added a try - catch block around lock release in MoveTask . java to handle potential LockException when unlocking locks to improve error handling and
replaced Properties loading with ResourceBundle retrieval for GEM _ PATH and RUBY _ VERSION to improve resource management by using a more direct resource
remove transaction . zero _ address , use byteutil . empty _ byte _ array instead
[ hotfix ] fix checkstyle violation in classgraphclassloader
[ hotfix ] [ test ] fix test failure in jobmanagerstartuptest
fix : [ clouddatatransfer ] add miss option for alpha1 ( # 95 )
added a Bundle to store file extras in FileDisplayActivity to enhance the functionality of the builder by allowing additional data to be passed
replaced ` break ` with ` continue ` in ` ParticleEmitter . java ` to ensure the loop continues even if ` particle ` is
updated cluster count expectations from 4 to 3 in AmbariManagementControllerImplTest . java and AmbariManagementControllerTest . java to
removed nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file with new test cases to enhance test coverage for bug 4823811 functionality
replaced the direct addition of a patternToDelete argument with a path relativizer function to ensure that the pattern deletion is correctly applied to the
updated requestFullState method to accept a boolean parameter indicating initial request status to enhance flexibility in handling state requests based on initial request status
updated ShibbolethCompatiblePersistentIdGenerator to utilize an attribute property instead of a hardcoded salt to enhance flexibility in generating persistent
updated the injection annotation in RequestValidationService . java to improve clarity and consistency in dependency injection
refactor keyboard hiding logging to use a structured message bundle to improve code readability and maintainability by centralizing message data management
updated formatting of conditional statement in FileNodeProcessor . java and added clear method calls in MManagerBasicTest . java and MTreeTest .
updated NavigableMap and NavigableSet classes to improve code organization and maintainability
add a test case to ensure slurpfile ( ) do n ' t swallow unknown file
added @ FunctionalInterface annotation to multiple classes to indicate that these interfaces are intended to be intended to be functional interfaces
refactor span retrieval logic into a separate method ` spanWithName ` to improve code readability and reduce duplication in span name checks
added support for converting between Date and Date types in Hive schema converters to enable proper handling of date data types in Parquet
replaced hardcoded character " \ \ s * , \ \ s * " with Patterns . COMMA _ SEPARATOR in StyleConverter . java
ggb - 1341 allow input dialog to show input in case of invalid input
refactor column mismatch detection logic in SemanticAnalyzer . java to improve readability and maintainability of the code
refactor scoring logic in WANDScorer . java to improve clarity and correctness of score updates to enhance code readability and ensure
refactor Correspondence class for improved clarity to enhance code maintainability and readability
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to enhance code clarity and maintainability by using specific
updated the initialization of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new class ` WhiteTextColor
replace list < type > subtypes with list < type > supertypes for biomedictionary
rename variable ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability by using a more descriptive variable name
replaced the @ Ignore annotation with the @ Stability annotation in TaplTestsLauncher3 . java to enable test stability for local
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check for non - empty logFileSuffix in SnippetUtils . java to ensure that logFileSuffix is not null and is not empty before
refactor PythonBuckConfig to improve code readability to enhance maintainability and facilitate future development
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest to ensure proper functionality and functionality of system shared library management in
[ meiligao ] add alarm support ( fix meiligao )
added null check for tile before accessing its properties in PowerDiode . java to prevent potential NullPointerException when accessing the block
added a new ` TrimCache ` class to manage cache size and display a success or failure message to improve cache management and provide user feedback during
updated import statements to use Google ’ s common collections instead of Google ’ s client ’ s utilities
updated return statements in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and BasicAuthAccessControlUtils to throw exceptions instead of returning false to
introduce scheduler . scheduleperiodically ( ) overload to make it easy to use the scheduler interface .
replaced the refreshListOfFilesFragment call with an onItemClicked method to update the list of files fragment when an item is clicked
added logging for file matching and improved resource management in StreamUtil . java to enhance debugging and provide a clearer indication of stream selection
refactor ` create _ table _ with _ environment _ context ` to ` create _ table ` in ` SessionHiveMetaStoreClient .
added an ` aborted ` flag and modified ` start ( ) ` and ` abort ( ) ` methods in ` FixedRateFragInsStateTracker
updated indentation checks in BlockQuoteParser , DocumentParser , FencedCodeBlockParser , HtmlBlockParser , and ListBlockParser to ensure
added networkwifimestatusreceiver , changewifimestatusevent , and refactored postfragment to autoplay if video
removed the check for ` getOpCode ( ) . isControlFrame ( ) ` before throwing a ` ProtocolException ` for non - final control
added visibility setting for the collapse handle view in the WidgetsBottomSheet to improve user interface by ensuring the handle view is visible
added new files ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript escaping in the Joob
bugfix : do n ' t crash if there be no unit to scroll
updated the condition to check if the contract list size is not equal to one instead of greater than or equal to ensure proper handling of single contract
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes and corresponding tests to enhance functionality for adding enums and
added a hashCode method to the IPPPrintService class and created a new TestRaceCond class to ensure consistent hash code comparison for print
[ mondrian - 1286 ] db2dialect should use getversion ( ) instead of getversion ( )
added a check for platform fees before enabling connection in BaseStripeManager to ensure that connectivity is only enabled when a platform fee is present
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
do n ' t clear non - encrypted data when decrypt
removed the ` public ` access modifier from several ` AsynchronousAntn ` , ` BulkheadAntn ` , ` CircuitBreakerAntn
added Retrofit import to Part and PartMap classes to enable Retrofit features in the application
refactor JSON handling logic in JsonBuildHelper and add commonHandleParam in ParamsBuildHelper to improve code clarity and enhance parameter management for
added TYPE _ TASKBAR _ OVERLAY _ PROXY to AbstractFloatingView . java to include additional taskbar overlay proxy functionality to enhance functionality by
fix : update gapic - generator - java with mock service generation fix ( # 113 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation behavior when recents are
removed the second parameter from the createRenderScript method call to simplify the rendering process by eliminating unnecessary parameters
pmd : fix typo in javadoc
refactor system bundle checks into a separate method in PluginManagerActivator to improve code readability and reusability by centralizing system bundle
updated import statements and formatted code for consistency in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replace hardcoded threshold values with a constant ` LOW _ FALSE _ POSITIVE _ RATE ` in ` KeyChainGroupTest . java `
updated configuration handling in Overview . java to improve clarity and functionality to enhance code readability and maintainability by using a more descriptive
server : fix npe while try to check if there be an agent attach to a host .
added null check before converting value to Data to avoid NullPointerException when value is null
kvm : throw exception instead of return null when host discovery fails
updated error messages for missing attributes in the ParamAction class to provide clearer context for the error message
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbing to accept a mock object instead of InvocationContainerImpl to
replaced the method ` getMethodLine ` with ` stripMethodParams ` to strip method parameters to improve parameter handling by removing unnecessary parentheses in method
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the new release version and version number
mob - 1343 outputfilter . getallowedcommands ( ) now return a set instead of a list .
update symbolizer option to use constant instead of string
mow - 103 center popups when overlap feature be set to true
updated error messages to use uppercase hyphen instead of lowercase to improve clarity and consistency in error reporting
refactor StartingWindowListener implementation to use a customizable listener to improve code maintainability and facilitate easier transition management
added a javadoc comment inherited from MBeanServerConnection in MBeanServer . java to provide clarity on the purpose of the code in the MBeanServer
updated exception messages for SecurityException in CheckPackageAccess . java to clarify error handling for package access and definition checks
increased the timeout duration in the awaitTermination method from 30 seconds to 90 seconds and added an assertion to verify that the executor service does
changed the loggingEnabled variable type from boolean to Boolean and added a null check before setting it to improve flexibility in logging configuration and ensure logging
added @ JsonIgnore ( true ) annotation to Schema . java to exclude certain fields from JSON serialization
increased test timeout from 5000 ms to 10000 ms to allow more time for tests to complete successfully
refactor methods in SimpleNaiveBayesClassifier for improved clarity and consistency to enhance code readability and maintainability by standard
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to enhance clarity and functionality
refactor Prototype class to improve code organization to enhance maintainability and readability of the codebase
added a check for transactional table status in SemanticAnalyzer . java to ensure that the table is transactional by default when it is not already set
[ java ] remove unused method in recordingwriter . writefragment .
use format . offset _ sample _ relative instead of 0 .
added ` ` alias ' ' to datastoremetricquery . getgroupbytypeandtag ( ) , which return null in datastoremetricquery .
updated the list of currency pairs in VaultOfSatoshiBaseService . java to use the new currency names " AUR " and "
refactor tests to use EntityManagerFactory and SessionFactory for better resource management to improve resource management and ensure proper cleanup of EntityManagerFactory instances
updated KafkaSender import statements from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to
added new files GwtBinaryIntegrationTest . java and A . java to implement integration tests for GWT binary building to ensure that GWT binary functionality
updated logic in BrowserContentPane to hide loading cause label when clicking on a button and modified ResultSetRenderer usage in SQLConsole to improve user
reformatted code in EnhancedRandomImpl . java for improved readability to enhance maintainability of the code
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance security property management for XML processing
added a new file ` InlineDefaultMethod . java ` containing interfaces with default methods to demonstrate the behavior of default methods in interfaces
updated regex patterns in SqliteFieldPredicateView . java to replace " LIKE " with " GLOB " for improved matching accuracy to enhance
change access modifier of dmnassemblerservice . getdmnprofiles ( ) from private to protect to allow subclassing
fixed - rscript . load ( ) and script . loadall ( ) do n ' t work properly if slave node return null . #
remove staticobject . setwordfieldvolatile and use assert instead .
updated log messages to use ' verbose ' instead of ' debug ' for better clarity to improve log readability and provide more detailed information about
fix race condition in fmloutboundhandler . send ( ) .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants . java and modified the thread pool configuration in Web
refactor shortcut management logic to use an ArrayList for removed shortcuts instead of a map to improve efficiency and clarity in handling shortcut removal
remove unnecessary check for non - string value in DefaultHttpClientBinderRegistry . java to streamline code by eliminating unnecessary type checks
removed the home navigation case from DetailFragment . java to simplify the code by eliminating unnecessary navigation
added a condition to check if the Android market is present before including play services to ensure that play services are only included when the market is present
refactor TableBlockParser to improve handling of cell spacing and add comprehensive unit tests for header rendering to enhance code clarity and
added bridging header functionality to NewNativeTargetProjectMutator and related classes to enable customization of bridging header for Apple bundle
refactor method handling and source path management in PotentiallyDeadCode . java to improve clarity and maintainability of the code structure
added diamond attribute handling and created new classes for diamond redundant argument tests to improve type inference and provide clearer warnings for redundant
replace calls to invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in Highway
removed unused import of Utils and logging statement in SolrCacheHolder . java to improve code clarity and reduce unnecessary logging
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure that authentication errors are properly propagated to the application
updated the condition in Test6796786 . java to check for negative values before comparing with zero to ensure accurate detection of zero values in
added " logback . dev . xml " to the file list in JoobyMojo . java and updated Main . java to
added a new file JaasEventCheck . java to handle JaasAuthenticationSuccessEvent events to enable monitoring of authentication success and failure events in
refactor animation logic in QuickstepTransitionManager to utilize a list of views to animate to improve code readability and maintainability by consolid
updated string distance comparison logic in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure consistency
changed the type of the fetchers variable from HashMap to Map to enhance flexibility in handling different types of fetchers
[ hotfix ] remove unused constant in defaultleaderelectionservice
changed the visibility modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : increase ` ` ready . command . wait ' ' to 5 minute
added JDBC _ SCHEMA parameter to the table parameters in AbstractJDBCConnectorProvider to ensure proper mapping of JDBC table names to their corresponding schemas
corrected the spelling of ' AUP ' to ' UPDATE ' in SQL queries to ensure consistency and accuracy in the database schema
updated schemaTypeCache to use a synchronized map and simplified schema creation logic to improve thread safety and reduce potential race conditions
update header checking logic in StaticServerHttpHeadersWriter and add a new test in StaticServerHttpHeadersWriterTests to ensure headers are only written
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily skip tests that are not available within CMU
added a call to create a directory for storage storage in TestCollector . java to ensure the storage directory exists for testing purposes
set chunked streaming mode to 1024 in StarTreeJobUtils . java to improve performance by reducing data transfer
rename basictype to basictype + add test
hbase - 13463 addendum to fix checkstyle issue in hbase - protobuf
added a test for beans with recursive structure that does not cause stack overflow exceptions to ensure that beans with recursive structure do not cause stack overflow exceptions
added IOException declaration to the getRemoteName method in AccountingTransceiver . java to ensure proper handling of potential IOException during method invocation
added handling for IllegalArgumentException in UserAccountManagerImpl and introduced a new method createPlainClient in ClientFactory and ConnectivityServiceImpl to improve error
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security interceptor configuration by allowing the use of AspectJ mode
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
modified the ` remove ` method in ` OHLCSeries ` and added a test for it in ` OHLCSeriesTests ` to enhance functionality
replaced invocation . invoke ( ) . joinInternal ( ) with invocation . invokeUrgent ( ) . joinInternal ( ) in Client
refactor joint removal logic to ensure proper cleanup of joints to improve resource management and avoid potential memory leaks
fix npe in searchfilter when filter be null .
[ hotfix ] [ test ] add miss license header to sourcereadertestbase
removed multiple redundant null checks for document and folder in DocumentsStorageProvider . java to streamline error handling and improve code readability
added new interface ` HookDefinition ` and ` JavaHookDefinition ` , and created ` JavaHook ` and ` JavaHookTest ` classes to
refactor flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing duplication
modified the ` setExoOptions ` method to accept a boolean parameter for allowing live TV options to enhance flexibility in setting the video
added removal of USER role from the identifier collection in DMRDecoderState to ensure proper handling of user roles in the DMRDecoderState
added a static INVISIBLE color and refactored the toString method in Color . java , updated imports in RailButtonShapes . java ,
updated null handling logic in CountAggregationFunction and added a new test for COUNT ( * ) with null handling in NullHandlingIntegrationTest to ensure
set the deep property of InternalTransaction to - 1 to reset the deep state for transaction processing
escape the name in the StreamInitiation class to ensure that the name is properly escaped for XML compatibility
updated file initialization to use a configurable work directory to enhance flexibility by allowing the work directory to be specified in the configuration
mondrian : add support for deprecate rule in rulesetfactory
replace a dummy label with an opcodes in amd64directcallop . java
refactor TimeRange to use static final MIN _ TIME and MAX _ TIME constants and update its initialization logic to improve code clarity and ensure
refactor BitDocIdSet class to improve code readability and maintainability
refactor metric emission logic into a separate method ` emitMetricsJson ` to improve code readability and reusability
refactor DetailFragment and GalleryActivity to improve MIME type checks and streamline intent handling to enhance code readability and maintainability while ensuring correct
allow tank to be fill if it ' s not on the client side . close # 375
update CsharpLibrary to handle both RuleAnalysisLegacyBuildRuleView and PrebuiltDotnetLibrary to improve compatibility with DotnetLibraryProvider
of - 1558 : allow to send iq packet to the pep service if it ' s not a bare jid .
add null check for runtime in intrinsificationphase to avoid npe
do n ' t call refreshactivework if there be no active .
pdfbox - 4892 : avoid infinite loop when parse a cosobjectkey
added a constructor to LwjglApplet to initialize the canvas and manage its lifecycle to improve the application ' s responsiveness by allowing
simplified the return statement for Docker host configuration in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve code readability and maintainability
refactor ` doPostAuthentication ` to use ` handle ` method instead of ` handle ` for ` AccountState ` to improve code clarity
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to enhance
refactor methods in Readable class to improve code readability and maintainability
replaced manual PDF file writing with TestSupport . WITH _ FONT in JsoupNonVisualRegressionTest . java to simplify the test
updated the share menu icon from ` share _ menu _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java `
added JVM _ SPEC _ VERSION and updated JRE _ IS _ MINIMUM _ JAVA8 detection logic to ensure compatibility with Java versions 1.
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 558 : do
rename GenericContainer class to improve clarity to enhance code readability and maintainability
replaced HashSet with ArrayList for filteredSet and filteredList in Enclosed . java to improve performance by utilizing a more efficient data structure for
added multiple @ Override annotations in CentralAuthenticationServiceImpl . java and AbstractCasProtocolValidationSpecification . java to enhance code clarity and
removed redundant lines of code in ChartProvider . java to improve code readability and maintainability
update working directory for import and export of bibtex db ( # 1188 )
modified the return statement in JavacParser . java and added a new class ExtraSemiTest . java to improve code clarity and
added methods for finding users by their created time in User and UserRepository classes to enable retrieval of users based on their creation time
refactor Test15FloatJNIArgs class to improve code readability and maintainability
updated import statements and formatted version strings for improved readability to enhance maintainability and clarity of version information
nifi - 1742 : fix incorrect length of encrypted text in mockprocesscontext . encrypt ( )
[ java ] add ensurenotreentrant check to archive .
refactor dependency handling in OpProcFactory to check for null before merging to improve robustness by avoiding potential null pointer exceptions during dependency merging
added a timeout of 10000 milliseconds to the @ Test annotation in SslBytesServerTest . java to ensure tests do not hang indefinitely
fix a typo in the javadoc of getpeer ( ) .
added methods for retrieving the historical index segment and changed the ` toImmutable ` method to ` toHistoricalIndexSegment ` in ` Realtime
updated FailureWatcher to check for null exportedData before writing to improve robustness by avoiding potential NullPointerException when exporting data
refactor popup handling in RecyclerViewFastScroller to use a new method for calculating scroll thumb radius to improve code readability and maintainability
updated message in BuckWSServerPortUtils to reflect the restarting IntelliJ and modified BuckEventsConsumer to check if the
added a conditional check to ensure the preventSleep checkbox is only added on non - Windows platforms to enhance user experience by preventing sleep functionality on
updated servlet package imports from ` javax ` to ` jakarta ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align with
updated QuickstepAppTransitionManagerImpl to handle vertical bar layout adjustments to improve the responsiveness of app transitions based on the device '
added functionality to manage full - screen exclusive mode behavior in multiple classes to improve user experience by allowing full - screen mode selection in the application
fix playeddurationstr . playeddurationstr ( ) to handle invalid input .
added methods to add credentials for DAG and ReduceWork in DagUtils . java and updated TezTask . java to utilize these
( chore ) camel - core : use entryset ( ) instead of keyset ( ) to improve performance
trim whitespace from the thread name before setting it to ensure proper formatting of thread names for better readability
updated the error message for adding a description until the next point has been logged to a file to clarify the user experience by providing a
[ hotfix ] fix checkstyle violation in job
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` to the ` Main . java ` file
updated the key from " hbase _ master _ host " to " hbase _ master _ hosts " in the componentToClusterInfoKey
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
modified the return type of the performJoin method to return a list of GenericRecords instead of a single GenericRecord to allow multiple records to be
updated MAX _ DELEGATE _ LOCK _ PERIOD to allow values greater than 10512000 or less than 10512000 to ensure proper
cloudstack - 7293 : fix npe in updatenetworkrate method of nicsprofile class
( chore ) camel - mc : cleanup unused method
updated configuration handling in GossipLocalNode . java and changed configuration file names in Constant . java to improve clarity and consistency in configuration management
set ` ` hazelcast . client . tpc . enabled ' ' system property to ` ` false ' ' in ` ` client tpc
updated swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 across multiple application classes to ensure compatibility with the
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality
modified the key assignment logic in NamedObjectList . java to ensure a default empty string is used when the name is blank or null
replaced instances of ` cleanupEmptyDir ` with ` cleanupEmptyTableDir ` across multiple files to standardize method naming and improve clarity
refactor AsyncCache and Cache classes to improve code organization and maintainability
added RCFileInputFormat import and registered it with Kryo to enable support for RCFile input format in serialization processes
added methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java type information from a ` Column ` to enhance
added error handling for invalid host headers in the request processing to improve robustness and provide clearer error messages for invalid host headers
replaced TimeZoneFinder with ReflectionHelpers in ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to improve compatibility with Robolectric ' s ReflectionHelpers
refactor ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve handling of empty outgoing values
refactor ` SegmentCoreReaders ` and ` SegmentReader ` to use ` si . name ` instead of ` segment ` and ` context `
added ` hasMainThreadProfile ` method in ` AggregateDao ` , ` AggregateDao ` , and ` TransactionCommonService ` classes to check
added validation for annotation definitions in a Buck rule to ensure that annotations are not allowed in a Buck rule with required for source ABI
updated names in various filter factory classes to use lowercase to improve consistency and clarity in naming conventions
updated HSSFSheet and Sheet classes to improve code organization and maintainability
replace old lucenesearchrequestprocessor with discoveryrequestprocessor since dspace 4.0
added a list of time zone IDs and removed specific America / Dawson , America / WhiteHorse , and Canada /
updated SurfaceSyncGroup instantiation to include a specific name " TaskBarController " to improve clarity by specifying the context of the synchronization group
updated GridFsTemplate and GridFsTemplateIntegrationTests to use file ID directly instead of BsonObjectId to improve code clarity and maintainability by
added methods to manage total size and total bytes in ShadowDownloadManager to enhance testing capabilities for DownloadManager queries
refactor character handling logic in TextField . java to improve readability and maintainability of the code
added a check to return early if the target is equal in GroupNodeViewModel . java to optimize performance by avoiding unnecessary processing when the
added ` afterSetStatements ` method to manage terminal state adjustments for variable nodes to improve code clarity and maintainability by separating terminal
added hashCode ( ) method in IntervalXYDelegate and updated equals ( ) in XYSeriesCollection to utilize HashUtilities for consistent hash code generation
fix clientqueuedisruptiontest by add miss cleanup
updated method names and structure in CloudWatchAppender , RegisteredServiceScriptedAttributeFilterTests , and CasPersonDirectoryConfiguration to improve code clarity and
updated method name from serializeSpecialDoubleValues ( ) to serializeSpecialFloatingPointValues ( ) in Gson . java to improve clarity and accuracy
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added null checks for subtag and privateuse in Locale . java and LanguageTag . java to improve robustness of language tag canonicalization and
kvm . ssh . to . agent : add config param to allow ssh agent to ssh
[ hotfix ] fix checkstyle violation in schedulerwhen
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to ensure compatibility with the latest package structure
added a condition to check if the string does not contain a hyphen in SimpleSearchQueryConverter . java to ensure that the filter does not contain
updated text for sortColumnsLabel and sortColumnsLabel to use " Natural column order " instead of " natural order " and " A
replace ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java `
replace remoteAddr with htmlEncodeButNotSpace in HtmlSessionInformationsReport . java to ensure proper handling of non - space characters in remote information
fix itemstatetriggerhandler to work with smarthome / items
removed unnecessary synchronization around date formatting in FastHttpDateFormat to improve performance by reducing unnecessary synchronization overhead
added a thread - pool to manage file movements in Hive to improve responsiveness by allowing parallel execution of file operations
added new overloads for the trigger method in WrapTimer . java to enhance timer functionality and improve error handling during execution
[ hotfix ] [ table - common ] support local _ date and local _ time type in tostring ( )
added a verbose option to the error reporting in AbstractStatusReporter to provide more detailed error messages based on user input
mow - 103 fix ` ` unbundled ' ' - > ` ` unbundled ' ' menu disappear
s2s vpn : do n ' t allow eitablisation between two vpn gateway and customer gateway .
removed redundant error handling logic in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to streamline error management and ensure
added logging for encrypted PDFs in PDFBoxThumbnail and PDFFilter classes to improve error handling and provide clear feedback when a PDF is encrypted
[ 3.0 ] fix the problem that the dubbo - curator - watcher service be not re - initialized when the client be
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and enhance maintainability
updated Uri creation and deletion logic in HostsList . java to improve clarity and ensure correct URI handling during item deletion
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of the replaceOrderBulk method from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and updated
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode
added a new class J9ConstantHelper for retrieving long values and modified ObjectHash to utilize this new method to improve code maintainability and
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior with multiple threads to ensure that concurrent
of - 27 : add ability to remove resource from a roster on offline .
updated methods to use ` getOverlayedProperties ( ) ` for retrieving overlayed properties in ` MapOperator ` and ` PartitionDesc ` classes
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check before initializing ` extTypeCustomDesers ` in ` MessagePackFactory ` and introduced a new test method in ` MessagePack
remove system . setproperty ( ` ` mockserver . loglevel ' ' , ` ` mockserver . loglevel ' ' ) so that
removed the @ Test annotation from AbstractRegistryFactoryTest . java to enable the test to run without failing
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
replaced ` scoreMap ` with ` termScoreMap ` for improved type specificity to enhance the clarity and usability of score
updated comparison logic in U64 . java to use less than zero for parameter data and added an equality check method to improve parameter comparison accuracy and
added headline styling for text in MainViewModel to improve visual appearance and readability of the UI elements
updated the notification condition to include support for dark text in WallpaperColorInfo . java to ensure correct handling of dark theme changes based on
[ hotfix ] [ runtime ] fix checkstyle violation in checkpointrequestdecider
updated maximum pool size and keep alive time constants in Parallel . java to improve thread management and align naming conventions
replaced ` filter ` method with ` anyMatch ` for better readability in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver ` to
[ openCV ] fix test failure on window .
fix for http : / / issues . apache . org / activemq / browse / amq - 2636 - set the prefetch
do n ' t throw any exception if the python proxy ca n ' t handle them .
added a Repeatable annotation to the Issue class to allow the Issue annotation to be categorized as a repeatable for better code readability and
changed the key from " hcat _ user " to " webhcat _ user " in userProps and updated related imports in BlueprintConfiguration
refactor socket connection to use a configurable InetSocketAddress based on the " socksProxyHost " system property to improve flexibility in address resolution based
[ hotfix ] fix checkstyle violation in slotstatus
removed unused import of ClassUtils from ReflectionUtils . java to clean up unnecessary dependencies and improve code maintainability
replaced instances of ` HashSet ` with ` LinkedHashSet ` for protocol , cipher suite , include protocols , and selected _ ciphers in ` SslContextFactory
added a static resource variable and logic to return it if it equals a specific resource to optimize resource management by avoiding unnecessary retrieval of resources
[ java ] add a constant for plaintext segment size and use it in the streamaead seekable / decrypting channel .
added a test for ` circuitBreakerInvalidFallbackThrowsException ` and modified the circuit breaker route to ensure correct handling of exceptions when the fallback is invalid
added SSL connection support in AppPage . java to enhance security by enabling hostname verification during HTTP requests
updated the size limit of ` cin ` from 0x7FFFFFFF to 0x7FFFFFFF and removed the resetBytesReadCounter
added preferAES property and its getter / setter methods in ProtectionPolicy . java to enable configuration of encryption preferences in the security policy
( chore ) camel - opentelemetry : use logger instead of system . out . println
[ hotfix ] [ test ] remove flaky elb integration test
rename the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the purpose
added error handling for file creation in DiacriticTest . java to ensure robustness by handling invalid path exceptions during file creation
hhh - 14977 skip followonlockingtest on oracle 11 when a driver can not be find
updated file handling and error management in TextureUnpacker . java to improve robustness and provide clearer error messages when atlas files are not found
updated AmbariManagementControllerImpl to use Cluster for concurrent access to ensure thread safety when modifying service change states
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the ResultSet does not close it to ensure proper resource management and avoid potential memory leaks
refactor InputStreamBodyGenerator and ChunkingTest to improve input stream handling and enhance test coverage for large and smaller file scenarios
refactor database handling in ClusterSchemaManager to remove pre - deleted databases from the schema map to improve data integrity by ensuring only relevant databases are
updated chunkedWriter handling in Http1xUpgradeToH2CHandler . java to ensure proper resource management during HTTP / 1.1 operations
updated item deletion logic in EnhancedBrowseFragment and added a deleteItem method in FullDetailsFragment to enhance item deletion functionality and improve user experience
added a new ` RuleBank ` interface and refactored ` RuleFinder ` to use it for rule retrieval to improve code modularity and
do n ' t swallow exception when init fails .
added TestMonomorphicObjectCall and Object classes with native methods for object manipulation to facilitate testing of monomorphic object calls
replaced the ` removeMetaDataSource ` method with ` toFront ( ) ` in ` DataBrowser ` and ` Desktop ` classes to
hbase - 26462 fix npe in memstore . shouldseek ( )
[ hotfix ] [ runtime ] rename local _ state _ root to local _ state _ directories for consistency
updated ` AlterTimeSeriesStatement ` to accept a boolean parameter ` isAlterView ` and modified its instantiation in ` ASTVisitor ` to improve
fix ` ` matchtext ' ' for string , not just ` ` match ' '
added a try - catch block to handle potential exceptions when retrieving the routing table builder to improve robustness by preventing application crashes due to
replaced ` putAll ` with ` putIfAbsent ` in ` HttpClientIntroductionAdvice . java ` to improve code readability and ensure
( chore ) camel - jms : use char [ ] instead of string for password
server : fix listpublicipranges api to return only subdomains when the session be invalidate
replaced the ` toSortedListWithCounts ` method with ` toSortedListWithCounts ` and ` isUniformDistribution ` methods , and
modified the parameter name in the initialize method from ' status ' to ' original ' and added warnings to the status object to improve clarity and
sulong : move transfertointerpreterandinvalidate ( ) to truffleboundary .
refactor variable handling in PrettyPrinter to use a separate variable for improved readability to enhance code clarity and maintainability by separating
modified the handling of index nodes in LRUDictionary to check for null values before creating new nodes to improve efficiency by avoiding unnecessary object creation
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic and encapsulate filtering checks to enhance code readability and maintainability while
updated JUnit imports and annotations from version 4 to version 5 in TestQueryDNS . java to utilize the newer JUnit 5 features and
added a new file ` NutchServerInfo . java ` with properties for configuration , job management , and running jobs to provide a structured
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource for token attributes in EdgeNGramTokenFilter to streamline attribute management and improve code
added a timestamp option to settings and modified timestamp handling in CqlInserter and ThriftInserter to allow users to specify a timestamp
refactor DSAParameterGenerator to improve handling of strength checks and replace BigInteger . ONE with BigInteger . ONE to enhance code clarity and ensure
updated NumberUtils and Numbers classes to improve handling of floating - point and double values to enhance performance and accuracy in number conversion
updated masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate
added constraint violation checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper . java to ensure proper handling of specific SQL exceptions
[ issue # 5640 ] fix the issue that consumermanagerprocessor # rewriterequestforstatictopic do n ' t work correctly
added a new method ` insertTab ` and refactored the ` createTab ` and ` insertTab ` methods in ` Tabs `
replaced array size specification with zero - length arrays in multiple Java files to improve code readability and reduce potential runtime errors
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment
added conditional checks for ` reqGroup ` , ` scope ` , and ` artifactId ` in ` MavenVisitor . java ` to ensure proper evaluation
updated mock string constants in ZookeeperDataChangedListenerTest . java for consistency and clarity to enhance readability and maintainability of test cases
added a new file ` FormatCheckingTest . java ` to test class format errors to ensure that the application correctly identifies and reports illegal class names
updated line number assignment logic in CodeGenerator . java to improve clarity and maintainability of line number handling
added a try - catch block around the retrieval of service configuration to handle potential exceptions when accessing service properties
added two overloaded methods ` createToggle ` to the ` RadioButton ` class for creating toggle buttons with specified text , icon , and command
updated LRUCache to use a specified cache size and increased CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to optimize memory usage and
int - 193 , int - 194 , int - 196 , int - 198 , int - 198 , int - 19
fix potential npe in osgimanagementnamestrategy when symbolicname be null .
add the ` ` usemode ' ' property to modecontribution so that it can be override by the system property ` ` usemode '
[ hotfix ] [ test ] improve log message in case of failure
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and related classes to improve clarity and consistency
updated header propagation logic in ` AbstractMessageProducingHandler ` and added a test in ` AbstractReplyProducingMessageHandlerTests ` to ensure
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future feature additions
added ` HasTests ` interface implementation and a test collection in ` RustBinaryDescription ` and ` RustLibraryDescription ` to enable testing
updated placeholder and error drawable resources in FileMessageVH . java to improve clarity and consistency in the user interface
rename OnExitTest . java file to improve clarity and consistency in naming conventions
added an onUserPreferenceChanged method to recreate the taskbar when user preference changes
refactor heap dumping logic to support both IBM JVM and J9 environments to enhance compatibility and support for improved JVM functionality in the
camel - 13850 : camel - mybatis should ensure session be close even if commit fails .
simonstewart : update the ie driver to use the new ie driver
updated references from JDK 5 for - loop to Java 5 for - loop and modified the @ TriggerPatterns annotation to include Java 5 for - loop
added a method to set the application state to unavailability to ensure the application is in an unavailable state for better resource management
updated position and limit handling in ByteBuffer and StringCharBuffer classes to improve clarity and correctness of position and limit calculations
replaced ` toUri ( ) . toUri ( ) ` with ` toString ( ) ` in ` ConditionalResolverMergeFiles . java `
modified ` setEmpty ` methods in ` ArrayData ` , ` ArrayFilter ` , ` ObjectArrayData ` , and ` SparseArrayData
changed enum declarations from non - public to public for Protocol and Transport in VirtualAuthenticatorOptions . java to allow access to these enum from other classes
replaced ` doc4 ` with ` doc6 ` and added a new document ` doc6 ` in ` TestMultiPhraseQuery . java
update ticket assignment logic to handle offline payment status to improve ticket assignment accuracy based on the payment method
added onTimeoutThread to manage timeout handling in HttpChannelState . java to ensure thread safety during timeout operations
replaced printStackTrace ( ) with logger . warn ( ) and added debug logging in SslBytesTest , SocketChannelEndPointTest , and Tracking
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
use local _ quorum instead of non - local _ consensus for local _ quorum
added a condition to check if the device name contains " Home " in HeosDiscoveryParticipant . java and updated the property handling in Heos
added a ` Wait ` property and its getter and setter methods to ` PlainSelect ` , and created a new ` Wait ` class to manage
refactor attribute handling in Neo4j . java to utilize AttributeController and AttributeTable for node and edge data management to improve code
added a null check for serverName in SessionManager . java to ensure that serverName is not null before comparison
nifi - 1640 : move rocksdb metronome to nifi - controller - repository
updated the method to retrieve the value of " IS _ GRANTABLE " from the results object to enhance flexibility by allowing the retrieval of
added logging and modified URL validation logic in JavascriptContext . java to improve debugging visibility and ensure URLs do not start with " javascript : "
( chore ) camel - cxf : do not run cxf test on mac o
modified column modification logic in LoadTestTool . java to handle new and existing columns appropriately to ensure proper handling of column modifications based on whether the
added implementation of the Disposable interface to the Texture class to enable proper resource management and disposal of texture resources
updated WebappRegistrationCustomizerImpl to include null checks for tldBundleLocation and changed the extractWars flag in OSGiAppProvider
refactor checkgoquorumcompatibilityconfig ( ) into checkgoquorumgenesisconfig ( )
replaced IOException with Throwable in HttpInput . java to improve error handling by using Throwable instead of IOException
added a condition to check if the country is not equal to " JP " in the LocaleTest . java file to prevent issues related to
rename the Wrapper interface to HostResponseWrapper and update related references to improve clarity and consistency in naming conventions
added a check for the boost in the FilteredQuery class and modified hash code calculation to include the boost value to ensure accurate comparison and hashing
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 1343 text editor : use vertical panel instead of listbox for debug
added a new file ` TestCMSClassUnloadingDisabledHWM . java ` to test class unloading behavior when CMS class unloading is
do n ' t throw an exception if the server do n ' t have any entity .
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` and related methods to use ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatementSetter `
fix compactionstest to use identityqueryfilter instead of range . forkeyrange
added a null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java
added support for the " SPEL " operator in the OperatorEnum and created a new SpELJudge class to enhance Judge functionality
[ hotfix ] [ table ] fix checkstyle violation in localexecutionplanner
bugfix # 25816 , use java . awt . lookup instead of javax . swing . service to get the default profiler
refactor multiple classes related to Conscrypt for improved consistency and clarity to enhance maintainability and readability of the code
updated variable initialization from ` 0l ` to ` 0L ` in ` AttributeResolution9 . java ` and ` ShadowArscAssetManager
updated the source and target options in SetupHid . java from 1.5 to 6 to ensure compatibility with the latest features and improv
made the ` extractMetadataColumns ` method public and introduced a new ` MetadataOnlyProjectionRewriter ` class for metadata - only projections
refactor AboutActivity to use a sorted localized names reference for the dropdown item to improve code readability and ensure consistent sorting of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming settings before posting a delayed action to ensure proper refresh behavior based on live streaming settings
added the exception as a cause when throwing MappingException in AuditConfiguration . java to provide more context about the failure to create a audit strategy
( chore ) camel - file : use awaitility in camel - core for test
updated generic types from ` AbstractType ` to ` AbstractType < ? > ` in multiple files to enhance type safety and eliminate unchecked warnings in
added transport support check in GitClientApplication and refactored repository URL handling in RepositoryUrlPanel to improve transport management and ensure proper permission checks
added delegation and logging functionality for long press navigation handle in multiple input consumer classes to enhance debugging capabilities and provide clearer insights into input consumer
added null check for ` mavenMetadata ` and modified version filtering logic in ` ChangeParentPom . java ` to ensure ` availableVersions `
8285454 : test / hotspot / jtreg / gc / testlargepagesforheap . java fails due to
skip event migration when usage db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 3892 - fix test failure on window
added a new test class ` TestObjectStreamClass ` and modified ` ObjectStreamClass ` to implement serialization testing for ` ObjectStreamClass `
simplified the condition for checking if the data center information is not null in the ZoneAwareDiscoveryFilter class to improve code readability and
changed log level from error to warn in OpenTracingTracer . java to provide a more appropriate log level for tracing failures
added a toString ( ) method to the Generator class to provide a string representation of the generator registration status
refactor URI handling in ` mmm URI . java ` and add comprehensive tests in ` mmm Test . java ` to
added error handling for missing resources in ClusterControllerImpl and introduced a test for resource retrieval in ClusterControllerImplTest to improve robustness of resource
added error logging and improved null response handling in AccepttoApiUtils . java to enhance debugging and provide clearer error messages for API response
added a conditional check for Android application version in VertexBufferObject . java to ensure compatibility with devices running Android versions below 5 and above
rename SybaseASADatabase class to SybaseASADatabase to improve clarity and consistency in naming conventions
added a new boolean parameter ` forceProjection ` to the ` HashJoinInfo ` constructor and updated related methods accordingly to ensure backward compatibility while allowing flexible projection handling in future version updates
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to string distance calculations within the ` Sp
added FLAG _ MUTABLE , FLAG _ IMMUTABLE , and FLAG _ IMMUTABLE constants and modified PendingIntent creation logic
added methods to append read column IDs and refactored the way read column IDs are handled in HiveFileFormatUtils to improve code clarity
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
replaced multiple instances of ` DisplayTemporaryToast ( ) ` with a new method ` DisplayTemporaryToast ( ) ` in ` S
added version resolution logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure proper version management and validate service resolution behavior
added a new test file RawSerializationTest . java to implement unit tests for Gson ' s raw serialization functionality
simonstewart : introduce the sslcertificategenerator interface so that the selenium server can be use by the selenium - server
refactor loop to iterate over replies instead of using an enhanced for - each loop to improve code readability and maintainability
increased timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow for a longer wait time for resource access to
added a new test method ` testNGramFilterPayload ` to the ` TestNGramFilters ` class to verify the functionality of the N
rename AclImpl . java to improve clarity to enhance code readability and maintainability
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSizes ` to ` EasyRandomTest ` and removed the ` generateArrays
do n ' t swallow exception when try to stop a vm
added thread - local handling for the ` __ tryWriteAgain ` variable in ` SslConnection . java ` to ensure thread - safe execution of
added a method ` ancestorsVisible ( ) ` to check if an actor ' s ancestors are visible to improve the visibility control of actors by ensuring
added logging for failed rolling - update steps in RollingUpdateOpFactory to improve error reporting for deployment failures
[ hotfix ] [ table ] fix javadoc error in table api
added error handling for username not found exceptions in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve robustness of
rename AtMostXVerificationTest . java file to improve clarity and consistency in naming conventions
updated default QTYPE to use LuceneQParserPlugin . DEFAULT _ QTYPE instead of oldLuceneQParserPlugin . NAME and modified the
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added the ` isInitialized ( ) ` method to ` ILanguageServer ` and created a new ` LocalsCompletionTest _ template ` class to
changed the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the ` test _ fetch _ token _ from _ authorization
added methods ` beginTransaction ( ) ` , ` setTransactionSuccessful ( ) ` , and ` endTransaction ( ) ` to ` DatabaseAdapter `
replaced byte array handling with ByteArrayOutputStream for reading to improve performance and readability of the code
refactor exception message handling in MessagingTemplate . java to improve clarity and maintainability of exception messaging logic
added an override method ` isAcceptable ` to ` AutoFormatVisitor ` to check if a source file is an instance of ` CompilationUnit
added methods to set maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy to improve performance by reducing the number of buffered documents
added a new test method ` updateWits ` to ` ManagerTest ` and modified ` Manager ` to clear the ` wits ` list
added handling for NoSuchElementException in CopyOnWriteMap to improve robustness by preventing NoSuchElementException during iterator iteration
log4j2 - 1343 - remove log level parameter from node . logversion ( ) and logenvironment ( )
added reindex functionality and improved authentication metrics in BasicAuthIntegrationTest . java and DaemonStream . java to enhance functionality and ensure proper thread management
replaced instances of HashMap with LinkedHashMap in DependencyUtil . java to ensure predictable iteration order for nodes
log internal error when jerseysupport get throw by jerseysupport .
refactor connection upgrade header validation into a separate method to improve code readability and maintainability
refactor system property handling in System . java to improve clarity and structure to enhance maintainability and readability of the code
changed method parameter types from String to CharSequence in StringSubject . java to enhance flexibility in handling different string types within the StringSubject class
add jvm . countertime ( ) , jvm . classid ( ) , jdk / jfr / internal / jvm . eventwriter (
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory parameter to use a variable ` ds2 ` instead of a hardcoded value to improve flexibility by allowing dynamic configuration of
updated DeploymentOptions . java file to improve deployment configuration flexibility
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` instead of a ` Drawable . ConstantState ` to simplify the
updated resource management in XmlParser and YamlParser to use try - with - resources syntax to ensure proper resource cleanup and improve code readability
added support for the coalesce operator in RexNodeConverter and registered it in SqlFunctionConverter to enhance functionality for handling coalesce expressions in
camel - 15836 : camel - hl7 - fix the unit test error of camel - hl7
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper class loading and avoid potential memory leak
updated DefaultDateTypeAdapter to remove unnecessary constructor parameters and added synchronized keyword to ensure thread safety during serialization and deserialization processes
reformatted method signatures for consistency in DocumentUtil . java to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI and query handling to improve code readability and maintainability by eliminating unnecessary state management
removed the filterOldEntries method from FeedRefreshUpdater . java to filter out outdated entries based on specific criteria
change log level from fatal to warn when append fails
renamed the ` getValues ` method to ` getNodeMapIterable ` and refactored the iterator implementation to enhance code readability and maintainability
updated variable names from ' predicate ' to ' subPredicate ' in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency in naming
added a check for non - empty fields before adding aggregation operations in MongoRecordReader and modified the return condition in RexToMongoTranslator to
add ' admin ' to the admin list if it do n ' t exist .
replaced instances of ` MultiFields . getFields ( ) ` with ` SolrIndexSearcher . getSlowAtomicReader ( ) . terms (
modify the return statement to include the bean name and its identity hash code to improve the representation of the bean object for better debugging and tracking
updated the logic for obtaining the primitive type in GroovyParserVisitor . java to ensure proper handling of primitive types and simplify the return statement
[ gr - 21069 ] remove uninterruptible hashcode method from frameinfoservice .
updated timeout values in SedaBlockWhenFullTest from 100 to 200 to increase test reliability by allowing more time for queue operations
added a new file ` package - info . java ` to the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure accurate calculation of read length based on position and buffer size
move httpclienttiminginstrumentationverificationtests to micrometer - core
updated SQL query to include user information in IconDB to ensure data integrity by validating user - specific data before processing
[ issue # 1193 ] fix backpressure for async send ( # 1194 )
do n ' t add whitelisted resource for module - info . class
fixed db upgrade for baremetal 3.0 . x ( # 5372 )
removed the IJava2DRenderer interface and its implementation from Java2DRenderer to simplify the codebase by eliminating unnecessary interface
added onTearDown method to handle offloading buffer emptying in DefaultAudioSink to ensure proper cleanup of audio streams when tear down
added scheduling functionality and adjusted upstream task management in UpstreamCacheManager . java to improve task scheduling efficiency and enhance code readability
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java to provide clearer context to the assertion failure message
updated FilestorePage and RootPage to use RequiresAdminRole and improved user authentication checks to enhance security and ensure proper access control based
( chore ) camel - elasticsearch : ignore the test until we fix it
updated the method signature of ` accept ` to include type checking for ` Lifecycle ` and ` CustomizableThreadCreator ` to enhance type safety by
updated button labels in OfferBookChartView . java to use " buyWithFiat " instead of " leftButtonAltcoin "
camel - 16400 : fixed restlet router to handle invalid url .
add createnextblock ( ) and createnextblockwithcoinbase ( ) to improve javadocs
removed Serializable interface from DBNavigableSet and added serialCloneNoCatch method in ConcurrentSkipListMapTest to ensure proper serialization behavior and
added null check for cause before logging error in startup rule execution to avoid potential NullPointerException when cause is null
refactor conditional logic in Main . java for clarity to improve readability and maintainability of the code
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file to remove unused or redundant code related to JWT verification
added a condition to close system windows when the action is triggered from the AltTab to ensure proper resource management by closing system windows when the action
updated dialog handling in DialogFragmentIT . java and OCFileListBottomSheetDialog . java to improve user experience by ensuring proper dialog behavior and
updated MimeUtil . parseCharset to specify UTF - 8 encoding to ensure proper character encoding handling for HTTP requests
added a call to ` super . deinitialize ( ) ` in the ` TextField ` class to ensure proper resource cleanup after deinitialization
replaced custom serialization code with utility methods from TestUtilities to simplify code and improve maintainability
updated variable names and method calls in LogicalGenerator and GroupByFillDataSet , and added a new test case in PhysicalPlanTest to improve cl
updated array size validation and added negative array size exception handling in JAXWSExceptionBase . java to improve error handling for negative array sizes and enhance
test : migrate ctunresolvedimporttest to junit 5 ( # 4372 )
increased the thread join duration from 10 seconds to 60 seconds to allow more time for the thread to complete before timing out
[ hotfix ] [ test ] set default value of slotsharinggroup to ' region ' for miniclusteritcase
added title management methods to ShadowActivity and updated annotation for compatibility to enhance localization handling and improve title retrieval functionality
replaced Apache Commons Logging with POILogger for logging in POIFSFileSystem . java to utilize POI for improved logging
updated alarm handling logic in InstarHandler . java to replace " / instar " and " / " characters with " / " to improve
add miss latency statistic to map deletemessagetask [ hz - 1390 ] ( # 23097 )
refactor enum declaration in Option . java and modify status check in Response . java to use a switch statement to improve code readability and maintain
refactor javac location retrieval to use a dedicated method to improve code clarity and maintainability by encapsulating the retrieval of the javac
add project name to flutter create for stable channel support ( # 2369 )
added a new test class for deprecated stubbing functionality in Mockito to ensure correct behavior of stubbing methods in tests
updated import statement from org . eclipse . jetty . server . DispatcherType to org . eclipse . jetty . servlet . Dispatcher
fix a bug in the list of possible nml problem ; add test case .
add ` ` org . bouncycastle . jsse . fips . allowRSAkeyexchange ' ' system property to disable rsa
refactor variable names from ` output _ reader ` to ` reader ` in ` PerforceHistoryParser ` and ` PerforceRepository ` to
added methods to delete OAuth services and their access tokens in PubSubAPI and SDMAPI classes to improve management of OAuth services and facilit
replaced AGGRESSIVE _ EASE with EMPHASIZED for animation interpolators in TaskbarEduView . java
added handling for UpdateRegionLocation in ConfigPhysicalPlan and updated logging statements in RegionMigrateProcedure and DataNodeInternalRPCServiceImpl to improve region
added a new file ` FileDialogLeakTest . java ` to test the garbage collection of ` FileDialog ` to ensure that the application
hbase - 16400 move testopentableregioncoprocessor to hbase . coprocessor package ( addendum
trufflefeature : add support for uninterruptible method .
[ hotfix ] [ protobuf ] [ table - common ] fix incorrect usage of splitappender
updated the condition to check if ' disi ' is not null before comparing it to ' null ' to ensure that ' disi ' is
fix flakey fakemediastream to always refresh the sourceinfo
added JVM _ SPEC _ VERSION and JVM _ MINIMUM _ JAVA9 constants to determine if the Java version is minimum to ensure compatibility with Java
updated FileReporter instantiation to explicitly cast null to String or File to ensure proper type handling for null inputs
changed the condition from checking for end - to - end encryption keys to checking if it exists to ensure accurate validation of end - to - end
added functionality to display the home button and show the home button in the action bar to enhance user experience by allowing navigation through the action bar
added support for GET _ USER in RpcServlet and updated protocol version from 5 to 6 to enhance user management capabilities in the application
added @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to ensure compatibility with different architecture configurations
replaced the variable ` startClass ` with ` originalStartClass ` in ` WhiteboxImpl . java ` to improve clarity by using
updated exception message and added local registration for parameter register number in DexBody . java to improve clarity of error reporting and enhance debugging information
replaced ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl . java
[ drools - 1340 ] fix the look and feel in the nurserootingpanel when the nimbus look
update version string replacement in AppPage . java to ensure consistency in version string formatting
refactor animation listeners in LauncherAppTransitionManagerImpl to use local variables for alpha and translation to improve code readability and maintainability by
dumpedprivatekey : improve exception message
fix editofferdatamodel to use newofferpayload instead of offerpayload . getextradatamap ( )
updated milestone parameters initialization in TicketPage . java to handle open and repository scenarios more effectively
fix ( wood pipe ) : set the pipe battery to 80x0
added ` blueprintName ` and ` blueprintRev ` parameters to ` getClusterKey ` and ` getStateMachineClusterInstance ` methods to enhance functionality by
initialized the ` downgradeAllowed ` variable to ` true ` in ` UpgradePack ` and added a test for it in ` UpgradePackTest
updated XML entity scanning methods to use NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to improve clarity and specificity in
add a configuration option to emulate system load
refactor sorting logic to use a dedicated comparator for app and widget names to improve code readability and maintainability by centralizing sorting logic
added closeEntry ( ) and refactored file creation logic in FatJarStarter . java to ensure proper resource management and avoid potential
updated the ` doTest ` method signature and assertion message format in ` TestSecretKeyCredentialHandler . java ` to improve clarity of test output
camel - 1369 : camel - core - optimize routebuilderfinder to use spring context to avoid reflection
[ flink - 12245 ] [ doc ] clarify the description of ` ` metric . reporter . interval ' ' and `
hbase - 13426 testfulllogreconstruction fail on the ci - server because of a race condition in testfulllogre
added reuseAddress property and its getter / setter methods to DatagramSocketOptions to enable configuration of reuse address reuse for DatagramSocket instances
make shutdown message in glowserver clearer ( # 712 )
[ java ] delete deprecate locatable interface ( it ' s not use anymore )
updated error messages in VersionInfo . java to clarify that the field must be either indexed or have docValues and retrievable to improve
rename ` equalityPredicateColumns ` to ` predicateColumns ` for clarity and consistency to improve code readability and maintainability by using a more
reformatted code in HandshakeHandler . java for improved readability to enhance maintainability of the code
updated string concatenation in Navigator . java to improve readability of the code
changed visibility of constants in RecordReaderFactory from private to package - private and added a new test class in RecordReaderFactoryTest to enhance access
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and created corresponding unit tests to enhance
refactor group by expression handling in CalciteSqlParser to improve clarity and maintainability of group - by clause validation logic
replaced unsupported operation exception with a cleaner method in MappedByteBuffer and added buffer reference counting functionality in FileChannelLinesSpliterator to improve memory management
refactor code to use a local variable for the validator object to improve code readability and maintainability
added a schedule method to CircuitBreakerImpl and modified test cases in CircuitBreakerTest to utilize a ScheduledFuture for better timeout management to improve
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent configuration by
updated configuration key from " ajax " to " progressbar " in SubmissionController and FileUploadRequest classes to improve clarity and consistency in naming
changed the display name of the test from " Retrieve view column privileges " to " Retrieve column privileges " and added a @ Disabled annotation to disable
added synchronized keyword to ` addExportedCount ` and ` getExportedCount ` methods to ensure thread safety when accessing shared resources
updated import statement to use IntRangeUtil instead of IntRangeUtil1 to ensure compatibility with the latest version of the invariant utility
updated character validation logic in HttpParser and added unit tests in HttpParserTest to improve error handling for illegal characters and enhance test coverage for encoded
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` in ` ConfigurePagerActivity . java ` to align
updated log message format in SLWTTextListing . java to include the position of the document to improve clarity of log output for
updated the ` ForceLeaderTest ` and ` HttpPartitionTest ` classes to implement a new test class ` ForceLeaderWithTlogReplicas `
updated Thread class to improve thread management to enhance performance and reliability of thread execution
refactor template file suffix constants in AbstractConfigurableTemplateResolver to improve clarity and organization to enhance readability and maintainability of template file identification
camel - 16400 fixed the c error of camel - cxf
reformatted code in YamlRepresenter . java for consistency to improve readability and maintainability of the code
updated date formatting in ToChar . java to use String . format for better readability to ensure consistent formatting of dates in output
added support for validating transaction names and write IDs in GenericUDTFGetSplits . java to enable validation of transactions and write IDs in the
updated debug log messages for clarity and replaced empty list initializations with Collections . emptyList ( ) for clarity to improve code readability and
bug fix for issue 163 : miss ` ` initial available ' ' action
http : / / issues . apache . org / jira / browse / amq - 65543 - fix sstdeserializer to
refactor default grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant to improve code readability and maintainability by central
updated the description of the " diff " field in Platform . java and its test in ComparisonFailureWithFieldsTest . java to clarify
added a ` waitingForKeys ` field and updated related logic in ` DecoderInputBuffer ` , ` ClippingMediaPeriod ` , and
updated API paths in OkexV3 . java from " / api / margin / v3 " to " / margin / v3 "
updated boundary checks in LineUtilitiesTests . java to use subtraction instead of addition to improve accuracy of line boundary comparisons
updated the variable argument handling in JavacParser and added new classes for varargs and old array syntax to improve error logging for better debugging and
add warn log if defaultdrmsessionmanager be use on wrong thread
added support for parsing method calls in VariableContext . java and corresponding unit tests in TestVariableContext . java to enhance functionality and ensure correctness
added tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure that the parser correctly handles invalid JSON formats and
update buffer limit calculation in Piece . java and modify sharing message capacity calculation in SharingPeer . java to improve buffer management and ensure
added HttpClientProperties and updated NettyRoutingFilter and RetryGatewayFilterFactory to include response timeout handling to improve response management and provide better error reporting
refactor CxxLibraryFactory to use NativeLinkTarget instead of NativeLinkTargetGroup for improved type safety to enhance code clarity and
camel - 16400 : camel - main - should be able to load rest configuration from classpath - add unit test
added support for handling RexFieldAccess in the ASTConverter and RexNodeConverter classes to enable conversion of field access information for improved
added a static final array for query log entry values and refactored the loop to use this constant to improve code readability and maintainability
fix npe when use proxy . noproxy ( ) .
refactor PKCS12KeyStore to simplify certificate handling and improve clarity to enhance code readability and maintainability while fixing potential null pointer exceptions
added reflection access checks and refactored related methods in NativeObject , Bootstrap , and ReflectionCheckLinker classes to enhance security by ensuring proper
removed the ` public ` access modifier from constructors of ` CollisionMap ` to enhance encapsulation by restricting access to the constructor
mark the method ` getRawInputFromTransactionInput ` as deprecated and add a null check for the ` TransactionInput ` parameter to indicate that the
refactored log level handling from if - else statements to a switch statement in ConfigurationValueConverter . java to improve code readability and maintain
server : remove region _ id param from user , system and system account
patch from josh from bug # 60284 - handle encryption exception for old excel file
[ gr - 31781 ] add -- add - exports = all - named to mx - java - benchmarks .
removed an unnecessary else clause when setting the visibility of the image in TimeLineCursorAdapter . java to streamline code by eliminating unnecessary
increased the timeout duration for the scheduler from 10 seconds to 50 seconds to allow more time for attempts to complete before timing out
modify the handling of file creation and deletion in ShadowContext . java and add a new method in ContextTest . java to improve directory management and
replaced custom ExceptionFactory implementation with Java ' s Class . forName ( ) method for improved type safety to enhance code readability and reduce
increased the WAIT _ TIME _ MS constant from 10 , 000 ms to 60 , 000 ms to improve the responsiveness of the
updated import statements and added audience handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance functionality by allowing audience claims to be
( chore ) camel - kafka : remove default value for breakonfirsterror
added a new constant ` selectableItemBackground ` with a value of 0x10a13 to define a specific background color for item selection in
consolidated multiple import statements for trade - related classes and added a placeholder method for placing stop orders to streamline import statements and implement
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type is assigned when record is null
move the resumeablerandomaccessfilehandler into a separate class so it can be use by the http - client
changed the class name from AccessLogValve to AbstractAccessLogValve to clarify the purpose of the class being loaded
added support for setting the size of FormatRecords in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
updated the condition for determining compression chunk length in CompressedInputStream . java to ensure correct handling of compressed lengths during input stream processing
camel - 16400 : camel - spring - data - redis - add idempotent base on user forum issue .
fix vanilla metadata not be use in containerrepair . close # 3321
[ mng - 5331 ] fix legacylocalrepositorymanager to work with local layout
added checks for task manager initialization and improved error handling in the LocalInstanceManager and TaskManager classes to enhance robustness and provide better error
added configuration options for deploying files in AbstractArtifactResolutionException to improve clarity and provide guidance for deploying files in the application
replaced ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and added a new method ` getInternal
updated imports and refactored the ` findByEntries ` method in ` FeedEntryStatusDAO ` to use Google Commons collections to improve code
added thread execution logic in ContextImpl . java and improved test cases in BlockedThreadCheckerTest . java to enhance thread management and ensure
updated method signatures and added null check for formatter arguments in FormatterConverter to improve error handling and provide clearer feedback when no output arguments are provided
updated file input stream handling in LoadContactsTask . java to support different Android SDK versions to ensure compatibility with devices running Android O and above
replaced setter methods for remote address and hostname with direct assignment to improve code clarity and reduce redundancy
added a null check for shadowClass annotation in Robolectric . java to ensure that shadowClass does not be annotated with @ Implements to
added a check for ` tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory `
updated imports and added a new test method to validate SSL exception handling to ensure that the server correctly identifies and throws SSL exceptions for secure connections
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve encapsulation and provide access to these methods within the class
refactor event handling in PageChangeListener and FrameRenderer for improved clarity and structure to enhance maintainability and readability of the code
updated warning message in CommunicationsManager to reflect SMS configuration instead of email to clarify the reason for sending messages related to email settings
# 527 - enh : add draft query optimization for @ draftable
add workaround for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 51039
doc : fix checkstyle issue in util / executablefactory . java and zipfolder . java
doc ( core ) : fix doclint warning in javax . management
use current working directory when attach a file ( # 3649 )
added LoadOptionsBuilder and updated SchemaCrawlerOptionsBuilder to include schema info level to enhance configuration options for schema loading in tests
[ gr - 11932 ] fix test to run on jdk 9 + .
replace exception throwing with returning null for unknown operation names to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty . java to enhance property management by associating properties with their respective states
refactor ConnectionInfo usage to use try - with - resources for better resource management to ensure proper resource cleanup and avoid potential memory leaks
[ hotfix ] [ stream ] fix typo in datastreamjob
refactor error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid potential resource leaks
( chore ) camel - cxf : avoid cxf dependency on cxf - core
added a condition to return true for H2 - 14 protocol in HTTP2ServerConnectionFactory . java to ensure proper handling of the " h2
updated method symbol handling and introduced parameter symbol management in LambdaToMethod . java , modified lambda detection logic in ClassFileVisitor . java , and modified
fix a bug in the coordinationtransformer where the copular word do n ' t match
increase timeout for dl4j inception v3 .
added a method to set the slop of the phrase in the mpq to improve the accuracy of phrase slop during query parsing
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time
updated the port number from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
fix ( freezev2 ) : re - enable gamescheduler . scheduleparallel
added a condition to check if edit options are available before showing the compound view to ensure that the UI only appears when edit options are available for
updated the ` progress ` calculation in ` DepthController . java ` to ensure it does not exceed a maximum of 1.1 progress to improve
remove dead code from session . packetreceived ( )
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
[ pantheon ] add ` ` hidden ' ' flag to enable account level permission
added a method to exclude " CoroutinesRoom $ Companion " from instrumentation in AndroidConfigurer to ensure that specific classes are not instrument
changed the access modifier of the ` isSupported ` method from private to public to allow access to the ` HttpCallerInfo ` class from other classes
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the code by eliminating unnecessary method
camel - 16400 : fixed thread issue with camel - core and camel - jmx
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added conditional logic to handle tags and open and close MC blocks in PdfDocument . java to ensure proper functionality when writing tagged images in the PDF
log4j2 - 1343 add test to reproduce bug in patternselector .
simonstewart : allow the ie browser to run in hta mode
updated the thank method to use MwThankPostResponse instead of MwPostResponse and created a new MwThankPost
added a new ` SocketBased ` interface and updated ` ChannelEndPoint ` and ` SslConnection ` classes to implement it to enhance socket management capabilities
updated revokingStore initialization and size settings in Manager . java to improve clarity and functionality of revoking store management
added new test cases for implicit join scenarios in HQLTest . java to ensure correct behavior of HQL queries with implicit joins
added line normalization for expected and actual text in NonVisualRegressionTest . java to ensure consistent output formatting across different operating systems
modified the handling of file references in IndexWriter and added assertions for unreferenced files in MockDirectoryWrapper to improve file management and enhance test coverage
removed the ` final ` modifier from several methods in ` BaseError . java ` and added ` @ Final ` annotation to improve method accessibility
added validation for user resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the percentage is within a valid range of 100 to
added a condition to check if the old login should be shown based on a resource boolean to ensure compatibility with legacy login functionality based on user preferences
rename class ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in naming
updated response page logic in EditTeamPage . java to ensure correct navigation to users page when editing team data
updated debug log message for plugin credential initialization failure to improve clarity of error reporting during startup
refactor connection management to ensure server socket channel is properly closed to improve resource management and avoid potential memory leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future feature additions
refactor dynamic partition specification logic into a separate method to improve code readability and maintainability
mow - 129 use round _ half _ up _ factor instead of round _ half _ hack for scientific format
added a visitDirectory method to JarDirectoryStep and its implementation in DirectoryTraversal to enhance directory traversal functionality for better directory management
added a new file ` JWKSetEditor . java ` to implement a customizable JWKSet editor for text input
removed the minTerm and maxTerm parameters from the finish method in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter classes to streamline
add workaround for miss method . getparameterklasses ( ) . resolveparameterklasses ( ) .
changed the default value of " fetcher . threads . per . host . by . ip " from true to false to disable IP fetching for better
updated conditional checks for queryTimeout and transactionTimeout in StatementUtil . java to improve error handling and ensure valid timeout values are validated
added handling for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest to ensure correct generation of target
refactor ReplicaPosition class to improve code readability and maintainability
server : fix network stats update delay in case it be incorrect .
updated interpolator usage in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a final frame instead of a hardcoded value to improve
adjusted swipe length calculation for navBar visibility based on display density to improve user interface responsiveness by adjusting swipe duration based on device
added a new module - info . java file for the org . eclipse . jetty . http3 . server module to define module dependencies
fix for act - 1331 : fix nullpointerexception in jsontype . tostring ( )
simplified the assignment of the ` ctx ` variable in ` ResourceResolverBean . java ` to improve code readability and maintainability
[ hotfix ] [ config ] change default value of tolerable _ failure _ number to 0
updated method parameter names and added package annotation handling in InnerClassesTable . java and InnerClassesTableTest . java to improve clarity and functionality
added spaces around the system property key in the command string to improve command formatting for better readability
replaced FluentIterable with Java Streams for file listing in ChromeTraceBuildListenerTest to improve code readability and leverage MoreCollectors for
[ 3.0 ] enable registration of dubbo service via the registry ( # 9011 )
close otr session if security mode be disabled
added outline size and transparency properties to NodeLabelRenderer and modified renderProcessing method to accept these properties to enhance graphical rendering capabilities for node labels
refactor ProxySelector , URL , and URLStreamHandler classes to improve code readability and maintainability
updated a boolean value from false to true in the Win32FontManager class to correct the behavior of font management functionality
added null check before visiting the view in TreeVisitor . java to avoid potential NullPointerExceptions during execution
do n ' t use gethandlingpolicy ( ) in jdtbatchcompiler when there be no classpath .
added methods for setting and getting content alignment point and text anchor in LabelBlock . java to enhance label rendering flexibility by allowing customizable text
refactor methods in Class and Parameter classes to improve code readability and maintainability
refactor IndexReader to improve code readability to enhance maintainability and facilitate future feature additions
replaced boolean isLoopback with Boolean isLoopback and added null checks for networkInterface to improve performance by avoiding unnecessary object instantiation
updated the ` fromRfc1123DateString ` method to include a ` Locale ` parameter for consistent date formatting to ensure consistent date formatting across different
fix flaky test : filedownload via proxy do n ' t download . pdf file
nifi - 2262 : add an option to output a flowfile even if no hit be find for query .
cloudstack - 2309 : fix bug in quotamanagerimpl . updatetransition ( ) and updatetransfer
[ java ] fix race condition in election . getworkcount ( ) .
do n ' t close the directory stream in readfilesp # processfile ( )
simplified the logic for determining if a widget should be skipped based on the item state to improve code readability and maintainability by redu
added an ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook
added error handling around unregisterInvalidatedSessions ( ) in PluginMonitoringFilter . java to improve robustness by logging exceptions during session checks
refactor CategorizationFragment class to improve code readability and maintainability
updated the status message from " reachable = false " to " not reachable " in HueLightHandler . java to clarify the status
add a ' loading ' flag to fmlclienthandler and make it accessible from fmlclienthandler .
updated return statements in UI . java and BlockInventoryFragment . java to use a localized string for mil and k units to improve localization support
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code clarity and
added parameterized tests for SQL queries using reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to enhance test coverage
added tests for JSON serialization and deserialization of nested maps in MapTest . java to ensure correct handling of nested maps in JSON format
added bounds checking for x2 and y2 in GeometryUtils . java to ensure correct positioning by applying offset when x2 is less than
refactor FileDisplayActivity and ReceiveExternalFilesActivity to use a new SortingOrderDialogFragment for sorting order management to improve code clarity
improve error message if no testplan can be find
refactor ` GeneratedEntityTranslator ` , ` JdbcManagerSupportImpl ` , and ` JdbcmsType ` to use ` Lazy ` for lazy
updated the handling of the ` argIdent ` to include null checks based on type and mode to improve robustness by ensuring ` argIdent `
fix camel - jetty to use the actual http protocol instead of a hardcoded one .
set displayVolume to true in VolumeVO . java to enable volume display functionality by default
modified the Javah version method to accept a boolean flag and updated the return statement accordingly to improve flexibility in version retrieval based on whether the
updated condition checks in ChangeLogParameters . java to handle global change logs more accurately to improve the logic for identifying global change logs and ensure
changed log level from warn to debug in jtatransactionmanager . findtransaction ( )
hhh - 14729 skip test on oracle due to bug in basicformatterimpl cause exception during sql string formatting
updated sslSocket initialization and timeout settings in Connection . java to ensure proper socket timeout management during connection establishment
updated action bar size calculation in multiple fragments to account for popup state to ensure proper layout behavior for non - popup users
changed the default value of the CHA option from false to true in EspressoOptions . java and made classes final in DefaultClassHierarchy
http : / / issues . apache . org / activemq / browse / amq - 2638 - apply patch with thanks
refactor JodaTimeRangeRandomizersTest to use assertJ for improved test readability and maintainability to enhance test clarity and
updated resource redirection logic in WebDescriptor . java for Jakarta EE 9 and Jakarta EE 9 to ensure compatibility
fix : add readiness . isready ( ) to check if a node be ready
updated loop to iterate over handler ' s endpoints instead of liveEndpoints to ensure correct iteration over the handler ' s endpoints
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of RPC in
added security checks before accessing the caller class and type in ObjectStreamClass and ObjectStreamField to ensure proper access control for security - related classes
removed unused imports and modified return statements in Utils . java , while updating UGSCommandCount in XLCDCommunicator . java to
refactor DefaultMetricsTagProvider to use a HashMap for tag storage instead of an ImmutableMap to improve code readability and maintainability by utilizing
danielwagnerhall : fix test break by previous commit .
change default logging level from OFF to ERROR in opt2 to improve error reporting for better debugging
changed instance variables to be final in IconNormalizer . java to ensure immutability and improve code readability
added support for a boolean flag ` firstCallPrepareDo ` in ` PrepareInterceptor ` to control the execution of preparation methods based on the `
refactor methods in Launcher and Workspace classes to improve focus handling and state management to enhance code clarity and ensure correct behavior when navig
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature ` and ` Auth `
added a ` ignoreInvisibleAssociations ` parameter to the ` incomingAssociations ` method and updated its logic to conditionally ignore invisible associations to enhance
remove private ip from storage _ pool _ capacity _ type _ private _ ip table when host be delete
added basic usage section for diagram and linux 4.6 + in ProfileServlet . java to provide users with guidance on how to run the
added a new class ` RequiredRefFieldModel ` and updated ` ModelResolver ` to handle required fields correctly to improve the handling of required fields
rename ` CasCoreStandaloneBootstrapConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreStandaloneBootstrapAutoConfiguration ` across
refactor FeatureFlags class for improved clarity to enhance code maintainability and readability
updated string construction and variable names for clarity in ConfigStore . java and modified UUID generation logic in CommonSetup . java to improve code read
added image drawable handling for images in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper image display when a picture is present
updated comments for compaction means on full CRUD tables to clarify that compaction on insert - only tables will always run via queries regardless
added a null check for the storage path before verifying if the waiting message is down to ensure stability by preventing potential null pointer exceptions
replaced resize threshold checks with a new method ` checkResize ( ) ` across multiple classes to improve resizing logic and enhance code readability
renamed LDAPConnectionService . java to improve clarity to enhance code readability and maintainability
camel - 16400 : camel - aggregate should use @ deprecate instead of @ xmlattribute
removed unnecessary debug tracing logs from TouchInteractionService and RecentsAnimationDeviceState to clean up the code and improve performance by eliminating
added a condition to check if the class name starts with " com . intelliJ IDEA build 193.2956 .
replaced occurrences of ` hits . length ( ) ` with ` hits2 . length ( ) ` and ` hits3 . length ( )
added a new file LucenePackage . java that defines a private constructor and a static method to retrieve the Lucene package to facilit
update sizeInBytes increment logic in RAMDirectory . java to ensure correct handling of negative size values
added an estimate method to the GenericUDAFBloomFilter and GenericUDAFEvaluator classes , and made several variables final in the GenericUD
added a null check for the drawer toggle before animating the slide to prevent potential NullPointerException when the drawer toggle is not initialized
added a ` @ SuppressWarnings ( " unused " ) ` annotation to the ` convertToAuthentication ` method in ` DefaultAuthenticationAdapter . java ` to
added logic to disable system JARs and modules based on class loader conditions to improve flexibility in class loading behavior for different class loader implementations
add ` ` corporate ' ' to the author list when export to iso - 8859 - 1
added a method to cancel recovery for SolrCoreState and improved logging in CoreContainer . java to enhance core management and provide better error handling
replaced System . currentTimeMillis ( ) calls with a custom currentTimeMillis ( ) method for better readability and performance measurement to improve code clarity and
modified the logic to click on the first tab if found is not null and has a single tab to enhance user interaction by allowing selection of multiple
update documentation for connection parameter in PGProperty . java to clarify that the connection parameter accepts a boolean value of ' true ' or '
added security - related fields and modified the SecurityExpressionRoot initialization in SecurityEvaluationContextExtension . java to enhance security configuration and ensure default values are
added a check to set exponentSize to primeSize - 1 in DHParameterGenerator . java to ensure exponentSize is correctly initialized when it is
replaced the use of ` ocLocalFolder ` with ` FileStorageUtils ` for obtaining file usability to streamline code and improve
replaced delegate . combine with accumulate in DistinctSqlAggregation . java and added a test case in DistinctSqlAggregationTest . java to
added a test method to the UserServiceTest class to verify the execution of post - login activities on successful authentication to ensure that the login process
extractorspanishstrippedverb now accept a dictionary path .
modified the character array handling logic in CharArraySet . java and added a test method in TestCharArraySet . java to improve code clarity
refactor track count validation in muxerWrapper to use checkArgument for better clarity to improve code readability and ensure only valid track types are
replaced instances of ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule ` and ` JsBundleDescriptionTest
added UTF - 8 character encoding support and refactored string comparison logic in StringDictionary . java to enhance character encoding handling and improve performance in
renamed " Logical Analyzer " to " Logic Analyzer " and updated resource references accordingly to improve clarity and consistency in naming conventions
added instanceClassName and instanceClass variables to optimize vector instantiation to improve performance by avoiding unnecessary class loading
removed syncMetaLeader ( ) method from CMManager . java to improve performance by eliminating unnecessary synchronization
show ` ` no response ' ' instead of ` ` miss response ' ' in contribution question detail
added TestLoggingExtension import and annotated DiagramRendererTest class to enable logging capabilities for test cases
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : camel
[ miio ] add support for viomi internet electric water 1a ( 60 )
refactor SSL session data retrieval to use a local variable for better readability to improve code clarity and reduce redundancy in accessing SSL session
added a new file CreateNewSpreadsheet . java to create Excel sheets with specified text and comments to facilitate the creation of sheets
replaced Duration with long for TTL and time - to - live properties in CacheProperties and RedisCacheConfiguration to improve clarity and consistency in
updated content URIs to use CONTENT _ URI _ NO _ NOTIFICATION and replaced CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION to
updated the testCompile group version from ' 2.14 . 0 ' to ' 2.27 . 2 ' in SwaggerResolveTest . java
updated synchronization from lucidaFontName to this in SunFontManager . java to improve thread safety by using the current object instead of
added a condition to check if the character is ' < ' before validating the length of ' ltLen ' to ensure proper handling of HTML character
replaced String . format with direct string retrieval in Workspace . java to simplify string formatting and improve code readability
added import for Scope and sent a message when no validation errors are found in ValidateCommandStep to provide user feedback when no validation errors are found
updated imports and added a method to configure web resources in IntegrationTestContextLoader . java to enhance resource loading capabilities for better application context management
updated component handling logic in multiple classes to improve responsiveness to enhance user experience by ensuring correct scrolling behavior when a component is interacting with
corrected spacing in the conditional statement for UUID type checking to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures and variable types to use ` String ` instead of ` Long ` to improve cl
replaced occurrences of " $ 1 " and " $ 2 " with " $ 1 " and " $ 2 " in the expression to ensure
simonstewart : make the regex a little more lenient .
mondrian : fix typo in mondrianproperties . java
added error logging for thread startup failures and updated permission checks for launcher files to enhance debugging capabilities and ensure proper file permissions are enforced for launcher
tumblr : remove test that be n ' t actually need
added a conditional check for symbol slots before converting storeType to ensure that the conversion only occurs if the symbol has a valid slot for storeType
modified the initialization logic of ` ContainerMediaChunk ` and ` InitializationChunk ` to utilize a conditional check for ` nextLoadPosition ` to
replaced the import of ` IndexWriterConfig . OpenMode ` with ` PrintStreamInfoStream ` and modified the initialization of ` IndexWriter `
tika - 1344 -- add support for dynamic service loader , and add a dummyparser class for use in tikaconfig
updated imports and added logic to handle package - info comments in DocLint . java to improve error reporting for unexpected source comments in package - info
added a new import command constant and modified the conditional check in DataImportHandler . java to include an additional check for the IMPORT _ CMD constant
added a new test method to verify that inner classes cannot be modified when ignoreDefinition is true to ensure correct behavior of the ` ChangeType `
removed unused import of android . util . Log in JettyService . java to streamline code and reduce unnecessary dependencies
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated its usage throughout the code to enhance
simonstewart : add ` ` / quitquitquit ' ' and ` ` / quitquitquit ' ' to jetty7
[ zeppelin - 5271 ] fix npe in luliregmentsegmentdatamanager . transform ( )
added a check to skip processing if the operating system is Windows to optimize performance by avoiding unnecessary processing of Teredo display names
fix nullpointerexception when try to add contact without a protocol provider .
updated the registration method for user details service factory in AuthenticationConfigBuilder . java to improve clarity and maintainability of the registration process
fix issue where fastbitmapdrawable be not scale the draw into the correct bound .
remove ` ` ( ddmmyy ) ' ' from meitrack and totem protocol
changed the access modifier of ` getFontPath ` methods from public to protected and updated its usage in ` SunFontManager ` and ` X11
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these elements are outdated and should not be used
fix exception handling in clientmapstoretest [ hz - 2331 ] ( # 2334 )
add an option to keep empty sentence in the sentiment pipeline
modified the ` createArtifactSubdirectory ` method to return a boolean indicating success and updated error messages for clarity to improve error handling and provide
removed unused imports and refactored the ` javaLanguageServer ` to use ` JavaCompilerService . NO _ MODULE _ COMPILER `
fix npe in directagentattache when resource return null
do n ' t swallow exception in sendemail ( )
add a check to make sure we do n ' t try to remove an item from the inventory if it be n ' t need .
refactor DateFormatEvaluator and related classes to accept a Locale parameter for parsing mathematical expressions to improve flexibility in handling different locales during
added a boolean field ` includeDecals ` and its getter / setter in ` StorageOptions ` , and introduced a JCheckBox for enabling
updated generateDocumentation method to include a null parameter in Liquibase . java and added a suppression annotation in getImplementedDatabases method in
updated the handling of performance logging in HiveProtoLoggingHook and improved test assertions in TestHiveProtoLoggingHook to enhance logging accuracy and
corrected a typo in the log message from " Begining " to " Beginning " in multiple files to improve clarity and accuracy
updated the version check in ignoreRecordAttribute to include the major version to ensure compatibility with different Java versions
added a new file ` LdapPasswordAuthenticationTest . java ` to test LDAP user authentication functionality to ensure correct handling of user attributes in the LDAP
replaced OrcInputFormat with BasicStatsNoJobTask and updated the conditional check for footer scan usage to improve code clarity and ensure
fix an npe in flutterreloadmanager ( # 5371 )
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
fix # 530 : make informer stop more robust .
updated conditional checks in EdgeDataTable . java and NodeDataTable . java to include dynamic number column support to enhance flexibility in handling dynamic number lists
added null checks using ` Objects . requireNonNull ` for groupId , artifactId , and version in ` ResolvedGroupArtifactVersion ` and ` ResolvedGroupArtifact
update api assignment logic to handle null values to ensure fallback to default when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added shader loading and disposal functionality in FlameRenderer . java and modified PhotoPanel . java to use GL _ DIFFUSE to improve
updated method editor scene height from 460 to 520 and added context menu functionality in InsnListEditor and InsnProxyListEditor to
added bounds checking for character indices in CSSParser to prevent potential ArrayIndexOutOfBoundsException during parsing
added a check for the " isLookAndFeelDecorated " property and set the default look and feel to true if it is
removed unnecessary ' EXISTS ' clause from SQL query and simplified variable access in HostRoleCommandDAO to improve code clarity and eliminate unnecessary ' this
updated F2 _ TEST , F5 _ TRANSPONDER _ TEST , F5 _ TRANSPONDER _ TEST _ REPLY , and
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to utilize color storage functionalities instead of
refactor String class to improve code readability to enhance maintainability and facilitate future feature additions
removed unused SLF4J logger imports from multiple Java files to clean up the code and improve maintainability
added a method ` getGlobals ` to return an array of ` Entry ` objects in ` MapGlobalResolver ` to provide a way to
added tests for the sendcoin method in MultiSign34 . java to ensure that the sendcoin function behaves as expected for the witnesses
test : migrate cufiltertest to junit 5 ( # 4352 )
replaced hardcoded newline with a dynamic path separator in JavadocReport . java to ensure consistent handling of file paths across different operating systems
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow the method to be accessible from other classes
added assertions for presence of fields in the metamodel for fields ' id ' and ' name ' in AbstractEntity and Person classes to ensure that
removed the configuration parameter from Outlink constructor calls across multiple files to simplify the code by eliminating unnecessary configuration parameter
removed the ` LexicalContext ` parameter from several methods in the ` ensureUniqueNamesIn ` and ` copyFinally ` classes to simplify method
added imports and modified return statement in ` UseLambdaForFunctionalInterface . java ` and added a check in ` TypesInUse . java `
removed the call to appendClassSelector when adding class filesets to simplify the code by eliminating unnecessary method calls
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary
[ 1.19 . x ] fix npe in registryevent cause by miss mapping
removed redundant lines setting x3 and y3 in Intersector . java to streamline code by eliminating redundancy
added default methods ` sbeDecodedLength ( ) ` and ` sbeLimit ( int limit ) ` to ` MessageDecoderFlyweight
updated Elasticsearch container version to use a dynamic version instead of a hardcoded version to improve flexibility and maintainability of the test environment
fix arrayindexoutofboundsexception when parse torrent message .
added version ID handling and improved cluster name management in the ClusterDefinition and GSInstallerClusterProvider classes to enhance version management and ensure consistent
camel - 14263 : camel - ftp should use source code generate configurer to avoid reflection
[ zeppelin - 1346 ] add dependency resolution and test case
updated local variable assignment logic in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest .
added a check for ` targetCertConstraints . getBasicConstraints ( ) ` in ` ForwardBuilder . java ` and created a new class ` Build
added ` initAfterFirstDbConnection ` method to ` JdbcPostgresqlDAO ` for database initialization and upserting values to ensure compatibility with PostgreSQL
added a maximum message size limit for WebSocket connections and introduced a validation for input buffer size to ensure that WebSocket connections do not exceed expected limits and
replaced boolean flags for undeleteAll and rollbackUndeleteAll with clearDeleteCount and assert statements in SegmentReader . java , and added
updated null checks for scopes in ClientRegistration . java and modified test cases in ClientRegistrationTests . java to improve error handling and clarify
added null checks for orderBy and orderBy before setting parameters in CartesianProductStream to prevent potential NullPointerExceptions during execution
[ java ] use hamcrest assertion instead of junit in clusterentrypointtest
cloudstack - 5369 : do n ' t delete vm snapshot when vm be in stopped state
modified the initialization of HiveLog4j to store the result of LogUtils . initHiveLog4j ( ) before logging to improve
added a check for empty tasks before accessing the first element of the tasks list in AssetManager . java to avoid potential NullPointerException when accessing the first
openpgp : change deletenode ( ) to return a boolean instead of void .
fix bug in tskvlatestentity , use id instead of id for delete event
added checks for empty or null barcode results in Code128Reader , Code39Reader , and FalsePositivesBlackBoxTestCase to ensure that
replaced TreeSet with LinkedHashSet for storing CipherSuites to maintain insertion order for cipher suites
refactor character validation logic in Escaper . java and update expected string in InternationalizationTest . java to improve clarity and correct
updated SQL provider method checks and modified return type handling in ` ProviderSqlSource ` and ` SqlProviderTest ` to improve type safety and enhance
refactor aliasChildren initialization and null check logic in InternalMNode . java to improve robustness by avoiding potential NullPointerExceptions when aliasChildren
added a method to calculate the layout transition offset for a specific page in PagedView . java and updated scrollDelta calculation in Workspace . java
renamed ` synthetic ` to ` pruned ` in ` JavaTemplate . java ` and updated variable names for clarity to improve code readability
added method . setAccessible ( true ) to WidgetInterceptor . java to ensure the method is accessible for accessibility
added a condition to set literal initializer based on the presence of " database . server . id " in the fieldConfig to ensure that the literal
replaced Macintosh and Intel Mac OS X 10.7 with Windows NT10.0 and AppleWebKit / 537
added a web interface menu item to browse a specific server URI to enhance user experience by providing direct access to the server address
refactor value handling in HandleGetter and related classes to improve clarity and maintainability to enhance code readability and reduce redundancy in value
added exception handling for Record creation in EncryptedSlideShow . java to improve robustness by preventing crashes due to ArrayIndexOutOfBoundsException
updated debug log messages and improved path resolution in FileCheckpointIO and MmapPageIO classes to enhance clarity of log messages and ensure
do n ' t call before avatar postload to avoid nullpointerexception
updated Docker image version from " sshd : 1.0 . 0 " to " sshd : 1.1 . 0 " and added
added a large object array and forced garbage collection in ThresholdTest . java to ensure proper memory management and prevent potential memory leaks
updated log level checks and added new debug logging statements in StdErrLog . java and StdErrLogTest . java to enhance logging functionality and
fixed - rremoteservice . getremoteservice ( ) method do n ' t work correctly if remote service name be specify . #
added methods ` isSelected ( ) ` and ` setSelected ( boolean emblem ) ` to ` MultiButton ` class to enable toggling of
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align with the new playback
[ hotfix ] [ runtime ] remove redundant code in brokercontroller
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection management to improve resource management and ensure proper closure of connections
updated the background color handling in ProgramGridCell and Utils classes to use a new method for retrieving the current theme color to improve code maintainability
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
removed multiple type adapters registration for various artifact types in ToolingApiLauncher . java to streamline type adapters for improved code maintainability and
updated parameters in TestPayloadCheckQuery . java for consistency to improve code clarity and maintainability
refactor ConsoleReader to streamline character handling and improve readability to enhance clarity and maintainability of the code
added user context handling and command line output in BaseCommand . java to enhance user experience by providing context - specific information during command execution
rename org . graalvm . compiler . test to org . graalvm . compiler . api . test to avoid conflict with org .
[ hotfix ] [ runtime ] remove unused constructor in slotsharinggroup
updated the condition for creating ` VersionSpecific ` in ` StreamExInternals ` and modified the ` hasDropWhile ` check in ` Stream
updated texture files in DecalTest , MusicTest , and SimpleDecalTest from " wheel . png " to " sys . png
updated IntentFilter registration and receiver registration in Launcher . java to ensure proper management of the closing system dialogs receiver
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency in code formatting
added a boolean flag ` allowIntrospection ` to ` ClientDetailsEntity ` and modified client introspection logic in ` ChainedTokenGran
replaced direct calls to ` write ` with ` write ` and added ` htmlEncode ` method for HTML encoding to enhance security by preventing
added ` @ link ` annotation to ` PhrasePrefixQuery ` and ` SpanQuery ` in ` Query . java ` to improve clarity
replace size ( ) = = 0 with isempty ( ) in commentsinserter and commentsparser
replaced the method ` isLiteralString ` with ` isThisElementAnOperandInABinaryStringConcatenation ` and added a null check
changed parameter types in several methods from ` A ` to ` Object ` across multiple classes to improve type flexibility and compatibility with various object types
updated the package and type of ThrowingFunction from ` lambda ` to ` exception ` to better reflect the purpose of the interface and improve type
added getter and setter methods for the uploaderBehaviour in AppPreferences and refactored related methods in PreferenceManager to improve code clarity and
fix ( noclassdeffounderror ) : fix ( noclassdeffounderror ) in javaprettyprinter .
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s testing framework
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a new parameter ` c ` to improve clarity and
updated the PageMarkerResources drawable from ic _ pageindicator _ add to ic _ pageindicator _ current to improve the visual representation of the current
added a new variable ` reinvocations ` and modified log messages to include it to track the number of reinvocations and improve traceability
update calculation of topPadding in DefaultLookAndFeel . java to use ta . getInnerHeight ( ) instead of ta . getHeight ( )
added a break statement in the Recognize class to ensure proper termination of the switch case
added preference management for home screen visibility and touch feedback in multiple Java files to improve user experience by enabling haptic feedback when the home
refactor ExcelBatchReader to handle different formula cell types and add corresponding unit tests in TestExcelFormat to improve formula processing logic and enhance test
fixed bug 1244447 - immutablefield no long report false positive for anonymous inner class .
added a user agent field to CommaFeedConfiguration and modified HttpGetter to use it to ensure the user agent is dynamically configured based on application
updated the @ XmlAttribute annotation to be required in AvroDataFormat . java and Base64DataFormat . java to ensure that the attribute is
changed log level from info to debug for file not found message to provide more detailed logging for debugging purposes
rename ` QueueTest ` to ` QueuedPipeTest ` to clarify the purpose of the test class
updated version checking logic in BukkitMain . java to use the method ' s getUniqueID instead of checking the server version to ensure compatibility
camel - 16400 : camel - core - optimize to reduce object allocation .
added vertexColor property and modified vertex color handling in PShape3D . java to enable conditional rendering based on vertex color settings
updated ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` to include ` isPkColumnFiltered ` parameter and modified related methods to
removed unnecessary import of Shadow and simplified matrix value retrieval in ShadowMotionEvent . java to streamline code and improve performance by eliminating unnecessary
changed the package structure of MetaRules and updated imports in PythonDslProjectBuildFileParser and PythonDslProjectBuildFileParserTest to
replaced the handling of class definitions in GroovyEngine . java to simplify the code structure and improve readability
fix ( branding - plugin ) : add plugin context listener for hawtio - spring
removed an unnecessary println statement in NativeCodeGenerator . java to streamline command output for better readability and performance
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in `
added unit tests for expected exceptions in ThrowableAssert _ hasCause _ Test . java to ensure that assertion fails when actual and expected causes have different
replaced flattenName ( model ) and packing with flattenName ( model ) and packing in AutomaticDependencies . java to streamline
replaced ` requestedScopes ` with ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to ensure the correct scope is utilized
simonstewart : add a test for firefox and capability in marionette
camel - 16400 : added ability to configure route description . thanks to joao for the patch
refactor JavacTreeMaker class to improve code readability and maintainability
added a line to set the weight of an edge in ImporterCSV . java to improve the functionality of edge weight management
[ multistage ] [ bugfix ] fix tariffs cost per hour calculation
updated SQL queries in DatabaseMetaData . java to include additional attributes from ` d . adsrc ` and ` d . attrdef ` to ensure
throw an AssertionError if binarized sentences are not built by the parser in SentimentAnnotator . java to ensure that the parser does not
updated the ` toString ` method in ` User ` to include detailed username , password , enabled , and non - granted authorities to improve user
camel - 16400 : use message . getbody ( ) instead of extractbodyasstring ( ) to get the body of the message
[ hotfix ] [ runtime ] rename method fromexecutionvertex to fromexecution
modified cansubscribe to use ' owner ' instead of ' subjid ' .
added a reference to " maven . test . classpath " in AbstractJRubyMojo and removed unchecked warnings in CucumberMojo
replaced the variable ` rtype ` with ` mtype ` in ` MethodHandleImpl . java ` and added a new method ` userMethod `
added imports for StopFilterFactory , NamedSPIFactory , and LegacyHTMLStripCharFilterFactory in multiple files to enhance functionality and improve code organization
updated width and height checks from greater than or equal to equality in URLImage . java to ensure that image dimensions do not exceed defined limits
added a check to ensure the name does not start with " META - INF / " and modified the handling of the ' name ' variable to
added a background task to the createImageToFileSystem and createImageToStorage methods in ImageDownloadService . java to improve UI responsiveness during image
updated assertions in StackWalkerTest to use expected values based on the VersionCheck version to ensure correct validation of the expected number of values based on
changed the visibility of the addViewportJob method from protected to public to allow access to the method from other classes
simplified the ` SimpleWordCount ` and ` RBKTimeSlidingTest ` classes by removing the ` partitions ` parameter and
removed server restart and exit settings from TestDatabase . java to streamline server configuration for improved performance
added null and empty checks for the block variable in NodePathsConvertOperator . java and modified return logic in SchemaQueryMergeOperator . java to
add the total harvesting time in the call info frame .
updated particle rendering parameters in ParticleEditor . java to improve visual performance and responsiveness
added functionality to update and manage the " keyserver _ port " configuration based on the presence of " keyserver _ port " to ensure that
added transparent background color to SvgViewerFactory to enhance visual appearance by ensuring transparent backgrounds are applied
removed the minSdk parameter from the @ Config annotation in ShadowKeyguardManagerTest . java and modified the @ Implementation annotation in ShadowKeyguard
modified the ` containsExactly ` method to accept varargs instead of a single argument to enhance flexibility by allowing varargs to be passed directly
updated Bandwidth capacity and refillGreedy settings in Bucket4jFilterFunctions . java and added a check for the key in Async
added documentation for GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance clarity and usability of the German
added hooks support to the Generator class and modified transformations in Optimizer and SemanticAnalyzer to improve query execution handling based on hooks for materialized views
added error handling for NoClassDefFoundError in REngine . java to ensure a default value is set to false when no class is found
replaced references to ` Span ` with ` SpanAndScope ` in ` TraceWebFilter ` and ` TraceWebFluxTests ` to
updated exception handling to ensure a fallback message is used when the cause is null to improve robustness by avoiding potential null pointer exceptions
updated SolrServerException constructor to include the base URL to improve error handling by providing more context about the SolrServerException
modify the landscape setting and landscape return value in HSSFPrintSetup . java to correct the logic for setting and retrieving the land
modify return statement to handle null values to ensure safe retrieval of null values to avoid potential NullPointerExceptions
added argument name validation to ensure it does not contain tab or spaces to improve error handling for invalid argument names
added support for background location listener in AndroidLocationPlayServiceManager to enable customizable location updates based on the Android implementation
updated condition to check for GL _ POINTS primitive type to ensure correct handling of primitive types
trufflestring : do n ' t use direct array . length ( ) and array . getdata ( ) . length ( ) to avoid
added a method call to set the command list in ComboBox to ensure the component ' s command list is correctly initialized
nifi - 5353 : escape the certificate alias file in the tl toolkit standalone
updated zkcli command syntax to use ' zkhost ' instead of ' zkcli . sh - cmd ' for improved clarity to enhance
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . equals ( ) ` instead
added a conditional check for remoteGrpcStatus before posting an error message to ensure that the console event is only sent when the build fails
updated method signatures in XYItemRenderer and related classes to remove unnecessary whitespace to improve code readability and maintain consistency across the codebase
add nbtag compound to tick entity entity id . close # 375
refactor error handling in GLSurfaceViewAPI18 by extracting error string logic into a separate method to improve code readability and maintain
mondrian : featureregistry . getsupportedLocales ( ) return empty list instead of null .
updated server URI handling in RFC2616BaseTest . java to use " myhost : 1234 " instead of the server ' s URI to
added a call to ` addToHelperList ( ce ) ` in the ` Construction ` class to enhance the functionality of the ` Construction
added handling for the case when the length is - 2 in GlyphLayout . java to skip the first element of the escape sequence to improve the
added security permissions and refactored context class loader management in Transport and TCPTransport classes to enhance security by ensuring proper context class loader management and
updated file handling logic in ReceiveExternalFilesActivity to differentiate between syncing and root folder operations to improve robustness by ensuring folder operations are
fix npe in testng if m _ serviceloaderclassloader be null
removed debug log statement from BarrowmanCalculator . java and modified the deltap calculation in TubeCalc . java to remove unnecessary logging and
modified the handling of node and edge table columns in TimelineControllerImpl . java to differentiate between nodes and edges to improve clarity and
added a method to register extra components for BrokerAdminApiApplication to enhance the management of broker admin API components within the application
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT ` for verifying SQL query execution to ensure
peergroup : do n ' t try to find a peer that do n ' t support witness .
added tracking for the previous and current state of cycles in TileAbstractBuilder to optimize the management of state changes for improved performance
updated configuration for consensus snapshot trigger threshold and refactored retry policy initialization to use a Supplier for Ratis configurations to improve flexibility and
updated multiple Java files with no content changes to improve code consistency and maintainability
added a check for ManagedService annotation before unregistering and registering JMXHelper to ensure that JMXHelper is only created when the ManagedService annotation is
tika - 3998 -- add support for gb18030 encode in packageparser
added a new file TestSplitThruPhiDivMod . java that contains a test for division with a division operation to demonstrate
added methods to lookup generic interface types and superclass in TemplateRegistry to enhance flexibility in retrieving generic types and their implementations
reduce buffer size from 512 to 1028 in ByteArrayOutputStream constructor to optimize memory usage and improve performance
added TODO comments to the languagesExcluded array in PlayerSettingsScreen . java to clarify unavailable language entries for better user experience
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5452 -
fix dysfunctional popup menu . report by ingo bauersachs and emil ivov ( subject : ` ` sipcommpopupmenu patchset ' ' ) .
added a null check for the source node before throwing a SemanticException for invalid table aliases to improve error handling by providing a clearer error message
[ fix ] issue 198 , apply scale to ax when render a skeleton .
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added ComponentScan annotation to SpringWebConfig . java to enable component scanning for better configuration management
removed the ` getAccount ` method from ` UserListItem ` to streamline the code by eliminating unnecessary functionality
added unit tests for installing packages and modified process name handling in ShadowPackageManager to ensure that the installPackage method correctly sets the process name
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future feature additions
added TransactionCapsule fields and initialization methods to TransactionTrace class to enhance transaction management capabilities in the application
add property ` ` hazelcast . client . shuffle . member . list ' ' and ` ` hazelcast . client . member . list '
changed the type of ' val ' from Text to CrawlDatum in SegmentReader . java to improve data handling by utilizing CrawlDatum
refactor JsonDeserializer class to improve code readability and maintainability
updated configuration paths in TsfileDBConfig . java and replaced fetchSize in QueryProcessExecutor . java with ThreadLocal in QueryProcessExecutor .
updated the method name from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the
removed unused import of ExecutionContext in TaskletStep . java to streamline code by eliminating unnecessary dependencies
initialize the title variable with an empty string to ensure a default value is provided for the title variable
added handling for an empty response body in AsyncHttpClientCall and created a corresponding test in AsyncHttpClientCallTest to ensure that the response is not
deprecate io . micronaut . runtime . server . embeddedserverinstance in favor of io . micronaut . discovery .
use reflection to load mac adapter in jabrefframe .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related method calls to improve cl
added a return statement to the toEnum method in HandlerLibrary . java to ensure that the method returns the result of the toEnum operation
changed the visibility modifier of the ` hideUnprivilegedObjects ` variable from ` private ` to ` private final ` to ensure immutability
fix test that fail on slow machine
added a conditional check for Android Q to save Giphy video URLs to ensure compatibility with devices running Android Q and above
fix for act - 1341 : add deserialization support for variableinstanceentity ( # 1342 )
updated multiple service classes including EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , SamlService , and SamlCom
replaced manual logger retrieval with ` computeIfAbsent ` method to simplify code and improve readability
hbase - 2640 remove unused class datoinputstream from hbase - io
updated the rowid from " autogather " to " rowid : 2 " in TestAcidOnTez . java to ensure correct
changed log level from info to debug in MavenEnhancePlugin . java to provide more detailed logging for enhanced classes
added a method to retrieve the default provider name and updated references to use it to improve flexibility in provider identification across different operating systems
added imports and processing for Captor annotations in MockitoBeforeTestNGMethod . java to enhance functionality by ensuring Captor annotations are
added error handling for missing test cases in TestSuiteBuilder . java to provide clear feedback for cases where specified test cases are not found
updated import statements and refactored prefix computation logic in GroovyAutoComplete . java and GroovyLanguage . java to improve code readability and enhance
do n ' t use deprecated graphhopper ( ) . init ( ) in import import
[ java ] use client config for http client in handlesession .
changed the visibility of the ` mHideSysUiScrim ` variable from final to non - final and added logic to manage its visibility
modified the ` enqueue ` method in ` Call ` and added cancellation logic in ` OkHttpCall ` to ensure proper handling of call cancellation before
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
updated the RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to enhance functionality by integrating
updated the list of type declarations in DeferredAttr . java and added a new class ImplicitLambdaConsideredForApplicabilityTest . java
make integration test more robust to j2kt and j2kt
added unit tests for default and non - compatibility display metrics in DeviceConfigTest . java and improved dimension handling in DeviceConfig . java to
replaced IOException with RuntimeException in ExternalViewReaderTest . java and modified timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource reference from ` logo . logo ` to ` mipmap . ic _ launcher ` in the ` RootCursor ` class
added content text setting to errorBuilder in FileUploader . java to enhance error reporting by displaying content for better debugging
refactor ConcurrentHashMap class implementation to improve performance and maintainability of the code
added methods to adapt user trades from AbucoinsFill and UserTrades in the AbucoinsAdapters class to enhance trading functionality
modified return statements in ` Claim . java ` and ` Delete . java ` , added new cases in ` SetBlockFast _ 1 _ 8
simonstewart : allow the htmlunit driver to work with firefox and internet explorer
added support for handling VARBINARY type in BlobType . java to enable proper handling of VARBINARY data types in the database
apply patch 10 from jboynes to improve cookie handling
added synchronization to the handling of simple type mappings in LibFFIContext to ensure thread safety during language initialization
updated InboundBuffer to use ContextInternal and VertxThread instead of Context to enhance type safety and ensure correct context usage
modified the timeout handling in LdapTimeoutTest to include a timeout duration and added a new method to check server timeouts to improve test reliability by
corrected a typo in the usage message from " UniocdeData . txt uniName . dat " to " UnicodeData .
camel - cxf : fix the unit test error of cxfmessageheadersrelaytest
refactor multiple Synth - related UI classes for consistency to improve code maintainability and readability across the Synth - related components
added handling for BoosterSet in ComponentAssemblySaver . java and changed return value in BoosterSet . java to false to improve functionality
implement password authentication for proxy request via system property .
corrected the spelling of " BLOCKCHAIN __ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT " and
replaced an exception throw with a return statement in the Class . java file to simplify error handling by returning false instead of throwing an exception
fix checkstyle issue in util / ipc / testipcutil . java
removed chunked transfer handling from the response in NettyRoutingFilter . java to simplify request processing by eliminating unnecessary chunked transfer checks
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure all attributes are cleared before processing new data
refactor VerificationAfterDelayImpl to include polling period and improve error handling during verification to enhance reliability and error recovery during verification
added compaction management functionality in SessionState and updated CliConfigs to include a custom authorization manager to control SQL standard authorization for testing purposes
[ zeppelin - 5241 ] fix the problem that dockerinterpreterprocess do not copy the jar file .
hbase - 2694 fix typo in hbaseadmin . gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
added a try - finally block to reset the reader ' s content handler and error handler to ensure proper resource management and prevent memory leaks
release the headerBuffer and reset it to null in HttpSenderOverHTTP to ensure proper memory management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include a
added null and closed result set checks before closing it in JdbcExecutor . java to prevent potential NullPointerException and ensure proper resource management
update driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to reflect the correct versioning for
fixed bug 137175 - usesstringbufferlength no long report an error if there be no literal .
removed error logging from RemoteSparkJobMonitor to streamline error handling by eliminating unnecessary error logs
modified the createDb ( ) method to return a Connection object instead of void to improve resource management by ensuring connections are properly closed
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 26921 add an option to disable off - peak compaction for hbase
updated BitstampDepositAddress to handle both " address " and " response . json " formats and added DepositAddressJSONTest to
replace IllegalStateException with response . abort in BufferingResponseListener . java to improve error handling by explicitly aborting the response when buffer capacity is exceeded
updated the method to use ` toAbsolutePath ( ) ` for comparing ` linkPath ` to ` linkPath ` to ensure accurate path resolution
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and modified ` DefaultMetricsRegistry ` to use ` Concurrent
refactor network interface handling in OptionsTest . java to improve clarity and ensure support for multicast network configurations
modified the validation logic to check for a specific checksum format to ensure that only valid checksums are considered for processing
added a clone method to the BufferedChecksumIndexInput class to provide a placeholder implementation for the clone method that throws an UnsupportedOperationException
updated return statements in Circle . java to use radius instead of Math . sqrt for distance checks to improve precision in geometric calculations involving radius
added a conditional check before setting the frequency band and modified the return statement in P25Channel . java to ensure frequencyBand is only updated if
rename ` tapSquare ` to ` tapRectangle ` in ` GestureDetector ` class to improve clarity and consistency in naming conventions
cfmeta . default _ replicate _ on _ write to false by default
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` method and implemented date formatting in ` Util ` to enhance
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes and corresponding tests to enhance the functionality of the TraceCallable and TraceRunnable classes
updated error handling in FileActivity and FileDisplayActivity to improve user feedback during file synchronization to enhance user experience by providing a clearer error message
added a method ` quiche _ conn _ stream _ writable ` to handle writing to streams in ` ForeignIncubatorQuiche
added a boolean parameter ` true ` to the method call in ` JavascriptContext . java ` to enable conditional execution of JavaScript functionalities
removed alignment parameters from TableCell and related methods in BaseTextFormattingHelper and TableCell classes to simplify the code by eliminating unnecessary padding
added a new file ` TracingAutoConfiguration . java ` to configure tracing features in the UAA application to enhance tracing capabilities and enable better integration
added a Para instance and modified content addition in Submissions . java to ensure proper handling of the second paragraph during submission
modified the ` getPrunedQueryableSegments ` method to accept an additional ` List < IndexSegment > ` parameter and adjusted related logic to
refactor VertxBufferTest . java to improve code readability and maintainability
patch from josh from bug # 44292 - fix hsmf parsing of message date contain hyphen
changed the visibility of the mContext variable from private to protected to allow subclasses to access and override context management
removed unnecessary imports of SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation classes to streamline code and improve readability by eliminating
added a new class ` MongoDataIntegrityViolationException ` and updated the exception handling in ` MongoTemplate ` to provide a specific exception type for MongoDB
[ hotfix ] fix return value of jobcoordinationservice . jobcompletionfuture ( )
updated the ` bitsToHumanReadable ` method to ` bytesToHumanReadable ` and introduced a new ` mimeType2HUmanReadable `
refactor TieredMergePolicy initialization and add a new test method in TestUpgradeIndexMergePolicy to improve code clarity and ensure correct
added a check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
add miss link to cpu instruction in cpundarrayfactory error message
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for loading reference properties to enhance flexibility by allowing the loading of
added null checks for incoming fields , Terms , Docs , and positions in the FilterLeafReader class to ensure that the incoming fields are not
add miss key size provider to jcecrmfencryptorbuilder .
updated exception handling in NetSocketReader and removed redundant constructor in SoftEndOfStreamException to improve error messaging clarity and maintain consistency in exception handling
added @ Inject annotations to multiple Java files to facilitate dependency injection in the codebase
updated the expected size in BundledDistributionTest from 9 to 10 and added assertions for database user attributes in PostgreSQLTest to enhance test coverage for
[ flink - 11349 ] [ runtime ] add pipeline . name option to allow to specify a job name for printing and logging
modify scale calculation logic in OverviewState . java to account for two - panel layouts to ensure correct scaling of UI elements based on device profile
updated the IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and modified the population population
removed timezone parameters from the getMaxTime and getMinTime methods in StorageUtils to simplify method calls by eliminating unnecessary zone - specific parameters
[ j2kt ] add ` ` qualify ' ' flag to reference .
fix xhamster ripper so it do n ' t complain .
fix concurrentmodificationexception in glowworld . getentity ( )
mondrian : fix table name for oracle dialect when schema be null or empty
fix an npe in the console filter ( # 4212 )
added support for selecting and deselecting all files in the FileMenuFilter class to enhance user experience by allowing select and deselecting all
[ java ] update termoffset to use termlengthmask instead of termwindowlength .
fix checkstyle issue in util / guildupdateownerevent . java ( # 731 )
fix in portal tick to be less than 80 for creative
updated spacing and text filling logic in ClusterMonitorTileSkin . java to improve visual representation of chart data based on compression status
refactor multiple codec template classes for consistency to improve maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when processing binary data
removed a null check for the header in RendererConfiguration . java to simplify the condition for handling null renderer cases
volume api : do n ' t allow scaling cpu and memory of vm with custom service offering .
updated import statements in HitbtcAdapters . java to use specific DTO classes instead of wildcard imports to improve code clarity and maintain
fix a typo in the variable name from ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager .
updated the description URI for the JRuby Scripting service from " jruby " to " jrubyscripting " to clarify the
replaced direct string concatenation with a variable assignment for displayName to improve code readability and maintainability
updated condition in ParticipateAssetIssueActuator to include additional validation for preciseExchangeAmount to ensure that exchangeAmount does not exceed the defined
removed an unnecessary loop condition from FeedUtils . java to streamline the code by eliminating unnecessary checks
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 file handling to ensure compatibility
[ calcite - 6092 ] add a test case for calite - 6092 .
remove unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added a new method ` quietCloseAll ` to handle closing ` AutoCloseable ` lists and updated the loop structure to improve resource management and
replaced a confirmation button with a default value of ` common _ yes ` in ` RemoveFileDialogFragment . java ` to simplify the dialog
added a conditional check to prevent drawing images with zero dimensions to ensure that drawing operations are only performed with valid dimensions
replaced ReflectionHelpers with direct method invocation for defining a class in UnsafeAccess . java to simplify code and improve performance by leveraging reflection
updated hostname regex pattern in GUIUtil . java and added validation tests in GUIUtilTest . java to improve accuracy in parsing domain names and ensure
refactor conflict handling logic in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve clarity and maintainability
load flutter / pubspec . yaml from flutter / packages / flutter / version . java ( # 4370 )
added a condition to return the reference object if it equals the current object in ReferenceMemory . java to ensure that the REFERENCE case behaves correctly
added file existence checks for seed URLs and improved error handling in the Injector class to enhance robustness by ensuring only valid seed files are injected
added a condition to check if hideOriginal is true before hiding the original view to ensure the original view remains invisible when the original view is
updated maximumNodes calculation and modified the condition for maxTrips in DefaultLoopPolicies . java to ensure that maxNodes does not exceed the maximum
added texture coordinate support checks and logging in CombinedTexture . java and UVCoordinatesGenerator . java to ensure proper handling of texture coordinate types and
added error handling for failed barcode deletion and improved argument validation in several classes to enhance robustness by preventing application crashes due to invalid
added seek and close methods to TracingConsumer and TracingProducer classes to enable delegation of seek operations to the delegate implementation
updated the SQL update statement to use ` substring ( : oldPrefixLength ) ` instead of ` substring ( : start + 1 ) ` and
replaced the addition of elements to a list with a constructor that initializes it directly from the collection to improve code efficiency and readability by elim
add a deprecated constructor for timer that take a pausedetector and timeunit .
added a nightly build warning message for users when running a nightly version of Universal Gcode Sender to inform users of potential issues
add sorting by team to response by recipient .
update return statement to reflect the removal of unnecessary ` throws ` declarations to clarify the purpose of the message regarding the removal of unnecessary throws
deleted CacheApplication . java and replaced CacheController with CommonsApplication in ShareActivity . java to streamline the codebase by eliminating unnecessary
replaced instances of ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
updated method signatures in StatisticsServlet . java to improve code readability and maintainability
updated configuration handling in RuntimeEnvironment for devices running KitKat and above to ensure compatibility with devices running KitKat and improves
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and its usage in ` VersionDefinitionResource
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
avoid npe if old index name be null
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance access control by including necessary internal resolver helper and readers
renamed methods from ` save ` and ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve
remove the first input of a loop exit node from the loop if it ' s a loop exit node .
replace RecyclerView with WidgetsRecyclerView and introduce mCurrentRecyclerView in SearchAndRecommendationsScrollController . java to improve layout management
added a check for terminal support in ConsoleReader . java to ensure terminal functionality is available before proceeding
changed the type of ` fiveSeconds ` and ` timeAllowed ` from ` Long ` to ` Integer ` and updated related logic in ` Cloud
added session validity check before flushing session data in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure session data is valid before flushing
refactor column name handling logic in ChangedIndexChangeGenerator . java to improve clarity and maintainability of the code
replaced Vector with ArrayList for managing RadioButton instances to improve performance and maintainability by using a more efficient data structure
updated UserManagerCompat and UserManagerCompatVN classes to introduce new UserManagerCompatVNMr1 and UserManagerCompatV
added methods to retrieve database major and minor version in MockDatabase , AbstractDatabase , HibernateDatabase , and ReorganizeTableStatement classes to
refactor ActionGraphCache to utilize MapDifference for improved handling of mismatched rules to enhance clarity and maintainability of the code
added LockDatabaseDesc and UnlockDatabaseDesc classes to implement database locking and unlocking functionality to enhance the management and locking capabilities of database operations
refactor RankingUIModel and RankingTopComponent to use setter methods for visibility , list , and rankings to improve code
added handling for disconnect messages and updated logging in HandshakeHandler . java and NodeImpl . java to improve disconnect handling and provide clearer logging for
added a test method for setting and deleting storage groups in IoTDBAuthorizationIT . java and updated authorization checker in AuthorityChecker . java to
fix : fix ruby namespace for documentai and documentai
updated type validation logic in ` FindMissingTypes ` and added checks in ` Assertions ` and ` TypeValidation ` classes to enhance type validation
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to enable lifecycle management of test classes
[ java ] fix checkstyle issue in generator / objects / counterstermanager . java
updated log messages in MultiSteps . java and SendEmail . java to improve logging clarity and consistency to enhance readability and maintainability of
added initialization and cloning of joinKeys in JoinDesc . java to ensure that the original joinKeys array is not modified when it ' s
updated the authentication handler registration to include a default principal resolver to enhance flexibility in authentication handling
added searchPaths parameter to the addSettingsFromFile method and updated its implementation to include additional search paths to enhance functionality by allowing search paths to be
added ' final ' modifier to several lists and fields in Oracle . java to ensure immutability and prevent unintended modifications
[ hotfix ] [ runtime ] enable rescaling of unaligned checkpoint by default
fix unsupportedoperationexception in sql parser ( # 16931 )
add ` ` graal . compiletheworldtest . log ' ' system property to enable debug
added a check to ensure the variable is not an instance of LocalVariable before proceeding to prevent potential runtime exceptions when processing local variables
added support for MySQL database in CreateTableGenerator to ensure proper handling of timestamp values for MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper class loader management during execution
added a condition to set ejection delay when stageNr is zero in SimulationListHandler . java to ensure proper handling of zero stage configurations
rename ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and update related method names to clarify the purpose of the
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
updated methods to accept ` Optional < OAuthRegisteredService > ` for issuer resolution to enhance flexibility in handling optional services during token processing
updated string concatenation and added null check for collection in ClusterState . java to enhance robustness by preventing potential NullPointerException when collection is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in the
added foreignDatabaseName and foreignSchemaName properties and their respective getter and setter methods to ForeignKeyColumn and related classes to enhance database and schema handling
[ java ] throw a timeout exception if leader join fails .
added a private method ` shadowOf ` in ` ShadowActivity ` and modified shadow extraction in ` ShadowBluetoothDevice ` to improve encapsulation
added error handling and improved root path management in FileSelection . java and added a new test case in TestBugFixes . java to
deprecate iforgeitem . tick ( ) in favor of itemstack . tick ( ) .
fix : add ` ` war ' ' and ` ` war ' ' to ` ` jar ' '
added a null check before invoking invalidateOptionsMenu on the SherlockActivity to avoid potential NullPointerException when accessing the SherlockActivity
updated widget binding logic to include options for improved functionality to enhance widget management by allowing customizable binding options
added new constants for air pressure , air quality , co2 , and voc measurement capabilities in EcobeeSensorThingHandler . java to
fix checkstyle issue in io / entity / storedcontactinfo / operationsetserverstoredContactInfofacebookimpl . java
added environment variables for " AAPT " and " AAPT2 " in Genrule . java and updated tests in GenruleTest . java
only dump access table when instrument branch be enable .
added null check before disposing of the message to prevent potential NullPointerException when message is null
modified the ` db ` variable to be ` final ` and added ` @ Getter ` annotation in ` TronStoreWithRevoking
updated log warning messages in CoreContainer . java to clarify that LogWatcher is not implemented for log4j
replaced printStackTrace ( ) calls with failure ( ) calls in CategoryPlotTests . java to improve error handling during cloning failures
replaced ByteArrayOutputStream with SmallByteArrayOutputStream for improved memory management to enhance performance by avoiding unnecessary object creation when the native instance is not
* fix arrayindexoutofboundsexception in screenshots . getattributetype ( )
updated the database connection from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java
( chore ) camel - base - engine : fix npe when first / last exchange complete timestamp be null
updated method calls and added new test cases in TestHtmlTag , TestUseOption , and C1 classes to improve code clarity and ensure
updated condition in CompletionProvider to check if the result is incomplete and has more than 10 items to ensure proper handling of incomplete results and increase the
updated command - line argument usage and modified time column name handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality
updated output format handling to differentiate between " htmlx " and " svg . html " based on the output format to improve clarity and
updated condition in DeviceProfile . java to check for non - QSB enablement to correct the logic for determining if QSB is enabled and
added equals and hashCode methods to AnimationList class and replaced null checks with Objects . equals in SceneKey and GltfModelKey to improve
added a ` _ date ` field and methods to set it in ` AbstractGenerator ` , ` Generator ` , and updated ` HttpConnection `
replace Adler32 with CRC32 for checksum calculation to improve performance by using a more efficient checksum algorithm
fix npe , make heartbeat interval of xenserver self - fencing null
added a new constant ` ZERO _ AREA _ FIN ` and updated ` FinSetCalc ` to utilize this new warning constant to improve
updated JSON serialization logic in ElasticsearchIO . java to utilize custom serializer for DocumentMetadata objects to enhance JSON serialization capabilities for better compatibility with newer
add trunc ( ) and date _ trunc ( ) function for h2 and oracle
updated error handling in MetricUtils to differentiate between memory and other gauge errors to improve clarity and specificity in error reporting when converting gauge
updated the ` ensureSignedUp ` method to include a ` useJavaScript ` parameter and improved exception handling in ` UserContext ` to enable
updated annotations in ValidationTask . java to use RUNTIME _ PROTYPE _ TYPE and RUNTIME _ OBJECT _ TYPE to improve clarity
[ te ] use ` ` / replay ' ' instead of ` ` / generateanomaliesinrange ' '
replaced instances of ` new DataWord ( ) ` with ` new DataWord ( 1 ) ` in ` PrecompiledContracts . java `
refactor badge handling logic in AllAppsContainerView . java to improve clarity and maintainability of badge state updates
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService , ResourceHandlerTest , and ServletContextHandler classes to clarify method usage and improve code readability
removed the check for WORKSPACE _ CUSTOM in Cling . java to streamline the code by eliminating unnecessary checks
truffle : remove invalid assertion from trufflejdkservices # lookupmodule
updated method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIsInstrumented
updated import statements for ItBitExchange , ItBitOrderBook , ItBitTradesDemo , and ItBitTradesDemo classes to remove
simplify code by use isdefined ( ) instead of isvalid ( ) .
changed classes Utils , ApplicationUtils , AsyncSocketFactory , and Whois to be final and added private constructors to enforce singleton pattern and prevent instantiation
add try - with - resources to prevent resource leak
updated type handling for Vector , Hashtable , Vector , and Hashtable in mmm Util . java and ppp Resources . java to improve type safety
added tableNameWithType parameter to the warning log message to provide more context about the retention time being logged
added trimming to the length check for fragmentList elements in QueryExecutorImpl . java to ensure consistent handling of whitespace in fragmentList elements
fix modfilenotfoundexception throw by modfileresourcepack . getfile ( ) . filenotfoundexception
refactor TransformerBuilder usage and improve button visibility logic in PartitionToolbar to enhance code clarity and ensure proper handling of TransformerBuilder instances
removed unnecessary condition in showAsGrid ( ) and added checks for task view visibility in RecentsView . java to improve task view handling
modified the ` calculate ` method across multiple classes to return ` BMIViewObject ` instead of ` Map < String , String > ` to
removed the Comparator from the key comparison in QueryCommand . java to simplify the comparison logic for better performance
fix hay bale not take damage
updated Java environment variable references from " IBM _ JAVA _ COMMAND _ LINE " to " OPENJ9 _ JAVA _ COMMAND _ LINE "
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to enhance flexibility in config option parsing by allowing custom plugin
updated condition to check if hashTable is not empty instead of null to ensure proper handling of empty hashTable values
updated timestamp validation logic and improved test cases in TimestampTest . java to enhance accuracy in timestamp representation and enhance test coverage for exact and exact
[ java ] ensure archive context be not null in clustered service agent .
added a condition to check if the compilation threshold is zero and the method type is not compiled to ensure that the method type verification occurs only when
add test case for image2 - > image2 _ joined ( ) and image2 . join ( )
refactor TogglableFlag to introduce NAMESPACE _ LAUNCHER and TAG constants , and implement a change listener for app search
updated logging statements to use placeholder syntax for improved readability to enhance logging clarity and maintainability
added a conditional check to return early if the current platform is Android to optimize performance by avoiding unnecessary operations on non - Android devices
replaced ` assertEquals ` with ` assertThat ` for better readability in ` RoutesTest . java ` to enhance test clarity by
added new functional interfaces for byte , float , and short predicates in the com . speedment . common . function package to provide a consistent way
changed the return type of ` getSubsColor ` and ` setSubsColor ` methods from ` int ` to ` String ` and added logging
added a conditional check before deregistering the invocation registry to prevent unnecessary operations when the future is already complete
replaced the manual handling of ControlFrameBytes with a method call to output to simplify the code and improve readability by eliminating unnecessary
added a conditional check for the intent extras before starting the WelcomeActivity in LoginActivity and set the redirect flag in SignupActivity to ensure
added a new class ` ShadowCheckedTextView ` to implement a shadow class for ` CheckedTextView ` to enable testing of ` CheckedText
added Serializable interface to ParserState class and marked fields in AccessorProperty and changeCallback to be transient to enable serialization for the ParserState class
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to include support for IDentrust dst
removed duplicate assignments of TEMPDIR _ CONFIGURED to null in WebInfConfiguration . java to streamline code by eliminating redundancy
fix an issue with the user ' s nickname in the occupant .
updated QuicSession and QuicConnection classes to include a context parameter in the constructor of QuicSession to enhance session management by allowing context
replaced direct calls to ` writer . setMergeScheduler ` with ` writer . getConfig ( ) . setMergeScheduler ` and ` writer .
refactor character type checks in ICU4JImpl and TextPosition classes for improved clarity and consistency to enhance code readability and maintain
added support for ComputedDateValue and ComputedNumericValue in the AddDefaultValueChange class to improve handling of numeric and date values in the
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
remove unnecessary check for writable resources in SAML2Configuration and update logging level from error to warn in SAML2FileSystemMetadataGenerator and SAML2ServiceProvider
make graphprinterdumphandler protect to allow for subclassing of idealgraphprinter
added BigDecimal import and updated order ' s average price calculation in HuobiAdapters . java to improve precision in average price representation and ensure accurate
updated ProjectionOperation and TypeBasedAggregationOperationContext to use target and field names instead of names to improve clarity and consistency in handling projections
modified the player viewing logic in FakePlayer . java to check if the player viewers contains the specified viewers before sending packet to improve
added ConstantState implementation to FolderAdaptiveIcon and ShiftedBitmapDrawable to enhance drawable state management for better performance
refactor connection creation logic in SPDYClient . java to improve clarity and maintainability of connection handling
fix the problem that protostuff would n ' t be able to write a null object .
pdfbox - 4892 : fix checkstyle violation , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability and maintainability
ggb - 228 do n ' t show ax when there ' s only one ax
replaced ` setFilter ` and ` setWrap ` methods with ` unsafeSetFilter ` and ` setWrap ` method calls to improve performance by
updated variable declaration for clarity in XmlWorkflowServiceImpl . java to improve code readability and maintain consistency
added SSL context verification for HTTPS connections in CustomUrlJob . java and created CustomUrlTrustEverything . java to enhance security by enabling
report real - used clock rate in ` ` g722 ' ' format
refactor TextureAtlas class structure to improve code readability and maintainability
updated the method to return the module name instead of the product name and added a method to set the module name in AppleLibraryBuilder to
francoisreynaud : need to get the registry lock when release the resource on the test slot to make sure registry and proxy be in sync .
fix for # 143 - when use findids ( ) with inheritance , findids ( ) be call with a different type .
updated WebSocket response handling in WebSocketServletRFCTest . java to improve clarity and correctness of response header validation
[ wasm ] fix memory leak in function instance .
added TTL functionality to the ClickHouseLogCollectClient and related classes to allow dynamic configuration of the time - to - live ( TTL )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified handling of parameters in CustomChangeWrapper and XMLChangeLogSerializer
updated imports and introduced server and context management in DeploymentExceptionTest . java to improve test setup and teardown functionality for server and context management
added exception handling around Fresco initialization in CommonsApplication . java and modified vectorDrawable creation in NearbyController . java to improve
modify the return statement to handle null and empty object names to improve robustness by avoiding potential NullPointerExceptions
update error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to provide
[ hotfix ] [ table - planner - blink ] move plannerclass and executorclass into static final variable
renamed variable ` owner ` to ` issuer ` for clarity and improved handling of null values to enhance code readability and prevent potential
added a deprecated annotation to RuntimeOptions . java to indicate that this feature should no longer be used in future development
replaced the byte encoding method with a direct call to ` str . getBytes ( utf8Charset ) ` to simplify code and improve readability
added a new interface ` PermissionEvaluator ` with a method ` hasPermission ` in the ` org . springframework . security . expression ` package to
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` LineReader ` and ` LineReaderImpl ` classes
do n ' t check if the server be not online in masterfilesystem . getserverinfo ( )
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR and BLOCK
refactor to avoid use of deprecated juc . getjarfile ( )
improve error handle in defaulthttpclient and fullnettyclienthttpresponse ( # 6373 )
replaced ` center ` with ` centerAbsolute ` for the ` spinner ` container to ensure the spinner is displayed in its absolute position
[ hotfix ] [ network ] make networkbufferpool # requestmemorysegments interruptable
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper management of MBeanServer instances
replaced JUnit4 runner with RetryTestRule in AbstractIT . java to utilize retry functionality for improved testing reliability
use transactionmanager . getrequiredTransactionId ( ) . isautocommit ( ) instead of transactionmanager . isautocommit ( )
[ net . hydromatic . optiq ] add package - info . java and clean up import
allow ` ` javax . microedition . khronos . opengles . gl ' ' and ` ` javax . net .
[ hotfix ] [ test ] remove unused variable in streamtasktestharness
refactor URI handling in mmm Request . java and add a new test in RequestTest . java to improve clarity and correctness of
updated references to ` KEY _ LAST _ SEEN _ VERSION _ CODE ` and added ` getLegacyAvailableStoragePoints ` method in ` Main
added methods ` sessionAvailable ` and ` sessionUnavailable ` to handle session management to improve session management by associating sessions with their respective priority and
added ` addPackageToScan ( " liquibase . pro " ) ` to ` ServiceLocator . java ` to support Liquib
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in the ` SyncedFolderProvider ` class to simplify the
updated the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` argument to enhance functionality by allowing variable - length arguments
refactor substring matching logic in FastPathResolver for improved clarity and consistency to enhance readability and maintainability of path matching logic
replaced ` length ( ) ` method calls with ` toIntExact ( ( RetainedSize ( ) ) ` for footer and stream processing
rename methods and variables from ` hasRandomizedType ` and ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` and `
added support for handling " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and created a corresponding test in TestWindow
clear the proxy request headers in AbstractProxyServlet . java to ensure that headers are reset before processing new requests
added a check to skip the test if SA attach is not expected to work to ensure that the test does not fail if SA attach is not
added null check for bgColor in GraphicsDevice . java and introduced TranslucentWindow . java for translucency support to enhance robustness
added a check for null values for phone , email , and website in UserInfoActivity . java to improve error handling for user information retrieval
added serialization support for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers cannot be used on different machines
[ flink - 20536 ] [ table ] [ connector ] allow kafkasourcesinkfactorybase and kafkas
added a new file ` MultipleOutputsIntegrationTest . java ` to test multiple output groups to ensure that named outputs can be used in source files
updated regex pattern and added content comparison logic in FileSettings . java to ensure proper formatting of settings when changes
nifi - 1342 : add comment to statelessflow to help troubleshoot
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added persistent mode switch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode switching for better user experience
added new device status entries for " leave - dock " , " energy - save - mode " , and " energy - save - mode "
improve exception handle in modelloader for good debugging .
added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
do n ' t call getcurrentsurfacescale ( ) for non - 2x device
refactor RussianLowerCaseFilter class to improve code readability and maintainability
replaced server properties and client properties initialization in CsvBulkLoadToolIT . java and simplified server port retrieval in QueryUtil . java to improve code
replaced ` File . separatorChar ` and ` File . pathSeparatorChar ` with ` _ ` in ` displayName ` to ensure consistent file
littleendien , wavloader now use seekablestream for seek to the endien file .
added support for repeat first line indenting in ColumnText to enhance flexibility in indenting for composite columns
change type casting from Oid to Object in the equals method to ensure proper type comparison for Oid instances
remove duplicate code in hikaripool . getconnection ( )
rename controlflowanchornode to controlflowanchored to avoid confusion
added the line ` buttons [ i ] . setFocusPainted ( false ) ; ` in WindowsPlacesBar . java to ensure buttons are not
updated condition to check for UniqueConstraint and ForeignKey in DatabaseSnapshot . java to ensure proper handling of backing index for both primary and foreign key objects
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and a corresponding API endpoint in `
[ ds - 3442 ] check that dc . title do n ' t contain a dc . title when create a community admin group
do n ' t throw an error if the first word do n ' t have any word
added unit test base on user forum issue
updated thread count calculation from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` and added getter and setter methods for `
increased the FASTSCROLL _ THRESHOLD _ MILLIS constant from 40 to 10 milliseconds to improve performance and responsiveness of the
updated the constant for the System class name in HotSpotResolvedJavaField . java to ensure the correct class name is utilized for better
hhh - 13644 - fix npe in procedurecallimpl . getresultstream
updated the initialization of apiProperties to handle potential null values to ensure robustness by avoiding potential NullPointerException when accessing the API properties
added BinaryFrameGenerator and TextFrameGenerator classes to generate WebSocket frames for binary and text frames
danielwagnerhall : fix flaky test in firefox
updated random number generation logic for lat and lon in RandomGeo3dShapeGenerator . java to improve randomness generation to enhance the accuracy of
added a keepAlive method to manage ClassLoader instances to improve resource management by allowing garbage collection of ClassLoader instances
change return value from false to true in SQLiteDatabase . java to enable successful database operations
do n ' t report ` ` java / util / concurrent / copyonwritearraylist ' ' when there be no concurrent method
added MkdirStep to directory creation in AndroidAar , AppleBundle , ApplePackage , and FatBinary classes to ensure necessary directories
updated boundary checks and error messages in MeshLeveler . java for improved clarity and debugging to enhance error reporting and provide more informative
[ drools - 6640 ] do not try to use pmml if there be no jpmml available in the classpath ( #
replace locationMode with thermalStatus in ShadowPowerManager . java to ensure accurate tracking of power status
replaced the method for obtaining the temporary directory in ` MountableFile . java ` to ensure compatibility with macOS by using a constant
[ geot - 5338 ] use map buffer for prj file reader on window .
added validation to ensure that Plugis is required to have an organization in the pom . xml file to enforce proper configuration and prevent errors when
updated license agreements in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused or redundant web session termination logic
updated the argument passed to executeChildProcess from an empty string to the system ' s classpath to ensure the process execution uses the correct Java class
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added tests for ` ExpectedToFail ` and ` Issue ` in ` AddLicenseHeaderTest . java ` to ensure Javadoc does not change to
change LAUNCHER3 _ PHYSICS flag from false to true to enable the PHYSICS feature in the application
added a ` < div class = ' noPrint ' > ` tag to ` HtmlThreadInformationsReport . java ` to provide a simple
updated the main version from 3.1 to 4.0 and changed the test version from LUCENE _ 31 to LUCEN
added macosx symbolicator and task handles in BsdDebuggerLocal . java and updated OS detection in PlatformInfo . java to support mac
fix memory leak in fml indexed message codec
do n ' t log ` ` connection reset by peer ' ' exception
[ java ] allow client conductor to be use without an admin buffer .
added a break statement in TouchImageView . java to terminate a loop if a condition is met
doc ( regen ) : update documentation for the new logging setting
use feeder . flush ( ) instead of feeder . flush ( ) for non - secure request
fix typeutils . isassignableto ( ) for java . lang object
use csls instead of nbhs for memtablespendingflush . see explanation here : http : / / sourceforge . net / tracker / ? func = detail & aid = 2828100 & group _ id = 194172 & atid = 948362
added null check for ` tree . errs ` before calling ` memberEnter ` in ` MemberEnter . java ` and modified error handling in `
replaced SWT . NO _ BACKGROUND with SWT . NONE in BugInfoView . java to disable background display for improved user experience
updated the method call from ` finish ( ) ` to ` cancel ( ) ` in the ` AboutActivity ` builder to ensure the dialog
avoid division by 0 in integerstamp . div ( )
added a method to read an InputStream from an InputStream and updated the image initialization to use this method to improve flexibility in loading images from an
added variable declaration and undefining for variable declarations in SwitchCompiler and updated variable handling in ExprGenerator , ExprGenerator , and ConditionTest to
updated the initialization of the cipher in RSAClientKeyExchange to handle exceptions for unsupported cipher providers to improve error handling and provide clearer debugging information
updated AdditionalDependencies in WinGammaPlatformVC10 . java to include psapi . lib to ensure compatibility with additional platform dependencies
updated string concatenation in StringUtilsTest . java to use platform - independent newline handling to ensure consistency in line separator usage across different operating systems
added encoding settings for incompatibleImprovements and output encoding in TemplateEngineFreemarker and updated alert message format in ApplicationController to
refactor byte array handling in CRDGeneratorTest . java for better readability to improve code clarity and reduce dependency on ByteArrayInputStream
make field final in sampleresenderfactory so that they can be reuse
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure the reporter is only added
updated quoting logic in CommandLineBuilder and improved test assertions in CommandLineBuilderTest to ensure proper handling of quotation marks and enhance test coverage for
removed the ` public ` access modifier from multiple interfaces and classes in the Clock , DelegatingGauge , MetricProducer , and VendorDefined classes
added a method to set the number of reduce tasks in FreeGenerator . java to enable dynamic task configuration based on the number of fetchers
fix : fix schema generation for object field with default value ( # 3649 )
bug 532077 - update file version after change to 5.3 . 0
updated texture extension checks from " texture _ float " to " GL _ ARB _ texture _ float " in FloatTextureData . java to
add fileserver . write ( ) and fileserver . closefile ( ) ; update version to 2.1 . 20050211
updated output directory assignment logic in ClassDump . java to ensure outputDirectory is set only when jarStream is null to improve robustness by avoiding
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to improve performance tracking during SQL execution
updated the tool path from the current JDK to the test JDK in JMapHProfLargeHeapTest . java and JDKToolLauncher . java
add a new config enum resourceerrorhandling to make it easy to identify what happen when an error occur .
added a check for buffer size and implemented EOFException handling in RAMInputStream and TestRAMDirectory to ensure proper handling of EOFException during input stream operations
updated error handling to include missing resource messages in DefaultServlet and JspServlet to improve error reporting by providing more context for missing resources
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added a new AccessControlContext class to enhance thread management
updated CHECK _ EVERY _ N constant and modified memory check logic in Caches . java to improve cache management and enhance logging for better debugging
hbase - 16400 fix findbugs warning in testsplittransaction
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added parameterized test for JaasDemo in DemoModulesTests . java to improve test coverage for Jetty authentication in the demo environment
added conditions to check if the spanX and spanY are equal to 1 in the canCreateFolder method to ensure that folder creation is only
refactor CacheOffHeap class for improved performance to optimize memory usage during caching operations
improve error message when table be reference in another dbobject .
added validation for XML gid values and improved warning logging in TiledLoader . java to ensure data integrity and provide clearer error messages when
added synchronization to the setWorkingSet method to ensure thread safety when accessing shared resources
added a new Java class named Solution that calculates and prints the minimum and maximum steps of a given number of steps to implement a solution for a
add an addresschecker interface to be able to check if an ip be a bad address .
fix typo in multilayermodel , rendertype . getTranslucentmovingblock ( ) , rendertype . getTranslu
added a method to remove tags from the tooltip in GuiConfigEntries . java to improve user experience by removing unnecessary default tags from the tooltip
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` across multiple classes to allow for more flexible representation of
added a null check for recipients before sending the email and changed time calculations from seconds to milliseconds to improve robustness by handling potential null values and ensure accurate time representation
extracted the single check logic into a new method ` isSingle ` to improve code readability and reduce duplication
added a ` failFast ` parameter to the ` DockerClientFactory ` methods and updated logger usage in ` RemoteDockerImage ` and ` Image
added resourcesMode parameter to AndroidMetadata constructor and updated related methods to support resource management in tests
fix for act - 1331 : use calendar . gettime ( ) instead of dateutils . truncate ( )
replaced ` importProject ( projectFile ) ` with ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule . java `
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting and provide user feedback during command execution
refactor TreeMap class implementation to improve performance and readability of the code
added methods to enable and disable asynchronous stack traces in the display class to improve error handling and debugging capabilities
added a method to set the glow color in BubbleTextView and updated Folder to use this new method to allow customization of the
set the CSS class to " file - row - text " for links and descriptions in LinkedFilesEditor . java to ensure consistent styling of
modified the return statement in AbstractJdbc2ResultSetMetaData . java and added a new test case in ResultSetMetaDataTest . java to ensure correct handling
simplified the write operation in Lucene40LiveDocsFormat . java and removed unnecessary file deletion in SimpleTextLiveDocsFormat . java
added null check for the ` _ info ` object before checking its status to prevent potential NullPointerException when ` _ info ` is null
added a constructor to ShadowLocation that initializes the provider variable to allow externalization of the provider instance
added a condition to check if the deviceRam is less than 2048 in the maxRAM calculation to ensure that the application does not exceed
add miss stats per map to localmapstatsprovider ( # 16334 )
added logging functionality to FileProfileActivator for file existence and presence checks to improve debugging and monitoring of file activation attempts
pdfbox - 4892 : fix typo , a suggest by valerybokov
use collections . toset ( ) instead of collections . tolist ( ) to avoid concurrentmodificationexception
updated upload limit from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to accommodate
added unit tests for the delete method in DashboardUserMapperTest to ensure that the delete operation behaves as expected in the user mapper
update instructorfeedbackresultspagedata to use ` ` primarypart ' ' instead of ` ` recipient ' '
sulong : move dereferences from llvmnativestorenode to llvmpointerstorenode
added a method ` getBufferSize ( ) ` to ` BufferedIndexOutput ` to provide access to the buffer size for external use
add a help message to the terasology command , and remove the system . exit ( )
reformatted the switch statement in DrawerActivity . java for improved readability to enhance code maintainability and adhere to coding standards
rename CommandLineParserTest . java to improve clarity to enhance code readability and maintainability
added new imports and modified interpolators for animation transitions in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to enhance animation performance and
updated method call to use ` javaNameFromExternal ` instead of ` Character : : toUpperCase ` to improve clarity by using a more d
added native methods and a new class NSObject in CWrapper . java to enhance frame management and release functionality in the application
added constant value checks in mmm Checker . java and created a new ValueTest . java file to ensure that variable values are not treated as
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code readability and maintainability
removed null check for constructors in PojoUtils . java to simplify code and improve readability
refactor JiraConfiguration class to improve code readability to enhance maintainability and facilitate future development
updated error message formatting in UploadBuild . java to improve clarity of error reporting for better debugging
update bounds calculations in DeviceProfile . java to include search bar offset to ensure accurate layout positioning within the search bar
[ pulseaudio ] reconnect to pulseaudio when idle timeout be zero
replace direct calls to ` getLauncher ( ) . runOnUiThread ( ) ` with ` getLauncher ( ) . runOn
added a method ` getSourceGroupOptional ( ) ` to retrieve the ` AppleSource ` instance to enhance functionality by allowing retrieval of source groups
increased the timeout duration for trigger firing in TestSimTriggerIntegration . java from 20 seconds to 30 seconds to allow more time for triggering
replaced ` outputPositionCount ` with ` positionCount ` in ` FloatSelectiveStreamReader . java ` to ensure correct position count is used
fix nullpointerexception in abstractnodescorersightsearch . getdistfromstartSq ( )
added a condition to skip processing for Form and Dialog components in ResourceEditorView to improve performance by avoiding unnecessary processing for specific UI components
replaced ` UiThreadHelper ` with ` LauncherModel ` for thread handling in ` DragView ` and ` FloatingIconView `
added a check to initialize commitPoint if it is null to ensure the correct commit point is used for replication
added unit tests for ` getImei ` and ` getMeid ` methods in ` ShadowTelephonyManagerTest ` to ensure correct
added debug request logging and request entity handling in SimpleHostRoutingFilter . java to enhance debugging capabilities for HTTP requests and improve request processing
added ` destroy ` methods to various classes and implemented cleanup logic for resources to ensure proper resource management and prevent memory leaks in the application
[ issue # 1193 ] add test case for static topic ( # 1194 )
use standardcharsets . utf _ 8 instead of charset . forname ( )
hbase - 11313 bulkload should not throw error if the file do n ' t exist
added a nullable commission field to DefaultWithdrawFundsParams and updated constructor to include it to enhance the functionality of DefaultWithdrawF
removed an unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve maintainability
consolidated multiple catch blocks into single catch blocks for SolrServerException , IOException , and MorphlineCompilationException to improve code readability and
added validation for method body and method parameters in Java2TypeScriptTranslator . java and improved test assertion in OverloadTests . java to
replaced direct call to ` sweepDisk ( ) ` with a try - with - resources statement using ` StacklessLogging ` to improve logging
added serialization support and refactored static variable declarations in Entities class to enhance serialization capabilities and improve code readability
rename SubExactLConstantTest and SubExactLNonConstantTest classes to improve clarity and consistency in naming conventions
added null check for claimRequestString before parsing to avoid NullPointerException when claimRequestString is null
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and performance by utilizing a singleton pattern
updated handling of null values in UpdateMapper and added unit tests for null value mapping in UpdateMapperUnitTests to improve robustness of type mapping
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest . java and added a new getCoreStatus method in Core
fix concurrentmodificationexception in moddirtransformerdiscoverer .
updated error message formatting in AbstractQuerydslProcessor . java to improve readability of error messages for better debugging
add tostring ( ) for good debuggability
replaced instances of ` setOf ` and ` setOf ` with ` copiedSetOf ` and ` copiedListOf ` in ` Rest
( chore ) camel - mail : use getidhashcode ( ) instead of dumpmessage ( )
fix for http : / / issues . apache . org / activemq / browse / amq - 2849 - set redel
updated the return statement to include the identifier ' s property name to ensure that the identifier name accurately reflects its purpose
use the wave generator instead of the deprecated toast
added logging for null sheet handling and improved null checks in KeyedProperties and SheetOverlaysManager classes to enhance error handling and provide clear
test : add integration test for log and exec
added a test method to ensure SolrCore . initIndex does not detect no index and create a new one in TestReplicationHandler . java to
call super . dispatchmethodkernelokra if the argument pass to the super constructor .
updated DnsClient , DefaultDnsClient , DefaultMxRecord , and DefaultMxRecord classes to implement Comparable and improve sorting functionality to enhance
refactor thread creation in XToolkit to use a privileged action for improved security to enhance encapsulation and maintainability of the code
added a ` validate ( ) ` call in ` SelectBox . java ` and set the selected item in ` UITest . java `
[ hotfix ] [ runtime ] use collector . printstacktrace instead of throw illegalstateexception
added a ` parentSplit ` parameter to the ` createState ` method and modified its implementation in ` FlowBuilder ` and ` SplitState `
changed ` connectionState ` to be ` volatile ` and modified the return statement to use ` connectionState ` instead of ` getConnectionState ( )
updated the default polling period from 10 to 1000 in ` AbstractPollingEndpoint . java ` and modified the integration tests in ` EnableIntegrationTests .
refactor memory allocation methods to use ` nmalloc ( ) ` and ` encodeASCII ( ) ` instead of ` malloc ( ) `
added exception handling for ` IOException ` and ` DocletAbortException ` in ` HtmlDoclet ` and ` AbstractDoclet ` classes to
[ java ] unusedmodifier false positive with nested interface
refactor various logging statements to use method references instead of lambda expressions to improve code readability and reduce boilerplate
updated the @ Parameterized . Parameters annotation to include a name parameter to improve clarity of test output by specifying the purpose of the parameter
added exception handling for IllegalFormatException in TransformationHelper . java to improve error logging and provide more informative messages during transformation failures
updated references from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java ` to ensure
replaced direct equality check with Apache Commons Lang ' s EqualsBuilder for better string comparison to enhance code readability and maintainability by util
updated the process method to handle null outputRoot to improve robustness by avoiding potential NullPointerException when outputRoot is null
added AnnotationFilter interface and implemented annotation filtering in PDPage , PDFRenderer , and PageDrawer classes to enhance annotation processing capabilities by allowing filtering of
refactor StackTraceCleaner class for improved stack trace handling to enhance performance and maintainability of stack trace management
updated content type handling for CSS and JavaScript files in PluginServlet to ensure proper content type is set based on file type
hhh - 17777 skip criterialiteralinselectexpressiontest on oracle dialect that do not support it
updated the ` upgrade ` method to use ` slotSize ` instead of ` slot ` and improved null checks for ` stats ` to enhance
added a ` getStats ` method to multiple classes and changed ` docCount ` to ` AtomicLong ` to provide a snapshot representation of document counts
added long polling functionality to KieClient and KieConfig classes to improve performance by allowing dynamic configuration refresh based on the KIE _ CONFIG
updated gesture handling methods in multiple classes to use scroll functionality instead of fling to improve responsiveness and user experience during gestures
updated unlocks initialization in ` PausedDialog ` and added a button to the ` unlocks ` dialog to enhance user interface interaction by allowing
clear the drop event in the PlayerEventListener to reset the drop count before processing new events
added a new constant named DEFAULT _ PARAM in StreamResult . java to provide a default parameter for input name retrieval
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to simplify error handling by using a more general IOException
updated printBoth method to include chunk type in TsFileSketchTool . java and added a line to skip the PlanIndex in LocalTsFile
added functionality to exclude specific Swift headers from processing in UmbrellaHeader . java and updated ProjectGeneratorTest . java to improve header management
fix checkstyle issue in util / grizzly / grizzlyasynchttpprovider . java
added encode ( ) method call to RequestPlugin . java to ensure proper handling of special characters in request processing
mondrian : fix mondrian - 1204 , mondrian - 1204 , mondrian - 12
added validation for LDAP user password in LdapAuthenticationProviderImpl . java and created unit tests in TestLdapAuthenticationProviderImpl . java to ensure that
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear the complexWriters in ProjectRecordBatch . java to ensure that the writer state is reset when certain conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress warnings related to serialization in the codebase
changed the access modifier of the ClassGraphClassLoader class from public to package - private and modified the null check condition to enhance encapsulation and improve
added error handling for schema errors in ErrorResponseException . java to improve error reporting and provide more detailed error information
added a constructor to the EventSourcingRepository class to initialize EventSourcingRepository with required parameters
refactor binary node handling in mmm Attr . java and ppp Attr . java to improve code readability and maintainability
updated ` SearchedPeopleCursorAdapter ` and ` QustomDialogBuilder ` to handle leading and trailing spaces when setting text to improve text
[ nuvo ] support standby mode ( # 11977 )
tmi - 182 : use tiff . palette _ chunky instead of tiff . extension . planar . planar .
added a call to close the InputStream in ItemListTag . java to ensure proper resource management and prevent memory leaks
move averageutil to utils so it can be reuse .
added two new classes , SigInt . java and SigIntBarrier . java , to implement a mechanism for signal handling in a concurrent environment
refactor graph handling in ExporterGEXF to support hierarchical graphs to improve compatibility with hierarchical graph structures
replaced byte buffer handling with Text handling in TCTLSeparatedProtocol . java to improve type safety and enhance character encoding handling
[ # 7013 ] fix index out of bound exception in feedbackresponsedetails ( # 7013 )
updated the condition to check for ORIGINAL _ CASE in CatalogAndSchema . SCHEMA _ CASE to improve accuracy in catalog comparison logic
simonstewart : reset the proxy to null in the browsermobproxytest
updated the formatting of the diagnostic message to use Integer . toString ( ) for clarity to improve readability and avoid potential null pointer exceptions
removed an unnecessary reset call on mTextWatcher in InPlaceEditView . java to streamline the code by eliminating unnecessary duplication
[ hotfix ] fix checkstyle violation in internalbyte and trufflestring
[ hotfix ] [ graph ] change type of foreachedge and foreachoutedge from tuple3 to tuple2
updated Java6Assertions . java files for consistency in naming conventions to improve code readability and maintainability
deleted the Class Á . java file and created a new DiacriticTest . java file to demonstrate the use
replaced CountDownLatch with CyclicBarrier in ClusterMembershipTest . java and added a new assertExecutionsDone method to improve synchronization handling
added error handling and refactored workspace reader initialization in DefaultMaven . java and DefaultGraphBuilder . java to improve robustness and prevent
updated SSL scheme comparison from ` startsWith ` to ` equals ` in ` ServiceRegistryConfig ` and modified IP port assertions in ` TestServiceRegistry
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in the Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to ` ServletHolder ` and refactored the servlet instantiation logic to improve thread safety and
added logging functionality and modified deltaServerTime handling in BinanceExchange . java and BinanceBaseService . java to improve tracking of delta server
[ ci ] add support for tomcat 8.5 ( tm ) servlets for javaserver page
modified the way animations are deregistered by checking if the form is null to ensure that the application does not crash if it ' s not already
modified the ` decodeResource ` and ` drawBitmap ` methods to accept ` BitmapFactory . Options ` as a parameter to enhance functionality by allowing
[ java ] add a configuration option to control how many message be send to the publisher .
added functionality to prevent multiple click events and improved text click handling in the TimelineArrayAdapter to enhance user interaction by ensuring only users can
added " text " to the list of unmodifiable data types in PostgresDatabase and improved conditional logic in NumberType to enhance compatibility with PostgreSQL
remove @ ignore from entryprocessorbouncingnodestest ( # 3683 )
replaced ` isHardDeletableState ( ) ` with ` isRemovableState ( ) ` in ` AmbariManagementControllerImpl
updated bridge reconfiguration logic in CreateBridgeServlet . java and modified test cases in CreateBridgeServletTest . java to handle bridge reconfiguration failures
refactor ` PreconditionEnforcer ` and ` CrawlServer ` classes to improve robots expiration handling and synchronization to enhance code maintainability and ensure
replaced direct calls to getDisplayName ( ) with a variable assignment for better null safety to improve code readability and prevent potential NullPointerExceptions
updated SpriteBatch constructors to accept a default shader and refactored shader creation logic to enhance flexibility in shader management and improve code read
added synchronous commit option to properties in TestUtil . java to ensure consistent commit behavior during tests
added a method to fill a sorted set and improved error handling for duplicate elements to enhance type coercion functionality and provide clearer feedback
update message ID generation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to handle favorite files more accurately to improve user experience by providing
added a check to prevent array index out of bounds exceptions in URLPathEncoder . java to enhance robustness by preventing potential ArrayIndexOutOfBoundsException
use dynamic port number to avoid port clash
updated the mock expectation for clusters in HostResourceProviderTest to ensure that the test environment returns an empty map instead of null
[ hotfix ] remove unused logger parameter from yarnentrypointutils # loadconfiguration
remove final modifier from field in sipcommframe . java to allow for extension .
deleted the ShadowHtml . java file and modified HtmlTest . java to remove its implementation to streamline the codebase by eliminating unnecessary shadow
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated Jetty logger configuration to differentiate between HTTP / 3 and HTTP / 4 to improve logging capabilities for better debugging and monitoring
changed the visibility of the ` addListeners ` method from private to public and added a test for listener validation in ` MockSettingsImplTest `
[ hotfix ] fix checkstyle violation in statehandletestore
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . j
[ 4558 ] add error message if team do n ' t have the correct section
use try - with - resources to close input stream in jmeterutils
( chore ) camel - core : avoid use hardcoded port number in camel - test - infra
added ` buildTarget ` and ` androidLibraryBuildTarget ` to several Java files and refactored jar parameter retrieval methods to improve clarity
remove ' validating - cerficates ' reference from ssl documentation
api : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd
added handling for the CLOSED case in the IteratingCallback class to prevent further processing when the callback is closed
added an ` isAuthorized ` field and updated the ` isAuthorized ` method in ` AccessControlContext ` , and introduced a new method in `
refactor OSGiDeployer to check if the app is an instance of AbstractOSGiApp before sending events to ensure proper handling
added support for Tiff format in DLNAMediaInfo to ensure proper MIME type is set for Tiff resources
fix race condition in calltarget . profileargumenttypes and calltarget . profilearguments .
added a new file ` CubocDesktop . java ` and modified the ` Map . java ` and ` MapRenderer . java ` to
updated file paths for PolicyMonitor instances in PolicyMonitorTest . java to ensure correct directory structure for monitoring test resources
added functionality to remove all files from the trashbin list to improve user experience by ensuring a clean state for the trashbin list
updated the import statement for virtualMachineManager from org . eclipse . jdi to com . sun . jdi to ensure compatibility with the
[ gr - 16927 ] fix checkglobalstoragenode to be more generic .
updated the ` createLauncherEvent ` method to accept an additional ` Intent ` parameter and adjusted its implementation to enhance the event dispatching process by
[ java ] limit the maximum number of burn target to 100 , not 546 .
replaced specific database imports with a wildcard import and refactored the snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake . java to
modified the logic for constructing the SQL select statement in DMLTransformer . java to handle cases where insertStatementBuilder is empty and provide a default
updated pgtUrl parameter from " http : / / www . github . com " to " https : / / www . github . com
updated ` getDefaultValidFunctionName ` method to include ` isStatement ` parameter and added ` hideDefaultName ( ) ` method to enhance functionality to
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
updated generic types in several classes for better type safety to enhance type safety and improve code clarity
do not send quality control for jingle call if we do n ' t implement it yet .
added a test method for updating a PGobject in the ResultSetTest class to verify the functionality of PGobject updates in PostgreSQL
updated password reset endpoint to return UNPROCESSABLE _ ENTITY for non - UAA users when the user ' s origin is not set to improve
updated the method of obtaining the document element in XMLUtils . java to improve code clarity and maintainability by using a more direct method
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
fix typo find by codespell on fossies . org
fix the flickering of the light relay so it do n ' t collide with the vanilla binding .
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to return a ` Chainer ` instance
refactor Model class to improve code organization to enhance maintainability and readability of the code
updated the recordedTime variable from a fixed value to a fixed value of 619315200000L to ensure accurate representation of the time recorded
added a condition to resize the status if the terminal type is Windows to ensure the status is updated correctly when the terminal is opened
added a conditional check before setting host version state in UpdateDesiredStackAction . java and introduced a new version state in RepositoryVersionState . java
move jre _ library . jar from src / java _ src / jre to src / java2cl / jre _ bundle _
[ mng - 5352 ] use linkedhashset instead of hashset to preserve order
nodeengine . toObject ( data ) should not throw an exception
reformatted method call in KnativeEnvironment . java for improved readability to enhance code clarity and maintainability
updated the thread pool executor name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in
added a connection method to CloudSolrClient and a test for uploading configurations in TestCloudSolrClientConnections to ensure proper configuration management and validate the
synchronize access to allbindings to prevent concurrentmodificationexception
added methods to clear and clear temporary files in ShadowContext and refactored file handling in RobolectricTestRunner to improve resource management
added TreeMap and LinkedHashSet to the list of classes in SecureXStream . java and updated tests in XStreamPersisterTest . java to enhance data
[ drools - 7 ] expose kiemodulemodel to kiehelper to allow to inject a kiemodule into the kie
refactor Farmland block handling logic in BlockEventListener . java to improve clarity and maintainability of the code structure
added a default implementation for the getLocalIp ( ) method in FinishedSpan . java to provide a default implementation for the method returning null
updated JdbcStepExecutionDao to deserialize OBJECT _ VAL from a ResultSet and modified test cases in AbstractStepExecutionDaoTests and StatefulRetryStep
updated comments in AbstractDictionary , BigramDictionary , HHMMSegmenter , and WordDictionary classes for clarity to improve code readability and
added " libs " to resource declarations and updated platform - specific libraries in the ` tensorflow ` class to include Python37 and ensure compatibility with the
refactor JTable initialization and refresh logic in PluginTab . java to improve code readability and maintainability while enhancing the refresh functionality
changed log level from info to warn for reloading , saving , and trimming history files in DefaultHistory . java to improve log severity and
vmware : fix npe in vmwarestorageprocessor . createvirtualmachine ( ) when vm be not attach to a vm ( # 5
[ java ] use sshd . stop ( true ) to stop ssh server .
rename ExperimentalMockitoJUnitRunner class for clarity to enhance code readability and maintainability
updated GpsSettingsActivity , Session , and HttpUrlLogger to use a new utility method for serial ID retrieval to improve code maintainability and
modified the implementation of the SwapGBuffers class to improve efficiency and performance of swap operations
added null checks and modified control removal logic in AnimControl . java to ensure proper handling of skeletonControl when spatial is null
added a new test method ` setSmartReplies ` to ` ShadowRankingTest ` and refactored ` ShadowRanking ` to use
[ java ] only add - to the archive file if it do not already exist .
simplified the retrieval of the carrot2 resources directory to improve code readability and maintainability
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new class ` bug8004298 .
updated ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to support new features and
replaced null return statements with exceptions for better error handling in RecommenderMapper . java and updated the get method signature to throw TasteException
added a setup method to retrieve client information in the SurrogateAuthenticationEventListenerTests to ensure the test environment uses the correct client information for each test
added a boolean variable isUserView and set it to false in CardPresenter . java to reset the user view state for better resource management
replaced instances of ` GraphvizJavaExecutorUtility ` with ` GraphvizUtility ` for consistency to standardize naming conventions and improve code
added a new variable ` constructBatchHistogram ` and ` syncLogTimePerRequestHistogram ` to the ` LogDispatcherThreadMetrics ` class to
added a new module - info . java file for the SQLite connector module to define module dependencies and exports for the SQLite connector
added a delay of 500 milliseconds in StreamResetTest . java to ensure proper timing for stream reset operations
removed conditional check for " new " web type in Context . java to simplify permissions manager initialization for better readability and maintainability
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method ` getDepth ( Context context ) ` to the ` SpringLoadedState ` class to provide a default implementation for depth adjustment in the
replaced the manual array copying logic with a static final minimum size constant to improve readability and maintainability of the code
[ hotfix ] fix checkstyle violation in executiongraph
removed unused swipe layout annotations and refactored notification handling in NotificationRenderer . java to streamline code and improve readability by eliminating
updated exception handling logic in DefaultExceptionConverter and modified test cases in ExceptionsTest and EndpointTest to improve clarity of error messages and ensure correct
fix checkstyle issue in util / glowcontainer / glowcontainer . java ( # 761 )
replaced MethodHandle with reflective method retrieval for setting a target field to improve compatibility with Java ' s reflection framework
replaced the use of ` uniqueResult ( ) ` with ` intValue ( ) ` for integer type conversion in SQL queries to ensure compatibility with
replaced StringUtils . join with string concatenation for baseSubject and datasets in BaseEmailContentFormatter . java to simplify string concatenation for better readability
added a JPanel to manage the visibility and behavior of the layoutProvidedPanel based on the state of the simplePanel to improve user interface respons
updated the condition to check for null location in the dead server check to improve robustness by avoiding potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for DSA key parameters in BasicChecker . java to ensure that a valid key parameters are provided for public key generation
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring ignored media types to improve code readability and maintainability by encapsulating media type
updated debug log message format and task number retrieval logic in LlapBaseInputFormat . java to improve logging clarity and ensure correct task number
added a ` properties ` attribute to the ` @ SpringBootTest ` annotation in ` EventServiceTests . java ` to allow bean definition overriding
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
changed package structure of BTCMarketsStreaming services and related classes from ' service ' to ' btcMarkets ' to streamline package
added a test method ` issue151 ` to ` FencedCodeBlockParserTest ` for validating rendering of code blocks to ensure that the
added a new file CompatibilityTest . java to test internal DTD properties to ensure compatibility of DTD files during testing
added new utility classes for push registration and security handling to facilitate the management and verification of push notifications in the application
modified the logic for determining the number of replicas in the TableRebalancer class and updated the corresponding tests to improve clarity and correctness in
bump version to 2.7 . 0 and tidy release note
remove \ r from log4j . xml . replace ( ` ` < log4j : message > ' ' )
throw sockettimeoutexception if an error occur while wait for a request .
initialize friction , restitution , density , and isSensor variables to 0 in FixtureDef . java to ensure default values are
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to enhance clarity and specificity regarding
added a try - catch block to handle potential IOException when executing a shell command to improve error handling by logging a message when broadcast idle is not
added unit tests for reading font and link tags in ResourcesTest . java to ensure correct handling of font and link tags in resource retrieval
add miss patch patch for guistatscomponent .
added permission handling for CALL _ PHONE in mmm Launcher . java and introduced a new SDK version check in Utilities . java to enable
updated return values in SimulationPanel , PlotDialog , BasicEventSimulationEngine , and Startup classes to enhance user interface clarity and improve
refactored GeoPointInBBoxQuery , GeoPointInBBoxQuery , and GeoPointInPolygonQuery classes to improve code clarity and
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to check if the Docker client is available to
added a new constant VPX to CodecTypes . java to standardize the representation of VPX format across the application
added a coordinatorAddress field to DistBuildCommand and updated its usage in DistBuildRunCommand to allow users to specify a coordinator address for connection
added a new method ` match ` in ` FsUtils ` and refactored ` WrapTimer ` to utilize it to improve path matching
added a condition to check if the entity value is greater than zero before adding it to labelValues to ensure that only valid values are added to
make sure ` ` no result ' ' be ` ` true ' ' , ` ` false ' ' be ` ` true ' '
removed the @ Test annotation from TestPerfBenchMarkDriver . java to eliminate unnecessary test annotations
added materialization time setting in ObjectStore and created a test for it in TestObjectStore to ensure accurate materialization information is maintained during
added error handling for missing native dependency in VoskSTTService . java to improve robustness by notifying when native dependencies are missing
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5382 .
updated break weight logic in GlyphView . java to improve clarity and correctness of break weight determination
refactor checksum handling in RCFile . java to improve efficiency and readability to enhance performance and maintainability of the checksum processing logic
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to
replaced direct usage of ` getStepedByCounts ( ) ` and ` processors . getSortedByCounts ( ) ` with a new ` LinkedList `
removed parameters from the ` keysToSortedDataFlavorArray ` method and simplified the ` compareTo ` method in ` DataTransferer ` to
added an argument to the ThriftServerCmdLine to specify an ephemeral port for testing purposes
added a check for end of file in RegExpScanner . java to ensure proper handling of end - of - file scenarios
replaced Boolean . getBoolean with a conditional check for enabled metrics and timers to improve performance by eliminating unnecessary property checks
fix npe in chatroomjabberimpl when there be no muc room .
fix for npe on miss / empty filename ( issue # 364 )
refactor refresh token creation logic into a separate method to improve code readability and maintainability
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove deadlock in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to the ` ShadowNativeImageReaderSurfaceImage ` class to provide a placeholder implementation for
updated the SSL URI for BTCChinaMarketDataService in BTCChinaExchange . java to ensure the service connects to the
pmd : make ant task work on window
added OauthController and Oauth2PluginTest classes for OAuth2 authentication functionality to implement and test the OAuth2 plugin functionality in the application
rename SemgrexPattern class to improve clarity to enhance code readability and maintainability
refactor ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` and add a new test in ` EntryStreamTest `
( chore ) camel - swagger - java : improve error message for invalid parameter
added support for mixed scala java tests in RobolectricClassLoader to enable compatibility with Maven Surefire for Android projects with mixed scal
invert the condition to check if transmittableAudioEncodings does not contain transmittableAudioEncodings to ensure that transmission only
updated type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test for current timestamp in CreateTable
[ geot - 5292 ] add test for gml 3.1 and gml 32 feature collection
updated NetworkTestUtils to include a boolean flag for tracking invocation status and modified response handler references in UaaHttpRequestUtilsTest to enhance functionality and
added conditional checks and modified return statements in ColumnarDataSource , RowProcessor , and BinaryResponseProcessor to ensure that regex mapping is only expanded if
updated the CustomSeekProvider to use a constant for seek length and refactored the splitIntoThirtySecondsParts method to improve code read
added XLCDCommunicator and XLCDController classes and refactored firmware checks in FirmwareUtils to support XLCD
[ drools - 725 ] fix jaxp schema loading in kie - maven - plugin ( # 259 )
updated retry logic in EventQuery classes to include a retry mechanism and added checks for non - empty messages to enhance robustness of the query execution
replaced thread state assertions with thread join logic in WorkerProcessPoolTest . java to simplify thread management and improve code readability
modified the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added tests in ` DelegatingMethodTest ` to ensure
updated constant values in EnergyCost . java from 20000 to 10000 to increase the cost for energy management operations
updated method signature and added exception handling in DownloadPlugins . java to improve error handling and ensure configuration updates are properly managed
deleted the ` SpringTransactionHooks . java ` file and changed ` SpringTransactionHooksTest . java ` to ` AbstractSpringTransactionHooks `
refactor methods in AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` to demonstrate the behavior of ` String ` initialization in JDI to
added functionality to resolve provided dependencies and targets in AndroidLibraryDescription . java and updated GraphEnhancementQueryEnvironment . java to enhance dependency management
add a new feature flag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to control the synchronization of keyboard animations during transitions
replaced the handling of anomaly messages with a boolean flag for saved bug reports to improve clarity and control over bug reporting behavior
added a new constant CINEPACK to FormatConfiguration and utilized it in LibMediaInfoParser to support cinepack format detection in media
added camera bobbing functionality and adjusted animation offsets in the Player class to improve user experience by allowing customization of camera behavior during gameplay
updated blob description retrieval from ` data . describe ( ) ` to ` b . digest . toString ( ) ` to ensure accurate representation of blob
deleted HSQLDBServerFilesFilter . java and modified file listing logic in TestUtility . java to streamline file filtering process by elimin
fix nullpointerexception in walletappkit . restorefromseed ( )
updated the method to retrieve the latest version from API to use the correct API data series version and added a trace log statement when no title is
added method invocation handling for method type existence in HasTypes . java to ensure accurate type resolution for method invocations
updated array initialization and validation in AmbientCubemap . java to use a constant for the number of values to improve code readability
bugfix # 208321 , display warn if profiler mode be not configure properly
added handling for zero values in multiple UDF mask classes to improve data type conversion for zero - based masking operations
test : use ` temporaryfolder ` in ` boundedoverheadblockstoretest ` and ` derbyblockstoretest `
add itemstack # isitemstackdamageable ( ) and itemstack # gethassubtypes ( ) method . close # 2
fix mc - 167447 , add line _ width to renderstate , fix # 167447
simonstewart : set browser . startup . page to ` ` 0 ' ' rather than ` ` 0 ' '
added additional HTTP method checks for CONNECT and GET requests in Http1xClientConnection . java to ensure proper handling of HTTP / 1.1
updated task name from " compile " to " process - classes " in JoobyMojo . java to clarify the purpose
bug 61637 - httpclient should close idle connection , not just shutdown it .
added a conditional check to avoid processing aggregate function suffixes in AmbariMetaInfo . java to ensure that metrics are only added when the aggregate
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this method to enhance flexibility in managing fullscreen
added a new file ` Solution . java ` that counts the frequency of a given integer to facilitate counting and printing the frequency of
[ java ] set socketchannel to null in clusteredagentmanagerimpl . startagent ( )
rename MutisignOperationerGodicTest . java file to improve clarity and consistency in naming conventions
added error handling for NoSuchElementException in StaxEventItemReader and created a test for restarting at the end of the file to improve robustness
replaced specific text imports with a wildcard import and added null check for qualifiedResourceName in TestAttributeSet to simplify import statements and enhance robustness
updated import statements from ` com . nimbus . jose . shaded . json ` to ` net . minidev . json
updated platform detection from " Linux " to " AIX " in OS . java and added a new library path in PKCS11Test . java
api : fix vr control ip when delete vr ( # 7808 )
added a method ` invokeWithoutBlockingWithResultSync ` to ` RunnableWithResultSync ` to facilitate asynchronous execution of runnable results
remove presencemessagecompletests since it ' s not use anymore .
replaced integer casting with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve handling of rounded
[ hotfix ] [ test ] fix checkstyle violation in testclusterdumper
hbase - 16905 fix alignment of keyvalue class size ( addendum )
camel - 16400 : camel - core - optimize to reduce stack frame in use during rout .
added support for handling ConditionalTask instances in SparkCrossProductCheck to enable processing of conditional tasks in the application
added handling for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions in Launcher
updated conditional logic in ` LoginInfoEndpoint . java ` and added new tests in ` LoginInfoEndpointTests . java ` to ensure proper handling
hbase - 26411 add todescriptivestring ( ) method to help debug the problem
added a new ` result ` field and updated related methods in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw `
added support for reserved words " PERIOD " in the MariaDBDatabase and created a test for it in AddColumnGeneratorTest to ensure
[ java ] improve the description of the portable worker ' s configuration option
added information about launcher shortcuts and dictionary loading issues in VersionChangeLogs . java to improve user experience by providing relevant features for Android 7.1
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public and added a public access modifier to TestUtil to allow
remove debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] do not invoke aeron client when aeron client be not use .
updated validation logic for implicit lambda parameters and corrected type creation in method signatures to ensure correct handling of implicit parameters and improve type safety
refactor menu item visibility and visibility methods in FileMenuFilter and FileDetailFragment to improve code readability and reusability by consolidating
added support for BTC _ deposit type in BTCETransHistoryResult and updated corresponding test in BTCETransHistoryJSONTest
replace List < HttpStatus . Series > and List < Class < ? extends Throwable > with Set < ? extends Throwable > in RetryFilterFunctions .
marked the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated condition in LastQueryExecutor and added a new test for last with unseq time larger than sequence time in IoTDBLastIT to ensure
updated newline character from " \ r \ n " to " \ n " in the reqStr append method to ensure proper formatting of the HTTP
added a static block to set a log level to " ERROR " for HTTP wire in BuildImageMojo . java to improve error handling by
added a method call to set the safe area of the title bar to enhance user experience by ensuring the title bar remains accessible
refactor loop to iterate backwards through TimeSeriesChunkMetaDataList to improve performance by avoiding unnecessary iteration
added SQL syntax to alter table and column names in AlterTest . java to ensure correct parsing and deparsing of SQL commands
make copystate ( ) public for backwards compatibility
fixed - rexecutorservice . executecallable ( ) method throw asyncexception . # 3551
move ` ` . part ' ' suffix to constant in ` ` filesystemsplit ' '
[ hotfix ] fix checkstyle violation in orc module
[ hotfix ] fix checkstyle violation in comparefunctionsprocessor
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task
refactor ` toString ` methods in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to improve
added null check for mLastGestureState and unregistering a listener in AbsSwipeUpHandler and TaskAnimationManager to ensure proper handling
refactor ` getLockTimestamp ` and ` setLockTimestamp ` methods to be instance - level in ` AppPreferences ` and ` PreferenceManager `
updated the artist retrieval logic in MediaInfoParser . java to use a new method to improve code readability and maintainability by encapsulating artist
added null check for remoteMessage in NCFirebaseMessagingService . java to prevent potential NullPointerException when remoteMessage is null
nifi - 1745 : fix npe in splittext when input be empty .
added support for Windows key store in HttpsConnectorFactory to enhance compatibility with Windows environments
increased the default check timeout from 400 to 1.0 seconds in RestTemplateSenderTest . java and WebClientSenderTests . java
added a condition to check if the result code is not found in FileSyncAdapter . java to handle cases where a remote folder does not exist
added support for customizable animations in the Slider class to enhance user experience by allowing smoother transitions
removed unnecessary whitespace in assertions in LineSeparatorProcessorTest . java to improve code readability and maintain consistency in formatting
changed maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to optimize texture packing performance by reducing the size of resources
added a test for negating a Ternary expression in the UnnecessaryParenthesesTest class and updated the UnwrapParentheses class to
fix potential npe in camel - hazelcast
added a new test class ` TextFeedbackTest ` and modified ` TestRunner ` and ` TestRunner ` to include it to enhance testing capabilities
replace Math . round with Float . compare for score comparison to improve precision in score comparison logic
updated display density cases in AddAndScaleMultiImage . java and modified resource saving in ResourceEditorApp . java to use try - with -
make array class element offset available for copy of array class .
added logic to skip processing if the first line is zero in DefaultLogPublisher . java to improve performance monitoring by avoiding unnecessary processing of total
added support for remote SCM systems in the configuration and runtime environment classes to enable better control over remote SCM system behavior
updated the state check in MieleApplianceHandler to include additional states to ensure proper handling of additional states in the application
replaced usage of StatsLogCompat with SysUiStatsLog for event logging to standardize logging functionality across the application
updated variable name from ` log ` to ` LOG ` for clarity to improve code readability by using a more descriptive variable name
add unit tests for ProjectGenerationEvent ' s finished and started states to ensure correct serialization and deserialization of project generation events
add ` ` preview point ' ' feature flag ( ` ` preview point ' ' )
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future development
added validation to ensure the remaining time is non - positive before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to
updated multiple Java files for consistency in naming and structure to improve code readability and maintainability
added " -- gc - sections " and " nocopyreloc " options to the linker flags in NdkCxxPlatform . java to
updated the routing logic in SpringCloudCircuitBreakerFilterFactory to expand fallback URIs and added a new test for circuit breaker URIs with variables to
simonstewart : move the firefox test to the right directory
fix npe in readonlysharedstringstable due to lack of ns _ spreadsheet
added a method to retrieve account network via HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
added a check for available text width before layout adjustments in SwingUtilities2 . java and modified the GTKLookAndFeel initialization in
simplified the initialization of the FlatteningIterator and introduced a new FlatteningIteratorTest class to improve code readability and maintainability while
replaced ` < b > ` and ` < / b > ` tags with empty strings for title and body in NotificationUtils . java to
doc : generate sample code in the java microgenerator ( # 374 )
add a new test method to reload and delete existing question in instructorfeedbackeditQuestionsUiTest . java to ensure that any existing question
updated return values in HSSFSheet . java to return 0 instead of - 1 and modified row comparison logic in BaseTestSheet . java
added permission checks for malicious intents in the InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from
[ java ] rename ` ` pendingsessions ' ' to ` ` pendingclustersessions ' ' for clarity .
updated the hashCode method in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to improve
added handling for remotely closed connections in HTTP3StreamConnection to ensure proper flushing and release of connection data when remotely closed state
updated SplitReader interface to extend AutoCloseable to ensure proper resource management and prevent potential memory leaks
removed the deepCopy ( ) method from GsonBuilder . java to streamline the code by eliminating unnecessary duplication
sulong : fix npe in llvmscanner when cache be null .
refactor asynchronous file handling in RestClientRequestImpl to improve clarity and efficiency to enhance code readability and maintainability while ensuring proper asynchronous
updated method call formatting in GrblController . java to improve code readability and maintain consistency
update class loader management in MockFactory and introduce SearchingClassLoader for improved class loading to enhance class loading efficiency and facilitate
add test to demonstrate how to set the drag - to - rotate flag
updated condition to include LEFT _ SEMI _ JOIN alongside INNER _ JOIN in ConstantPropagateProcFactory . java to enhance the handling
refactor HttpReceiver and HttpSender to simplify response completion checks to improve code readability and maintainability by eliminating unnecessary variable declarations
rename arraylengthoffset to arrayoopdesclengthoffset to avoid confusion .
fix for http : / / issues . apache . org / activemq / browse / amq - 2636 - add a default
updated multiple Java files for consistency in naming and structure to improve code readability and maintainability
added checks to ensure the application context is running before attempting to stop it to prevent potential NullPointerExceptions when the application is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the method to be overridden by subclasses
refactor metrics handling in SpringmvcClient and CodeFirstSpringmvc to utilize MetricsPublisher for better performance monitoring to improve code
replaced the method reference from ` SAFE _ ACCOUNT _ AGE _ DATE ` to ` SAFE _ ACCOUNT _ AGE
refactor code formatting and improve readability in StructureHeader . java and StructureReader . java to enhance code readability and maintainability
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related tests to enable support for resource URL handling in the webflow
add dexreturninliner which demonstrate how to inline return statement .
add property to enriched rule ( # 4321 )
modified the return statement in PathResource . java to remove the NOFOLLOW _ LINKS option and updated test cases in AliasCheckerSymlinkTest .
[ hotfix ] [ table ] remove unused sql dialect from executioncontext
refactor ` rDotJavaPackages ` to ` hasRDotJavaPackages ` and update related methods to use it to improve flexibility in
[ java ] add test case for astpackagedeclaration
added a method to set the minimum cross - compaction unseq file level in IoTDBDescriptor to allow configuration of the minimum cross - compaction un
[ hotfix ] move activeresourcemanager into the ' active ' package
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated ` ZipResource ` to use ` CLASSPATH _ SCHEME ` instead of ` CLASSPATH _ SCHEME _ PREFIX ` and improved
updated the ` ExpandableUploadListAdapter ` class to enhance thumbnail generation logic based on upload status to improve user experience by providing a clearer
updated RobolectricTestRunner to process test classes in a hierarchy and added new test cases in RobolectricTestRunnerTest to
filter blocks and items based on their registry names to ensure only valid blocks and items are processed
changed abstract methods to protected in AbstractDataChangedListener and updated WebsocketDataChangedListener to extend AbstractDataChangedListener to enhance method accessibility
updated JSONPojoConvertor to handle enums and modified test cases accordingly to enhance type conversion functionality and improve test coverage for enum handling
added a deprecation warning for the ` -- view ` option in the project to inform users that the ` -- view ` option will be removed and
changed the type of originalPayload from String to byte [ ] and refactored the handling of input / output streams to improve memory efficiency and
updated GyroControl to implement OrientationEventListener for handling orientation changes to improve responsiveness by adjusting mouse coordinate calculations based on device
changed BIOME _ LIST _ SIZE to use BIOMEGenBase ' s array length instead of a fixed value to improve flexibility
replaced instances of ` println ` with ` print ` in ` GetInterfaceTest . java ` and made interfaces public to enhance code clarity
remove duplicate declaration of environment variable in FileCompilerConfig . java to improve code readability and maintainability by eliminating redundancy
added a new file ByteToLongCollector . java that defines a generic collector interface for byte - to - long conversions to facilitate the
added a preload parameter to the MMapDirectoryFactory class to control the loading behavior of the map directory
added custom metrics for various component types in BukkitPlatform . java to provide insights into the platform configuration for better monitoring and monitoring
refactor QuickConnectREST class to improve code readability to enhance maintainability and facilitate future development
added aspect ratio and default card image assignment in CardPresenter . java to improve the visual representation of the card in the application
do n ' t increment auth method count if it be not implicit .
updated cloning logic for long , double , decimal , and byte arrays to handle empty arrays gracefully to improve robustness by avoiding unnecessary array
added a new test method ` testSystemNanoTimeJit ` to ` TimeChangeTest . java ` for measuring and verifying the
added trimming of whitespace from the input line in MultiPartFilter . java and printed the request parameter in MultipartFilterTest . java to ensure
add livingexperiencedropevent , make it possible to drop player experience .
updated error handling in OpenUVBridgeHandler and OpenUVReportHandler to use localized messages for API errors to improve user experience by providing clearer
[ beam - 8470 ] remove unsupportedoperatorsvisitor and use planner . validate ( ) instead
updated GraphEnhancementQueryEnvironment to utilize RdepsFunction and improved dependency resolution logic to enhance the functionality of graph enhancement by
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a boolean flag to indicate whether to scale entire rockets and updated selection logic accordingly to ensure that only valid rocket components are selected
replaced ` Arrays . toString ( bytes ) ` and ` Arrays . toString ( bytes ) ` with direct calls to ` rs . getBytes (
added logic to retrieve and attach time boundary information for hybrid tables and refactored related methods to improve efficiency and clarity in handling time boundary
fix regression cause by connector re - factoring .
updated regex pattern and improved album title extraction logic in EightmusesRipper . java to enhance image processing accuracy and provide clear
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` for consistency across multiple test files to
added a condition to check if the profile is a phone and not landscape in QuickstepLauncher . java to ensure proper layout handling for phone
replace calls to ` getValue ( query , PROPERTY ) ` with ` query . unwrap ( QueryImpl . class ) ` in test assertions to ensure
replaced ` Files . readAllLines ( ) ` with ` subsystem . readMatchingLines ( ) ` for improved security to enhance security by
removed dynamic check for getResultStream method in JpaQueryExecution . java to streamline the query execution process by eliminating unnecessary checks
physicsprocess : fix npe in case entity be null .
added test for entry processor with predicate in deleteentryprocessor
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color calculation in Utils . java and modified HTML message format in UtilsTest . java to ensure consistent color representation and improve test coverage for color
disable menu item for empty string ( # 5338 )
updated the scratch path format and added a deletion step for the link tree in Aapt2Link . java to improve path clarity and ensure
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
make sure undo / redo in algebra view do n ' t clear selection
( chore ) camel - sjld : handle empty stack exception more gracefully
added ` isCanceled ( ) ` method implementations across multiple classes to standardize cancellation handling across call types
refactor isAnnotationPresent methods across multiple classes to use a default implementation to improve code maintainability and reduce redundancy
added a default implementation for the removeAllWidgets method in UILayout . java to indicate that the method is not yet implemented and provide a placeholder
[ hotfix ] [ yarn ] fix flaky yarn test
http : / / bugs . openssl . org / p / openssl / issues / show _ bug . cgi ? id = 545 -
added logic to force transcoding of high - res content based on Fire TV Stick detection to improve performance by optimizing video transcoding
[ beam - 8470 ] fix source translator to use mock data source .
replaced specific Java imports with a wildcard import and modified listener management logic in GpsLoggingService . java to improve code readability and ensure
updated the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` for full widths and modified the
added import for BaseItemDragListener and modified drag - and - drop functionality in FolderIcon . java to enhance drag - and - drop functionality
added ` createEmptyArtifact ` method to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` SignavioConnector ` , and
removed unnecessary comments from RabbitMQPublisherImpl . java to improve code readability and maintain consistency in formatting
removed the check for ` afterAug1 ` in ` VideoViewerActivity . java ` to simplify the video link validation logic
camel - 16400 : camel - sftp should use fileutil . compactpath ( ) to make it easy to read the file from the
fix unit test which randomly fail on slow ci server
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more d
do n ' t allow double plant to be spawn if they ' re too big .
modified the focus behavior of the tree in TranscodingTab from focusable to request focus to improve user experience by enabling request focus for better
added exception handling by throwing the caught exception in VirtualMachineManagerImpl . java to improve error management by ensuring exceptions are properly propagated
added a new method ` acceptLicense ( ) ` in ` DB2TestSystem ` and modified license acceptance logic in ` DockerDatabaseWrapper `
updated the ` units ` variable from final to non - final and added a setter method in ` DoubleModel ` , refactored the `
added a new constant BTC _ ZMW to the CurrencyPair class to support trading for BTC and ZMW in the
added sample count handling in TestPBRLighting . java to enable dynamic adjustment of the number of samples during lighting operations
updated references from " job . step " to " step1 " and " step3 " in StepWithSimpleTaskJobParserTests . java
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to improve code clarity and enforce immutability
ggbabs ( ( 1 ) ) should be ggbabs ( ( 1 ) , not ggbabs ( ( 2 ) )
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` and modified the handling of ` trigger
[ drools - 725 ] fix object creation when use bigdecimal ( # 2329 )
added " org . eclipse . jdt . " to hide the JDT used by Jetty in WebAppContext . java to improve compatibility
changed the return value of the ` useAuthCache ( ) ` method from ` super . useAuthCache ( ) ` to ` false `
updated the namespace assignment to capitalize the first segment to ensure consistent capitalization of the namespace for better readability
( chore ) camel - base : add miss exception type for directconsumernotavailableexception
added null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is null
updated progress bar step message in Loader . java to improve clarity and consistency in progress reporting
replaced direct vibration calls with a method that executes on the UI helper thread to ensure that the vibration process runs on the UI thread
added a method to update the last remote stream ID in HTTP2Session . java to ensure accurate tracking of the last stream ID for improved
enable text antialiasing for toolbar / header and toolbar ( fixes # 2276 )
[ java ] use correct term window size for subscription and publication .
refactor : remove static import of enums in ctannotationimpl . java ( # 3649 )
fix typo in exoplayer javadoc
replaced the method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to streamline pixel retrieval by using a
replaced direct instantiation of PrintStream with a new method ` newPrintStream ` to improve code readability and maintainability by centralizing output stream
increase vibration duration from 1 to 25 milliseconds to improve user experience by providing a longer vibration duration
fix compilation error due to miss import
removed unnecessary whitespace in the WebSocketClient constructor to improve code readability and maintain consistency
simonstewart : fix link to the i18n test page
improve error reporting when a linkatbuildtime be use .
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure the system state is restored after tests run
fix problem with case - insensitivity of feature name
refactor JavadocTool to improve file handling and error reporting to enhance code clarity and maintainability while ensuring unique files are processed
simonstewart : add a new test for ` ` toggle ' ' and ` ` multi ' ' option
added validation to check if the length of keys is 9 in HighestKvno . java to ensure that the number of keys is within
replaced the direct assignment of the attribute list with a try - catch block to handle HdfException to improve robustness by logging a warning
make bigqueryio . expand ( pcollection < t > ) return presults . in ( pcollection < t > . getpipeline (
act - 113 : add miss @ apiimplicitparam annotation to createtemplaterequestentity and createtemplaterequestentity
added a new file ` TestMultiANewArray . java ` to implement a Java process for class file creation with multi - dimensional arrays to
cloudstack - 7293 : disable secondary storage in management server by default
refactor synchronization logic in SyncBlockChainMsgHandler . java to improve clarity and correctness of block ID handling
added a method to set the theme of the preview tab content to ensure the UI reflects the current theme configuration
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for idle timeout in ` ConnectorTimeoutTest ` and modified the ` setIdleTimeout ` method in ` ServerConnectorTimeoutTest `
change dcoref . dictlist , dcoref . dictpmi , and dcoref . signatures to use propertyutils instead of
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve
refactor JpaPagingItemReader and JobLaunchingGatewayParserTests to improve type safety and clarity to enhance code readability and
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for improper child nodes
refactor color extraction logic to utilize a new method for retrieving the hotseat palette to improve code readability and maintainability by redu
added methods for setting default table entry and cell transformers in TypeRegistry to enhance flexibility in data transfer configuration for Cucumber
updated assertions in AtomicRemainder . java to check if newAvailableShared is less than or equal to initShared to ensure proper validation of shared
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` to streamline the project generation process by eliminating unnecessary
[ hotfix ] fix checkstyle violation in driverutils
added contact form routes and implemented contact form handling in the application to enhance user experience by providing contact - related functionality
guacamole - 641 : use simpleuser . getsystempermissions ( ) and getpermissionset ( ) instead of guacamole . getpermissions
bump version of icondb to roll out the new work profile badge
[ drools - 7 ] fix checkstyle issue in util / graph / traits / traitsfactory . java
rename methods and variables from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to
replaced manual resource closing with IOUtils . closeSafely in DocFieldProcessor . java to improve resource management and avoid potential resource leaks
refactor event listener classes for improved consistency to enhance maintainability and readability of the codebase
added an OnClickListener to the overflow button to enhance user interaction by allowing menu display on the overflow button
updated failure messages to clarify that the subject is a null reference and is a non - null reference to improve error reporting for better debugging
ggb - 188 : update line height of the help button in av
move protobufferutilitiestest from network . p2p to core . util and fix package name
fix divider position in jabref ( # 4369 )
fix aux file generation when there be a cross reference
[ geos - 9767 ] use metadatamap instead of map < string , object > for consistency
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by using a more descriptive
make sure that the contact list be update when the contact be add or remove .
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test method to clean up audit log table post parameters by position in AuditLogTest . java to ensure that the audit log table is
added a @ SuppressWarnings annotation and changed the return type of the inject method in ComponentContext . java to improve type safety and suppress unchecked warnings
added regex patterns for parsing comment lines and updated error handling in ACLFileParser to improve comment parsing accuracy and enhance error reporting
updated ` MapRDBFormatMatcher ` to use ` DrillTable ` instead of ` FormatSelection ` and modified the method signature accordingly to
added a new Map < String , String > for ancestor dimension values and updated the name generation logic in StarTreeImpl and TestStarTreeNode
added user unlock handling to the TouchInteractionService and refactored open view closing methods in BaseQuickstepLauncher and Launcher to improve user
changed the condition from checking if widthStr is not null to checking if positionStr is not null to ensure proper validation of positionStr before proceed
refactor certificate validation logic in PKIXValidator . java to improve readability and maintainability of the code
[ flink - 26011 ] [ hadoop ] [ test ] add archunit test for the test code
[ task 2728 ] change the project name start with shenyu - integration - test to shenyu - integrated - test ( # 2747 )
cloudstack - 4369 : do n ' t skip the list of public ip / private nat rule when the vr be not start (
replaced ` remove ` method with ` get ` method in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to ensure the correct type
mow - 129 store undo info on property change
replaced direct access to system property " sun . java2d . xrgradcache " with a privileged action to enhance security by ensuring
updated StreamCloseTest to use awaitility for stream size verification to improve test reliability by ensuring all streams are considered before asserting the expected
refactor ` doAfterFlush ` method and update ` perFields ` initialization in ` TermVectorsConsumer ` to improve performance by avoiding unnecessary
added deprecation handling for non - deprecated properties in ConfigurationMetadataGenerator . java and updated AbstractJpaProperties . java to include nested configuration properties to
refactor capacity and mask variables to be final in BiInt2ObjectMap and Int2ObjectHashMap classes to enhance immutability and ensure
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored destination path handling in Hive to
add some logging to help diagnose test failure
added a null check for the context before creating a new instance of SchemeAndroidIDE to avoid potential NullPointerException when context is null
use the current thread classloader when create the native - image class loader .
modified the ` modifyGrantedAuthorities ` method to return a list of granted authorities instead of void to enable the method to modify granted author
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new integration test classes for ` RawJaxrs
add support for jdbc 4.1 , which do not support querytimeout .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance test coverage for XML and supplementary character
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for sequence functionality in MariaDBDatabase to enhance compatibility with MariaDB and improve error handling during sequence retrieval
updated error messages in MappedResizeableBuffer , UnsafeBuffer , and Int2ObjectCacheTest to correct concatenation syntax to improve code readability and
added TableDataManagerProvider to set server metrics in multiple test classes to enhance monitoring capabilities for table operations in the application
updated the property key " jsse . enableMFLNExtension " to " jsse . enableMFLNExtension " in SSLExtension
refactor ObjectHashSet to remove generic type parameter and simplify iterator initialization to enhance code readability and maintainability by reducing complexity
updated character limit from 22 to 23 for shortened URLs in multiple Java files to improve user experience by allowing more than 23 characters for links
added datapoints ttl property to cassandras datastore , and refactored writebuffer to use it
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter to control the prompt behavior when Xcode
added a method ` getTerrainAtCell ` to retrieve terrain data at a specific cell coordinates to enhance functionality by allowing retrieval of ter
added default value printing logic in Pretty . java and created a new file T6665791 . java with Java compiler testing to ensure default
added error handling for missing quest encryption keys in ResourceLoader to improve robustness by providing a clear error message when the quest encryption keys
modified the return statement to check if the HTTP transport is not push support to ensure proper handling of push support for non - push scenarios
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign operation for local witnesses in BlockUtil . java to streamline the signing process for better security
updated return logic in FileSystemView . java to handle empty root cases and added security checks in Win32ShellFolder2 . java to improve robust
refactor ` ColumnText ` and ` PdfPRow ` classes to improve row height management and rename ` copyContent ` method to ` copy
refactor ListFragment to use a SparseArray for managing undo notes and improve the management of selected notes to enhance performance and maintainability of the
update backup data for new feedback question
added a null check for ` data ` in the ` getTransferData ` method to ensure that a non - null ` getTransferData `
no effective change - remove unused pstmtdelegate
refactor padding retrieval from a custom class to a direct method from ` AppWidgetHostView ` to simplify padding retrieval and improve compatibility with the
refactor MethodHandle initialization in NashornBeansLinker to use a static block for better readability and organization to improve code maintainability
rename ClassGraph and ScanResult files for consistency to improve clarity and maintainability of the codebase
renamed the CountDownLatch variable from ' latch ' to ' goAwayLatch ' and updated its usage in the IdleTimeoutTest to
replaced calls to ` assertThat ( expectFailure . getFailure ( ) . getMessage ( ) ) ` with ` assertThat ( expectFailure
replaced ` ThreadLocal ` with ` null ` for the ` currentBook ` variable across multiple files to simplify code by eliminating unnecessary
added support for checking the presence of MethodInvocation in the vote method to ensure that the provided object is a valid type before performing the vote operation
removed unused import statements for GachaHandler and Tools in DataLoader . java to streamline code by eliminating unnecessary dependencies
updated the ` postUpdateLog ` method to include ` rowsAffected ` for tracking the number of rows affected to improve error handling and provide context
ggb - 1340 use margin for the scaler , so that it do n ' t disappear .
initialized foregroundFPS and backgroundFPS with a default value of 60 to ensure proper initialization of frame rates for improved performance
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced DefaultWebSocketFrame with ChannelFutureListener in writeAndFlush to ensure proper handling of WebSocket frame closure
updated test classes to include new listener types and added interceptor functionality to enhance test coverage for state machine error handling
replaced the ` finish ( ) ` method with a ` setListBackground ( ) ` method for setting the list background color to streamline
updated import statements from org . apache . commons . lang3 to org . openhab . core . util and added a null check for
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to facilitate the accumulation of average values in
hbase - 26462 fix checkstyle violation in hbase - replication
replace VALID _ CACHE _ SET with REGEXP _ CACHE for caching regular expressions to improve performance by reducing redundant caching for compiled patterns
added a static method ` reset ( ) ` to the ` GameThread ` class to reset the ` gameThread ` to null
added a null check for the realm in the login method of DigestAuthenticator to prevent potential null pointer exceptions during authentication
refactor parameter handling in SavedRequestAwareWrapper to improve efficiency and readability to enhance code efficiency and maintainability by consolidating parameter merging
updated warning messages in BasicConfigurator , LoggerContext , and ConfigurationAction to improve clarity and accuracy of log messages for better debugging
replaced multiple instances of ` waitPoint . countDown ( false , true ) ` with ` this . wakeup ( ) ` in `
added a condition to check if the Android O is not running in PhotoViewerActivity and updated the AutoComplete functionality in UserAutoCompleteHelper to
updated schema info level from minimum to basic in SchemaCrawlerTest to provide more detailed schema information for testing purposes
replaced the direct usage of ` zipOut ` with a buffered output stream in ` SaveTask . java ` to improve performance by reducing
replaced random byte generation with a fixed byte length Unicode string conversion in TestPayloads . java to improve code readability and ensure proper handling
fix client side entity not be able to spawn . close # 103516 ( # 10358 )
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 7 ] use deep array comparison in protobufinputmarshaller . deserialize ( )
fix switch / cases indentation see camel - 14540
pdfbox - 4892 : remove public modifier , a suggest by valerybokov
added Spring Expression Language support and improved HTTP method handling in RemoteEndpointServiceAccessStrategy to enhance flexibility and enable dynamic URL resolution based on
added a new method ` newResponseBuilder ` to create ` ResponseBuilder ` instances to improve code modularity by encapsulating the creation of `
added a notification call to start command in AsyncBackgroundTaskManagerTest to ensure that commands are sent to the task manager
refactor ` computePreviewDrawingParams ` method to ` recomputePreviewDrawingParams ` and add null check for ` mReferenceDrawable ` to improve
replaced TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to enhance filtering capabilities for improved text analysis
replaced null argument checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot to improve code readability and maintainability
added verbosity support to the JavacStep class and modified the createSubContext method to accept an optional verbosity parameter to enhance flexibility in
added a check to convert schema to uppercase if it is not null and database type to ensure consistent schema handling for Oracle database types
log4j2 - 1343 add context name to asyncloggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion . java with a main method to facilitate garbage collection testing of shrink - to - one
replaced string splitting method from ` split ( " , " ) ` to ` Splitter . on ( ' , ' ) . split (
updated ` AnalyzingInfixSuggester ` and ` AnalyzingInfixSuggesterTest ` classes to remove UTF -
updated the attachment handling logic in PushsaferMessageBuilder . java to improve clarity and correctness in encoding the encoded string based on the
updated the method name from ` showLabelStats ` to ` showLabelStats ` in ` ModelExplorer ` and ` SequenceModelExplorer ` ,
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
changed the visibility modifier of the FORMATTER function from ' final static ' to ' static ' in multiple FieldTest classes to allow for broader
updated UDFRound . java to replace Log and LogFactory with BigDecimal and RoundingMode for improved precision handling to enhance precision precision in rounding operations
replaced manual configuration retrieval with ConfigParser ' s valueAsOrElse method for injectionEnabled and useIncludedLibrary to improve code readability and reduce
changed class declarations for Test1 and Test2 to be public to allow access to these classes from other packages
updated player event listener messages from " permission . no _ permission _ event " and " permission . no _ entry _ DENIED " to
fix : fix bug in conditionandor and conditionandinconstantset . getcount ( ) where count ( * ) return wrong value
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in
added randomization logic for box and circle creation in Box2DCharacterControllerTest . java to enhance testing variability for dynamic bodies and ensure
added tests for exceeding the maximum size limit and memory size in flight recorder options to ensure correct handling of memory allocation limits and prevent runtime exceptions
8274396 : [ testbug ] test / java / lang / stringbuffer / objectalignment . java fail with ` ` must
added a method to retrieve the target package from the manifest and updated related classes to enhance the instrumentation testing framework by allowing specification of the target package
refactor DocHelper to improve code structure to enhance maintainability and readability of the code
replaced ` Arrays . asList ( ) ` with ` new ArrayList < > ( new ArrayList < > ( ) ) ` in the ` acceptable
replaced generic type casting with direct type casting for method invocations in Test6987555 . java to improve code clarity and reduce type
reformatted code for improved readability and consistency to enhance maintainability and adhere to coding standards
refactor Inflection class to improve code readability to enhance maintainability and facilitate future feature additions
added methods to retrieve and set locale in EvaluationContext to enhance locale management capabilities in the application
removed unused import of Plugin from SummaryPrinter . java to clean up the code and improve maintainability
added a break statement in DrawerActivity . java to terminate a loop if a condition is met
updated import statements in MongoQueryCreator . java and modified debug logging to include query object to improve code clarity and enhance debugging information by using
add system property xwork . loggerfactory to allow custom loggerfactory
rename test method in adminaddpeerwithp2pdisabled acceptance test to clarify the purpose of the test
polish ` ` make health indicator conditional on bean name consistent across auto configuration
added a ConcurrentMap to manage PStore configurations and modified the return statement to use a new instance of PStore to improve thread - safety and
changed the access modifier of the deleteFiles method from public to private to restrict access to the method for better encapsulation
rename ` Provider ` to ` ServiceProvider ` and update related methods in ` ServiceLoaderSpliterator ` and ` TypeUtil ` to improve cl
[ gr - 38686 ] remove the throw clause from javaobjectmessageresolution . java method .
added ` isToolchainCreated ` method to ` ToolchainProvider ` and its implementations in ` DefaultToolchainProvider ` and ` DefaultTool
do n ' t remove context from engine if it ' s already on the engine .
replaced ` indexOf ` with ` contains ` for string comparison in ` AbstractCheckDescriptor . java ` to improve readability and performance of the
rename ` setLinkerFlags ` to ` setExportedLinkerFlags ` and update related references in ` PrebuiltCxxLibraryDescription `
refactor ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recents
updated generic type declarations for listener types across multiple classes to enhance type safety and eliminate compiler warnings
abstractblockchain : use the block header . gethashasstring ( ) . gethashasstring ( ) to get the hash of the
[ issue # 5013 ] fix getstorepathphysic ( ) and getstorepathcommitlog ( ) in defaultmess
refactored the initialization of JvmGcMetrics and JvmHeapPressureMetrics to remove the need for a try - with - resources statement to
add getmessagestorestatsservice ( ) and getmessagestorestatsservice ( ) method in compactionlog ( #
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used
added methods to check for the presence of the system UI object and execute a shell command if it exists to enhance functionality by integrating system UI
changed logger and sessionIds fields to be final in SessionRegistryImpl . java to enforce immutability and improve thread safety
http : / / issues . apache . org / jira / browse / bugzilla / show _ bug . cgi ? id = 5
added debug log statements to BonsaiWorldStateArchive and improved null checks in BonsaiWorldStateUpdater to enhance traceability and
changed the parameter type of getText methods from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository
[ java ] unignoring a test that be not yet implement in firefox
added exception handling for connection return in SocketConnector . java to improve robustness by ensuring connection is returned even if an IOException occurs
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to reflect the new
added synchronization to the heartbeatExecutorService in DbTxnManager . java to ensure thread safety during heartbeat execution
replaced the method ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and added a new method ` wrapWith
added a method ` updateFirstLineShowing ( ) ` to handle drag - selecting text out of the TextArea ' s bounds to improve
added temporary and staging directory configurations in TestInformationSchemaWithPrivilege . java to enhance directory structure for testing purposes
refactor graphics configuration retrieval logic in Component . java to improve clarity and efficiency of graphics configuration retrieval
tika - 3998 -- add unit test for old oom mode , and change default serverstatus to true
camel - 16400 : camel - core - optimize pipeline to reduce object allocation .
add some more useful statistic about a parser to the printtag tool
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
http : / / issues . apache . org / jira / browse / amq - 3833 - fix test that expect failure
[ java ] make startfromtruncatedrecordinglogtest more reliable .
updated the calculation of ` arc ` and ` outer ` in ` LineBorder . java ` to use a float instead of an integer to improve
updated null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to ensure robust handling of null or empty galleryImages
updated DEPLOYMENT _ ID handling in StandardChangeLogHistoryService and modified CreateDatabaseChangeLogTableGenerator to remove NotNullConstraint to streamline
updated usage messages in PrintFields . java and SetField . java to reflect the new package structure to clarify the usage of the interactive
removed the ' moreColumnOk ' parameter from the ` canUseIndex ` method and related calls to simplify method signatures by eliminating unnecessary
added a ` provisionalEngines ` map and modified engine management logic in ` QuickfixjComponent ` and ` QuickfixjComponentTest
added support for display zoom controls in RoboWebSettings to enhance user control over zoom features in the application
added corporea block , brick , and slab to the corporea engine , and refactored the corporea spark to
refactor ConnectionFactory to improve connection handling logic to enhance performance and maintainability of connection management
added a method to enable and disable menu items in GpsMainActivity to improve user interface responsiveness based on application settings
updated the message for empty list from " server _ search " to " filter _ list " to enhance clarity by using a more descriptive
move @ serviceregistry . settings to org . hibernate . test . orm . entitytests to fix test failure
updated MotorMountConfigurationPanel to use ' subpanel ' instead of ' this ' in MotorMountTableModel to improve table
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` LINE _ SEPARATOR `
added getter and setter methods for creator and subject in POIXMLProperties . java and implemented a test for document properties in TestPOIXML
removed an unnecessary call to super . doStop ( ) in HandlerWrapper . java to streamline the code by eliminating unnecessary complexity
[ java ] do n ' t attempt to read cnc file if it do n ' t exist .
rename the ` Marker ` interface and related classes to ` Command ` and introduce a new ` Helper ` class for better clarity to enhance
added jmod detection and declass handling methods in ClassFileSourceImpl . java to ensure proper handling of jmod - related jar files
updated ` TreeBackedElement ` , ` TreeBackedEnter ` , and ` TreeBackedPackageElement ` to use nullable ` Post
updated tokenRequest instantiation in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest and set request
updated array element retrieval in AbstractFromPropertyValueRangeDescriptor to use valueRangeObject instead of arrayLength to ensure the correct value is stored in the
hbase - 2640 add synchronization to zk assign and watcher ( # 399 )
added checks for the current EGL context in GlUtil . java to ensure proper error handling when no context is available
[ drools - 786 ] avoid to remove activation when the rule flow group be deactivate
added a return statement to HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed unnecessary exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve error handling
fix clientqueuedisruptiontest by add miss cleanup
refactor : use defaultjavaprettyprinter instead of signatureprinter for ctreference # tostring ( )
changed the access modifier of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated GeoPointField , GeoPointTokenStream , and GeoPointInBBox classes to enhance functionality and improve code organization
added a new class ` FakeBuildable ` and modified ` OnDiskBuildInfoTest ` to use it for mocking buildable instances to
fix checkstyle issue in inventory / objects / gui / universalbucket . java ( # 7373 )
updated variable and variable names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity
added a check to return 0 if the velocity is less than a threshold to prevent potential errors during calculations
replaced calls to ` getBucket ` with ` _ storage ` for creating , listing , and creating Blobs in ` GcsPinotFS
removed duplicate calls to blockCloseVertxByName ( " transport " ) in TestHighwayTransport . java to ensure proper resource management and avoid
# 1645 - ddl - engine - ddl - engine - ddl - history : create and replace history view ( # 1646 )
updated the expected value in the clustering engine check from 2 to 3 to ensure the test reflects the correct expected behavior
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to being rewritten
updated ` ParserCacheCommand ` to use ` ParserStateObjectInputStream ` for deserialization and added a new class ` ParserStateObjectInputStream ` to
updated objectQuotingStrategy assignment logic in ChangeSet . java and added objectQuotingStrategy retrieval in DatabaseChangeLog . java to ensure proper handling of
changed the method from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve the parsing
deleted the CsrfControllerAdvice . java file to remove unused controller advice related to CSRF token handling
added a method to quote the path separator in the endorsed argument to ensure proper handling of special characters in file paths
added scrim animations and modified background drawable handling in Launcher and AllAppsBackgroundDrawable classes to enhance visual feedback during action screen transitions and improve
updated the long comparison from ` > ( 2 < 24 ) ` to ` > ( 1 < 24 ) ` in ` TypeInferenceUtils .
chore ( regen ) : update java microgenerator to 1.0 . 1 ( # 438 )
added handling for UNC and ABSOLUTE path prefixes in WindowsPathParser to ensure correct path type validation for absolute and relative path inputs
replaced InetSocketAddress with a direct instantiation of MulticastSocket in Promiscuous . java to simplify the code and improve readability by elim
updated writer and query initialization in TestWildcard . java to ensure proper resource management and avoid potential resource leaks
change return value from nBits to nBits . clone ( ) to ensure that the returned array is not modified
changed the visibility of the ` deriveCollectorName ` method from private to protected and added custom collector tests in ` TestProfilerCollector ` to enhance
refactor type hint logic in MappingMongoConverter and add a new test case in MappingMongoConverterUnitTests to improve type hint verification and ensure
added performance measurement to the createProxyFactory method to improve performance tracking during proxy creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling to include the original exception as a cause in TCPConnection . java to provide more context in error messages related to connection issues
replace the reinflateWidgetsIfNecessary ( ) method with the getWorkspace ( ) . reinflateWidgetsIfNecessary ( ) method to improve
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure that the file dialog behaves
* fixed bug in lwjgl backend that prevent the lwjgl backend to start
add test case for instructorstudentlistpageuitest . testshowphoto ( ) and testshowphoto ( )
added environment variable checks to the TestIgnorance class to determine if tests are ignored due to environment variables
removed the pointer parameter from the fling method signature to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository and introduced a test for it in QueryDslJpaRepositoryTests to
add computememorysize ( ) method that take a fraction of memory to allocate .
increased test timeout from 2000000 to 20000 in JMSPublisherConsumerTest . java and modified method parameters in PublishJ
refactor SnowballAnalyzer class to improve code readability and maintainability
updated previousIndex management and initialization logic in StreamingAggTemplate . java to improve clarity and correctness in index handling during streaming operations
improve error message when an invocation plugin can not be find .
added a new method ` stream ` to the ` StreamSupplierComponent ` class to provide a convenient way to stream entities by using a default intensity
updated logging messages to clarify that the file being moved is fully played and added retry logic for renaming to improve log clarity and
updated method signatures and access modifiers in InjectorProxy , ReflectionUtil , and related classes to improve the flexibility and accessibility of the injection proxy
[ hotfix ] [ stream ] remove call to stream . close in flinkstreamingcreatefunction
added unit tests for ` ShowStatementTest ` , ` UnsupportedStatementTest ` , and ` CreateTable ` to validate SQL parsing and deparsing
changed return value from null to an empty list in AppleTest . java to ensure that the method returns an immutable list instead of null
updated test cases in NamedSetTest . java to include " QualityDistribution " and " Inc . " to enhance test coverage for named sets
added connection state handling and refactored connection logic in DeconzBridgeHandler . java and WebSocketConnection . java to improve connection management and
replaced ` setAttribute ` with ` removeAttribute ` in ` AbstractProcessingFilter ` to ensure proper removal of security attributes from the session
refactor table creation logic to use a retry mechanism for enabling tables to improve reliability by allowing retries when table creation fails
added configuration to PMS to disable PMS for improved performance during recognition
server : update vm state machine when vm be in stopped state
updated test annotations and imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to improve test structure and ensure compatibility with JUnit4
added @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding
updated table and column names in AppendOnlySchemaIT . java to include ' metricVal1 ' and ' metricVal2 ' to ensure consistency
added a check to verify document count consistency in SegmentReader . java to ensure consistency between deleted and segment document counts during indexing
add a getloggername ( ) and logtrace ( ) method to the siplogger class .
updated the FilamentFactory class to include a length requirement for staves w / no starting barline to ensure compatibility with staves without
removed default value ` handleFileUploads ` from ` VertxPlatformHttpServerConfiguration ` and updated its usage in ` VertxPlatformHttpEngine
added a test for CSRF protection method case sensitivity in CsrfFilterTests . java to ensure that the filter correctly handles requests with case
refactor HotSpotObjectConstantImpl to use a local variable for field access instead of a static class to improve code readability and reduce
renamed the method ` add ` to ` addFrequency ` in ` SpellCheckComponent ` , ` AbstractLuceneSpellChecker ` ,
updated the way the current time is used in the FileIO class by introducing a new variable to improve clarity and maintainability of the
[ sql ] fix copy of ctedefinition when create a sqmetastatement
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData functionalities in the query compilation process
updated the argument for the library command from " -- out " to " -- root " and included the project ' s root path to ensure the
updated the slider value from 180 to Math . PI in RailButtonConfig . java to improve clarity and accuracy of the slider representation
update drawEncloser parameters in OverlayRenderer and replace exec with Timers in Saves to improve rendering accuracy and enhance error handling during save
added support for expression language in KerberosProperties . java to enhance security by enabling expression language features
removed unnecessary null checks for remoteMountPointComponent before setting translation and rotation to simplify code and improve readability by eliminating unnecessary null checks
updated the ` setupViews ` method to include ` ScrimView ` and modified the ` setupViews ` method to include it to enhance
[ flink - 20977 ] [ state ] add option to enable / disable periodic materialization
added a private ` value ` field with getter and setter methods in ` ProtocolParameter ` , and updated ` List ` and ` ParamTagHandler
add a test case that reproduce http : / / github . com / tomcat / tomcat / pull / 103
add checkrouteranswer . isbumped ( ) to checkrouteranswer . isbumped ( )
added Content - Type header with " application / x - www - form - urlencoded " in SwitchToPostInterceptor . java and updated request
[ hotfix ] fix checkstyle violation in embeddedclientconnector
added logging functionality to PhoenixResultSet and replaced SQLFeatureNotSupportedException with a warning message to improve error handling and provide a warning message for
replaced instances of AndroidNet with a new instance of AndroidNet in AndroidDaydream . java to ensure compatibility with the latest Android API
[ hotfix ] fix the order of numrowsconsumed and numrowsconsumed in llvm realtime segment data manager
removed the ' false ' parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method calls to
hbase - 16400 addendum remove unused prefixtreecodec from mapreduceutil
added inflation failure handling in DesignerActivity and made root variable final in XMLLayoutInflater to improve user experience by preventing unint
refactor PushbackInputStream class implementation to improve code readability and maintainability
make loweringphase abstract and implement schedule . containslowerable ( )
updated the message format in ErrorMessageAdapter . java from download _ folder _ failed _ content to sync _ folder _ failed _ content to clar
updated parsing logic in Makefiles . java to handle carriage return and newline characters to ensure consistent parsing behavior across different operating systems
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and modified the null check
updated the refresh flag and bound refresh logic in SimpleBatchNode . java to ensure proper handling of transformation refresh state
[ gr - 16927 ] fix uninterruptible check for method intrinsification .
added framebuffer size callback functionality to GLFWWindowSizeCallback to manage window resizing changes to ensure proper handling of window size updates and
updated translation calculations and animations in LauncherAppTransitionManagerImpl . java to improve responsiveness during task transitions
refactor ` LiteralNode ` to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and update associated methods to improve type safety and
added methods to set and verify file length in ` CompoundFileWriter ` , ` FSDirectory ` , and ` IndexOutput ` classes to ensure
updated AndroidNdkScriptGenerator , AntScriptGenerator , LwjglDebugStarter , and modified test classes in Lwjgl
camel - 15836 - camel - aws2 - s3 : use sourcebucket / sourcekey instead of copysource for the s3
updated authorization checks in RuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to utilize RequestType and simplify collection requests to improve code clarity
updated ZookeeperClientServerRegisterRepository to improve handling of URI registration to enhance clarity and maintainability of URI registration logic
renamed methods and classes related to deep stubs to improve clarity and consistency in naming conventions
updated ` contract . getCallValue ( ) . size ( ) ` to handle cases where ` getCallValue ( ) . size ( )
improve log when bibentry date can not be parse
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the PBE algorithm string in ` PBETest
updated TiffReader to replace ' length ' with ' inputLength ' and introduced a new validation method for input and value lengths to improve cl
added validation for job parameters in CommandLineJobRunner . java and a corresponding test case in CommandLineJobRunnerTests . java to ensure that parameters are
updated the expected string content in SmtpTests and MailTests from " foo \ r \ n " to " foo " to ensure consistency in
updated case statements in ExtendedConnectionDataSourceProxy . java to include additional whitespace to improve code readability and adhere to coding standards
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID management to improve thread safety and reduce synchronization overhead
added a new file ` Test . java ` containing a class ` Test ` with a static method ` sum ` to demonstrate the
changed access modifiers of fields in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder from private to protected to allow subclasses to access
added a new file ` Solution . java ` that implements a graphical program with sorting and acending arrays to facilitate the determin
fix race condition in gossiper # getendpointstate ( ) and # getcolumnfamilystore ( )
refactor taskbar recreation logic to use boolean variables for screen size and orientation changes to improve readability and maintainability of the code
updated SyncFutureCache . java for improved synchronization handling to enhance performance and reliability of asynchronous operations
updated DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and the latest response attachment version from 20001 to
[ java ] uselessstringvalueof : fix false positive with string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest ` for verifying the calculation of
add targetmaxtypeshardsize to hollowproducer builder so it can be configure
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask class to improve code readability to enhance maintainability and facilitate future development
updated database location validation in TestSemanticAnalysis and modified parameter handling in DDLTask to ensure correct database location is shown in test mode and improve
added a call to ClearDatabaseChangeLogTableStatement in the AbstractJdbcDatabase class to ensure proper execution of the database change log table cleanup process
added version handling to the CallPath class and updated related classes to support versioning and improve path comparison logic
updated exception message format and added closed state management in PhoenixDriver . java to improve error handling and ensure proper resource cleanup
replaced ` return null ` with ` throw ` in ` TouchApp . java ` and changed ` ToolBarButton . Mesurement
added a cleanup method in ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT ` to ensure
[ gr - 38686 ] fix npe when deoptimization . devmode be not set .
added a check to return the original string if the length is less than two and implemented unit tests for the ` removeLeadingAndEndingQuotes `
refactor JpaQueryCreator to use a switch statement and improve handling of NOT _ CONTAINING type to enhance code readability and maintain
do n ' t retry push branch if it be too long .
added dispatching of a new P25Message instance in P25MessageFramer to ensure proper handling of message data during processing
added a null handler check before calling checkClosed ( ) in WebSocketImpl . java and created a test for clearing client handlers on the end of
[ ds - 3992 ] add test for indexablepooltask and claimedtask
updated widget padding calculations to use padding from the launcher to improve accuracy of widget padding across different platforms
added ` hideAllApps ` method to ` TaskbarUIController ` , ` TaskbarAllAppsController ` , and modified ` closeOverlay
replaced ` Thread . sleep ( 1500 ) ` with ` launcher . join ( ) ` in ` CrawlJob . java ` to
updated the calculation of the Point object in JavaSEPort . java to use the correct canvas coordinates to ensure accurate positioning based on the current
updated notification handling in UploadService to use startForeground instead of notify to improve clarity and consistency in foreground notification management
fixed bug 137175 - excessivepubliccount no long report a false positive when static final be use .
hbase - 11303 set hbase . client . retries . number to 3 in testthrifthbaseservicehandler ( #
change log level from info to debug for half offset commit / roll back message
added exception handling for FileNotFoundException in ResourceUtils . java and changed log level from debug to trace in AbstractCipherExecutor . java to improve logging granularity
added BittrexTickersResponse class and integrated it into BittrexMarketDataServiceRaw for fetching market summaries to enable retrieval of
updated the handling of enum constants in EntityEntry . java to improve type safety and avoid unchecked cast warnings
use object instead of endpoint class for registration and unregistration of websockets
added Unicode characters to the clist string in FileUtils . java to ensure proper formatting of input strings for better readability
added stylesheet management functionality to ResourceService and ResourceHandler classes to improve the handling of stylesheet resources for better resource management
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
replaced ObjectParameterStrategy with PointerParameterStrategy in the invokevirtual method call to align method signature with updated parameter naming conventions
fix issue with skip start with be incorrectly apply to postgresql
removed a condition that checks if the name equals " java . lang . String " and isEnum in ObjectStreamClass . java to simplify the
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and created a new SymbolNotFoundError class to improve error handling by providing a
refactor BinaryResponseWriter to conditionally create SolrDocument based on return fields to improve performance by avoiding unnecessary document retrieval when only pseudo fields
added handling for PING and PONG states in WebSocketImplBase . java and implemented a test for pausing WebSocket connections in WebSocketTest .
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expressions
refactored DnsResolverProvider to use wildcard imports and updated server selection tests to include caching options to improve code readability and maintainability while
added a conditional on the MessagingTracing class in TraceMessagingAutoConfiguration to ensure tracing functionality is only enabled when MessagingTracing class is present
[ mondrian - 1224 ] sql . quoteidentifier ( ) now return ` ` ' ' instead of ` ` ' ' for
updated import statements in multiple Java files to reflect changes in event handling and editor components to ensure consistency in import statements across the project
added a condition to handle the closing tag in XMLLightweightParser to ensure proper resource management during XML parsing
remove the setVisibility ( GONE ) method from TouchCharInput . java to improve user interface responsiveness by hiding input elements
added a null check for the current user before comparing its ID to avoid potential NullPointerException when checking if the current user ID does not exist
refactor JSObjectLinker to handle index - based assignment more efficiently to improve robustness by avoiding potential index out - of -
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to improve initialization and suffix handling to enhance code clarity and maintain
added a @ Deprecated annotation to SecurityConfig . java to mark the SecurityConfig class as outdated for future removal or replacement
added @ Deprecated annotations to multiple classes to indicate that certain methods are outdated and should not be used in future development
deleted the JoglDebugAdaptor class and modified imports in RocketFigure3d and GuiceStartup to streamline the code by
added custom ` toString ` methods and corresponding tests for ` ExtraFieldPropagation ` , ` ExtraFieldPropagation ` , and ` AWSPropagation ` classes
updated PendingIntent in FileDownloader and FileUploader classes to ensure the notification content is updated to the current activity
refactor ` nextOrd ` method to introduce a ` set ` method and modify its logic to improve code clarity and control over the
refactor DateTimeFormatter class for improved date formatting to enhance code readability and maintainability
removed unnecessary try - catch block for loading properties in WToolkit . java to simplify code structure and improve readability
updated the ` setAdministratorCredentials ` method to throw ` KerberosAdminAuthenticationException ` and added null and empty checks for ` administratorCredentials
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and modified width usage in the BaseWidgetSheet
add call to beginrender ( ) , endrender ( ) , and startrender ( ) to set the window color
refactor Hashing class for improved performance to enhance efficiency and reduce memory usage during hashing operations
renamed the parameter ` s ` to ` folderPath ` and updated the ` accept ` method to use ` Files . getBaseName ( ) `
updated the addToListIfNeeded method to include a content description parameter and modified the constructor to accept it to enhance the functionality of UserInfoDetailsItem by
removed unnecessary null check for JavaType . Method to streamline code and improve readability
reduced the activity start delay from 500 to 800 milliseconds to improve responsiveness during activity startup
added a new constant WEBAPP _ HOME in SolrJettyTestBase and updated references in JettyWebappTest to use this constant to
reset selectedMotorSet to null and clear the table selection in ThrustCurveMotorSelectionPanel . java to improve handling of motor
added BufferUtil import and invoked clearToFill method in ByteBufferPool . java to ensure buffer data is properly cleared before reuse
fix the issue that alarm rule can not be create via rest api
corrected the spelling of " authorization " to " authentication " in configuration files to improve clarity and consistency in naming conventions
added deleteExchange and queueDelete methods to DurableOnTransient . java to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
updated connection handling in PingService and ServerInfoService to improve error management during server connection failures
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
rename Quartz2Adapter class to improve clarity to enhance code readability and maintainability
catch illegalstateexception in sulonglibrary . lookup ( ) and return false on illegalstateexception
update Spring Security schema version from 6.2 to 6.3 to ensure compatibility with the latest Spring Security features and improvements
updated method signatures and introduced synchronization context in ` DiscoveryClientNameResolver ` and ` ConfigMappedNameResolverFactory ` to improve thread safety and ensure
updated JavacParser to handle non - empty annotations and introduced a new method to determine earlier position to improve annotation handling and introduce a
added " com . sun . naming . internal . " to CheckPackageAccess . java to include internal package access in package access checks
changed the strict variable from false to true in StaxEventItemReader . java to enable strict processing by default
modified the ` readPartition ` method to include a ` isExhausted ` parameter and updated related logic in ` OfflineSorter . java `
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
added a check for XY mode before converting lightState toHSBType to ensure proper handling of color states when using XY mode
refactor folder creation and reordering methods in CellLayout . java to improve clarity and maintainability of the code structure
replaced direct calls to ` activity . showLoadingDialog ( ) ` with a call to ` FileDisplayActivity . showLoadingDialog ( )
added a null check for uigestureFile before loading and initializing maps to avoid potential NullPointerExceptions when uigestureFile is not available
updated ` FieldNamingPolicyTest ` to use ` Locale . getDefault ( ) ` for name comparisons to ensure consistent behavior across different locales in case
added a line to set the listeners in the XmlSuite class to ensure the correct listener is applied to the result
added a new method ` loadWithNewGlobal ` and modified existing method handles in ` Global ` and ` Context ` classes to enhance global management
added JSON serialization and deserialization methods to StarTreeIndexSpec to enable conversion of string representations of StarTreeIndexSpec objects for improved
updated HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and ServerHttpSecurity classes to include
replaced occurrences of " \ " with ' ' in file handling methods to ensure consistency in character representation across different file systems
[ drools - 7 ] avoid npe when use the in operator with null fire ( # 113 )
added FieldCache import and modified commit and purgeFieldCache calls in TestDistributedSearch . java to improve performance by ensuring more than one segment
added test case for message boundary event on subprocessexception
[ gr - 36400 ] fix call site type for static method .
http : / / issues . apache . org / jira / browse / amq - 4596 - allow to configure the size of
added constants for slot IDs and replaced boolean fips with slotId parameter in Secmod . java to improve code readability and maintainability by
added alignment parameter to the add method in Layout . java and modified the return type of startRenderering in GdxRenderer . java to enhance
[ hotfix ] [ test ] ignore unalignedcheckpointitcase in itcase
added imports and a condition to check for specific class types in JDK13Services . java to enhance type validation by ensuring only relevant classes are processed
added a check to prevent duplicate entries in the keywordToReference map to ensure only relevant keywords are processed by the reference
camel - 16400 : fixed multicast eip to correctly calculate the size of the source pair .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code clarity and maintainability
escape space in telegraf name ( fixes # 644 )
[ java ] add udp port to member serialization .
rename ` OperatorMulticast ` to ` OperationMulticast ` and update references accordingly to clarify the class ' s purpose in the multicast
updated send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time for message delivery
added a try - finally block around the start node operation in VertxTestBase . java to ensure proper resource management and avoid potential memory leak
added a synchronized destroy method to reset the cachedEventListenerRegistry to null to ensure proper cleanup of event listeners when the session factory is destroyed
danielwagnerhall : refactoring to make the test work again
[ pytorch ] add test for map of tensor ( # 2241 )
added a TaskStackChangeListener to manage task stack visibility during pinned stack animation to ensure proper handling of UI state changes during activity transitions
pdfbox - 4892 : fix bug in defaultsplitcharacter . checkdatepattern ( ) and add a unit test
camel - 14263 : camel - cxf should use source code generate configurer to avoid reflection configuration .
refactor pending animation handling by extracting logic into a separate method to improve code readability and maintainability
add log to debug playtime crash and band aid fix for release build .
added a conditional check for bailout behavior in C1XCompilation . java and introduced a new option BailoutOnException in C1
updated signup and password variables to null in Links . java and modified assertions in IdentityZoneConfigurationBootstrapTests . java to ensure default values are
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations
replaced ` onlyFormat ` with ` format ` and introduced a new method ` getOnlyFormat ( ) ` to improve clarity and encaps
added NoDataContainer to GeoTiffReader and its corresponding test in GeoTiffReaderTest to enhance data handling capabilities in GeoTiff
sulong : fix npe when llvm can not access source section .
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao `
replaced the ` blockUntilConnected ( ) ` method with a new ` CountDownLatch ` for tracking connection state events to ensure proper synchronization
reformatted the ArrayTypeHandler class for improved readability to enhance code clarity and maintainability
replaced the deprecated ` RegexpTunnel ` class with reflective access to the ` prefix ` field in ` JakartaRegexpCapabilities `
updated the pick method to use Application . class instead of null to ensure proper application configuration handling
[ drools - 7 ] avoid npe when call phreaknode . unlinkcreatedhandles ( ) when set a global
added validation checks for asset name , URL , and description in AssetIssueActuator . java to ensure that asset names , URLs , and descriptions
do n ' t add parent algorithm for textfield in copy paste
updated action descriptions in LGWebOSActions and modified status updates in LGWebOSHandler to improve clarity of status messages and enhance
refactor node configuration to consolidate seed , active , and trust nodes into individual lists to improve code readability and maintainability by consolidating
enhanced assertion messages in BaseTokenStreamTestCase . java for better debugging and improved thread management to enhance clarity of assertions and ensure
log4j2 - 1349 add new method to timebasedtriggeringpolicy to allow more control over time - based trigger .
added methods ` performItemClick ` , ` findIndexItemContainingText ` , and ` findFirstItemContainingText ` to ` ShadowAdapter
pdfbox - 4892 : fix typo , a suggest by valerybokov
dump method scope after each frame in the graph .
updated HttpSessionDestroyedEvent to use getSession ( ) and getAttribute ( ) instead of getSource ( ) and refactored attribute retrieval logic to improve session
added a new test method to verify the service name change in Zipkin using a manually provided name to ensure that the tracer correctly reflects the
added logging for excluded Java files and updated the handling of ` spoolToJar ` in ` JavacToJarStepFactory ` to
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
increase timeout of ` trylock ` from 4 second to 10 second to improve test stability
updated ConfluentSchemaRegistryDeserializerProvider to include a default cache capacity and modified return statements accordingly to enhance flexibility in handling schema registry configurations
rename the JCheckBox ' remind ' to ' checkAtStartup ' and update its tooltip text to improve clarity by using a more d
added methods for handling weak keys , weak values , and soft attributes in NodeGenerator . java to enhance type safety and improve code readability
hhh - 14316 avoid unnecessary call to istransient ( ) when check for transient entity
added support for prototype property access in ScriptObject . java to enhance the functionality of the ScriptObject by allowing dynamic property retrieval and setting
updated the default read mode from " heap " to " mmap " in CommonConstants . java and modified the segment loading process in ImmutableSegmentLoader
added support for handling byte type in ArrayTemplateBuilder to enable proper instantiation of ByteArrayTemplate for byte data types
added Hipchat properties and configuration for SAML service provider integration to enable Hipchat integration in the CAS framework
replaced List < URL > with Set < URL > for commandRegistryUrls and updated resource retrieval logic to improve performance by avoiding duplicate entries
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve clarity of warning messages and enhance
added checkloggedin = true to svnrepositoryconnector . login ( ) so it do n ' t log in twice .
camel - 1640 : added option lazycreatetransactionmanager to allow session to be configure without a transaction manager .
fix checkstyle issue in util / vmware / vmwareresource . java ( # 728 )
refactor Timers class to improve code readability to enhance maintainability and facilitate future feature additions
replace ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to ensure
mark several string constants in the UAX29urLEmailTokenizer class as deprecated to indicate that these elements are outdated and should not be used
removed redundant ` Map < Object , Object > ` implementation from ` ScriptObject ` class and replaced instances of ` Map < Object , Object >
refactor EventBusMetrics to improve code readability to enhance maintainability and simplify future updates
refactor code to avoid use of deprecated eperson . getlanguage ( ) . getsupportedlocale ( )
replaced ` @ PostConstruct ` with ` InitializingBean ` and modified ` ensureSchema ` method to implement ` InitializingBean ` to
removed null check before updating pgTypeName in TypeInfoCache . java to simplify the code by eliminating unnecessary null check
added multiple instances of ` Server ` in ` ScopedHandlerTest . java ` to enable multiple server configurations for testing scenarios
fix calltimeoutexception when call time out during wait - notify phase
changed the condition from checking if the username or password is blank to checking if it is empty to ensure proper handling of empty credentials in the login
updated permission check from ` Objects . equals ( " " ) ` to ` ! = " * " ` in ` CommandMap . java `
rename ` encoding ` to ` sourceCharset ` in ` AbstractCompiler ` and update method names accordingly to clarify the purpose of the variable
changed the type of postLogin from byte [ ] to String in HostBean and updated related methods accordingly to simplify data handling by using a more
refactor simulation handling in GeneralOptimizationDialog . java to improve clarity and structure to enhance code readability and maintainability by reducing
camel - 16400 : add option to reload camel context on startup .
updated log configuration from Log4j to Log4j and changed logger properties from " log4j " to " logger " to improve logging
refactor PrologSizeSanityCheck class to improve clarity and maintainability of the PrologSizeSanityCheck class
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check for non - mark support before invoking the reset method in RequestBody . java to ensure that non - closeable input streams are
added a check to enable embedded settings in ` EmbeddedNeo4jServer ` and modified ` DefaultBeanContext ` and ` TypeArgumentQualifier
make movementdebugcommands compatible with pojos
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted related logic to enhance the random load balancer algorithm to
refactor GsonParser to simplify cache string handling and improve validation checks for start _ absolute and start _ relative to enhance code readability and ensure
added comments to the parameters of the " gcmsort " and " gcmdir " fields in ApacheHttpClientMediaWikiApi . java to
replaced calls to ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract `
pipe : replace reentrantlock with a new class pipetaskcoordinatorecorderlock
updated the dependency jar creation logic to conditionally include preinstrumented jars based on system properties to enhance flexibility in managing instrumentation jars based on
changed the condition from ` ! isSilent ` to ` if ( isSilent ) ` in ` ExecDriver . java ` to correct the logic
added validation for dynamic field attributes in IndexSchema . java to ensure that only valid default values are accepted to prevent runtime errors
do n ' t retry on digest mismatch error , patch by jbellis
replaced ImmutableSortedSet with Iterables for handling include directories and added a new test for including directories to improve code readability and ensure correct functionality
refactor AdaptableX509CertSelector to include sensitivity flags for subject key identifier and serial number to enhance security checks by preventing null
use abstractappender . parseint ( ) instead of string . isempty ( ) .
added a deprecated annotation to GuiScreenEvent . java to indicate that this feature should no longer be used in favor of an alternative implementation
removed duplicate methods for adding , removing , and adding new categories in CategoryEditSearchRecyclerViewAdapter to streamline the management of category additions and
# 712 - enh : add cachetype parameter to servercachefactory . createcache ( )
refactor RocketComponent to initialize massOverriddenBy and CDOverriddenBy from a collection to ensure all RocketComponents are properly
replaced the ` doCompile ` method with a ` post ` method in ` JavaCompilerService ` and added logging in ` JavaDiagnosticProvider
refactor ` MultiThreadedBuildRuleResolver ` to use ` Supplier ` for task creation to improve code readability and facilitate
refactor WanReplicationServiceImpl to use a mutex for executor management to improve thread safety and prevent potential race conditions during shutdown
added null checks for directory and table paths in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor code to use lambda expressions for improved readability in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to enhance
added unit tests for file deletion functionality in ` FilesTest . java ` and implemented a ` delete ` method in ` Files . java ` to
removed unnecessary try - catch blocks around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify code by eliminating unnecessary exception handling
update class name check in SSLLogger to use Logger class instead of System class to improve type validation for logging functionality
replaced the method for adding files to the current working directory list to improve clarity and encapsulation of the process of adding files
added null check for the ` cn ` variable in ` ItemInfo . java ` and updated insets handling in ` Workspace . java ` to ensure
changed the visibility of the GeneratedEntityDecorator class from public to private to restrict access to the constant for better encapsulation
removed localhost from Java command - line arguments for CSV and JSON in SimplePostTool . java to streamline the command execution by directly using the
apps - 1889 fix ` ` max ' ' and ` ` min ' ' command in av
refactor client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainerContainer to improve resource management
updated the condition to check if type is null or is not open with the application to ensure proper handling of cases where the type is not present
added cleanup method to multiple test classes to ensure proper resource management and prevent potential memory leaks
added a method to retrieve search strings and updated the DLNAResource retrieval logic to enhance search functionality and improve user experience by allowing dynamic URL
remove the visibility of neutralButton in SetupEncryptionDialogFragment to improve user interface by hiding the neutral button when necessary
[ ds - 3992 ] add count and withdrawn support to itemdao
updated SQL statements to include quotes around table and column names in DDLTask . java to improve SQL syntax for better readability and consistency in table
added exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error management and provide better debugging information
updated method signatures in multiple classes for consistency and clarity to improve code readability and maintainability
updated identity zone endpoint tests to use the exchange method and modified variable names for clarity to improve code readability and align with updated API con
updated dismiss delay from 20000ms to 10000ms in ExtractionModelFrame . java and DataBrowser . java , and added tooltip text in
fix warn message when run single test method with junit 5
changed exception handling from ` Exception ` to ` IOException ` in ` WorkerShellStep . java ` to improve error handling specificity and provide more
[ hotfix ] [ doc ] move experimental annotation to flink - core
[ hotfix ] [ stream ] fix typo in streamcepstrumsource
added a check to prevent index out - of - bounds errors in the List class to improve robustness by preventing unnecessary index calculations
updated assertions in CloneHelperTest to reference Parenthesis instead of OrExpression to ensure correct type checking for parentheses in tests
added confirmation and requiredType attributes to the DebugPaste command to enhance the functionality of the debug paste command
replaced calls to ` . get ( ) ` with ` orElseThrow ( ) ` in multiple endpoint management classes to improve error handling by providing
mow - 121 make sure ggb element do n ' t lose focus when create a new form .
updated imports and refactored GoBinaryDescription to use CommonDescriptionArg and HasDeclaredDeps , HasSrcs , and ImmutableSortedSet to
added null check for the " application . env " configuration in Jooby . java to ensure proper retrieval of the logback resource if
replaced ` RetryListenerSupport ` with ` RetryListener ` in multiple classes and introduced a new ` SecondDummyRetryListener ` class to simplify
fix elasticsearch meter registry for decimal value ( fixes # 498 )
made email and author fields final and added a constructor to the Contribution class to ensure immutability and prevent unintended modifications to
refactor loop structure in JUnitFormatter to use a do - while loop to improve readability and maintainability of the code
refactor how elements are retrieved and instantiated in the Subject class to improve type safety and prevent potential ClassCastException
update error messages in StaxEventItemReader to include the resource URL for better debugging to provide more informative error messages for invalid input resources
make testmultirendertarget more resilient to slow machine
added null check for currentProfile before retrieving the client to avoid potential NullPointerException when currentProfile is null
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
added support for DSA parameters in KeyStoreManager to enhance security by mitigating potential vulnerabilities
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set engine version when deploy a process ( # 3369 )
updated velocity engine properties in SpecificCompiler . java for clarity and consistency to enhance readability and maintainability of the code
[ gr - 11930 ] fix race between vmthreads . iscurrentthread and vmthreads . getnextthread .
updated GenericUDFMapValues . java to handle null maps and added a new test class TestGenericUDFMapValues . java to improve
polish ` ` fix ' ' typo in spring boot auto - config test
added new configuration property ` ` oilWellGenerationRate ' ' and ` ` enableOilSpouts ' ' to manage oil
added a check for the existence of " . clean - me " directory before creating a new file in ImportContext . java to ensure that the
make exception message in memoryrealm . readxml configurable
updated import statements in RegisteredService and CRLDistributionPointRevocationCheckerTests to streamline code organization and improve readability
added constants and imports for ZIP file handling in ZipConstants64 . java and ZipEntry . java to improve code organization and facilitate better
refactor ` newFileSystem ` methods to improve file validation and error handling in ` ZipFileSystemProvider ` to enhance robustness by ensuring files are
replaced ` Box . createHorizontalStrut ` with ` Box . createHorizontalGlue ( ) ` in ` IfControllerPanel . java
updated the connection initialization in FailoverUpdateURIsTest . java to ensure proper connection handling during tests
added JSON serialization annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to enable proper serialization and deserialization of service
add databaseadapter . deletebook ( ) for delete a book that do n ' t exist
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
correct a typo in the parameter order of the method call .
do n ' t start / stop the admin console plugin if it ' s already start .
refactor unregisterHandlers method to use instance variables instead of local variables to improve code readability and maintainability
added configuration properties for device ID transformation and ID table settings in IoTDBDescriptor . java to enable dynamic configuration of ID table settings for improved
reduced the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and added a new DelayingSearchComponent class to improve test
updated the condition for mockTsp to check if the access error is not null to correct the logic for verifying the validity of the access
transaction : use ` witnessscript ` instead of ` scriptbuilder . data ( ) . getgram ( ) `
updated the expression to include " / schema / types / fieldType " alongside " / schema / types / fieldtype " to enhance functionality
added null check for valueCompleter in Completers . java and created OptionCompleterTest . java with option - based test cases to
fix checkstyle issue in util / s3utils . java ( # 703 )
changed the type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to enable more precise representation of peer IDs
added a new method ` UploadFile ` to handle file uploads and improved error handling for zip file preparation to enhance file upload functionality and provide
removed unused imports and added alpha settings for replyButton in TweetFragment . java to improve UI responsiveness and visibility of the reply button
updated expected timestamp formatting in AccessLogSupportTest . java to improve clarity and maintainability of test cases
rename testfiles - deleteme to tmp / testfiles - deleteme to avoid conflict with other test
removed null checks and initialized subscribers as a new set in SettingImpl . java to simplify subscriber management logic and improve code readability
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unnecessary initialization code in AbstractSaml10ResponseView . java to
replaced printStackTrace ( ) calls with LogUtil . warn ( ) for error handling to improve logging clarity and maintainability
added a condition to check if a file exists in dev mode and updated test cases in AssetsControllerTest to ensure proper handling of non - existent
[ hotfix ] [ rocksdb ] fix writeoptions in rocksdbkeyedstatebackend
change default value format from " value - tag - index " to " value - index " to standardize the format used in the application
use request . gethints ( ) . puthint ( ) instead of request . gethints ( ) . puthint ( ) .
[ test ] enable native secp256k1 and altbn128 by default
rename ` DuclsSandboxTest ` to ` SandboxTest ` and update references accordingly to improve clarity and consistency in naming conventions
( chore ) camel - cxf : use exchange . setexception instead of log a warning
make forwardpropagatetree public to allow access to the method
updated SQL query to use a time limit of 20ms instead of 0ms to improve the accuracy of the query execution
improve error message for miss $ { project } expression during profile activation
refactor Style class implementation to improve code readability and maintainability
added zoom functionality to ShareActivity to handle back key events to improve user experience by allowing easy zoom operations
added a check to skip deprecated fields in Json . java to improve handling of deprecated fields during JSON processing
added animation handlers for showing and hiding the send layout in the LauncherFragment to enhance user experience by providing visual feedback during layout transitions
[ hotfix ] fix checkstyle violation in yarn - utils
added ` Progressable ` parameter to multiple ` createSequenceWriter ` and ` createSequenceWriter ` methods across multiple classes to enable progress tracking during
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
remove contribution from the Contribution list and update its order and colors to improve user interface responsiveness and visual consistency
rename ` HyervisorTemplateAdapter ` class to ` HypervisorTemplateAdapter ` and update related references to improve clarity and consistency in naming
added a default value for dPath if it is empty to ensure dPath is set to the user ' s directory if it is not provided
updated the sampleRate assignment logic in DefaultAudioSink . java to ensure a default value is used when format . sampleRate is not provided
log4j2 - 1343 remove dependency on stringmap from filter ( )
refactor VerificationInOrderWithCallsTest class to improve test coverage to enhance reliability of verification logic
changed the axis from ' z ' to ' x ' in the setFromAxis method to ensure the correct axis is used for quaternion transformations
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency with naming
add a test case to check if a listener be connect at startup .
fix documentation for ` $ this ` and ` functio `
refactor support checks for one - handed mode in RecentsAnimationDeviceState . java to improve clarity and functionality of one - handed
added onDetachedFromWindow method to manage running tasks in AppsCustomizePagedView to ensure proper cleanup of running tasks when the
added dictionary resource support to MorfologikAnalyzer and MorfologikFilter classes to enhance compatibility with Morfologik
replaced count tracking with thrown variable to simplify exception handling logic in ResultSetTest . java
updated the message parameter from " debug " to an empty string in GradleBuildService . java to provide a clearer default value for
replaced AtomicReference < Boolean > with AtomicBoolean for locking and introduced a new method to handle MVCC anomaly detection to improve cl
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability
increased the timeout duration in the await statement from 5 seconds to 10 seconds to allow more time for the zipkin server to be up
modify deviantart ripper to bypass age gate
refactor PackageUtils to replace KNOWN _ GOOGLE _ SIGNATURES with GOOGLE _ PLATFORM _ KEY and
updated the method call from ` commonApp . solutionBusiness ` to ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirS
added a new method ` notifyWindowStateChanged ` to handle window state changes to improve event tracking for window state changes in the application
added email description to the email template in EntityGroupKeyContentFormatter and set a test description in TestEntityGroupKeyEmailContentFormatter to provide
replaced ` remove ( sel ) ` with ` data . remove ( sel ) ` in the ` UserData ` class to ensure consistency in data
refactor ` getISO3Language ( ) ` to return ` lang ` directly instead of using the ` _ baseLocale . getLanguage ( )
refactor ChangeLogParser usage and encapsulate UpdateVisitor creation to improve code readability and maintainability
added a condition to return early if the screen is pinned to optimize performance by avoiding unnecessary processing when the pinning activity is active
added support for customizable no data available text in the Chart class to improve user experience by providing a clearer error message when no data is
added synchronization to ` Http1xServerResponse ` , ` Http2ServerResponseImpl ` , and ` HttpTest ` classes to ensure thread
refactor chunk handling logic in NettyResponse and NettyResponseTest classes to improve code readability and maintainability by separating concer
added " : scheme " header to Http2TestBase . java and updated test cases in TestHttp2Limits . java to enhance HTTP /
fixed - rlocalcachedmap . putall ( ) and putvalues ( ) method of redissonlocalcachedmap object do n ' t
camel - 16400 : fixed jpa component to work in osgi environment
corrected variable name from fallSpeed to jumpSpeed in PhysicsCharacter . java to improve clarity and consistency in variable naming
added a condition to check if reparsedFunction is null when no syntax extensions are specified to ensure proper handling of cases where reparsedFunction is
refactored logger variable names and refactored order book creation logic in BitstampPusherService . java to improve code readability and
added deprecated methods to retrieve old upload segment URIs in FileUploadDownloadClient to encourage the use of a hardcoded path for HTTP and
updated the method call to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to include a filter parameter to enhance
added assertion for predicate failure in juellanguagetest . java
added bounds checking for alpha value in RecentsView . java to ensure alpha is within the valid range of 0 to 1
updated the replacement syntax for the importPackage attribute in ManifestReversion . java to ensure proper formatting of the import package name in the import package
refactor DataSyncConfiguration class to improve data synchronization logic to enhance performance and maintainability of the synchronization process
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to ensure proper initialization of Java snippet functionality
added a loop to iterate through timeBuckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to ensure all time buckets are
[ java ] link chromedriver . storage . googleapis . com to googleapis . com
( chore ) camel - pg : fix connection leak in integration test
updated rome package imports from ' sun . syndication ' to ' com . rometools . rome ' and added closing of
update transfercompletionhandler to handle content - length header
rename Dialog class to improve clarity to enhance code readability and maintainability
removed the constructor from EnhancedRuntimeException to streamline object creation by eliminating unnecessary parameters
fix intermittent failure in socketappendertest .
( chore ) camel - test - infra - dsl : fix checkstyle violation
updated exception handling in ByteArray . java for better clarity and consistency to improve error reporting and maintainability of the code
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unintended
camel - 6770 : camel - restlet : remove ignore from camel - restlet
simplified the method signature of ` resizeAndRehashIfNeeded ` by removing the ` currentIdx ` parameter to enhance code readability and
move modulepathtest from ` com . hazelcast . tests ` to ` com . hazelcast . test . modulepath ` ( # 2
added a new method ` getSourceDirs ( ) ` to ` JavaServerConfiguration ` and modified the ` getCompiler ( ) ` method to include
removed the visibility of the MUTE _ OPEN _ WEB menu item based on the presence of a webpage to streamline the user interface by
rename methods in ` AncestorDescendantTests ` and ` HasParentNode ` to ` nodeIsNotAncestorOfItself ` and ` nodeIsNot
fix worldeditplayer crash due to negative y coordinate
added PathNotExistException handling to the selfCheckDataTypes method and improved error reporting to enhance robustness of data type validation and provide clear
removed an extra space from the end of a string in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ stream ] make mailboxexecutor configurable in streamoperatorfactory
hbase - 22703 add miss precheck for settablestate ( ) and fixmeta ( # 4376 )
updated method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
updated the constructor of BlockJUnit4ClassRunner to use the Java class instead of the test class to ensure compatibility with the current Java class
[ drools - 7 ] use lastdata instead of remoteitems when delete a kie watcher
adjusted calculation for ` allAppsCellWidthPx ` and ` allAppsCellPaddingPx ` in ` DeviceProfile . java ` to improve
[ hotfix ] [ core ] fix checkstyle violation in flink - core
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process during
hhh - 13434 - implement java . io . closeable for session interface
refactor GetLocations class for improved clarity to enhance code maintainability and readability
updated exception handling logic in SchemaValidatorTask . java to check for null exceptions before printing them to improve error reporting and provide clearer feedback when
modified the catch block to ignore IOException instead of throwing an uncheckedIOException to simplify error handling by eliminating unnecessary exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android features and enhance functionality
ruby flavor : wrap the last term in a string in case of repeat pattern .
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove the usecaches option from the nio2endpoint
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve flexibility and simplify database retrieval logic
update instructorfeedbackresultspageuitest to use ' open view ' instead of ' open with helper view '
updated the ` useEncodedQualifierListOptimization ` method to accept a ` Scan ` parameter to enhance flexibility in handling encoded qualifier list optimization
changed method visibility from public to package - private for several methods in ApprovalStore and ApprovalsControllerService to enhance encapsulation and
added functionality to manage and cancel download notifications in FileDownloader to improve user experience by preventing unnecessary notifications during download
updated method names and logic in ` TaskbarDragLayerController ` and ` AbstractFloatingView ` classes to improve clarity and functionality of view
updated project version from 1.0 . 11 to 1.0 . 13 and corrected copyright year in JFreeChartResources . java to reflect
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve thread synchronization
updated GsonBuilder class to improve JSON parsing functionality to enhance performance and accuracy of JSON data handling
fix a nullpointerexception in the botana ' s prover botana ' s method .
remove espresso home option for java on truffle .
doc : clarify documentation of ctqueryable and ctcodeelement
made the ` deleteSessionAction ` class final and modified access modifiers for ` timeToDieInSeconds ` and ` deleteSession ` methods to enhance
corrected the spelling of ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to improve clarity
initialize ` sz ` to 0 and modify ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and
updated the ` triggerMediaScan ` method to include a ` file ` parameter to enhance media scan functionality by associating the file with the intended
removed conditional logic for posting test results in TestRunning . java to simplify the code by eliminating unnecessary verbosity checks
added functionality to retrieve and set custom G - code settings in MainWindow to enhance flexibility by allowing dynamic custom G - code settings
replaced PrintWriter with BufferedWriter in AdditionalJaxbMappingProducerImpl . java to improve performance by using a buffered output stream
refactor JsonElement class to improve code readability and maintainability
added import statements and exception handling in TestBadConfig . java to ignore specific exceptions during test execution
added a method to remove the current fragment and its action bar in GpsMainActivity to improve user experience by ensuring the action bar is removed
make spanish token in tokenizerannotatoritest easy to understand
refactor range handling by replacing ` asByteRange ( ) ` and ` asByteRange ( ) ` methods with ` Byte ` and `
updated the G - code file name and modified print statements in VisualizerCanvas . java , and modified GcodeViewParse . java to enhance
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " while
updated assertion methods in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to enhance clarity and maintain consistency in test
added logic to handle cases where output stage is null and state is completed in StatementResource . java to ensure proper resource management and prevent potential errors
fix integrity check for gradle file ( # 3558 )
removed unused import and field for shardToClient in ChaosMonkey . java to streamline code and improve maintainability by elimin
added null check for ` fas ` before accessing its properties to prevent potential ` NullPointerException ` when ` fas ` is not initialized
no actual code changes were made to the implementation of the ListView in NestedRepositoryTreePanel . java to improve code readability and maintain consistency
changed the constructor visibility of ` ExtensionTypeHeader ` from package - private to public and added a validation check to ensure the extension type is within
pdfbox - 4071 : add ` ` throws ioexception ' ' to method signature ; improve javadoc
changed the default value of ` deleteOnShutdown ` and ` pushOnShutdown ` from ` false ` to ` true ` and added getter and
added a trigger callback and error handling mechanism to the ReactiveStateMachineExecutor to enhance error management and provide more informative feedback during state machine execution
added a test for handling multiple Python executables on a specific folder to ensure that the correct executable configuration is applied when multiple Python executables are
added a default button to the root pane in the InitialAccountRegistrationFrame to enhance user interface functionality by providing a sign - in option
added a new configuration option TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging messages in RegistrationRestRepository . java for clarity to improve error reporting by including the exception context
remove reflection package from use by abstracteventsourcedaggregate
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created a new test class ` Oid
removed private Vector2 fields from Circle , Ellipse , and Rectangle classes to streamline code by eliminating unused variables
[ hotfix ] fix checkstyle violation in registerandprocessbundleoperation
refactor SslContextFactory for improved SSL context management to enhance security and performance of the application
removed the ` @ Ignore ` annotation from ` ConfigurationProperties ` and updated assertions in ` ConfigurationPropertiesTest ` to use ` defaultMaxExpectations
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive name for the error
[ 3.0 ] fix classloading issue ( # 9011 )
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFS
updated method names from ` setRolloverIcon ` to ` setRolloverPressedIcon ` and ` setRolloverIcon ` to ` set
updated grid translation handling in TaskViewUtils and TaskViewSimulator to improve UI responsiveness for grid tasks
refactor assertions methods for improved clarity and consistency to enhance code maintainability and readability
added null checks and return logic for currentDateTimeFunction in multiple database classes to ensure robustness by handling cases where currentDateTimeFunction is not null
added an ` anonymousPath ` method to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling and enhance
updated the method signature to include remaining time and content description in DigitalWellBeingToast . java and TaskView . java to
increased the wait time for metaAvailable from a fixed value to a dynamic value based on timeout to improve responsiveness by avoiding
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
do n ' t return null for item type conversion ( # 4329 )
added integration support for ClassImportIntegrator in BidirectionalOneToOneNPlusOneTest . java and introduced a new PostDTO class to
added functionality to remove extra empty screen from the workspace and updated the search page index based on the presence of workspace screens to improve user
optimization : avoid unnecessary object creation in markbasepointersphase .
updated string formatting in GoogleLineChart . java and GooglePieChart . java from single quotes to double quotes to improve consistency and prevent potential
refactor batch processing logic in SendingAccountor . java to improve error handling and ensure graceful termination of the wait process
added position management functionality to the WALPrettyPrinter class to allow users to seek to the specified position during file operations
updated the port number in the NettyTransceiver instantiation from 1 to 0 to ensure that the transceiver starts from the correct port
sort event by start time before generate a report
add a test for handling double quotes in CSV lines to ensure proper functionality of CSV parsing with escaped quotes
make sure we do n ' t run chinese classifier in the main thread
do n ' t send iq message to non - remote recipient .
added JNIImpl annotation to VM . java to indicate that the VM class can be used as a native image
updated the calculation of the ` last ` variable and changed configuration settings for blocking , robots , and robots in ` Fetcher2 . java `
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java and removed
updated package references from ` other _ package ` to ` other _ package2 ` in ` AstTests . java ` to reflect the correct context
refactor WorldBorder class to improve percentage handling and add integration tests for its functionality to enhance the robustness of the world border management and ensure
hbase - 26462 add get walgroupsreplicationstatus ( ) method to hmaster
mow - 103 remove the caller from the login view when the user click on it
replaced direct instantiation of ` ArrayList < InstanceConfig > ` with a new method ` generateInstanceConfigs ` to improve code readability and reduce
changed the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add test case to demonstrate that the projectbuilder do n ' t contain a reference
simplified the condition in PropertyMap . java by removing unnecessary checks to improve code readability and maintainability
refactor the ` getControllerId ` method to accept a ` configId ` parameter and update related logic to improve code readability and simplify the
replace sessionFactory . close ( ) with session . close ( ) to ensure proper resource management and avoid potential memory leaks
removed the condition checking for ` service . isGenerateRefreshToken ( ) ` in ` OidcConsentApprovalViewResolver . java ` to simplify the
removed system . out . println statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with an anonymous inner class ` NoopGetter ` in ` BaggagePropagation ` to improve code readability and
refactor ConditionalOnEnabledResourceChain for improved clarity to enhance maintainability and readability of the code
added a condition to check if the treeRoot has children in the BarrowmanCalculator class to ensure that the calculation only occurs when there are
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure
fixed race condition between login and post on wall login .
updated the return value in ShadowICU . java and modified test cases in ShadowICUTest . java to use a dynamic skeleton instead of
removed KeyguardManager dependency and simplified device lock state check in TouchInteractionService . java to streamline the code by eliminating unnecessary checks
cloudstack - 6792 : fix npe when set diskofferingid for custom disk offering
replace FileChannel with AsynchronousFileChannel and add position tracking to UtowBodyHandler to improve handling of asynchronous file operations and enhance performance
removed unnecessary try - catch blocks and improved formatting in the SigInt and SigIntTest classes to enhance code readability and maintainability while
ggb - 1889 do n ' t call updatebyboundingboxresize , it ' s not need anymore
change return value from - 1 to 0 in the Asset class to accurately reflect the intended behavior of the method
replaced the constant ` SIZE ` with ` ITEMS ` and refactored the ` computeFunction ` and ` get ` methods to
added an OnRefreshListener to UploadListFragment to notify changes when the adapter refreshes
refactor bibdatabasecontext to use path instead of file . tofile ( )
replaced array access with direct access for emitters in ParticleEffect . java to simplify code and improve performance by eliminating unnecessary object
simplify tomcat . getserver ( ) and tomcat . getengine ( ) . findservices ( ) . findinstances ( )
updated error messages to include a period after " desired file " to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING to optimize performance by avoiding unnecessary processing when not in paused state
replaced ` ServiceComponentDesiredStateEntityPK ` with ` findById ( 0 ) ` in ` DeleteServiceTest . java ` to simplify
refactor Java2TypeScriptTranslator to improve inner class field cloning logic and add a new test class InnerClassFieldClash to enhance
added logging and follow redirect filters to DockerClientFactory and DockerClientProfile classes to enable custom logging and redirection behavior based on Docker configuration
replaced direct calls to displayChanged with awtUnlock and a try - finally block to ensure thread safety during display changes to prevent potential deadlocks
hhh - 10183 - fix test failure on sql server 2008
added a ` revert ( ) ` call in ` OPCPackage . java ` and refactored the zip header verification in ` ZipHelper
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
updated the assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues . java and added a new test class TestSortedSet
updated error messages in CGIHandler and added a JavaVM callback handler in JavaVM to improve clarity of error reporting and enhance functionality for
updated the condition to check for additional line endings in LineReaderImpl . java to enhance input validation by supporting additional newline characters
refactor ` multiFetchSourceFiles ` and ` hashCodesToFetch ` from ` List ` to ` Set ` across multiple classes to improve
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to optimize performance by avoiding unnecessary
updated test methods to include verification and error handling for verification in IncorectBindingPuzzleFixedTest . java to improve test clarity and
replace the method ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the
truffle : fix javadoc error in typesystem and implicitcast
refactor JsonObject class to improve code readability and maintainability
updated idle timeout condition in SelectChannelEndPoint . java and modified connection max idle time check in HttpConnection . java to ensure correct handling of idle
fix npe in farmlandblock . cansustainplant ( ) . close # 3796
added functionality to create a table and retrieve primary keys for SALT _ BUCKETS and modified related queries to support multi - tenant tables and
updated SimpleDateFormat to use Locale . US and added a new class B6791927 with cookie expiration validation to ensure consistent date formatting across different
added multiple null checks for the database connection in DbHelper . java to ensure proper resource management and prevent potential NullPointerExceptions
increased the timeout duration for message processing in BatchMessageListenerContainerIntegrationTests from 1 second to 5 seconds to allow more time for processing
economyallocationstage : add tracera to the allocation stage .
fix ` ` save ' ' button in source tab ( # 5373 )
added a static block to initialize ObjectMapper in a static block to ensure consistent initialization of ObjectMapper across different operating systems
updated path normalization in NativeEnvironmentRepository . java to handle Windows paths correctly to ensure consistent path formatting across different operating systems
added a PostConstruct initialization method and refactored service management in multiple test classes to improve application lifecycle management and ensure proper shutdown of the Application
[ java ] remove unused method from record log .
replaced the deprecated GroupName with ErrorGroupName in the ITSystemTest class to align with the updated error reporting API
remove unnecessary sleep from testfuzzoptimizations # testsimplify
added a private boolean variable ` reverseImage ` and removed redundant shared preferences initialization to streamline code and improve readability by eliminating unnecessary
replaced ` . equals ( ) ` with ` . equals ( ) ` for string comparison in multiple Java files to improve code readability and
add a predicate to exclude id and meta attribute in link service ( # 5372 )
updated JUnit 4 imports and annotations to JUnit 5 in AuthenticationSuccessListenerTests . java to utilize the latest JUnit 5 features and
improve performance of settypes . indexof ( ) and gettypes ( )
refactor TypeUtil to improve code readability to enhance maintainability and facilitate future feature additions
updated triggerTime to use LocalDateTime and TimeZone for better date formatting to ensure accurate trigger time representation across different locales
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for creating ` AbstractMethodError ` instances to enhance
camel - 16400 : simple language can now use $ { body } placeholder instead of $ { body }
removed unnecessary check for empty ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - jclouds : fixed the c error of jcloudspayloadconverter
camel - 16400 : camel - core - optimize to reduce osgi bundle load
added a new check for the ACC _ STRICT _ ON _ DEFAULT method in Check . java and created a new test class CheckACC
[ java ] increase timeout for channel validation test .
added a new file ` FileExtensions . java ` that defines immutable set of CLANG source and header files to provide a centralized way to
simplified the initialization of ` FORMAT _ THREAD _ LOCAL ` and removed the custom ` ThreadLocalDateFormat ` class to improve performance and
8194071 : [ testbug ] update vmdeprecatedoptions test for obsolete / expired option
added displayName property to Pac4jBaseClientProperties and modified related classes to utilize it to enhance display name management and improve test configuration
replaced RuntimeException with EarlyTerminationException in multiple operator classes to provide specific error handling for early termination issues
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5452 -
fixed potential npe in forgeeventfactory . getcapabilities ( ) when parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by focusing only on relevant exceptions
added deprecation annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that these services are outdated and should not be used in future development
updated length variable handling in HyphenationTree . java to improve clarity and correctness in the hyphenation construction process
added a sleep of 200 milliseconds in IQRegisterHandler . java to ensure proper timing during registration
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated the documentation for the ` PARAMETER _ NEEDS _ TO _ BE _ NAMED ` constant in ` ParameterBinder . java ` to
added a new boolean variable ` providersChanged ` initialized to false to reset the state of configuration changes
added a method ` quoteIdentifierTokens ` to handle identifier tokens in ` SemanticAnalyzer ` to improve the handling of quoted identifiers in SQL queries
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated type parameters in SolrResourceLoader for better type safety to improve type safety and reduce unchecked cast warnings
updated the boundary check for hit detection in Window . java to improve accuracy of hit detection logic
added null check for appManifest before accessing its targetSdkVersion to prevent potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to use a dedicated method for adjusting configuration metadata to improve code readability and maintainability by reducing redundancy
added userName property and related getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and HiveSemanticAnalyzerHookContextImpl classes
camel - 16400 : added setter to xsltbuilder to allow customization of the xslt source .
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , and TestFirstInFirstOutComparator classes to enhance functionality by integrating
updated expected file size in ShadowAssetManagerTest and removed redundant variable declarations in ShadowContentObserverTest and ShadowDownloadManagerTest to streamline code
use the log fallback to log access anyway when something unexpected occurs . do the same at the end of event to avoid the possibility of skip recycling .
camel - 16400 : fixed the unit test error of throughputloggertest
refactor VM version checks in CompilerConfigFileWarning . java and ConfigFileWarning . java and add VMOptionWarning . java for diagnostic options to improve
refactor metrics handling by replacing ` MeterStatisticsManager . statisticsOperationMap ` and ` MeterStatisticsManager . statisticsOperationMap ` with ` Meter
do n ' t print system . err . logback . configurationfile in frameworklauncherextended
added @ NotNull annotations to method parameters and class names for consistency to enhance code robustness and clarify the purpose of the class
replaced BASH _ ESCAPER with SHELL _ ESCAPER in multiple files and added a new CMD _ ESC
refactor ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to use ` try - with - resources ` for better resource management
change test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
removed an unnecessary closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to provide functionality for generating shield addresses from the wallet
changed return type of readConsoleInput method from byte [ ] to String and updated its implementation in JansiWinSysTerminal and Jna
updated regex patterns and modified the visibility of the sRunFlavor variable in TestStabilityRule . java to improve the accuracy of the test
added a condition to limit fragment matching in DefaultSolrHighlighter and updated the corresponding test in HighlighterTest to improve handling of multi - valued
updated the ` tryToLogin ` method to accept a ` Uri ` parameter and adjusted the return value accordingly to enhance the method ' s functionality
removed unused imports and modified entity handling logic in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to
( chore ) camel - jms : fix checkstyle violation
removed the wrapCollection method call from the update method to simplify the method signature by eliminating unnecessary collection wrapping
added logging functionality and exception handling for unknown currency types in BTCEAdapters . java to improve error handling and provide better insights during currency
fix for http : / / issues . apache . org / activemq / browse / amq - 2352 - fix regression in
pdfbox - 4892 : set default value for averagecharTolerance and spacingTolerance to 0.3 f
modified the ` startController ` method to accept a boolean parameter for tenant isolation control and added new tenant creation methods to enhance flexibility in testing
simplified the return statement by directly returning the response value to improve code readability and reduce unnecessary object creation
added a check for non - empty ` attrs ` in the ` ProjectWorkspace ` class to ensure that the condition does not exceed the bounds of
added methods for retrieving JDK name , type , and language level in ` AbstractIjProjectConfig ` and updated references in ` Ij
updated the experimental status description from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify that
added a username password authentication token to the GrantedAuthorityEffectiveAclsResolverTests to enhance security by enabling authentication for specific user details in
update javaparsertypedeclarationadapter to use getresolvedjavalangobject ( ) instead of new classtypedeclaration ( object )
added button count management logic to XToolkit . java to limit the number of buttons returned by XlibWrapper . XGetPointerMapping to
updated import statement for AssertEquals from jdk . testlibrary to com . oracle . java . testlibrary to ensure compatibility with the correct test
added MessagePackFactory class with factory methods for creating MessagePacker instances to improve code organization and facilitate the creation of MessagePack
added new biome tag ` ` is _ desert ' ' and ` ` is _ cave ' ' to the forge biome tag
rename method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
added conditional logic to update UIID based on horizontal state and horizontal orientation to ensure correct UIID assignment for different element types
updated URL pattern matching in DOIServiceImpl . java to ensure compatibility with old URL forms
replace ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in both ` AndroidInput ` and ` AndroidLocklessInput ` classes
[ java ] ensure commit position counter be close in clustered service agent .
# 113 - add recordid and usersite ( # 113 )
fix httpconverterregistrar error on invalid port
cloudstack - 4369 : fix npe in listvirtualmachines api when host _ id and host _ id be not specify
replaced the method ` openInput ( fileName ) ` with ` fileLength ( fileName ) ` in ` NRTCachingDirectory . java `
updated the JavascriptCompiler class to use a new method for generating classes and made the ` beginCompile ` and ` endCompile ` methods final to
removed the synchronized keyword from the UISettings class and modified the store method to synchronize on the UISettings class to improve performance by reducing unnecessary
added a check for native text input and changed the visibility of the fireDataChanged method from private to public to enhance text input functionality and allow
fix spannerio retry exception when emulator only support one transaction at a time
use diamond operator ( ` ` < > ' ' instead of ` ` < string , byte [ ] > ' ' ) in test
modified the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java for object serialization testing to ensure
replaced ` getClaim ( ) ` with ` getStringClaim ( ) ` for nonce retrieval and modified logging behavior in ` OIDCAuthenticationFilter
added a condition to check if the field is a relationship field in DCInputSet . java to ensure proper handling of relationship fields in the input
added server slogan functionality to the capabilities table and updated related classes to enhance user theming capabilities management and improve code clarity
updated menu item handling logic in DrawerActivity . java to improve clarity and correctness of menu item tinting based on menu item
updated the test case to use ` assumeNoException ` instead of ` fail ` to improve clarity of test output and ensure the test does
added a check to return early if there are no missing symbol events to improve performance by avoiding unnecessary processing when there are no missing symbols
added a new column " 5 - 4 " to the string representation of data entries in StringHelperTest . java to enhance the output format for better
added a warning log for an empty array or iterator return an array or iterator in the DataProviderHolder to inform users that the data provider does
( chore ) camel - util : replace collections . empty _ map , collections . empty _ set , collections . emptySet ( ) with collections
[ freeplane ] allow selection style to be set if the map version do not support it
updated the parameter name from ' mass ' to ' restitution ' in PhysicsRigidBody . java to improve clarity by
added a new ` AutoFtpActivity ` and ` FtpHelper ` classes for FTP testing functionality to facilitate the testing of
refactor token handling in BaseSemanticAnalyzer to improve code readability and maintainability
added methods ` getImageX ( ) ` , ` getImageY ( ) ` , ` setComponentState ( Object state ) ` , and `
added a new class ` RemoteExecutionEnabled ` to manage remote execution status to enable / disable remote execution in the build process
pdfbox - 4892 : fix typo ; improve javadoc
updated file reading methods to use InputStreamReader with UTF - 8 encoding to improve compatibility with various file systems and enhance code readability
added assertion to verify that working scores are not stale to ensure that shadow variables are not stale during execution
updated the SEMIJOIN _ CONVERSION configuration parameter from " hive . enable . semijoin . conversion " to " hive . optimize . semi
log message content if they be not an io . netty . buffer or java . netty . object .
replaced the method ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related logic in `
added assertions to verify the presence and absence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly
deprecated the ` constructSchemaBlackList ` method and updated the test to validate behavior changes to increase the minimum expected return value to align with updated schema construction logic
add null check for newformat . samplemimetype in mediacodecrenderer
replaced ` this . notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc
updated ` @ AllArgsConstructor ` annotation to include ` onConstructor _ ` for JSON serialization to enable proper deserialization of JSON objects with properties mode
added SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to indicate that the operation is not supported and encourage
added a new Website class and a corresponding test in PopulatorImplTest to facilitate the population of JavaNet types in the
added a setup method to set the default locale in BSFormatterTest to ensure consistent locale configuration for tests
improve error message if there be a bad jar file .
updated the sha1sum assertion to use ` Matchers . equalToIgnoringCase ` for case - insensitive comparison to improve readability of the
added checks for single parameter and token handling in SimpleExprGenerator to ensure proper handling of variable expressions in the code
added a boolean field ` createdVertx ` to track the creation status of the Vertx instance to ensure that the vertx instance is only
updated the writeAttributes method calls to include a NodeModel parameter to enhance the functionality by associating attributes with specific nodes
updated log messages from " Synchronized " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated the ` CategoryREST ` and ` FeedREST ` to
replaced instances of ` MavenTestingUtils . getTargetDir ( ) ` with ` MavenPaths . targetDir ( ) ` for target directory resolution to
updated imports and refactored data validation logic in RegisterServerConsumerExecutor . java and URIRegisterExecutorSubscriber . java to improve code clarity
updated the logic for determining if a sound is playing in GwtMusic . java to ensure that the playback state accurately reflects the
added a new permission check for the admin ' s sudo area in MainCommand . java and defined a new permission constant in Captions . java
replaced ImmutableMap with HashMap for query options and introduced a new method to update query options to improve code readability and facilitate trace
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
refactor assertions in ResourcesTest to use temporary variables for emoji strings to improve code readability and maintainability
replaced the native method ` NMTWaitForDataMerge ` with a new method ` NMTOverflowHashBucket ` and added a
[ hotfix ] migrate eitherserializernapshot to javatereserializersnapshot for backwards compatibility
updated default values for NDOTS and ROTATE _ RESOLV _ OPTION in AddressResolverOptions and added new methods in AddressResolver
added a method call to ` __ associate ` in ` RequestRockerTemplate ` and created a test for it in ` RequestRockerTemplate
pdfbox - 2576 : avoid npe , a suggest by valerybokov
updated schema file references from " liquibase / parser / core / xml " to " www . liquibase . org /
rename com . oracle . truffle . api . source . commonmimetypetypelocator to com . oracle . truffle . api . test .
replaced instances of RepositoryVersionState . INIT with RepositoryVersionState . NOT _ REQUIRED across multiple files to change version state from INIT to NOT
updated the comparison logic in GenerateChangeLogTask to use a new SchemaComparison array to enhance schema comparison capabilities for the reference snapshot generation
updated the JUnit import from ` org . junit . Test ` to ` org . testng . annotations . Test ` to utilize
added a new file ` ProgressiveJPEGTest . java ` to implement a progressive JPEG test for graphics rendering to enable testing of progressive
ogrexml material loading : some material state be not reset , cause it to leak to other model
improve error message when target architecture be not 32 - bit
added a null and length check before setting the size of the label to avoid potential NullPointerExceptions when the text is null or empty
modify readVarInt ( ) to include a division by 1 , 000 000 to improve data processing efficiency
changed classes PushUtils and ThumbnailsCacheManager to be final and added private constructors to enforce singleton pattern and prevent instantiation
replaced the method of obtaining the length from ` curConfig . getBounds ( ) ` with a direct call to ` curConfig . getLength
removed unnecessary cast to MockDirectoryWrapper when setting enableVirusScanner to streamline code by eliminating unnecessary type casting
updated the file path format in the componentPresetDao load method to ensure compatibility with the expected input format
added a condition to check if the duration is greater than zero before invoking the announceForAccessibility ( ) method in TaskbarStashController
updated the instantiation of ` homeNode ` to use ` RefreshTask . getNodeId ( ) ` instead of ` Args . getInstance ( ) .
add a test case to show that ant task do n ' t make sense to target jdk 1.5
fix ( test ) : use mockitojunitrunner instead of powermock
added error stream and output stream management in TestSchemaToolCatalogOps . java to enhance error handling by allowing console output for better debugging
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated related methods to include it to
updated the MongoQueryMethod constructor to include RepositoryMetadata as a parameter to enhance query resolution by integrating metadata into the query resolution process
add a wrapper to make it easy to use a custom entityresolver2 .
updated import statements in MetaDataEndpointImpl . java to use new constants from PhoenixDatabaseMetaData to improve code clarity and maintain consistency
increased the allowed deadlocks from 5 to 10 and added a retry interval for deadlocks in the transaction handler to allow more time for
renamed variable ` xl ` to ` xAxis ` for clarity and updated its usage in ` BarChartActivity . java ` , ` Line
added methods to validate printable characters and their names in FsUtils . java to enhance character validation and prevent errors on non - printable characters
rename method ` ` in ' ' to ` ` use ' ' for clarity
[ mng - 5352 ] add option to not process plugin configuration in the lifecycle executor .
fix number overflow in traffic counter ( # 1193 )
test : use google - cloud - vision instead of src / test / resources
changed return value from " STUB " to null in ModeledConnectionRecord . java and added remote host retrieval in AuthenticatedUser . java
[ ds - 3952 ] add admin permission check to community list servlet
make compaction thread name unique for long and short compaction thread
updated the method of obtaining the package name in WallpaperChooser . java to ensure the correct resource package is used for better resource management
updated the method to include a visibility check for players in the plot ' s list to ensure that only visible players can be shown in the plot
refactor AndroidManifest , ResName , and ShadowMediaPlayer classes to improve code organization and maintainability
rename MlibOpsTest . java to improve clarity to enhance code readability and maintainability
replaced string literals for the OperatingSystemImpl with a constant in JNIRegistrationManagementExt . java to improve code readability and maintain
updated the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test method in Scheme
simplified key generation and initialization vector handling in UploadFileOperation . java to improve code readability and reduce redundancy in key and initialization
added Stability annotation to WorkProfileTest . java to address stability issue identified by B / 243688989
removed redundant check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks for bucketing version
replaced direct call to setCursorPosition with a reference to input to ensure the cursor position is set correctly within the input context
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and added ` LockFreeBucket _ FinalFields _ Cache
add ` ` tpstats ' ' to nodetool help
updated the maximum bitrate setting to utilize user preferences instead of default values to enhance flexibility in setting bitrate based on user preferences
refactor tracing logic in ZipkinHttpSpanExtractor and add new test cases in TraceFilterTests to improve clarity and correctness of span
deprecate getuserpaymentaccounts ( ) in favour of abstract getuserpaymentaccounts ( )
fix an issue with the right alignment of the auto completion icon ( # 5379 )
added a method to set the project path in LauncherUtils . java to ensure the project is properly associated with the file system
updated JsBundle , JsBundleBuilder , JsBundleWorker , JsLibraryBuilder , and JsTestScenario classes to include ProjectFilesystem as a parameter
refactor EnvelopeStyle , EnvelopeFeature , Databinding , JavaCallInfo , DistributedPropertySet , and DistributedPropertySet classes to improve
[ hotfix ] [ doc ] fix typo in javadoc of metricsdslcontext
removed the VersionConfig interface and modified the VersionBuckConfig implementation to use ImmutableSet for universes to simplify the code structure and eliminate unnecessary
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve error handling and prevent application cr
changed the access modifier of the ` validateTypes ` method from static to public and updated the exception message format to improve accessibility of the method
fix : update gapic - generator - java with mock service generation fix ( # 136 )
added SLF4J logger imports to SimulationStatus . java to enhance logging capabilities for simulation status operations
updated the VERSION _ POSITION _ Y value and changed the VERSION _ FONT font version from 138 to 150 to update the application ' s version
added a runLater block around the notification addition in UserInterfaceComponentImpl . java to ensure notifications are executed on the UI thread
updated the mock implementation in AdditionalAnswers . java and modified the return statement in ReturnsElementsOf . java to enhance the functionality of the mock and
updated error message from " non - string partition columns are not allowed using non - equality " to " equality " to clarify that the
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` for document indexing to ensure that stored fields are
added a method to retrieve the version code from the MainApp class and updated FeatureList and WhatsNewActivity to use this method to improve
camel - 16400 : camel - bean component - allow to use method ref for bean explicit method invocation . thanks to micha
updated assertions from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added a bufferOwned flag and modified constructors in IndexBufferObject and VertexBufferObjectWithVAO to manage buffer ownership more efficiently to
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through
[ hotfix ] [ javadoc ] fix typo in jerseyclientconfiguration
int - 171 , int - 172 , int - 173 use a string resource instead of a class reference to characterstreamreadingmessages
updated print statements to use variable ' o ' instead of ' s ' and changed type return type from singleton to List to improve code clarity
updated StringDict and Table classes to manage column and row counts more efficiently to improve performance by eliminating unnecessary resizing of the string
deprecated the old ` Container ` interface and implemented a customizable container command hook in ` GenericContainer ` to enhance resource management and ensure proper cleanup
updated logging level from info to error in MediaInfo . java and refactored exception handling in RendererConfigurationTest . java to improve error reporting
added support for schemapattern configuration in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database connection flexibility by allowing specification of
do n ' t return null for empty id when there be no tl session
refactor calculations for bitmap creation in AndroidGraphics . java to improve readability and maintainability of the code
refactor Base64 class implementation to improve code readability and maintainability
sulong : add miss getter and setter for fallback value in getstackfromthreadnode
danielwagnerhall : unignoring a test on the iphone
updated FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
replaced ` ResName ` with ` int ` for resource identification in ` AttributeResource ` , ` OverlayResourceIndex ` , and ` Style
resolve the tl context path from the docker context meta file ( # 2329 )
polish ` ` use @ before ' ' instead of @ after ' '
added a loop to handle type variable assignments in ` Attr . java ` and created a new class ` T6450290 . java `
added logging level configuration to LoggingFlags and LoggingOptions classes to enable customizable logging levels for better control over log management
added logging statements to LauncherModel , SecondaryDropTarget , and ModelWriter classes , and modified the deleteItemsFromDatabase method to accept a
added allFilesOption method implementations in FileActivity and FileDisplayActivity to enhance file management functionality across activities
added methods ` forEachOperation ` and ` hasMatching ` to the ` MutationOperationGroup ` interface with deprecated annotations to improve code clarity and
updated the calculation of numPredictiveAppCols to use a conditional assignment based on whether the app is a phone to improve accuracy in determining the
added a new String instance using Charset . forName ( " UTF - 8 " ) to ensure proper handling of character encoding in string processing
added a new class ` RequestMatchers ` and its corresponding tests in the ` RequestMatchers ` class to provide utility methods for matching request matchers in
make sure temporary mode do n ' t show / hide it in applet
update calculations in the ProgressBar class to account for the bottom and width dimensions to ensure accurate rendering of the ProgressBar by accounting for additional dimensions
[ native ] use external _ functions . json for external function manager
replaced multiple instances of ` extra _ L0 ` with ` final ` in ` BruteArgumentMoverHandle . java ` and
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture state when the handler is invalidated
updated layout metrics calculation for landscape and portrait layouts to improve layout responsiveness and accuracy in landscape mode
added a condition to check if the redir is a " / robots . txt " file to ensure proper handling of robots . txt files in
use netbeans 1.4 . 0 and 1.5 . 1 for warning icon , use netbeans 1.4 . 0
fix ( game ) : add ` ` create world ' ' and ` ` return ' ' to screen
added a check for zero values in the UDFOPDivide class and created a new TestUDFOPDivide class to ensure
refactor code formatting and add an ABANDONED status check in the FlowJob class to improve code readability and ensure correct handling of
updated filter configurations in ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser ` to use ` BeanDefinitionBuilder ` for improved
added onDestroy ( ) method to ShareActivity and ContributionsActivity to unbind the upload service connection to ensure proper resource cleanup and prevent memory leak
update variable references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency in variable
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a method to set the request timeout in RaftServerConfigKeys to enable dynamic configuration of RPC request timeout
replaced error logging with debug logging and added sealed time index resource handling in TsFileResourceManager . java to improve logging clarity and
added a method to set system properties in MavenModuleLoader to ensure the model source is consistent with the current system configuration
add metric for readiness check success and bad ( # 1193 )
add a custom model handler for the animatedtorch . close # 241
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing
added a method to retrieve Hive configurations from a specified directory to enable dynamic configuration of the Hive execution engine for testing purposes
added " Muting Users " link to FeaturesActivity . java to provide users for making users
added a property to disable direct method handle in jdk . reflect . useDirectMethodHandle to improve performance by disabling direct method handle usage
replaced ` ConstantSizeRegionSplitPolicy ` with ` SteppingSplitPolicy ` in ` SplitOnLeadingVarCharColumnsPolicy ` to enhance
[ flink - 3171 ] [ yarn ] add ' yarn . plugins ' and ' yarn . lib ' to ship
replaced calls to ` getPronunciations ( ) ` with ` getWord ( ) . getPronunciations ( ) `
updated JSON string format in JsonUtilsTest . java to remove unnecessary newline characters to improve readability of JSON output
added an extra " id " field to the compose object in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to include
log a warning when a reliable topic be lose .
throw a custom exception instead of an ioexception when there be no class to analyze
replaced ` Key ` import with ` PublicKey ` import in ` KeyFetcher . java ` to ensure compatibility with public key usage in the code
set the isIncompatible variable to true in DLNAResource . java to ensure compatibility with updated resource handling logic
updated the parameter type of the createAccount method from Account to AccountCreateContract to ensure compatibility with the new contract structure for account creation
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
fix for http : / / issues . apache . org / activemq / browse / amq - 2292 - keep the original
enable off - heap format by default and update default star tree format version to v1
modified the title handling in FeedUpdateService to ensure it does not exceed a maximum length of 2048 characters to improve user experience by limiting the
updated JColorChooser and BasicColorChooserUI to utilize the ColorChooserComponentFactory for previewPanel initialization and modified BasicColorChooserUI to
changed log level from info to debug for the " checking for extensions . " message to reduce log verbosity and improve performance during extension scanning
added null check for reusable bitmap before setting inBitmap to prevent potential NullPointerException during bitmap processing
added a new method ` getLayoutParams ( ) ` to ` FakeView ` class to provide access to the ` layoutParams ` parameter for external
added a check to prevent IllegalStateException when calling the iterator on a closed cursor to ensure proper error handling when attempting to call an iterator on a closed
pdfbox - 4892 : avoid a classcastexception , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready yet
added a private field ` ts ` with getter and setter methods in the ` Message ` class to enable tracking and management of message timestamps
[ bugfix ] add log in case of exception
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the class from other packages
remove usage of deprecated parameter in isochrone / isochrone rest endpoint
removed the ` public ` access modifier from multiple test classes and updated import statements to enhance encapsulation and improve code readability
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and reusability
[ fix ] resolve shadowclassloader issue in eclipse loader patch
[ drools - 1340 ] allow to disable numeric value in sheet ( # 1341 )
changed log level from info to debug for default value logging in HiveConf . java to improve logging granularity for better debugging purposes
added handling for null axes and buttons in Lwjgl3Controller and improved controller management in Lwjgl3ControllerManager to
updated ObjectFactory import from cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactory
refactor port forward save logic in PortForwardListActivity to improve clarity and maintainability of the code
added a new configuration option to control whether Liquibase snapshot data should be stored by default to enhance flexibility in managing Liquib
updated event logging and job scheduling logic in SyncedFolderObserver . java to improve debugging and ensure job execution only occurs when a valid path is
refactor LocationMarshaller class for improved clarity to enhance maintainability and readability of the code
updated touch event handling logic in StatusBarTouchController . java and modified gesture detection in OtherActivityInputConsumer . java to improve touch respons
refactor ` VectorReader ` from an interface to a class and update its implementation to enhance encapsulation and improve code readability
updated import statements from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to align with the latest Mockito API conventions
replaced instances of ` getRelativePathName ( ) ` and ` getRelativePathSupplier ( ) ` with direct calls to ` getRelativePath ( ) ` to simplify
updated method signatures and variable names to use RecordReaderFileConfig instead of RecordReader to improve clarity and consistency in naming conventions
added a null check for the extractor before instantiation in ControllerMethodInvoker . java and updated annotations in Param . java and Params . java to ensure
server : fix resource limit api to return correct value for volume and domain .
add potion shift event to guiscreenevent . make it easy to use it .
add ` ` cold _ reads _ to _ omit ' ' and deprecate ` ` cold _ reads _ to _ omit ' '
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to ensure that the leech instance is properly
[ issue # 5640 ] add the retry metric to popmessageprocessor ( # 5641 )
refactor keyboard addon settings handling to improve code readability and maintainability
replaced the JUnit @ Test annotation with an @ Ignore annotation in ShadowDateUtilsTest . java to temporarily skip the test due to a
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related variable
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to enable websocket upgrade functionality and improve test coverage
added timeout functionality to AndroidImplementation to manage connection timeouts to improve responsiveness and control over connection behavior
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to use a list of ` RegistrantAccessPermission ` for
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure proper parsing and deparsing of quoted SQL
modified file access assertions to differentiate between root and non - root environments to improve file accessibility checks for non - root environments
added logging functionality and refactored executor selection logic in FixedThreadExecutor . java to improve thread management and reduce code duplication
added null check for the field variable before checking for " catalogname " to avoid potential NullPointerException when the field is null
updated method return types from CasEventListener to InitializingBean and replaced CasEventListener with RegisteredServicesEventListener across multiple configuration files to improve consistency and align
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and reusability
added an override for the close method in RegionFile to ensure proper resource management by closing the deflater output stream
added a new file ` gsp001 . java ` with a native method to retrieve system properties to enable testing of system property retrieval during early
do n ' t override annotation on injected bean
[ fix ] export camera / lightnode to jme3
refactor PopupNotificationPanel to use SwingUtilities for obtaining the parent window to improve code clarity and ensure proper disposal of the
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` and ` Infer . java `
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int ` to ` long ` to ensure compatibility with larger time values
added fields ` onBuild ` and ` executionDriver ` to ` ContainerConfig ` and ` Info ` classes with their respective getter and setter methods
added conditional logic to set icon based on whether the text is RTL or not to ensure proper positioning of commands based on the text direction
added support for enabling position increments in StopFilterFactory to enable or disable position increments for improved filtering performance
refactor internet address handling in EmailsTest and SystemErrorEmailReportTest classes to include " TEAMMATES Admin ( nore
added a flag ` mTryShareAgain ` to ` FileActivity . java ` to track whether to share files to improve user experience by prevent
added logic to determine if the terminal name is used based on the version of the Jansi native Pty library to ensure compatibility with different
updated variable names and logic in BandwidthProcessor . java to use bytesSize instead of bytes to improve code clarity and ensure accurate bandwidth calculations
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test reliability by ensuring spans are
replaced hardcoded API URLs with a constant API _ BASE _ URL in EaseeBindingConstants . java to improve maintainability by central
updated sleep duration and added startup attempts configuration in KafkaIOIT . java to improve readability and increase reliability of Kafka startup process
replaced allOf with is ( itemName ) for JSON path matching to simplify the comparison logic for better readability and maintainability
added SSL certificate trust checks and improved SSL configuration in OkHttp . java to enhance security by ensuring all certificates are validated before use
refactor button handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and separation of concerns
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` for field length
added nullable annotations for stdout and stderr in ShellStep . java and improved null safety in the escapeAsBashString method to enhance code
increase timeout for asyncappendertest from 1000ms to 2000ms
updated the ` escapeDatabaseObject ` method to include ` objectName ` instead of ` tableName ` to enhance flexibility by allowing different object types for
make sure rename dialog do n ' t disappear when the user click on it
added a test for state change functionality in ShadowDisplayTest . java and implemented setState method in ShadowDisplay . java to ensure correct behavior of display
make directinvocationservice an interface to provide a way to invoke a direct method in the dispatcher .
gwt : use ^ x and ^ y for x and y key ( in web )
updated SQL query construction in PgDatabaseMetaData . java to account for PostgreSQL server versions to ensure compatibility with PostgreSQL 9.0 and above
[ java ] remove useless null assignment in queuechannel
updated the ` getPathsFromResource ` method to remove the ` IOException ` declaration and replaced ` jarPath ` with ` pathUri ` to
added JENKINS _ NODES _ SUFFIX constant and modified remoteCollector initialization based on application type to enhance monitoring capabilities based on
refactor attribute checks in HeadersBeanDefinitionParser to use a helper method to improve code readability and maintainability by centralizing attribute resolution logic
hbase - 25819 fix error message in protobuflogreader when file be reach the end of the file at the end of the file
nacos : shutdown nacos registry on destroy ( )
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to utilize SPDY for handling status codes to improve code clarity and
updated AuditEventTests . java to include a print statement for JSON serialization to enhance debugging and ensure correct JSON output format
updated rounding error handling in the Interpolation class to use zero instead of a fixed value to ensure consistent behavior when rounding errors occur
change default folder path to / defaults / instead of / defaults /
refactor code to store the executable path in a variable before adding it to the builder to improve code readability and maintainability by avoiding
added point range assertions in TestPointQueries . java to ensure correct handling of PointRangeQuery instances
hbase - 16400 fix testhfilecleaner to work on window ( addendum )
updated file label display logic in ReceiveFileConversationComponent . java to ensure the correct file name is displayed when the download file name does not change
do n ' t swallow exception in jedisclustercommand
[ hotfix ] make rowtimeminibatchassgineroperator chainable
replaced RegExpBasedFilterInvocationDefinitionMap with PathBasedFilterInvocationDefinitionMap in FilterInvocationDefinitionSourceEditor . java and updated corresponding test cases
added baseline methods and modified hash map initialization in QMap benchmarks to improve performance testing of key generation and reduce memory usage
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added a check for empty fields and improved identifier completion logic in GroovyEngine . java to enhance robustness by ensuring proper handling of empty fields
do n ' t draw ` ` 0 ' ' for ` ` 0 ' ' , not ` ` 0 ' '
added TCP keepalive configuration options in HiveConf . java and modified server transport initialization in HiveServer . java to improve connection stability and control over
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` to clarify the purpose of
no effective change - code cleanup - remove unused import
replaced Joda - Time imports with a lambda expression in RealtimeSegmentRelocator . java to improve code readability and leverage
vpc : createvpc do n ' t return success when start vpc
updated windowAlpha calculation and modified condition in FloatingIconView to ensure windowAlpha is always non - negative to improve robustness by preventing
updated fatal error message to clarify schema declaration requirements for Spring Security versions to provide users with guidance on using Spring Security 4.0
refactor multiple assertion classes to improve consistency in naming conventions to enhance code readability and maintainability by standardizing naming conventions
changed instance variables to be final in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure immutability and
added a new test class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` to utilize it to enhance testing capabilities
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
replaced instances of ` logger ` with direct method calls to ` LoggerFactory ` for better readability to simplify code by eliminating unnecessary
replaced the ` updatePurgedShardNodes ` and ` purge _ time ` queries with ` delete ` and ` delete ` methods across multiple
updated JavaLanguageModule to add a new version " 17 " as the default and introduced a corresponding handler for version " 17 - preview " to
make fileappenderresiliencetest more tolerant to slow machine
make sure lastlocationaccess be not null before call hasonlyusagesoftype
added a method to retrieve an unmodifiable list of steps and made minor formatting adjustments to improve code readability and maintainability
removed redundant fields fromBase58 , toBase58 , and contractAddressBase58 from and toBase58 in JsonRpcApiUtil . java
refactor currency pair creation to use a variable for clarity to improve code readability and maintainability
use base time unit for longtasktimer . measure ( ) in compatibilitykit
do n ' t use hashpartitioner in reducebykeytranslator for non - hash partitioner
changed the type of ` value ` and ` pubkeyId ` from ` String ` to ` CharSequence ` and updated the handling of preference values to
rename incompatibledatabasehandler to databaseversionhandler to avoid confusion
added a limit to the number of tweets processed in the wait loop to ensure that the number of tweets is within the specified maximum for
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map
http : / / issues . apache . org / jira / browse / amq - 4368 - add a test to ensure that
fix checkstyle issue in util / glowserver . java ( # 761 )
added a new method ` grow ( long n ) ` and refactored the buffer growth logic to improve code readability and maintainability
added import statement for DataOutputStream in GdxSetup . java to enable serialization of data for improved data handling
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to access the file name associated
added markReadForLoad ( ) method to LauncherFragment . java to enhance fragment state management during loading
added ClassNotFoundException handling to the main method and instrumentJar method to improve error reporting for instrumentation failures due to negative array size exceptions
added a method ` checkForSpillPossibility ` to handle potential memory issues in ` HashAggTemplate . java ` to ensure proper error handling
replaced the use of ` info . info . getDocStoreSegment ( ) ` with a local variable ` dsName ` for consistency to improve
added a default name ID format in SamlProfileSamlNameIdBuilder to ensure a default name ID format is used when no supported name formats
added redirect and error handling for password change in ChangePasswordPage . java to improve user experience by preventing unintended password changes
updated closing brace formatting in Deadlock2 . java to improve code readability and maintain consistency
add a getmaxidletime ( ) method to the nio receiver mbean to provide a way to get the max idle time .
deleted the FontScalingTest . java file to remove unused test class for font size validation on the Metal Look and Feel
updated date filtering logic in RRD4jPersistenceService . java to ensure bounds checking for begin and end dates to improve error handling and prevent
added a check to return early if there are no vectors to optimize performance by avoiding unnecessary processing
test : migrate executablereftest to junit 5 ( # 4521 )
added null checks before setting view and glassPane in JLayer . java and created a new class bug6994419 . java to
camel - 1640 : added wiretap to the dsl so you can use it in the start / stop command . thanks to j
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
add planner . enable _ topn option to allow push limit to topn
[ java ] remove redundant assignment of aerondirectoryname in agent logging test .
fixed - rbatch . ping ( ) and rbatch . ping ( ) method do n ' t work correctly if queue be empty . #
replaced the deprecated ` getConfVarInputStream ` method with a new ` getConfVarURL ` method that creates a temporary configuration file and improves
updated the device reference from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in ` BaseModelLoader . java
updated the ` onCreateOptionsMenu ` and ` onMenuItemSelected ` methods in ` SimulationViewer . java ` to handle menu inflation
pdfbox - 4071 : fix typo find by codespell on fossies . org
fix : set hawtio . dirname instead of hawtio . dirname
added a condition to return a single space when comments are empty or empty to improve handling of empty comments in the code
changed fields in multiple dictionary classes to be volatile to ensure thread safety when accessing shared resources
removed stack trace printing from Throwable in ContextHandler . java to improve error handling by avoiding unnecessary stack trace printing
updated the package structure and refactored the CustomItemDropTest class to extend BaseTest and added a regression test for custom items to improve
added functionality to conditionally check if a partition exists before proceeding to enhance the handling of non - existent partitions in the database
refactor input reading logic in NfsSecondaryStorageResource . java to improve readability and maintainability of the code
[ java ] do n ' t set controlrequeststreamid in clustered service node
[ geot - 5353 ] add support for spatial operator ( geot - 5353 )
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitsFix to address issue SOLR -
refactor preface matching logic in Http11InputBuffer . java to improve clarity and maintainability of the code
[ java ] set cluster . ingress exclusive to false by default .
hbase - 2640 add support for hfile . block . cache . size and hbase . offheap . pct . size
added methods to increment and update the running record count in JSONRecordReader to improve clarity and maintainability of record counting logic
added functionality to filter out out specific year items from mergedItems to improve user experience by removing unwanted items from the merged
updated drawColor method calls in CacheableTextView , CellLayout , HolographicOutlineHelper , and HolographicOutlineHelper
removed unnecessary check for OpenGL ES 2.0 availability in Mesh . java to streamline rendering process by eliminating unnecessary exceptions
added ActionContext context management in BackgroundProcess . java to ensure proper context handling during processing
refactor table name handling in BaseSemanticAnalyzer and update method signatures in QBParseInfo to include database name to improve clarity and
added connection timeout configuration in TestConnections and changed count field to final in StubConnection to improve connection stability and ensure immutability of the
added multiple test cases for the ` approx _ percentile ` query in ` TestHiveAggregationQueries . java ` to ensure the correctness of
updated ` DEFAULT _ IDLE _ TIMEOUT ` to ` DEFAULT _ IDLE _ TIMEOUT ` and modified ` idleTimeout ` and ` writeTimeout
replace ` account . name ` with ` user . toPlatformAccount ( ) . name ` in ` FileDetailSharingFragment . java ` to
updated type declarations and improved null handling in Inet6Address . java to enhance code clarity and prevent potential runtime exceptions
refactor button handling methods in PlaybackControlView to use a unified setButtonEnabled method to improve code clarity and maintainability by consolid
updated session validation logic to check against session ID instead of session object to ensure correct session identification and avoid potential errors
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
do n ' t use exception probability by default
modify the color assignment logic in PredictedAppIcon . java to support different theme icons to enhance the visual appearance of app icons based
guac - 1342 : remove mysqluser # touserwithblobs and use init ( ) instead .
added " centre " alias to the aliases list in Middle . java to enhance functionality by providing additional alignment options
added dependency injection for DirectUpload in CommonsApplicationComponent . java and made DirectUpload class public in DirectUpload . java to facilit
added spacing for left and right axes in BarLineChartBase . java and improved range handling in BarLineChartBase . java to enhance
added support for additional Java ABI flavors in AndroidLibraryDescription . java and JavaLibraryDescription . java to enhance functionality by integrating additional
added operation event type parameter to request in OnlineHubService and modified service list initialization in CompositeLogService to improve handling of operation events and
added visibility annotation tracking for method parameters in DexAnnotation . java to enhance annotation visibility management for method parameters
( chore ) camel - jms : use @ setup and @ teardown instead of @ start / @ finishbundle
refactor Process initialization to use a variable for the classpath to improve readability and maintainability of the code
updated the file path for resource loading in PackageResourceLoader . java to ensure correct resource path formatting for Android resources
[ hotfix ] fix checkstyle violation in dataset
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily skip the test due to known issue b / 243855320
added functionality to escape percent signs in stack traces in the ` ShouldHaveMessage ` class to improve error message formatting by ensuring percent signs are properly
fixed - jcache . close ( ) method do n ' t work correctly if jcachemanager . geturi ( ) return null .
reduce log level of command context close exception to info
reformatted the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
use getbasevalue ( ) instead of getvalue ( ) in entitypropertiespacket
fix ( sonos ) : do n ' t play sound if audio be not initialize ( # 5049 )
increased the timeout duration for countDownLatch from 500 milliseconds to 5 seconds to allow more time for asynchronous operations to complete successfully
changed log level from info to debug in LightThingHandler . java to provide clearer feedback to users about the absence of effect light type
make it possible to use a fixed thread pool for async job execution
updated the ` smartNullPointerException ` method to include an ` Object ` parameter and improved error messages to enhance parameter clarity and provide more
removed unnecessary casting of ` Frame ` to ` DataFrame ` in the ` generate ` method to streamline code by eliminating unnecessary type casting
updated package - info . java files for mmm and ppp packages to ensure consistency in module dependencies across the project
fix empty orc file when use column name with empty file
added a return statement to the mixPlay method in mmm Engine . java to enhance functionality by allowing the mixPlay method to be executed
updated JComponent and SynthTextPaneUI classes to improve code consistency and maintainability
pdfbox - 4892 : fix a typo in finderpatternfinder , a suggest by valerybokov
simplified the condition for checking the presence of leadingIncludePaths in PreprocessorDelegate . java to improve code clarity and reduce unnecessary checks
[ gwt ] fix npe in stringtemplatetest . testmatrixvectormultiplication
simonstewart : add ` ` $ $ x ' ' , ` ` $ $ x ' ' , ` ` find ' '
updated the sampleRate assignment logic in DefaultAudioSink . java to ensure a default value is used when format . sampleRate is not provided
added methods ` getFormula ( ) ` and ` setFormula ( String formulaText ) ` to the ` Name ` class and refactored
increase the target value in HighDimensionsTest from 60000 * scaleFactor to 90000 * scaleFactor to allow more time for tests to
fix stringindexoutofboundsexception when use simpletypeGT with patternfacet
added a new test class ClassPathXmlJobRegistryContextTests to verify the functionality of locating and locating job names in the Spring Batch
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to accommodate larger time values for performance
camel - 12320 : camel - restlet should use advanced option to avoid reflection
camel - 14850 : camel - aws2 - log : add showout option to endpoint builder
replaced the submitTraceEvent method with a new writeChromeTraceMetadataEvent method to improve code readability and encapsulate trace event creation logic
added a check to ensure only canceled , filled , and rejected orders are added to limitOrders to ensure only valid orders are added to the limit
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout handling and improve error reporting
refactor timestamp handling in Event . java and JrubyEventExtLibrary . java to utilize JrubyTimestamp to improve code clarity and
added a condition to check if the resource path ends with a slash in ContextHandler . java and created a test case in WebAppContextTest .
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
fix scroll bug in jedittextfield on macos
update graphdecoder . readguardsstage ( ) to handle case where the callerloopscope be null
test : migrate sniperprettyprinterjavaxtest to junit 5 ( # 4248 )
refactor URLOutputStream initialization to use try - with - resources syntax to ensure proper resource management and avoid potential resource leaks
added @ Entity annotations to the Mail class to enable the association of entities in the database schema
updated default value of ` includeTablespace ` from false to true and modified related command - line arguments to enable the inclusion of tables and indexes
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to enhance encapsulation and provide access to internal buffer data
added functionality to clear empty file lists in ScanBatch and a new test case in TestJsonReader to ensure proper handling of empty file scenarios during
updated failure comparison logic to include custom custom name in failure messages to improve clarity of failure messages for better debugging
added a regex pattern to match DLL and dylib names in the LibUtils class to improve robustness by ensuring only valid library names are
changed catch blocks from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages and PackageHelper to improve error handling
hbase - 11313 add checkdfssafemode ( ) method to check if the file system be in safemode
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and message to improve error reporting for better debugging and
[ mng - 7011 ] remove duplicate pluginsdescriptor cache in defaultplugincache
fix disappear contact when they change their presence status .
remove unused method requestdetails # withresourceandparams ( string resourcename , requesttype )
added a new integration test class for fetching account information from the BTCE exchange to ensure that the fetching account information functionality works as expected in
added mouse wheel functionality to VDUInput and vt320 classes to enable mouse wheel interactions in the terminal application
updated library path management in Natives . java to use a variable for the extraction directory to improve code readability and maintainability by reducing
# 269 - remove deprecate columnhstore annotation - migrate to use dbhstore
fix ( glowplayer ) : add miss player . skin _ flags in metadataindex
updated LoadBalancerWithServiceTests to utilize SLF4J for logging the master URL and modified service creation logic to enhance logging clarity and
fix npe in listener listener when member be null
replaced System . getProperty with AccessController for retrieving the operating system version to enhance security by using privileged actions for property access
updated the file suffix handling in the TemplateEngineFreemarker class to allow dynamic configuration of the file suffix based on application properties
updated hash code calculation in SelectMessageQueueByHash . java and added multiple test cases in SelectMessageQueueByHashTest . java to ensure
added animation callbacks and updated variable declarations in ToolbarPanel . java to enhance UI responsiveness during layout animations
fix issue with styledtextfieldview not bind correctly when there be no caret
added ` declaredPlatforms ` field and updated related methods in ` CxxBuckConfig ` , ` CxxBinaryDescription ` , and
replaced SimpleParameterAccessor with ParameterAccessor in multiple classes to standardize parameter handling for improved query performance
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added array type handling in DataUtilities and a corresponding test in DataUtilitiesTest to ensure correct default value retrieval for byte and string arrays in tests
updated SSL engine creation logic to handle null address cases to ensure proper hostname verification when the address is null
updated assertions in TestFSTabledescriptors to use assertTrue instead of assertEquals to improve clarity and correctness of cache hit validation logic
simonstewart : move the deletion of a cookie from the internetexplorerdriver to the exportedwebdriver
added a new boolean variable ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler . java ` ,
added " meta " character set attribute to HTML tags in HTMLListWriter and HTMLWriter classes to ensure proper character encoding is used for HTML rendering
refactor IndexReader to improve code readability to enhance maintainability and facilitate future feature additions
increased the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored
added a new class ` bug6337518 ` and modified ` BasicComboBoxUI ` to include the ` arrowButton ` to implement a
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future feature additions
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added notification for changes in HomeContentProvider in multiple services to ensure changes are sent to the correct content URI
added functionality to manage the state of pressed or focused states in BubbleTextView to improve user experience by ensuring the UI reflects the correct
added an ` Throwable ` parameter to the ` getFallbackResponse ` method across multiple classes to provide additional error handling for fallback responses
removed the condition that checks if ` _ compile _ only ` is true in ` DumpBytecode . java ` to simplify the code logic for
added null check for tags in ChannelUri . java to prevent potential NullPointerException when tags are null
updated JAVA _ REGEX _ SPECIALS to include a period and corrected a test method name to improve regex pattern matching accuracy and enhance test coverage for
added functionality to save and restore the action bar title in FileActivity and updated it in FileDisplayActivity to ensure the action bar title reflects
updated the method to retrieve the last converted elements instead of only elements and added a new test for concatenating lists in ConfigSettingIntegrationTest to
updated the schedule hour from " * " to " 0 " in the CleaningService class to simplify scheduling by removing unnecessary minutes
updated TransactionalValidationListener to handle partitioned tables and improved table path retrieval logic to enhance error handling and ensure accurate table structure validation during validation
refactor ReplicationHandler and SnapPuller classes to improve code readability and maintainability
changed the data type of generatedKey from int to long and added key generation logic for SQL insertions to ensure correct handling of generated keys and
removed unnecessary whitespace in SimpleReferenceCache . java to improve code readability and maintain consistency
updated test cases to differentiate between inlineable and non - inlineable failures to improve clarity and accuracy of error messages related to method invocation
updated keepAliveTimeoutShared and keepAliveTimeoutCustom to use 10 instead of 60 and added null checks for the endpoint to improve reliability of client creation
deleted the ` HttpTestAccount001 . java ` file to remove unused test class to streamline the codebase
do n ' t swallow exception in dispatcher . finish ( )
camel - 1640 fixed the c error of defaultcxfbinding
added a case for the ' ~ ' character in the ClientUtils . java file to handle cases where the character ' ~ ' is a valid
camel - 16400 : camel - slack - allow to configure delay before poll .
fire blockharvesting event when drop a block .
updated the layout size of the FormLayout and modified the JCheckBox label formatting to improve layout flexibility and enhance user interface clarity
added a new file ` bug8057791 . java ` that implements a custom JList with a JList using a Nimbus
updated flag assignment logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java with a static field definition to improve
create subscription manager and websocketmethodsfactory when the engine api be available
changed the condition from checking if ` to . length ( ) > 0 ` to checking if ` to ` is not null in ` Compose
added conditional handling for dictionary reading in ParquetFixedWidthDictionaryReaders . java and introduced a new test case in TestColumnReaderFactory . java
refactor layout handling for landscape and tablet devices in PortraitPagedViewHandler . java to improve clarity and correctness of
added a new annotation ` Log ` and its implementation ` LogInterceptor ` in the ` Shenyu . examples . springcloud . a
updated thread dump string formatting in QueuedThreadPool . java to improve clarity of thread information when trace is not empty
refactor CacheGenerator and CacheProvider to include an implementation parameter and update related methods to enhance cache management by allowing different implementations for better flexibility
updated the createReferenceMap method to include totalFrameSize to ensure the reference map is created with the correct total frame size
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the code
( chore ) camel - itest - karaf : added karaf integration test for camel - graphql
renamed the main method to bug1 and bug2 in RFE2891944 . java and added two new methods for demon
replaced URL encoding with direct string appending in HttpClientIntroductionAdvice . java to simplify code and improve readability by elimin
replaced the implementation of ` unsupportedPlatformTool ` with a new class ` UnsupportedPlatformTool ` to improve code readability and maintainability by
updated loopCount variable type and modified recovery delay logging to use int instead of double to improve clarity and accuracy of log output regarding retry attempts
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
[ drools - 725 ] make abstractaddressmanager random test unique
updated layout specifications and removed unused imports in VLCVideo . java to improve UI consistency and enhance user interface usability
rename bisq / bisq to bitsquare / bitsquare
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory path and improved file existence checks in MavenCli and MBoot classes to enhance robustness by ensuring the user ' s
added binding of GL _ ARRAY _ BUFFER to VertexBufferObjectWithVAO to ensure proper binding of array buffers for rendering
refactor ServerHttpSecurity class to improve security configurations to enhance security features for improved request handling
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to disable tests that are not ready for execution
added default header management in HttpClientProperties and updated CasCoreHttpConfiguration to utilize it to enhance HTTP request handling by allowing default headers to be
improve error message for invalid username / password
deleted the NoOpConfigPathGetter . java file to remove unused configuration path getter functionality
replaced Codec . base16Decode with Bytes . fromHexString for signingKey conversion to improve code readability and maintainability by using a standard
replaced CascadedStyle import with CSSName and added validation for float values in FloatUtil . java to ensure correct handling of float values
planner - 154 add comment about planner problemfact change
refactor the ` getDefaultHeaders ` method to use a new ` defaultHeaders ( ) ` method and rename it to ` defaultHeaders ( )
rename the ` ` enc ' ' field to ` ` charset ' ' in the ` ` proxyserver ' ' and ` ` realm ' '
added a method ` getJobId ( ) ` to retrieve the job ID in ` StepContext ` and a corresponding test in ` StepContextTests
replaced usage of ` compareTo ` with direct comparison methods in ` ExpandableUploadListAdapter ` and ` FileStorageUtils ` to improve code
change defaultjdkhttpclient and jdkblockinghttpclient to log at debug rather than error
updated imports in LegacyAuthenticationHandlerAdapter . java to replace GeneralSecurityException with NamedAuthenticationHandler and UsernamePasswordCredentials to enhance clarity and specificity
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
filtermanager : only remove filter from the network if it ' s not our own .
added a static method wrap ( InputStream ) to BCPGInputStream and refactored its usage in PGPKeyRing and PGPSecretKeyRing to
replace ` DataOutputStream ` with a buffered output stream in ` MinimalLockingWriteAheadLog . java ` to ensure proper resource management by closing
added a new test method ` testSelectAllFromView ` and refactored column name handling in ` HiveBaseResultSet ` to improve test
renamed FocusTransitionTest . java to improve clarity to enhance code readability and maintainability
[ web ] fix compilation error due to gwt 2.0
added a check to ensure the sourceTask is an instance of MapRedTask before attempting to retrieve counters to improve robustness by avoiding potential
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
added a new method ` changeComponentColor ` and refactored color selection handling in ` AppearancePanel . java ` to improve code organization
changed the parameter from ' false ' to ' hidden ' in TaskHelper . java to ensure that the variable ' s visibility reflects the intended
resolve intermittent test failure on slow machine
pdfbox - 2576 : close randomaccessio to prevent resource leak
added DefaultParameterHandler import to LanguageDriver . java and modified BoundSql , SqlSource , and LanguageDriver . java files to enhance parameter handling
[ gr - 21212 ] fix spill inlining to account for spill depth .
added a new file ` MicronautAstBuilder . java ` that includes a method for building Groovy code statements to facilitate
fix : pgresultset . close ( ) should not be call twice
changed the default value of serviceAdvisorType from null to ServiceAdvisorType . PYTHON to ensure proper initialization of service advisor type
avro - 113 . java : fix thread - safety issue in genericdatreader . getresolver ( )
replace ` Collection ` with ` List ` in ` Path ` constructor and replace ` Stack ` with ` ArrayDeque ` in ` PdfCleanUp
replaced hardcoded byte array with dynamically generated random byte values in SendCoinShieldTest . java to enhance security by preventing hardcoded
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for generating personalisation strings with specified locale and email to
removed redundant check for ` n ` in ` CodeGenerator . java ` to streamline code by eliminating unnecessary duplication
removed the percentage parameter from the scroll method signatures across multiple classes to simplify the scroll operation by eliminating unnecessary complexity
changed the visibility of the pointer variable from private to public and added reset and resetTo methods in FlatRecordReader . java to allow users to
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` and update references accordingly to clarify the purpose of the class
fix : do n ' t use implicit cast for boolean
refactor accepts handling in AbstractResource . java to use a boolean flag to improve clarity and maintainability of the code
added a new boolean variable ` false ` in ` TaskView . java ` to control the behavior of the TaskView class
added ` isAutoIncrement ( ) ` method to ` LiquibaseDataType ` and updated ` CreateTableChange ` to utilize it to
added a default value for the errorText variable to provide a clearer default message when a command fails due to internal server errors
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils for improved performance testing to enhance
replaced ` add ( currentStatus ) ` and ` add ( boosterStatus ) ` methods with ` push ( currentStatus ) ` and
added support for AJP connector configuration and port binding in GitBlitServer . java to enable users to bind to a specific port for impro
added type coercion for compound types in TransTypes . java and created a new Intersection03 . java file to enhance type handling and
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the test class for integration testing
added a native method to start the toolkit thread before instantiating it to optimize thread management by avoiding unnecessary thread creation
add an option to compress the bundle in parallel .
change to papplet . setvisible ( ) to prevent the surface from be show on window
updated the temporary directory path to use the class name instead of a hardcoded string to improve flexibility by dynamically identifying the test directory based on
added HTTP enablement options for full and solidity nodes in the CommonParameter class to enable or disable HTTP services based on configuration settings
added a service property to the GoogleCloudFirestoreTicketDocument class and modified the return statement to include it to enhance ticket management by including service
refactor Generate class to improve code organization to enhance maintainability and readability of the code
fix json _ format ( ) to handle null argument
added a DOTS _ ONLY flag and updated width calculation logic in BadgeRenderer . java , modified color handling in IconPalette . java ,
changed the method modifier of ` getConfiguration ` from ` final ` to ` public ` in ` FreemarkerManager . java ` to
add a test for handling invalid excluded package patterns in OgnlUtil to ensure that a ConfigurationException is thrown when attempting to set an excluded package
updated deviceUdid assignment logic to differentiate between mac and iphone platforms to improve accuracy of device identification based on the platform type
updated logging level from error to warn and modified exception handling in DefaultHttpClientFilter and TestDefaultHttpClientFilter to improve logging clarity and enhance error
added null checks for mScript and mInvokeResetWAR in AllAppsView . java to ensure proper initialization before binding the root script and executing
added a boolean flag ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally apply shadow effects based on
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database resources after tests
added a parser assignment in SecurityNamespaceHandler . java to retrieve the parser based on the specified name
added a new test method ` fastpath ` in ` BoundedLocalCacheTest ` and modified the conditional check in ` BoundedLocalCache `
updated ` RawConnection ` , ` RawConnection ` , ` WebSocketAsyncConnection ` , and ` FrameBytes ` classes to extend ` WebSocketConnection
added multiple test methods to verify the correctness of assertions in SoftAssertionsPerfTest . java to ensure that the ` all _ assertions `
added a new constant ` TEST _ FAILURES _ EXIT _ CODE ` and modified the ` execute ` method in ` PythonRunTestsStep `
added conditional logic to update xAdvances array based on markupEnabled flag to improve text wrapping behavior when markup is disabled
refactor score comparison logic in TestBooleanRewrites . java to use streams for better readability and maintainability to improve code clarity and
update enumClass assignment from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` to ensure the correct superclass is used for anonymous classes
simplified the flush method for PlayerSocketConnection across multiple classes to improve code readability and reduce unnecessary type checks
added a check to prevent multiple invocations of the OnDrawListener in the Launcher and LauncherAnimUtils classes to improve performance by avoiding
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added a check for non - APPLICABLE matchStatus to simplify import
changed the default value of the MEDIAPARSERV2 boolean from false to true to enable mediaparser functionality by default
added support for annotation processing for AROUND _ TYPE in BeanDefinitionInjectProcessor to ensure proper handling of AROUND _ TYPE annotations in the processing
added assertions and verification for the existence and existence of a table in FolderPermissionBase . java to ensure that the system correctly verifies permissions for the
make sure global status be publish even if the registration state change .
updated the random color generation logic in PastelColor . java to use a variable for the base color value to improve randomness generation accuracy
refactor ScriptEngineFactory to improve code organization to enhance maintainability and readability of the code
refactor HolographicViewHelper to use original and outline bitmaps for state transitions to improve code clarity and maintainability by encaps
updated request method handling in CloudClient . java to use HttpMethod . fromString ( ) for better null safety to improve robustness by avoiding potential
multigrampreprocessor now also infer the phrase from the parent tree when process the unigram
remove unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
added a check for HIVE _ PASSTHROUGH _ OF _ CLASSNAME and modified the class loading logic in mmm
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added validation to ensure ' start ' is non - negative and ' length ' is within bounds to prevent potential ArrayIndexOutOfBoundsException when ' start ' is
refactor conditional statements and update method calls in ClusteringCoefficient , EigenvectorCentrality , DiameterUI , and Hits
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate the behavior
camel - 16400 : camel - core - allow to load property from vault / secrets cloud service - key store .
replaced instances of ` Throwable ` with ` ThreadDeath ` catch blocks in ` LogResolverBean ` and ` ResourceResolverBean ` to
updated multiple Java files related to key management and certificate handling to improve consistency and maintainability of the codebase
updated JGit version from " 201106090707 - r " to " JGit 1.1 . 0 " and modified dependencies
refactor client key retrieval logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability of the code
int - 139 added transformerendpointparser and transformercontexttests , and added transformerendpointparser and testbean .
bugfix # 164589 , make sure we do n ' t see infinite loop in resume
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` , ` JavaSEPort ` , and `
updated usage formatting and improved command usage reporting in UtilityCommands . java and DocumentationPrinter . java to enhance code readability and provide clearer
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming
removed setter methods for sequence and unseq files in CrossSpaceCompactionResource and updated file size retrieval in RewriteCrossSpaceCompactionSelector to
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
do n ' t sync ruleset if it ' s change
fix thread safety issue in abstractsootfieldref
add support for ` ` name . tag ' ' and ` ` name . name . tag ' ' in elasticmeterregistry ( fixes #
added methods for listener management and command creation in IController and its implementation in TinyGController , and updated BackendAPI to use IController
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest ` to verify rendering of huge horizontal rules in the application
replaced System . out . println statements with TTY . println statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
updated multiple Java files for consistency in naming conventions to enhance code readability and maintainability
change condition from checking if frameLength is zero to checking if it is less than or equal to zero to ensure that frame length validation is valid
updated return statements in IntFloatMap . java and IntIntMap . java to store and return the value of zeroValue instead of zeroValue
refactor ImageDownloadService to use Display . getInstance ( ) . callSerially for setting UI elements to ensure thread safety when updating UI elements
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when handling demand
removed native ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , and ` HtmlNode ` classes , and
fixed - npe in redisdistributedmapcacheclientservice when there be no redis result
updated logging statements in MobFileCache . java to provide clearer insights into cache configuration status
rename ColConvCCMTest . java file to improve clarity and organization of test cases
refactor variable initialization and add new fields for allowCovariantReturns and syntheticNameChar to improve code clarity and maintainability by consolidating
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X
added a return statement to the GenericFileConsumer class to ensure proper termination of the method after processing
added an invocation of EventQueue . invokeLater in bug6638195 . java to ensure that tasks are executed on the Event Dispatch Thread
updated maxSize calculation to use getMaxBinaryMessageSize instead of getMaxTextMessageBufferSize to ensure accurate size calculation for improved performance
updated steeringValue calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to adjust steering
replace Arrays . equals with MessageDigest . isEqual for password comparison to enhance security by using a more robust equality check for encrypted passwords
refactor date and timestamp handling in JdbcSerDe to use LocalDate and LocalDateTime classes to improve code clarity and maintainability by using more appropriate
updated VERSION from 2 to 3 and modified metadata handling logic in ParseData . java to accommodate new versioning and improve metadata reading efficiency
make flyway auto - config conditional on jpa
added sorting functionality to ClassesImpl . java to improve the ordering of class instances for better performance
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code readability and maintainability
refactor memory and scope handling in TestCloseScope0 . java to improve compatibility with different Java versions to enhance robustness of resource management and
increased the timeout value for the server socket test from 500 to 5000 to allow more time for tests to complete successfully
rename CaptchaChannelProcessorTests . java file to improve clarity and consistency in naming conventions
added logic to update the owner collection if it does not change to ensure that the item ' s own collection is updated when changes are detected
added retry logic for saving properties in AbstractRegistry . java to prevent excessive retries during registry file save operations
updated variable name from mergeDirectory to directory in IndexWriter . java to improve clarity by using a more descriptive variable name
fixed bug in unusedimports - it no long report false positive for jdk 1.5
added validation to prevent insert overwrite queries on bucketed Iceberg tables to ensure data integrity by preventing operations on non - bucketed I
updated assertions in BootstrapTests to check for the presence of legacy SAML keys to ensure that the test accurately verifies the presence of legacy SAML keys
rename methods and variables from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` to clarify the purpose of the
do n ' t send an email when there be an unexpected e - mail address
remove waiting _ for _ line _ comment , waiting _ for _ block _ comment , and waiting _ to _ leave _ block _ comment
added IOException handling to lock release methods and created a new LockReleaseFailedException class to improve error management and provide clearer exception reporting for lock release
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align the
added a condition to check if the current node is not a unary operator before transformation in SpelExpressionTransformer . java to ensure transformation only occurs
updated ByteBuddy instantiation to disable TypeValidation to improve performance by disabling type validation during bytecode generation
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` and add a new ` Errone
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and adjusted timeout values in MySQL
refactor ` setSystemProperties ` method to remove the ` LogFile ` parameter and update its implementation to streamline the method signature and enhance
added a method to check if a redirect is successful and updated the request handling logic to improve error handling for HTTP redirects and ensure proper resource management
added new constants for service , version , and application mappings in ServiceCombConstants . java and modified MicroserviceFactory . java to utilize Environment
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX to be static and added DB _ PREFIX constant in BaseAndroidTestCase . java , modified database path regex ,
replace the return statement to retrieve unread count from HomeDataSource to ensure the correct unread count is returned based on the current account
renamed the test method from ` testVirtualThreadPool ( ) ` to ` testVirtualThreadPoolPreview ( ) ` and added a new test for
modified the ` getAllOrder ` method to include a ` limit ` parameter and added logic to limit the number of orders processed to a maximum of
updated User handling in HomePage . java to check for null users before retrieving user settings to improve robustness by avoiding null pointer exceptions
fix localfilesystem . match ( ) to return absolute path for wildcard file .
added maximum width and height limits for rectangle creation in ComponentBuilders . java to ensure that the component dimensions do not exceed defined limits and prevent rendering
added logging functionality and a deprecated method for setting connection manager timeout in CommonsHttpSolrServer . java to enhance debugging capabilities and provide a clear
removed ExceptionHandler import and error handling for document creation failure to streamline error reporting and improve code clarity
refactor file handling in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code clarity and ensure
added checks for empty words and number characters in SpellChecker . java and created a corresponding test case in SpellCheckerTest . java to
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and consistency
refactor file action handling in FileDisplayActivity to improve code organization and clarity to enhance readability and maintainability of the file display logic
hbase - 26462 replicationhandler should not try to shut down the puller in daemon mode ( # 439 )
simplified the update method call in StoreCachedTest . java to improve code readability and maintain consistency
renamed the parameter from ' materials ' to ' theMaterials ' in the StreamerLoader constructor and added a check to remove specific file
added " Core Library for LibGDX " , " 3D Collision Detection and Rigid Body Dynamics " , and associated
added maximum recycled views for various item types in AppsContainerRecyclerView to improve performance by limiting the number of recycled
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure the build process works
update barit control to not allow a valid waypoint .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by utilizing Liquib
added null handling support for BitmapBasedFilterOperator in FilterOperatorUtils and new test cases in FilterOperatorTest to enhance filtering functionality and ensure correct
added validation for bootstrap method argument types in JDynamicInvokeExpr . java to ensure that the bootstrap method ' s argument types match expected types for
fix the unit test error of camel - jms
removed the clearing of the formatters in CucumberInstrumentation to streamline configuration management for improved performance
changed the type of ` contacts ` and ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and refactored
added a check to adjust workspace label visibility based on cell size and padding to ensure workspace labels are only shown when necessary
updated assertions in ReplicationFactorTest to use assertRf instead of assertTrue for improved clarity to enhance readability and maintainability of
sulong : add support for lazy context pre - initialization in llvm
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable tests
replace RuntimeException with JsonIOException in Gson . java to provide a more specific exception type for better error handling
replaced Integer . valueOf with Integer . parseInt for value assignment to improve clarity and consistency in parsing integer values
updated error messages for clarity and changed file tree walking parameters to Integer . MAX _ VALUE to improve error reporting and ensure all attributes are
refactor segment name checks to use a new method ` isHighLevelConsumerSegmentName ` and ` isLowLevelConsumerSegmentName ` to
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to enhance
replace DateTime . now ( ) with DateTime ( clockReader . getCurrentTime ( ) ) in DueDateBusinessCalendar . java to ensure accurate
updated return statement to include " - target " and " x86 _ 64 - none - linux - android " in TargetCpuType . java
added a ` deleteAllFiles ` method to ` FileDataStorageManager ` and implemented file deletion in ` ManageAccountsActivity ` to facilit
updated command line options in SchemaCrawlerCommandLine to use ' - h ' instead of ' - ? ' for improved readability to enhance us
added a factory method to create a suite description and modified the equals method to use a unique identifier to enhance the functionality of the Description class by
replaced the ` decode ` method with a direct call to ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the code
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor by eliminating unnecessary dependencies
added unit tests for ` GWCZoomContextFinder ` to validate range calculations to ensure that the grid context finder correctly handles edge cases with
added dependency tracking configuration and a method to enable it to enhance dependency tracking functionality in the JRubyScriptEngineConfiguration
changed the request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
do n ' t attempt to create a new keyspace if they already exist . patch by jbellis
add caching to welcomewindow for good performance
updated tuner configuration handling and error logging in multiple classes to improve clarity and ensure proper resource management during tuner resubmission
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test method in ShBinaryRuleIntegrationTest to enable testing of sh binary
added a conditional statement to set the includeString variable to " db : hsqldb " when certain conditions are met
corrected spacing in the if statement in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do not attempt to materialize host exception if there be no stack trace
export jvmci to a provider if java 8 or later
added duplicatecommandhandlerresolver test to aggregateannotationcommandhandlertest
[ flink - 20865 ] [ runtime ] add fine - grained - mode . all - blocking option for batch job
fix fish hook not use block . getstate instead of block . getstate ( ) .
camel - 14263 : create an aws - sftp component base on sdk v2 , fix description
rename ` getCommandRunner ( ) ` to ` getStepRunner ( ) ` across multiple files to improve clarity and consistency in naming conventions
changed the variable and method parameter names from ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` to
added a check for empty items in AppsContainerRecyclerView to prevent unnecessary processing when no items are available
added a conditional annotation to check for the presence of the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration to ensure
replaced StringBuffer with StringBuilder and added properties property management in XMLLayout . java to improve performance and enable better management of XML properties
added a new constant ` OMIT _ HEADER ` and implemented the ` remove ` method in ` NamedList ` , ` BinaryResponseWriter `
updated the method to return the property name from ` _ id ` to ` getPropertyNumber ( ) ` in ` EscherProperty . java `
replaced direct reference to ` Description . getBuildRuleType ` with a static reference to ` Description . getBuildRuleType ` to improve code cl
add a call to modifyhierarchy ( ) in sootclass . gethierarchy ( ) .
[ deposit ] fix npe in tradedatavalidation . validatedisputetrades ( )
added a method ` getObjectHash ( ) ` to ` AbstractNamedObject ` and modified ` DatabaseSchemaCrawler ` and ` TableRetriever ` to
wallet : set broadcast tx confidence type to not _ seed _ in _ chain .
refactor argument extraction logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability of the code
fix craftinghelper . processconditions to work correctly with custom crafting model
hbase - 26462 hregion # close should log exception when close region fails
updated null checks and array comparison logic in Credential . java to improve readability and maintainability of the code
[ java ] add comment to clarify when a subscription have an image .
replaced the ` destroy ( ) ` method with direct calls to ` process . destroyForcibly ( ) ` and ` waitFor ( )
added Oracle support to the condition in TestDefaults . java to ensure compatibility with Oracle database configurations
fix for http : / / issues . apache . org / activemq / browse / camel - 119 . thanks to jo
added token consumption checks in the parser to ensure all tokens are consumed to prevent errors during query processing
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` korean ' '
added a method to retrieve the data file name from the Model class and modified model initialization logic in Voice . java to improve code clarity and
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of email domain for identity providers
added new configuration constants for request read and connection timeouts in ` Configuration . java ` and updated ` ViewRegistry . java ` to use these timeouts
make sure we do n ' t call processdeferredConcepts ( ) if we do n ' t have any concept
added RedisCategory import and category annotation to RedisServiceRegistryTests to categorize tests as Redis for better management and categorization
updated the ` FindDeprecatedUses ` test to use parameterized tests and modified the constructor to accept a ` typePattern ` parameter to improve test coverage
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` and modified ` mImageHeight
removed unused imports from multiple classes to clean up the code and improve readability
updated ` ContractEventTriggerCapsule ` to use ` getEventSignatureFull ( ) ` and added a new method ` getEventSignatureFull ( )
updated file filtering logic to check for file names ending with a specific session ID to improve accuracy of session identification by allowing multiple session IDs
replaced the ` clearRect ` method with ` fillRect ` and updated the color setting in ` MapView . java ` to improve rendering
[ drools - 725 ] avoid to compile the rule of the same package multiple time
removed unnecessary print statements from multiple Java files to clean up the code and improve readability
added a conditional check for NaN values before asserting document values in TestFieldCacheSort . java to ensure that score values are only considered when
replaced direct assignment of oldKeys with a Set . copyOf method to ensure immutability of the returned keys
added zeroTime method to handle zero and zero time values in ColumnSnapshotGenerator . java and created a corresponding test in MySQLIntegrationTest . java
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
updated the type of ` vsContext ` from ` Map ` to ` Map < ? , ? > ` across multiple collector classes to enhance type
[ drools - 5331 ] fix kiesessionmodel . getclocktype ( ) return null when edit a kiesession (
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to improve code clarity and ensure proper
added a conditional check to return early if the modalness changes to optimize performance by avoiding unnecessary processing
added a test for CodecCapabilities to validate profile level creation to ensure correct codec capabilities are created based on the provided profile level
added requestFocus ( ) to confirmButton in EditOfferView . java to fix focus issue when enter key is used
added validation for width and height in SunVolatileImage . java , improved error handling in XRSurfaceDataProxy . java , and
updated thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting of
replaced integer arrays with AtomicInteger for thread management in AsyncStressTest and StressTest to improve thread safety and reduce potential race conditions during
added beta flavor handling in AchievementsFragment and LeaderboardFragment to manage UI visibility based on beta state to improve user experience by providing
added access , name , and description fields to SearchMethodVisitor to initialize context attributes for better context management
added sleep calls and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve synchronization and ensure proper exception management during execution
reformatted the resumeStop ( ) method call in DLNAResource . java to improve code readability and maintainability
camel - 16400 : add stream - config and batch - resequencer to xml xsd so they wo n ' t be
refactor transaction management by introducing ` acquireTxn ( ) ` and ` getTransientRowCount ( ) ` methods to improve code clarity and
refactor key manager algorithm retrieval and trust manager type handling in ThriftSource and ThriftRpcClient to improve flexibility by allowing dynamic configuration of the
refactor ` getSingleSourceApplicableTest ` to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code readability and le
fix tab not be click when click on it in the middle of a blockmania .
replaced instances of ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to align the code with the
renamed the method ` unHandled ` to ` unhandled ` and updated error logging for better clarity to improve method naming consistency and enhance error
updated stripes and stripeStats assignments in OrcInputFormat . java to ensure correct retrieval of stripe statistics from orcReader and orc
added a null check for the exception variable in JCache . java to prevent potential NullPointerException during execution
change myhentaicomics ripper to use http instead of http
added functionality to display the current version of the application to provide users with information about the version of the application
change split ( ) to splittokens ( ) for export list
added keyboard configuration checks and input connection functionalities in ConsoleActivity and TerminalView to enhance user experience by allowing dynamic rotation based on keyboard settings
changed the type of the hq variable from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` and
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 16400 : camel - jbang - expose the headermapfactory class name to jmx .
updated string formatting in JavaCompiler . java and Diagnostic . java to improve code readability and consistency
int - 1212 jmsoutboundgateway now implement initializingbean , and add a jmsoutboundgatewayparser to make it easy to configure
updated the index parameter in the array function check from ` i + 1 ` to ` i2 ` to correct the expected value in the assertion
updated script engine initialization logic and improved error logging in AbstractScriptProcessor . java and InvokeScriptedProcessor . java to enhance robustness and
added ` org . postgresql . PGStatement ` to the proxy instances in ` PooledConnectionImpl . java ` and created a test for
[ grid ] refresh size estimate after each test run
changed the logging level from error to warn in the AtomicRemainder class to provide a more appropriate warning for insufficient memory usage
do n ' t sort candidate in ttl expiration check . patch by jbellis ; review by brandonwilliams for cassandra -
fixed - rqueue . polllast , rblockingdeque and rblockingqueue . polllast should n ' t be execute with negative timeout
removed string formatting from printMap calls in JobInspectCommand . java to simplify output formatting for better readability
updated mmm Engine . java and ppp Engine . java files to improve code organization and maintainability
replaced Stream . of with entrySet ( ) for sorting children entries to improve performance and readability of the code
[ rip - 10 ] use the new aclclientrpchook instead of the deprecated aclrpchook class
changed the condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling
[ zeppelin - 1343 ] fix npe in notebookserver when interpretergroup be null
updated the argument in the addListElement method from ' funN ' to ' lt ' to correctly reflect the intended functionality of the expression node
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java
server : improve error message for snapshot creation when volume be attach to a vm .
remove the ` public ` modifier from the ` write ` , ` flush ` , and ` clear ` methods in ` ItemWriter . java `
updated the mock Thing object in RoombaHandlerTest from an empty string to a test identifier to ensure that the mocking of the thing is
implement ` toString ( ) ` method in ` ImageNameSubstitutor ` and add a test for it in ` ImageNameSubstitutor
replace FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient directory implementation
added a line height constant and modified the calculation of lineHeight in Utils . java to ensure line height does not exceed the buffer ' s height
updated WalletAppKit . java for improved functionality to enhance performance and maintainability of wallet operations
workaround for nashorn engine bug in profiler
remove the chat transport menu item from the button group when the user click on it .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
rpc : fix npe when use bsqblockchainexplorer
added attribute management methods to StandardSession and Session classes to enhance session management capabilities by allowing retrieval and removal of attributes
added assertions to verify the presence and absence of plain and longs in the database to ensure correct retrieval of plain data from the database
updated the initialization of averages array from pageSize to initialPageCount to ensure accurate memory allocation based on the initial page count
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and facilitate future feature additions
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication to enable database management and transaction management in the application
changed the implementation of the GlowrootLogHttpService class from UnauthenticatedHttpService to HttpService to standardize the service interface for impro
pdfbox - 4892 : add stroke java compositing to the draw method , a suggest by valerybokov
removed unnecessary synchronized method ` notifyAll ( ) ` in ` DocumentsWriter ` and modified ` deleter ` visibility in ` DocumentsWriter
added methods to retrieve multiple choice options and validation constraints in UiBinding to enhance the UI component ' s capability to manage multiple choice options and validation
updated method calls to use ` toString ( ) ` instead of direct reference to ` dexStore ` and ` dexSplitStrategy ` to
do n ' t update the stored copy of the tree when save the whole tree .
hunspell : fix testalldictionaries . testalldictionaries . testalldictionaries . testalldictionaries
simplified the instantiation of ` krakenMakerFees ` and ` krakenTakerFees ` to use the di
removed unused CharTermAttribute import from DefaultIndexingChain . java to clean up unused code and improve maintainability
refactor NBJavacTrees . java for improved code organization to enhance maintainability and readability of the code
removed unsupported encoding check from VectorizedPrimitiveColumnReader to simplify error handling for unsupported data encoding
updated logging logic in HttpSolrCall . java to use SLF4J MarkerFactory for improved logging consistency to enhance readability and maintain
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener to ensure proper cleanup of metadata service proxy instances
fix infinite recursion bug in defaultentityqueryrepository . getmaxlevel ( )
updated message construction in HubChangeExecListener to include a check for the existence of the changelog to provide clearer feedback when a changelog is not
try harder to make unit test more resilient to bad input .
modified the ` executeCompilation ` method to return a ` ProcessExecutor . Result ` instead of an integer to improve clarity in handling compilation results
updated the calculation of maxEvents and modified the range setting logic in ObjectStore . java to improve clarity and correctness of event handling logic
simplified the support check for @ ConfigurationProperties annotations in ValidatedLocalValidatorFactoryBean to improve code readability and reduce redundancy
fix concurrentmodificationexception in entityawareworldprovider . cleanup ( )
remove redundant check for exact type in copy phase .
no need to set log level to all for this test to reduce log noise .
updated exception messages in Reporter . java and removed the WantedAnywhereAfterFollowingInteraction class in HasStackTrace . java to improve cl
added checks for existence of owner and key accounts in AccountPermissionUpdateActuator and modified key validation logic in PermissionAddKeyActuator to ensure
improve scriptlauncher performance by use a treemap instead of a comparator
fix : fix ruby namespace for the new v2beta and v2beta attribute
replaced occurrences of ` addProperty ` with ` setProperty ` in ` BaseSingleTreeBuilder . java ` to improve clarity and consistency in property management
updated the constructor of AsmLoader to accept a ClassLoader parameter to improve flexibility by allowing the AsmLoader to load classes dynamically based on
pdfbox - 4892 : avoid npe , a suggest by valerybokov
modified the declaration declaration logic in Java2TypeScriptTranslator to accommodate different types of declarations in the Java to TypeScript translation process
replaced ` EmptyServerHandler ` with ` AbstractHandler ` in ` HttpClientTest . java ` to enable the handling of HTTP requests by copying
simplified the listener calls for action and analog in HelloInput . java to improve code readability and reduce unnecessary array creation
added a new variable ` lhs ` to ` AbstractSqmPath ` to handle the case when ` getLhs ( ) ` is null to
refactor package structure in ReadFolderTest and RenameFileTest classes to improve organization and clarity of test classes
refactor image handling in AwtCanvas . java to support different image types for grayscale and grayscale operations to improve code clarity and
move graal startup to a separate method to improve code readability and maintainability
[ beam - 8470 ] remove dataflow portability api unsupported test from pardo test
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 113 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log warn if max size config do not allow any data in map
updated messages from " AST " to " LST " across multiple files to clarify terminology from " AST " to " LST
refactor scoreable handling in ThreadedAcousticScorer . java for improved readability and performance to enhance code clarity
replaced AssertionError with a null return in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls to use ` window ( ) . title ( ) ` instead of ` getServerAddress ( ) ` and ` goTo ( )
added ` makeString ` methods to ` ParallelIterable ` , ` RichIterable ` , and ` AbstractSynchronizedRichIterable ` classes to
updated the order setting in OidcServicesManagerRegisteredServiceLocator to use a constant DEFAULT _ ORDER to improve code clarity and maintainability by
added a ` weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated its validation logic to enhance the ` WeakAssociationsAnalyzer
modified the Deflater class implementation to improve compression efficiency and performance
added error handling to throw an IOException in Font . java to improve robustness by handling potential exceptions during font operations
added a null and empty check for the content in VersionTypeBinding . java to prevent potential NullPointerExceptions when processing empty or null values
refactor NearbyListFragment to directly return the list of places instead of storing it in a local variable to improve code readability and
camel - 16400 : camel - mail should use case sensitive content - type header .
added support for ssh - dss and ssh - rsa ( relate to github # 103 )
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding and improved folder name suggestion handling to enhance flex
updated Hibernate annotations in InheritanceCacheTest . java to utilize wildcard imports and modified entity retrieval logic to improve code readability and ensure
updated import statements in ConnectOAuth2RequestFactory . java and added a method to retrieve user approval requests in TofuUserApprovalHandler .
fix name convention not apply to tag value ( # 645 )
more quickfix test , do n ' t use system . out . println for debug
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to ensure compatibility with the new cookie configuration
added a static method ` setClassClassMetadataUnsupported ( ) ` to the Platform class and updated references in ` Subject ` to use this method to improve
added functionality to clear all tasks in OverviewActionsView to improve user experience by allowing users to clear all tasks easily
updated ` desiredRepoVersion ` to be ` final ` and modified timeout duration in ` ClusterStackVersionResourceProvider ` and ` HostStackVersion
remove memoryleaktest since it be not use by hazelcast
updated the return statement in ServletTester . java to include the local host address when the server is not available to improve clarity of the
added a check for MVDWAPI in the ServerListener and modified the Settings class to include a new configuration option to enable MVDW
fix flakiness of abstractpartitionassignmentcorrectnesstest
implemented a singleton instance of FFIProvider to ensure FFIProvider can be instantiated dynamically based on JNA support
tika - 3892 -- add test case for hierarchical file list in xml processing
added null checks for objectToSave and collectionName in MongoTemplate . java and implemented tests for saving maps and primitive objects in MongoTemplateTests .
replace ` 0 ` with ` NODE _ LIST ` in ` NodeClass . java ` to improve clarity by using a more descriptive constant
added an ` accTradeValue ` field and its getter method in ` BithumbTicker ` , updated ` BithumbTradeServiceRaw
updated log messages in RealtimeSegmentDataManager to include segment names and improved logging format to enhance logging clarity and provide more context for
replaced hardcoded ` maxParallelThreads ` with a constant ` MAX _ PARALLEL _ TASKS ` in ` Overseer
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMVMutableForwardIndex . java and FixedByteSVM
rename dictionary - related classes for consistency in naming conventions to improve code readability and maintainability
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException during processing
( chore ) camel - msv : fix test which randomly fail on slow box
updated condition from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` in ` DelegationService . java ` to
increased the number of generated values from 6 to 10 in JdbcExpiringCodeStore . java and updated the assertion in CodeStoreEndpoints
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure correct table matching for unique constraints
updated the handling of language codes and descriptions in MediaDetailFragment . java to improve clarity and functionality of language code management
handle arrayindexoutofboundsexception and classcastexception in findbugs2
added methods withReferenceFilter and withFilter to ListImagesCmd and ListImagesCmdImpl classes to enhance filtering capabilities for image queries
camel - 16400 : camel - jms - allow to configure bridge error handler on jms endpoint
added error handling for empty or missing ` opsToExclude ` in ` OpExclusionUtils . java ` to improve robustness by ensuring all
added return statements to DatabaseCommand . java to ensure the method returns false for correct functionality
added new politician instances for " President of Umpa Lumpa " , " Bush " , " Tsar
[ zeppelin - 5271 ] fix check for non - blank initfile
camel - 14850 : camel - restlet should use getport ( ) instead of set port to 0 .
added a new import statement for CuboidClipboard , ChestBlock , FurnaceBlock , and MobSpawnerBlock
added a system property to set the maximum query length to " 100Mb " in QTestUtil . java to limit the maximum number of
changed visibility of userName and securityMgr from public to private in WebServer . java and refactored HttpConfiguration instantiation in WebServer . java
replaced instances of " writeHdfs " and " readKafka " with " hdfsSink " and " kafkaSource " across multiple files
modified the result assignment logic in HiveConf . java and updated appName handling in HiveSparkClientFactory . java to ensure the correct application name
updated variable names from ' whiteName ' to ' includedName ' in ManagedClassFactory . java to improve clarity and consistency in variable naming
replaced window . restore ( ) with window . setSize ( ) in WindowTest . java and introduced MaximiseWindow class in DriverServlet
updated methods in ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , ` DefaultProjectFilesystemFactory ` , and
updated assertion in TestXMLEntityExpansion . java to check for the presence of " entity expansions " in the error message to
modify table offset and length assignments to mask values with 0x7FFFFFFF to ensure proper handling of non - integer values for table offsets and
added a customization method to DirectMethodHandle that checks if the form ' s customized is null to ensure that the form ' s customized state
refactor line buffer initialization and coordinate checks in LineChartRenderer . java to improve readability and maintainability of the code
refactor flavor checking logic in AndroidBinaryDescription . java to improve clarity and error handling for unrecognized flavors
updated buffer assignment from offset to index in Lwjgl11 . java to improve clarity and correctness in buffer management
added new files ` Property . java ` , ` PropertySuper . java ` , and ` TestClassResolutionFail . java ` to implement a
only terminate the node if shutdownhookenabled be true
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and removed the ` url ` parameter from the ` VirtualFilterChain
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( intermediateResult . elements ( ) ) ` and modified return
added checks to ensure the schema is loaded before loading it in MetaDataBasedSQLCompletionProvider and modified the way MDTable is instantiated in QueryType
initialize baseType to null and add literalPrefix , literalSuffix , and localizedTypeName to MutableColumnDataType to ensure proper handling of column data types
updated JavaDoc comments to use { @ link } syntax for consistency to enhance code readability and maintainability by standardizing link references
[ hotfix ] [ table - common ] make evaluatorfactory final static
updated references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " and " -- target - platforms
added sound effect handling in AllAppsView . java to improve user experience by enabling and disabling sound effects
changed the exception type from ` Exception ` to ` IOException ` in the ` main ` method signature to improve clarity and specificity of the
added granularity feature to the left axis in BarChartActivitySinus to improve chart display accuracy for better data visualization
refactor version comparison logic into a separate method to improve code readability and maintainability
updated file path handling and added OS alias support checks in ContextHandlerGetResourceTest . java to improve test reliability and ensure compatibility with supported
added a close ( ) method to the Connection class and implemented it in the JsonAsyncHttpPinotClientTransport class to ensure proper resource management
improve mockappender and socketremotetest by use a blockingqueue instead of a thread - safe wait
[ beam - 4142 ] improve error message for directory mismatch
removed unused import statements from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
remove duplicate unbindhandle call in itemserviceimpl . onunbind ( ) .
refactor Config and Attribute classes for improved consistency to enhance code maintainability and readability
simplified the condition for handling touch events in OtherActivityTouchConsumer . java to improve code readability and maintainability by removing unnecessary checks
replaced theme - related code with a configuration - based approach for setting button tinting to improve flexibility in theme management based on the
change abort statement to throw in PolyBenchLauncher . java to improve error handling by explicitly indicating the failure to determine the language
replaced short variables for bootstrapMethodIndex and nameAndTypeIndex with byte refKind and memberIndex to improve type safety and clarity in
added BlockFormattingContext parameter to findBox and findElementBox methods to enhance flexibility in determining element boxes based on block formatting context
added a method to retrieve standard error output and adjusted the initialization of launchedProcess to improve error handling and provide better diagnostics during job execution
added null check and error handling for UnaryOperator in CheckedListReplaceAll . java to improve robustness by ensuring operator is not null and provide
added conditional handling for client write operations in SslConnectionTest . java to improve testing reliability during connection establishment
added listener management for device configuration changes in DeviceFlag . java and modified access level of mCurrentValue in FeatureFlags . java to enhance listener functionality
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to known issue
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve maintainability
[ fix # 7231 ] instructorfeedbackeditpage : make sure to focus after edit ( # 7238 )
removed unnecessary synchronized blocks in KrakenStreamingTradeService . java to improve code readability and maintainability
change system . err to system . out for ignore class - path entry
added support for random access in the SparseRowMatrix constructor and refactored related methods to improve flexibility in handling different vector types and enhance
server : fix npe in delete volume usage event when volume pool id be null
updated the handling of the HIVE _ PLAN configuration to differentiate between local and local environments to improve flexibility in path management for different
use vendored guava . v26 _ 0 _ jre . com instead of com . google . common . collect . map
reset internal state when a memory call graph be complete .
fix npe in conferencechatmanager when send message to remote server .
added file write validation to ensure the file is writable before proceeding to prevent application crashes due to file access issues
added FolderSyncActivity to manage folder synchronization to enhance user experience by providing a direct navigation option for folder synchronization
[ hotfix ] [ test ] fix memory leak in sequentialchannelstateserviceimpltest
fix a bug in spanishtreenormalizer that lead to wrong spanish tokenization
replaced the method of obtaining point values from ` reader . pointValue ( ) ` to ` getPackedValueSlice ( i ) `
added LocaleRandomizer and its corresponding test class for generating random locale values to enhance random locale selection functionality in the application
tika - 2352 -- add mime type detection for font printer metric and font type 1
bugfix # 20519 , add 10.0 a default value for installer and autoupgrade
refactor code to remove unnecessary ` AccessController . doPrivileged ` wrapping around the ` run0 ( ) ` call to improve code readability and maintain
fix issue with http / 2 read timeout be n ' t set correctly .
increased the initial delay from 120 to 600 milliseconds in the TimelineMetricConfiguration to improve the responsiveness of the application by allowing
updated error message to include the name of the previous column to provide clearer context about the constraint violation for primary key constraints
added date formatting support for field values in ThirdEyeJiraClient to enhance date handling capabilities for better data processing
updated the ` HeadersGenerator ` and ` PriorityGenerator ` classes to use a new ` generatePriority ` method for generating priority frames to improve code
increased the maximum size of scalarReplace from 2MB to 2MB and added a check for the entireClass length to ensure that scalar
added DATE _ TAKEN to the projectionTest array and modified folderSortOrder and fileSortOrder assignments to include DATE _ TAKEN in the
modify drawing operations in TexturePacker2 . java to adjust rectangle dimensions to ensure correct image dimensions are used for packing images
updated JettyWebSocketServerContainer and JettyWebSocketFilterTest to use a more direct ServletContextHandler to improve code clarity and maintainability by
added shutdown calls for validateSignService and trxHandlePool in Manager and TransactionsMsgHandler classes , and reordered the Timer initialization in Node
added RawJsonRequestBodyAnnotationProcessor and its implementation in JaxrsSwaggerGeneratorContext and Echo classes to enable the processing of raw JSON requests in
added a new method ` newTarget ` in ` LoggerUtils ` for creating a ` Target ` instance to facilitate the creation of
updated the return statement in BeanContainer to use an ArrayList and added a new test class BeanContainerTests to improve list handling and enhance unit testing
fix typo in metric name ( blockcounthitpercent )
camel - 16400 : fixed leak in cachedoutputstream when exchange be complete .
added device ID setting to the position in TeltonikaProtocolDecoder to ensure accurate tracking of device information during communication
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) . readFirstLine ( ) ` for
added a check to initialize the operator if it is null in Attr . java and created a new Test class in FailOver15 . java to
added a boolean flag ` enableAccountHandling ` to control the behavior of account handling in ` BaseActivity ` to allow flexibility in account creation
improve detection of first contact in isochrone ( fixes # 364 )
refactor DrillViewTable to accept a path parameter and update its constructor to accept it to enhance flexibility in handling view paths during view
[ java ] add io . netty . allocator . maxorder , io . netty . allocator . maxsize , io . netty
modified the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java for object serialization testing to ensure
added LLAP _ IO _ THREADPOOL _ SIZE configuration to HiveConf . java and updated thread pool size in LlapIoImpl .
[ gr - 38686 ] re - initialize ssldebug and ssllogger for jdk 11 + .
updated boundary checks for latitude and longitude range in LatLonGrid . java and added a new test method in TestLatLonGrid . java to
simonstewart : add ` ` invisibilityofelementwithtext ' ' and ` ` refresh ' ' method to expect condition
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its logic to handle ` isInsertOverwrite ` to
added a new test method ` getOuterClass ` to ` ReflectorTest ` to verify the behavior of the ` getEnclosingObject ` method
added " auto _ generate _ android _ facet _ sources " configuration and updated its value from " disable _ r _ java _ idea _ generator
refactor message handling in HubChangeExecListener to use dynamic messages instead of hardcoded strings to improve clarity and maintainability of log messages
added properties field and getter / setter methods to the Link class and created a test for overriding properties in QuickLinksConfigurationModuleTest to enhance the
refactor ` InitialConfig ` and ` YamlConfigFileDTO ` classes to remove unnecessary annotations and implement a custom ` toString ( ) ` method to
updated generic type parameters in ` AwaitableServerClientCallConfiguration ` and ` SimpleForwardingClientCallListener ` constructors to improve type safety and
added CallerSensitiveAdapter annotation and refactored forName methods in mmm Class . java and ppp Class . java to improve clarity and
refactor RequestItemRepositoryIT to use HasString . emptyOrNullString instead of Matchers . isEmptyOrNullString for improved readability to
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` and replaced ` LinkedBlockingQueue ` with ` LinkedBlockingQueueEx ` to enhance
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated imports and refactored methods in TimeStepdefs . java to utilize the JChronic library for improved date handling to enhance
fix sis and recessive banners not be craftable with spark .
updated method signatures to use ` getUri ( ) ` instead of ` ExchangeSpecification ` for proxy creation to improve clarity and consistency in URI handling
removed multiple redundant print statements in RecordGenerator . java to streamline output for better readability and performance
camel - kafka : allow auto commit to be enable / disable by default
removed lock release in Liquibase and updated outputStatement in LoggingExecutor , in StandardLockService , and set hasDatabaseChangeLogLock
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code clarity and
replaced synchronized blocks with synchronized blocks in Database and SessionRemote classes to improve performance by reducing unnecessary synchronization overhead
( chore ) camel - spring - boot - auto - configuration - maven - plugin : remove dependency on mavenproject
updated the argument passed to ` adaptTicker ` from ` baseSymbol ` to ` counterSymbol ` to ensure the correct ticker symbol is used for
( chore ) camel - base - engine : fix checkstyle violation
update the testId field to use the system ' s property instead of a random UUID to ensure the testId is dynamically generated from the system
added synchronized blocks around date parsing and formatting in DefaultJobParametersConverter . java to ensure thread safety when accessing shared resources
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated height scale from 256 to heightScale in FractalHeightMapGrid . java to improve flexibility by allowing dynamic scaling of the height
updated assertion from ` assertEquals ` to ` assertNotSame ` in ` SecurityConfigTests ` to ensure that ` securityString1 ` is
set default value of dump - partition - id to false in stdout sink
added a test setup for TronTXOutput and TronTXOutputs in UTXOSetTest . java to enhance test coverage for UT
[ java ] unusedassignment / local variable no longer ignore name
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the jobRestartProperties assignment logic in JsrJobOperator . java and added a new test case in JsrJobOperatorTests . java
added a boolean field ` disallowBatchOnCascade ` to the DatabasePlatform class with a getter method to enable control over the behavior of batch
refactor principal creation logic in JaasAuthenticationHandler to improve clarity and maintainability of principal handling
refactor core closing logic to use an ExecutorService for thread - safe execution to improve performance by avoiding blocking operations on the main thread
added null check and visibility control for mActionsView in RecentsView . java to ensure actionsView is visible based on fullscreen progress
refactor parameter handling in RunIdIncrementer to use a ternary operator for clarity to improve code readability and maintainability
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
added assertions to verify the correct number of matched devices in SchemaRegionTestUtil to ensure that the test accurately verifies the expected results of device
[ 3.0 ] add tryinvoke ( ) to handle metric event error ( # 9096 )
added a conditional check for ` max ` before calculating ` mSumChange ` and introduced ` EigenvectorCentralityBuilder ` to
updated registry lookup to use a dynamic port instead of a hardcoded value to improve flexibility and avoid hardcoding the registry port
updated GeometryGenerator to include product identification and improved buffer creation methods to enhance the functionality and maintainability of geometry handling in the application
modified the amplifier setting logic in BlockEntityBeacon . java to reset the amplifier value to 0 instead of 2 to ensure
refactor TubeCalc class implementation to improve code readability and maintainability
changed the enabled flag from true to false in HttpClientConfiguration . java and refactored lambda expressions in ServiceHttpClientFactory . java to simplify the
validate group class before use them in defaultvalidator
updated bug annotations and added a timeout for JList selection in the Nimbus L & F to improve test clarity and ensure proper timing
fix # 322 : make thread daemon to allow speedment application to exit
fix lexica botania ' s botania ' s botania ' s botania ' s botania ' s
added reflection access check in the JavaAdapterFactory class to enhance security by ensuring proper access control
try to fix the unit test error of camel - mina
updated the initIOContext method to include RecordReader as a parameter across multiple classes to enhance functionality by allowing the initialization of IO context for better
deleted ClassLoaderHolder . java and LoaderManager . java files and modified VerticleManager . java to call getCurrentClassLoader ( ) directly to streamline
added a static method ` configurationChanged ` to ` FileStore ` and modified file handling logic in ` JavaLanguageServer ` to improve configuration management
added try - catch blocks around session callback registration and unregistration to improve error handling by catching potential exceptions during session callback registration and unregistration
updated index creation methods to remove unnecessary package path for " index . cfs " and " index . nocfs " to simplify code and improve
[ hotfix ] refactor akkarpcserviceutils # createandstart to accept a constructor
added a retry check to set the maximum number of attempts in the mapreduce configuration to ensure that the application does not exceed the maximum allowed attempts
pdfbox - 2576 : disable symbolic mode for font - specific font embedder , a suggest by valerybokov
added a new test class SslConnectionTest to verify SSL connection behavior to ensure proper handling of SSL connections with client mode disabled
added validation for IPv4 and IPv6 address family in InetAddress and NetworkInterface classes to ensure only valid address types are accepted to improve error handling and
added a test method for serializing a list of dates in DefaultTypeAdaptersTest . java to ensure that date - time serialization works correctly for
refactor Message class to improve message handling to enhance performance and maintainability of message processing
nifi - 1553 : fix bug in putdatabaserecord where first _ update _ key be not set
update loop condition from ` runningWidth + runningWidth ` to ` maxWidth - runningWidth ` in ` TableOutput . java ` to correct the
pdfbox - 4071 : avoid potential classcastexception , remove unneeded null check
updated priority of format string in FormatStringChecker to ensure correct handling of format strings with varying priority
[ java ] add property to ignore non - final loop variable in for - each
updated PDFExporter to set PDF version to 1.5 and modified PDFExporterTest to use Java . gexf instead of Les M
added unit tests for LdapUserDetailsMapper to validate role attribute mapping to ensure correct handling of non - retrieved and non - string role attributes
cloudstack - 7249 : make ldap connection timeout configurable
refactor TestDescription class to improve code organization to enhance maintainability and readability of the test code
updated Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the variable related to avoid
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture state when the handler is invalidated
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex values for folder creation and max distance calculations to improve folder creation stability and
updated OciConfigConfigSource to use ConfigProviderResolver and modified property check logic to improve configuration handling and enhance flexibility in property resolution
refactor Testjsig class to improve code readability and maintainability
fix mana tablet , mana ring and terra picking mana in creative , fix mana tablet and terra picking
regenerate client with updated copyright year ( # 4382 )
removed the serialVersionUID field and added a @ SuppressWarnings annotation in P11TlsPrfGenerator . java to suppress serialization warnings and improve code clarity
refactor tsFile validation logic in DataRegion . java to improve clarity and ensure proper handling of empty and invalid TsFile resources
added new files Switch21 . java and Switch19 . java with new switch pattern matching and null handling methods to demonstrate the use
updated error messages in ComparableSubjectTest . java for clarity to improve user understanding of conversion errors for String and RawComparableType conversions
updated StreamHelper to set XML standalone flag and added a new test class for XML processing to enhance XML processing capabilities and ensure compatibility with standalone XML
updated size validation and improved exception message formatting in Int2ObjectCache . java , and added equals method in Map . java to enhance cl
swapped the order of security filter chains and customizers in WebSecurityConfiguration and added a new test for it to ensure that security filter chains
removed ` TimeInForce . GTC ` from the parameter list of ` OrderType . MARKET ` in ` BinanceTradeService .
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update method implementations to improve code reusability and enforce minimum and maximum range
changed the character value from ' \ 0 ' to ' \ t ' in KEY _ SEP constant to ensure proper formatting of the key separator
camel - 16400 : fixed the issue of camelcontext . getcomponentdocumentation ( ) and camelcontext . getcomponentparameterjsonschema (
updated the method ` getBound ` to handle ` NoSuchFieldError ` and added a new test class ` TestGetBound ` to improve robust
refactor LeafFilterFactory to use a dedicated method for creating FilterPredicateLeafBuilder based on ParquetType to improve code readability and provide
updated ` BatchPropertyBeanPostProcessor ` to check if the original artifact name starts with ` SCOPED _ TARGET _ BEAN _ PREFIX `
added a loop to read certificates from the input stream and log the certificate serial number to improve robustness by ensuring all certificates are processed in a
refactor the default value retrieval logic in ` mmm Config . java ` and add a new ` DnsFallback . java ` class to improve
ww - 4331 add more detail to exception throw in defaulttheme
changed the type of the ` success ` field from ` boolean ` to ` String ` in ` DepositAddress . java ` to allow
refactor privilege handling in WindowsSecurity to use a lambda expression to improve code readability and ensure proper resource cleanup
removed " address " , " phone " , " address " , and " phone " scopes from the OAuth2 provider to simplify OAuth2 provider
refactor the handling of the starting of the selector to use a separate Start class to improve code readability and maintainability by encapsulating the
added support for a new constant BIG _ DECIMAL _ 182 _ 04 and introduced hue65535 and saturation255 variables in WLedHandler
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set to streamline caller validation logic to improve code clarity
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to enable handling of JSR instances in the application
allow subscriptionactivatingsubscriber to be register even if it ' s not complete in a transaction .
replaced the TRUNCATE TABLE statement with an UPDATE statement and added error handling for SQL execution to improve data management and ensure proper error handling
updated elevation handling in ContactItemInflater for compatibility with Android versions Lollipop and above to ensure proper elevation management for contact views
rename variable ` typeInformation ` to ` identifier ` for clarity to improve code readability and maintain consistency in naming conventions
replaced direct access control with privileged actions for file operations in SandboxFileManager . java to enhance security by ensuring privileged actions are
refactor Groovy parser and printer to improve handling of bracketed names and binary operators to enhance code readability and maintainability by correctly separating
updated warning message format to include the exception class name to improve clarity of error messages for better debugging
updated character reading and compression logic in RecordInputStream and UnicodeString classes , and added a new test case in TestUnicodeWorkbook to improve handling of
add a test for downloading a file with Norway characters in the file name to ensure that the download functionality handles non - English characters correctly
replaced RuntimeException with a custom CancellationException for handling cancellation errors in AsyncResource to improve error handling and provide more specific feedback during password request
added null check for statistics before processing to avoid potential NullPointerException when statistics is null
added a test method to verify the removal of objects from an explicit collection in MongoTemplateTests . java to ensure that the method correctly handles object
fix doclint issue in javax . swing . pgraphics and javax . desktop
[ beam - 1342 ] use % n instead of \ n for deterministic check
refactor scroll handling in RecentsView and PagedView by introducing ` mIsClearAllButtonFullyRevealed ` and
added a COMMON _ HMS _ PROPERTIES map and refactored the handling of HMS properties in HiveIcebergMetaHook to
added a method to check if an address is already in use and updated exception handling to use this new method to improve error handling and provide a
added a command - line argument to the argument list in TestNestmateAttr . java to specify the class path for the test execution
replaced ` SchemaTextDetailType . VERBOSE ` with ` SchemaTextDetailType . verbose _ schema ` in ` Grep . java `
add miss @ override annotation and remove unused import
# 1745 - enh : add support for nested savepoint ( # 1746 )
replaced ` fetchSize ` with ` ThreadLocal < Integer > ` in ` QueryProcessExecutor ` and updated related methods to improve thread -
[ java ] use noopidlestrategy instead of backoffidlestrategy for ping pong .
refactor method calls in HttpClientIntroductionAdvice to use a new helper function for handling blocking calls to improve code readability and
added HDP _ VERSION system property setting in SliderAppsViewControllerImpl . java to ensure HDP _ VERSION is correctly set based on
refactor ` JavacProcessingEnvironment ` by adding ` loaderClass ` , ` jusl ` , and ` loader ` fields ,
added DeepCloner for deep cloning of parameters in ParameterizedRobolectricTestRunner and modified method visibility in RobolectricTest
added bind for JETTY _ SHOW _ STACKTRACE annotation to ResourceBase . java to disable stack trace logging for web servers
added a check for OBJECT type in NativeObject . java to ensure proper handling of OBJECT types in the code
replaced direct access to ` sun . jvm . hotspot . types . OopField ` with a new method ` findWellKnown
updated JwkKeyListView to use PublicKey instead of RSAPublicKey for serialization and modified JsonWebKeyEndpoint to include an entity name for
make nativeimageheap . writable only when use - only - writable .
rename MBeanServerMXBeanUnsupportedTest . java file to improve clarity and consistency in naming conventions
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up unnecessary dependencies and improve code clarity
updated method names from ` Validator ` to ` validator ` and added ` getOwnerAddress ( ) ` in multiple actuator classes to enhance clarity
http : / / issues . apache . org / activemq / browse / amq - 2283 - add a simple broker example
replaced ` toByteArray ( min , max ) ` and ` toByteArray ( min , max ) ` with direct ` byteArrayMin ` and ` byteArray
added handling for empty indices in ` ProtobufAnnotationSerializer ` and refactored the edge creation logic to improve code clarity and ensure that empty
[ java ] use remove ( ) instead of contains ( ) to be consistent with contains ( ) .
added file conflict saving logic in FileDataStorageManager and invoked it in FileDownloader and FileUploader to enhance file management by ensuring conflicts are
updated generic types in ExecutionContext , AbstractMethodInvokingDelegator , AbstractTransactionalResourceItemWriter , and AbstractTransactionalResourceItemWriter
replaced instances of StrUtils . splitFileNames with Lucene ' s splitFileNames method across multiple filter factory classes to simplify code and
added Oracle and MySQL driver properties for remarks reporting and useInformationSchema to enable compatibility with Oracle and MySQL databases
added a handler parameter and a serialVersionUID to the MethodInterceptor in SignedSupportingClassProxyFactory . java , and updated the ignore annotation in Partial
( chore ) camel - core : use system . currenttimemillis instead of java . util . date . gettime ( ) to
[ hotfix ] [ table ] fix classloading in the execution context
added onBufferChanged method and modified buffer handling in TerminalView and TerminalTextViewOverlay classes to ensure UI updates occur on the UI thread and
refactor the ` processConfigFile ` method for improved readability and formatting to enhance code maintainability and clarity
updated the freeze operation logic to use allowTvmFreezeV2 instead of allowTvmVote to improve flexibility in freezing
added an ` _ insecure ` flag and methods to manage its value in ` TlsConfig ` , and updated ` TlsUtils ` to
refactor code to use a conditional assignment for source and class path in JavadocTool . java and add a new class T7091528
updated edge column handling in ExporterGDF . java to use case - insensitive comparisons and introduced a new EdgeColumnsGDF class to improve
added cascade option to the OneToOne relationship in DefaultUserInfo . java to ensure that the DefaultUserInfo association is applied to all entities
refactor hashCode and equals methods in Message class to utilize arrays for comparison to improve performance and readability of the equals method
updated the character set in the response body from " ? ? ? ? " to " \ u017D \ u017D "
[ hotfix ] remove unused method rocksdbSerializedCompositeKeyBuilder # isKeySerializerTypeVariableSized ( )
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified ` SubjectDomainCombiner ` to utilize it to enhance security
add null check for recipe in recipehandlerbrewery , recipehandlerelventrade , and recipehandlerelventrade . close # 3
refactor parsing logic in mmm Parser . java and ppp Parser . java to improve clarity and maintainability of the parsing process
added a method to display a connection error popup in ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to improve
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to include a test for 404 handling to
updated bitwise operation for bit manipulation in NodeBitMap . java to ensure correct handling of integer values to prevent potential issues with integer overflow
refactor ImportLayoutStyle class to improve code readability and maintainability
refactor ConsoleUIService to replace gitBashConfigValue with useStdin for terminal input handling to improve clarity and functionality when using
replace Mockito assertions with Test assertions in ShadowAccountManagerTest . java to improve test readability and maintainability
remove the enclosingType field and directly use the wrapped ' s getEnclosingType ( ) to improve code clarity and reduce unnecessary variable assignments
rename method names from ` getProperty0 ` and ` getProperty1 ` to ` property0 ` and ` getProperty1 ` in ` Pairs
[ flink - 11349 ] [ runtime ] remove timeout from putallcallable # set ( )
[ issue # 5808 ] fix npe in mqclientinstance # consumerrunninginfo ( # 5809 )
[ java ] only do work relate to set up publication image when subscription exist .
added a new file ` TopTabAction . java ` implementing the ` Presenter . Toolbar ` interface to provide a structured way to display
camel - 16400 : dynamic router - support reactivehelper to reduce thread contention in filter eip .
updated import statements and modified test class structure in AggregateItemReaderTests . java to improve readability and structure of unit tests
added generic type parameter ` T ` to the ` Procedure ` constructor in ` AbstractObjectValueTypeMap ` to improve type safety by explicitly specifying the
added functionality to count and display edits in the AchievementsActivity and updated URLs in the NetworkingModule and OkHttpJsonApiClient
added a validation check for the length parameter in OfflineSorter . java to ensure that the length does not exceed Short . MAX _ VALUE to prevent
do n ' t report unconditional bug when there be a load of the min value .
updated dataset classes to improve naming consistency and clarity to enhance code readability and maintainability
enhanced error message for invalid credential type in ProvisionClusterRequest . java to provide more context on acceptable values to improve error reporting for better debugging
updated random number generation for v [ 0 ] and v [ 1 ] in TestVectorUtil . java to improve the variability of vector values
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified time comparison logic to improve precision in
added SSL property retrieval and modified SSL handling in TestUtil . java and PGPropertyTest . java to enable secure connections to enhance security by allowing
douniaberrada : set safebrowsing to true for chrome
added null check before cloning of oldConfig in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerException when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource to ensure proper handling of transcoding based on renderer settings
updated methods to handle empty gherkin rows and return an empty list when there are no rows to improve robustness of data retrieval and prevent
added a new constant ` CustomIgnoreTag ` and logic to remove it based on its value to improve code clarity by allowing specific tags to
camel - 16400 : camel - jbang - use optimisticlockingexception to reduce stack trace .
do n ' t check modelutils . isprivate ( ) in beandefinitioninjectprocessor . fix # 786
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and modified onInsetsUpdated method to enhance compatibility with LimitlessIDE
deleted the ClusterNodeInfo . java file to remove unused or redundant components from the event bus implementation
modified the return statement in ShieldedTransferActuator . java to ensure consistent functionality in the return statement
added debug output for the " Standard ciphersuite " and " Legacy ciphersuite " in the ServerHandshaker class to provide visibility into the
refactor template selection logic in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to differentiate between single and multiple
added a ` nodeLabelMap ` to manage duplicate node labels and updated the logic in ` ImportContainerImpl ` and ` ImportContainerParameters `
added a new file R2303044ListSelection . java to implement a GUI test for selecting an item from a list to ensure that
[ java ] do n ' t allow publication to be re - created on aeron client .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that ` StepSynchronizationManager `
refactor row counting logic in StatsRulesProcFactory . java to improve clarity and maintainability of the code
added path and query parameter handling in SpringBootDocBuildTemplate and refactored stream processing in DocUtil to improve code clarity and ensure
remove unnecessary use of string . getname ( ) in hotspot
replaced DistBuildCachingEngineDelegate with CachingBuildEngineDelegate and modified its usage in DistBuildSlaveExecutor . java to improve caching mechanism
replace RuntimeException with a detailed message for JSON parsing errors to improve error handling by providing more informative error messages for better debugging
added a DEBUG check before logging the message in WidgetsModel . java to improve performance by avoiding unnecessary log output during debugging
updated Console . java and Scanner . java files to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a test for discount overlaps in TestSimilarityBase . java to improve
modified ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests ` to check for the presence of the ` send ` method
added exit and quit methods with corresponding properties to Global . java and removed the QUIT method from ScriptingFunctions . java to standardize exit
[ hotfix ] [ demo ] fix resource leak in loanbrokersharkdetectordemo
rename methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in naming conventions
[ vmware ] fix npe in vmwareweb service cookie handling .
updated assertions in ResinAcegiAuthenticatorTests . java for authority checks to ensure consistency in authority validation logic
updated ByteUtil . bigIntegerToBytes to use a fixed integer for r and s to ensure compatibility with larger input values
fix system property fml . disabledmods to fml . modstates instead of fml . disabledmods
refactor account selection handling into a separate method ` showAccountChooserDialog ` to improve code readability and maintainability by separating account selection
improve error message when fail to connect to the client .
added validation to check for empty results from the validator smart contract call to improve error handling and provide clearer feedback when encountering unexpected results
added a null check for the root file before reading fields in TexturePackerFileProcessor . java to avoid null pointer exceptions when the file is
removed unnecessary null check for datasource and JNDI in PooledConnection . java to simplify the code by eliminating unnecessary checks
reduced the maximum memory allocation from 10 MB to 1 MB in TestRefprocSanity . java and added a sink variable to optimize memory
fix nullpointerexception when write to system . out or system . err
set credentials refresh delay to 100ms in KinesisConfigUtil . java to improve performance by reducing unnecessary requests
refactor dialog creation by introducing a new method ` showInfoAlert ` to improve code readability and reusability
modified the ` test ` method to include a ` pack ` parameter and added a package argument to enhance functionality by allowing the ` test ` method
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 and modified import statements in TestBadUse
[ mng - 5353 ] avoid ` ` pluginbase ' ' and ` ` shared ' ' dependency in pluginbundlemanager
added handling for multiple ZipFileInputStreams in ZipFile . java to ensure proper resource management and prevent memory leaks
rename datamatrix / datamatrix - relate to datamatrix / datamatrix to data _ matrix , since it ' s
[ log4j2 - 1343 ] sequencegeneratorsource . runactive ( ) and sequencegeneratorsource . runidle (
corrected the spelling of ' getCurrentyActiveConnections ' to ' getCurrentActiveConnections ' in BlobServer and BlobServerGetTest classes to
replaced ` @ Override ` annotations with ` findFirst ( ) ` and added a new method ` getAnnotations ( Class < T > type ) `
added support for additional architectures ( ppc64 , ppc64le ) in Bits . java and ByteArrayAccess . java to ensure
added a reference to the GitHub issue in the RuntimeException message to provide a link to the issue for better debugging and tracking
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of MINUTES to improve timeout handling for transaction execution
replace instances of Date with Instant and ZoneId for better date handling to improve type safety and clarity in date formatting
refactor BytesRef class for improved memory management to enhance performance and maintainability of the code
added a Toast message to notify users when YouTube player does not work on Lollipop to inform users that the YouTube Player
added checks for unexpected SQL syntax errors in the parser and enhanced test cases in StatementTest to improve error handling and ensure proper syntax validation for SQL
do n ' t allow vibration if it ' s already vibrator .
updated table border and background color settings for foreign key columns in DotRenderer . java to improve visual representation of foreign key columns in the graphical
added methods to check if a string is encoded and updated the SetProcessor to handle it to improve configuration handling for encoded and encoded data processing
added catch block for StringIndexOutOfBoundsException in PDFParser . java to handle potential StringIndexOutOfBoundsException during processing
refactor X509Certificate class for improved readability to enhance maintainability and ease of future updates
add support for wavefront proxy uri ( fixes # 3903 )
replaced ImageView with NetworkedCacheableImageView and added loadImage method to enhance image loading efficiency and support caching in the application
removed the ` target ` parameter from the ` LauncherAnimUtils . ofFloat ` method across multiple files to simplify the method signature and eliminate
updated controller version string references in DependencyBank . java and modified imports in BuildScriptHelper . java to ensure compatibility with the new gdx controllers
rename LaunchedURLClassLoader . java to improve clarity to enhance code readability and maintainability
updated the query method in DataSourceHealthIndicator to use DataAccessUtils and added column count validation to improve data access handling and ensure correct column count
add no - cache header to layout tag so it do n ' t cache anything .
updated warnMsg to use Locale . ENGLISH in ZkController . java to ensure consistent formatting of the warning message across different locales
updated the constructor of SolrQueryParser to include an Analyzer parameter to enhance flexibility by allowing different analyzer configurations for query parsing
updated copyright year from ` Copywrite ` to ` 2017 ` and removed unused imports in multiple Java files to reflect the current copyright year and improve
refactor MainTest . java for improved readability to enhance maintainability of the test code
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added support for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of VoidColumnVector instances in vector processing
updated method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct identifier is
removed the ` isTypeMatch ` method from ` AbstractConfig ` to simplify the configuration addition process
[ java ] add offer method to make it easy to add a publication to a direct buffer .
rename methods for trusting and max trusted index in XForwardedRemoteAddressResolver to improve clarity and consistency in naming conventions
disable bootstrap inserter if there be no bootstrap annotation
hbase - 11313 use getvalue ( ) instead of getmaxfilesize ( ) and getmemstoreflushsize ( )
updated variable names and logic for handling maximum number of commits in BranchGraphServlet . java to improve clarity and accuracy in determining the number of
added InvocationTargetException to the main method and run method to improve error handling by ensuring that InvocationTargetException is properly invoked
added a constant ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine ` to
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code and reduce unnecessary dependencies
removed a redundant call to markAsDone in HttpProtocol . java to streamline the code by eliminating unnecessary duplication
added default TezConfiguration and initialized it in TezConfigurationFactory to enhance configuration management for Tez tasks
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when checking for KP _ TIMESTAMPING _ OID
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a ` forget ` method to ` OpenALAudio ` and modified sound stop logic to handle potential null pointer exceptions to improve robustness by
clear discontinuity only once on state change
added DecimalFormat and NumberTickUnit for decimal values in NumberAxis . java to improve formatting of numeric values for better readability
updated method calls from ` builder ( ) ` to ` of ( ) ` for creating ` TargetGraphAndBuildTargets ` instances to improve code
removed the ` IndexFileNameFilter ` class and modified file name checks in ` IndexFileDeleter . java ` , ` IndexWriter . java
add a flag to force full entity ' s bounding box for ladders instead of just the texture stitcher
added a default compression level parameter to several constructors and methods in ApkBuilder and SignedJarBuilder classes to enhance flexibility in specifying compression levels
add a test method to verify inclusion of static fields in a JAR file to ensure that static fields are correctly included in the generated jar
added support for BYTES data type in MetricFieldSpec and related classes to enhance functionality for handling byte values in the database
updated string formatting in multiple failure error messages to use % n instead of a space to improve readability of failure messages in tests
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed an
updated SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , ForumService , and added CacheManager integration
fix for ticket : 266 -- use the german locale for pronunciation .
[ multistage ] fix npe in simplehttp when post do n ' t have post body ( # 8091 )
added Dispatcher to ClientSideSlb and its tests to ensure proper shutdown of the OkHttpClient to improve reliability and resource management during client -
updated TextureRegion . java to adjust v2 based on whether the texture is flipped to ensure correct v2 is set based on whether the texture
improve error message for unknown property on discovery strategy
changed the contextPath variable declaration from final to non - final and added a null check for it to ensure the contextPath defaults to " NA " when
[ drools - 7 ] fix class reinitialization when the project class loader be reinited
added serialization of B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and defined a value in SerializationHeader . java
added precompiled header handling and validation in C++ source rule classes to ensure correct usage of ` prefix _ header ` and ` precompiled _
replaced ` WeakReference < T > ` with ` AccWeakReference < T > ` in ` ImageWatched . java ` to
modified visibility of the ` findNextIndex ` method in ` ObjectMap ` and removed unused imports in ` OrderedMap ` and ` OrderedSet `
swapped the assignment of isDirect from true to false to correct the logic for determining whether the vertex buffer is direct
fix for ticket : 142 -- remove duplicate call to get ( ) .
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to enable method chaining for better access
pdfbox - 5764 : use input . limit instead of input . capacity , a suggest by valerybokov
added a null check before removing the close hook from the context to prevent potential NullPointerException when context is not initialized
update border spacing calculations for folder layouts in CellLayout and DeviceProfile classes to improve layout consistency and adaptability for different container types
replaced NumberFormat . getInstance ( Locale . US . parse ( ) ) . parse ( String value ) with a custom ValueNumeric class to improve
added a condition to check if the response is deferred before returning the authentication status to ensure that the authentication process does not proceed when the response is
updated argument checks from " -- module - start - ini = " to " -- add - to - start " in StartArgs . java to
added a default partition value and modified how dynamic partition values are handled in ` DynamicPartitionFileRecordWriterContainer . java ` to improve handling of
[ hotfix ] [ runtime ] make sure operatorfactory be not null in streamnode
updated return statement formatting in DefaultArtifact . java to improve readability of artifact ID and type representation
camel - kafka : allow to subscribe to kafka consumer twice . thanks to michael for the patch .
improve error message when an annotation substitution can not be find .
rename gmail _ notifications _ enabled to enable _ gmail _ notifications .
doc ( regen ) : update comment in cryptokey . java and clarify the purpose of the comment .
updated test cases in LumberjackMultiThreadTest to adjust expected message count based on available processors to improve test reliability by accommod
fix checkstyle issue in player / playerupdatehandler . java ( # 712 )
refactor Exchange class to improve code readability and maintainability
api : updateuser api - doc for both api key and secret key .
refactor switch - case statements to if statements for MfaProvider , IdleTimer , and SamlServiceProviderProvisioning classes to improve code readability
refactor AbstractMetaDataExportMojo class to improve code readability and maintainability
added error handling for SQLIntegrityConstraintViolationException during table dropping to ensure proper management of materialized views before attempting to drop tables
changed property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to clarify the purpose of
added a new deprecated class ` RoboExecutorService ` in the ` org . robolectric . util . concurrent ` package to indicate that
add subgroups / subgroups to the menu if the group be a root group
log4j2 - 1342 - fix issue with path that start with ` ` / ' ' .
updated the dynamic number of garbage collectors in TestDynamicNumberOfGCThreads . java to improve code clarity and ensure proper execution of
changed return types and variable types from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes . java to
updated SQL CREATE statement construction and parameter handling in CreateTable and CreateTableDeParser classes to improve flexibility in SQL creation commands based on user
set the alpha of the background drawable in the ChatViewerFragment to improve the visual appearance of the UI elements
test : migrate ctiteratortest to junit 5 ( # 4338 )
added ` token . clear ( ) ` calls in ` CharTokenizer ` , ` KeywordTokenizer ` , ` TokenStream ` , and ` Standard
[ core ] add test case for astinitializer
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to throw ` BeanDefinitionStoreException ` and ` StateMachineConfigurerAdapter
simonstewart : add a testlocators class to the selenium - backed selenium test suite
added support for number and float format in StringConverter . java and updated tests in StringConverterTest . java to improve precision and consistency in formatting
remove dead code in aggregatelifecyclelistener . getcurrentscope ( ) .
update touchable insets handling in TaskbarDragLayerController to ensure correct touchable insets are set for improved user experience
updated FencedCodeBlockParser to return null when a matching character is found to improve robustness by preventing potential null pointer exceptions during
added socketTimeout property to manage socket read timeouts to enable configurable timeout settings for socket connections
simonstewart : fix flaky elementattributetest
updated InputStreamReader to specify UTF - 8 encoding when reading from the URL to ensure proper handling of character encoding in HTTP requests
refactor List class to improve code readability to enhance maintainability and facilitate future updates
updated ` AsyncFileImpl ` to accept ` URI ` and ` Path ` parameters and modified the error handling in ` AsyncFileImpl ` to
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are stable and should not be
api : fix npe , return null instead of empty list instead of null
rename ` retryUploads ` to ` retryFailedUploads ` and update related logic in ` FileUploader ` and ` ConnectivityActionReceiver ` to
update Java version constants and methods for class generation in ConstantPoolTagTests . java to ensure compatibility with Java 9 and Java 8 features
add - xlint and - serializability to compile ( ) , also add - recompile with - xlint to the error message
added a method to remove all headers from the AsyncHttpClient to provide a way to clear the client header map
replaced Vector with ArrayList and updated method calls accordingly to improve performance and simplify code by using a more appropriate data structure
updated the default value of the GRID _ COLUMN from 4.0 f to 3f to improve the visual distinction of the grid
added a condition to check if the view creation is not allowed in CalcitePlanner . java to ensure that the query execution only occurs when
updated date pattern and refactored assertions in TestHS2HttpServer . java to improve clarity and correctness of date replacement logic
do n ' t swallow exception in graphprinter . getobject ( ) .
simonstewart : make the selenium - backed webdriver test pass on the firefox driver
replaced byteOffset addition with Math . addExact in ByteBlockPool . java and added a new test case in TestByteBlockPool .
changed static fields of ` firstEncoder ` and ` secondEncoder ` to instance variables and modified the return statement to use ` Locale . ENGLISH `
do n ' t stop the tcp transport if an unexpected error occur .
add @ suppresswarnings ( ` ` serial ' ' ) to fix eclipse warning
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` dependency in ` Ocaml
added ' discard changes ' and ' unsaved changes ' dialog for database change .
added response type validation and improved error logging in OAuth20DeviceCodeResponseTypeRequestValidator and NexmoSmsSender to enhance security and
added a check for the index parameter in the DrillBuf class to ensure the index is valid before proceeding with operations
added input format class parameters to the initTableMapperJob method and updated related calls to enhance flexibility in handling different input format classes during map
removed duplicate append method call in AbstractJRubyMojo . java to streamline code by eliminating redundancy
sulong : throw llvmpolyglotexception if language be not find .
added a deprecation warning for replication commit duration in Solr 7.1 and updated related logic to ensure compatibility with Solr 7.1 and provide clear
rename ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport . java ` and update related references to improve clarity and
refactor ECKeyPairGenerator to use Object [ ] instead of long [ ] for key handling to improve type safety and simplify key generation process
[ hotfix ] [ runtime ] add suspend ( throwable cause ) to restarting
replaced the singleton instance of RotationTouchHelper with a direct instantiation to simplify the initialization process and improve code readability
refactor port table handling in UniFiControllerCache . java to use flatMap for improved readability to enhance code clarity and
updated method parameters and variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity
remove offer from the list when a new offer have the same offer id .
enable tl 1.3 by default for tl 1.3
added conditional handling for mock types in MockitoMethodInvocationControl and refactored test methods in SystemClassUserTest to improve mock interception
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` in multiple classes to provide context regarding the specific object that caused the exception
replaced the import of DisplayUtils with an import of OCFile in getIntent ( ) . putExtra ( ) to clean up unused
added error handling and checks for file renaming and compaction in StoreDirect and StoreWAL classes to improve robustness by ensuring old files are not
added a UI task execution in AbsSwipeUpHandler . java and modified the stopSwipePipToHome method call in SystemUiProxy
added hidden flag and methods to manage command argument visibility in LiquibaseCommandLine and CommandArgumentDefinition classes to enhance command execution control by allowing
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct
[ geos - 8271 ] use catalog from styling resource pool instead of resource directory for style group
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being executed
added an ` getId ` method and its implementation in ` TiledMapLoader ` , ` AnimatedTiledMapTile ` , and `
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection string to include version specification for V _ 0 _ 13 to ensure compatibility with version 0.13 for database connections
added schema comparison functionality in LiquibaseGenerateChangeLogMojo . java to enhance schema generation capabilities
replaced ` putIfAbsent ` with ` put ` in the ` JmxRegistry ` class to improve performance by avoiding unnecessary method calls
log single benchmark exception at warn rather than error
removed the final modifier from the doPutRecord method in AbstractCacheRecordStore . java to allow subclassing of the method for better flexibility
updated return statements in Tools . java and modified path replacement in FileSelectorFragment . java to improve clarity and correctness of file path handling
added new test cases for handling large and slow response content in FastCGIProxyServletTest . java to improve test coverage and ensure robustness
added a call to start the ReadInteractionsService in MarkReadService . java to enable the service to be instantiated for handling read interactions
added a conditional check for ` lintClassfile ` before logging warnings for missing annotation methods to improve error handling and provide clearer diagnostics for annotation
added logic to set a default port value for email sending to ensure a default value is provided when the server port is not configured
refactor SSLFactory renewal to use retry policy for improved reliability to enhance the stability of the SSLFactory renewal process by
updated the date format in ObjectMapperProvider from " HH : mm ' T ' HH : mm ' Z ' " to " HH : mm :
updated the assertion message in SpyingOnRealObjectsTest to clarify that the private class is not visible due to mocking to Mock
added support for detecting line ending with line breaks in InlineBoxing and LineBox classes to enhance text formatting capabilities for better user experience
updated filePathString initialization to handle potential null values to improve robustness by avoiding potential null pointer exceptions
removed unused import of DocCollection from TopicStream . java to clean up unnecessary dependencies and improve code clarity
refactor ` NinjaServletContextTest ` to use ` createHttpServletRequestInputStream ` and add a new test method for handling Windows 1250
added a configuration property for exposure settings in AbstractCasEndpointTests to allow dynamic management of web exposure settings for enhanced security
added a validation check to ensure the current graph is a dynamic graph to prevent runtime errors caused by invalid graph configurations
resolve issue with ` @ scopeone ` and ` @ factory ` on ` bean ` without ` @ type ` and ` @ factory ` (
camel - 16400 : add an option to suppress exception when parse jsonpath . thanks to joseph for the patch .
modified the creation of ControllerLeaderLocator in HelixServerStarter . java to ensure consistent initialization of the leader locator
updated usage messages in CLHSDB and HSDB to use " clhsdb " and " hsdb " instead of " java "
modified the configuration of ` FaultTolerantChunkProvider ` in ` FaultTolerantStepFactoryBean ` to streamline the chunk provider
[ beam - 8470 ] remove deprecate write class and move it to io package
refactor ` ShadowAccessibilityManagerTest ` to use a local ` AccessibilityManager ` instance instead of a method to improve code clarity
use analytics . group _ display _ id instead of fluttererror . flutter _ notification _ goup _ id ( # 3640
removed the ` SourcePathResolver ` parameter from the ` JavaSourceJar ` and ` Javadoc ` classes to simplify the class structure by removing unnecessary
added a new ` PostgreSQLEnumDataTypeHelper ` class and refactored the ` enumDataTypeHelper ` initialization in ` PostgreSQLDatabaseConnector ` to
updated the file path assertion in LogFileTests . java to ensure compatibility with different operating systems
rename ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to clarify the purpose of the
added support for dropping index tables in HiveMetaStoreClient to ensure proper error handling when attempting to drop non - existent index tables
added visibility check before updating disabled flags in RecentsView to ensure actions are disabled when the visibility is not visible
added a syntax highlighting for non - Windows systems in the Repl . java file to enhance syntax highlighting for non - Windows environments
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 558 : add
changed the method of constructing filePath from ` toUri ( ) . getRawPath ( ) ` to ` toString ( ) ` to ensure compatibility with
removed unnecessary line breaks in the removeCaptureListener method call to improve code readability and maintain consistency
change the value of _ metaDataComplete from true to false to reset the state of metadata processing
changed the return type of the ` removeTaskTarget ` method from boolean to void and modified bitmap handling logic to improve asynchronous execution handling and ensure
added support for " PLATFORM " and " RELEASE " environment variables in JsBundleGenrule to enhance the functionality of JsBundleGen
updated type casting logic in ` mmm Lower . java ` and added a new class ` ppp T6500701 . java `
added tests for crlf new lines in comments and Javadoc in AddImportTest . java and AutodetectGeneralFormatStyle . java to
added hubMode configuration handling in AbstractLiquibaseChangeLogMojo and declared it in AbstractLiquibaseMojo to enable
removed redundant assignment of skipPolicy in JsrFaultTolerantStepBuilder . java and simplified null check in JsrChunkProcessor . java
added a check for the existence of the current linkDb before adding it to the input path to avoid potential errors when the linkDb does not
replaced reflection - based method lookup for setting the indexer thread pool to improve flexibility by dynamically retrieving the method from the configuration
updated the address format in GameCanvasImplementation . java to remove the hardcoded port to simplify the address for better readability and maintainability
added a ` copy ` method to ` MapJobExecutionDao ` for serializing and deserializing ` JobExecution ` objects to enhance data integrity by prevent
added a new file ` DownloadTest . java ` to implement a test class for downloading images to facilitate testing of image upload functionality
updated language assignment and corrected language comparison in multiple files to ensure accurate language normalization and improve code clarity
updated exception handling in GenericUDFRound . java to replace UDFArgumentException with UDFArgumentTypeException to improve clarity and specificity of error messages
updated dependency management logic to use ` versionTag ` instead of ` version ` to ensure that the code does not null checks for the selected version
added multiple AntPathRequestMatcher entries to SecurityConfig . java to enhance security by restricting access to specific URLs
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
fix handling of java . lang . object and java . lang . object in inject processor
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
changed ` final static ` to ` static ` for ` SUPPORTED _ THING _ TYPES ` and ` ENERGY _ SUBSCRIPTION _
simplified the code by removing unnecessary check for socketstatus . open or socketstatus . stop
deleted the file SunToolkitSubclass . java which contained a method to flush pending events in the AWT toolkit to remove unused functionality
replaced MathUtils with Matrix4 for translation calculations in DefaultRenderableSorter . java and added hasRotationOrScaling method in Matrix4 .
updated imports in TypeHandlerRegistryTest . java and added a new test method for registering type handlers to improve test coverage and address issue # 16
pdfbox - 4892 : add support for the alternate colorspace , a suggest by valerybokov
updated references to ` CommonsApplication ` to use ` BuildConfig ` instead of ` CommonsApplication ` to centralize configuration management for better
camel - 16400 : camel - health - do not fail if health check be not enable .
add a null check to the thorn chakram to prevent crash .
added a test for altering tables with indexes including primary keys in AlterTableWithViewsIT . java to ensure correct behavior of primary key
updated the offset variable assignment in FileFloatSource . java and modified assertions in TestFunctionQuery . java to improve clarity and functionality of document
remove DrillMongoConstants . ID from the fields in MongoRecordReader to clean up unused fields from the database
added a dispose method to DeviceBase and a disconnect method in DeviceBase , and updated WifiConnection to handle connection termination to ensure proper resource
added support for auto _ increment syntax in the database schema to ensure proper handling of integer primary key creation
fix : use a periodic periodic sync instead of hardcoded 10 millisecond
server : fix npe in deletevirtualmachines api when uservm be null
updated image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage and improved color array initialization to enhance flexibility in image
removed deprecated constants from LauncherSettings and added new ones in LauncherProvider to streamline code and encourage the use of updated functionality
jbrules - 2242 : move all broker and rule file into drools / examples / broker
added legendTop variable and updated offset calculations in PieChart to improve legend positioning and ensure proper positioning of the chart elements
added a check to return early if the world transformation has no effect to optimize rendering by avoiding unnecessary processing when the world transformation is not present
added a new file MaryScriptCreator . java for creating and writing Mary script files to facilitate the creation of script files
added a flowFile attribute to store the remote host of the request to enhance the request handling by associating it with the remote host
added closing and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and prevent potential memory leaks
replaced " xlink : href " with " href " for license and location attributes in ComponentDescription . java to standardize the link format
camel - 15836 - camel - aws2 - s3 : fix typo in the description of the timeout checker
hbase - 27921 addendum log server state when no match procedure find for transition to closed
added null checks before logging span messages in Slf4jSpanLogger . java and improved formatting in DefaultTracer . java to enhance code
trim whitespace from the active option before adding it to the configuration to ensure that the active option does not interfere with whitespace
added depth effects and modified wallpaper zoom out logic in DepthController . java to enable dynamic depth adjustment based on user preferences
updated assertion in OverseerTest to check the success count of overseer to ensure that the overseer state is accurately validated
removed the method ` getKernelVersion ( ) ` and simplified the return value of ` xattrEnabled ` to always return true to simplify the
[ hotfix ] [ table - common ] fix typo in execconstants
removed the import of ScreenRecordRule and the ScreenRecord annotation from ThemeIconsTest . java to streamline code by eliminating unnecessary dependencies
added a new method ` setScanAttributeForPaging ` to ` ScanUtil ` and integrated it into ` TableSnapshotResultIterator ` to
added a check to ensure lowRange is less than or equal to 1 , in Request and RequestV2 classes to ensure that lowRange does
changed access modifier of keySizeEstimator and valueSizeEstimator to protected in AbstractCachedSource . java and updated cache size estimation in AsyncWriteCache
server : fix npe in listhosts api response ( zoneid be null )
[ zeppelin - 2271 ] support utf - 8 encode in python interpreter
updated the method to remove a file from filesystems by using a single argument to improve code clarity and simplify the removal process
changed the type of the ` obj ` variable from ` Object ` to ` String ` and updated related methods accordingly to improve data handling by util
increased the timeout duration for polling hard commit from 2 milliseconds to 5 milliseconds to allow more time for commit operations to complete successfully
[ selenide ] do n ' t fail if the browser do n ' t have any listener
rename multiple classes related to the dial package to improve clarity and consistency in naming conventions
updated logging statements in SyncQueue . java for consistency in formatting to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
fix loading of legacyxmllayout . jar in fmlclientlaunchprovider
[ hotfix ] fix checkstyle violation in yarnitcase
add miss stats per map to localmapstatsprovider if no data be present .
deleted the AllTests . java file to the test suite is no longer needed for the project
added Unicode character handling for non - breaking hyphen and zero - width spaces in AbstractWordConverter . java to improve text processing capabilities for Unicode characters
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory behavior with large stack trace invocations to
updated method call to use ` getResultMappingsForRowKey ` instead of ` nestedResultMap . getResultMappings ( ) ` to improve clarity
added eventHandled flag to UIText . java to track event processing state
deleted the ` @ Controller ` annotation and renamed ` Weldby ` to ` WeldModule ` to clarify the purpose of the
make sure we only check for capture group when capture group be in empty
removed the retrieval of the LiquibaseProLicenseKey from the AbstractLiquibaseMojo class to streamline the code by
mondrian : fix a bug introduce by mondrian - 1200 .
make - g an alias for - h to generate debug information
mondrian : fix typo in mondrianproperties . java
added support for handling friend paths in Kotlin compilation steps to improve the management of FriendPaths during Kotlin compilation
added aliases for BATK , BRAHMI , and MAND in Character . java and modified main method in CheckScript . java
updated equality checks to use ` equals ` instead of ` equals ` for string comparison and added a new method ` stringToExecutionCommand ` in `
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve file handling logic to enhance performance and maintainability of file operations
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope instance
updated the handling of CSS number and percentage parameters in CSSParser . java to improve accuracy in parsing CSS number and percentage values
added a new test method to validate the behavior of local index operations in the LocalIndexIT class to ensure that the correct number of rows is
replaced InstrumentationRegistry with ApplicationProvider in BaseAndroidTestCase and updated test method names in BackupHelperTest and LanguageHelperTest to improve
updated message and toast calls to use string resources for consistency across activities to improve maintainability and readability of the code
simplified condition checks in RendererUtilities and updated test cases in RendererUtilitiesTests to improve code readability and correctness in test cases
replaced Iterator < JsonNode > with ArrayNode for ask and bid processing in KrakenStreamingAdapters . java to improve type safety and enhance
added error handling for database column addition in FileContentProvider . java to improve robustness by catching potential issues during database upgrade
removed system . err . println statement from AsyncServletIOTest . java to clean up unnecessary console output during tests
updated data size calculations for join operations in ConvertJoinMapJoin . java to improve accuracy of online data size estimation based on hash table load factor
updated the ` buildView ` method to accept a ` Context ` instead of ` LayoutInflater ` and added background resource management for views to
added assertion capabilities to the SecurityMockMvcResultMatchers class and corresponding tests to enhance authentication verification capabilities during testing
vpc : set vpcid to null when vpc be delete
[ flink - 10955 ] [ test ] disable flink savepoint test for 1.11
changed the visibility of several fields in multiple Java files from package - private to package - private to ensure consistency in accessibility within the package
updated loop condition and condition in Actor . java to improve clarity and correctness in action processing logic
updated ` BitmexStreamingExchange ` to extend ` BitmexExchange ` instead of ` BaseExchange ` to improve compatibility with the Bit
add test to prove that orgunit and orgchild orgunits have the same relationship type .
added null check for spatial before checking if it is an instance of Geometry to prevent potential NullPointerException when spatial is null
updated conditions in ConditionalTokenFilter and added position increment functionality in FixedShingleFilter to ensure accurate token filtering behavior and improve test coverage
[ fix ] unsafestorenode should not use graph . unique ( ) .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to check if the CAS event repository is empty to ensure that the event repository is not empty before proceeding
rename parameters of ` attributeTemplateName ` and ` attributeLine ` to ` attributeCol ` in ` AuthenticationAttrProcessor ` to improve clarity and
added null check for the specified key in MacOSXPreferences and created a new RemoveNullKeyCheck class to ensure the key is not null
added a method to set the typeface in CodenameOneTextPaint to ensure that a runtime exception is thrown when the typeface is
implemented the ` open ` method across multiple classes to provide a standardized way to open files with different types of input streams
simonstewart : remove the deprecated webdriverrunner . fail ( )
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
added a private boolean ` useConstructorMappings ` and modified the ` createResultObject ` method to directly use the result object to improve clarity
update SQL syntax in CreateTableGeneratorTest . java to use double quotes to ensure proper SQL generation for foreign key references
added filtering logic in VectorizationContext to handle different types of primitive and boolean cases to improve the handling of filter expressions in vectorization
changed the type declaration of ` moveSelectorConfig ` to a parameterized type ` < MoveSelectorConfig > ` to improve type safety by explicitly defining
removed the instantiation of ReorganizeTableStatement in ModifyDataTypeChange . java to streamline the code by eliminating unnecessary parameters
updated references to ` cluster _ name ` to ` CLUSTER _ NAME ` and ` DEFAULT _ CLUSTER _ NAME ` across multiple files to
refactor peer connection handling to improve error handling and logging to enhance clarity of connection failures and provide more informative logs
Nano style handling for various bold , bold , faint , hidden , and underline styles to enhance flexibility in styling for different text
fix datafixer . fixup ( ) now take adventure tag into account .
changed the return value from " Use ` String " to " No # toString ( ) on String " to clarify the purpose of the
updated memory allocation threshold from 64MB to 32MB in TestThreadFailure . java to optimize memory usage for improved performance
updated the ` retryFailed ` method to return ` FailureContext ` instead of ` int ` and added new classes ` DataProviderRetryAnalyzer `
change return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure correct retrieval of the
simonstewart : add a new method in the selenium - backed selenium implementation for the selenium - backed selenium module .
refactor ` doPrintEntry ` method to remove the ` printWarning ` parameter and streamline warning handling for non - Windows store type to
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for undecorated components in Dialog and Frame classes to ensure that dialog and frame components are opaque and have default shape to prevent illegal
made the state variable final in DefaultProjectFilesystem . java to ensure immutability of the state variable
added support for standalone Redis configuration in RedisObjectFactory to enhance flexibility in Redis connection management
add ` ` lastseen ' ' configuration property to control whether to send a message after the message have be receive .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method call to
refactor share operation creation to use a new OperationsService class to improve code organization and facilitate sharing functionality
add miss @ inject annotation to fieldpropertyinject . fix # 727
modified y - coordinate calculations in ClassicPlotManager . java to use a variable for the minimum build height to improve code readability and maintainability
simonstewart : check for nullpointerexception in smackintegrationtestframework
fix a bug in exifreader . readexifjpegwithinteropsubdir and add a test .
added support for a new enabled LS mode in VersionTargetGraphMode and modified executor assignment logic in VersionedTargetGraphCache to enhance flexibility in
added a check for video format before processing media and default renderer in DLNAResource . java to ensure that media and defaultRenderer are only
updated AutoMlClient . java and AutoMlClient . java files to improve code organization and maintainability
added a boolean flag ` load ` to ` LwjglNativesLoader ` and modified the ` load ` method to check its state
updated CSVRequestHandler to support escaped characters in the encapsulator to enhance flexibility in handling special characters in CSV parsing
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure only supported grant types are accepted and improve
updated error messages in Throwable . java for clarity and added a new method to check for self - suppression issues to improve error reporting and
added a SQL query to retrieve a count of a _ string from aTable and modified the iterator ' s constructor to include a null parameter to
added the " RSquare " property to the RegressionEvaluator and a corresponding test in StreamExpressionTest to provide accurate representation of the RS
added request header handling to ThreadContextMDCServletFilter to improve context management by associating request headers with corresponding HTTP headers
refactor ` SparkPlanGenerator ` to use a local variable ` mapWork ` for better readability to improve code clarity and reduce casting
refactor image handling in PdfJndiReport and PdfSessionInformationsReport to use a caching mechanism for folder and country images to improve performance
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added new test cases in JwtIssuerAuthenticationManagerResolverTests to improve caching behavior and
updated resource check from exists ( ) to isReadable ( ) in AbstractScriptDatabaseInitializer . java and added a new test case in AbstractScriptDatabase
added a boolean parameter to the Function constructor and modified related methods in LLVMInteropType . java and CxxMethodsTest . java to
removed redundant sleep calls in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary delays
added a new file ` KernCrash . java ` that demonstrates font rendering in a graphical application to demonstr
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure proper failure handling during tests
added a new method ` getInterfaceAddresses ( boolean addPrefix ) ` to retrieve network interface addresses to facilitate the retrieval of IP
cancel housekeeper task if it ' s already shut down . fix # 163
updated the client address check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java `
updated assertion methods in Assert . java to improve accuracy and performance of assertions
added a new test class ` Issue247Test ` to verify the functionality of creating and manipulating a tree map in a database to ensure
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added checks for today ' s leap year and birth leap year in ValidatorTest . java to ensure that validation does not exceed the maximum age for
added error handling by introducing lookup for " alarm _ codes " and " error _ codes " in GrblController . java to improve
added a conditional check for zero screens before formatting the home button label to ensure the correct label is used when there are no scre
removed the ' count ' parameter from the ' getTrades ' method and related calls to simplify method signature by eliminating unnecessary parameters
updated ConsoleReader and MemoryHistory classes to improve handling of null prompt and streamline string processing to enhance robustness by preventing null pointer exceptions
updated jdkPath assignment to remove " . jdk " suffix to simplify file path construction for better readability and maintainability
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with direct calls to ` input . getType ( ) ` in multiple
updated JFCModel constructor to accept a logger for warning messages to improve logging flexibility and provide more informative messages
added a check to ensure the tolerance is positive in MaximumInscribedCircle . java to enforce that the tolerance parameter is valid and prevent potential errors
added methods to create and drop views in TestUtil . java and implemented a test for view privileges in DatabaseMetaDataTest . java to enhance database
added support for testing stable floating - point and double values in NaNTest . java to enhance robustness by preventing invalid tests from being
added a new file DesktopTaskbarUIController . java and modified TaskbarManager . java to include a new class for managing desktop task
add a progresskeeper listener to notify mod when task count change .
refactor file handling methods for improved clarity to enhance code maintainability and readability
updated method parameters and variable names in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to improve clarity and consistency in naming con
removed the @ FunctionalInterface annotation from DomainAwareServicesManager and modified the implementation of DomainAwareServicesManager and ChainingServicesManager to simplify
add log to resourcepackloader for good debug
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
added grow ( ) and growX ( ) methods to Cell class to improve cell management functionality
refactor DefaultInputHandler to use generics for keyStroke and ActionListener to improve type safety and simplify binding management
resolve http : / / issues . apache . org / activemq / browse / amq - 2638 - fix test failure
replaced long array with byte array and added a memory fail count check in MetricsMemoryTester . java to optimize memory usage by using a
deleted the JobParametersPrototype . java file to remove unused or redundant parameters from the batch framework
added a securityEnabled field and modified methods in MappingsTable and TableResolverImpl to conditionally invoke uncheck calls based on security settings to
updated references from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ EXPORTED _ OBJC
changed DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable dump functionality during testing
updated the ` codecNeedsEosPropagationWorkaround ` method to accept ` MediaCodecInfo ` instead of ` String ` to enhance compatibility with
[ java ] only update the publisher limit when a spy be available .
added a condition to check if ` dbInfo ` is null and ` options . getOutputOptions ( ) . isNoInfo ( ) ` is
enable ssl by default when port be not specify
added DOMOutputOptions to the buildDOMSubtree method to improve error output formatting for latex elements
updated assertion methods in Assert . java to improve accuracy and performance of assertions
[ java ] add ` ` retain ' ' property to publish and session interface .
updated JSON serialization tests to include a test case name for better clarity to enhance test coverage by associating test cases with specific test cases
[ hotfix ] [ table - planner - blink ] fix typo in sqlgroupedwindowfunction
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java
improve thread safety of ssl _ ctx _ set _ timeout
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` and refactored the ` Watcher `
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to support ANSI SQL
changed log level from debug to trace for missing firmware update handler to provide more detailed logging for troubleshooting purposes
added tests for handling null values in date and timestamp fields in GetObjectTest . java to ensure correct behavior of date and timestamp retrieval in the database
refactor string handling in StringSubject , Subject , CustomFailureMessageTest , and RelabeledSubjectsTest classes to improve code readability
added a test method to verify repository permissions for multiple teams in UserModelTest . java to ensure correct handling of repository permissions for different repositories
added a new file Test7088020 . java that demonstrates method handle behavior with incorrect argument types to ensure proper error handling
refactor audience restriction checking in ` Saml2ResponseValidator ` to use a ` Set ` for unique audience URIs to improve clarity and
replaced the ` afterAppAuthChanged ` method with a new ` refreshLocalCache ` method in ` AbstractDataChangedListener ` to stream
replace direct usage of ` System . err ` with null handling for ` _ stderr ` in ` StdErrLog . java ` to avoid potential
added a new warning constant for separation order and implemented a check for active stages in the simulation engine to ensure that separation order is enforced correctly by alerting when not exactly one stage is active below the current stage
updated query optimization parameter from offlineTableConfig to realtimeTableConfig to improve query performance by using real - time table configurations
refactor SQL creation and disable HBase normalizer in the PhoenixHBaseAccessor and UpgradeCatalog240 classes to improve code clarity and
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass handling and unit tests in ShadowBluetoothDeviceTest . java and ShadowBluetoothDevice . java to enable testing of Bl
fix checkstyle issue in util / glow / glowOfflineplayer . java and glowplayer . java
FEEL _ FUNCTIONS : add support for sum ( [ ] ) with null and empty list
replaced ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with a direct call to ` graph . readUnlockAll (
update coreNodeName assignment to use getCoreName ( ) instead of coreName to ensure consistency in naming conventions for node properties
remove the refresh request when the contact list be update .
rename TaggerParserPosTagCompatibilityITest . java to TaggerParserPosTagCompatibilityITest . java to improve clarity and maintain
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
modified the conditional check in ` mmm Types . java ` and added a new class ` T7005671 . java ` with multiple type
updated triangle calculations in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTriang
updated multiple Java classes to include ` @ Override ` annotation to enhance code clarity and ensure proper method overriding
refactor JWTClaimsSet creation to use the builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl to use a new variable for state changes to improve clarity and maintainability of the code by
added shadow methods for SQLiteDatabase and ContentValues in Robolectric , and removed deprecated methods from ShadowContentValues and SQLiteDatabaseTest to
replaced ` initGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced the ` bytesPerDim ` variable with ` ArrayUtil . ByteArrayComparator ` and updated the comparison logic to use a more efficient approach to improve
updated Locale . java to include a script parameter and modified locale retrieval logic to enhance flexibility in locale handling and improve default locale configuration
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct text alpha is returned for the last set
updated warning message from " Confimap PropertySources does not match " to " ConfigMap PropertySources does not match " to clarify the accuracy
replaced specific test class imports with a method call to UaaJunitSuiteRunner to streamline test suite setup for better maintainability and
trim whitespace from token values before adding them to the ` _ mimeTypes ` , ` _ excludedAgents ` , ` _ excludedPathPatterns ` ,
updated the outputType assignment in Response . java to ensure consistency in output type handling
updated the regex implementation property from JDK to JONI to ensure compatibility with the latest regex implementation
replaced ` Handler ` and ` Message ` with ` FutureTask ` and ` Consumer ` for better concurrency handling in ` ViewCapture ` to
fix for ticket : 143 -- add / styles query parameter to get style information
added a check to ensure the parent directory exists and is created before creating it to prevent errors when attempting to create a folder that does not exist
updated bind IP fallback from 0.0 . 0.0 to 127.0 . 0.1 in the logger and nodeDiscoveryBindIp
camel - jbpm - move handler from inonly / out to inout / camel
pdfbox - 2576 : remove unused import , a suggest by valerybokov
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` and updated text handling in ` AllAppsGridAdapter ` , ` All
updated multiple Java files related to DalvikThrowAnalysis , IDalvikTyper , FloatOpTag , IntOpTag ,
refactor type parameter handling in DefaultJavaPrettyPrinter to improve clarity and maintainability of type parameter processing
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated error message format in QueryByExamplePredicateBuilder . java and modified replacement logic in StringQuery . java to enhance clarity of error messages
replaced cumulativeStats with atomicLong and updated related methods in ConcurrentLRUCache and FastLRUCache classes to improve thread safety and performance
replaced ` runInJavaFXThread ( ) ` with ` runAndWaitInJavaFXThread ( ) ` in ` DefaultTaskExecutor
update network address management logic to check for intended destination instead of local host to ensure correct identification of network addresses based on the intended destination
set the database root and source root for the main frame to ensure the application uses the correct database context
added constructors to MarkedClientEnabled and MarkedServerEnabled classes to enable logging of enabled clients and servers in specified modes
[ hotfix ] [ table ] fix typo in tableenvironment javadoc
updated statement timeout handling in MapperBuilderAssistant and modified fetch size in ExecutorTestHelper to ensure a configurable timeout value for better control over statement
refactor method signatures to remove the hangingTscTimeout parameter and simplify method calls to improve code readability and maintainability by reducing
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and Geo
updated precondition checks in ArtifactFilesystem and refactored tests in ArtifactFilesystemTest to ensure artifact integrity and correct path resolution to improve clarity in
tika - 1352 -- add unit test for j xl file , and fix a bug in summaryextractor
avoid concurrent modification of condition list in ggb script
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5582 .
added validation for ` actual ` and ` hasValue ` methods in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated logic in BackgroundAppState and ShelfScrimView for determining the visibility of the all apps header and improved hotseat
fix an npe in the matdef editor when the mouse pointer be close .
mow - 103 fix bug with mow - 103 and mow - 103
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve error reporting accuracy during exception scenarios
[ astro ] use schedulewithfixeddelay instead of scheduleatfixedrate
updated the initialization of ` irrUnit ` and ` pemUnit ` to use the ` lastTexUnit ` and ` lastTexUnit `
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily skip tests due to hangs
updated import statements in GuiceFactoryTest . java to include specific Google Guice classes to enhance dependency injection capabilities and improve code clarity
added a ` systemFeatureList ` to manage support for system features in ` RobolectricPackageManager ` to enable tracking and management of
refactor RCAFrameworkLoader to support multiple paths and add a new test class RCAFrameworkLoaderTest to enhance path handling functionality and ensure
removed logging of the " Started cancellation watch dog " message to streamline logging for better performance and clarity
added null check and initialization for enumerationValues in RADProperty . java to ensure that enumerationValues is properly set to null when it is empty
replaced the ` needInline ` boolean with ` needStartText ` and ` needEndText ` variables in ` BoxBuilder . java `
replaced the method ` collectAndSendTelemetryData ` with ` collectAndSendTelemetryDataAsynch ` and added a new method
removed unnecessary database type checks for altering the column type in UpgradeCatalog260 . java to streamline the code by eliminating unnecessary
updated error messages in BaseTableDataManager to provide clearer guidance on available space and write permissions to improve user experience by providing clearer
updated methods in DatasetUtilities to improve data handling to enhance performance and accuracy of data processing
added a line to append the selector ID to the key in the Matcher class to enhance the functionality of the key to include the selector ' s
gouraudshadingcontext : fix typo in debug log message
updated taskbar alpha handling and introduced taskbar visibility management in multiple controllers to improve taskbar visibility control and enhance user experience during device dream
removed unnecessary lines from KeyExchange . java to improve code readability and maintainability
added a check for JdbcConnection before executing the version check in CockroachDatabase . java to ensure compatibility with JdbcConnection before executing the
updated file index handling in ServerMainTest . java to use a variable for file names to improve code readability and maintainability by avoiding
added methods to get media recordering MIME type in CodenameOneImplementation , MediaManager , Display , and ImageIO classes to standardize
changed the access modifier of the ` useShaders ` method from private to public and updated references in ` RenderTileEnchanter `
updated the BindableFilter condition to include an OR operator and adjusted the return value from " C = 6588 " to " C = 1
updated ZkStateReader instantiation in CloudSolrServer . java to ensure consistency in ZkStateReader instantiation
pdfbox - 4892 : remove unnecessary whitespace , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
changed the condition from ` if ` to ` while ` in ` UrlHelper . java ` to ensure all HTML scripts are processed in a loop
updated the method name from ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modified the handling of varargs access in
refactor border property checks into a separate method for clarity to improve code readability and maintainability by reducing duplication
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during debugging
updated the ` attachProjectToConnection ` method to include ` HubRegisterResponse ` and modified the return type of ` register ` to ` Hub
replace bitwise operations with Byte . toUnsignedInt for byte manipulation in multiple Java files to ensure proper handling of unsigned integer values in byte manipulation
[ hotfix ] fix checkstyle violation in ` ` opentracingtransactionproducer ' '
change default value of CachingBuildEngine ' s DepFiles . ENABLED to DepFiles . CACHE to ensure the caching mechanism uses the correct cache
changed the ` rangePannable ` variable from ` true ` to ` false ` in ` CategoryPlot . java ` to ensure that the
modified the logic for adding and removing the work mode switch view based on the current active page to improve the handling of the work mode switch '
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` variables to private in ` Visualizer2TopComponent
added handling for CancellationException in FunctionTest . java to improve error management during cancellation operations
change access modifiers of constructors in JarFileResource and JarResource classes from package - private to protected to allow subclasses to access these constructors for better
refactor DefaultTrackSelector to improve track selection logic to enhance performance and maintainability of the track selection process
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper synchronization during compaction operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest to reflect the correct currency being tested for trading
updated method names and refactored assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to improve clarity and consistency in
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
modified the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
reformatted the call to ` delegate . onComplete ( ) ` in ` SendHeadersFirstPublisher . java ` to improve code readability and maintain
change awsmodule to use jsonpojobuilder instead of jacksondeserializer for deserialization
added support for handling BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve robustness by providing clear error messages for unsupported value types
update variable names from ' inner ' to ' javacProcessingEnvironment ' in TreeBackedProcessorWrapper . java to improve clarity and consistency
removed the printing of annotations from generic parameter types to clean up the code and reduce unnecessary console output
do n ' t play ac3 when use native video
[ localnode ] add content - type header and content - type to httpresponse .
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to suppress warnings related to deprecated methods
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` and modified ` DataNodeTemplateSchemaCache
refactor RTimerTree class to improve code structure to enhance maintainability and readability of the code
updated package structure from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
* fix issue # 358 by use round instead of round
updated thread and scheduler initialization in ClientConnector . java to include unique names for better debugging and tracking
replaced protected JScrollPane and JSplitPane with private JScrollPane and JCheckBox for improved encapsulation and layout management to enhance accessibility
added phone number and phone number documentation to ScimUserEndpointDocs . java to clarify the purpose of the user ' s phone number
changed class access modifiers from package - private to public and added private constructors in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes
added null check for responseMap in JsonHttpPropertyRequest . java and error logging in URLStreamProvider . java to improve error handling and provide
refactor SolrRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if ` DEFAULT _ PARALLEL ` is not equal to ` DEFAULT _ PARALLEL ` in `
fix checkstyle issue in cloudstack / vmware / testvmware . java
updated CardImpl initialization and modified condition in TerminalImpl to include SCARD _ E _ NO _ SMARTCARD to ensure proper handling of smart
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during tests
camel - 16400 : camel - bindy now allow to bind a list of object to a key - value pair .
disable use of owner / timestamp by default for jabref
updated method signatures of ` runAndCheckException ` to use ` ThrowingRunnable ` instead of ` Runnable ` to enhance type safety and improve exception
added null checks for via , viaContext , and pathFromSeed in CrawlURI . java to improve robustness by avoiding potential NullPointerException
camel - 14263 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from 4.1 . 1 to 4.2 and refactored object retrieval methods in LiquibaseXMLTransformer to
change default value of ` ` proxy . cert . validity ' ' from 7 to 90
added smoothDelta variable and updated delta calculation logic in ThreadHandler . java to improve accuracy in timing calculations and enhance performance
added null check for paginator and table name in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of pagination in SQL queries
added null check and logging for compaction info client in Worker . java and implemented a test case in TestWorker . java to ensure that the worker
refactor fragment state handling in ShadowFragmentActivity and add a test for onSaveInstanceState method in FragmentActivityTest to ensure that fragment state is
reformatted code for improved readability in BatchResourceFactoryBean . java to enhance code clarity and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the color resource loading correctly identifies and returns a color value
added error handling for NoResultException in AbstractJPAQuery and a new test for uniqueResult in AbstractStandardTest to improve robustness of
refactor community creation logic to check if the owner is null before adding it to the communities list to improve clarity and correctness in
updated the method to retrieve the wallpaper depth effect from LawnchairApp to ensure compatibility with the latest Lawnchair application context
removed an unused import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method across multiple classes to simplify the method signature and eliminate unnecessary
modified the ` toString ` method in ` ExtensionStack ` to handle null values for extensions and added a test case in ` ExtensionStackTest `
2 . x : fix flatmap to properly dispose on cancel error
added connection manager timeout settings to MultiGetRequest and improved error handling in ServerTableSizeReader to enhance connection management and provide clearer logging
reformatted the assignment of androidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to utilize the
removed duplicate fetchers for SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java , and modified the inlineImage
updated caching logic in CachingBuildEngine and added a new test in CachingBuildEngineTest to ensure correct output hash calculation when caching is
camel - 16400 : add usebytebuf option to camel - netty to allow to turn off the use of bytebuf in the
updated the partition alteration method to use the table ' s qualified name instead of the old name to improve clarity and accuracy in partition management
improve error message when vertx be create with prefernativetransport option set to true
move color type handler to coretypes package and add test
refactor StreamEx class for improved readability to enhance maintainability and facilitate easier debugging
removed hint settings for query timeout and lock timeout in SessionImpl . java to streamline query performance by eliminating unnecessary hint settings
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to facilitate the binding of static logger
replaced multiple instances of ` put ( family , list ) ` with ` put ( family , set ) ` in ` familyMap . java
updated orientation checks in TaskbarManager to include new and old orientation values to ensure proper handling of screen orientation changes during updates
unescapes xml in chat room ' s nickname to prevent xmpp contact from disappear .
updated the ` longStackPut ` method call in ` StoreDirect . java ` and added a new test class ` Issue265Test . java
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to improve code clarity and suppress warnings related to mutable operations
jbrules - 2601 : remove dependency of brokentest to fix build
updated spacing in conditional statements for consistency and clarity to improve code readability and maintainability
modified NBWriteServlet and TestWriteListener to accept an unlimited flag to enhance flexibility in handling unlimited scenarios during tests
do n ' t update total difficulty when mine light ( # 113 )
simplified action assignment logic in DefaultPlaybackController . java to improve code readability and maintainability
replaced synchronized list with CopyOnWriteArrayList for managing known libraries and modified method signatures to accept a jceSecurity class to improve thread safety
added uniform allocation and modified position calculations in AllAppsView . java to improve performance by adjusting texture dimensions and position calculations
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper validation of the key format
added PrincipalResolver to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enable principal resolution for authentication processes
replaced ObjectMapper with ObjectBuilder for JSON handling in DelegationTokenResponse . java to improve compatibility with NogGit ' s JSON parsing features
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve string manipulation by eliminating unnecessary slashes
added methods ` matchesAny ` and ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to
hbase - 26458 improve error message when bulk load fails
fire fire event for potion that do n ' t need to be cancel .
updated the method call format of ` beginOrAdjustReorderPreviewAnimations ` in ` CellLayout . java ` to improve code readability
updated calculations for decreasePercent and increasePercent in ContractStateCapsule . java and modified conditional checks in ReceiptCapsule . java to improve accuracy
added debug logging for input state checks and improved readiness handling in AsyncContentProducer and BlockingContentProducer to enhance debugging capabilities and ensure correct
added a validation check for the weightField parameter in DocumentDictionaryFactory . java to ensure that weightField is mandatory to prevent runtime errors
updated plist variable substitution logic in AppleBundle . java and added a new test for plist variable substitution in AppleTestIntegrationTest . java
fix turret bullets not take into account .
updated the ` adaptOrder ` method to return an instance of ` OrderCreateApiRequestBuilder ` and changed its return type to ` Object ` to
added a new file ` PreParseGrammarTest . java ` for testing XML schema parsing functionality to facilitate testing of XML schema preparation
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotations to multiple Java files to suppress warnings related to missing fields in serialization
added FontManager imports and method calls to override font in ExtendedEditText . java to ensure consistent font management across the application
sec - 174 : return an empty list in authorizetag if no user be find .
camel - 16400 : fixed the cxf test error of camel - cxfrs
added a setUpData method to JDBCGeometryTestSetup class to provide a default implementation for data setup
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] stop restore attempt for already cancel task in backendrestorerprocedure
add server . rmi . create property to control whether to create rmi registry .
replace string . join with stringutils . join for anticompact
added display metrics retrieval and modified test cases in multiple classes to enhance accuracy in handling display metrics and improve test coverage
[ java ] add cluster member id to service heartbeat counter .
added conditional handling for total thread allocated bytes based on version checks to ensure compatibility with devices running versions 21 and above
added handling for negative and positive infinity results in CustomExpression . java and updated hash code calculation in CustomExpression . java to improve robustness of
updated logging statements in AjaxListener . java to use placeholder syntax and improved error handling to enhance code readability and provide clearer logging messages
added GET and POST routes for authenticated and authorized operations in the AuthenticityController and implemented corresponding tests in AuthenticityControllerTest to enhance
add assertion to ensure node be alive in lower phase .
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
fix track selection bug in defaulttrackselector
[ hotfix ] fix checkstyle violation in runtimeserialization
ggb - 1842 image with cropbox do n ' t draw at the top of the screen .
refactor UnitOfWorkFactory to improve code readability to enhance maintainability and facilitate future development
added ` allAppsCellWidthPx ` to ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and ` WidgetCell ` to
tika - 3746 -- allow to specify a filename for mail content - disposition .
updated the URI construction in ThumbnailsCacheManager . java to use fileId instead of remotePath to improve clarity and correctness in URI generation
added mark support and reset functionality for input in Source . java to ensure proper handling of input state and prevent memory leaks
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new development
added configuration option to control showing or hiding error stacks in the server to improve user experience by allowing customization of error stack traces
server : fix deletion of domain , account , and template in case the cleanup fails
[ sparc ] remove unnecessary check for null foreign call
[ drools - 7 ] add support to decisiontableconfigurationadapter for legacy dsl 5 . x api
added a new ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to run on the UI thread to ensure that
[ beam - 11349 ] increase default timeout for unboundedsourcesystemtest
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct handling of resource names
deleted files MrefStat . java and MrefStat1 . java to remove unused code to streamline the codebase
replaced direct call to ` match . getRequested ( ) . getScope ( ) ` with a conditional check using ` StringUtils . isBlank ( )
added error handling for " no trades " and " bad status " in BTCETradeServiceRaw . java to improve robustness of
( chore ) camel - core : use hamcrest assertion instead of junit in examples / microprofile / emitter / unwrap /
add payment protocol request url to bitcoinuritest .
planner - 383 : improve error message for unsupported variable type
removed redundant assignment of folder information in FolderPagedView . java to streamline code by eliminating unnecessary duplication
fix deadlock when release the lock .
replace stream . of ( objects : : isNull ) with a for - each loop in BasicAbstractTuple . java to improve code readability and
updated LintUtility to use InputResourceUtility for loading linter configs and improved error handling to enhance resource management and provide clearer logging for
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post to ensure UI updates occur on the main
fix npe in inventory # tickevent ( # 1193 )
add support for the OCELOT _ BABY event type in PlayerEvents . java to enhance gameplay experience by allowing users to
[ hotfix ] [ state ] add @ publicevolving annotation to statettlconfig
added null check for parameter ' x ' in PreparedStatement . java and adjusted array handling in Array . java to ensure proper handling of null values and
[ java ] add ` ` describe - all ' ' and ` ` describe - all ' ' to archive tool description
replaced string concatenation with a single quote in append0 method to improve performance by avoiding string concatenation overhead
added a new test method ` jsonSnapshot ` in ` SiteSnapshotVariationsTest . java ` to validate JSON snapshot serialization to ensure that the
added a new method ` removeTheTxAndBlock ` to handle transaction and block removal in ` BroadTest . java ` to improve test
added support for enabling / disabling Lens mask features in AmcrestHandler and DahuaHandler to enable or disable features based
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildRule
refactor ChangeLogIterator to accept a List of ChangeSetFilters as a constructor parameter to improve flexibility and maintainability of ChangeLogIterator
do n ' t swallow guest exception in launcher .
[ ec2 ] use getenvorsystemproperty instead of getenv
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor the method for dropping parent elements in SpacesVisitor . java to improve code readability and maintainability by using a more conc
add servercachemanager . copy ( ) for backwards compatibility
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` and updated its usage throughout the ` WorkspaceAnd
replaced ` LIVE _ URI ` with ` PROD _ URI ` and updated exception handling in ` KucoinExchange . java `
corrected string concatenation syntax and improved path replacement logic in SpringResourceAccessor . java to enhance code readability and maintain consistency in path handling
[ smarthome ] fix microwatt unit for megameter ( # 6373 )
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to retrieve
deleted the Tls12SocketFactory . java file to remove unused or redundant code from the project
fix npe when use texbibentriesresolver ( # 8331 )
added compatibility check for Robolectric legacy mode in ResourcesTest . java to ensure that legacy resources are not used in Robolectric
added a condition to return " DOUBLE PRECISION " for FirebirdDatabase to ensure proper handling of double precision data type for Firebird databases
added null checks for dataSource and transactionManager before initializing them to ensure proper initialization and avoid potential NullPointerExceptions
add a package - info . java file for the sandbox unittest stub module .
updated command from " ping - c5 www . google . com " to " ping - c5 127.0 . 0.1 "
no effective change - code cleanup - use try - with - resources
updated TermScorer instantiation to conditionally use FREQS or NONE based on scoreMode to improve flexibility in scoring behavior based on whether
fix npe in dataflowmetrics when there be no metric update
server : fix npe when vm be deploy - in and vm be not deploy - in
updated the DynamicPartitionPruner to use a new method for finding the target object inspector to improve code clarity and maintainability by encapsulating
added a method to remove build artifacts from artifacts in ArtifactFilesystem and updated ActionExecutionStep to call this method to ensure that existing build artifacts are
added row selection logic in ThrustCurveMotorSelectionPanel . java to enable selection of multiple rows in the table
rename assertthrows to assertthrowsarraystoreexception in integration test .
refactor PropertySource class to improve code readability and maintainability
added user agent handling to HttpClientBuilder and HttpClientConfiguration classes to enable dynamic configuration of the client ' s user agent
refactor session restoration logic to use a reusable method to improve code readability and reduce duplication in session management
updated assertions in IssueTest . java to include an error message and changed the type of results from HashSet to Object in Reporter . java to improve
updated file content type handling in ConsumeEWS . java to ensure a default value is used when no content type is provided
fire a new activationrequestdenied event to notify the user when an activation request be cancel .
fix checkstyle issue in util / graphapplet / graphapplet . java ( # 786 )
added a new method ` updateTaskViewsSnapshotRadius ( ) ` to update the snapshot radius of task views to ensure that the snapshot radius updates
added logging functionality and modified schema generation process in StaticMicroserviceVersions . java to improve traceability of API schema generation for 3rd party services
changed the return type of the put methods from void to int in ArrayMap . java to provide an indication of whether the put operation was
updated KafkaContainerCluster to set startup timeout to 1 minute and refactored related code for improved performance and readability
[ issue # 5868 ] fix the retry logic of push consumer ( # 5869 )
update header checking logic in StaticServerHttpHeadersWriter and add a new test in StaticServerHttpHeadersWriterTests to ensure headers are only written
added package access check before dynamically loading a listener class to enhance security and prevent potential issues with package access in event listener management
added a custom adapter class for managing a ListView in the ApplicationsFragment and updated the onCreate method to utilize it to improve the
updated applyIcon method to accept nullable ImageView and Task parameters to enhance flexibility in handling different task types
refactor DownloadTracker and DownloadManager to use try - with - resources syntax to ensure proper resource management and avoid potential resource leaks
fix ( sql ) : fix sqm to sql ast conversion
added JUnit @ Test annotation to HibernateCursorItemReaderIntegrationTests and updated method visibility in HibernateCursorProjectionItemReaderStatefulIntegration
added a new ` Poller ` constructor and modified the handling of slip messages in ` DataInputStreamWithTimeout . java ` to improve thread safety
added ENABLED _ TS constant to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management
updated UpgradeCatalog150 . java to modify import statements to improve code organization and maintainability
rename ` testnet3 ` to ` oldtestnet ` in ` networkparameters `
do n ' t update selection when there ' s only one geo
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code clarity
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and refactored the ` flushBuffer ` method in ` HdfsDirectory `
pdfbox - 4892 : do n ' t set clip if it do n ' t exist
simplified the condition for setting localAddress in SocketChannelImpl . java to improve code readability and reduce unnecessary synchronization
refactor the conversion logic in TemplateTransformer to use a new addToRow method to improve code readability and maintainability by encapsulating the conversion
added a method ` isWindows ( ) ` to check if the operating system is Windows and modified ` Wallet . java ` to use this method
replaced the ALPHABET _ STRING constant with a CHECK _ DIGIT _ STRING constant in Code39Reader . java and Code39Writer .
do n ' t expect a void return type if the method do n ' t expect it .
removed unnecessary check for fieldType . stored ( ) before writing fields to improve code readability and maintainability
fix ( sql ) : fix truncation of timestamps with nan
removed unnecessary conditional check before accessing executedRunnables in LwjglCanvas . java to streamline the code for better readability and
add miss space to description of default storage url
replaced the ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve thread safety by ensuring
replace ` null ` with " single " in ` get ` calls in ` CachingDirectoryFactoryTest ` and ` RAMDirectoryFactoryTest `
refactor FaultTolerantChunkProcessor to replace size management with filterCount and simplify data retrieval to enhance clarity and maintainability of filter
updated the ` tabbedMethod ` method to include a newline character and improved error handling in ` T4994049 ` to enhance
replaced multiple instances of ` return ` with ` assumeTrue ` in ` ConsoleReaderTest . java ` to improve code readability and maintain
remove unnecessary check for user ' s admin status in getfeedbacksessionsaction
updated calculations for newSelection and adjusted threshold values in AllAppsView . java to improve the responsiveness and responsiveness of the application
bugfix # 211652 - do not call notifyclientonresultsavailability in threadinfo . getinstance ( )
added logic to load model list and refresh the model list in DataModelManagerDialog . java , and modified connection list handling in DbConnectionDialog
replaced the ` writeBufferSize ` variable with a static final ` WRITE _ BUFFER _ SIZE ` and updated references to use this constant to improve
refactor segment size calculation in DocumentsWriter . java and add a new test case in TestIndexWriter . java to improve clarity and
bugfix : armaturemodifier do n ' t validate armature if it ' s not a valid mesh .
renamed FileDisplayActivity . java to improve clarity to enhance code readability and maintainability
replace direct creation of UnsupportedOperationException with a new instance containing a fillInStackTrace to improve stack trace handling by avoiding the creation of an exception
update label height calculation to use stream and average to improve performance and readability of label height calculations
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display
refactor loop to improve handling of quoted strings to enhance readability and maintainability of the code
replaced Long . valueOf with IdConversion . convertToLong in ServletHandlerInterceptor . java and added a new test in ServletHandlerInterceptorTest .
renamed the test method from ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig (
updated substring method in TestSqlEntityProcessorDelta . java to correctly format the COUNTRY _ CODE _ S string to ensure accurate processing of the
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
updated variable names and variable assignments in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming
modified the ` doBefore ` method to simplify the initialization of ` IndexSearcher ` and changed the visibility of ` seenDocIDs ` to
added a persistent JTable with a JTextArea and a button to add rows to the GcodeTable to facilitate user interaction
updated web app connection timeout configuration to use a configurable value to improve flexibility by allowing dynamic configuration of the connection timeout
updated various Java classes to improve code clarity and structure to enhance maintainability and readability of the codebase
refactor TestMediaService class to improve code readability and maintainability
added a new constant ` HELP _ ABOUT _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` in the ` Messages
add a new file ` MarketsPrintTool . java ` to generate a list of market currency options for BTC , BSQ ,
add hostname validation to the endpointaddressinterceptor ( # 1889 )
added methods ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` to ` AccountProxy ` , ` HttpAccount ` , and `
rename ServerSpanThreadBinder class to improve clarity to enhance code readability and maintainability
updated user pointer reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified the
replaced " Location " with " the _ geom " and " number " with " the _ geom " and " number " in Csv2
updated variable name from ` callGasWord ` to ` gasCost ` in VM . java and removed unused imports in Program . java to improve
refactor parameters handling in the Parameters class to improve code readability and maintainability
added ` setIgnoreNullValues ( true ) ` to ` piePlot ` in ` MultiplePiePlot . java ` to ensure that
refactor bundle loading and expiration handling in ResourceBundle . java to improve clarity and efficiency of bundle management
updated the character variable from ' _ ' to ' - ' in TaggedPdfReaderTool . java to ensure proper hyphenation in output formatting
make allowduringediting configurable for action that do n ' t require it
added a boolean variable ` userModified ` to the ` LoginSamlAuthenticationProvider ` class to track the modification status of the user during authentication
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` NullCipher ` with a null cipher to ensure
changed method names from ` onOpen ` to ` setResponse ` and added a new ` succeeded ` method in ` ConnectPromise ` to improve cl
added support for SNOW and POWDER _ SNOW in the BlockEventListener to ensure compatibility with server versions 1.16 . 5 and
added tradeId tracking and updated Trade instantiation in CryptsyAdapters and CryptsyPublicTrade classes to track the most recent trade ID
added a try - catch block to close the synchronized MSC connection to handle potential exceptions when closing the HMS connection
use random seed in glowserver if seed string be empty .
updated the icon size calculation and added a new device profile for Nexus 5 to adjust the icon size based on the hasAA condition
2 . x : fix refcount ( ) not reset early if connection object be null
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve code clarity and maintainability by utilizing ReflectUtil
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP format in the FormatToken and FormatVisitor classes to enhance formatting capabilities for
updated file existence checks and added new test cases in SaveTask and SaveAndLoadTaskTest to ensure correct handling of empty and non - empty
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during execution
log4j2 - 1349 add support for mutablelogevent in smtpmanager
change PADDING from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper handling of negative length literals in property builders
replaced calls to ` getUser ( headers ) ` with ` createContext ( ) ` in multiple resource files to simplify context creation by removing unnecessary
simplified the exception handling process by replacing stream operations with a stream - based approach to improve code readability and reduce redundancy in the
updated error message in ` AndroidPlatformTarget . java ` to include installation instructions for installing Android SDK Manager to provide clearer guidance on
increased the cache size from 16 to 8 to optimize memory usage for improved performance
added a condition to check if start is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory . java to
added work around for npe in keystoremanagerSpi . load ( ) .
replaced fixed port assignment with dynamic port assignment in UpstreamCheckUtilsTest . java to allow dynamic port assignment and improve test reliability
ggb - 1889 fix problem with panel dimension when add a new one
* add support for arb _ compute _ shader , geometry _ shader _ 4 , and gl _ arb _ tessellation _
refactor PopulatorContext class to improve code readability and maintainability
do n ' t show the save notification for project that do n ' t have change
added charset handling for UTF - 8 encoding in ZQLJobManager to ensure proper character encoding is used for JSON processing
added a check for non - empty arguments before verifying if the last argument is an instance of Table to ensure robustness by preventing potential
refactor header - related constants to use a constant from the decoder to improve code maintainability and reduce hardcoding of header values
added the ` @ Deprecated ` annotation to the ` -- suffix - strategy ` option in ` GenerateJavaSources . java ` , ` Config .
removed debug log statements from DerbyDatabase . java to streamline error handling for missing Derby driver class
fix test which randomly fail on slow ci server
replaced ` . parallelStream ( ) ` with ` . stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance
updated logic for handling ROLLBACK operation and improved warning messages in HubUpdater . java to enhance clarity and provide user feedback when hub
added constants for Java VM version and its success and failure commands in Constants . java and a corresponding test in TestDDRExtensionGeneral . java
modified FontFamily . java to handle CompositeFont messages and added a new DebugFonts class for debugging fonts to improve clarity of log messages
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java to ensure compatibility with HTTP / 1.
added RateControl import and set rate control to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to enhance HTTP / 2
added a new Java file ` Test6741426 . java ` implementing a Runnable for JComboBox and JTextField rendering to facilit
updated the assertion message in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve error reporting for better debugging and
added null checks for ` madeManagedDir ` and ` dbMgdPath ` to ensure that ` madeExternalDir ` and ` dbExt
added package declaration for S3CopyObjectRequest to organize package structure for better clarity and maintainability
refactor setup methods to remove accentColor parameter and use viewThemeUtils for consistency to streamline theme management by leveraging a centralized
updated the error message in TemporaryFolderUsageTest to include the file path to improve clarity in error reporting for folder path validation
replaced raw types with ClassTypeInformation constants for Map and Collection in MappingMongoConverter . java to improve type safety and clarity by using
check for empty or null member address before use it in clientnetworkconfig . addaddress ( )
added a new certificate entry for " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance security by
[ java ] return the result of the pipeline . compute ( ) instead of void .
added a condition to check if the popup triangle has been clicked or if the popup is showing before setting the menu mode to ensure the menu only
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to implement tests for finalizer and heap information
replaced ` . map ( routes ) ` with ` . doOnNext ( routes ) ` in ` CachingRouteDefinitionLocator ` and
refactor the handling of a custom address in BurningManService to improve clarity and reduce redundancy to enhance code readability and
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
increased the size of the longData array from 1 , 000 , 000 to 1000 , 000 and added an @ Ignore annotation to the
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
updated query handling to replace " @ " with " from : " in RetweetActivity . java and Search . java to ensure accurate recents
added a conditional check for rebalance in the SimulatorDiscoverer class to ensure proper handling of rebalance scenarios in the simulation
added a new POST endpoint for importing accounts in YubiKeyAccountRegistryEndpoint . java and corresponding test cases in YubiKeyAccountRegistryEndpoint
updated shader program names from " texture " to " tex " across multiple Java files to improve clarity and consistency in asset handling
added null check for the ` cnt ` variable in ` paintOnTopLoop ` and introduced safe area handling in ` SideMenuBar ` to
refactor AbiWriterProtocol to improve code readability to enhance maintainability and ease of future updates
added null check for subName before setting caption to ensure caption is set only when subName is not null
changed the data flag from IMMOBILE to GRAVITY in EntityItem . java to update the data flag for improved user experience
updated condition checks and improved variable names in CustomExpression . java to enhance code readability and prevent potential NullPointerExceptions
replaced the method ` requestBlindVoteListFromNetwork ` with ` sendRepublishRequest ` in ` VoteResultService . java `
add test case to reproduce http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id
replaced double quotes with single quotes for character literals in SubtitleUtils . java and RemoteUtil . java to improve code readability and performance
replaced the constant LINE _ SEPARATOR with a constant LINE _ SEPARATORS _ RE in DefaultJavaPrettyPrinter . java to improve code readability
simplify singleimplementor snapshot creation by use a compilation final field updater
added null check for excludeSet before adding queries and filters in SimpleFacets . java to prevent potential NullPointerException when excluding main queries
add a bridge to the list of child of a thing ( # 4506 )
replace calls to ` printHelp ( ) ` with specific error messages in ` Ktab . java ` to improve error handling and provide clearer
added a check to ensure the file exists before proceeding with operations to avoid potential errors when the file does not exist
added parsing logic for date strings with plus and minus characters in DateConverter . java and updated tests in DateConverterTest . java to enhance date
added assertions in SpringDataJPALockTest . java and implemented a query method in PostRepository . java to ensure that a post is not
changed the type of ` canAccessDbaRecycleBin ` from boolean to Boolean and added checks for ` canAccessDbaRecycle
added connection and read timeout settings to SimpleClientHttpRequestFactory in ClientRegistrations . java to improve request handling by introducing connection and read timeouts
updated file path assertions and added assertions in SourceTest . java to ensure consistency and correctness of file operations across different operating systems
remove the hardcoded graalvm . version system property from defaulthomefinder
added methods to manage access and refresh token validity settings in ClientAdminBootstrap to ensure proper handling of token validity for clients
update SDK version retrieval logic in Scene . java to ensure compatibility with Android API versions greater than zero
refactor references from ` this ` to ` startIndex ` and ` this ` in ` PropertyPlaceholderHelper . java ` to improve code readability
removed " number , number , # " from the Subject Public Key Algorithm in the Subject Public Key Algorithm string to streamline the certificate details for
refactor ZkSolrClientTest to improve collection tracking and synchronization to enhance reliability of collection processing in parallel environments
removed BigInteger import and associated code from MongoMappingContext . java to streamline code by eliminating unnecessary dependencies
added a condition to check if the button text equals the string resource in HomeFragment . java to ensure that the button text is displayed correctly when
added a condition to check if MEncoderNoOutOfSync is disabled when MEncoderNoOutOfSync is disabled to ensure proper handling of MEncoder
increased the maximum number of event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more
changed access modifiers of several fields and methods from package - private to protected in CountMin4 and updated feedback handling in AdaptiveWindowTiny
added methods to retrieve the file float source and created a new test class for file field sorting to enhance functionality and ensure proper sorting of file fields
updated error message from " Invalid URL " to " Connection error " in DoiFetcher . java to provide clearer context for connection errors
updated event handling in OpenRocketSaver , added source ID handling in FlightDataBranchHandler , and modified event creation in Rocket
changed the access modifier of the ` check ` method from private to protected to allow subclasses to access and override the method
added handling for SynchronizeFileOperation completion in FileActivity to improve user experience by providing a confirmation dialog when synchronizing files
updated URI construction in ThumbnailsCacheManager to use URLEncoder for proper URL encoding to improve URL safety and prevent potential issues with special characters in
added a check to ensure the client property is not initialized before proceeding with operations to prevent potential NullPointerExceptions when the client property is not set
updated the initialization of the ' total ' variable and modified the calculation of ' total ' in the IntHashSet class to correct the calculation logic for
added a lock check before updating feed entries in FeedRefreshUpdater to prevent unnecessary updates when the feed is locked
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve readability and maintainability of the
simplified the creation of the edges array and refactored the sort logic to improve efficiency and readability of the tree creation process
added IOUtils import and closed the input stream in ZkCLI . java to ensure resource cleanup and prevent potential resource leaks
update bibtexparser to not use \ n for comment that do n ' t have newlines .
added strict parameter handling in the Main class and corresponding tests in MainTest to ensure that unknown parameters are ignored when strict mode is set to false
add support for a custom constraint that should not be validate by @ constraint ( validatedby ( ) )
( chore ) camel - http : align http component name to http4
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to improve test reliability by ensuring
simplified conditional statements in UBJsonWriter . java to improve code readability and maintainability
rename ApplicationTest . java file to improve clarity and consistency in naming conventions
changed the type of the ` details ` variable from ` String ` to ` StringBuffer ` and updated string concatenation methods to improve performance and readability
rename Type to RoboType in MethodGenerator , Type , and ShadowWrangler classes to clarify the purpose of the class
[ java ] return abort for archive and subscription when dispatch complete .
added cache key and lookup key handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessorTest . java to improve
added a new file PutfieldError . java to test exception handling to ensure that IncompatibleClassChangeError is correctly thrown as expected
do n ' t allow access to private address in case it ' s already public .
feat ( memtable ) : add log message when memtable be reach threshold
replaced calls to ` Space . build ( String ) ` with ` Space . SINGLE _ SPACE ` across multiple files to standardize the usage
replaced the existing ` encodedLength ( ) ` method with a new declaration in ` Flyweight . java ` to improve clarity and
rename TestMethodResultMapBuilder . java file to improve clarity and consistency in naming
do n ' t use xfactory . createxmethod ( ) in findnull dereferences .
[ hotfix ] [ runtime ] remove unused lock field in tasklocalstatestoreimpl
updated return statements in Utils . java to include " m " and " h " suffix for clarity to improve readability of the returned string
updated handling of DeepShortcutView instances in Utilities . java and FloatingIconView . java to improve type safety and support for DeepShortcutView
updated JwtIssuerValidator to accept an Object instead of a String for the validator and added new tests for issuer URL validation to enhance flexibility in
renamed methods for buying and selling quick rates in Coinmate classes to improve clarity and consistency in naming conventions
added a new CoverageConfig class and integrated it into CoverageController to enable conditional loading of cobertura project data based on configuration
added a check to ensure EventBus is not registered multiple times to prevent redundant registration of sticky events
added asciiOnly flag and modified return statements in NormalizerBase . java to conditionally handle non - ASCII strings to improve performance by avoiding
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added error handling and assertions for the update statistics SQL statement in SpillableGroupByIT and NoOpStatsCollectorIT to improve test reliability
( chore ) camel - cometd / ssl : upgrade to junit4
added ` attrs ( AttrKind . OK , ... ) ` and ` attrs ( AttrKind . OK , ... ) ` to the HR
added a line ending " < br / > " tag to the HTML output in HtmlCoreReport . java to improve the formatting of HTML output
updated ramBytesUsed calculation to account for null scores to ensure accurate memory usage tracking when scores are not present
added StringHolder and StringHolderTypeAdapter classes with custom serialization and deserialization methods to improve handling of string values during JSON serialization and deserialization
added extra data handling in MergeCoordinator and its corresponding test in MergeCoordinatorTest to ensure that extra data is correctly set based on mining parameters
added a static final ` numArgs ` map to track the number of arguments passed to the ` StringUtils . argsToProperties ` method to improve
updated PathParamServerEndpointConfig . java to improve endpoint configuration handling
add shutdown hook for migration rule listener ( # 2369 )
rename parameter ` part ` to ` partOrList ` in the ` attach ` method across multiple classes to improve clarity and consistency in parameter
rename twitterbootstrap to twitterbootstrap to match the name of the resource
remove superfluous basiccategory implementation in spanishtreebanklanguagepack
hhh - 11349 : add entityloader . load ( ) a alias for abstractentityloader . load ( )
hbase - 26462 fix potential deadlock in hregionserverflushtableproceduremanager and hregionserversnapshotmanager ( # 4
do n ' t call setsize when width or height be zero
deprecate fillpool ( ) in favor of fillpool ( ) .
replaced assureMatchVersion ( ) method calls with default value of Version . LATEST in several filter factory classes to ensure compatibility with
do n ' t push resolve interceptor call if the executable method be not an abstract class . fix # 737
[ drl ] fix error when parse a drl expression contain a comma .
updated multiple Java files related to OptionalSubject , IterableOfProtosSubject , MapWithProtoValuesSubject , and MultimapWithProtoValuesSubject
add check for invalid payload length when send a message .
move publishsubscribechannel from ' channel ' to ' dispatcher ' , not ' channel / parser ' .
updated executionId from String to Long across multiple classes to ensure accurate representation of execution IDs in the database dump
added digest updates for width , height , and height in ImageProcessor . java to enhance image processing capabilities by supporting dynamic size adjustments
removed logging of Znode version in SolrConfig . java and added necessary imports in SolrConfigHandler . java to streamline logging and enhance code
updated the delayUntil calculation in FileSyncAdapter . java to improve synchronization timing by adjusting the delay based on the current time
updated the initialization of the last modified time variable in SegmentV1V2ToV3FormatConverterTest . java to ensure accurate time retrieval
refactor ` QueryProcessExecutor ` to use ` Path ` objects instead of ` String ` for path creation to improve type safety and simplify path
updated DefaultPackageScanClassResolver to handle URI parsing and improved error logging to enhance robustness of URL processing and provide clearer error messages
[ flink - 25709 ] [ table - planner - blink ] [ table - planner - blink ] introduce timestampextractor
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` to provide a standardized way to retrieve principal and
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minSdk version annotation from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android
show prompt dialog if user want to enter custom file name on each start
added a new test method ` testNewput ` to ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the method signature of ` stream ` in ` MongoTemplate . java ` to remove the ` collection . getName ( ) ` parameter to simplify
updated zoom factor calculation and adjusted zoom calculation in MapOverviewImageMouseHandler . java to improve zoom accuracy and enhance user interface responsiveness
updated KNearestNeighborClassifier to accept an Similarity parameter and modified related classes accordingly to enhance the classification algorithm functionality by incorporating similarity
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by utilizing a constant score range
updated reason assignment from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to ensure accurate representation of
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added mtu request tests and modified requestMtu method in ShadowBluetoothGattTest . java to enhance testing capabilities for Bluetooth
refactor the ServletInputStream creation to use a separate method for clarity to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and provide better logging for unsatisfied link
[ hotfix ] fix thread safety issue in channelprocessingmanager
updated Japanese resource files to include " all , " " grouped , " and " summary " options to improve user experience by providing clear
updated size condition from ` size > 0 ` to ` size > 1 ` in JDBCTypeMapping . java and modified assertions in JDBCTypeMapping
added synchronized keyword to ` addPlayer ` and ` removePlayer ` methods in ` GenshinScene . java ` to ensure thread safety when
refactor accessibility handling by replacing the isScreenReaderActive method with a new stateTester instance and introducing controlCodes and codeMatcher
updated command behavior and behavior checks in MenuBar . java and modified button handling in SideMenuBar . java to enhance user interface responsiveness
removed unnecessary declaration of Disposable in PoloniexManualExample . java and added state logging in WampStreamingService . java to stream
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java to ensure that contract types are valid and prevent potential errors
renamed ` url1 ` to ` javaUrl ` and added ` protocol ` property to ` UrlBean ` to improve code clarity and
camel - 16400 : added getter / setter for namespaceprefixref in soapjaxbdataformat
refactor assertions in TestRange to use a new helper method for date comparison to improve code readability and maintainability by encapsulating date comparison
added logic to check if the server is running and verify the server ' s security properties in BasicAuthIntegrationTest . java to ensure that the
fix wrong price feed in tradeschartsviewmodel
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a single instance of
updated variable names from ' from ' to ' end ' and added bounds checking for ' end ' in NativeString . java to improve clarity
added functionality to download files using FileDataStorageManager to improve file management and streamline download process
updated the way the RandomAccessFile is created and set its length in MappedRawLog . java to improve resource management and ensure the log length is
added methods to check if a registry is running and to delete a file if it exists to improve reliability of file deletion operations and handle potential
added ` componentPresetDao . startLoading ( ) ` call in ` Quick3dMain . java ` and ` TextureTest . java `
removed unused variables and added multiple suppress warnings in various Java files to improve code clarity and reduce potential runtime warnings
added a null check for instances in TraceFeignContext to prevent potential NullPointerException when instances are null
added support for disabling transaction isolation level in SQLExceptionCode and adjusted related logic in PhoenixConnection and PhoenixDatabaseMetaData
added transaction attribute handling and rollback functionality in multiple step classes to improve error management and ensure proper rollback behavior during execution
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and refactored security interceptor implementation to improve compatibility with the
removed the " add _ category " menu item from the navigation drawer to streamline the user interface by eliminating unnecessary category options
renamed the method ` cancel ` to ` cancelMatchingOperation ` and updated the method name from ` observeDownloadWorkerState ` to ` observe
pdfbox - 4892 : fix classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve clarity and functionality of font size management
check if the fact be valid before attempt to modify it in constantanalysis .
refactor multiple Java files related to build and parsing to improve code organization and maintainability
changed return statement to create a new ArrayList instance to ensure that the returned spans list is a fresh instance of ArrayList
removed unnecessary locking mechanism in Liquibase . java to simplify the code and improve performance by eliminating unnecessary locking
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set the revision to null to ensure that the microservice
updated the way foreignKeyName and indexName are constructed in TableRetriever . java to include column names and their full hash code to improve clarity and
camel - 16171 - add uri - endpoint - override option to all aws2 s3 component - aws2 - s3 component
removed the currencyPair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added a new method in BitstampAccountService
added error handling for NoSuchComponentException in BlueprintContainerRegistry to improve robustness by returning null when component retrieval fails
change pushbuilder . push ( ) to return a boolean when the push be enable .
refactor LegacyAddressTest to read data from a file instead of using a hardcoded base58 string to improve test flexibility by allowing multiple
changed the access modifier of the method findDropTargetAt from package - private to public to allow access to the method from other classes
refactor push warning handling into a separate setup method in NotificationsActivity to improve readability and maintainability of push notification functionality
do n ' t call channel . close ( ) if there be no filter
renamed methods and variables in LdapPasswordPolicyEnforcer for clarity and consistency to improve code readability and maintainability by using more descriptive
refactor DefaultAnnotationEngine and Stubber classes to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to known issues
nifi - 1740 : add timezone support to the aboutdto to allow the user to specify the timezone of the nifi instance
do n ' t split own range if they do n ' t match the number of token
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5382 -
added synchronization around the addition of circuit to the activeCircuit collection to ensure thread - safe access to the activeCircuits list
replace GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
added getter and setter methods for sink and source in SinkRunner , SourceRunner , and PollableSourceRunner classes to enhance encapsulation and improve
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve error handling and provide more informative logging for authentication failures
updated the implementation of ContainerOrderFocusTraversalPolicy to improve focus traversal behavior for better user experience
make sure point length be set for freehand function , not only double
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling in SchemaCrawlerMain and execute method in Executable to improve resource management and ensure proper connection closure
bump default tl version to v1.2 with a fallback for old jdks
updated error messages in CountersManager . java for clarity to improve error reporting for better debugging
updated audio queue handling logic in MediaManager . java to improve audio management by adjusting stopAudio call and ndx calculation
updated debug log statement to include the connection ' s cancelled state to improve log clarity and reduce unnecessary conditional checks
added support for JPA @ Transient annotation in JpaPersistentPropertyImpl and its unit tests to ensure proper handling of transient fields in JPA
updated stack version references from " HDP - 2.1 . 1 " to " HDP - 2.2 . 0 " in Upgrade
trufflevm : make eval ( ) return object instead of symbol .
fix sonar false positive report by sonar
updated the default value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE in HiveConf . java
remove javaproblems . findproblem ( ) since it do n ' t take priority
replaced instances of ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler `
updated line separator handling in TableWriterTest . java to use a configurable line separator to improve flexibility and allow for different line endings in
refactor DebugHelper methods for improved readability to enhance code maintainability and clarity
added a boolean field ` ownsTexture ` to manage texture ownership checks in ` ParticleEffect ` and ` ParticleEffect ` classes to ensure
added LDAP authentication configuration parameters to HiveConf . java to enhance configuration flexibility for LDAP connections
chore ( deps ) : update dependency com . google . cloud : datacatalog to v1beta1
updated InputMethodManager usage and added soft input toggle functionality in DetailActivity . java to improve user experience by ensuring soft input is shown after a
added a new test for converting primitive types to objects in DataTableTypeRegistryTableConverterTest . java to ensure correct conversion of data types between primitive
removed the " memFS : fsMem . mv . db " file and increased the size from 10 to 50 to optimize memory usage and improve
update error message in ContentTypeManager . java for clarity and consistency to improve user understanding of error handling related to resource closure
made the ` dropSequences ` method abstract in multiple database - related classes and added imports for ` MigrationFailedException ` to standardize the method
added a null check for the status variable in MainWindow . java to prevent potential null pointer exceptions during execution
store the result of binaryField . createField ( ) in a variable ' f ' to improve code readability and maintainability
improve hierarchicalicons to handle map style change
added a test method to verify the behavior of the upsert operation with non - existing objects to ensure that the upsert function correctly handles non - existing
hbase - 2645 fix the build error in hfileblockindex ( addendum )
added functionality to record app launch statistics and refactored broadcast intent handling to improve app launch tracking and ensure accurate logging of shortcut actions
added graphics2D creation and disposal in JavaSEPort . java to improve rendering performance and resource management
refactor instructorfeedbackresultspagedata to remove redundant usage of variable
make inventory . getwindowid ( ) return the id if it ' s 0 .
added a conditional check for ` found ` before breaking the loop in ` ConfigDescriptionRegistry . java ` to ensure that the loop does not exit
updated return type handling in parser visitor classes to include a default value when returnType is null to improve code clarity and prevent potential null pointer exceptions
refactor TileMapRenderer to handle null blended tiles and improve initialization logic to enhance robustness by ensuring empty blended tiles are
updated the ` @ Classes ` annotation in ` mmm Probe . java ` to include the ` java . crypto . SunJCE _
fixed an issue that could cause a nullpointerexception when the last point be null .
simplified the assignment of lockOnSync and throttleRate in Throttler . java to improve code readability and maintainability by elimin
pipe : fix emzuli handler registration and add test
increased timeout duration from 1000ms to TIMEOUT in ZkController instantiation to allow more time for tests to complete successfully
added a test for passing code with client parameters in the TokenMvcMockTests class to ensure that the passcode endpoint behaves correctly with client
added imports for LengthFilter and KeepWordFilter , and modified brokenOffsetsConstructors in TestRandomChains . java to enhance functionality and ensure correct argument
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the test code and eliminate unnecessary dependencies
make x86 _ 64bitvastart use 64 bit bit rather than 32 bit .
refactor btCollisionObjectArray and btRigidBody to utilize btCollisionObject . getInstance and btRigidBody _ up
added a copyright year property and updated the copyright URL in the AboutDialog to reflect the current year and provide accurate information about the build process
add miss getdistributedobjects ( ) method to jetclientinstanceimpl ( # 16916 )
added debug print statements in FinSet . java and updated variable expMOIlong and expInertia in MassCalculatorTest . java to
changed the variable name from TOTAL _ MEMORY to MAX _ MEMORY and updated the memory semaphore accordingly to accurately reflect the maximum memory
updated exception handling in StandaloneSchemaFetcher . java and corrected a typo in the method signature in CreateAlignedTimeSeriesPlan . java to
use burningmanservice . isactivated ( ) instead of hardcoded ` ` co - founder ' ' to ` ` co -
updated the input string format and added exception handling for big integer types in JsonLoaderTest . java to improve JSON parsing accuracy and ensure proper exception
updated the validation condition for tableSize from 1 to 0x40000000 to allow for a broader range of capacity requirements in the ObjectSet
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure data scale is validated before setting decimal
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify code by eliminating unnecessary rule keys
added error handling for security exceptions in FileHelper . java and modified content limit logic in TextHelper . java to improve robustness and prevent potential
added a new constant ` StyleWithMultipleAttributes ` and its corresponding tests in ` ShadowThemeTest . java ` to support multiple attributes in theme
updated the ` doesContainsSheetName ` parameter in ` HSSFWorkbook . java ` and added multiple sheet creation in ` TestHSS
changed the method used to obtain the tint color from primary to element color to ensure the correct appearance of the elements in the UI
added null check for replyHandler in DefaultEventBus . java and simplified path resolver in DefaultPlatformManager . java to improve robustness of handler
added support for binary collation handling in MariaDbDbmsType , MySqlDbmsType , and related classes to enable customizable SQL collation
added a method ` whenType ` to return an ` Optional < T > ` based on the type of the tree to enhance type safety by
added a method to retrieve the user view destination and refactored navigation logic to improve code readability and reusability by encapsulating navigation
replaced Response . OK with Response . temporaryRedirect in FeedREST . java to improve user experience by providing a temporary redirect for the application settings
[ flink - 11349 ] [ kinesis ] check if deserializer be serializable before initialize it in flinkkinesisconsumer
( chore ) camel - dns : fix typo in javadoc
replaced Thread . sleep with a try - finally block for resource cleanup to ensure proper resource management and avoid potential memory leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
refactor the read functionality in ProxyHandler to use a dedicated method for clarity to enhance code readability and maintainability by encapsulating the read logic
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to standardize the
modified the method ` prepareStreamsToUpload ( ) ` to return a boolean indicating success or failure to improve the functionality of the upload process by
updated order comparison logic in AbstractConfigLoader and modified jar size in TestMicroserviceConfigLoader to ensure consistent ordering of config models for improved
added a new file ` PicOfDayAppWidget . java ` for managing app widgets with pic - of - day images to implement functionality for
server : allow to set default value for ` ` offering ' ' uuid to ` ` null ' '
updated import statements and refactored join condition handling in HiveParserCalcitePlanner . java to improve clarity and functionality of join condition
[ hotfix ] [ table - runtime ] deprecate unused method in flink - datastream api
added user authentication and password options to the JMX connection in NodeToolCmd . java to enable access to the remote jmx for improved security
removed duplicate instances of BytesRef in Stemmer . java to optimize memory usage and improve performance
updated the handling of widget loading and loading in AppsCustomizePagedView . java to improve widget management and performance based on the number
make sure 3d view get getview ( ) work for 3d apps
updated rotation calculations in GcodeRenderer . java to ensure proper positioning and prevent negative rotation values
added a new option for setting the workspace directory in the OptionEnum and implemented it in TerminalClient to allow users to set the workspace directory for
updated the file path for options from " options . apt " to " options . html " to ensure the correct HTML file is referenced for
updated ScimUtilsTest to use JUnit 5 annotations and introduced PollutionPreventionExtension to enhance test structure and leverage Jupiter
refactor OAuthConfirmationController to use a model for authorization requests instead of a model attribute to improve clarity and maintainability of the code by
refactor assertions in HibernateIT to use assertTrueEventually for better readability to enhance test reliability by ensuring that the session is
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
rename MultiPaintEventTest . java to improve clarity to enhance code readability and maintainability
removed final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to improve code clarity by eliminating unnecessary variable declaration
refactor SyncFactory to improve synchronization logic to enhance performance and reliability of synchronization processes
added unique key handling for schema fields in LukeRequestHandler to improve data integrity by ensuring unique keys are properly managed
added roundBorderColor property and related methods in Border and Border classes , and updated EditableResources to use it to allow customization of border
truffle : add compilerassert . neverpartofcompilation to assert .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging statements for pending requests and resuming in GatewayRSocket and GatewaySocketAcceptor , and modified return values in PingPongApp
added toolbar interaction and a click listener for the toolbar in RecentChatFragment to enhance user experience by notifying users when a menu item is
updated InfoDropTarget and UninstallDropTarget to extend UninstallDropTarget and modified startDetailsActivityForInfo to return a boolean indicating success
rename methods from ` getTail ( ) ` to ` push ( ) ` and ` removeTail ( ) ` to ` peek ( ) `
updated API and image URLs from " test . wikipedia . org / wikimedia . org / test " to " commons . wik
refactor index handling by extracting it into a separate method ` setIndex ` and ` updateIndex ` to improve code readability and maintainability
replaced usage of ` Collections . sort ( ) ` with ` Collections . sort ( ) ` in multiple configuration classes to streamline sorting logic
added date patterns for time formatting in FormatData _ hr _ HR . java to enhance the accuracy of time representation in the application
added a call to clear the focus of the clickedView in DetailFragment . java to ensure the correct view is focused after updates
updated language selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to improve clarity and functionality of language selection handling
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added native methods for registering global , weak , and access fields via a handle in the FastGetField class to enhance performance by leveraging
added default value handling for UNION types in ReflectData . java and updated corresponding tests in TestReflect . java to ensure correct serialization and deserialization of
increased the timeout duration in the seda block when full test from 300 to 1000 milliseconds to allow more time for asynchronous operations to complete
added a null check before remapping the RClass in ResourceMerger . java to avoid potential NullPointerException when attempting to remap a class
add miss constructor to hapifhirdialect ( ) for compatibility with postgres and mysql
httpproducer should also send ` ` connection : close ' ' header when the connection be close .
increased socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete successfully
added an assertion to verify that the count of tickets in the ticket is zero to ensure that the database correctly identifies ticket status and final price c
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
refactor CasProcessingFilter class for improved clarity to enhance code maintainability and readability
refactor dom template parser to use getfirstelementchild ( ) . getchildren ( ) instead of getfirst ( ) . getfirst (
planner - 2748 : add support for enum in look - upmanager ( # 2748 )
wait for node to be shut down in clusterenvbase . fix # 3481
log a info message if there be no beanelresolver . properties
added a content type of " application / octet - stream " to WebdavEntry . java to ensure proper handling of binary data in webdav
implement the getQueueSize method in LazyTraceThreadPoolTaskExecutor and add unit tests for its functionality to ensure correct behavior of the queue size retrieval in
improve distanceop to avoid infinite loop
changed variable and method names from ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity and consistency in
removed the ` next ( ) ` method and added ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to streamline
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated references in ` VectorUtil ` to use
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure polygons contain at least 3 points and updated localVertices assignment logic to improve error handling and ensure only valid polygons are processed
replaced instances of ` ObjectMapper ` with ` ObjectMappers . newDefaultInstance ( ) ` in multiple files to improve consistency and maintainability
trac - 5195 : avoid npe on implicit curve with no coefficient
modified the handling of Unicode names in ExternalNameRecord to support both compressed and compressed Unicode formats to improve compatibility and correctness in reading unicode names
add ' queue ' to the description of jmsdestination to clarify that it ' s a jmsdestination .
added logic to exclude username and password prompts based on the return value of loginPrompts to enhance security by preventing login prompts from
replaced ` remove ( listener ) ` with ` removeIf ( l ) ` in ` AbstractController . java ` to improve listener removal logic
added functionality to toggle the visibility of a spinner in the PieChartActivity to enhance user experience by allowing customization of the chart ' s
cleanup vhd in case of failure to copy vhd
hbase - 11313 hmaster should skip normalization if it ' s a namespace have quota
updated import statements and added a resize method in AndroidInput . java to improve code organization and enhance input resizing functionality
added a new method ` propertyValuesOf ` to ` PropertySupport ` for retrieving property values to enhance the functionality of the ` PropertySupport `
disable clientmapnearcachetest until it be fix
fix the hopperhock be able to place item in the wrong place . close # 2249
added authentication dialog for username and password in SsoWebViewClient . java to enhance security by enforcing authentication requirements
added methods for deleting documents and querying documents in TestStressIndexing2 . java to improve functionality and clarity of document deletion operations
[ flink - 22559 ] [ table - planner ] ignore upsertkafkatableitcase until flink - 22559
replaced ` get ( j ) ` with ` computeIfAbsent ( j ) ` in ` ResTable . java ` to improve performance by avoid
added configuration to accept single values as an array in DefaultEntityMapper to enhance data deserialization capabilities for better data handling
updated localization message to include " BE , UK , and SL . " to improve clarity and accuracy of localization updates
bugfix # 1187 , make category name configurable ( # 1188 )
[ drools - 1.1 ] fix parsing of instance of expression in feel ( # 1193 )
nifi - 1746 : add mime . type attribute to gethttp response
make sure we do n ' t create resourcehistoryprovenancetable if we do n ' t update the provenance
rename exit button to done button and update related references in HelpActivity and SearchBookContentsActivity to clarify that the button is not searchable
refactor NatsConfiguration class for improved readability to enhance maintainability and ease of future updates
refactor cachinghivemetastore to pass metastorecontext when invalidate stale partition
use circularfifobuffer / unboundedfifobuffer instead of boundedfifobuffer in viewresultsfullvisualizer
updated icons in UsersAndGroupsSearchProvider , ShareUserListAdapter , and UserListAdapter from ic _ group to ic _ chat _ bubble
[ java ] use getlongvolatile instead of getlong in broadcastreceiver .
updated method names to follow naming conventions in MocksCreationTest . java to improve readability and consistency in naming conventions
added a constant for the data source name in CSVThirdEyeDataSource and modified the visibility of the generateDetectionConfig method in YamlDetectionConfig
increased timeout duration from 10 seconds to 30 seconds in multiple awaiter calls to allow more time for phaser operations to complete before timing
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated references from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
fix findbugs encode warning in vmwarestoragemanagerimpl . java
added a test for depositing a workspace item without a workflow and introduced a method to create submitter groups in CollectionBuilder to ensure that
replaced ` forEach ` with ` distinct ( ) . forEach ` in ` ClassLoaderSupportImpl . java ` to ensure unique processing of classpath files
removed the method ` isBoxedPrimitive ` from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to use indexOf for better readability and efficiency to improve code clarity and maintainability when dealing with
added a check to ensure the table is not null and is not external before deleting it to prevent potential errors when attempting to delete non - external
updated asynchronous execution settings in HiveConf and replaced ExecutorService with ThreadPoolExecutor in SQLOperation and SessionManager to improve thread management and enhance error
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to utilize TaskWrapper for service and component retrieval to improve code clarity and maintainability by using a constant for
added a new variable ` currentConfInfo ` in ` OperationSetTelephonyConferencingSipImpl . java ` to store the current
add a new method ` clearEntries ( ) ` to ` FlutterLogTree ` and use it in ` FlutterLogView ` to
updated return statements in ChannelEndPoint . java to check if the socket is open and is input shutdown to ensure proper handling of input and output shutdown
refactor SetNullableGenerator for improved null handling to enhance code readability and maintainability
( chore ) camel - example - reportincident : allow to turn off use of servlet transport
consolidated multiple import statements into a single wildcard import and refactored content type handling in FormIntegrationTests to improve code readability and
added ` @ ApiOperation ` annotation to multiple service classes and modified the ` hello ` method to include a new parameter ` bodyParamName ` to
updated lifecycle listener handling in Lwjgl3Application and modified update method signature in Lwjgl3Window to improve lifecycle management and
updated the FG _ FK color from 90x0 to 200x0 to improve the visual appearance of the FK component
added a requirement for mp3 audio format in the SoundManager class to ensure that audio formats are not required for playback
fix secondaryindexmanagertest failure on slow machine
pmd : add ` ` version ' ' and ` ` eclipse - version ' ' and ` ` eclipse - version ' ' version
[ hotfix ] [ test ] fix test failure in customserializationitcase
refactor MediaFormatUtil to improve code readability to enhance maintainability and ease of future updates
added an overridden method ` isCellEditable ` to the ` GeneralTab ` class to provide a default implementation for cell editing functionality
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified message formatting to conditionally print unused dependencies
added a temporary variable ` tmpCount ` and updated the ` vscales ` array from ` 2.0 ` to ` 0.85 `
updated import statements for BaseScalarUdfTest in TestUdfRound . java and TestGenericUdfConcat . java to ensure consistency in
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
* refactor testskeletoncontrolrefresh to use animComposer instead of animchannel
rename nodefilter to nodecountfilter for clarity
updated the condition to check if sync block fetch size is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure that
updated state and type assignments in DebugExpressionParser . java for improved clarity and consistency to enhance the accuracy of type representation in debugging output
updated dependency resolution logic to check for classpath in ExcludeDependency . java to improve accuracy of dependency exclusion checks
renamed the ` tmp ( ) ` method to ` dst2 ( t v ) ` and modified the lerp ( ) method signature
added default value to the ` args ` array in ` GridHubConfiguration ` to ensure ` args ` is initialized before use
updated linker argument handling in RustBinaryDescription . java and added a new test in RustLinkerIntegrationTest . java to improve linker
[ # 1193 ] fix test failure on travis
added " hive . query . name " configuration to HiveConf and modified logging for LLAP splits in GenericUDTFGetSplits to include
removed the import statement for ` java . io . File ` in ` TileAtlas . java ` to streamline code by eliminating
[ netbeans - 37 ] do n ' t throw an exception when attempt to write on a closed stream .
updated the ` validateQuery ` method to accept an additional ` arguments ` parameter and modified the error message formatting to enhance flexibility in error messages
updated INDEX _ VERSION from 1 to 2 and refactored tree retrieval logic in LuceneExecutor . java to improve versioning and enhance repository
[ hotfix ] [ test ] add test for kryo serializer registration
added null check before removing configuration properties and updated configuration types in ` BlueprintConfigurationProcessor ` , and modified assertions in ` BlueprintConfigurationProcessorTest `
updated boolean handling in MetaStoreDirectSql . java to use BooleanUtils for converting strings to boolean objects to improve compatibility and simplify boolean conversion logic
added a call to hideCustomizationDrawer ( ) in the mmm Launcher . java and ppp Launcher . java files to enhance
refactor TermVectorComponent to use a constant for term vector key warnings and improve handling of warnings to enhance code readability and maintainability while
updated logging behavior to check for optimistic types and changed log level from finest to info to improve logging clarity and flexibility based on the
refactor Expect class to improve code readability to enhance maintainability and facilitate future feature additions
added UnixSocketConfigurationStrategy to DockerClientFactory and created its implementation to enable Unix socket configuration for Docker connections
added flaky test method ` testEvenLowRateIP ` to ` CloseableDoSFilterTest ` class to mark tests as flaky to
( chore ) camel - reactive : improve error message when no active subscription exists
refactor ` Vectorizer ` and ` TezCompiler ` classes to use ` MapWork ` instead of ` MapRedTask ` for impro
updated constructors in StringAppender and LogDivertAppender to include a new boolean parameter to enhance functionality by providing additional behavior for layout management
bug 60519 - avoid npe if guipackage be null .
[ gr - 16927 ] add linkage . isWeak ( ) to check if the function be a weak function .
updated multiple Java files related to XShareAuto , LoadClassNegative , and ReadFromNoaccessArea to improve code organization and maintainability
test only - add test for defaulttransactionthreadlocal . get ( )
added a validation check for invalid operation handles in HiveStatement . java to ensure that the application only proceeds if the operation handles are valid and
rename the constant ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _
camel - 16400 - camel - aws : add support to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code readability and maintainability
removed exception message from the error response in UserREST . java to simplify error reporting for email sending issues
modified the ` fromContent ` and ` fromContent ` methods to include a ` subTree ` parameter to enhance the functionality of the ` Result
update column width calculation in mmm Sheet . java and add a new test method in TestHSSFSheet . java to ensure correct column
added configPath parameter to the less command in Builtins . java to ensure the correct path is used for command execution
changed the type of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter ` and ` Graph
update SSHD container image version from SHA256 to a specific version 1.0 . 0 to ensure compatibility with the latest SSHD features and
ambari - 21181 . remove an assertion from hostmanagerimpl # checkhostid ( hostid )
updated the logic for generating raw keys for multi - valued columns in DefaultGroupKeyGenerator . java to ensure correct handling of multi - valued columns
updated the test method name from ` testSeekNegative ` to ` testSeekingExceptions ` and added assertions for end - of - file handling
update bcsiliconrecipes to use new ingredientnbt instead of new itemstack
fix typo in graphhopperconfig mixin . put ( ) and putobject ( ) .
refactor visibility setting in CellLayout and refactor drag exit handling in Workspace to improve code readability and maintainability by consolidating animation logic
updated ModifyRequestBodyGatewayFilterFactory to use originalBody for rewriting and added a test for empty upstream request bodies to improve the handling of empty
updated accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to include package accessibility validation to enhance security by ensuring only public
replaced instances of ` logger . warn ` with ` logger . trace ` in ` LoggingHandler . java ` and changed log level from warn
refactor prefix extraction logic in WhiteBlackList . java and add a new test case in Issue348 . java to improve handling of wildcard
added gallery options menu functionality in GalleryActivity . java to enhance user experience by allowing selection of gallery images
refactor MongoDB service initialization to use a singleton pattern to improve performance by avoiding unnecessary object creation
added tests for replacing boolean values with true or false in InlineConstantMutatorTest . java to ensure that mutant code formatting is properly handled and
refactor the ` decode ` method to include a ` Blackhole ` parameter for better resource management to enhance performance by reducing the number of
fix : update gapic - generator - java with mock service generation fix ( # 113 )
updated ` getAllUnitStrings ` and ` unitProvider ` methods to use ` Map . Entry < String , String > ` instead of ` String
removed the clearing of witnesses from the database to streamline the database management process
do n ' t throw prestoexception in jdbcpagesink when abort
removed the stack property and replaced it with getter and setter methods in NativeError . java to streamline stack management by using getter and setter functions
removed a condition that checks if the path name starts with " . " in DrillPathFilter . java to streamline the path validation process
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomaly
added a call to clearIndex ( ) in BasicFunctionalityTest . java to reset the index before each test execution
updated BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 to standardize bold weight representation in the HSSFFont class
changed fThreadGroup to be volatile and made fLookForStuckThread final in the Timeout class to ensure thread safety and enforce immut
removed the ' final ' modifier from the ' getValue ( ) ' and ' setValue ( ) ' methods in ValueResultData . java to allow
updated hash code and equality checks in FuzzyQuery . java to ensure consistent behavior when comparing instances of FuzzyQuery
removed debug print statements from PushedResourcesTest . java to clean up unnecessary console output during tests
changed return types of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` to simplify method signatures
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest . java and SchemaCrawlerCoverage
updated the principal retrieval and return logic in PersonDirectoryPrincipalResolver . java to improve clarity and ensure correct principal resolution
changed log level from info to warn for connection error messages in OpenWebNetBridgeHandler . java to provide clearer visibility of connection issues related
updated method names from intHash and longHash to hash in Hashing . java and modified hash calculation logic in Int2IntHashMap . java
added a constructor to ThumbnailGenerationTask to ensure that a valid storageManager is provided to prevent potential NullPointerExceptions during thumbnail generation
modified the loop condition in GroupSelectionQuery . java to check if nrFound exceeds count and tries to ensure that the loop does not exceed the
added a new file ` Bug1933922 . java ` containing a class that demonstrates recursive compilation in a file using a
simplified comparison logic in MultipleSeriesProvider and simplified condition in AjaxDecoratorMapper to improve code readability and maintainability
updated the character limit check from 33 to 32 in FileResolver . java to allow a maximum of 32 characters for improved validation
added requestFocus ( ) method call to display component to ensure the component receives focus when needed
update test data for new instructor home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to clarify the purpose of the class related to JSON parsing
updated notification handling in DetailFragment and added onPause method in MainActivity to improve user experience by providing feedback and widget updates during app pause
added a test for schema query and fetch functionality with unrelated templates in IoTDBSchemaTemplateIT . java to ensure that schema queries are correctly
rename Dialog class to improve clarity to enhance code readability and maintainability
replaced ` Runtime . getRuntime ( ) . exec ` with ` ProcessBuilder . start ( ) ` in ` SourceCompiler . java ` to
replaced ` InetAddress . getLocalHost ( ) ` with ` InetAddress . getByName ( " 127.0 . 0.1 " ) ` for
refactor subsystem assignment in Metrics . java to use a loop for split subsystem names to improve code readability and maintainability by consolidating subsystem
added assumptions to skip tests on unsupported Apple platforms in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed when
refactor jvmciversioncheck to not require java . specification . version property
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage scenarios
updated ` BinaryParser ` , ` PlainTextParser ` , ` ParsingExecutionContextView ` , and ` ParsingExecutionContextView ` classes to
added support for MultiPartFormDataCompliance in HttpConfiguration and created a new MultiPartFormDataCompliance enum to enable configuration of multipart form data compliance in
[ netbeans - 6107 ] allow to use gradle 7.2 distribution on jdk17 .
refactor type addition logic into a separate method in DatabaseSnapshot and SnapshotControl classes to improve code readability and maintainability by encapsulating type
refactor Term class to improve code readability to enhance maintainability and ease of future updates
modify return statement to handle null or empty runWith values to improve robustness by avoiding potential NullPointerExceptions
http : / / issues . apache . org / activemq / browse / amq - 2852 - add test case to show
updated multiple Java files including AudioDeviceInfoBuilder , MediaCodecInfoBuilder , NativeInput , Shadow classes to improve code organization and maintainability
do n ' t fail the blackbox count test if the pdf417 test fails
updated the assignment of mTintAmount in TaskView . java to ensure the correct value is used for setting dim alpha and icon tinting
added a new file ` SumZeroFunctions . java ` to implement a function for sum zero in the Gaggr aggregation framework to facil
updated SQL syntax in FirstValueFunctionIT . java and NthValueFunctionIT . java to ensure consistency in data type usage across tables
hbase - 21181 add more information to the allocation fail warn message
added a null check for propName before updating it in JDBCRoleService to avoid potential NullPointerException when propName is null
added @ VisibleForTesting annotation and refactored methods in StatusBarTouchController , RecentsView , and StartLauncherViaGestureTests
added a new method ` logContainerStream ` to handle logging container logs with a boolean parameter to improve flexibility in logging container logs by allowing
add a performance test for mvstore . cache ( )
updated LONG type from " L " to " J " in PrimitiveType . java to reflect the correct data type representation for long values
changed the access modifier of the delegatingApplicationListener method from instance to static to allow the method to be accessed without an instance of the class
fix restbindingadvice to set message body to null
added ` FileDeletingTasklet ` and ` TaskletJobFunctionalTests ` classes for tasklet deletion and functional testing to facilit
move update size keep drawables ( ) to companion . updatesizekeepdrawables ( )
refactor bit manipulation logic in BitUtil and update comments in Int2IntCounterMap and Int2IntHashMap to improve code clarity and
updated method names and parameters for event handling in multiple classes to improve clarity and functionality of state management in accessibility testing
added checks for video thumbnail requests in RequestHandler , RequestHandlerV2 , and RequestV2 classes to ensure proper handling of video thumbnail requests based on
improve handling of problem in scrolltoerrorline ( )
updated button positioning logic in SideMenuBar . java based on the UI manager ' s theme constants to ensure proper layout behavior based on the
updated Skia . java to include a preload attribute for the Skia . java file to ensure compatibility with the new library loading mechanism
added support for unit testing in NetworkParameters by introducing a constant for the unit test ID to enhance functionality for unit testing in the network parameters
added error handling for missing format arguments in QueryCommand and refactored test cases in QueryCommandIntegrationTest to improve user feedback by providing clear
replaced capacity and isPositionValid variables with length for better clarity and consistency to improve code readability and maintainability by using a more
updated the ` walkRuleAndAdd ` method to accept a ` BuildRule ` parameter and added logic to determine if dependencies should be visit based
[ java ] allow to override the module name in the patch module file .
[ java ] remove protocol version check when prepare for election .
added conditional logic to set the default policy based on whether the authentication is enabled or not to ensure the OwnCloudClientManagerFactory uses the correct
added null checks for mappedTableResource ( table ) in ReadBatch and WriteBatch classes to provide clearer error messages when a mappedTableResource
refactored code to use utils . close ( ) for resource cleanup
refactor AnonymousAuthenticationFilter to utilize a deferred context for improved security context management to enhance code readability and maintainability by reducing
modified the ` removeActor ` method to include a ` unfocus ` parameter for better control over actor removal to enhance the functionality of actor management
refactor cloud configuration prompt to use a variable for valid configurations to improve code readability and maintainability
added logging capabilities to NettyHttpServer and modified response handling in RoutingInBoundHandler to enhance logging capabilities and improve connection management during HTTP responses
refactor multiple Java files to improve code organization to enhance maintainability and readability of the code
replaced direct call to update ( ) with SwingUtilities . invokeLater ( ) to ensure UI updates are executed on the Event Dispatch Thread
( chore ) camel - groovy : optimize the code to avoid reflection
[ mng - 5352 ] remove dependency between plugin and plugin dependency ( # 5353 )
[ hotfix ] make the ` ` args ' ' option public for clarity
refactor ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and add a new test class ` TestSharedPreferencesTest ` to
removed storage alias retrieval from certificate chain in HttpsMessenger . java to streamline the process of obtaining the storage key chain for improved
danielwagnerhall : do n ' t swallow a classcastexception when convert a json to a json . fix
change visibility of updateImage ( ) method from private to protected to allow subclassing of the method for better flexibility
add block . dropresources to allow modded entity to be drop ( # 8997 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enable retrieval and manipulation of spatial location calculator configurations within the
renamed multiple Java files related to community detection and GSA components to improve clarity and consistency in naming conventions
replaced the method ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( _ root ) ` and added a new method ` isEmpty
replaced the ` col ` variable with ` r ` and ` b ` parameters in the ` AttributedStringBuilder ` class for foreground and background
added a condition to disable fingerprinting based on system property to enhance security by preventing fingerprinting during synchronization
changed the visibility of the moveFunds method from private to public to allow access to the method from other classes
refactor MongoTemplate and MongoTemplateTests to improve event emission logic and enhance test coverage for UUID property handling to ensure correct event emission
fix problematic test for settransaction
make sure to close the input stream in tika - app
updated API error handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve clarity and
removed unnecessary whitespace in the loadConfig method call to improve code readability and maintain consistency
[ bugfix ] instructorfeedbackcopyactiontest : fix typo in log message
[ hotfix ] fix checkstyle violation in external worker and jobserverrunner
updated step handling in HmDatapoint and HomematicTypeGeneratorImpl classes to ensure consistent step management across the application
added logging statements and improved exclusive lock acquisition and locking mechanism in PostgreSQLReadWriteAdvisoryLocksTest . java to enhance clarity
updated the scheduleJobs ( ) method call in BaseSchedulerServiceImpl . java to ensure proper job scheduling functionality
danielwagnerhall : fix flaky test : testgettextcontent
refactor logger to use ThreadLocal for thread - safe logging to improve performance by reducing contention on the logger instance
updated FunctionInitializer and FunctionInitializerTest to use MockitoJUnitRunner instead of JMockit to improve testability and align with Mockito
added a new method ` boxedTypeOrType ` in ` Types . java ` and modified type checking in ` Infer . java `
updated task orientation handling in RecentsView and modified TaskView initialization in TaskView to improve task visibility management and ensure proper initialization of UI
replaced the method for retrieving the live region server threads with a direct call to getHBaseCluster ( ) to simplify code and improve readability
added logic to delete a new repository if it has a contract details and store it in a original repository to ensure proper management of contract data and
replaced hardcoded TOKEN _ ISSUE _ FEE constant with dynamic properties retrieval in TokenIssueProcessor . java and modified allowance calculation
refactor RealisticRenderStrategy to use URI - based texture management and improve cache handling to enhance texture management by ensuring proper cleanup of resources and
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code cl
added ` isUnselectedStyle ` flag and modified ` getStringWidth ` method in ` Label ` and ` DefaultLookAndFeel ` classes to
updated ArrayList initialization to specify initial capacity and replaced lambda expressions with method reference to improve code readability and reduce boilerplate code
removed the ` flags ` parameter from several methods in ` ShadowApplicationPackageManager ` and added a constant ` FLAG _ PRIMARY ` in ` Shadow
updated PingRequestHandler . java for improved request handling to enhance performance and reliability of ping operations
skip audio transformation test on api > = 25
updated firmware version validation logic in TradfriGatewayHandler . java to ensure compatibility with the latest firmware version and improve logging clarity
refactor AjaxElementLocator class to improve code readability and maintainability
updated BoxLayout and DefaultLayout to use DefaultLayout and modified display condition to include " table - cell " to enhance layout handling for different display
refactor JsonDecoder to improve token handling and add a new test for reordering fields to enhance code clarity and ensure correct behavior when processing
updated the listener implementation in BlockCache to include the removal cause parameter to improve clarity and accuracy in handling cache location updates
added @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready yet
added @ Test annotations to DroolsMvelParserTest . java to enable unit testing for the DroolsMvelParser functionality
changed variable declarations to be final in ContextRegisterListener . java to ensure immutability and prevent unintended modifications
refactor ObjectHashSet to initialize the iterator lazily and add parameterized tests to improve performance and test coverage of ObjectHashSet operations
added batchBytes constant and updated batch processing logic in SparkReduceRecordHandler and ReduceRecordSource classes to ensure accurate handling of data processing based on
replaced MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE with MODE _ PRIVATE in AppSettings and UpdateUtils to
added logging for abort method and enhanced connection cleanup logic in JdbcProxyGenerator . java to improve error handling and provide clearer diagnostics during connection termination
updated the method to use ` getState ( ) ` instead of ` getState ( ) ` and added an importance for accessibility based on
hbase - 25825 reduce log level from warn to debug in protobuflogreader ( # 212 )
updated scope assignment in UaaTokenServices . java and added a new test case in UaaTokenServicesTests . java to ensure the scope
updated import statements and modified logger initialization in AvailableJDBCDrivers . java , and renamed test class in TestAvailablePlugins . java to improve code cl
[ drools - 7 ] add executable command to kie - api to allow execution of a kie - api command
( chore ) camel - itest - jdbc : remove unused jdbctableservice
added padding retrieval methods for different orientations in CellLayout . java and modified bitmap creation in Launcher . java to improve layout handling for different
added a conditional check to initialize the ' cands ' list based on the length of ' sb ' to ensure ' cands ' is only
updated ` SamlMetadataUIParserAction ` and ` SamlMetadataUIWebflowConfigurer ` to use ` Action ` instead of `
added a method to check the number of LDAP processes using a specified port to improve port validation and provide feedback on LDAP port usage
log4j2 - 1343 use 0 instead of - 1 for shutdown hook
updated URL handling logic in Fetcher . java and modified refreshUrl handling in HTMLMetaProcessor . java to improve clarity in URL processing and
updated SolrQuery to use " name : samsang " instead of " * : * " and corrected a typo in the assertion to
refactor console initialization in TerminalServlet to support both old and new console API versions to ensure compatibility with both old and newer terminal implementations
bugfix : make getverticescolors work with bmesh compatible mesh
added filtering functionality to exclude timestamped report directories in the HTML report generation process to improve the efficiency of the report copying process by excluding timestamped
refactor test method names and introduce parameterized validation in DataValidatorTest . java to improve code readability and enhance test coverage for email validation
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java to ensure proper error handling when binding errors occur within the specified expression
removed debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added a flag to allow extraction of private fields in FieldSupport to enhance flexibility in field handling by allowing field extraction
replace ` { name } ` with ` device . getName ( ) ` in ` WebDataHandler . java ` to ensure that the device name
added support for Java 8 ' s Lookup constructor in the lookup method to improve compatibility with Java 8 ' s reflection framework
change the method name from ` weights ` to ` weightsByDouble ` in ` ZParams ` and update its usage in ` SortedSetCommandsTest
added a Database parameter to the writeCustomHTML method across multiple writer classes to provide additional information about the database being used in the writeCustomHTML
removed unnecessary type casting for keys and added an assertion for null values in BTreeMap . java to improve code clarity and ensure proper validation
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw specific exceptions instead of generic exceptions to improve error
do n ' t write a zero - length byte array if the heap be zero .
refactor code to use ` sendMessage ` instead of ` println ` for displaying messages to improve code readability and maintainability by consolidating error
updated byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record handling in Horton
added imports for ItemReadListener , ItemWriteListener , and ItemReadListener in multiple Java files to enhance integration with Spring Batch ' s processing
refactor code formatting and improve readability in AbstractProviderModule . java to enhance code clarity and maintainability
updated print statements in SearchFiles . java and modified parameters in countOneSegment method in SortedSetDocValuesFacetCounts . java to improve code cl
updated Test7005594 . java file to improve test coverage and enhance reliability
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
server : fix npe while deploy vm with nic . getip4address ( ) be null .
feat ( gamepad ) : add support for analog trigger ( # 3640 )
updated method signatures to use ` Iterable < T > ` instead of ` Object < T > ` and added deprecation annotations to improve type safety and
camel - 16400 : added check to avoid stringindexoutofboundsexception if the input be too short .
added unit tests for SQL count queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct functionality of count operations in the database
added a new ` LargeValueFormatter ` class and updated references in ` BarChartActivityMultiDataset ` , ` BarLineChartBase `
refactor comment parsing logic in CommentsParser . java to handle backslashes correctly to improve robustness of character handling during parsing
added @ SuppressWarnings annotation to Platform . java to suppress warnings related to argument type incompatible
updated printLir statement formatting in TraceLinearScanLifetimeAnalysisPhase . java to improve clarity of the log message during register allocation
added a TODO comment for the Auto - generated method stub in NullAssertionValidator . java to indicate that the method stub is not needed for future
added support for building RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key management for build rules
added a check to create a system profile directory if it does not exist to ensure that the system profile directory exists before creating it to avoid potential
refactored the creation of the thread factory to use a dedicated method to improve code readability and maintainability
refactor message retrieval logic in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to improve code clarity and maintainability by centralizing message
added a " accept " attribute to the file input dialog to allow users to accept images as images instead of files
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient instead of NodeBuilder and changed BulkItemResponse initialization to use Shard
added detailed information about witnesses and their class names in ForkController . java to improve debugging and provide clearer insights into witnesses and
added a new test class ` NullPointerAndEmptyArrayTest ` to validate behavior of ` CustomURLClassLoader ` with null and empty URL arrays
removed the ` getDepToGeneratedSourcesMap ` method and updated ` BaseIjModuleRule ` and ` IjProjectBuckConfig
updated wildcard construction methods to accept a delimiter and modified test cases accordingly to enhance flexibility in handling wildcard patterns and improve test coverage for external group
refactor alias validation logic in Vectorizer . java to improve clarity and maintainability of the code
updated MockitoJUnitRunner import from ` org . mockito . runners . MockitoJUnitRunner ` to ` org . mock
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging a warning when setting values fails
replaced specific imports with a wildcard import and modified the ` getLangs ` method to return a ` Set < String > ` instead of an
updated imports and simplified assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintainability
hbase - 26400 fix npe in takesnapshothandler ( chunhui )
[ wasm ] use ` ` if ' ' instead of ` ` if ' ' in try / finally block .
added a test method to verify the modification of HTTP RPC endpoint in the Docker QuickstartTest class to ensure that the HTTP RPC endpoint behaves
added a boolean field ` isSuspended ` and modified thread state management in ` Thread . java ` , and updated version checks in ` Test _
updated JavadocVisitor classes to replace occurrences of " Since " with " Hidden " and " See " to improve clarity and functionality of Javadoc representation
( chore ) camel - spring : fix npe when use @ endpointinject with multiple camelcontext
added @ Override annotations to multiple security - related classes to ensure proper method overriding and improve code clarity
added module import handling for ENUM _ WRAPPER _ CLASS _ SUFFIX in Java2TypeScriptAdapter and modified eval method in EnumTests
updated the language string in XSSFExportToXml . java from XMLConstants . W3C _ XML _ SCHEMA _ NS _ URI
added content description handling for badged app labels in BubbleTextView to improve user experience by providing context for badged app labels
added mouse wheel listener functionality to TestMouseWheelScroll . java to track mouse wheel rotation during scrolling
added resource cleanup to the VisualTester class and a new test for positioning absolute in VisualRegressionTest to ensure proper resource management and
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests
simplify vacuumcontroller , vacuumframe , vacuumview , vacuumcontroller , v
simplified the return statement in BitfinexAdapters . java by removing unnecessary currency checks to improve code readability and reduce unnecessary complexity
updated imports and modified the handling of default values in JsonFormat . java to improve clarity and functionality of default value output handling
added handling for array and enum types in JacksonXmlFormatMapper to ensure proper serialization of byte arrays in JSON format
updated constants and variable names in VirtualThread . java for clarity and consistency to improve readability and maintainability of the code
refactor DirectoryTaxonomyWriter to use final variables for reader manager and category term instead of new instances to improve code clarity and maintainability by
refactor VetoableChangeSupport to improve code structure to enhance maintainability and readability of the code
modify the calculation of the Y - coordinate by subtracting the height from the owner to correct the positioning of the component by accounting for
pdfbox - 4892 : remove useless throw clause , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
ggb - 1881 show ' close ' button in menu after click on it in web .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated thread handling in BackendInitializerHelper and TerminalClient to use ThreadHelper for better synchronization to improve responsiveness and maintainability of the code
updated version checking logic in SwingStartup . java to include exception handling and release status checks to improve robustness of version management in the application
add dbmigration . includegeneratedfilecomment ( ) to allow comment to be pass to db migration .
updated command usage syntax from " < player > " to " < player | * > " across multiple files to enhance command usability and improve
deleted files BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove unused classes related to HDFS and ZooKeeper thread
refactor method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to improve clarity and consistency in naming
added a condition to check if the XML suite is parallel in TestNGContentHandler . java to improve performance by avoiding unnecessary processing of parallel
updated the logic for enabling master and checking the presence of the old address in RouteInfoManager . java to improve clarity and correctness
refactor : remove static import of enums in ctmethodimpl . java ( # 4649 )
added serialVersionUID to multiple Java classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ShibbolethCompatiblePersistentIdGenerator to include a separator parameter in the shaBase64 method and added a new test case to
modified the return statement to check for null values before parsing the SYSTEM _ ACTIONS _ ENABLED parameter to improve robustness by avoiding potential NullPointerException
added a new file ` Person . java ` in the ` org . apache . maven . it0074 ` package to provide a structure for
do n ' t pass localendpoint to gossiper . start ( )
replace ` timeStr ` with ` timeStr . toUpperCase ( ) ` in ` AbstractClient . java ` to ensure consistent handling of time strings
added assertions to verify the properties of timeColumn , timeUnit , and totalDocs in SegmentMetadataImpl to ensure accurate representation of time - related metadata
updated the color import from ` java . awt . Color ` to ` net . sf . openrocket . util . Color ` and changed
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure that disconnect operations are
change the type of the scopeHierarchy variable from String to Class < ? extends Annotation > to ensure type safety by explicitly specifying the type of the
danielwagnerhall : add a new test for click on an element hidden by double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
jbpm - 3322 - allow to specify a custom jndiregistry for jtatransactionmanager .
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unnecessary functionality
refactor variable names and return values in JSSESocketFactory . java for improved clarity to enhance code readability and maintainability by
[ beam - 13434 ] fix timestamp conversion for bigquery ( # 13434 )
replaced explicit null checks with requireNonNull method for buffer and userCredentials to improve code readability and reduce duplication
use inputmap instead of input for coercion in valuesresolver
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that row and column values do not exceed the table '
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by
[ java ] unnecessarylocalbeforereturn - fix false positive with nested class
replaced the initialization of ScriptEngineManager with a direct reference to scriptEngine to simplify code and improve clarity by eliminating unnecessary variable
lucene - 3790 : remove redundant nan check from euclideandistancesimilarity . getdistance ( )
do n ' t try to increment sstables if it ' s already there
refactor relativization methods to accept both baseDir and path parameters to improve path handling by avoiding extra dot paths during relativation
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator . java and modified value formatting in DataType . java to ensure proper handling of
fix test failure on window due to file not find error
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpc
rename ` ErrorHandlerController ` to ` Error403Controller ` and create new ` Error404Controller ` and ` Error404ControllerTest ` classes
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both UnixTerminal .
updated imports and modified the trigger patterns for converting collections to arrays in Tiny . java to improve functionality and maintain compatibility with Java 8 features
fixed - concurrentmodificationexception when try to acquire connection
updated method and variable names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` and ` setDateConverter ( )
pdfbox - 4892 : avoid npe , a suggest by valerybokov
update error message format in JavassistUtils . java to improve clarity of error reporting for class creation failures
updated thread join durations and added exception handling for reader and writer threads in LargeStreamletTest . java to improve test reliability by ensuring
updated the logic for setting the current item in HomeFragment to account specific page types to improve user experience by dynamically increment the number of extra pages
added error handling for bitmap creation in AndroidImplementation . java to ensure robustness by handling potential exceptions during image processing
added @ SuppressSubnodes annotation to BaseParser . java and modified the return statement in BaseParser . java to remove unnecessary suppressNode ( )
pdfbox - 4892 : avoid potential memory leak , a suggest by valerybokov
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added a shell command for keyboard input in AbstractLauncherUiTest . java and modified assertion in LauncherInstrumentation . java to improve user interaction
added JSON file mapping functionality to the FileDumper class to facilitate the creation and storage of URLs in JSON format
synchronize resetresultsnotified flag to prevent deadlock
bugfix : texturehelper . gettexturefromimage now return a loaded image instead of a texture
updated the context ID format in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests from " application :
updated the seed from " 9781797745008 " to " 9781797845005 " in the RandomizersTest
updated notification sound setting logic to retrieve the ringtone from the preferences to improve flexibility in managing notification sound settings
add rootnode . reportloopcount ( ) to report the count of call target .
added a condition to finalize cluster version in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl . java to ensure that the cluster
fix findbyregionid to return regionid instead of rangeid
removed duplicate opening of streamManager in ItemOrientedStep . java to streamline code by eliminating unnecessary duplication
added a new file ` CountedLoopProblem . java ` that generates a series of random numbers and verifies the hash code of a string to
rename method argument to avoid confusion .
make pending _ failed _ speculation _ offset a jlong rather than an int .
updated KafkaStreamsTracing and ITKafkaStreamsTracing classes to replace TransformerSupplier with ValueTransformerWithKeySupplier for improved tracing functionality to enhance
update feedbacksessionslogictest and feedbackconstantsumquestiondetails to display received point instead of total point
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline the code by eliminating
added thread management and stack trace dumping functionality in CloseRace . java to improve debugging and error handling during thread termination
updated return statement to return the integer value directly instead of a primitive value to ensure accurate representation of the value in the IntPointField
mob - 823 : adjust button arc size to account for fractional width .
pdfbox - 2852 : increase ratio to 640 , a suggest by valerybokov
rename ` minifysqlenabled ` to ` shrinkwhitespacesinsql ` ( # 212 )
refactored waitForStateTransitionToEnd method and refactored state transition logic in WorkProfileTest . java to improve code readability and
added CasCoreHttpConfiguration , CasCoreTicketsConfiguration , CasCoreHttpConfiguration , and CasCoreWebConfiguration to multiple test classes and updated
replaced the use of ` raf . readLong ( ) ` with ` DataIO . readFully ( ) ` for reading single byte arrays to improve
( chore ) camel - http - optimize to reduce object allocation
updated ClassPath handling for boot class paths in DeclarativeHintsParser . java to improve clarity and maintainability of the code by explicitly
add support for audio and voice ( # 5649 )
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to utilize this new method to improve layer management
added a condition to check if the queue is empty in DeferredHandler . java and removed the updateWallpaperOffset method from Workspace . java to
added null check for mapOp and mapWork in MapRecordProcessor . java and changed exception handling in TezProcessor . java to improve error
refactor ` setCenter ` method to use ` toVector2D ( ) ` for clarity and consistency to improve code readability and
refactor exception handling in TestBadUseCases to use JUnit ' s ExpectedException rule to improve readability and maintainability of the test
added null check for subparams before sending a query in QueryExecutorImpl . java and introduced a new test method in StatementTest . java to
do n ' t show a log message if the user do n ' t customize the security environment
added the ` rctag ` parameter to the ` @ GET ` method in ` ReviewInterface . java ` to enable the API endpoint to
refactor Test . java to improve code structure to enhance maintainability and readability of the code
replace ` blkSize ` with ` keyLength ` in ` PBEKeySpec ` to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to enhance the functionality of section definitions in the document processing
added accuracy checks for location accuracy in GpsLoggingService . java to improve robustness by detecting large jump scenarios
removed unnecessary print statements from TableCellLayout , TableLayout2 , and TableLayout2 classes to clean up code and improve readability
doc : generate sample code in the java microgenerator ( # 119 )
replaced boolean fields with Object fields and introduced weak references for rootNameFn and sourceFilterFn to improve memory management and prevent memory leaks
simplified the addition of elements in the AllAppsList by removing binary search logic to improve code readability and performance by eliminating
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed ` ThemedPreferenceActivity `
updated the value class from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to reflect the correct type used for
replace assertRootArcs ( ) with assertRootArcs ( ) in FST . java to ensure consistency in assertion formatting
added an assertion to check if the security policy file exists and is a file to ensure that the security policy is valid and is a valid file
fixed olingo2 component to use getconfiguration ( ) instead of getconfiguration ( )
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for operations to complete before proceed
removed exception logging from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging output for better readability
add action to publish image by http ( xmp )
camel - netty : fix potential npe in camel - netty
fix illegalargumentexception in balancedclickhousedatasource . spliturl ( )
remove the system property to disable the JSR199 compiler in FragmentActivator . java to optimize performance by eliminating unnecessary code
added null string handling to CSVRecordReader and its configuration to allow configuration of null values in CSV format
added LiquibaseService import and annotation to multiple connection classes to improve compatibility with Liquibase services during database operations
updated variable types from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to improve type specificity
change itemcommandtriggerhandler and itemstatetriggerhandler to match topic ( # 3550 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align exception
updated SolrXmlConfig to replace deprecated case " zkCredientialsProvider " with " zkCredentialsProvider " and refactored NodeConfig
fixed mana tablet not take damage when it ' s not in damage bar .
updated the assignment of the identifier collection in P25P2DecoderState . java to ensure that the current call event ' s identifier collection is
removed unused imports of DictionaryCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter from TestRandomChains . java to clean up the code
updated the thread pool executor name in ScryptUtil . java from " deriveKeyWithScrypt - % d " to " deriveKeyWith
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
updated assertion to include the definition parameter in TypeDefinitionRegistry . java to improve error handling by providing context for the assertion failure
added visibility control for the shareWithMeIcon view in LocalFileListAdapter to improve user interface by hiding the share - with - me icon
updated links from ` http ` to ` https ` in ` DefaultLogoutPageGeneratingFilter ` and ` LogoutPageGeneratingWebFilter ` to ensure
added @ NotNull annotation to the headers parameter and changed the method name from null to getOrLoadSortedService to enhance code safety by ensuring headers are
enhanced assertion message in TestIndexWriterMergePolicy to include detailed context to improve debugging and traceability of the assertion failure
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in new development
added context awareness checks and new test cases in CrawlerSessionManagerValve . java and TestCrawlerSessionManagerValve . java to ensure
added security checks to the ` getJspApplicationContext ` method to enable privileged actions when the security manager is enabled
updated maximum and minimum values for axial methods and modified length calculation logic in RocketComponentConfig . java to improve accuracy of component size calculations
replaced the singleton instance binding with a singleton scope binding in the NonceService class to ensure consistent handling of singleton instances in the authentication provider
added a call to ` thenCompose ` to update child links in the ` FileWrapper ` class to enhance the functionality of the parent link updates
refactor method signatures and parameters in SpringCloudPlugin . java for improved readability and consistency to enhance code clarity and maintainability by
increased the delay value for publishWithDelay from 100 to 500 in RetrievalBlockingMessageStoreTests . java to improve test accuracy by
add an option to disable shift - always for r . attr . isshiftalways .
updated heartbeat interval checks and leader election logic across multiple classes to improve accuracy in determining if a node is leader and enhance leader election detection accuracy
updated formatting of a conditional statement in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer to use identity . isReference ( ) instead of identity . getName ( ) to improve clarity
modified the ` newInstance ` method to accept a ` noop ` parameter instead of an ` AbstractCommandOptions ` to simplify the method signature and improve
added a delay of 3000 milliseconds to the catch block in TestListenTCPRecord . java to ensure proper timing for network operations
replaced the assignment of ` methodCall . arguments ` with a new variable ` originalArgs ` to improve clarity and maintain consistency in argument
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances and modified error handling in ` Main ` and `
int - 1212 add support for ' sequence ' and ' ignore - send - failures ' attribute on < router > element .
removed x509PublishUrl and x509ViewName from ClientKeyPublisherMapping and JwkViewResolver classes to streamline code by eliminating
modified the way readers are assigned in QueryComponent . java to ensure the correct SolrIndexReader is used when multiple readers are present
replaced custom MaxFloatFunction with Double2Parser for " max " and " min " in ValueSourceParser . java to improve precision in
removed conditional checks for focusable and pointer events in the Container class to simplify the return logic for better usability
removed unused variables ` n ` and ` minScore ` from ` Highlighter . java ` , and modified the ` next ( ) ` method
cloudstack - 3369 : use uuid instead of username to avoid conflict with mysql
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use conditional injection for FlowBuilderServices to improve flexibility in
added a new method to list remaining connections and updated database connection management in WriteJdbcPTest . java to enhance database connection management and improve code
removed conditional check for the " editor . laf " preference before setting the UIManager ' s look and feel to simplify the code by
replaced calls to ` getStateEntity ( ) ` with direct references to ` stateEntity ` in ` ServiceComponentHostImpl . java ` to
update margin calculation logic in FloatingTaskView . java to ensure correct positioning based on RTL support
added a condition to break the loop in RootFolder . java and modified the status line message in NavigationShareTab . java to improve control flow
do n ' t increment thread id if it ' s not need .
update default perspective to use defToolbar instead of a fixed value to improve flexibility in loading preferences
added NetworkAddressChangeListener implementation and improved logging messages in HomekitImpl . java to enhance network management and provide clearer logging information
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of lease directly to
set ` prefixHeader ` and ` linkStyle ` to ` Optional . absent ( ) ` in ` CxxLibraryDescription . java ` to
added a null check for the message before comparing it to " No space left on the device " to avoid potential NullPointerException when handling fatal IO exceptions
changed ` nextID ` from an ` int ` to a ` volatile int ` and modified related methods for thread safety to improve thread safety and
make the test more tolerant to slow machine
added HasSourcePath interface and updated methods in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes
simplified exception message construction by removing unnecessary StringBuffer usage to improve code readability and performance
added custom index field name for facet configuration in OrdinalMappingAtomicReader and updated tests accordingly to enhance facet functionality to support custom index field
updated the ` toEpochMilli ` method to handle negative and positive seconds correctly to improve accuracy of milliseconds representation in the ` Instant ` class
replaced ` getBufferType ( ) ` with ` getBufferType ( ) . name ( ) ` in ` OGLESShaderRenderer `
added functionality to block update scripts in CopyPaste . java to enhance user experience by allowing dynamic script updates
added a new file TestCMoveLimitType . java containing a test class for CharBuffer functionality to facilitate testing of character buffer
updated methods in ChannelState , RecordConfiguration , AudioPacketWaveRecorder , and OverflowableTransferQueue to improve handling of audio packet processing and
( chore ) camel - sql : fix checkstyle issue
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor code to encapsulate console creation logic within a new method ` makeCustomConsole ` to improve code readability and maintainability by redu
refactor token validation logic by introducing a new method ` validateToken ` to improve clarity and maintainability of token validation logic
added EOFException handling in Http11InputBuffer . java to improve error management for input stream operations
added unit test to verify deletion of group member in defaultgroupprovider .
( chore ) camel - ftp : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to remove obsolete or unimplemented replication protocol implementation
updated references from ` BuildRule ` to ` SourcePath ` across multiple Java files to improve clarity and consistency in handling classpath dependencies
added new classes ConstructorArgsDemo . java and StrictDemo . java , and renamed StupidFinal . java to FinalDemo . java to
make directtemplatefeaturecollectionfactory thread - safe
updated assertion to allow responseCount to be equal to 2 * replicationFactor to allow for more flexibility in handling different replication factors
added null check for getIndexNumber ( ) in ItemRowAdapter . java to prevent potential NullPointerException when item ' s getIndexNumber is null
rename method parameter from ' isAnchestors ' to ' areAncestors ' across multiple classes to clarify the purpose of the filter
added a check to return early if the app ' s width is less than 12 to optimize performance by avoiding unnecessary processing
updated change log parameter comparison from equality to equality in ChangeLogParameters . java and added a new test case in ChangeLogParametersTest . java
changed the loggers field from static to instance final in LogFactory . java to enforce immutability of the loggers map
updated return statement to return the base plot instead of the current plot to ensure accurate representation of the plot ' s base plot
( chore ) camel - rest : do n ' t warn if uploaddir do n ' t exist
updated ServerGenerator , ServerFCGIConnection , HttpTransportOverFCGI , ServerFCGIConnection , and FastCGIProxyServletTest to
added a check to ensure the comment string is not empty before processing it to avoid potential errors when the comment is empty
added functionality to remove BuckFileType associations from file types in BuckModule to improve file type management by ensuring all relevant file types are properly
replaced multiple specific function imports with a wildcard import and changed the return type of the multiply method from ToLong to ToInt to simplify import
added a new constant ` RTM _ OS _ ERROR ` and improved error messages in ` TestUseRTMLockingOptionOnUnsupported
reformatted code in AccountsActivityTest . java for consistency to improve readability and maintainability of the test code
refactor Player class to improve code structure to enhance maintainability and readability of the code
added mockitoPackageImport method to AbstractModbusOSGiTest to facilitate mocking of ChannelTypeUID in tests
make sure we do n ' t use ` nextindex ` in ` is guest to host reflective call ` .
reset the system context in ` ShadowFontsContract ` and reset it in ` AndroidTestEnvironment ` to ensure proper context management during tests
updated TimeGranularity and PinotDataSourceMaxTime classes to utilize Joda - Time for accurate time conversion to improve accuracy of time calculations
refactor control flow handling in ControlFlow . java and improve type checking in Guard . java to enhance readability and maintainability of the code
updated assertions in Assert . java to provide clearer error messages when arrays do not have the same size to improve assertion accuracy and provide clearer
fix switch / cases indentation see camel - 14540
updated the index calculation in MeshBuilder . java to correct the bitwise operation syntax to ensure proper handling of indices within the range
nifi - 1640 : remove controller service provider from processscheduler
added processing of Java annotation processor names in KotlincToJarStepFactory . java and a corresponding test in KotlinLibraryIntegration
updated RESCROLL _ DELAY from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION and refact
added shortcut permission checks and refresh logic in Launcher and LauncherModel classes to ensure shortcuts are only updated when the shortcut host permission has been
added case handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enable navigation for the history search functionality
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to enhance robustness
added marker selection functionality to the NearbyMapFragment to ensure the bottom sheet is hidden when the selected marker changes
added error handling for throwable processing in FileSyncAdapter . java to improve robustness by logging exceptions during execution
refactor memory assertion checks in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve robustness by capturing runtime exceptions
modified feed processing logic to filter feeds based on heavy load conditions to improve performance by avoiding unnecessary processing of feeds when heavy load is
add warn log if defaultdrmsessionmanager be use on wrong thread
updated ` AndroidBinaryDescription ` to use ` Locale . US ` when converting packageType and resourceCompressionMode to uppercase to ensure consistent behavior across
updated XML MIME type from " text / xml " to " application / xml " in multiple test files to ensure compatibility with the application ' s
updated configuration file references to use INSTANCE . confFile instead of configFile to ensure consistency in configuration management
updated the waitUntilReadyAndTimeout parameter from " sleep 5 ; exit 1 " to " exit 1 " in HostPortWaitStrategyTest .
updated mathematical operations in HiveExpandDistinctAggregatesRule . java to use LongMath instead of IntMath to accommodate larger values
added multiple checks for headless environment in mmm Toolkit . java and ppp Toolkit . java to ensure proper handling of headless
added a condition to check if the current recipe matches the furnace ' s world in ExoflameFurnaceHandler . java
planner - 235 : add solverconfig . move _ thread _ count _ none to allow solverconfig . move ( ) to override the
avoid issue with wrong resource name when use rev - include
added a new test file ` Issue582Test . java ` to implement a test for geom error handling in a tree map to ensure that
[ native ] add e2e test for bigdecimal overflow
refactor LoadingCache class implementation to improve performance and maintainability of the caching mechanism
added a new rule for avoidNonConstructorMethodsWithClassName in NamingRulesTest . java to enforce the use of non - constructor methods in class
danielwagnerhall : refactoring expectedconditions to make it easy to detect staleelementreferenceexception .
added a new method ` hasView ` to ` DatabaseSnapshotGenerator ` and modified error handling in ` ViewExistsPrecondition ` to improve error
updated DOMUtil . java for improved functionality to enhance performance and maintainability of the code
added translation calculations and logging functionality for task view animations to improve animation responsiveness and facilitate debugging of task view animations
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM to false in both FeatureFlags . java and RotationHelper . java
added a ` walk ` method to ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to handle document frequency comparisons to improve
added SolrQueryRequest parameter to create methods across multiple factory classes to enhance functionality by integrating query processing capabilities
updated SQL trigger statements and added validation checks for post content and announcement fields in SingleTableMySQLTriggerTest . java to ensure proper handling of null
refactor FieldValueHitQueue and TopFieldCollector to utilize a new setComparator method for better comparator management to improve code clarity and
updated string concatenation syntax for column _ date and column _ range queries in PhoenixQueryBuilderTest . java to ensure consistency in SQL query
added Spark initialization check to the init method in RequesterTest to ensure that the Spark instance is properly initialized before use
added methods to manage and save total storage pool , fee , and total storage limit in DynamicPropertiesStore . java to enhance functionality for managing storage
added support for streaming files in development mode by introducing NinjaProperties to enhance file handling capabilities for development environments
updated the condition to check for the map mark key in MapMarksManager . java to ensure the correct key is used for accessing map mark keys
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance functionality by allowing token rewriting
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` JavacProcessing
updated variable name from ` fileName ` to ` fullPath ` in ` JxBrowserManager . java ` and added exception handling in ` FileUtils .
added a condition to check if the AppVersion key equals " AppVersion " and modified image format comparison to use equals method to ensure accurate comparison
( chore ) camel - somfy : use getuid ( ) instead of getbridgeuid ( )
( chore ) camel - alberto : disable flaky test on github
replaced custom trust manager implementation with a static final keystore properties in OpenWireConnectionTimeoutTest . java to improve flexibility and maintainability of
do n ' t export nan for nan in dynatrace exporter ( # 2368 )
added functionality to remove a session from the session map to improve session management by ensuring only active sessions are removed
added hostname assignment for all alert events in HeartBeatHandler . java to ensure that the host name is set for all alert events
refactor the flushing logic in ChannelEndPoint . java to simplify the checks for empty buffers to improve code readability and efficiency by eliminating
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . xsd to
added tests for media player seek functionality and modified seek behavior to handle integer conversion to ensure accurate media position seeking and improve stability in handling different seek modes
rename method ` createTask ` to ` createThrowingTask ` across multiple classes to improve clarity and consistency in naming conventions
added a border to the tabCloseButton in Aqua LAF mode to improve the visual appearance of the button when the application is
added POST requests and connection timeout settings in TSPTimeStampService . java and refactored import statements in TestSignatureInfo . java to enhance
[ drools - 7 ] add support to xstream . createxstream ( ) to allow user to pass a custom mapper
updated diamond application condition in mmm Attr . java and added a new DiamondRaw . java file to improve error handling for
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in reloptutil
updated the validation logic for ID and value in Http2Settings . java to ensure that both unsigned 16 - bit and 32 - bit values are
deleted the ` MapInterfaceTest . java ` and ` Issue664Test . java ` files to remove obsolete test cases that are no longer
remove test that fail because it be not possible to operate on a disposed session
gejsonwmsbuilder need to call endobject ( ) instead of startobject ( )
replaced the method ` setIndex ( mode ) ` with ` intValue ( ) ` for setting the selected index to ensure consistent handling of the selected
added a check for manually unstashing state in TaskbarStashController to ensure proper handling of unstashing based on the current state
camel - 14850 : camel - jbang - dump route a xml only if customid = true . thanks to joao
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting for expected events to enhance flexibility in handling event mismatch messages based
added a new file ` HeaderFixer . java ` to process and write headers for Java files to facilitate the fixing of
added functionality to send a broadcast for the first load completion in the launcher to improve user experience by notifying users when the first load completes
deleted the file ` SuperJumperAndroid . java ` from the project to the project is no longer needed in the project
updated the return value of ` SystemTableScan . java ` and modified the test cases in ` TestStarQueries . java ` to enhance functionality
removed interfaces KeyValuesProviderAware and ObservationConventionAware from the Observation interface to streamline code by eliminating unnecessary interfaces
remove miss block and item from registry if they be miss
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast the variable ' i ' to a long to ensure proper
added caching mechanism for date and format strings in HSSFCellStyle . java to optimize performance by reducing redundant calls to getDataFormatString
updated the request to include a username filter in the response to ensure that only valid usernames are retrieved from the server
updated condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure proper
updated logging mechanism in Launcher . java to include container information and workspace to improve logging clarity for better debugging and tracking of app launches
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove deadlocktest . no longer need
fix for bugcontentprovider . updatecontent ( ) to handle null input .
added a " Reopen in Browser " menu item and implemented URL opening logic in the browser to enhance user experience by allowing users to open URLs
added a new error message for duplicate output specifications and refactored existing code for clarity to improve error handling and provide clearer diagnostics when
updated the ` addEntryListener ` method to include an ` EqualPredicate ` parameter to enhance the functionality of the ` addEntryListener ` method
fix coordinatearray . reverse ( ) to handle case where only one element be present
reformatted the setOpen method call in ToolbarPanel . java to improve code readability and maintain consistency
added a boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper initialization of the
replaced invocation of enterOverviewMode ( ) with showOverviewMode ( true ) to simplify overview mode handling and improve code readability
http : / / issues . apache . org / activemq / browse / amq - 2283 - fix networkroutetest
http : / / issues . apache . org / activemq / browse / amq - 2283 - fix int overflow when use
fix checkstyle issue in test / java / util / nestedarithmetic / nestedarithmetictest . java
refactor HttpClientRequestImpl to simplify component addition and improve buffer handling in HttpTest to enhance code readability and maintainability while ensuring proper buffer
updated the artifact replacement logic in GetMavenDependenciesTask . java to ensure correct formatting of artifact identifiers and improve clarity
pdfbox - 2576 : remove unneeded cast , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to clean up the code and improve readability
do n ' t expose query type in fieldvisitor . isvisible ( )
added configuration options for HTTP JSON - RPC port and enable dynamic port assignment to improve flexibility and control over HTTP communication based on user settings
added a type check before removing a drop target from the drag controller to ensure type safety and prevent potential runtime exceptions
refactor stub jar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by reducing duplication in
added new features for Setup wizard and workflow management in StartPageTopComponent . java to enhance user experience by providing clear guidance on configuration and
fix race between start and stop of cassandra daemon . patch by brandonwilliams , review by jbellis for cassandra - 14
simplified the retrieval of the online object by removing unnecessary type checking to improve code readability and reduce unnecessary type casting
changed ReturnAttributes . NONE to ReturnAttributes . ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are returned
refactor the handling of ` onIdleTimeout ` and add failure listener functionality in ` HttpChannelState ` and ` HttpChannelTest ` to
changed the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to improve performance by avoiding blocking operations
updated the table header separator regex and added comprehensive tests for multi - column scenarios to improve the accuracy of header parsing and enhance test
change the return value of the method from 32.0 f to 31.5 f to improve the responsiveness of the camera
added a startOnBootup preference in GpsSettingsActivity and modified return values in Utilities to remove the " 192.168.1 .
change the client secret encoding from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to enhance security by using a longer cryptographic
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include the parameter name in the error message to clarify that the
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily skip tests due to potential issues with race conditions
updated methods in SegmentGenerationAndPushTaskExecutor to replace PinotFSFactory usage with PluginManager for improved initialization to enhance flexibility and
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting based on the application ' s locale
added MetalLookAndFeel import and set it as the current look and feel to enhance the UI appearance by integrating Met
refactor ping handling to use a synchronized block for thread safety to improve thread safety and ensure proper shutdown of scheduled tasks
removed the throwable . getMessage ( ) from the error message in GlobalErrorHandler . java to simplify error handling by using the throwable directly
refactor methods in ModuleTable and PackageTable to use ' from ' instead of ' module ' for clarity to improve code readability and
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added a deprecated ` hashCode ( ) ` method
refactor variable types for clarity and consistency in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintain
change minimum and maximum zoom levels for the map zoom controls in BasicMapViewer to ensure that the zoom level does not exceed the maximum allowed range
refactor user authentication logic to utilize ImpersonationUtil for obtaining process user and group to improve clarity and maintainability of user
8028270 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added argument extraction support to DelegatedClientAuthenticationAction and updated service resolution logic to enhance flexibility in service resolution by allowing custom argument extraction
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure immut
replaced tileCache . destroy ( ) with destroyTileCaches ( ) and createTileCaches ( ) in TileSizeChanger . java to
removed redundant calls to ` addInfoRow ` and ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment ` and ` InfoLayoutHelper
refactor cleanEntriesForFeedsWithoutSubscriptions method to improve clarity and maintainability of the cleanup process
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with direct variable ` auth ` in ` ImmutableAssertionTests . java `
nifi - 1342 : use temporaryfolder in filebasedclusternodefirewalltest to avoid test failure on window
[ conic ] make sure conic five point be always 1 / 2 instead of 1 / 3
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations in Fields . java and MockitoBeforeTestNGMethod .
refactor CImage methods to improve image handling and array manipulation to enhance code readability and facilitate easier manipulation of image data
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to align with updated
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` and update related references to clarify the purpose
replaced manual null checks with ` Objects . equals ` and ` Objects . equals ` utility methods across multiple classes to improve code readability and
fix classnotfoundexception in astdisambiguationpass .
added tests to verify default location keys for various HTML view configurations in NinjaDefaultTest . java to ensure that the system correctly reflects the
rename ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and introduce ` allAppsCellSize ` for better clarity
updated padding calculation in DetailFragment . java and modified list view position offset in ListFragment . java to improve layout responsiveness and align with
modified exception handling and thread interruption logic in ZkStateReader . java to improve clarity and ensure proper interruption handling for
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure robust handling of
server : check if static nat be enable when it be not support in the network
added resetHeaderScrollingState ( ) and setFabVisible ( false ) calls in OCFileListFragment . java to ensure consistent UI behavior
added functionality to remove extra blank screen from the workspace to improve user experience by ensuring an empty screen is removed
added a fixedWidth flag to the BitmapFont class and modified xAdvances calculation based on its value to improve flexibility in glyph width adjustment
removed the showTitle parameter from the createFragment method and refactored related code to streamline fragment creation and improve code readability
added preEvent , preTransition , and postTransition methods to AbstractStateMachineFactory to enhance state machine functionality and error handling
rename ConfigDescriptionProvider to ConfigDescriptionProvider to improve clarity and consistency in naming conventions
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf usage in StorageBasedMetastoreTestBase to enhance role management and ensure compatibility
refactor facet sorting logic to use a boolean variable for clarity to improve readability and maintainability of the code
updated the properties expansion logic in CheckstyleReport . java to use a dynamic directory path instead of a hardcoded target path to improve flexibility
refactor DeleteInactiveReplicaTest to improve replica management logic to enhance clarity and maintainability of the test execution process
added a filename parameter to the newInstance method in FileActionsDialogFragment to allow users to specify a filename for the dialog to enhance user experience by
updated the logic for determining reorder direction in CellLayout . java to handle both MODE _ ACCEPT _ DROP and MODE _ ACCEPT _ EXTERNAL to
renamed account - related fields and updated API endpoint paths in InnerTransferRequest . java and AccountAPI . java to improve clarity and align
fix flakiness in sinkstresstest ( # 1889 )
added a new annotation ` EnableAdminClient ` in the package ` org . noear . solon . admin . client . config ` to
replaced specific imports with a wildcard import and added visitIdentifier method implementations to enhance code readability and maintainability by simplifying import statements and
set the action text color of the AuthenticatorActivity to the primary dark color to enhance the visual appearance of the authentication activity
added ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and modified related classes to utilize ` ComparableField ` for
renamed methods from ` addTestStepsFor ` to ` createTestStepsForBefore ` and ` addTestStepsForAfterStep ` to
rename method ` invalidMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests ` to clarify the
added a method to cancel a client in RpcServer and updated the startDriver method to include a message to improve error handling when a child process
added methods to handle implicit pre - coercion values in SkylarkParamInfo and related classes to improve the handling of default values
initialize ` lastDisplayedUser ` with ` Optional . empty ( ) ` in ` FileDisplayActivity . java ` to ensure ` lastDisplay
added an ` findAll ` method to ` QueryDslMongoRepository ` and a new test method in ` AbstractPersonRepositoryIntegrationTests ` to
added null checks before stopping ` SchemaRegionConsensusImpl ` and ` DataRegionConsensusImpl ` to prevent potential NullPointerExceptions when stopping the
exit the warm - up loop in case of a failure .
add xread ( ) and xreadgroup ( ) method to pipeline pipeline interface
refactor LinkedBufferInput and StreamInput classes to improve readability and maintain consistency to enhance code clarity and maintainability by standardizing method
added WebSecurity customization and conditional bean registration in CasWebAppSecurityConfiguration . java to enhance security configuration by integrating Spring ' s Web
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to include
added a method to register a ContentProvider and modified the ContentProviderController to register content providers to enhance the functionality of the ContentProviderController and
rename ` Version ` parameter to ` ClassFile . Version ` in ` AttributeReader ` constructor to improve clarity by using a more descriptive type
added a new configuration setting for keep - alive status to ensure proper connection management based on the configuration settings
[ java ] : fix npe in driverconductortest . java when unicasting a flowcontrol .
ggb - 1342 : do n ' t draw locus with no point in 2d
added error handling for IOException in HttpServerTestBase and modified WebSocket connection logic in WebSocketMessageD13Test to improve robustness of WebSocket operations and
simonstewart : add ability to take screenshot into account .
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and leverage built - in assertion features
trufflelanguage : remove deprecate trufflelanguage . getcontextreference ( ) .
initialize the variable ` e ` to ` null ` in ` StubberImpl . java ` and add ` StubbingWithBadThrowables
updated error handling in Actor and Group classes to throw exceptions for non - ascendant actors to improve clarity and specificity of error messages
updated location permission handling in LocationPickerActivity and ContributionController to improve user experience by enabling direct access to the map
http : / / issues . apache . org / activemq / browse / amq - 2352 - add a simple mbean to
added standard cookie specification to request configuration in GetHTTP . java to ensure compliance with HTTP standards and improve request performance
simplified the overlap check in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated log message in Airspy
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel classes to enhance functionality by allowing users to browse monitoring information
added a default value for the SERVICE _ CREATE _ TIMEOUT configuration in KubernetesConfigOptions . java to provide a configurable timeout for service creation
updated icon resource assignment in NearbyListFragment to differentiate between landmark and city place descriptions to improve user interface clarity by providing
added a null check for the package before processing it to prevent potential NullPointerException when the package is not available
added a new file ` PrintInlining . java ` containing a simple Java program that prints a " Passed " to facilit
fix ( javadoc ) : add support for nested brace in javadoc tag ( # 4329 )
[ java ] clean up unused field in archivetest .
updated the data source from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated logging statements in VideoManager to use float precision instead of integer for playback speed to improve logging precision for better debugging and tracking of playback speed
send a room remove event when cluster be start
updated the JSON object from ' minimize : ' replicas to ' minimize : ' cores ' in AutoScalingHandlerTest . java to ensure that the test
added key fading and generation options for texture keys in TextureHelper . java to enhance texture management by enabling fading and mipping
refactor PythonDslProjectBuildFileParser to use EventReportingProjectBuildFileParserDecorator instead of PythonDslProjectBuildFileParser to
[ j2kt ] add librarynormalizationpass to allow the transpilation of non - standard library .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactoryTest
[ hotfix ] fix checkstyle violation in memorymanager
added import statements and annotation for TemporalType in ConsoleSessionVO . java to enable proper handling of timestamps in session management
added Hbs and HbsTest classes for template engine integration to facilitate template management and testing within the Jooby framework
refactor chat message handling to check for null or empty hints before setting the visibility of the info and incoming messages to improve code clarity and
changed the iteration method from keySet ( ) to values ( ) for measurement retrieval to ensure accurate iteration over header names
simonstewart : add test for waituntilalertdialogappears ( )
added a condition to return null if there are more than two distinct column indices to optimize performance by avoiding unnecessary processing when there are more columns
updated file handling logic in MiscUtils . java to improve path management and error reporting to enhance robustness of file processing and provide clearer
regenerate client with updated copyright year ( # 4382 )
replaced ` websocket - server ` and ` websocket - client ` with ` jetty - websocket - server ` and ` jetty - websocket
updated return statement to return an unmodifiable map of identity attributes to enhance immutability and prevent modification of the identity attributes map
fix for setmodified ( ) not update when sketch be change
replaced instances of ` new Double ` and ` new Float ` with direct return values in ` ConstantDouble ` , ` ConstantFloat ` ,
updated the method to retrieve timestamps from the result set to ensure accurate timestamp representation in the result set
updated conditional check in HtmlJndiTreeReport to include " javax . naming . Context " in addition to " javax . naming . Context "
updated database options handling in StorageUtils . java and modified log message formatting in Manager . java to improve clarity and maintainability of database options
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
added FLAG _ SLIPPERY import and modified FLAG _ SLIPPERY constant in StatusBarTouchController . java to enhance
truffle : fix truffleconstantfieldprovider . getarraydimension ( ) for array .
added methods to get and set the Google Drive folder path in PreferenceHelper to enable dynamic configuration of the Google Drive folder path through user
ggb - 1340 shufflingsuggestions ( ) do n ' t show the suggestion popup when the user click on it .
added @ Nullable annotation to target parameters in assertThat methods to improve null safety and clarify that target can be null
updated bitwise operations in ArrayUtil . java for improved clarity and correctness to enhance the functionality of the array manipulation logic
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to include a method to check if a constructor can be instrument
added a mechanism to track and manage waiting for an anticompaction in StreamIn and StreamInManager classes to improve performance by reducing
added a boolean field ` isKeyguardSecure ` and methods to get and set its value in ` ShadowKeyguardManager ` , and updated
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the StringDialog class
updated string splitting logic in GrblUtils . java to handle spaces correctly and added a conditional check for number of overrides to improve robustness
corrected the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleThrowables ` to
modified the ` checkDrained ( ) ` logic in ` AsyncFileImpl . java ` and added a new test in ` FileSystemTest
updated LIGHTS _ NUM and LIGHT _ INTESITY values and modified shader parameters in HybridLightTest . java to optimize light
replaced instances of ` FakeProjectFilesystem ` with ` Workspace . getProjectFileSystem ( ) ` in several test files to streamline filesystem initialization and
changed the type of ` loadRerunFile ` and ` loadRerunFile ` methods from ` String ` to ` PathWithLines `
updated Gson , JsonArray , and JsonObject classes to improve code consistency and maintainability
removed the @ NotNull annotation from TEST _ DIRS in PubRoot . java to indicate that the TEST _ DIRS array is not null and
added a call to close the ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in the BasisLibrary class to improve thread - safety and performance in managing prefix indices
added logging level for HttpConnection in TestDistributedStatsComponentCardinality . java to improve debugging visibility for HTTP connections
added ` throwIfImmutable ( ) ` method to ` IntList . java ` to ensure immutability of elements in the list
added @ NotNull annotation to the event parameter in GrpcServerRunner and updated URI creation in GrpcClientBuilder to enhance code safety and ensure
updated package structure and refactored workDir method to use a Supplier for better flexibility to improve code readability and maintainability by using
fix a race condition in insight . getkeysunchanged ( ) and insight . getfunctionsarray ( ) .
added platform - specific handling for writing the output manifest file in GenerateManifestStep . java to ensure compatibility with Windows file systems and improve error handling
fix for sf bug # 3531161 - redundant null check of nonnull value
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry . java and refactored null checks in ThingResource . java to improve code
throw a runtimeexception instead of throwable in masterjobcontext # createcancellation
pdfbox - 4892 : do n ' t overwrite image if there be no crop
refactor ManagerBase . java to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access to All Ap
replaced direct instantiation of FragmentActivity with ActivityController to simplify activity lifecycle management and improve code readability
renamed method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` to improve clarity and
rename class ` ABCase1 _ * ` , ` ABCase2 _ * ` , and ` ABCase7 _ * ` to `
updated the parameter name from ' num ' to ' value ' in the saveEnergyPriceHistoryDone method and added a null check for the
refactor handler assignment in OpenRocketViewer to use a separate variable for clarity to improve code readability and maintainability by separating
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to change the groupId and artifactId of a specified Maven dependency to enable the
refactor file system and directory initialization in IndexingJob . java and add a warning log in SegmentChecker . java to improve code clarity
replaced ` gte ` with ` lte ` for address comparison in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java
replaced the implementation of ` replacementPaths ` and ` pathToSourcePathMap ` with memoized suppliers to improve performance by reducing
rename JsonExamples class to Examples and update package - info . java to improve clarity and consistency in naming conventions
added debug logging statements to the ViewExtractor class to improve visibility into the process of extracting and copying jar entries
apply a consistent copyright notice to the java / tree .
added a new file ` Main . java ` containing a class that prints the " java oop entry point hit " to facilitate
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
removed duplicate continue statements in NativeScanner . java to improve code efficiency and readability
changed package structure from ` net . pms . test ` to ` net . pms . configuration ` in RendererConfigurationTest . java to
refactor dependency resolution to use memoization for improved performance to enhance code readability and performance by leveraging memoization
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling to the metadata in ExtractingDocumentLoader to ensure proper content encoding is included for metadata processing
cloudstack - 8551 : fix mysql compatibility issue in the configuration table
added a check to return early if the slot is - 1 in PlayerInventory . java to prevent unnecessary processing when the slot is not initialized
added support for ignoring transitive repositories in Maven execution requests to enhance flexibility by allowing users to optionally ignore remote repositories introduced by transitive dependencies
removed redundant injection of BackgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating unnecessary injection
updated ColorsActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android features and enhance functionality
added null check before closing selection in NIOTransport to prevent potential NullPointerException when selection is null
added a check to break execution if the matcher ' s start and end are the same and the current index equals the length of the string to
updated the IntegrationTest annotation in MvcITest . java to specify a server port to ensure the test runs with a valid port configuration
added a new User Defined Function ( UDFReverse ) and registered it in the FunctionRegistry to facilitate the reverse operation of the
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple classes to improve clarity and consistency in obt
refactor Tracer class to improve code readability and maintainability
[ hotfix ] [ test ] disable flaky rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java by using wildcard imports to improve code readability and reduce unnecessary import statements
added synchronization and functionality to clear the buffer in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during the clearing of the
updated forecastMinutes , forecastHours , and forecastDays from 0 to 60 and 8 in OpenWeatherMapOneCallHandler . java to adjust
add a timeout to abstractpagedoperationtemplatetest . testlastfetchtime ( )
updated RemoteTargetGluer to log a warning and modified FloatingHeaderView to include animation and suggestion mode functionality to enhance debugging capabilities and improve
updated methods in CucumberPropertiesParser to return a Stream instead of a Collection and changed return type of parseRerunFile to return a
add the ability for the creative tab to demonstrate how to add the chiseled block to the creative tab .
updated assertions in TestRadioButtons . java to use consistent parameter order to improve code readability and maintainability
added support for the -- file - sizes option in RCFileCat . java and implemented a method to retrieve uncompressed and compressed row counts in RC
updated multiple Java files related to clustering and statistics to improve code organization and enhance maintainability
[ jna ] improve error message when mxnet ndarray be already close
refactor BlobServer class to improve data handling to enhance performance and maintainability of data storage operations
fixed bug 1241781 - unusedprivatemethod no long report false positive for static inner class .
corrected variable name from lexicalScope to lexScope in multiple Java files to improve clarity and consistency in variable naming
added a test to verify the auto - startup functionality of the SFTP adapter to ensure that the adapter does not run if it ' s not
added methods to retrieve level and root in Node , Quadtree , AbstractNode , and ItemBoundables , and modified STRtreeNode constructor visibility
modified version parsing logic to handle both single and double - digit minor version numbers to improve robustness in parsing version strings
do n ' t try to persist tag of an item that do n ' t exist
added a new ` parseDateTimeStringToEpochMillis ` method to ` DateTimePatternHandler ` and a new ` fromDateTime ` method in ` DateTime
refactor disassembly logic to utilize a new method ` disassembleForCache ` for improved cache handling to enhance code clarity and
refactor Log4j2ConfiguratorServlet to improve logging functionality to enhance performance and maintainability of the Log4j2 configuration
replaced the initialization of HiveException and AuthorizationException with direct return statements to simplify code by eliminating unnecessary error handling
updated the cpp command prefix handling in CGoCompileStep . java and added a new test in GoBinaryIntegrationTest . java to improve
fix : add builder support for customresource
updated the @ Override annotation in the Only class to ensure proper method overriding and improve code clarity
added a constant for a timeout value of 3 hours in HttpClientFactory to allow for a longer timeout duration for HTTP connections
added new pipeline name handling in PerBuildStateFactoryWithConfigurableAttributes and updated usage in RawTargetNodeToTargetNodeParsePipeline to improve cl
simonstewart : add a test for enable everything but trace
added the @ Singleton annotation to the ApplicationController class to ensure the ApplicationController instance is not shared across multiple instances
refactor username retrieval logic in ShareActivity to use OwnCloudAccount for better handling of account display names to improve user experience by providing a
added BatchStatus import and implemented a test for resuming a job in SimpleJobLauncherTests to ensure proper job execution status management during job resum
added a null check for cacheConfig in HttpSyncDataService . java and refactored data refresh handling in DataRefreshFactory . java to
douniaberrada : make the dockersession class public and add a test for it .
fix compilationunitcontext . getpackagedeclaration ( ) to work with java . lang .
pdfbox - 2576 : use nonsequentialparser instead of pdfparser , a suggest by valerybokov
make testdistributedlanczosscollectorcli more robust to the fact that the lanczos solver do n ' t
rename HttpServerTestBase . java file to improve clarity and consistency in naming conventions
updated assertions in PortletApplicationMapTest to check for keys instead of entries to improve test accuracy by verifying the presence of keys in the map
added tests for DynamoDbIgnoreNulls in BeanTableSchemaTest and NestedBeanIgnoreNulls classes to ensure correct behavior of inner bean mappings when
add redissonautoconfigurationcustomizer interface so it can be use by spring
fix indicator . todouble ( ) to avoid index out of bound
added a new method ` execInContainerWithUser ` to the ` ContainerState ` class and modified its usage in ` ExecInContainerPattern
simplified the logic for setting interestedInByteMessages and interestedInTextMessages in NettyWebSocket . java to improve code readability and
added test cases for attribute conjunctions and negated attributes in SemgrexTest . java to enhance testing coverage for semantic graph parsing and validation
added a broadcast intent to clear the pull - to - refresh status in the HomeFragment to enhance user experience by providing immediate feedback during the clearing
simplified the initialization of ` isPreGingerbread ` and ` overScroller ` in ` TouchImageView . java `
add a flush method to the defaultprofilevalidationsupport to prevent memory leak
camel - 1640 : camel - core - optimize to avoid use atomicboolean .
added FloatingActionButton functionality to manage the visibility of the main FAB menu in ShareActivity to enhance user experience by allowing users to open
added inline parsing functionality and improved error handling in ToDateTokenizer . java to enhance date parsing capabilities and provide clearer error messages
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated Swedish error messages in ` ErrorMessages _ sv . java ` and ` XPATHErrorResources _ sv . java ` to improve
added a server check and improved error handling in AuthenticatorActivity to ensure the server address is checked before binding to operations service
updated Position constructor to use getBeginLine ( ) and getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn ( ) to ensure accurate
added waitFor ( ) method and error handling in CxxPreprocessAndCompileStep . java and ManagedThread . java to ensure proper process termination
added a new boolean field ` requireAllRepositorySources ` and its implementation in ` PrincipalAttributesProperties ` , ` CoreAuthenticationUtils ` , and
increase ` ` max - size - per - node ' ' to ` ` max - size - per - node ' ' ( # 2
added support for enabling SSL protocols in NettyWebServer and related classes to enable dynamic configuration of SSL protocols based on server settings
replaced AtomicBoolean with AtomicReference and introduced a Wrapper class to improve thread safety and encapsulate object management
updated the return statement in QueryDslMongoRepository to handle null properties and added a new test in SpringDataMongodbSerializerUnitTests to
updated assertions and error messages in RoundRectBorderTest . java for clarity and consistency to improve test readability and provide clearer guidance
added check for empty genesis config and refactored bft test name to use ' bft2 ' instead of ' ibft2 '
simonstewart : remove flaky parallel test
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array
changed condition from ' windows ' to ' ! windows ' in ProcessInformationsPanel . java to ensure proper handling of non - Windows environments
refactor collector methods to improve naming consistency and clarity to enhance code readability and maintainability by standardizing naming conventions
added null checks and improved WebSocket client extension handler in BitmexStreamingMarketDataService and BitmexStreamingMarketDataService
added validation checks for latitude and longitude in GeoPointField . java and created a corresponding test case in TestGeoPointField . java to ensure
updated method names and logic for creating and saving workflow files in OozieProxyImpersonator and WorkflowFilesService classes to improve clarity
refactor ResponderId class to improve code organization to enhance maintainability and readability of the code
updated the ` getTableDocument ` method to include a ` withDependents ` parameter to control whether dependent tables are added to the table document
added handling for consecutive uploads without coordinates in UploadActivity to improve user experience by informing users when attempting to upload consecutive uploads without coordinates
added caching functionality and a new endpoint for viewing profile data in ProfileResources . java to improve performance by reducing redundant serialization of profile data
refactor JpaMetamodelEntityInformation to improve identifier determination and property value extraction to enhance code clarity and ensure proper handling of Id
added new methods to bootstrap timestamps for tables , views , and indexes in UpgradeUtil . java and updated related tests in UpgradeIT . java to
add the ability to register jersey exception mapper in jersey - jersey .
added a boolean parameter to the method call in EntryEditor . java to provide a default value for the field action
updated nativeCreateNSWindow method to include an owner pointer to ensure proper context is used for window creation
updated SQL statement to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to improve clarity by using a more descriptive identifier
added STOCK tile functionality to the mmm Tile . java and ppp Tile . java files to enhance the game ' s ability to
fixed - rbuckets . get ( ) method throw classcastexception if codec be n ' t specify for async command . # 332
add findunrelatedtypesingenericcontainer annotation to findunrelatedtypes in generic container
refactor ` LauncherBackAnimationController ` to utilize ` BackProgressAnimator ` for improved animation handling to enhance the responsiveness
changed the visibility of ` _ initialPageNo ` from final to non - final and added logic to adjust its value based on the ` page
fix incorrect calculation of crc16 in jedisclusterCRC16 . java and increase total _ operations to 100000000 in benchmark .
added regex pattern matching for comment parsing in FormattedSqlChangeLogParser . java and a corresponding test in FormattedSqlChangeLogParserTest
refactor JarArchiver initialization in MavenArchiver and update AbstractJarMojo to use it to improve code clarity and maintainability by
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing more specific exception
refactor aggregation handling in TSServiceImpl . java and add multiAggregationTest . java in DaemonTest . java to improve code clarity and
added support for reading pixel data from WebGL using ByteBuffer in GwtGL20 . java to ensure compatibility with WebGL 2.0 and
added a new test method ` testDebugInfo ` and refactored existing methods in ` OutputMemoryTest ` , ` PrintR ` ,
updated exception handling in InlineBytecodeGenerator to provide a clearer error message when instrumenting classes within the mock ' s type hierarchy to improve
add trace for class initialization trace .
fix typo : queryleveltimeoutms should be querytimeoutms , not queryleveltimeoutms
replaced Google Commons cache with Caffeine for loading topic routes to improve performance and maintainability by utilizing Caffeine
modified the createDataSource method to accept a readOnly parameter and updated its implementation accordingly to enhance data source flexibility by allowing data to be read -
updated the regex pattern for identifying invalid source and target releases in FindBuildToolFailures . java and added a fatal error in FailureLogAnalyzerTest
updated URI construction and added location retrieval logic in DetailFragment . java to enhance user experience by providing direct access to location information when location is not
nifi - 1745 : fix npe when retrieve inherited parameter context
refactor ClassLoader methods for improved clarity to enhance maintainability and readability of the code
added origin response header functionality to ProxyRequestHelper and created a corresponding test in ProxyRequestHelperTests to enhance proxy request handling by associating origin
added a new instance of ProfileSettingDrawerItem in GpsMainActivity to enhance the navigation drawer functionality in the application
added XML _ VALIDATION _ ATTR to Globals and Constants , and updated related classes to utilize this new constant to enhance XML validation handling
danielwagnerhall : fix a bug in the firefox driver that cause the j error message to be print to the
added maxRows handling and validation for fetchSize and maxRows in IoTDBStatement . java to ensure that fetchSize does not exceed the defined
refactor methods in SqlStreamTerminator to improve clarity and functionality to enhance code readability and maintainability by using more descriptive names
added mouse and click event handlers for node and mouse interactions in StandardVizEventManager to enhance user interaction by allowing selection and interaction with node
[ java ] remove unnecessary boxing in manytooneringbuffer
[ drools - 725 ] add getter / setter for xorgroup in terminalnode
removed methods ` getHeight ( ) ` and ` getWidth ( ) ` from ` LCDUIImageMonochromeBitmapSource ` to streamline
refactor methods in SourcePathResolver to use getPathPrivateImpl for improved path handling to enhance code clarity and maintainability by centralizing
fix dstu2 identifier type do n ' t work correctly ( # 3649 )
modified the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and added URL encoding checks to enhance accessibility and
rename ` TestGCCSuiteCompile ` to ` TestGCCCompileSuite ` and update related file names to improve clarity and consistency in
added a private method ` getCxxPlatform ` to retrieve ` CxxPlatform ` based on ` BuildTarget ` and ` args ` to improve
added imports for ` IndexReader ` , ` IndexReader ` , ` Field ` , and ` Similarity ` in multiple Java files to enhance
updated the ` peek _ deadNode ` method to ` peek _ bubble ` and added a new test method ` peek _ bubbles `
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before accessing its properties to prevent potential NullPointerException when mDirectories is null
updated gesture end target condition in RecentsView . java to ensure proper behavior when overview state is not enabled and first layout is not present
added multiple package - info . java files for various Lucene packages to organize package - level documentation and improve code organization
updated the text of the visible auto leveler component from a hardcoded string to a localized string to improve user experience by providing a clearer
added support for post - optimize callbacks in DirectUpdateHandler and DirectUpdateHandler2 to enable post - optimize functionality in the update process
updated Inflater and Deflater initialization to set a dummy byte to zero to ensure proper handling of compressed data during compression
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if the base is a local MetaStore before retrying retries to ensure retries are only attempted when the meta store is available
updated exception handling in HeliosSoloLogService . java to include checks for TimeoutException and ConnectionClosedException to improve error logging clarity
refactor methods in Subject class to improve code readability and maintainability
fix npe in abstractserializationservice . typeMap ( # 16338 )
updated color distance calculations in HSSFPalette . java and added a new test method in TestHSSFPalette . java to ensure accurate
doc : fix docstring formatting ( # 119 )
danielwagnerhall : add a new test for xpath library .
added a flags parameter to the registerReceiver method across multiple classes to enhance receiver registration functionality by allowing flags for better control over receiver registration
fix flaky ffmpegtest . testversion ( )
refactor OggInputStream to manage previous input streams and improve memory management to enhance resource management and prevent potential memory leaks
replaced a hardcoded string with a constant for null response messages to improve code readability and maintainability by using a defined constant
updated condition to check if anomalyFailureCount and anomalyWarningCount are both zero to ensure that anomaly warnings are only processed when both
refactor Toast handling in BaseActivity and DetailActivity to use a new showToast method to improve code readability and encapsulate toast
updated the method to retrieve HTTP method and request template in TracingFeignClient . java to enhance the request creation process by utilizing the delegate
added validation for LDAP names and updated referral handling in LDAPCertStore . java to ensure valid names and improve error handling during referral operations
refactor the retain logic in GatewayRSocket . java to use a new retain method to improve code readability and reduce duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test method for clicking an item to improve clarity
[ hotfix ] [ test ] fix test instability in checkpointfailuremanageritcase
remove genericitemuiprovider since it be n ' t use anymore .
add ` ` select object ' ' property to sipcommselectorbox to allow customization of the select object .
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to indicate that the static method of FileSystemPool is accessible for testing
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to set the host to bind to the HTTP server configuration
updated token validity settings based on client grant types in DynamicClientRegistrationEndpoint . java to ensure proper handling of token validity based on whether the client
added a new class ` CloverInstrumentationFilter ` and modified the ` SplitLogCounters ` class to include a check for candidate classes to
[ miio ] add support for smartmi evaporative humidifier ( zhimi . humidifier . cb2 )
fix plausibletobreak ( ) not take into account the mining duration .
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to provide a clear error message when the repository
simplified the equality check for ` containsMissingValue ` in ` IntHashSet ` to improve readability and correctness of the comparison logic
added Serializable interface to RuleAdministrator to enable serialization of RuleAdministrator instances
replaced List < String > with Set < String > for allowedOrigins and added Pattern < String > in the generateAllowedOrigins method
updated g3d and g3d test files in BaseG3dHudTest . java and NewModelTest . java to improve
added error handling for updating the latest solidified block in the Manager class to improve robustness by logging an error when solidifiedPosition is negative
hbase - 2695 fix npe in execresult . getcoprocessorexec ( ) ; add test
added a method ` hasAccess ` to check if a remote user is authorized to access a specified remote user and improved error handling for unauthorized
replaced the ` writeTo ` method with a ` getStubClassBytes ` method in ` ClassMirror . java ` and refactored the
added internalLinkText to FileDetailSharingFragment for displaying share link text based on file type and folder status to enhance user experience by providing clear
updated the assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
modified the condition to check if the day of the week is not equal to the week in ModelZooTest . java to ensure the test
added input hiding functionality in ` AllAppsContainerView ` and logging in ` LauncherAllAppsContainerView ` to improve user experience by
simonstewart : use an embed event store for test
refactor BsdFileStore to use BsdNativeDispatcher for obtaining mount name and improve error handling to enhance code readability and maintain
add test case for issue # 1559 methodcallexpr . calculateresolvedtype ( ) fail
added x , y , and z parameters to the spawn command in SpawnCommand . java to enhance command functionality by allowing customizable spawn positions
added a constant for minimum content area and refactored related methods to use this constant to improve code readability and maintainability by centralizing
move dump from hotspottest to graalcompilertest to avoid name clash
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added failed checks to ` UpgradeCheckRegistry ` and reformatted the ` addColumnsToUpgradeTable ` method in ` UpgradeCatalog280 `
refactor Environment class to improve code readability to enhance maintainability and facilitate future development
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with BadApple to address issue SOLR - 7421
updated the home string construction logic in CodenameOneImplementation . java and removed a warning in HashtableContent . java to ensure that the home
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
simplified import statements and modified resource accessors in LiquibaseEntityResolver and XMLChangeLogSAXParser to enhance resource management and
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to improve security by preventing unnecessary algorithms from being used
replaced ` @ Value . Immutable . EMPTY ` with ` @ Value . Immutable . builder = false ` , ` copy = true ` ,
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` , and introduced ` actual
added the ` @ DoNotSub ` annotation to the ` resizeThreshold ` field in ` Int2ObjectHashMap . java ` to ensure proper
updated folder name hint logic to only display when title is empty to improve user experience by providing clear guidance when the folder name is empty
updated test cases in UaaResetPasswordServiceTests to include " uaa " as a valid client identifier to ensure that the service correctly identifies
changed method visibility from public to private for ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` in ` ShadowSQLiteDatabase . java
update value representation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to distinguish between closed and non - closed states to improve cl
rename MimetypeIconUtil . java file to improve clarity and consistency in naming conventions
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in method naming
` unnecessaryparentheses ` : fix for negated ` instanceof `
added a teleport method and modified the constructor logic in the Location class to enable teleportation functionality for Bukkit entities
replaced custom Base64 encoding with Spring ' s Base64Utils for modulus and exponent to improve code maintainability and reduce dependency on external libraries
updated imports and modified statistics reporting in TranslatorManagerHelper . java to enhance project management functionality and improve code clarity
rename the ` ContainerAnnotation ` annotation to ` ContainedBy ` to clarify the purpose of the annotation ' s purpose
added a null check for the getId ( ) method in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non -
refactor retweeter handling in TimeLineCursorAdapter to improve clarity and maintainability of the code structure
updated the verification text display logic in UserProfileActivity based on the addon theme setting to enhance user experience by providing a more dynamic verification status based
modified the visibility of the timeDiffFromServer variable and removed redundant instance management in the AbucoinsDigest class to enhance encapsulation and simplify
camel - 16400 : camel - mongodb should use autowired to resolve the mongo connection .
added a sourceIndex parameter to the AttributeMapping class and updated related classes to utilize this new field to enhance the functionality of the AttributeMapping
log warning when alter table column statistic fails
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 6641 ] escape html in contact email in home page
fix ( engine ) : update terasologyengine ' s reflection cache
updated join model generation to use dynamic feature count instead of fixed length to ensure accurate representation of feature counts in the output
make sure ` ` < ' ' , ` ` < math ' ' , ` ` < math ' ' , ` ` < math ' '
( chore ) camel - kafka : only log debug message if debug or trace level be enable
refactor ACTION _ SET _ PLAYBACK _ SPEED to PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ S
updated IgnitionConfigurationHandler , MotorMountHandler , AxialStage , and ParallelStage classes to replace deprecated ' automatic ' separ
tika - 2246 -- fix for tika - 2249 -- allow ascii name length to be equal to the unicode char length
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to temporarily disable the test due to JDK 1.8
refactor lockFile creation into a separate method to improve code readability and reusability
updated synchronization interval settings from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new notification preferences to
added a condition to return null if the username equals " FEDERATION _ USER " in AuthenticationManager . java to ensure proper handling of
truffle : do n ' t invoke truffleobject . isinstance ( ) for non truffleobject .
removed unnecessary imports and disabled annotations from JakartaClientShutdownWithServerWebAppTest and JakartaWebSocketShutdownWithServerWeb
do n ' t show warn if a file do n ' t exist
refactor Collection and Map classes to improve code readability and maintainability
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added handling for missing primary key changes for Oracle and AbstractDb2 databases to ensure proper schema management during comparison operations
added ` MetastoreException ` to the ` execute ` method and updated error handling in ` MsckOperation ` and ` repair ` methods
[ hotfix ] [ kafka ] retry committable if commit fails
fix ( * ) : remove receipthandle from dlq activity ( # 5323 )
added a ` services ` field and modified the ` runWithCompose ` method in ` DockerComposeContainer ` , and created a new test class
fix concurrentmodificationexception in export and structcontextdecorator
removed unused imports and simplified the return statement in FeedParser . java to improve code readability and reduce unnecessary complexity
removed a condition that checks if ` mAppsCustomizePagedView . DISABLE _ ALL _ APPS ` is true in the Launch
changed the data types of several variables and methods from int to double in MeterRealtimeBodyDataDTO . java to allow for more precise calculations
added a new file ` bug4150029 . java ` that creates temporary directories and creates sub - directories to facilitate directory
added configuration tracking and client management in HiveConf , SparkClient , SparkTask , and SparkSessionImpl classes to improve resource management and ensure proper
added a method to retrieve long press indicators for deep shortcuts and drop target bars in the AppIcon and AppIconMenuItem classes to enhance user experience
added handling for empty polygons in WKBWriter and updated test cases in WKBWriterTest to improve robustness of polygon processing and enhance test
refactor UnflavoredBuildTarget creation in NativeLibraryMergeEnhancer and AbstractUnflavoredBuildTarget to use Interner
added a new file ` MultiplyByMaxInt . java ` containing a class that performs a multiplication operation on an integer to implement a test
modified the onActionViewCollapsed method to enable drawer indicator visibility based on the current file ' s status to improve user experience by enabling drawer
removed unused imports from TestRAMDirectory . java to streamline the code and improve readability
replaced instances of FixedBitSet with BitSet in Automaton and Operations classes to simplify code and improve performance by utilizing a more efficient
[ dmn ] dmnvaluatorcompiler - provide error message when expression be not define for a node
replaced occurrences of ` @ ContainerFor ` with ` @ Repeatable ` in multiple Java files to enhance clarity and consistency in annotation handling
updated the file sending message to include the duration of the sent file to improve user feedback by including the duration of the file sending process
updated the way class names are retrieved and checked for package access in OpenMBeanAttributeInfoSupport . java to improve code clarity and ensure proper
do n ' t allow quorum response to be less than 1 . patch by jbellis ; review by stu hood for cassandra -
update freeSize calculation in StoreDirect . java to improve memory management by adjusting the free size based on input values
updated touch event handling methods in AnyKeyboardView and AnyKeyboardViewBase to improve touch event detection to enhance user experience by ensuring touch events are
replaced instances of SslContextFactory with SslContextFactory . Server in multiple server - related Java files to ensure compatibility with the latest SSL context factory standard
removed the PrivilegedSocket class and directly used the socket connection to simplify the socket creation process by eliminating unnecessary privileged actions
rename InputTest . java to improve clarity to enhance code readability and maintainability
added pause blur functionality and improved animation handling in the AbsSwipeUpHandler and TaskViewUtils classes to enhance user experience by pausing
reordered and added null check for current location markers in NearbyMapFragment . java to improve code readability and prevent potential NullPointerExceptions
update client secret removal method to use client ID instead of client object to ensure correct retrieval of secret based on the provided client ID
updated SQL query format and modified test setup in SqlSourceBuilderTest . java to ensure compatibility with multiple line endings in SQL queries
http : / / issues . apache . org / jira / browse / amq - 4798 - fix thread issue with jmsconsumer
added tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown key and row key scenarios
updated filterConditions initialization to use Optional and added return statements in ZookeeperSyncDataService to improve null safety and prevent potential NullPointerExceptions
* add clonefields ( ) method to the lightcontrol enum to prevent the use of the original world .
updated conditions for hiding stack traces and improved code readability in StdErrLog . java to enhance code clarity and maintainability by
refactor HttpSessionEventPublisher to use a dedicated context method for event publishing to improve code clarity and ensure context is not null before publishing events
added a semantic check for the CREATE CQ statement in ASTVisitor . java to enforce stricter syntax validation for the CREATE CQ statement
[ hotfix ] [ doc ] fix checkstyle violation in flinkiotdbsink
add counter for custom simplification in canonicalizerphase
updated fileIcon parameter to include context in ActivityListAdapter . java to ensure proper context is used for displaying file type icons
updated the schema name retrieval method in mmm Parser . java and modified test cases in TestScript . java to include " dropIndex " and
fix ( bigqueryio ) : add support for read timestamp data with time
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` , and corresponding tests in ` ViewTest `
updated enumeration types to use generics in multiple classes to improve type safety and eliminate unchecked cast warnings
updated imports in IndexTool and IndexTool classes to enhance code clarity and maintainability
added JSON value constants and updated method parameter handling in JavaUtil to improve annotation processing and enhance code readability
[ gr - 38686 ] fix resource feature when run with - djava . classpath .
updated CUDA _ R _ 32I and CUDNN _ PATCHLEVEL constants in cuda . java and cudnn . java to improve clarity
updated the ResourceLoader class to include a list of resource directories from a specified directory to enhance resource loading functionality by allowing dynamic resource loading based on
fix redstone torch getattachedface ( ) to return ` ` down ' ' instead of ` ` redstone ' '
[ calcite - 5862 ] add support for varbinary type in reltostagconverter
removed unused import of DateHelper from NoteAdapter . java to clean up the code and improve readability
updated backup message handling to differentiate between loading and saving failures to improve clarity and functionality of backup restoration feedback
mow - 103 fix : position of ` ` absolute ' ' and ` ` relative ' ' in web
simplified the file creation process in ShadowParcelFileDescriptor . java to improve code readability and reduce complexity in file creation
replaced ` poll ( ) ` and ` offer ( ) ` methods with ` addFirst ( ) ` and ` removeFirst ( ) `
update rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the purpose
fix canonicalization of ( x ^ 2 ) = = ( x ^ 2 ) to ( x = = 0 )
added a constant STRING _ ARRAY to TypeFactory to facilitate type - checking for String arrays in the type system
refactor IME hiding functionality into a separate method and add a new event for when the AllApps keyboard is closed to improve code organization
force bit density to fix network issue in modded block .
enhanced assertion messages in TimelineMetricCacheSizingTest and improved cache removal in TimelineMetricCacheTest to enhance clarity of
add minecraft . gl _ max _ texture _ size to the minecraft api , and use it once .
[ java ] stop log recording when prepare for election .
added a condition to reset startPosn if the transformation is in progress to ensure proper handling of positioning during semantic analysis
replaced the method ` StarTreeUtils . isStarTreeDisabled ` with ` _ queryContext . isSkipStarTree ` across multiple
added a flag to determine if the nearby places need to be refreshed and updated related methods accordingly to improve UI responsiveness and control over
add maptransformer . of ( map < k , v > ) and maptransformer . bimap ( )
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for retrieving launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management capabilities in the launcher
updated references from javax . swing . event . ChangeListener to javax . swing . event . StateChangeListener in StageSelector and StageAction classes to
added methods to manage calling UID and process ID in ShadowBinder to enhance the functionality of ShadowBinder for managing process identification and state updates
replaced ` AutoValue _ Expectation _ ExpectationFailure ` with ` ExpectationFailure ` and added ` @ Nullable ` annotations to improve
do n ' t log a warn when deserializing a message that do n ' t support it .
bugfix # 228212 - fix regression in imagereplacedelement . setwidth ( ) and imagereplacedelement .
added handling for tab and space characters in CoreMarkdownNodeRenderer and updated MarkdownWriter to correctly process new line characters while retaining escape sequences to improve rendering accuracy for markdown by ensuring proper encoding of whitespace and newline characters
refactor SharePasswordDialogFragment to encapsulate password handling logic to improve code readability and maintainability by reducing duplication
refactor methods in IoUtil to use a new MappingMethods class for improved type safety to enhance code maintainability and facilitate
removed the ' public ' access modifier from methods and classes in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to
added new slider keytab configuration options and updated option builder in LlapOptionsProcessor . java to enhance flexibility in configuring slider keytab
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation control to enhance user experience by
added a mechanism to track and execute bind completion tasks in the LauncherModel to ensure that shortcuts are only processed once to improve efficiency and prevent
changed member variables from non - final to final in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to simplify
added a new method ` setCheckValid ` to ` IssueInterface ` and renamed the ` ValidationReport ` class to ` JsonValidationReport `
added a method to safely retrieve the cipher provider name in the RSAClientKeyExchange class to improve error handling and provide clearer debugging information when
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration for consistency
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance during parsing
remove unnecessary whitespace in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static final in DefaultMapScaleBar . java to allow
removed the @ Ignore annotation from CovariantOverrideTest . java to enable the test for covariant overrides
refactor curly method to utilize Qtype for better type handling to improve code clarity and maintainability by utilizing a dedicated method for
( chore ) camel - model : fix reloadstrategy to work in osgi environment
added minimum and maximum spacing settings for the X - axis in ScatterChart to improve visual representation of data in the chart
corrected spacing in the string representation of INTERVAL in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` BaseState ` and modified its implementation in ` SplitScreenSelectState `
added a check for the UTF8 key in the properties file to ensure that the application does not throw an exception when the UTF8 key is
updated TestReproduceMessage and LuceneTestCase to include MixWithSuiteName and improve system output handling to enhance test reliability and
added logging for long - press events on AllApps items in StatsLogManager to enhance user interaction tracking for long - press actions
added null check for log in StoreWAL . java and created a new test class Issue112Test . java with a commit method to ensure
added a condition to check if sector land info should be shown based on preset state to ensure that sector land information is displayed when the preset is
[ hotfix ] [ table ] fix raw type in javadoc of tupletypeinformation
refactor Enum class to improve code readability to enhance maintainability and facilitate future feature additions
[ multistage ] fix npe in nearbyselectionconfig and nearbyvalueselector
use guava ' s cache instead of our own
disable the create sql view and wms layer import in the new layer page
initialize availability _ availability to Availability . UNAVAILABLE in ContextHandler . java to ensure availability state is set for better resource management
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , ` PbftDataSyncHandler ` , and
fix : migrate phishingprotectionservicev1beta1 to grpc _ service _ config ( # 162 )
updated ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and modified the ` freeSpaceReclaimQ `
changed KDC _ OPT _ PROXIABLE and KDC _ OPT _ RENEWABLE _ OK constants from public to private static final
refactor JsonWriter initialization and assignment in Json . java to improve code clarity and ensure proper resource management
updated variable declarations and formatted code for consistency in the ProfilePager class to improve code readability and maintainability
rename ` paintBackground ` method to ` paintComponentBackground ` in ` Slider . java ` to improve clarity by explicitly indicating that the
added a method ` valueFromClassConstant ` to retrieve values from a class constant to enhance configuration flexibility by allowing dynamic value retrieval from class
added error handling for service initialization in KafkaService to improve robustness by logging failures during service initialization
added " usr / share / zoneinfo / tzdata / tzdata " to the RESOURCES _ TO _ ALWAYS _ ACQUIRE set
improve error message when ' auto - create - channels ' be set to ' default - output ' for default messagebus
added functionality to retrieve and store keywords from meta tags in HTMLDocument to enhance document indexing capabilities by allowing users to specify keywords
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the _ addresses list to ensure it is only added if the address is not already set to improve code clarity and prevent
replaced ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` class ` in ` CorrespondenceSubclassToFactory
refactor Builder class to improve code readability to enhance maintainability and ease of future updates
remove invalid @ comment from isbn to bibtex fetcher
make sure that any exception in context . enterifneeded ( ) and context . leaveifabsent ( ) do not crash .
added null check for the text before firing data change events to prevent potential NullPointerException when the text is null
fill in some blank , a suggest by valerybokov
trim whitespace from the input line in SuffixURLFilter . java to ensure cleaner output by removing unnecessary whitespace
added a check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when in Godmode mode
ggb - 1353 fix for bug with checkbox creation and text dialog
updated constructors of ` LinkedHashMapCache ` and ` BoundedLinkedHashMap ` to include ` maxSize ` and ` accessOrder ` parameters to improve
replaced ` _ channel . close ( ) ` with ` close ( ) ` and simplified buffer length assignment to improve code readability and maintain
added null check for keyIndex in FixAcidKeyIndex . java and modified KeyIndexBuilder instantiation in OrcRecordUpdater . java to
added Locale import and modified exception handling in DirectUpdateHandler2 . java to improve error reporting and provide more context for exceptions
[ fix ] add store check guard to writenode , use it in canonicalizerphase .
improve edge edge check in bciblockmapping . shouldfollowedge ( ) .
added method to get confidence dis agreement ( bug instance ) and updated viewfilter to use it
replaced instances of ` BuildTarget . copyOf ( buildTarget ) ` with direct variable ` buildTarget ` to simplify code and improve readability
[ hotfix ] [ table ] fix typo in sqlrunner javadoc
changed the data type of date _ taken from String to long in InstantUploadBroadcastReceiver and FileStorageUtils to improve performance by avoiding unnecessary
refactor ` DefaultSdkProvider ` to replace ` knownApis ` with ` knownSdks ` and introduce a new method for managing
use confidence progress indicator instead of progress indicator for create offer
updated the header check from " Cling / " to " UMS / " in RequestHandler and modified UPNPService initialization in UPNPControl
make blockindex . iteratebpt respect the ` ` forceiterate ' ' flag
added new view type constants and modified the ` onCreateViewHolder ` method to handle message view types to improve flexibility in handling different view
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
separate out a specific sbar expression for investigation
refactor TexturePacker methods to remove canvas parameter and simplify image insertion logic to improve code readability and maintainability by eliminating unnecessary
replaced the ` getVisitors ( ) ` method with a default method ` apply ( Refactor < S , T > ) ` and modified
added methods ` getChildByName ` , ` getChildByNameRecursive ` , and ` getChildrenByName ` to retrieve child elements by name to enhance functionality by
updated Content - Charset header to " UTF - 8 " in HttpSolrServer . java and its corresponding test in BasicHttpSolrServerTest .
replaced the static UI _ STATE _ ALLAPPS constant with a new SystemUiControllerFlags interface to enhance flexibility and maintainability of
removed the private ClientConfigurationService field from IntrospectingTokenService . java to streamline the service configuration by eliminating unnecessary components
updated the error message format in RuntimeException for better clarity to enhance debugging information for error handling during Hive split creation
removed the ownerId field and its assignment from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` in multiple files to clarify the purpose
added score calculation to the merge method in TextFragment . java to ensure proper merging of text fragments
removed the private Digester field from Md4PasswordEncoder . java to improve encapsulation and enhance security
added a validation check for the maximumUnimprovedStepCount property to ensure that the maximumUnimprovedStepCount is non -
added a check to return early if there are currently opened editors to optimize performance by avoiding unnecessary processing when no editors are open
replaced direct calls to ` verify ( mock ) ` with ` Mockito . verify ( mock ) ` in ` BDDMockito `
replaced the use of the current thread ' s context class loader with a direct reference to PathScanner ' s class loader to improve clarity
added asynchronous sayHi2 method to CodeFirstPojoClient and CodeFirstPojoClientIntf to enable asynchronous execution of the sayHi
fix abstractsplitbrainprotectiontest by add support for multiple split brain protection type
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the LogoutPageGeneratingFilter to improve robustness
[ giac ] fix problem with degree ( ) in giac
added logging capabilities to DockerComposeContainer and created a corresponding test class to improve logging capabilities and facilitate testing of DockerComposeContainer functionality
updated the generic type signature of the testMapping method in StandardJavaTypeMappingTest . java to improve type safety by explicitly specifying the type parameter
removed unused imports from AmbariMetaInfoTest . java to improve code clarity and reduce unnecessary dependencies
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to create a ` Supplier ` from
replaced ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure proper termination of the loop
camel - 16400 : camel - platform - http - add support for post a content - type request body .
added platform - specific path handling methods in MorePaths . java and updated CopyStep . java to use them to ensure consistent path formatting across different
added a null check for authorizationContext ' s parameters before processing to avoid potential NullPointerException when processing parameters
replaced the method ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` in ` NativeLibraries . java ` to improve error handling
updated SDK version from " 4611349 " to " 4514284 " and added new tests for the TextToSpeech class to reflect
queuetransactionlog : add a transactionlogkey class so that it can be use by other thread .
added an ` enableSqlWithoutProfile ` property and its getter / setter in ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` , and
added a try - finally block around the write operation in ConnectHandler . java to ensure the _ data is reset to prevent potential memory leaks
fix eclipse compiler generic issue in modloadingstage
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated methods in CachedThreadStatesGaugeSet and ThreadStatesGaugeSet to retrieve thread information with stack trace depth to improve thread information retrieval accuracy and
added a transaction log for pre - committing changes in UpdateLog . java and increased sleep duration in LeaderTragicEventTest . java
updated the FastAsyncWorldEdit file from version P2 - V6 to version 1.17 to utilize the latest features and improv
refactor file creation logic in SegmentGeneratorConfig . java to handle null paths more gracefully to improve robustness by ensuring the input path is created
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored its usage in ` TriangulationHelper ` to
updated the ` find ` method to include ` identityZoneId ` parameter and modified the query to include the identity zone ID to enhance functionality by
rename SpanCollector class to improve clarity to enhance code readability and maintainability
added a null check for the cursor session in AuthorizationFilter . java to ensure robustness by preventing potential null pointer exceptions during session management
refactor TransactionIsolationLevel class for improved clarity to enhance code maintainability and readability
rename methods and variables related to volume groups from " LVgroups " to " LogicalVolumegroups " to improve clarity and
added logic to set the current thread ' s name and its remote URL in TestSession . java to improve clarity and traceability of the
refactor CookieManager class to improve cookie management functionality to enhance performance and maintainability of cookie handling
replaced the manual creation of an ArrayList with a direct return of a new one to simplify code by eliminating unnecessary complexity
added a new OverviewToAllAppsTouchController to the list to enhance user interaction by providing a new touch controller for all apps
replaced the method ` scaleHotseatWithWorkspace ( ) ` with ` getHotseatScaleAndTranslation ( Launcher ) `
added a check for JUnitRule in the StackTraceCleaner class and created a test for filtering elements above Mockito JUnitRule to ensure
updated buffer handling logic in MappedResizeableBuffer . java to improve clarity and consistency to enhance readability and maintainability of buffer operations
refactor balance listener management in DepositListItem . java to improve code clarity and ensure proper management of balance listeners
modify color conversion logic in RealisticRenderer to handle different edge modes to ensure correct color representation based on the node ' s edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor and refactored log initialization in tests to improve robustness of HTTP response handling and
fix ( gl200 ) : remove patternutil . checkpattern
refactor playback time comparison logic in FullDetailsActivity . java to improve clarity and maintainability of playback event handling
fix a bug in spanishxmltreereader that cause the parser to ignore lexica botania token
added a condition to clear the language context if the first value is an empty string to ensure proper handling of empty language data in the item
updated the ` overrideScheme ` assignment logic in ` ReactiveLoadBalancerClientFilter ` to handle secure instances to ensure the correct scheme is overridden based on
[ hotfix ] fix checkstyle violation in defaultmessagestore
changed the visibility modifier of the fullFilePathFromClassName method from final to package - private to allow access to the method from other classes
replaced custom ` Correspondence ` implementation with a lambda expression in ` ShadowBackupManagerTest . java ` to improve code readability and
update references from US to EN language support in LocaleProviderAdapter and LocaleDataMetaInfo to ensure consistency in language support identification across the application
simplified the null check for redeemData in LocalTransactionSigner . java to improve code readability and maintainability
add a minecraftforgeclient class to use tessellator for render the terrain .
added a return statement to the TxCacheDB class to ensure proper termination of the method during execution
replaced references to ` com . sun . xml . internal . ws . org . objectweb . asm ` with ` jdk . internal
refactor FastDictionary class for improved performance to enhance efficiency in data processing
improve handling of closed session in nio connection .
updated the values of FlightEvent instances for simulation timing and rounding hits in FlightEventsTest . java to improve accuracy of simulation events and
[ beam - 8470 ] upgrade grpc to vendored grpc 1.26p0
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
add ` ` name ' ' and ` ` courseid ' ' to ` ` profile picture ' ' page
added shortRules list and modified defaultRules initialization in DefaultPasswordValidator to limit the number of rules based on the length of the password
simonstewart : introduce a command class for the selenium - backed webdriver
added JUnit test annotation to ProxyClassSerializationTest . java to enable testing of proxy class serialization functionality
updated the ` scale ` argument format in ` DLNAMediaInfo . java ` from string concatenation to BGR24 format to improve
[ gr - 38686 ] use new speculative guard movement phase during compilation .
added checks for multiple authentication managers and disabled bean definition overriding in ` AuthenticationManagerBeanDefinitionParser ` to ensure that the application does not throw exceptions
updated handling of forwarded request fields in ForwardedRequestCustomizer . java and added corresponding tests in ForwardedRequestCustomizerTest . java to
added a line to reset the StringBuilder length in ConsoleReader . java to ensure the buffer is reset before processing new data
changed access modifier of allowedRoles and disallowedRoles lists from private to protected to allow subclasses to access these lists for better extensibility
updated OpenIDE - Module - Specification - Version in multiple files to reflect the latest version changes to ensure compatibility with the latest features and improv
hbase - 22387 add support for hbase . server . netty . tls . wrapsize in x509util ( # 3
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to use JUnit 4 annotations and added a new test for tokenization with whitespace to improve test clarity and ensure
added a method to set the protocol binding in OpenSamlAuthenticationRequestFactory and introduced a test class for it to enhance flexibility in configuring
added AttachedSurfaceControl import and modified SurfaceControl transaction handling in DepthController . java to improve resource management and ensure proper application of surface transactions
updated the version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to
hbase - 16813 prepreparebulkload and precleanupbulkload should be create instead of write ( addendum )
updated the substring logic for unSeqMergeList in TsFileManagement . java and corrected measurement schemas in MergeTaskTest . java to ensure correct
camel - 1640 : fix issue with convertbodyto ( inputstream ) in java . io . file
modified the ` build ` method in ` DefaultShardManagerBuilder ` to conditionally call ` login ( ) ` based on the ` login `
removed an extra space in the DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of
modified response completion handling in HttpSender . java to check if the completion is marked before terminating the response to ensure proper termination of the response only
updated logic to check if the student is an user student before comparing it with the giver to ensure that only users with the giver can
added checks for linked profile permissions and modified profile path handling in BMPImageReader . java to ensure proper handling of linked profiles and
updated the location parameters for the ` setSimpleCuboid ` method calls in ` ClassicPlotManager . java ` to correct the syntax for
make sure pmd be run in a separate thread in pmdopentool
refactor gridPresenter initialization to use a separate method for setting grid size and Jumplist popup to improve code readability and maintainability by
change return statements from false to true in ContributionsListFragment . java to ensure that the method accurately reflects the intended functionality
added a test for the skip range function in DistinctPrefixFilterIT . java and modified the scan handling in BaseResultIterators . java
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide a way to access the last modified
added a condition to validate the presence of the " metaTable " property in HiveIcebergStorageHandler to ensure that only valid metadata tables
replaced ` currencyTextField ` with a ` ComboBox < TradeCurrency > ` for currency selection in ` CashDepositForm
changed catch block from IOException to Throwable in WriteFlusher . java to handle broader range of error scenarios
added a boolean flag ` mStartedEnterAnimation ` and modified animation handling logic in ` IconRecentsView . java ` to improve animation control
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the active key associated with the configuration
renamed methods to include " @ text " for " send " and " send attachments " in SendMailActions . java to improve clarity
changed the ` isActive ` variable from non - volatile to volatile in ` SocketServer . java ` to ensure thread safety when accessing shared resources
updated method names from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext ` and ` SelectionPartially
fix classcastexception in debug output ( fixes # 2271 )
added a check for the ` OWNCLOUD _ APP _ NAME ` application context when verifying the day of the year to ensure that
hbase - 2640 master should automatically set the permission of hbase . rootdir . perms when kerberos be enable
updated references from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange . java ` and ` Jav
updated the implementation of the Instant class to improve performance and accuracy of time calculations
updated ` getStateFormat ` method to return a ` String ` instead of an ` int ` to allow for more flexible state format handling in
removed the type parameter from the log statement in CentralAuthenticationServiceImpl . java and modified the type check in AbstractTicket . java to simplify
do n ' t swallow IllegalArgumentException in PDICCBased . java to improve error handling
updated condition to check if the file name ends with a slash before checking if it ends with a slash to improve clarity and correctness of
add a pathtranslator to the pluginparameterexpressionevaluator so that it can be use by a plugin .
[ beam - 8470 ] move protobuf coders to com . google . beam . sdk . extensions package
updated JpaQueryParsingToken to accept a boolean parameter and added a new test for query with signed numeric literals to enhance query parsing functionality and
refactor LaunchLugHandler and RailGuideHandler to include instance count and separation for launching and rail guides to improve
removed the getNonceFactory method implementation from BitmexStreamingExchange . java to simplify the code by eliminating unnecessary functionality
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] use ` ` default ' ' timer interval for driverconductortest .
changed the default value of the ` initializeLoadedClasses ` variable from ` true ` to ` false ` in ` ScanSpec . java ` to
added focus management for the search field in FullTextSearchPanel to improve user experience by ensuring the search field is focused during updates
refactor NioParams initialization in TlsConnectionLogging . java to improve readability and maintainability of the code
updated the assertion in StatementTest to use a random number instead of a fixed value to improve test reliability by ensuring that a random number is
updated error message formatting for expected values in TestSolrConfigHandler . java to improve clarity of error messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to
updated drawable matching logic in FilterResourcesStep . java to use a new variable for density to improve readability and maintainability of the code
replaced direct calls to ` getComponentAt ( 0 ) ` with a new method ` elementPrefix ( c ) ` in ` ComponentGroup `
removed unnecessary check for display metrics density in RecentsAnimationDeviceState . java to simplify the rotation condition for better readability and maintainability
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java to implement array copying tests
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to address issue
fixed - rexecutorservice . scheduleasync ( ) method throw npe if schedule with scheduledate ( ) be call with null value . #
simplified the logic for determining whether to update credentials in FileDownloader and FileUploader classes to improve code readability and maintainability by
refactor scanner initialization and resource closing logic in Compactor . java to ensure proper resource management and prevent potential resource leaks
updated methods to use ` getOrDefault ( ) . doubleValue ( ) ` for non - default values in ` NetMetrics ` to ensure default values
added a nonce assertion in the TokenMvcMockTests class to verify the presence of a specific claim for a token
refactor ChartEditor , DefaultAxisEditor , DefaultAxisEditor , DefaultPlotEditor , and PaletteChooserPanel classes to improve code organization and
added width and height settings for formLayeredPane in Form . java to ensure the form is properly sized based on its dimensions
added maxY method to BrowserContentPane to calculate the maximum height of the component based on the owner ' s height
added a connection check before closing the database connection in SharedDatabaseLoginDialogView and changed the return type of the openDatabase method to boolean to
refactor DOCKER _ COMMAND to Platform . DOCKER _ COMMAND and update its usage in DockerTestUtils . java to improve flex
added a null check for input files in the initializeParameters method to improve robustness by handling potential null input cases
updated the ` drawLeaveBehind ` method to accept a customizable color parameter to enhance flexibility and customization of the folder ' s
show an error dialog when the canary plugin do not work with android studio ( # 5238 )
api : fix identityproxy sanity check to avoid npe
added modulePersistEnable and modulePersistDisable lists along with their corresponding getter and setter methods in StartArgs . java to enable and disable module persistence
updated argument validation and error message in GeminiMarketDataService . java to ensure that the last trade time argument is a valid number
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure uniqueness of questions in the flow scope
add a test to verify that a non - default role can be use .
remove all setup jsp file from authcheckfilter , not just setup - *
refactor scheduling logic to separate execution and sorting of scheduled runnables to improve clarity and efficiency of runnable execution flow
updated method signature from ` String [ ] ` to ` String ... ` in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and
refactor character reading logic in XMLParser to handle end - of - stream conditions to improve robustness by returning a specific end - of -
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` to address potential issues with overflow page
added pivot point adjustments for mArrow in DeepShortcutsContainer . java to improve arrow positioning based on icon positioning
remove printstacktrace ( ) call from fileupdatemonitor and acmportalfetcher
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter and modified related logic in ` AbsSwipeUpHandler . java
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated InternetAddress instantiation and hostname validation logic in EmailFormatSpecifier and HostnameFormatSpecifier to improve error handling and provide clearer error messaging for invalid
replaced references to ` AuthenticatorActivity . this ` with direct reference to ` this ` across multiple activities and fragments to improve code readability and
refactor ` SizeBasedDocIdIterator ` to use ` _ currentDocId ` instead of ` _ maxDocId ` for clarity
added methods to prompt to open files and handle file names in FileDialoger to enhance file selection functionality by allowing users to specify file names
updated widget span values and refactored page count update logic in AppsCustomizePagedView . java and AppsCustomizeTab
updated the logic for updating component bounds in FlightConfiguration . java and modified the expected length in FlightConfigurationTest . java to improve accuracy
( chore ) camel - micrometer : upgrade mockito - core to version 2.11 . 0
added Locale . ROOT to DateTimeFormatter instantiation in TimeHelper . java to ensure consistent date formatting across different locales
[ ds - 3752 ] remove hidden metadata from dspaceobjectconverter ( # 3753 )
added a test method to verify handling of missing dimension and metric names in StarTreeConfig to ensure that missing dimension and metric names are properly
camel - 16400 : added support for dynamic recipient list in camel - spring
refactor child retrieval logic in InlineLayoutBox and improve repaint handling in HoverListener to enhance code clarity and maintainability while ensuring proper
refactor AuthenticatorActivity to replace DetectAuthenticationMethodOperation with ServiceConnection for better management of authentication operations
