[ log4j2 - 1343 ] socketappender should set remote host and port in constructor .
refactor authentication header handling in BasicAuthPlugin to use a separate method for clarity to improve code readability and maintainability by reducing
removed redundant call to RecordDescriptor . msgLengthOffset in ManyToOneRingBuffer . java to simplify code and improve readability by eliminating
cloudstack - 5892 : fix overcommit ratio for vm with different cluster type
added flags parameter to ShadowPaint and implemented anti - aliasing functionality to enable customization of paint anti - aliasing in the shadowing process
updated the title in MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content "
danielwagnerhall : do n ' t fail the detection test if we be in eclipse
fix for http : / / issues . apache . org / jira / browse / amq - 4338 - handle empty nonce value
added a ` RemoteInputListener ` interface with methods to handle socket connection and disconnection events to improve the handling of socket connectivity and provide a
replaced ` continue ` statement with ` continue ` for better readability in ` OrcEncodedDataReader . java ` to improve code cl
added a check to ensure the thing is enabled before filtering the handler to enhance security by ensuring only active actions are processed
added null check before calling removeAllPolicies and addPolicies in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions when bs is null
updated assertions in tests to use ` assertThat ( json ) . matches ( ) ` instead of ` assertThat ( json ) . isEqualTo
added JSON processing for DAG information in TezTask . java to provide detailed context and DAG information for debugging purposes
updated time calculation in ComputedSummary . java to include tagTime and added getHeapTime method in HprofHeap . java to improve accuracy
replaced RxJava2Tasks with ApacheHttpClientMediaWikiApi for upload count retrieval to streamline code and improve maintainability by centralizing upload count
remove unnecessary check for read commit in mvcc lock
[ issue # 3640 ] fix commit log offset check ( # 3641 )
added a check to ensure the folder is marked as open only if it is actually associated with an open folder to prevent inconsistencies in folder state management
added a test method to verify sorting order of PGProperty values to ensure PGProperty names are sorted in ascending order for proper functionality
added a constant for HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in the Common . java file to
updated method parameters from Object to ItemInfo in UninstallDropTarget . java to improve type safety and simplify intent retrieval logic
updated assertion from ` hasMessage ` to ` isIn ` for error message validation to improve clarity of error messages when only one HTTP method is
updated ` NearbyActivity ` to utilize ` NearbyListFragment ` instead of ` NearbyMapFragment ` to improve
rename ` ` status ' ' input parameter to ` ` sessionstatus ' ' to prevent confusion
added a new configuration column ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class and updated the ` EmailReportJob ` to
[ hotfix ] [ kafka ] fix checkstyle violation in flinkkafkaconsumerbase
added methods to retrieve user and geofence by their ID and geofence ID in DataManager to enhance functionality for user management and ge
added a constructor to BlockingResponseListener that accepts a maximum size of 2 * 1024 to ensure proper initialization of the BlockingResponseListener with a specified
move byte [ ] data to byte [ ] before call xbytebuffer . memberbroadcastsreceived .
added logging statement for snapshot paths and wrapped snapshot fragment sending in a try - finally block to ensure proper resource management and prevent potential memory leaks
removed unnecessary query parameter from assertEquals in LoginSAMLAuthenticationFailureHandlerTest . java to streamline test assertions for better readability and maintainability
updated test cases in ConfigMetadataProviderTest . java to improve test coverage for configuration metadata handling
updated import statements in ListFragment . java and modified the parameter name in updateNoteReminder method in SnoozeActivity . java to
refactor code to use a private static class AcceptAllFilter for handling path filtering to improve code readability and maintainability by centralizing the
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
[ gr - 20613 ] make hotspotjvmcipruntime # lookuptype more resilient to classnotfoundex
added DockerImageName validation to ensure a valid Docker image tag is specified to enhance robustness by preventing invalid Docker image names
updated the dialog message from " login failed username " and " login failed password " to " login _ failed _ wrong _ credentials " to provide
added " autofocus " functionality to multiple form classes to standardize user input handling across the application
added tests for identity zone SAML properties in SamlIDPRefreshMockMvcTests . java to ensure that the identity zone configurations are correctly set
added list initialization and validation for numeric lists in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure proper handling of
added bottomRightMode ( ) and adjusted return statements in Sheet . java , and added theme properties in UIManager . java to improve layout handling
updated import statements and package declarations for ParallelUniverse and ParallelUniverseTest to reflect the new internal structure to improve organization and accessibility of
replaced direct usage of ` BoundedLocalCache ` with a variable ` FACTORY _ CALL ` in ` LocalCacheFactory . java `
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in the ` FrillsAndFills . java `
added methods to draw self loops and edges in the ProcessingPreview class to enhance visual representation of processing graphs
updated configuration and method names from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLID
corrected the method name from ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve method clarity and consistency
reset the translation Y - axis of the drag handle indicator to zero to ensure the drag handle is fully visible during transitions
remove some log line that be no longer need
updated configuration for filter pushing down in the operator tree to clarify that filters are
added an assumption to skip tests that are not running on OSX to address issues related to finding itself in the build process
added Maven bundles for Jetty ALPN client and a debug flag for diagnosing OSGi bundles to enable support for ALPN client
fix for act - 1451 : retryasyncjob ( job ) should be call in the commandexecutor instead of executeasyncjob ( jobentity
refactor transaction handling logic in Transaction . java to improve code readability and maintainability
replaced ` @ AddToRuleKey ` annotation with ` @ ExcludeFromRuleKey ` annotation in ` GenruleBuildable . java `
danielwagnerhall : set correct firefox bin path for firefox on window
added a check to avoid adding duplicate entries to colFamToDynamicColumnsMapping to improve performance by avoiding unnecessary insertion of duplicate entries
[ hotfix ] [ runtime ] remove rawtypes warning in hadoopoutputcollector and HadoopTupleUnwrappingIterator
phoenix - 4892 add column and index from parent table when create view for splittable - system catalog
fix issue where instructor can not respond to deleted student
replaced the import statement for TestCellReference from org . apache . poi . xssf . util to org . apache . poi .
fix the mana lens piston crash if there ' s a hardness block
added a new file LongPointerPressTest3049 . java to implement a UI with network error handling for long pointer press scenarios to d
remove trufflefunctioninlining check in partialevaluator . inliningonly if need .
simplified null return statements in BaseBuilder . java and XMLConfigBuilder . java to improve code readability and reduce unnecessary null checks
fix a bug where list with deeply indenting would n ' t be render correctly .
added a new abstract class ` AbstractOptionalAssert ` and refactored methods in ` OptionalAssert ` to extend it to improve code organization and
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily ignore tests due to issue # 1070
[ j ] remove unnecessary jsstring usage in testcaselogger .
updated formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the media format is a video before processing the web sub configuration to ensure that web sub configurations are only applied for
added Security . setProperty ( " jdk . tls . disabledAlgorithms " ) to ComHostnameVerifier . java and JavaxHostnameVerifier .
do n ' t delete user vm when storage pool be no longer managed or local
updated logging statements in Driver . java and QueryResultsCache . java to improve clarity and formatting to enhance readability and maintainability of log
add option to managedependencies to skip model update when the recipe be run
added a test for sending a PendingIntent with a request code in ShadowActivityTest . java and implemented a send method in ShadowActivity . java
updated rendering logic in RocketFigure3d to use GLJPanel and GLCanvas with enabled and disabled FBO to improve rendering performance
added synchronization to the ` controllerListeners ` list and introduced a ` dispose ` method in ` HydrawiseControllerHandler ` to ensure thread safety
added a static method ` beforeClass ` to the ` TestCoreAdminApis ` class to skip tests that are not compatible with Java 9
replaced the use of absolute year calculation with direct retrieval of the year from the local date to improve accuracy in year retrieval and enhance date formatting
fix a nullpointerexception in jabber protocol when connect to jabber server .
added a new variable ` cur _ ws _ commit _ id ` to the string representation of ` cur . ws _ commit _ id ` to
replaced ByteChunk with ByteBuffer in BufferedInputFilter . java to improve memory management and error handling
added a method to convert asynchronous futures to sync in AsyncUtils . java and created corresponding test cases in AsyncUtilsTest . java to improve asynchronous
added ActionGraphBuilder support to various compiler factory classes to enhance rule resolution and improve action graph handling
added a test for uploading hidden file input in UploadTest . java to ensure that the upload functionality works correctly with hidden file inputs in the application
removed unnecessary import of java . util . Date in SQLManager . java to streamline code for better readability and maintainability
added a check to ensure the local Maven directory exists before returning it to prevent errors when the local Maven directory is not available
ggb - 1343 hide the algebra label if it ' s the hide prefix .
fix ( ctelementimpl ) : avoid npe when metadata be null
replaced setFlags with addFlag in DefaultTrackOutput . java to ensure the buffer flags are correctly added to the output
do n ' t reorder entity if it ' s sort by id
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call here " to provide clearer context for
added a null check for backupFolder before logging to avoid potential NullPointerExceptions when logging
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates how to create an instance of void using reflection to
added @ AddToRuleKey annotation to toolType in ClangCompiler . java and GccCompiler . java to ensure toolType is being
replaced hardcoded timeout values with a constant to improve code readability and maintainability
simonstewart : fix the test error of prometheusexemplarssample
added @ Ignore annotations to multiple test classes to temporarily skip tests related to MongoDB server requirement
http : / / issues . apache . org / jira / browse / amq - 4358 - fix for http : / /
changed the condition from checking if the table name starts with an empty string to checking if it is a artifical table to ensure that the
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session attribute handling in MongoSessionManager . java for improved clarity and functionality to ensure session attributes are updated correctly when they are
replaced ` surfaceHolder . setFixedSize ( 320 , 240 ) ` with ` surfaceHolder . setSizeFromLayout ( ) ` to
replaced direct reference to ` _ stopping ` with a variable ` stopping ` in ` AbstractConnector . java ` to improve code readability and
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16400 : camel - core - optimize defaultmessagelogger to be more efficient
( chore ) camel - mono : use subscribe ( ) instead of doonerror ( ) - > subscription ( )
replace assertTrue with an if statement that expect an error is not an instance of WebSocketHandshakeException to improve error handling by providing a failure assertion
modified AllAppsTransitionController to implement View . OnLayoutChangeListener directly to simplify the listener implementation for layout changes
updated variable references from ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` to improve code clarity and consistency
int - 1188 add default - output - channel attribute to the xpathrouterparser
updated cacheSeconds from an integer to a String and added DurationCapable annotation to enhance flexibility and allow for configurable cache duration settings
update OpenAPI version from " 3.0 . 0 - rc1 " to " 3.0 . 0 " in multiple test files to
removed the append method call from ByteBufferPool . java to streamline the code by eliminating unnecessary complexity
added a check for the presence of " alt - rt . jar " in the boot class path and implemented a method to check for it to
update JdbcScimUserProvisioningTests to use the uppercasing of the user name and email to ensure accurate deletion of users in the database
updated the FlightRecorderProfiler to use a List instead of an Arrays for command options to improve flexibility in configuring flight recording options based
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view has content in HttpParser . java and implemented a chunked PUT test in ProxyServletTest . java
refactor AtmosEndpoint class for improved clarity to enhance maintainability and readability of the code
added additional method checks for " printf " and " print " in Java2TypeScriptAdapter . java to ensure proper handling of method invocation types
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods for managing metaspace capacity in ` WhiteBox ` to ensure
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the SamplingStatCalculator to increment the endTime if the resource is stamp at the start to ensure accurate tracking of the execution time of the
added unit test base on user forum issue
tmi - jpeg : avoid exception when icc profile chunk number bad sequence .
fix the rod of the mana pick , terra pick , and other rod of the botania do n ' t work
refactor JoobyModule , SpringModule , and JoobyExtension to ignore specific entries and improve bean registration logic to enhance
fix a bug where the parent class loader would n ' t be load during the processing of a context .
add additional nameupdater . properties file in meta - inf / jmeter . properties ( fixes http : / / issues . apache . org /
added initialization of the started state in the EllipsoidRegionSelector class to ensure the ellipsoid region selection starts correctly
updated the default codenameone Com protocol from HTTP to HTTPS in JavaSEPort . java to enhance security by using a secure connection for the
[ geos - 8470 ] wfs getfeature should throw an exception if the sortby attribute be invalid
replaced ` grantTuple [ 0 ] . equals ( null ) ` with ` grantTuple [ 0 ] = = null ` to improve null
added graphics configuration and updated image handling in DiagramGenerationTest . java to ensure compatibility between expected and compatible images during diagram generation tests
add a runtime exception if you try to install fml without sideddelegate .
updated DataUtilities and ReTypeFeatureReader classes for improved functionality to enhance data processing efficiency and maintainability
fix flakiness in locktest . waitforlock on slow machine
added methods ` wholeWordTokenize ` and ` joinTokens ` to the ` StringUtil ` class to generate a list of strings containing whole words
replaced status and message handling for 404 responses in CoyoteAdapter . java to improve error handling by providing a more informative error message
refactor command handling in SystemHighlighter to utilize commandIndex for improved readability to enhance code clarity and maintainability by redu
update version from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING
update buffer position assignment in StarTreeRecordStoreCircularBufferImpl . java to use dimensionSize instead of idx to ensure correct buffer positioning
added drag - and - drop functionality to the SystemUiProxy and integrated it into the test protocol to provide accurate information about when a shell dragging
[ log4j2 - 1010 ] re - enable test that only pass on java 7
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to the TestCipher class to support TLS
replace the method of setting the description text from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` to ensure the
added JsonProperty annotation for the " value " field in ScimGroupMember . java to enable JSON serialization for the " value " field in
refactor HqlQueryRenderer to process reserved words in a loop and enhance query parsing to improve code readability and maintainability by utilizing
[ java ] fix checkstyle issue in util / subscriptionhelper . java
refactor Parser class to improve code structure to enhance maintainability and readability of the code
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and modified its logic to adjust the index based on
tika - 697 -- add magic detector and update test file name
[ hotfix ] [ table - planner - blink ] remove duplicate monotonicity method in flinksqloperatortable
added equals , hashCode , and toString methods to OneTimeTokenAccount and OneTimeToken classes to ensure proper persistence and retrieval of instances in the
added a condition to check if the assistant is not launched when fling to ensure that fling actions are only performed when the assistant is not
added a new file SolarisShortDSA . java that implements key pair generation and verification using Solaris to demonstr
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user experience by disabling search label functionality
server : fix backup snapshot creation on primary volume ( # 8709 )
refactor FileDetailActivity to use a dedicated DetailsServiceConnection class to improve code organization and enhance readability by encapsulating service connection logic
refactor error handling in HttpClientTLSTest to use an AtomicReference for better management of request failures to improve code readability and maintainability
removed the equals method from ConjunctionScorer to simplify the comparison logic for better performance
added null check for item collection in mmm Launcher . java and ppp Launcher . java to improve error logging when item binding fails
make getRaftGroupIds call in metadataRaftGroupManager thread - safe
reduced the calculation of ` cacheSize ` and ` desiredSize ` in the ` DefaultCache ` class to improve performance by reducing the
updated API endpoint from v2 to v3 and modified order handling in CryptoFacilities classes to align API endpoints with API changes and improve order
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check for an empty state
drill - 8416 : fix exception when read empty dictionary page ( drill - 8023 )
updated method signatures and argument validation in SerumStreamingService . java to ensure proper handling of market data types and improve error handling for invalid inputs
add a config option to disable the charging animation when an item be charging on top of a mana pool .
[ java ] do n ' t swallow timeout exception in cluster node restart test .
[ hotfix ] [ test ] log exception on waitforhelper
updated DefaultServletTest to use ` assumeTrue ` for directory creation and streamlined response assertions to improve code clarity and ensure filesystem support for
removed redundant calls to dialogStylesScss ( ) and openScreenStyle ( ) in ResourcesInjectorFull . java to streamline the injection process
refactor BaseLiquibaseTask and DBDocTask to use FileResource instead of String for change log and output files to improve resource
fix vector . equals ( ) by use getx ( ) instead of getx ( )
removed unnecessary comments in LongConcurrentLRUMap and made CacheEntry class final to enhance code readability and ensure immutability of the class
[ hotfix ] [ runtime ] quote the literal to a regex in the reflection processor .
modified FileCredentialsCache to process KRB5CCNAME environment variable and adjusted EmptyCC to accept command - line arguments for the credentials cache to
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure the
enable fast sync if there be enough peer for an eth / bft / echos
danielwagnerhall : fix a typo in the code comment .
fix : do n ' t expand areequal [ segment [ x , y , z , w ] , segment [ x , y , w
added a condition to clear pending rendering operations if the implementation is minimized to improve performance by avoiding unnecessary operations when the implementation is minim
modified the loop condition in HazelcastTestSupport to check if the current time exceeds the deadline before sleeping to ensure that the sleep does not
add writebehindwritedelayseconds to coalescedwritebehindqueue and modify writebehindentry value .
set the icon of a JLabel to null in GroupTreeCellRenderer to improve user interface clarity by removing unnecessary icons
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between strict matching and non - strict matching to improve clarity and accuracy of test
added new imports and refactored test methods in ShutdownMonitorTest to improve code organization and enhance test coverage for the ShutdownMonitor functionality
reduced the calculation of moveSize and adjusted the chunk fill rate in RandomAccessStore . java to improve memory management by adjusting the fill
refactor Json . java to improve field handling and error management in serialization to enhance code readability and maintainability by reducing redundancy in
[ hotfix ] [ runtime ] move componentclosingutil to new package
server : destroy volume when vm go into error state
cloudstack - 3243 : fix npe in public ip range check - when get the range of the ipv6 range , use the
updated variable names from ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderManagerConfigurer ` to improve clarity
updated the leader retry timeout value from 15000 to 30000 in CollectionsAPIDistributedZkTest . java to allow more time for
refactor error handling in AbstractParam by removing unnecessary parameter parameters to simplify error message construction and improve readability
updated drawImage method parameters in URLImage . java to use negative coordinates to ensure proper positioning of images in the graphics context
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
mondrian : avoid unnecessary exception when check for member dimension .
[ hotfix ] [ stream ] add the cause when throw streamtaskexception
refactor string handling in Preprocess . java to improve number expansion logic and eliminate redundancy to enhance code readability and maintainability while ensuring
removed unnecessary whitespace in the read method in MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way
avoid jsonparser . encodeprettyprint when there be no extension or comment
updated string splitting to use backslashes and modified artifact extraction logic in LibraryManager . java to ensure proper handling of external meta without an internal name
added alias " node _ popup _ scripting " to " node _ popup / node _ popup _ scripting " in ScriptingMenuEntry
removed HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants from OverviewActionsView . java
( chore ) camel - jms : avoid explicit cast to jmsmessage
updated method signatures by removing unnecessary ` throws IOException ` declarations to improve code readability and maintainability
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove obsolete code to streamline the codebase
updated ` GzipHandlerTest ` to use ` final String ` for content fields and added a new ` MicroServlet ` for handling GZIP compression to
fix a bug where repeat and distinct do n ' t work with backpressureutils .
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and provide clearer insights into component
add a servlet to load the dspace - config from the servletcontext . dspace - config parameter .
hbase - 26923 storescanner . scanrow ( ) do n ' t reset matcher if row match ( addendum )
camel - 16400 : camel - test - add usejmx ( ) method to enable / disable jmx
replaced hardcoded ' / ' with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java ` and
added YARN binary and Hadoop home discovery methods in HiveConf and enhanced Spark job monitoring in RemoteSparkJobMonitor and SparkJobStatus to improve
added support for " maria " database in addition to " mysql " to enhance database compatibility checks
[ hotfix ] fix checkstyle violation in masterwalmanager and splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` to the project to implement a test for executing and returning a form with error
added a new file ` InvokespecialInterface . java ` containing an interface and a class implementing a functional interface to demonstrate how
refactor EvictingBoundedList class implementation to improve performance and maintainability of the code
change default traversal to edge traversal if encodingmanager need turn cost support
added a check for backgroundDisabled and improved error handling for negative selection values to ensure that the select box does not allow negative selection values and
added a null check for the method name in RpcServer . java to ensure that unsupported methods throw an exception
updated the calculation of hotseat cell size and icon center in TaskbarViewController . java to improve layout handling by incorporating
simplified the construction of ` valString ` using ` values . get ( ` partitionColumnIndex ` ) ` to improve code readability and
added versioning support to the NamedTaskDecorator and TaskDefinition classes to ensure compatibility with version 4.1 for serialization and deserialization
updated index directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for replication
changed the boolean value of the ' equal ' variable from false to true and updated the comparison logic to ensure that the ' equal ' variable is
updated UnicodeToLatexFormatter to handle high codepoints and modified HTMLUnicodeConversionMaps to include support for the epsilon Unicode character to ensure accurate
added null check and handling for character control characters in OAIDCCrosswalk . java and Item . java to ensure valid character values are
danielwagnerhall : do n ' t select the original selenium frame if it ' s the same a the original selenium
added a clear button to the DataBrowser and modified the logic for checking file extensions in StringSearchPanel and BookmarksPanel to enhance user interaction
updated the base URL construction in OAuth2AuthorizationRequestRedirectFilter to utilize UrlUtils for improved URL handling to enhance code clarity and
updated SoftAssertionsTest to utilize Dates . parseDatetime for date assertions to improve readability and maintainability of test assertions
modified the ` adaptOrders ` method to include a ` reverse ` parameter for reverse order adaptation to enhance order processing by allowing reverse orders to
delombok should print ` ` var ' ' instead of ` ` var ' ' , and add a test case for it
danielwagnerhall for the new ` ` sendkeys ( null ) ' ' method , and unignoring the test
updated configuration initialization to set default value to false and removed unnecessary logging for Hadoop conf property overrides
replaced the call to ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha )
added unit test base on user forum issue
switch to use getclinabase ( ) instead of system . getglobalinfo ( ) .
added unit tests for ` getBestDateTimePattern ` in ` ShadowICUTest . java ` and modified ` ShadowICU . java ` to
updated the object map initialization to set a " Information " style with a left row of Minecraft color codes to improve visual representation of the
added ZuulProperties parameter to the TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration constructors to enhance flexibility by
tika - 4898 -- fix unit test for tika - 4892 and tika - 4893
added SampleApplication class and modified BuildInfoMojo to handle build time parameter to improve test setup and ensure accurate build time retrieval
update xDist calculation to use Math . abs instead of a direct calculation to improve accuracy in calculating vertical scroll positions
refactored the gui test to make it easy to run
removed nullable declarations from constructors and methods in LazyMessage , StandardSubjectBuilder , and CustomFailureMessageTest to simplify code and improve readability by
updated error message format in TestStream . java to include % s for better readability to improve clarity of error messages for better debugging
updated package structure and import statements for template parser and markup classes to improve code organization and clarity by organizing template parser components under the '
added a test method to validate XPath string evaluation in XPathTest . java to ensure that string values are correctly evaluated as expected for XML parsing
added @ Nullable annotation to FutureUtils . java to indicate that certain variables may accept null values
warn that dynamic invoke expression be not resolve during call - graph construction .
updated email addresses from " @ gmail . com " to " @ example . com " in ContextTest . java to align with the example
updated HTTP response handling for bad encoding in HttpConnectionTest . java and modified URIUtil . decodePath method in URIUtil . java to improve
added ` getColumnDataType ` methods to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way to
change the visibility of the serviceClientConfiguration method from ABSTRACT to DEFAULT and implement the default implementation to ensure that the serviceClientConfiguration method is
refactor HSSFPictureData class to improve image processing logic to enhance performance and maintainability of the code
replaced ` long ` with ` Instant ` for time tracking in ` Statistics . java ` to utilize ` Duration ` and ` Instant `
added version handling and improved logging in LibMediaInfoParser . java to ensure compatibility with different media versions and enhance logging clarity
removed unused imports and refactored methods related to IdeaDependency proxying in ProjectReader . java to improve code clarity and maintainability
added a new SerialHeap class and updated Universe . java to replace GenCollectedHeap with SerialHeap to facilitate memory management
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types . java to suppress serialization warnings for these fields
use mouse . getposition ( ) instead of mouse . getposition ( )
updated MongoQueryCreator to handle null values when retrieving parameters in ` findByFirstNameIgnoreCase ` to ensure robustness by preventing potential NullPointerExceptions
[ hotfix ] [ core ] change the return value of maptypeinfo . getinfofor in maptypeinfo to 1
added issuer retrieval functionality to ` XOAuthProviderConfigurator ` and corresponding tests to ensure proper error handling for duplicate identity providers based on their issuer
pdfbox - 4892 : improve parsing of poor whitespace , a suggest by valerybokov
refactor ContactsBackupJob to use a ServiceConnection for managing operations to improve service management and ensure proper cleanup of service connections
added a new class ` T6938454a ` and ` T6938454b ` while modifying type constraints in ` Attr . java
add isconfighidden ( ) method to accountid and add ishidden ( ) method to accountlist and protocolproviderfactory
added a conditional check to log an error if the number of displays differs from the supported bounds to improve debugging and error handling for incorrect display state
updated schema removal method in PMetaDataImpl to use schema . getSchemaKey ( ) instead of SchemaUtil . getSchemaName ( ) to ensure consistency
make sure passive login be fire and not only on load for web
added a new file ` Box2DTest . java ` and modified ` GDXTester . java ` and ` Box2DTest .
fix localbypartionertype to return a hex string . patch by jbellis
[ hotfix ] [ test ] change default _ buffer _ request _ timeout from milliseconds to minutes .
doc ( regen ) : update javadocs and add default generator header
added a help button to the OpenOfficePanel to provide users with instructions for clarity and usability
use ` childoption ` instead of ` option ` in ` nettyacceptor ` , ` protocoldecodingserver ` and ` protocolpublish
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceFundingHistoryParams to use wildcard generics to enhance type
added a transient class reference and modified class loading logic in ScanResultObject . java to improve thread safety and avoid potential NullPointerExceptions during class loading
refactor DecodeServlet to improve error handling and streamline the image decoding process to enhance code readability and maintainability by reducing redundancy
added null handling handling logic to Querydsl and created integration tests for Querydsl to improve code clarity and ensure correct handling of null values in
added a null check for the actor in the action loop to ensure actions are only processed when they are not null to prevent potential NullPointerExceptions
test ( refactor ) : fix checkstyle violation in cttypereference
added synchronization to the synchronization mechanism for accessing sfWriters to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its test class ` JJJ ` and ` JK ` to implement
added a method to revoke an existing agent certificate and updated the certificate management logic to enhance security by ensuring that an existing agent certificate is properly revoked
added a check for ` __ noBodyCodes ` in the ` AbstractHttpTest ` class and implemented a test for writing body after no body
added error handling for missing < script > tag and language in ScriptTransformer . java to improve robustness of script loading and provide clearer error
added support for DBCP and HikariCP in connection pooling settings to enhance database connection management and improve error handling
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to
added a method to filter file locks and modified visibility handling in FileMenuFilter and OCFileListFragment to enhance file locking functionality and improve user
updated versioning logic in mmm Version . java and ppp Version . java files to ensure compatibility with the latest features and improvements
clear endpoint cache when update a keyspace
replaced direct calls to ` waitForSignal ( ) ` with a new method ` waitForState ( Thread . State ) ` to improve code read
updated the method signatures and parameters to use ` SkylarkRuleContextAttr ` instead of ` Map < String , Object > ` to
[ java ] refactored localstorage and sessionstorage into a new storage interface .
fix ( sql ) : fix npe when create or replace view option
change exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error reporting by providing more specific error context
updated query string retrieval logic in SpellCheckComponent . java to ensure proper query string handling and avoid null pointer exceptions
added validation for header values to check for illegal characters and whitespace after CR or LF to ensure that header values do not contain invalid characters or whitespace
allow hybrid layout to use after field offset instead of instance size
[ java ] deprecate astcommentcontainer . setcontainscomment in favor of abstractapexcommentcontainernode .
hhh - 10619 log a warning about lazy association with ` fetch = ` join ` and ` lazy = ` true `
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter
added assertions to verify database and table names in TestCompactionTxnHandler . java and set database and table names in TxnHandler . java to
camel - 16400 : fix timer not be able to shut down graceful .
added a conditional check to ensure the trace is only added if the block is not processed before adding it to the trace list to prevent unnecessary trace
replace null check with CollectionUtils ' s contains method in ProviderManager to ensure proper handling of null values in providers
simplified the condition for determining if the database is an instance of PostgresDatabase to improve code readability and reduce unnecessary error handling
added tests for local index retrieval and modified result iterators to utilize a new attribute for limit handling to improve test coverage and ensure correct handling of
added a check to prevent adding collections with the same name in the past to ensure that collections with the same name do not interfere with
updated cursor positioning logic in VDUBuffer . java and refactored cursor change handling in vt320 . java to improve accuracy of cursor
removed the static final string USE _ RETRIES from HttpShardHandlerFactory to eliminate unused variable and improve code clarity
update regex pattern in JavaVersion . java to correctly match version numbers to ensure accurate parsing of Java versions for improved accuracy
[ hotfix ] [ runtime ] do not run streamtask when no input gate be available
no effective change - add empty test method
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties is null
updated IOException handling to include the original exception as the cause to improve error reporting by preserving the original exception context
updated the error message in the RepositoryVersionResourceProvider from " rolling upgrade to " to " stack upgrade . " to clarify that the
add a txConfidenceListener to handle transaction confidence changes in the TxIdTextField to ensure that the listener is updated correctly when transactions are added
bugfix # 212 , add g1 perm gen to the list of supported g1 perm name
removed unused imports and refactored the ` loadAttractionsFromLocationToPlaces ` method in ` NearbyController . java ` to
pdfbox - 4892 : make class public , add a suppression
updated activity type checks in BaseSwipeUpHandlerV2 . java to use TaskInfoCompat instead of RemoteAnimationTargetCompat to ensure proper
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related constants and methods for clarity to improve code readability and align
renamed methods in ShadowTelephonyManagerTest and ShadowTelephonyManager for consistency and clarity to improve code readability and ensure
updated the method to set the unfreeze amount in UnfreezeBalanceV2Actuator to ensure the correct unfreeze amount is utilized during
[ iotdb - 4892 ] fix typo in conferencescheduleexcelfileio description ( # 4893 )
simonstewart : use commons - io instead of guava in the firefoxprofile
refactor assertion classes for consistency in naming and structure to improve code readability and maintainability
add marble diagram to javadocs for new onbackpressurebuffer method
refactor ` pushAll ` method to use ` addMultiFieldOperation ` instead of ` BasicDBObject ` to improve code clarity and
added a null check for the random UUID before setting the hubChangeLog ID to ensure that the UUID is generated only if it is null to
added hover event handling in InputConsumer and OverviewInputConsumer classes to enable hover events for better input responsiveness
added a delay and conditional check for " bootstrap _ conf " in CoreContainer . java to ensure proper handling of bootstrap configuration when the server is
camel - 14284 : camel - netty - http should use a label instead of a default value
increase the number of client retries from 5 to 35 in HBaseTestingClusterAutoStarter . java to improve the reliability of HBase client
simplify file creation in SourceSnippetHelper by using File . separator instead of File . toPath ( ) to improve code readability and maintain
make sure that the encodedgraphcachetest # testinvalidationtest faster .
updated query command from " customer _ count " to " all _ tables " and added a new query over output for database tables to improve query
added functionality to adapt Kraken assets to currency codes in KrakenAdapters . java to enhance currency metadata management for better currency representation
added a ` toString ( ) ` method to ` AnyOf ` and created a corresponding test class ` AnyOf _ toString _ Test _ Test
[ hotfix ] [ runtime ] fix typo in alerttaskrunnerv2
[ beam - 8470 ] warn on miss influxdb measurement / database setting
updated method names from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in handling number transformations
added filter conditions for local addresses in NetUtils . java and introduced a method to check unique local addresses to improve address filtering accuracy and ensure unique
replaced direct call to ` writeRowHeader ` with a new method ` quoteColumnNames ` that converts column names to quoted column names to ensure
added methods for setting system properties and line processing in WrapSystem and StrUtils , and updated method references in ClassWrapper to improve system property management
added a constructor to the UpdateRequest class that accepts a URL to initialize the request object with a POST method to ensure proper initialization of the Update
updated the access modifier of EnumSerialization from static to non - static in ProtoTypeAdapter . java to allow the EnumSerialization enum to be serialized
removed the method ` addExperimentalFormatWarning ` from ` RequestHandlerUtils ` and its usage in ` DataImportHandler ` and ` ReplicationHandler
refactor module logging to include a formatted list of module names to enhance readability and maintainability of the debug logging output
change row height of table to fit the default label font size
http : / / issues . apache . org / jira / browse / amq - 4748 - remove unneeded null check
fix mean _ partition _ size / partition _ count mean _ split _ count = 0 in cqlinputformat
simplified condition in JUnitTestsShouldIncludeAssertRule . java by removing unnecessary check for test class to improve code readability and maintain
[ drools - 1362 ] fix ruleterminalnodelefttuples equal ( ) and hashcode ( )
added import for StageIDsRearranger and resolution logic based on Hive configuration to enable stage ID rearranger functionality in the query optimization process
fix typo in messagingservice mbean name ( patch by jbellis )
refactor memory consumption logic in LotsOfOutput . java to improve readability and debugging to enhance performance monitoring and ensure accurate memory consumption
added imports for document handling and updated default dimension configuration in multiple classes to improve documentation clarity and ensure consistent behavior across the application
polish ` ` allow ldap anonymous read - only by default ' '
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - example - echolestest : fix compile error
added ` finishMocking ` method and its implementations in ` DefaultMockitoSession ` , ` DefaultMockitoSession ` , and ` St
refactor GoTestDescription to streamline dependency handling and add new test cases for genrule as source and library to improve code clarity and
renamed buffer and flushing variables to readBuffer and writePending in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve cl
replaced ` StaticBlock ` with ` getFlowingBlock ` in ` BlockLiquidWrapper . java ` to ensure the correct block
updated the method of setting the background location listener in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use URI data instead of class name to
improve documentation for aprendpoint . thanks to bennett for the patch .
[ hotfix ] fix json json dump for streaming plan
update craftingmanager . getitemhash ( ) to use a computeifabsent ( ) to improve performance .
[ flume - 2203 ] [ test ] fix flume - test - core / kafka test on window
removed unnecessary parentheses for newline checks in TabsAndIndentsVisitor . java to simplify code logic for better readability and maintainability
added a new regex pattern for processing temporary lines in NeuteredLinesFilter . java to enhance performance by avoiding unnecessary lines matching
chore ( regen ) : update sample code to set total timeout , add api client header test ( # 49 )
added conditional checks for " INTERVAL " and " NCLOB " data types in DataTypeFactory and updated conditionals in UnknownType to handle
do n ' t publish histogram if it ' s not publish yet
updated ` handleAdd ` to set ` springCloudSelectorHandle ` in ` ShenyuClientRegisterSpringCloudServiceImpl ` and
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable registration of sensor listeners with specified rate and max latency parameters
added test methods for ` testFullMethod ` , ` testFullURI ` , and ` testFullHeader ` in ` SelectChannelServerSsl
( chore ) camel - ignite : add null check and upgrade ignite to 1.5 . 0
added handling for empty sets in AbstractClient and updated the condition for reaching end of result set to improve clarity in output messages and ensure
pdfbox - 4892 : do n ' t swallow exception , a suggest by valerybokov
added HdrCapabilities support and corresponding tests in ShadowDisplayTest . java to ensure proper handling of HDR capabilities across different Android SDK versions
set classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer to include source and target parameters to improve clarity in error reporting for better debugging
added a default constructor to the Message class to ensure proper initialization of the Message class
make serializableidiom priority low if java . awt . component be not implement
updated ` PhoenixDecimalObjectInspector ` to accept ` PrimitiveTypeInfo ` as a parameter and modified related methods to enhance decimal type handling
replaced GZIPOutputStream with OutputStream and added a check for committed responses in CompressionResponseStream to improve handling of output streams and avoid unnecessary content encoding
updated variable names and method parameters in Authenticator . java for consistency to improve code clarity and maintainability by using a more descriptive variable name
added checks for specific directory paths in DCD . java to ensure proper handling of EJS , com . ibm , and org . omg
added a method to retrieve the thread group name in ThreadLeakTest to improve clarity and avoid potential null pointer exceptions when accessing thread groups
added logging functionality and improved code readability in MethodInvocationPrivilegeEvaluator . java to enhance debugging capabilities and maintainability by reducing redundancy
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
bug 8204 : mgt server need to pass down iso info before migration , if the vm have iso attach
updated the handling of signal handlers in SigInt . java and renamed the method from ` shouldInstallThatWillDelegateToTheExistingHandler ` to
replaced static import of ` isEmpty ` with direct usage of ` ArrayUtils . isEmpty ` to improve code readability and reduce dependency on external libraries
replaced NoopDiscoveryClientAutoConfiguration with Spring Boot test configuration and added a new discovery client bean to facilitate integration with Spring
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and maintainability
planningentityselector : remove unused planningentityselector . resetinitializedplanningentities
added buildTimeMs field to ArtifactInfo and updated method signatures in TwoLevelArtifactCacheDecorator , ManifestRuleKeyManager , and CachingBuild
updated the handling of aggregation positions and modified the condition for numEntriesHashTable in GroupByOperator . java to improve accuracy in determining fixed row
added null checks before adding block appearance in Wallet . java to avoid potential NullPointerExceptions when adding block appearance
added support for the CurrencyPair CNC _ BTC in the BTCEUtils and related classes to enhance trading functionality by integrating
updated the skewAllowance value from 5 to 15 and modified related classes to accommodate new configuration properties to enhance the accuracy of skew allow
updated sorting logic in SongListActivity and Utils to use ItemSortBy directly instead of null to ensure consistent sorting behavior based on item type
added a method to read request body as a byte array if available to improve request handling by ensuring the body is properly converted to a byte array
added a new file ` LegacyBaseBlockWrapper . java ` and refactored several block classes to extend it to implement a legacy block wrapper
replaced the use of ` Optional ` with a tag check in ` IcebergBranchExec . java ` and added exception handling for tag
replaced the usage of ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to simplify the code
updated variable declarations and modified bounce count logic in PhotonMappingDemo . java and HybridDemoSsboInstancing .
updated password change validation logic in IdentityProviderEndpoints . java and added logging in IdentityProviderEndpointsMockMvcTests . java to improve error handling and
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that the fields are not initialized when reflective
added logic to determine the database URL based on the connection state to improve error handling by providing clearer context for SQL execution errors
added a test method ` testRequiredBody ` in ` SpringmvcClient . java ` to verify the correctness of the endpoint ' s
updated user and password pattern patterns in CredentialInjector . java and modified JDBC URL in CredentialInjectorTest . java to ensure proper matching of user and
added a new menu item " Item4 " and a key binding for the " Enter " key in ActionListenerCalledTwiceTest . java to
updated print statements in TestCoreParser to include query class name and modified assertion message for result verification to improve clarity of test output and ensure
updated equality check in SimpleNode class to use ' id ' instead of ' children ' to ensure correct equality comparison for node identifiers
changed the visibility modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
changed the type of ` numDocs ` from ` int ` to ` long ` and added a check for ` numDocs ` to ensure accurate
refactor formatting of method calls in QuestManager . java for better readability to enhance code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend from testlogger
refactor query construction in MongoSessionDataStore to streamline expiration checks to improve code readability and maintainability by reducing redundancy
make unsafe . getlong a a macro substitution .
updated time zone identifier for Asia / Amman from ARAST to EET across multiple language files to align with current time zone standard
update id from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the deprecation logger
hhh - 14850 prevent session . getlock ( ) from return null in transactional mode
improve handling of download external file when there be no file extension .
set apple . laf . usesscreenmenubar to false on macosx
test : add integration test for piecewise algorithm
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in `
added a modWhiteListPattern assignment in HiveConf and implemented a test for configWhiteList in TestJdbcWithSQLAuthorization to ensure that modifications
do n ' t add invalid class to the list of invalid class in the entry loader
updated the method call to use the player ' s team instead of the sharded team to ensure the target is accurately associated with the player
updated the cookie builder to use the host name instead of a hardcoded domain to ensure the test uses the correct domain for cookie configuration
added validation logic for nullable values in MissingColumnChangeGenerator , MissingTableChangeGenerator , and ColumnSnapshotGenerator to ensure proper handling of nullable values
doc ( regen ) : update license year for security token
added deletion and addition of document in CustomCollectionTest and changed the separator variable to static final in CompositeIdRouter to improve test reliability and
updated imports and added snapshot handling in ExecutablePreparedStatementBase . java , along with a test for blob change logs in PostgreSQLIntegrationTest . java to
updated conditional checks for cache and cache size in DefaultServlet . java to ensure proper handling of cases where max _ cached _ files and max _
improve drag - and - drop handle for library tab .
updated description creation and assertions in ` ExecutionUnitRunner ` , ` CucumberTest ` , and ` ExecutionUnitRunnerTest ` classes to
replaced string . isempty ( ) with string . isempty ( ) in CommandLineUtils . java to improve code readability and
modified access modifiers of methods in TimeUtils to package - private to enhance encapsulation by restricting access to methods not intended for public use
removed the " jdk . reflect . useDirectMethodHandle " property and refactored security frame checks in RefectionMHTests to
updated file extension check from " . jpg " to " . jpg " in PreviewImageFragment . java to ensure compatibility with the file
[ gr - 10611 ] fix debug info display for host method .
added icon loading functionality and updated default visibility of classDisplayed in DataTableTopComponent and EdgeDataTable to enhance user interface by providing visual feedback and
added a conditional check for the last index of the name in the CounterRequestAggregation class to avoid potential NullPointerException when accessing the name
updated the replacement logic in ` FindAndReplace ` to handle dollar signs tolerantly to ensure proper handling of dollar sign in
smackpacketdebugger : do n ' t use xmppconnection if the connection be null .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to create parent directories for source and destination files to improve file copying functionality by allowing users to copy files
added exception handling for unknown datum classes in JacksonUtils . java to improve robustness by throwing an exception for unknown datum classes
replaced direct calls to ` buildAbiFromClasses ( ) ` and ` buildRuleFromSource ( ) ` with logic to require rules
simplified height calculation by removing background padding to improve code readability and maintainability
added normalization for database and table names in ObjectStore . java to ensure proper handling of identifiers by normalization
added schema handling for Oracle database type in DbSqlSession . java to ensure the correct schema is used when using PostgreSQL when using Oracle
removed logout handling from HomeFragment by directly finishing the activity to avoid unnecessary logout operations
updated MockStreamingRuntimeContext parameters from ( 0 , 0 ) to ( 1 , 0 ) and modified subtask names in multiple test files to
added null check for candidates before retrieving priviledged elements in FastImportAction . java to prevent potential NullPointerExceptions when processing elements
updated the logic for determining if a bean is managed in ContainerLifeCycle . java and added corresponding assertions in ContainerLifeCycleTest . java to
rename iexecutionattributesdialect to iexecutionattributedialect for clarity
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
updated dayStr , monthStr , and ordinal initialization to handle null locations to improve robustness by avoiding potential NullPointerExceptions
added null checks and improved exception handling in DisruptorQueue and CachedSchemaPatternMatcher to enhance robustness by preventing null pointer exceptions
deleted the Session2Token . java file from the android . media package to the class is no longer needed in the project
volume can be remove from db if dest volume fail to create
added a new Install functionality to the SystemShortcut class and InstantAppResolver classes to enhance user experience by allowing automatic installation of the drop target icon
added a constructor to LdapAuthenticationProvider that returns an empty GrantedAuthority array to handle null authority populators to ensure that the LdapAuthenticationProvider
updated retrolambda retrieval to use a system property instead of a hardcoded path to improve flexibility in locating the retrolambda jar
replaced the call to ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to ensure the build
refactor the ` sortLiveDocs ` method to utilize ` Bits ` instead of ` FixedBitSet ` and update its logic to improve
added a call to handleNullResult in JMESPathExtractor . java to ensure proper handling of null results in the extraction process
updated import statements in AuthorizeTag . java to utilize specific utility classes and added validation for user authorities to improve code clarity and ensure
refactor assertions in tests for consistency and clarity to improve code readability and maintainability by using standard Java classes
server : fix typo find by codespell on fossies . org
updated annotation handling in RobolectricTestRunner and changed list types to set types in RobolectricTestRunner to improve configuration merging
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more modern socket connector implementation
added a method to check partial partition keys equality in HiveAlterHandler to improve accuracy in determining partition keys during alterations
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to enable or disable the icon display
removed unnecessary whitespace in SimulationStatus . java to improve code readability and maintainability
replaced SharedBlockingCallback with Callback . Completable for handling callbacks to simplify callback management and improve code readability
added workspace listener functionality to PreviewControllerImpl and modified graph building in PreviewUIController to improve responsiveness to workspace changes during graph building
updated conditions for noInflation in ReflectionFactory . java and modified class name check in ReflectUtil . java to improve inflation checks and enhance
updated TransportHelper . java file to improve functionality and maintainability of the code
updated the file path format in CatalinaAcegiUserRealm . java from " file : / / " to " file : "
updated logging messages for server and action manager startup in AmbariServer . java to improve clarity and traceability of server and action manager
added null checks for init and modify nodes in JSONWriter . java to ensure proper handling of node initialization and modification to prevent potential NullPointerExceptions
modified method signatures in SliderAppsViewControllerImpl to accept a FileSystem parameter instead of using a default FS path to enhance flexibility by allowing
added a check to ensure backgroundManager is attached before attaching it to prevent potential NullPointerExceptions when attaching the background to the window
set the current tab and update related methods in AllAppsTabbed , Launcher , and PagedView classes to improve tab management and ensure
added null check for URL in BaseDataSource and a corresponding test in SimpleDataSourceTest to ensure proper error handling for invalid URLs and validate functionality through
added JUnit condition checks and refactored PebbleTemplateEngine instantiation in PebbleModuleTest . java to ensure tests are only
added EditNameDialogListener to FileDisplayActivity for handling directory creation dialogs to enhance user experience by allowing users to create a new directory with
added functionality to toggle bar borders in multiple chart activities to ensure proper border width settings for specific data sets
updated the API endpoint from " okcoin " to " okex " in OkCoinExchange . java to align with the latest API changes for
jbrules - 2807 : add deciderscorecomparator to acceptforagertest . testpickmovescoreofall
replaced FileChannel with SeekableByteChannel for reading files to improve performance and memory management when reading files
refactor the getFlattenFieldTransferPair method to accept a FieldReference parameter for improved clarity to enhance code readability and maintainability
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
reordered conditional checks for SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser . java to improve readability to enhance code clarity
added import statements for ActivityManager and set watch heap limit in QuickstepProcessInitializer . java to enhance debugging capabilities by controlling the heap limit
updated lambda expressions to use a temporary variable for sumWithCompensation to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4358 - do n ' t throw exception
updated the handling of DataOutputBuffer in PrecompactedRow . java to check for deletion status before serializing it to ensure proper serialization of
updated rendering intent return values in ICC _ Profile and ColorConvertOp classes , and added a new InvalidRenderIntentTest class to ensure correct
add meterregistrylifecyclelistener to close the meterregistry on shutdown
change log level from warn to info when config item not find
added test cases for certificate generation with byte array parameters in CertificateFactoryTest . java to ensure proper handling of certificate generation with expected results
camel - 16400 : simple predicate parser should handle ambiguous binary operator . thanks to stan lewis for the patch .
simplified the ` onTabUnselected ` method in ` EditorActivity ` and added focus handling in ` IDEEditor ` to improve
add user . name to the error message when access log fail
updated file paths and scaling factors in SkeletonModelGpuSkinningTest , modified animation time calculation in OgreXmlLoader , and adjusted
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotation to UpgradeResponse . java to indicate that the class is outdated and should no longer be used
added support for specifying the output directory for declaration files in the JSweet transpiler to enable users to generate d . ts files along with
[ hotfix ] [ kinesis ] set fetchtimeout to 600 _ 000 for kinesis consumer factory
added a new file extension " . html " to the timestamp parameter in StreamingDataflowWorker . java to include the HTML file extension for better
increased the maximum number of metastore server threads from 100 , 000 to 1000 to improve performance by reducing the number of thread
changed the return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate whether the change was successful or not
update shadow radius setting in SwipeUpAnimationLogic to ensure correct shadow radius is set during animations
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` for testing aggregator functionality to ensure that the ` aggregator
change the loop condition from limit to end in MarketSellAssetActuatorTest . java to ensure that the loop does not exceed the
do n ' t use isinternal ( ) to check if the source be an internal context .
updated conditional check for previousCachedFilePath in CreateKeytabFilesServerAction . java to improve readability by using logical OR instead of logical AND
added DisplayController import and modified WindowManagerProxy initialization in LauncherPreviewRenderer . java to enable display management functionality in the launcher
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent tooltip text for
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize (
[ api ] change signature of TensorflowRESTCaptioner and TensorflowRESTRecogniser from List < ? extends RecognisedObject > to
added methods for inserting and removing entities and fetching results in JPASQLBase . java to enhance testing capabilities for the cat entity management system
modified drag index logic and debug print statement in FreeformFinSetConfig . java to ensure correct drag index handling and improve debugging output
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest release version
updated runtimeError message to correct a typo and added program . spendAllGas ( ) to improve error clarity and ensure all gas is
updated format strings in ElementsShouldSatisfy , ZippedElementsShouldSatisfy , and ElementsShouldSatisfy _ create _ Test
marked the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
[ gr - 11300 ] do n ' t register unsafe . class in jdk8 or earlier .
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs classes , and created a new Sample class for testing to
changed mCenterPagesVertically from true to false to disable vertical navigation in the user interface
[ hotfix ] [ runtime ] fix wrong call to doneprocessing ( ) in migrationrequestoperation
updated constants and variables to use ' baseUrl ' instead of ' moduleIpAddress ' to improve clarity and consistency in configuration management
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java
refactor test table creation and query processing in TestJdbcWithMiniLlap and LlapBaseInputFormat to use a specific database to
added a new test case ` testCaseInsideBrackets ` method to ` CaseExpressionTest . java ` to validate SQL parsing logic to ensure correct
added copy mode handling for touch events in ConsoleActivity to ensure compatibility with devices running ICE _ CREAM _ SANDWICH and above
refactor ` writeXmlOutput ` method to accept a ` Writer ` instead of a ` String ` for XML output to improve XML output handling
camel - 3490 fixed the npe issue of abstractlistaggregationstrategy when exchange be null
camel - 16400 : camel - jbang - log4j - add more information about the cause of camelexchangeconnectexception
renamed the package of BasicConfigurator from " logback " to " logback . classic " and updated import statements accordingly to organize logging
do n ' t generate type qualifier for non - pvm target when compute type qualifier .
remove import of sharedstringsource in testxssfrichtextstring
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with tracing and arguments
renamed multiple classes related to box and whisker calculations and Histograms to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] migrate readabilitywritablesourcetest to junit5
updated ` NormUpdate ` class to be static and replaced ` = = ` with ` . equals ( ) ` for string comparison to improve performance
changed access modifiers of singleton and constructor from public to private in IndexFileNameFilter . java to enhance encapsulation by restricting access to the singleton
refactor ifstatementtest . java to improve test coverage of plugin definition
replace the method ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
refactor TypeAdapter methods for clarity and consistency to improve readability and maintainability of the code
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected output for the distribution
added a new class EXIFReader to process Exif images and updated ImageProcessingService to utilize it to improve image processing capabilities by providing
cloudwatchmeterregistry : default to ` ` none ' ' for unknown unit .
[ pmml ] fix illegalargumentexception when load pmml model
updated message formatting in FluentProtocol . java to include an additional line to improve readability and maintainability of the error message
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 10611 ] fix aarch64 encode issue when branch target be out of bound
added synchronization to the initialization of the JDKXRLogger to ensure thread - safe logging behavior in case of multiple threads
added a find method to TicketCatalog and its implementations in DefaultTicketCatalog and HazelcastTicketRegistry to improve ticket retrieval efficiency by filtering and sorting
refactor SSL connection initialization by removing unnecessary concatenation operators to improve code readability and maintainability
[ hotfix ] [ runtime ] fix the memory leak in sortmereresultpartition
( chore ) camel - jms : use non - deprecated read / write constructor
added ` type ` and ` sort ` parameters to the ` queryAllPluginHandlesByPluginId ` method and ` PluginHandleController ` to
added ` start ( ) ` method to the ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` classes to ensure span starts correctly
added support for GLKViewDrawable color format , depth format , stencil format , and sample formats in IOSApplicationConfiguration and IOSGraphics
replaced direct sendKeys calls with a call to attemptLogin for login attempts and added a new test for user locking after failed attempts to improve
add check for real ( ) and complex ( ) to pytorch native code
removed interruption check and refactored lock name retrieval logic to use a do - while loop to improve thread interruption handling and
updated implementation annotations in Implements . java and ShadowPicker . java to improve code clarity and maintainability
[ scb - 2687 ] make http / 2 more configurable .
updated type checking logic in DynamicStruct and SolidityFunctionWrapper classes and improved error handling in SolidityFunctionWrapperGenerator to ensure
updated ` getStringProperty ` calls to include a default value for " text - align " and " font - size " in both ` InlineLayout
added overloaded constructors to ` CopyStep ` to accept both ` Path ` and ` boolean shouldRecurse ` parameters to enhance flexibility in
fixed - rsemaphore . addpermit ( ) and rsemaphore . release ( ) method throw classcastexception
camel - jbang - fix the unit test error of camel - core
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed raw types from List < String > to List < ByteString > in WitnessScheduleStore . java to improve type safety and performance in handling
added a check for non - empty results before printing them to avoid printing empty results when results are not provided
refactor ConcurrentLinkedQueue to improve handling of null items and add a new RemoveLeak test class to enhance the robustness of the Concurrent
refactor HuggingFaceTokenizer and HuggingFaceParser to support optional special token processing options to enhance flexibility in encoding and decoding
[ hotfix ] use collections . ncop to simplify code
update LoadSingleTsFileNode . java to use AlignedChunkData for adding value chunks to ensure chunk data is properly aligned and updated for
added a new constant for session storage context and modified state management in the DuoSecurityMultifactorWebflowConfigurer to enhance session
add a test method to verify schema validation in the JspDocumentParser to ensure that the application correctly handles XML schema errors during XML parsing
added a default constructor to TypeAdapter and updated annotations in Java17RecordTest and ReflectionAccessTest to ensure proper initialization and suppress warnings related to
rePL : make sure we do n ' t re - dispatch suspension event in repl server
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
fix npe in createresourcepolicy ( ) and remove unused parameter
added null check for ` _ deflaterEntry ` in ` GzipHttpOutputInterceptor . java ` and modified assertions in ` BlockingTest . java
added @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup after each test execution
updated the MD5 checksum computation to use Normalizer for character normalization to ensure consistent form normalization by removing unknown characters from the checksum
refactor command handling in Example . java to improve command execution and description retrieval to enhance code clarity and prevent potential null pointer exceptions
bugfix # 25307 , make keylistener final and add override annotation in basestate
replaced the variable ` objectToSave ` with ` dbDoc ` in MongoTemplate . java and added a new test for saving JSON strings
added functionality to extract and handle multiple remote addresses in the RequestUtils to ensure proper handling of multiple remote addresses in requests
updated getJobArgs method to return ObjectBuilder instead of String and changed its type from String to ObjectBuilder to improve data handling by utilizing Object
refactor ` CookieManagerTest ` and ` UnmodifiableMaps ` to use a local host address and use ` NO _ PROXY ` instead of
refactor glyph handling logic in GlyphLayout . java and add a new test case in BitmapFontTest . java to improve memory management and ensure
support pause or resume pulsar split in pulsarsourcereaderbase and pulsarpartitionsplitreaderbase
added HIVESCRIPTIDENVVAR configuration and retrieval in ScriptOperator to enable script operator identification based on environment variable settings
refactor getListedTermCounts method to use a stream - based approach for counting term entries to improve code readability and maintainability by redu
added a new file ` UseSeparateStepSizeAction . java ` to implement a menu for setting a separator size in the jog to
added user ID handling and improved unlocking logic in FileMenuFilter . java to enhance user experience by ensuring unlock actions are displayed based on
hbase - 25827 fix the roundrobintableinputformat so that it do n ' t return an empty list when the region
change the default value of the ` Sampled ` header in ` HttpClientRequestAdapter ` from " false " " to " 0 " " and
pdfbox - 4892 : simplify code , a suggest by valerybokov
added fullscreen handling and updated viewport settings in GwtApplication and GwtGraphics to improve user experience by enabling fullscreen features in the
updated WebfingerIssuerService to use URI instead of String for issuers and parameter names to enhance compatibility with different URI formats and improve resource
add unit tests for SoulApacheDubboClientConfiguration to ensure correct initialization of Dubbo configuration properties
updated file path handling in SkinLoader to use ` resolve ` method instead of ` Gdx . files . internal ` to ensure compatibility with
updated logging levels from warn to info in OidcDefaultJsonWebKeystoreCacheLoader and added logging for attributes in ChainingAttributeReleasePolicy
replaced ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK . lock
updated package declaration in Compiler . java to ensure consistent package structure across the codebase
added error handling to the redundant comparison logic in NullDerefAndRedundantComparisonFinder . java to ensure correct handling of code exceptions related
update dashrendererbuilder to use defaulthttpdatasource for manifest fetch
added a new configuration property for maximum prepared statements cached per database connection in the execution scheduler to provide configurable control over the maximum number of prepared statements
configuration . set ( configoption < t > option , t ) now return a configuration . set ( configoption < t > option , t
added error handling in the checkErr method of AutoScalingHandler to ensure proper response with bad request errors for command operations
updated the CombinedDataset class to improve data handling to enhance performance and maintainability of dataset operations
replaced the variable ` buf ` with ` b ` in the ` InflateIn _ DeflateOut . java ` file to
remove cryptography restriction when app be run in eclipse
fix potential deadlock when create a portal .
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify the functionality of
added null check for vContext and updated file key assignment logic to ensure vContext is initialized before use to avoid potential null pointer exceptions
fix wialon speed ( fix # 3391 )
hbase - 25813 disable the metric user by default
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject `
updated boolean flags for user presence , visibility , and attached states in Launcher . java to improve clarity and ensure proper handling of receiver un
refactor AsyncFile , HttpClientRequest , HttpServerResponse , NetSocket , and ReadStream classes to improve code organization and maintainability
add params to zadd ( ) call in pipelinebase to pass params to zadd ( )
[ ds - 3762 ] fix utf - 8 encode issue in unit test
rename testasyncmessages to testasyncmessagesperformancetest to avoid false failure .
refactor ` VersionedTargetGraphBuilder ` to improve handling of optional build targets and enhance test coverage in ` VersionPropagatorBuilder ` to ensure
updated the range of epoch seconds in TimeZoneProvider . java to accommodate new time zone limits to ensure accurate handling of time zone data for
fix a bug in the EscherBlipRecord and add a test for ole2 embedding in TestOLE2Embeding to ensure
removed redundant initialization of row and column variables in JSONParser . java to streamline code for better readability and maintainability
replaced ` JavaType . FullyQualified ` with ` Pattern . compile ` for pattern matching in ` FindTypes . java ` to improve
added functionality to play and process trailers in BaseItemDetailsFragment to enhance user experience by allowing users to choose between specials and trailers
add removeGlyphInfoFromCache method and modify pointer freeing logic in CStrike . java and CStrikeDisposer . java to improve
fix process instance end event not be delete when terminate end
camel - 16400 : fix camel - saxon to use the xmlrootelement annotation to determine the local name of the type
updated the endpoint URL in the test from " http : / / www . apereo . org " to " https : / / www
add -- prdef option to reset all default preference
hbase - 25827 make all the thrift metric protect instead of private ( addendum )
removed deprecated channel references for manual fan speed in the DanfossAirUnitHandler to streamline the code by eliminating outdated channel
use hamcrest assertion instead of junit in examples / microprofile / cdi / testendpoint . java
removed redundant null check for expansionHelper in TweetActivity . java to streamline code by eliminating unnecessary duplication
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory with custom equals and hashCode methods to ensure proper handling of
server : allow specify a default root disk size ( vm _ size ) for custom vm .
updated PredictionRowView to conditionally show suggest apps based on user preferences to enhance user experience by enabling suggest apps based on user preferences
[ geos - 7770 ] check for null or empty string before parse a bbox
added validation methods for value and position parameters in LibrustzcashParam . java and updated IVK value in Librustz
deprecate ithrowableentity in favor of itoverridden
added random x and y coordinate initialization in NodeDataImpl to position nodes within a specified range for better spatial distribution
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to
refactor variable declarations to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new version number " 0
added support for item type DEEP _ SHORTCUT in LoaderCursor to ensure proper handling of deep shortcuts in the user interface
added hashCode ( ) method to TimeGranularitySpec class to ensure proper hash code generation for types and column names
changed access modifiers of classes and methods from private to protected in BooleanQuery , DisjunctionMaxQuery , and weights to allow subclasses to access these
added a boolean flag to control proxy response code behavior in HttpURLConnection to ensure proper handling of NTLM proxy when the response code is used
aarch64 : fix a bug with native - image in native - image
server : do n ' t count vm ' memory ' for host that do n ' t exist anymore .
added a null check for the maximum score in JSONResponseWriter and included a query in TestDistributedSearch to ensure score inclusion occurs only when
updated the audio recoder port from 22050 to 44100 to ensure compatibility with the latest audio encoding requirements
updated the calculation of newOriginX in RocketFigure . java to include scaling based on subjectBounds _ m ' s minimum X to
update druid query base input format to allow empty druid data source .
added ORIGINAL _ TYPE field and modified regex pattern in CustomProperty . java and CustomPropertyTest . java to enhance the handling of original
added a static method ` create ` to create an instance of ` Index ` using a parent and data map to facilitate the creation
simplified the return statement by removing unnecessary variable declaration to improve code readability and maintainability
updated SchemaCompatibility to include location parameter in mergedWith method and added new test cases for union writer compatibility to improve schema compatibility checks and ensure correct
added functionality to check for entity paths and imports in QueryUtils . java and updated test cases in EclipseLinkNamespaceUserRepositoryTests . java
added synchronization to the spans list and modified access methods to ensure thread safety to improve thread safety and prevent potential issues with concurrent access to spans
updated method signatures in multiple classes to use wildcard generics instead of Object to improve type safety and reduce potential runtime errors in method calls
updated exception handling in ViewContextImpl to catch InvocationTargetException and log warnings to improve error handling and provide clearer logging for authentication issues
refactor OAuth2AccessTokenEntity class to improve access token handling to enhance performance and maintainability of the code
updated error messages in SCBEngine and related classes to indicate when a request is rejected due to STATUS = DOWN to improve clarity in error
added two new project files , " ios / data / Default - 1024w - 1366h @ 2x " and " ios -
updated imports in TestSearcherManager . java to include ConcurrentMergeScheduler and modified MockAnalyzer initialization to enable concurrent merging during test execution
added null and empty checks in QTestUtil and GenericUDTFInline classes , and improved row processing in GenericUDTFInline
updated MapIterable , FJIterate , and ParallelIterate classes to improve performance and maintainability of the code
ticket # 4810 : prevent prevent the web spreadsheet from click on the web page
hhh - 16400 fix the osgitestcase so that it work with osgi
fix bug where pool timeout be not be calculate if the connection timeout be not available .
simplify voice component creation by use a non - packaged resource directory
updated file name handling and improved file path normalization in Compat . java and FileOpener . java to enhance clarity and correctness
changed return type of the row ( ) method from Cell < T > to void to simplify method implementation by removing unnecessary type parameter
check that a port number be not already specify multiple time in -- p2p - port and -- rpc - ws - port ( # 1
added a null mask feature to WebSocketClient and updated WebSocketConnectionD12 initialization to allow flexible configuration of mask settings for WebSocket connections
modified the return type of the genUDTFPlan method to return a Pair < RelNode , RowResolver > instead of a single Rel
added tracking for bucketed node selection counts in NodeScheduler and updated related references to improve tracking of selected nodes for better performance metrics
add a new Person class with getter and setter methods for its name in the org . apache . maven . it0001 package to provide a way
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve clarity and ensure proper handling of pointer existence
added a clock display and animation to the PlaybackOverlayFragment to improve user experience by providing a smoother transition effect
remove unnecessary call to world . updatecomparatoroutputlevel in favor of world . updatecomparatoroutputlevel ( pos , blockstate ) .
changed the access modifier of ` IMPL ` from ` final ` to non - final and updated exception handling for loading ` SegmentReader ` to
make sure cell update event be fire on the edt thread ( # 2696 )
renamed DefaultInetAddressAdapter to CollectionTypeAdapter and updated type adapter methods for improved clarity to enhance code readability and maintain
added null value assertions and corresponding unit tests for the LongSeries class to ensure proper handling and validation of null values in the Series class
updated the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated boundary conditions in GeoRelationUtils and GeoUtils for improved boundary checks and limits to enhance accuracy of geospatial calculations and prevent
fix npe in vm expunge process - use getdiskofferingid ( ) method instead of getid ( )
added cleanup method to hazelcasttest to ensure all resources are properly shut down
add more test for cipher . getinstance ( ) in blockciphertest .
added filters for logging operations in QFileClient to enhance visibility and user feedback during operations logs
fix issue with annotate type argument in @ introduction annotation . fix # 2693 ( # 2694 )
fix npe if no connection address be provide in the sip protocol provider . report by michael michael .
replaced the use of Math . addExact with MathUtils . cappedAdd for demand adjustment to simplify code and improve performance by using a
replaced try - with - resources for the ImageOutputStream with a try - with - resources statement to ensure proper resource management and avoid potential null
refactor search intent handling by replacing calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct intent creation to
modified the instantiation of ` schemaCrawlerOptions ` in ` SchemaCrawlerCommandLine ` and adjusted the ` toString ` method in ` GrepOptions `
http : / / issues . apache . org / jira / browse / amq - 4358 - add osgiservice to
added @ Autowired annotation and repository field to RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository instance
changed the return type of the stop method from Exception to InterruptedException in UIServer . java and updated the log statement in TestVertxUIM
added new case statements for various cactus types in BlockCactus . java to enhance functionality to include additional cactus functionalities
refactor mouse event handling by extracting it into a separate method called handleMouse to improve code readability and maintainability by encapsulating mouse event
reduce memory footprint of multicast flow control by extend abstractminmulticastflowcontrolrhspadding instead of abstractminmulticastflowcontrolfields
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance text editing
make stattomokentannotator more resilient to npe
added checks for distinct queries and improved group column handling in ClusterIntegrationTestUtils and QueryGenerator to enhance query flexibility and accommodate
improve error message when find a closely linkage
jme3 - core : fix typo in javadoc ( no functional change )
added null check for children before iterating to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition to MessagePackParser and updated return statements in MessagePackParser . java to implement new token position and position handling ,
added locale management in AbstractSolrMorphlineTestBase . java after tests to ensure consistent locale settings during tests after tests
simplified size calculation in LauncherFragment by removing conditional checks for LauncherActivity to streamline code for better readability and maintainability
added a new test class ` MetricsReporterTest ` to verify the registration of metrics in the ` MetricsReporter ` class to ensure proper functionality and
camel - 16400 : remove unused variable in osgiserviceregistry . typecachemap
added equals and hashCode methods to the Rectangle class to enhance object comparison and hashing functionality for improved performance
do not use the same sink name in all test in streamkafkaptest ( # 24579 )
updated DSAParameterGenerator logic to use BigInteger . ONE instead of BigInteger . valueOf for better clarity and consistency to improve code readability and
added support for using FQDN in LLAP daemon settings and improved host name retrieval logic to enhance security by allowing the AM machine to be
fix flakyness of clientoutofmemoryhandlertest by wait for shutdown to complete
added a method to retrieve the correct ObjectId from shapeId in multiple shape classes and updated the setObjectId method to use this new method to ensure
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct entities
refactor multiple Java files related to field selection and task handling to improve code organization and maintainability
fix : remove bind / unbind extensionadapter from managedKubernetesclient
updated the title display logic in DetailsDescriptionPresenter to use a utility method for extracting information rows to improve code readability and maintainability by central
updated JUnit imports and annotations from @ Before / @ After to @ BeforeEach and @ AfterEach in TestAuthHandlerBoot and TestRSA
do n ' t throw exception if we ca n ' t generate the summary
replaced multiple calls to ` intPool . reset ( false , false ) ` and ` bytePool . reset ( ) ` with a single
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
added support for TIRAMISU in ShadowWindowManagerGlobal and implemented a new WindowSessionDelegateU class to enhance compatibility with newer Android
refactor URL handling logic to prioritize request scheme and port retrieval to improve clarity and maintainability of the code by separating concer
added support for MSSQLDatabase in foreign key statement handling to ensure compatibility with MSSQL database ' s foreign key constraints
hbase - 25827 fix checkstyle violation in hbase - core
improve emzuli pipe filtering , and add a filter event handler .
simonstewart : make the logging in htmlidentifier configurable
updated references from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java `
clarify that player . setthrowswhenusingwrongthread can throw an exception .
updated schema name handling in SequenceSnapshotGenerator to utilize CatalogAndSchema to ensure compatibility with Liquibase ' s CatalogAndSchema for
updated color settings in SpriteBatch and SpriteCache , changed GdxTest initialization to AlphaTest , and modified drawing parameters in AlphaTest
fixed - redissonconnection . getentpromise ( ) . join ( ) method do n ' t return the result of rconnection . get
added logic to retrieve and add the base Solr Solr base URL to the statistic year cores to ensure that only valid HTTP and HTTPS schemes are used
renamed the method ` launchTask ` to ` launchTaskFromView ` and updated its usage throughout the code to improve clarity and
updated MorfologikFilter and related classes to improve dictionary handling and resource loading to enhance code maintainability and ensure proper loading of dictionary
updated sorting options for community and community rating in GridFragment . java to improve clarity and organization of sorting options for better user experience
added imports for ViewKt and ListRow , and updated visibility logic in CustomListRowPresenter to ensure header view is visible based on item
added a try - finally block to ensure the countDown ( ) method is called after the switch statement to ensure proper resource management and prevent potential
refactor HttpClient class implementation to improve performance and maintainability of the code
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure case - sensitive checks are
added support for jsr310 time module ( jsr310 ) in jackson ' s standardjavascriptserializer
updated import statement from org . apache . log4j . MDC to org . slf4j . MDC to ensure compatibility with
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to improve type safety and clarity in type
removed unnecessary whitespace and improved code formatting in CoinbaseTransaction . java to enhance code readability and maintainability
added method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to include ` shouldForceBuildingWithBuck
added a call to System . gc ( ) in Ping . java and removed the existing idle strategy declaration to ensure proper resource management and avoid potential
replaced ` ContentProvider ` with ` ContentResolver ` in multiple files to ensure compatibility with the latest API changes and improve logging accuracy
removed redundant state change checks in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] ensure slotowner be not null before initialize it .
added a new file ` RemoveCallsToSystemGc . java ` to implement a recipe for removing calls to ` System . gc ( )
removed unnecessary calls to super ( ) in multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added a method to set the UIID and set the icon in the ScaleImageLabel class to ensure the correct icon is applied when updating UI
replaced the variable ` foundEntry ` with ` update ` for clarity and consistency to improve code readability and maintainability by using a
added support for the " - cp " command - line argument in the Main . java file to enhance command - line argument handling to allow for
* fix ` avutil . java ` build issue in eclipse
fix break isinitialized check from maybejoinring ( # 4679 )
updated Test7196045 . java file to improve test coverage and fix existing issues
updated density and decay values in ShaderParametersLightShaft . java to improve the visual distinction of the lighting parameters
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and modified ` OidcRedirectActionBuilder ` to util
# 2696 - do n ' t generate unique constraint for non - null value
added federated share checks using FileDataStorageManager in UsersAndGroupsSearchProvider and EditShareFragment to enhance user sharing functionality based on user
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy . java ` to ensure that document value handling
refactor BufferAlignmentAgent and related classes for improved error handling and clarity to enhance readability and maintainability of the code
added a method ` intForEach ` to ` Int2ObjectHashMap ` for iterating over values and updated formatting in ` Int2ObjectConsumer
save scoreboard save early so we do n ' t share scoreboard data
changed return types of count methods from Long to long in multiple MongoDB repository classes to ensure consistency in data type usage across the codebase
refactor MTree snapshot creation logic to improve clarity and efficiency to enhance readability and maintainability of the code
updated the calculation of the dotProductScore method in VectorUtil to improve accuracy and accuracy of score calculations
added an IRREVERSIBLE _ THRESHOLD constant and methods to manage and retrieve the latest confirmed block number in DynamicPropertiesStore to improve the
refactor locale handling in GpsMainActivity , MainPreferenceActivity , and Systems classes to utilize a new setLocale method to streamline locale
added a condition to check if a new database was created in the LauncherClings class and introduced a flag to track if a new database
refactor assertions and iterator usage in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability by reducing
added a null check for datamodel before determining if the architecture is 64 - bit to ensure that the logic correctly determine if the datamodel is
added a thread check to ensure the current thread is the same before proceeding with further operations to prevent potential issues during concurrent operations
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method for better extensibility
updated imports and method calls to use ` ModelCompat . asSdk ( ) ` instead of ` apiclient . model . dto ` to
added import of svg attributes to the document element in BatikSVGDrawer . java to enable proper handling of SVG attributes in the generated XML
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error logging for user configuration parsing errors
added a check for the " WaitForResult " flag in CodenameOneActivity and updated related logic in AndroidImplementation and CodenameOne
refactor HitQueue , SpanPositionQueue , PriorityQueue , and other classes to use a Supplier for the sentinel object to improve flexibility
added a new ` mWidgetDescription ` field and modified visibility handling for widget descriptions in ` WidgetCell . java ` to improve user interface by
added validation to prevent exceeding the maximum registered attribute count in Attribute . java to ensure that the attribute count does not exceed a predefined maximum ,
move predicatestest to impl package to avoid conflict
camel - 14284 : add case insensitive option to defaultheaderfilterstrategy . thanks to benjamin for the patch .
updated logic in InlineLayout and Breaker classes to improve wrap handling and alignment logic to enhance code readability and maintainability while ensuring proper alignment
added null safety checks and improved view inflation in ShareUserListAdapter . java to enhance robustness and prevent potential NullPointerExceptions during view
refactor ( setup ) : remove useless ` ` java . lang . runtimeexception : notfoundexception : no functional change ' '
added a condition to return the number of columns in the table based on the association ' s insert destination before the source association to ensure that the
updated memory limit file path retrieval in CmdModifierTest . java to use a dynamic retrieval based on the Cgroup version to ensure compatibility with both
replace singleton dependency with a singleton instance of CxxDeps in AbstractCxxDeps . java to simplify dependency management by eliminating unnecessary singleton
added error handling for null rules in JavaTestRule . java to provide clearer error messaging when the source under test is not among its dependencies
add support for minecraft 1.9 . x and minecraft 1.10 . x for crossversionproxy
removed conditional checks for negative index in StringUtils . java to ensure that the index is non - negative to avoid potential errors
increased the timeout duration in the BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds and increased sleep duration in the
modified TaskOverlayFactoryGo to accept an AssistContentRequester as a parameter to enhance the task ' s ability to request assistance content during
updated the method to encode the witness address and added a null check for the account to enhance security by ensuring that the address is properly encoded and
updated DefaultMethodRegressionTests to improve test coverage to enhance reliability of method regression tests
updated WorkloadManagerMxBean . java for improved functionality to enhance performance and maintainability of the code
updated KafkaProducerException import to KafkaException in KafkaOutboundAdapterParserTests . java to align with the latest Kafka library changes and improve error handling
added a call to close the container loader to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and multiple test cases for exception handling in FaultTolerantExceptionClassesTests to improve
[ beam - 8470 ] [ beam - 8470 ] add beamjobcoordinatorrunner , beamcontainerrunner and beamapplicationrunner to the
updated the applyTunerConfigs method to include an additional Map < String , String > parameter across multiple tuner classes to enhance flexibility by
added logic to track and add in - progress segment names in the PinotRealtimeSegmentsManager to ensure only active segments are added to the
added a check for the touchable state in the table to prevent further operations when the touchable is disabled
added a test for building using precompiled headers in other cells to ensure compatibility and correctness of precompiled header handling in the build process
throw a retryable exception if cache config do not exist
refactor module installation logic to use a dedicated method for checking node package installation to improve code readability and maintainability by centralizing the installation
added ` @ ManagedObject ` and ` @ ManagedOperation ` annotations to ` MBeanContainer ` and ` Destroyable ` classes to indicate that the component
change conditional statement from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in LongClickableSpan . java
replaced ` . equals ( ) ` with ` . equals ( ) ` for string comparisons in ` EspMilightHubDiscoveryService
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety
added position set information to / / print to / / worldeditlistener .
( chore ) camel - kafka : properly shutdown kafka consumer thread pool
removed default implementation of the examples ( ) method in Schema . java to simplify the interface by eliminating unnecessary methods
modified thread termination logic and added break statements in AgentRunner . java to improve control flow and ensure proper termination of the agent execution
remove time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure data integrity by removing outdated dimensions and results
removed unnecessary ' & ' operator from shard condition in FacetComponent . java to streamline the condition for better readability and maintainability
replaced linker retrieval with direct calls to CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibrary
added the ` name ` property with getter and setter methods in ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` Ntl
improve error message if unable to connect to the IGV
refactor scan handling in BaseQueryPlan and introduce smallScanThreshold in QueryServices to improve code readability and maintainability by centralizing
added ` routeId ` to the ` toStringCreator ` method in ` RetryGatewayFilterFactory ` to provide more context for retry configurations in the
replaced calls to ` buf . write ( lastBinding ( ) ) ` with ` callWidget ( name ) ` and modified the way the
replaced multiple calls to ` onOverviewShown ` with a single method ` showForOverviewIfNeeded ` in ` ActivityControlHelper ` and `
refactor conditional checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a test for deleting all
updated the publish method to use updateLastState instead of true to ensure that the last state updates correctly
updated SQL query syntax by adding double quotes around STRING _ LIST _ ID to ensure proper syntax and prevent potential SQL injection vulnerabilities
removed a call to ` exp . add ( 0 , null ) ` in ` SpliteratorCollisions . java ` to eliminate unnecessary addition of
danielwagnerhall : add text case sensitivity support to condition . text ( )
replaced multiple ` do ` loops with a ` while ( true ) ` loop in ` ManyToManyConcurrentArrayQueue . java ` to improve
# 113 - fix for m2 . setfetchsize ( ) for non - transactional database
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to ensure proper channel closure and avoid sending a 404 response to the client
pdfbox - 4892 : allocate arraylist size , a suggest by valerybokov
updated window radius initialization to use rounded corners support to enhance compatibility with devices that support window rounding
refactor DesktopTaskView to use a View for background and icon views instead of ShapeDrawable to improve flexibility and maintainability of the
added a new instance of UpstreamCheckService and refactored properties initialization in UpstreamCheckServiceTest to improve code organization and ensure proper
modified logging behavior in AbstractSession and AbstractSessionManager to use debug level instead of warn to improve logging granularity for session management
updated ZooKeeperHiveLockManager to return locks instead of throwing an exception to simplify error handling and improve code clarity
[ hotfix ] [ core ] fix checkstyle violation in core class
added a boolean flag ` containsCustomData ` to control the presence of custom data before generating the mipmap to ensure mipmap generation
replace double quotes with single quotes in assertions in DefaultMaskingFormatterTest . java to ensure consistency in string representations during testing
added selectable functionality to the List class to control selection behavior when the list is not selectable
removed a condition that checks if the first field ' s value count is zero in LlapArrowBatchRecordReader . java to simplify the logic
updated PolicyContext to handle file separator expansion and improved print statements to enhance file path handling and provide clearer debugging information
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance and simplify data structure usage
refactor TLSRestrictions class to improve code readability to enhance maintainability and facilitate future development
http : / / issues . apache . org / jira / browse / amq - 4358 - use daemon task to wait for
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance the functionality of the node state provider by allowing
added a check to delete the " LOCK " file if it exists in the workspace to ensure proper resource management and prevent potential memory leaks
hbase - 2392 upgrade to zookeeper 3.3 . 0
restclient . getresponse ( url , gson , httpconnection ) now log the url and throw a webservicesystemexception
updated the method to convert segmentTarURIs array to an array from segmentTarURIStrs to improve code readability and maintainability by using
updated loginStudent method calls to use a password from TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _
added a null check for ` mCurrentItem . getItemId ( ) ` in EnhancedBrowseFragment . java and StdBrowseFragment . java to
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to optimize performance by reducing the number of string operations
replaced the custom ByteArrayInStream class with a static initialization and removed the hexToBytes method from WKBAttributeIO . java to simplify the
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a check to return early if a transition is a direct substate to optimize performance by avoiding unnecessary transitions
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality
added ` joinOperation ` interface to the ` PostJoinOperation ` class to support additional join operations in the application
added a new test method ` testDataIssue258 ` to the ` AdditionalPostgreSQLTest ` class to validate the execution of a database
http : / / issues . apache . org / jira / browse / amq - 5035 - make test more resilient
avaticadatabasemetadata : fix typo find by codespell on fossies . org
changed data types of ` lifeTime ` , ` idleTime ` , and ` maxWaitTime ` from integers to strings in ` MongoDbConnection
fix a classcastexception in sdputils . createaudiomediapformat ( ) which be throw by sipactivator .
refactor methods in FacetProcessor to return boolean values indicating filter application status to improve code readability and control over filter application behavior
added an enabledTimeout property and modified timeout handler logic in ShuffleHandler . java to enable or disable timeout handling based on the enabled state of
replaced hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability
camel - 16400 : camel - xpath - add more log for evaluate a string / string for exchange
improve javadocs and fix a typo
[ bug - 1751 ] add test case for escape back slash in filename
added a check for the presence of the ' atlas ' property in the map properties before processing to ensure that the required ' atlas ' property is
camel - 16400 : camel - core - remove propertyplaceholderhelper because it be not use any more
added a call to close the database in BlockchainTest . java and removed unused receive listener code from KafkaTest . java to streamline database
refactor code to utilize a separate method for splitting strings into lists instead of an array to improve code readability and maintainability by redu
int - 1951 , int - 1981 clean up the test and change the template . mf to reflect the low version of spring - ws to be 2.0 . 0
replace ImmutableList . Builder with List for better flexibility in handling SQL bindings to improve code readability and maintainability by using standard Java collections
added a check for the " OpenJDK " JVM name in addition to the existing Apple / JRockit vendor detection to ensure
added keepAlive ( true ) to the base URL configuration in ReactorClient . java to ensure that the base URL connection is committed to the server
updated VertexAttribute references to use ShaderProgram constants instead of string literals in MD5Renderer and ObjLoader to improve code readability and maintain
camel - 14263 : camel - core - optimize to avoid unnecessary lookup of component in registry
modified the condition for retrieving an account from the database to ensure account existence is validated before proceeding
update version number of the 3.8 . 0 to 3.8 . 1 to reflect the new alpha status of the server .
refactor return statements to use unannotatedType ( ) method for better clarity to improve code readability and maintainability by standardizing
updated assertions for ` workSequenceTsFileProcessors ` and ` flushManager ` in ` StorageGroupProcessorTest . java ` to ensure correct processing
updated class loading paths from " org . eclipse . jetty . jaas . * " to " org . eclipse . jetty
added a parameter ` waitBeforeStart ` with a value of 2500 to control the delay before starting the video processing
removed the ` skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor and related methods across multiple classes to simplify the constructor
test : move accessorstest to a separate module to avoid conflict with junit 4
add a method to compile a method that do n ' t need a structure graph .
updated test imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use conditional tests to ensure tests are
fix boat not be able to place block on water . close # 2271
modified the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the method allowExperimentalOptions and simplified the conditional check for experimental options to simplify the code and improve readability by eliminating unnecessary
added new utility methods for asserting paths and assertions in BDDAssertions . java to enhance the flexibility and usability of assertion methods
rename variable ` hp ` to ` hostField ` for clarity and update related code accordingly to improve code readability and maintainability by using
updated logging messages to use a warning level for missing Kubernetes configuration files to provide clearer guidance and guidance when the configuration file is not
added upload status handling in FileUploadService and UploadListActivity to manage file uploads more effectively to improve user experience by providing feedback during file uploads
added a new ` ProviderLoader ` and ` ProviderLoaderListener ` classes , and modified ` TerminalManager ` to utilize it to improve provider
replaced references to ` Span ` with direct references from ` TraceMessageHeaders ` in the ` StreamEnvironmentPostProcessor ` and its tests to
updated SelectFromDatabaseChangeLogStatement to use a ColumnConfig with computed flag to simplify database column selection for better readability and maintainability
hhh - 14709 fix schema update for postgresql and hibernate
fix bug in partition count calculation when data member size be zero .
added error handling and scheduler state checks in ` ExecutionSchedulerManager ` and ` ExecutionSchedulerImpl ` to ensure proper handling of scheduler state and improve
refactor InlineBox initialization and simplify conditional checks in BoxBuilder . java to improve code readability and maintainability
refactor argument validation in StatisticMap to use concatenation syntax to improve readability and maintainability of error messages
updated the return value of getStagedRectSlideEnd ( ) from 383 to 500 to adjust the slide duration for better functionality
updated button labels and command table labels in WaveInfoDialog and PlacementFragment to use user - defined bundles instead of hardcoded strings to improve localization
updated condition in BukkitMain to check for owned plot abs instead of plot abs to ensure road items are killed only when they are
added touch exploration functionality and test for KITKAT and updated listener handling in ShadowAccessibilityManager to improve touch exploration functionality and
pdfbox - 5328 : avoid indexoutofboundsexception , add test
remove usage of deprecated testelement . getpropertyasstring ( )
replace all instances of NPOIFSFileSystem with POIFSFileSystem . create in TestNPOIFSFileSystem . java to improve code
added plot area handling and updated plot absolute value retrieval in Move . java to ensure correct plot positioning based on the provided arguments
updated version validation pattern from " 0.9 " to " 0.9 + " in TestWebHCatE2e . java to
updated the range check for ` count ` from ` 0 ` to ` 1 ` in ` Filters . java ` to ensure that ` count `
add client - id to kafka consumer config ( # 3640 )
updated import statements and added error handling in JavacCompiler . java to improve error reporting for javac execution failures
ggb - 220 do n ' t update the view when the select item be change .
camel - spring - batch : fix checkstyle issue in camel - spring - batch
added a method ` isAnimationFinished ` to check if an animation has finished based on its state time and frame duration to improve animation handling by
added a test for custom navigation icon with line breaks in LoginMockMvcTests . java to ensure proper handling of line breaks in the custom navigation
added null check for otherUrl in TimeLineCursorAdapter and modified the refreshing text in HomeFragment to enhance robustness by preventing potential
bug fix : space * be not replace when click on a text field .
refactor ObjectHashSet to improve performance and readability to enhance performance and maintainability of the code
refactor null checks in DataUtilities for improved readability and efficiency to enhance code clarity and maintainability by simplifying null checks and
fix compare nbt data , allow for delete of enchanted books ( mc - 12770 )
( chore ) camel - helidon - microprofile - server : add test case for async get and put operation
rename TARGET _ FLAT _ HEADER _ MAP _ SUFFIX to TARGET _ USER _ HEADER _ MAP _ SUFFIX and update related references to
added email sending functionality and improved error handling in MailService . java to enhance message logging and provide detailed error information during email sending
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce a constant ` EMPTY _ LABEL ` to improve clarity
added multiple test cases for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct
added a closing brace to the FileListListAdapter . java file to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter
adjusted the index used in the removeViewInLayout method from 1 to 2 to correct the positioning of the view in the layout
removed unnecessary internal package declarations from WebSocket configuration classes to streamline the configuration by eliminating unnecessary dependencies
updated the S3Request constructor to set the ' policy ' parameter to false instead of true to align with the intended behavior of the S3
fix issue with jfxradiobutton animate not call when timeline be null .
updated condition for parsing splits in DeweyNumber . java and added exception handling in DeweyNumberTest . java to improve error handling
updated the handling of categorySet by creating a new string and modifying its format to improve the readability and usability of the category string output
changed the expected error message from " Invalid close control status code 1111 " to " Invalid close code 1111 " in WebSocketClientTest .
added null check for classLoader in WebappLoader and updated expected length in TestVirtualWebappLoader to ensure robustness by preventing null pointer
removed duplicate code for handling mapped superclass class in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the functionality of the ` PorterStemFilter ` to ensure that the
add success parameter to postbatchmutate in dispensably to avoid write index update if the mutation successfully write
change package name from ` org . springframework . core . exlore . support ` to ` org . springframework . batch . core
fix a concurrentmodificationexception in chatwindowmanager . close ( ) .
removed unnecessary call to ` Sys . touch ( ) ` across multiple files to streamline code by eliminating redundancy across multiple files
added " - mardu " to the UNTRACKED _ FILES _ COMMAND and modified untrackedFiles method implementations across multiple interfaces
camel - 14263 : fix thread safety issue with timer in camel - netty
replaced instance variables in DirectionalLight , PointLight , and SpotLight with final fields and added a range parameter to indicate that the pl
replace target dimensions with local variables for width and height in X11GraphicsConfig and WGLGraphicsConfig to ensure dimensions are at least 1 to
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a consistent string representation
added support for annotation handling in ClassFinder by introducing AnnoFilterTreeSet and modifying related methods to improve filtering of annotated classes and enhance
modify the calculation of newLength in BytesColumnVector . java to handle edge cases and ensure newLength does not exceed Integer . MAX _ VALUE
updated assertions in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually with a loop to ensure that the map store
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI `
add function . isEqual ( ) to compare polynomials
added null check for the table before retrieving column class to prevent potential NullPointerExceptions when accessing column class
added a try - catch block when instantiating a CustomChange class to handle potential ClassCastException when loading classes
refactor DistBuildConfig to replace ConfigPathGetter with BuckConfig and introduce a new DistBuildConfig instance to streamline configuration management
fix ` ` ofx ' ' and ` ` qif ' ' button in export dialog
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to issues related to track down
modified the return type of ` doJoin ` methods in ` JoinTemplate ` , ` JoinWorker ` , and ` MergeJoinBatch ` to
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the interface by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to the intent flags in LauncherTimelineCursorAdapter . java to ensure that the activity is
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide functionality for checking paging orders in
updated assertions in RepositoryConventionPluginTests to check for the correct repository URL to ensure the correct repository URL is asserted for the latest changes
of - 2650 : add node affiliate to cluster .
handle invalid uris in TagLibraryInfoImpl . java to improve robustness and error handling for invalid URIs
change access modifier of buildUserProfileByClassCompleteName method from private to public to allow access to the method from other classes
added support for updating cache keys from arrays in CacheKey . java and improved test cases in CacheKeyTest . java to enhance functionality and
replaced ` new GnomeFileTypeDetector ( ) ` with ` new UnixFileSystemProvider ( ) ` for better file type detection across multiple
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
replaced the ` ShadowVirtualDeviceParams ` class with a new interface for managing ` VirtualSensorCallback ` and ` VirtualSensorDirectChannelCallback
added a condition to check if the context is not removed from the session before execution to ensure that the session context is not removed from the session
updated loopback address handling in NetUtil . java to improve clarity and functionality to ensure correct retrieval of loopback and link - local addresses based on
replaced BUF _ SIZE with DEFAULT _ BUF _ SIZE and modified buffer initialization logic to improve code clarity and ensure proper handling of
added secure validation and improved exception handling in KeyInfoReferenceResolver , TransformXPath , and ResolverLocalFilesystem to enhance security by enforcing secure
added a boolean flag to track if the icon change listener is already installed to ensure that the icon change listener is only added when the icon change
added support for the Russian language in the Language . java file to enhance localization support for Russian users
hhh - 14686 fix duration unit conversion to nanosecond instead of second
disable frame state verification when create a new graph
added system property resetings in RobolectricTestRunnerTest and implemented a teardown method in TestUtil to reset SDK settings after tests to
added support for loading the " org . slf4j . " system class in ViewClassLoader and its corresponding test in ViewClassLoaderTest to
update ChangePackaging to handle " jar " packaging condition and add a new test for removing the default packaging to ensure proper handling of
fix flaky test : filedownloadViahttpgettest and filedownloadviaproxytest
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer before
updated units handling in JogService and Settings classes to use preferredUnits instead of defaultUnits to improve clarity and maintainability of unit selection
updated date formatting in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different environments
reformatted return statements in Terminator . java to improve code readability and maintainability
improve error message when a HDFS namenode host path be null or an invalid uri .
use jabrefexecutorservice . submit ( ) instead of executorservice . schedule ( )
( chore ) camel - ftp : replace thread . sleep with awaitility in test
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to optimize performance by using a more
added ` log . ignore ( Throwable ignored ) ` to multiple log classes to suppress warnings related to ignored errors during logging operations
added a null check for runningTaskView before proceeding to avoid potential NullPointerExceptions when accessing runningTaskView
removed unnecessary type casting for damage objects in BukkitWorld . java to simplify code by eliminating unnecessary type casting
removed the call to cleanImage in the PanelManager class to streamline image handling by eliminating unnecessary processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing map and unmap settings to enhance directory management capabilities within Solr for improved
added null check for the ' ic ' parameter when creating a ' cleanUpColor ' instance of ' PdfCleanUpProcessor ' to avoid potential NullPointerException
updated the expected output in the assertQueryEquals function from " field1 " to " field1 _ s " to correct the assertion to reflect
updated ExtendedOperatingSystemMXBeanImpl . java to enhance performance monitoring capabilities
added functionality to install left commands in the SideMenuBar to enhance user interface by allowing dynamic command addition based on client property
added a new boolean variable ` advanceWindowed ` and conditional calls to ` TweetActivity ` and ` UserProfileActivity ` to control window
added support for SybaseDatabase in the DropPrimaryKeyGenerator logic to ensure compatibility with Sybase database operations
refactor Client class to improve code structure to enhance maintainability and readability of the code
[ java ] do n ' t send position to leader until leader be ready .
replaced invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and added shouldDelayChildPressed
fix possible deadlock in nearcachedclientmapproxy . getclient ( )
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a shutdownHttpServer method to handle server shutdown exceptions to ensure graceful shutdown of the HTTP server without causing application crashes
camel - 15836 - camel - aws2 - s3 : move stream multipart upload to service - aws sdk v2 , regen
[ hotfix ] [ runtime ] remove hard - coded parameter _ tm _ id
bug 10227 : fix 228 to 229 upgrade - drop non - existing key in 228 to 229 upgrade
added a new test class ` TestThriftCLIServiceSecurity ` and modified the ` TOpenSessionReq ` class to include a password check to
added maxEnergyLimit variable and updated energy limit assignment logic in VMActuator . java to ensure energy fee limits are accurately applied based
added maxInMemorySize property and its getter / setter methods to HttpClientProperties to allow configuration of the maximum in - memory size for HTTP client
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
added new test classes for Cucumber and StepDefinitions in the io . cucumber . java package to enable testing of Cucumber
added error handling for parsing double values in TypeJsonUtils and corresponding test cases in TestArrayOperators to improve robustness and ensure correct handling of
removed redundant hex string conversion calls in Utf8StringBuilderTest . java to streamline the code by eliminating unnecessary duplication
added parameter validation and encoded parameter values in mmm Params . java and ppp RestInvocationHandlerTest . java to ensure parameters are only appended
camel - 10399 : circuit breaker load - balancing : limit the number of output to one for load balancer type to ensure that
updated the max buffered document frequency assertion in TestIndexWriterExceptions . java to ensure proper handling of document frequency limits
refactor hash code generation from ` String ` to ` Sha1HashCode ` across multiple files to improve performance and reduce memory usage by util
removed enumValue , intValue , and longValue methods from AsmRuntime . java to streamline code by eliminating unused enum - related methods
add new biome tag to the biome tagspacer to make it easy to understand
improve asyncimageloader performance by use a pool of 4 thread instead of a single thread
changed access modifiers of several fields and methods in BaseTableUpsertMetadataManager from private to protected to allow subclasses to access these fields and methods for
replaced occurrences of " \ u0646 \ u0648 " with " \ u064a \ u064a "
replaced ` equals ( ) ` method with ` hasImageEqualTo ( ) ` method in ` AbstractSunSecureRule . java ` to
camel - jbang - add -- repos option to camel - jbang run command . thanks to benjamin for the patch
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
added a cleanup method to delete temporary files after tests to ensure proper resource management and prevent test failures
updated focus handling in FilterConditionEditor and added window focus listener in FindAction to improve user experience by ensuring input field reflects the focus state
[ hotfix ] [ runtime ] implement autocloseableasync for checkpointscleaner
added a new file XPathWhiteSpaceTest . java that tests XML schema parsing to ensure proper handling of whitespace in a specified XSD file
bonsai : do not override the trie log layer when there be a rollback .
updated FilledNewArrayInstruction . java file to improve code clarity and maintainability
simplify simplenetworktest by add timeouts
modified the return statement to check if the parent path ends with a slash instead of using substring to improve clarity and correctness in path handling
added a failure message to display a failure message when loading the skin file fails to improve debugging visibility during skin file loading failures
lgo : fix lgo level 2 update with no data
added a new constant ` UNDEFINED ` in the ` Result ` class and updated the ` TestStep ` to use it to improve code clarity
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of null values in callback registrations
refactor UploadJobMultiPartOperation to extend Operation instead of AsyncJobOperation and add checkJetIsEnabled method to improve thread safety and
[ 3.0 ] recover data from the journal in case of an exception .
[ fix ] verticalnodeviewlayoutstrategy do n ' t ignore child node when create summarylevel
removed the volatile keyword from the ` pos ` variable and added a ` sizeMask ` variable in the ` ensureAvail ` method to improve
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark these tests as ignored due to issue
modify the handling of targets in StorageProxy . java to use subList for improved clarity to enhance code readability and maintainability by using
updated the declaration of the ` bufferedIo ` , ` lazyCreate ` , and ` advertiseUri ` variables in ` FileManager . java `
updated transform function types to include specific casing for " plus " , " minus " , " log " , " power " , and
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement and updated package - info . java files to enhance method clarity and
updated RFC3280 to RFC5280 in multiple CRL - related Java files to ensure consistency in RFC standards across the codebase
fix : fix classcastexception in searchannotationvisitor .
replaced ` HashMap ` with ` SparseBooleanArray ` for selected items and modified memory cache initialization in ` ListActivity ` to improve performance and
refactor ` else if ` statements to ` if ` statements in ` DirectUpdateHandler2 . java ` to improve code readability and maintain
update ConfigFileApplicationListener to use ResourceUtils for URL handling and add a test for absolute resource defaults to improve resource handling and ensure correct file location
modified the instantiation of PreviewPositionHelper to accept a Context parameter and updated its usage in TaskViewSimulator and TaskThumbnailView to improve flex
[ java ] consolidate the logic for publish new leadership term into a single call .
updated assertions in PMDCoverageTest to use StandardErrorStreamLog for better clarity to improve test reliability by using assertEquals instead of
refactor ByteArrayInputStream logic and introduce a new Skip class for skipping bytes to improve data handling and provide a mechanism for skipping bytes in a stream
removed unnecessary conditional check for promptUpdate in UpdaterTask . java to streamline code logic for better readability and maintainability
changed the access modifier of MAX _ HEADERS from final static to public and added a condition to blockChainDownload based on the size of block
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to support the use of a new library
refactor connection handling in AbstractHandshakeHandler to streamline frame validation to improve clarity and maintainability of the handshake process
[ geos - 8470 ] raster layer now support heterogeneous property ( e . g . heterogeneous = true )
added a check for committed responses before sending error 500s in HttpChannel . java to ensure that an error is only sent when the response is
updated conditions for checking ` hold ` , ` connectionQueue ` , and ` lastPoll ` in ` HttpSession . java ` to improve code cl
updated the fade - out behavior of ` fadeOutFakeTaskView ` and added new gesture navigation tutorial features in ` SwipeUpG
change log level to warn in case of unknown prefab
removed redundant initialization of ScimGroupExternalMembershipManager and refactored group creation logic to streamline group management and improve code clarity
updated the initialization of thirtyDays in FreezeBalanceActuator and added a validation check for the transfer amount in TransferActuator to ensure
updated the path separator in FileResolverTestBase . java from a forward slash to the platform - specific separator to ensure compatibility with different operating systems
ggb - 220 do n ' t focus tree item if there ' s an error
updated GpsMainActivity to retrieve session description instead of an empty string and refactored AnnotationViewFragment to use EventBus for command events
update JsoupNonVisualRegressionTest to handle cases where the number of pages does not match the expected number of documents to ensure the
* introduce androidnativibufferallocator which allow to use native bufferallocator .
added support for flags starting with a " ! " in their names and modified flag checking logic to ensure proper handling of flag names and improve flag
add nopmd ( we do n ' t need to do anything )
change string comparison from ` . equals ( ) ` to ` = = ` in ` BattlePassManager . java ` to improve read
http : / / issues . apache . org / jira / browse / amq - 4748 - make test more informative and
cloudstack - 5892 : remove dependency on account in unit test
added a null check for the command and updated the conditional check for OPTIONS . HELP in the Main . java file to ensure help functionality is
reduced the number of LightOutputStream instances from 7 to 4 in multiple classes to optimize memory usage during output stream operations
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and modified conditional logic in ` ClassWriter . java ` , and created a new class ` T8032
added assertion to verify the length of the sn field in the Person class to ensure that the integrity of the sn field is validated correctly
refactor file extension check to handle null values gracefully to improve robustness by preventing potential NullPointerExceptions
replace ` return ; ` with ` continue ; ` in ` ContactRightButtonMenu . java ` to improve control flow by controlling the flow
[ hotfix ] [ runtime ] fix potential race condition in simpleslot and slotsharinggroupassignment
simplified the calculation of the screen index in the InstallShortcutReceiver class to improve code readability and maintainability by eliminating unnecessary
refactor the binding and handling of PlainSocketImpl to use a delegate instance for better clarity to improve code readability and maintainability by
added functionality to manage and clear removed media items in the MediaDetailPagerFragment and BookmarkListRootFragment to improve user experience by managing removed
updated log message to reference the element ' s in - view center point instead of the center of the element to improve clarity and accuracy of
added a new file ` bug4865918 . java ` to implement a GUI test for the ` bug4865918 ` to
replaced the usage of ` VelocityEngine ` with direct usage of ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify
replaced specific imports with a wildcard import and added a case for " grouptriggers " to streamline import statements and enhance command handling for
fix crash when try to open file manager in account list
added Lombok ' s ToString annotation to PartitionChangeEvent and tbApplicationEvent classes to provide a clearer string representation of the class for debugging
replaced a hardcoded description _ uri string with a constant from CloudService . CONFIG _ URI to improve maintainability and readability of the
removed viewport component and JScrollPane settings from the BrowserPanel to streamline the code by eliminating unnecessary scroll functionality
added KEYCODE _ FORWARD _ DEL and modified key handling in LwjglInput , ParticleEditor , Layout , and TW
added a conditional check for ` indexMimeTypeParts ` before retrieving content types in ` MoreIndexingFilter ` to ensure that mime type parts are only
added a pattern to identify and filter author comments from the comment text in JSDoc . java to improve code clarity and ensure only relevant comments
replaced DELTA _ TOTAL _ TABLES and DELTA _ TOTAL _ PARTITIONS constants with CREATE _ TOTAL
updated HiveDatabaseSchema and HiveSchemaFactory to incorporate DrillHiveMetaStoreClient and SchemaConfig to enhance schema management and
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to improve
updated calendar name from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar
updated the supported condition in WebAudioWrapper to exclude Firefox to ensure compatibility with browsers that do not support firefox
added a method to append a gRPC server interceptor in GrpcServerBuilder . java and removed an unused private constructor in InterceptorConstants . java to
added support for " DEFAULT " option in the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with the latest database schema changes
removed unnecessary condition checks in StreamingAggTemplate . java and simplified output handling in WriterRecordBatch . java to improve code readability and maintainability
[ hotfix ] [ runtime ] replace allocationtimeout with timeout in executiongraph
added a ` hasFrom ` boolean property and related methods in ` Delete ` , ` DeleteDeParser ` , and ` DeleteTest ` to
replaced success status checks with multi - status checks and improved error handling in SynchronizeFolderOperation . java to enhance code clarity and
refactor the logic for determining applicable tests in RecipeScheduler to use a new utility method to improve code readability and maintainability by central
updated regex pattern in LogAnalyser . java to include a wildcard to improve accuracy in matching date and time formats
camel - 16400 : camel - aws2 - cloud - integration - add support for google cloud
fixed - rsearch . value ( ) method do n ' t take exclusive and min / max parameter into account . # 3370
pdfbox - 4892 : fix classcastexception in cclicensestep , a suggest by valerybokov
do n ' t try to store the id of the ifcroot in the guid index if it ' s null
replace ` actual . equals ( value ) ` with ` objects . comparisonStrategy . areEqual ( ) ` in ` OptionalAssert . java `
refactor memory settings in NoNewLineParagraphCssApplier and ParagraphCssApplier to introduce a boolean flag and conditionally set the last
added a new file TestArrayCopyToFromObject . java with a test method for validating array copying to ensure that ArrayStoreException is thrown when destination
replaced string literals with Python string literals in BuckPythonProgram . java to improve clarity and consistency in Python path handling
fix regression in connector . close ( ) for apr and nio protocol .
deprecate findfiles ( modcontainer , path , boolean visitallfiles ) and make it a deprecate .
added JUnit Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test due to unstable scenarios
modified the error handling in the client request assertion to check for null exceptions before asserting the response 400
refactor autoloadCall method to include a lowerName parameter and manage locks more effectively to improve resource management and prevent multiple loading attempts for the same
added server version comparison logic in CustomPlaybackOverlayFragment and checked for HLS support in PlaybackController to improve server version handling and provide better
updated localhost path handling in KDC and OneKDC classes to ensure consistent usage of " localhost " for server and backend configurations
updated the Jsr250Voter to handle a boolean for the presence of a ` jsr250Attribute ` and modified the return logic to
update import statements in MP4Parser . java to include specific classes including ` com . util ` and ` com . googlecode . mp4
added HS2 _ PROXY _ USER constant and modified sessionParams handling in ConnectionFactory . java to include the user name in session parameters to
camel - 14850 - camel - core - optimize snappy and bzip2 compression . thanks to jesus camacho
added a 1 - second delay in HttpClientTest . java to introduce a delay for better synchronization during testing
bug 59966 : fix bug # 49966 - remove xssfcell from multi - cell array formula
updated glyph position calculation in GlyphLayout . java and modified buffer appending logic in BitmapFontTest . java to improve text rendering accuracy and clar
removed hardcoded ISTIO _ BIN _ PATH and replaced its usage with instance variable references in Fabric8IstioIT . java to
replaced direct calls to ` ReportPlaybackStartAsync ` with ` reportPlaybackStart ` and ` reportPlaybackProgress ` using ` TvApp
fix potential memory leak in simpleauthority
fix map loader hitting eviction on initial load
change bitwise operation from AND to OR in ResponseFlag . java to correct bitwise operation for ERROR _ BIT handling
add read policy check to fix default policy check on the community .
added a SoftReference and ConcurrentHashMap for managing CompositeFont instances to improve memory management and performance when managing font objects
simplified the calculation of prefHeight by removing unnecessary method calls to improve code readability and maintainability
drools - 5395 dmn feel validation should provide good error message if unknown variable error
removed unused import statements across multiple Java files to improve code cleanliness and reduce unnecessary dependencies
changed method visibility of ` finishRunningRecentsAnimation ` from private to public and updated its usage in ` NavHandleLongPressInputConsumer
added null checks for node ID and improved edge type handling in the ImportContainerImpl class to enhance robustness by preventing NullPointerExceptions and
fix npe in fncontrol and beamfnstategrpc when responsefuture be null
nifi - 1181 : fix bug in binfiles when create a flowfile that be larger than the bin limit .
modified the logic for retrieving the closest CoreBuild by replacing geometry . findClosest with a manual approach using dst2 calculation to improve accuracy in
added logic to skip content length in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to optimize request processing by
updated Java2TypeScriptTranslator and modified SyntaxTests to use eval for translation and refactored main method in Literals to improve code clarity
updated filter calculations and sample sizes in multiple Java files to improve layout consistency and adapt to new sample rates
hbase - 25827 canary should be able to run all region on a regionserver ( chunhui )
removed node module dependency from CassandraConnectorFactory and modified ImmutableMap initialization in TestCassandraConnector to streamline code by eliminating unnecessary dependencies
added a call to resetCursorPosition on the order index in KahaDBStore . java to ensure the cursor position is reset before processing
increase the minimum size of the frame in call dialog and ensure new frame dimensions do not exceed the defined minimum size
fixed vanilla bug where state information be lose during world generation .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static fields and improve test setup to enhance performance and maintainability of the test
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic in KerberosPrincipalDAO to improve resource management and ensure proper removal of
removed the ' true ' argument from the getTableSnapshot method call in StatsOptimizer . java to simplify the method call by eliminating unnecessary parameters
let the apr do n ' t swallow exception in poll ( ) .
update error message for android . licensekey to include monetization setup section and paste base64 - encoded rsa public key into the android .
updated the display name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java ` and removed unnecessary
[ drools - 7 ] fix package name resolution for executable model in kie - maven - plugin ( # 3640 )
added an assumption to skip tests based on the runtime version to ensure compatibility with Java 19 and above
modified the ` assignTargetsForSplitScreen ` method to accept ` RemoteAnimationTargets ` directly instead of passing a context parameter to simplify the method
refactor LeaderLatch class to improve code readability to enhance maintainability and facilitate future updates
added methods to initialize zk - SNARK parameters in the SolidityNodeHttpApiService class to ensure proper initialization of zk - SNARK
do n ' t set the depth in the transaction confidencetransaction if it ' s building
refactor location variable names to improve clarity and consistency to enhance code readability and maintainability by standardizing variable naming conventions
set default value of platformName to " ios " to ensure platformName defaults to " ios " for better compatibility
chore : integrate new gapic - generator - java and rules _ gapic ( # 49 )
added braces to conditional statements for better readability in Graphics2D . java to improve code clarity and maintainability
renamed the class CreateVisibleSignature to improve clarity to enhance code readability and maintainability
added error handling to ` nextOutgoingFrame ` method in ` AbstractExtension . java ` to improve robustness by logging exceptions and ensuring callback is
replaced direct call to ` new Caller ( ) ` with ` AccessController . doPrivileged ( ) ` in ` ContextHandler . java ` to improve
added logic to reset parent entries for child categories in the CategoryREST class to ensure that non - child categories are preserved during the update process
added conditional logic to dynamically set the title based on the contributions type to improve localization support for contributions in the user interface
added a BigDecimal ` vwap ` to the ` Ticker ` constructor and its getter / setter methods to enhance the ` Ticker `
added a new TextView for no widgets and updated bottom inset handling in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes
added rendergraphapi to facilitate the creation of gdoc node .
set the color of the messaging service to the primary color to improve the visual appearance of the messaging service
refactor ShadowUsbManagerTest class for improved readability to enhance maintainability and clarity of test code
updated calculations in AbstractDifferenceRecommenderEvaluator and added logging statements in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to improve accuracy
added a call to update the selected configuration in the Rocket class to ensure the configuration updates correctly after changes
update bounds calculations in AndroidGraphics to ensure that width and height are at least 1 to prevent potential issues with invalid bitmap dimensions
pdfbox - 2576 : use linkedhashmap instead of hashmap , a suggest by valerybokov
replaced the native closure manager with a closure pool in NativeClosureFactory . java to improve closure management by utilizing a dedicated closure pool
( chore ) camel - route : migrate route main test to junit5
added new classes WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java to implement an integration test for WebSocket ingures to
( chore ) camel - dspace : fix typo and remove unused test
refactor authentication equality check by introducing a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability
add jnr . ffi . compile . x86asm property to disable x86 code generation
refactor code to use a local variable ` callNodeType ` for clarity to improve readability and maintainability of the code
added a new annotation ` Insecure ` to the ` org . msgpack . core . annotations ` package and modified the ` MessageBuffer ` class
added new configuration variables for various Hive components in HiveConf . java to enhance the flexibility and configuration options for Hive operations
initialize scopes and policies as HashSet instances in ResourceSet . java and check for null in DefaultResourceSetService . java to ensure that scopes and
changed the ` decrefOnClose ` variable to ` final ` and modified the constructor of ` MultiReader ` to improve immutability and
refactor multiple asynchronous socket channel implementations to improve code organization to enhance maintainability and readability of the codebase
simonstewart : fix the test that be break in 2.49 http : / / bit . ly / 1JKt4
added a method to retrieve the first type argument for both EntrySet and KeySet classes to improve type argument handling and enforce immutability of
change return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Collection < Integer > to improve type
added a duration parameter to the FlipTransition constructor and updated associated methods to allow dynamic adjustment of the transition duration instead of a background color
removed logging statement for subsAreValidForStreaming in DLNAResource . java to streamline the condition for setting subsAreValidForStreaming
bump version to 9.10 . fix release note .
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for logging warnings related to ` sun . reflect .
update javaparser to support java 16
modify padding logic for the background view based on the index of replies to improve visual spacing and alignment of the status view
fix partition backup replica anti - entropy task to work with v3.9 .
added metadata handling in SeedUrl and SeedResource classes to enable retrieval and storage of additional seed metadata information
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 548 . fix
[ hotfix ] [ test ] fix typo in testcoprocessorwhitelistmasterobserver
ww - 4496 add package name to annotation action config name if available
updated assertions in IterableTest to cast null arguments to Object arrays and added a new test for null checks to ensure correct handling of null values in
added default stream ( ) and parallelStream ( ) methods to MapIterable , PrimitiveObjectMap , and a corresponding test in MapIterableTestCase
modify return statement to return a cloned version of notifInfo to ensure that the original notifInfo remains unmodified during modifications
make sure we do n ' t have duplicate command key in the list
refactor AEADBlockCipher class to improve code organization to enhance maintainability and readability of the code
add isvariablelocal ( ) method to check if a variable exist in the map .
added a null check for the resource ID in PackageResourceTable . java and updated the default ResourcesMode in RobolectricTestRunner .
added a conditional check for ` ulSize ` and ` ulPos ` before retrieving ` head _ Table ` and ` post _ Table ` buffers
refactor SignPlugin to accept a list of HttpMessageReader as a parameter to enhance flexibility in configuring message readers for better request handling
refactor Int2ObjectCache . java for improved performance to enhance efficiency in object caching operations
added validation check for MavenDeployer in StandardMavenAuthenticationProvider to ensure that the remote repository is valid before proceeding with further operations
refactor AudioNode class methods for better performance to improve audio processing efficiency and maintainability
added SSL context setup and updated cookie management in EnedisHttpApi . java to enhance SSL security and improve error handling during connection attempts
added imports and refactored methods in HiveFunctionRegistry to use Stream API for processing names to improve code readability and reduce boilerplate
fix for http : / / issues . apache . org / jira / browse / amq - 4238 - allow broker mbean to
modify the parameter name from ` alias ` to ` possiblyFlavoredAlias ` and adjust the return logic for alias extraction to improve clarity
camel - 14850 : fix odata - odata2 consumer to return 0 for empty odata feed
added a map to retrieve Hive version alongside the existing short version in MetaStoreSchemaInfo . java to improve version handling by distinguishing
server : fix npe while expunge vm ( # 4522 )
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that certain classes and methods are outdated and should not be used in new code
updated ONDashClockExtension to utilize a new method for retrieving alternative title and notes to improve code readability and maintainability by central
updated test class name from ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and modified assertions for column types to
replaced ` commit ( ) ` method with ` apply ( ) ` method across multiple classes to streamline code by using ` apply ( )
updated the session creation in AsyncTimeoutTest to use a TestIdleListener instead of null to ensure proper management of session idle states during tests
update testbigquerytable to include test _ id
added background resource and reset functionality for icons in HotseatPredictionController and BubbleTextView to enhance UI appearance by providing a
mondrian : fix typo find by codespell on fossies . org
add unit test for native query runner
added a check for ALL _ OUTPUTS in the active features retrieval in LIMEExplanation . java and updated test assertions in LIMEColumn
added argument handling for command line arguments in AppleSimulatorController and InstallCommand to improve command execution flexibility by allowing command - line arguments
fix possible nullpointerexception in linenumberselection . getlinestart ( )
added state check for pipeline and manager in ContainerBase and StandardContext classes to ensure that only active pipeline and manager states are processed to avoid potential
added a line to set the outline clipping of the QSB background to enhance the visual appearance of the QSB background
added flag processing logic to track and log progress in SQLManager and improved string splitting in PlotArea to enhance flag conversion performance monitoring and ensure
updated OpenGL imports and enabled or disabled GL _ DEPTH _ TEST based on whether floating text is occluded to improve rendering flexibility by
fix libffi context name to be consistent with other platform .
refactor propagation behavior handling in JdbcAggregationRepository by introducing a private variable and getter / setter methods to improve code readability and maintainability
filter out l1 / l2 regularization at layervalidation . configurebaselayer ( )
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5365 .
changed the visibility of the ` colorStack ` variable from static to instance and updated its assignment to allow external access to the ` colorStack `
changed the second parameter of getMappedStatement and hasStatement methods from false to true to enable the retrieval and existence of statements in the configuration
convert currency identifiers to lowercase in BTCEPollingMarketDataService to ensure consistency in depth retrieval by converting them to lowercase
updated MQTT publish value assertions in ChannelStateTests . java to reflect the new expected values to ensure the test aligns with the new
remove versionedhashes field from enginepayloadparameter ( # 1748 )
set trigger price to empty on update
update studentfeedbacksubmissioneditsaveaction to always return true for non - null googleid
removed debug print statements in I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 26962 hstore . execute should check ` ` result ' ' before log ` ` debug ' '
# 2127 - fix for - add a new list of child to @ onetomany with orphanremoval true do not delete exist orphan
added a boolean flag ` _ alwaysSaveUri ` and corresponding getter / setter methods in ` FormAuthenticator . java ` to control whether the URI
added methods to set layer type and paint in ShadowRenderNode to enhance functionality for customizable rendering behavior
replaced specific AWT and Swing imports with wildcard imports and added a method to handle the popup menu visibility condition to improve code readability and
initialize the ` insert ` variable only if it is null in ` StressProfile . java ` to ensure proper initialization of the ` insert `
replaced direct calls to ` JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper
added null check for requests in MockServerEventLog . java and enhanced logging in HttpForwardObjectCallbackActionHandler . java to improve robustness
log a warning if property file can not be load
[ java ] close session dataset in client main to avoid resource leak .
added checks for multicast support and NIC status in SetOutgoingIf . java to ensure proper handling of network interface configurations
updated String constructor to include a length parameter to ensure the SQL command starts with the specified length
added methods to set latest consumption times for energy in UnDelegateResourceActuator and removed them from BandwidthProcessor and EnergyProcessor to
added a method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and modified the handling of the ` invalidSessionUrl `
enhanced error message in ProtobufAnnotationSerializer to include the size of original labels to improve debugging by providing more context during token retrieval failures
added a new test class ` MapAssert _ containsKeys _ Test ` to validate the functionality of ` containsKeys ` in ` MapAssert `
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and updated existing proxy generation classes to utilize it for temporary SQL statement methods to enhance
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated tests in ` DirectUpgradeTest ` to ensure proper WebSocket container setup and
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to enhance immutability and thread safety of collections
pdfbox - 4892 : use point2d instead of float for initial point , a suggest by valerybokov
replaced the direct initialization of MethodHook array with an EMPTY array in Method . java to improve code readability and maintainability by using a
added a ` grantAccess ` boolean parameter to the ` MockAuthenticationManager ` constructor and modified the authentication return logic to allow or disallow access based
updated the afterJob method signatures to accept a JobExecution parameter across multiple classes to improve clarity and specificity of job execution handling
added a check for file write permissions and execute status in SharedLibraryLoader . java to ensure the file is executable before proceeding with writing operations
feat ( generator ) : update protoc to v3.15 . 3 ( # 356 )
bug 60502 - do n ' t wrap ` ` sampleresult ' ' in ` ` sampleevent ' ' object for consistency
added new string constants in BundleConstants . java and updated CustomUrlManager . java to use these constants to improve code readability and maintainability
update searchexpression . applyrule to accept a map instead of a hashtable
use an absolute screen locatable object instead of a geowidget to avoid npe
updated texture handling and container dimensions in JoglGraphics and ProjectiveTextureTest classes to improve texture functionality and flexibility in rendering operations
changed the return type of setResourceToDelegate ( ) from void to File and updated its implementation to ensure the output resource is writable before proceeding
camel - 1560 : property component - intercept from uri should resolve property placeholder from the endpoint context .
updated the condition for the last attempt time check in ActionScheduler . java and modified the expected attempt count in TestActionScheduler . java to ensure
updated dbg _ zip path to use a temporary directory and added null check for debug _ log to ensure proper file path is used and avoid potential
update renderingdebugconfig and notificationoverlay to hide hud
pipe : add pipe . resetgate ( ) to reset the gate .
added Locale management during test execution in TestSupplementary . java to ensure consistent locale settings during test execution
updated the team color range in the Team constructor from ( 0.8 , 1 ) to ( 0.4 , 1 ) to ( 0
replaced Set with Collection for activeMatchedStates and modified logging statements to use ArrayList instead of HashSet to improve performance and ensure proper handling of matched
modified the condition to check for null or empty annotations in SoftAsserts . java to simplify the logic for determining if the annotation is null
updated error handling in StorageResources . java to include exception messages and added error logging in StoragePluginRegistryImpl . java to improve error reporting and
export call tree csv via a new method ( reportutils . report )
added null checks and improved note handling in DetailFragment . java and WidgetProvider . java to enhance robustness by preventing null pointer exceptions
added a peakTasks variable and adjusted the loading calculation logic in AssetManager . java to improve the accuracy of loading based on the number of tasks
danielwagnerhall : set default _ enable _ native _ events to true on window
added support for custom score and fetch interval in the Injector class and updated the CrawlDatum initialization to enhance scoring filtering capabilities and improve code cl
updated import statements to use ` org . apache . commons . collections4 ` instead of ` org . apache . commons . collections ` to ensure
modified the null check in CoreContainer and added a method to check if the schema should be shared to improve code clarity and provide functionality to
updated sizeInBytes method calls to use true ( true ) for consistency across various classes to ensure accurate size calculations and improve clarity in reporting segment
replaced multiple assertEquals statements with assertNull for version1 _ 2 in VersioningTest . java to improve clarity and correctness of
updated SQL queries in ` Field . java ` , ` AbstractJdbc2DatabaseMetaData . java ` , and added tests in ` DatabaseMetaDataTest
[ java ] update timeoflastlogupdatems when append new leadership term event to follower .
added a method to build media type from the ServerWebExchange to ensure proper handling of HTTP content types in the WebClient plugin
replaced instances of ` fill ` with ` fillSlice ` in multiple files and updated method names for clarity to improve code readability and
fix acidutils . cleanupafteriow and testcleaner # cleanupaftermajortable
set default values for immutableStorageScheme and qualifierEncodingScheme to prevent null pointer exceptions when storageScheme and qualifierEncodingScheme are null
added new classes PojoProducersCustomized and RestProducersCutomized in the servicecomb demo package to provide customizable and cut
replaced hardcoded " cache " with CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability by using a
fix register for aesgcmsivprotoserialization in aescmivkeymanager
fix miss wooden slab in oredictionary
refactor multiple session management classes for improved consistency to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker ` and ` UndefinedSymbolsLinker
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14850 - fix test failure on postgresql
update the positioning of the sprite batch drawing in HelloWorld . java to correct the positioning of the texture at the center of the texture
refactor plot coordinate calculation and improve string representation to enhance code readability and maintainability by simplifying permission checks
added a deprecated static final Version constant for Lucene version 8.5 . 0 to signal that this version is outdated and should not be used
updated print statement formatting in SSLSocketImpl . java to improve readability of log messages for clarity
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL query can be correctly parsed and
refactor dependenciesType from String to an enum for improved readability to enhance code maintainability and clarity by using a more descriptive
refactor the creation of NoSuchBuildTargetException to streamline target description generation to improve code readability and maintainability by reducing duplication
replaced ` testFromMain ( ) ` method with ` test ( ) ` method in ` MyChild ` initialization to simplify the test execution
reduced the size of the ` configBlocks ` array from ` Block . blocksList . length ` to ` 256 ` to optimize memory allocation
updated warning messages in BukkitMain for unsupported versions and refactored UUID handling logic to ensure users are aware of Paper - only titles
update SQL escaping logic for PostgreSQL questionmark operators in AbstractSQLChange . java and its corresponding test in AbstractSQLChangeTest . java to ensure
added methods of ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and ` MutableBagFactoryImpl ` to enhance mutable
updated title handling in BuildNavAndPDFBody . java to include HTML escape codes and improved error checking for page shortname and permalink to enhance
http : / / issues . apache . org / jira / browse / amq - 4348 - fix mqtt connection to use
updated the way ChangeSet is retrieved by checking if the root ChangeLog is null before retrieving the ChangeSet to ensure that the ChangeSet is
[ type : refactor ] fix code style issue
added HiveMetaStoreClient instantiation and logging in TestObjectStore and TestHiveMetaStorePartitionSpecs to ensure proper database management and enhance logging
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated the BithumbAccountServiceRaw to include currency
remove sseflux configuration since thymeleaf be no longer support .
updated method calls to use ` returns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName ( ) `
added a new endpoint to list Yamls detection configurations and updated YAML variable names for consistency to improve code readability and facilitate
removed public access modifier from equals and hashCode methods in the Marker class to restrict access to these methods for better encapsulation
refactor thread factory implementation to use a lambda expression for improved readability to enhance code maintainability and reduce boilerplate code
added unit tests for adding to a list in MongoTemplate and created a new PersonWithAList class to validate the functionality of the addition to
ggb - 2118 sync panel size after resize , not after resize ,
replaced direct toolbar visibility setting with a delayed execution using a Handler to improve UI responsiveness by delaying UI updates
[ hotfix ] [ table - runtime ] do not unpack first page when there ' s overlapped tsfiles
server : do n ' t try to save vm password if the router fail to start
added false values for usingOutputStream , usingWriter , and isCharacterEncodingSet in Response . java to ensure proper handling of output stream and character
added a conditional check for assignment side effects in GroupDialog to ensure warnings are validated before proceeding with the group assignment process
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and ease of future updates
updated spacing in the conditional statement for icon width and height validation to improve code readability and maintain consistency
updated code formatting and refactored methods in RegisteredServiceProperty , JwtTokenCipherSigningPublicKeyEndpoint , and its tests to improve readability and
added file type checking functionality in Basic . java for UNIX and non - Windows operating systems to ensure proper handling of file contents for different operating systems
use jzlibdecoder and jzlibencoder instead of system . out . printlns
added a new method ` doesClassLoaderDescendFrom ` in ` Util ` and refactored ` Class ` usage in ` MethodHandles ` to
updated the method name from ` doConnect ` to ` connect ` in ` ChannelProvider ` and ` ProxyChannelProvider ` to improve clarity
added a test for handling an empty final column in TestCsvHeader . java to ensure that the CSV header functionality behaves as expected with an
added compass gravity and margins to NearbyMapFragment to improve layout appearance and appearance of the map
added unit tests for distance calculations in GeoPathTest . java to ensure correctness of interpolation logic in GeoPathFactory
added exception handling to ` getLeafFilterFactoryByType ` and ` ParquetFilterPredicateConverter ` methods to improve error handling and provide clearer
added language setting for video streams in LibMediaInfoParser . java to ensure correct language is set for video streams
add a warning log when schemas in a new version are less than the old version to inform users about compatibility issues with the microservice version
replaced arraycopy calls with a single addAll method across multiple array classes to streamline code and improve performance by reducing unnecessary complexity in adding items
reformatted the closing of the database connection in a try - catch block to improve code readability and maintainability
added null and invalid checks for the registrations map in InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to ensure registrations are not
added a method to reset the UI state in SchemaUpgradeHelper to ensure the system reflects the current state of the UI
refactor JUnitReporter to handle pending exceptions more effectively and add test cases for strict and non - strict scenarios to improve error reporting accuracy and
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
added the Closeable interface to the Selector class to ensure proper resource management and prevent memory leaks
refactor connection pooling in MaxConcurrentStreamsTest to use MultiplexConnectionPool to improve resource management and performance during connection testing
added multiple stringType ( ) method calls to CoreOptions . java to enhance clarity and consistency in method naming
updated HqlQueryRenderer to handle character and parameter contexts , and changed test configurations from " eclipselink . xml " to " e
updated status codes in HttpGenerator , HttpChannel , HttpChannelState , and Response classes to use HttpStatus constants instead of hardcoded values to improve
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix flaky test by set stubconnection . slowcreate to true
updated ParquetFormatPlugin and ParquetGroupScan to improve handling of metadata files and enhance file selection expansion to improve accuracy in selection retrieval and
updated success handling in Jsr199Javac to include diagnostic information during compilation to improve error reporting during compilation and provide clearer diagnostics during
added a table model listener to the DefaultSortedTableModel to trigger table changes when the table changes
updated the maximum allowed number in the server configuration from 49152 to 65535 to accommodate larger data sets and improve performance
added document provider notifications in AuthenticatorActivity and AccountRemovalJob for API level KITKAT and updated storage map initialization in DocumentsStorageProvider
removed the call to startLogging in MainApp . java to streamline logging setup for improved performance
added error handling in FilterChainProxy for wrapped RequestRejectedExceptions to ensure proper handling of wrapped RequestRejectedExceptions in the filter chain
updated array copy logic in StringBuilder to use ' this . length ' for improved clarity to enhance code readability and maintainability by using
pdfbox - 4892 : throw iae if filterlist be empty , a suggest by valerybokov
new utility class tbstopwatch : add startnew ( ) method to start a new stopwatch
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5482 .
added @ Deprecated annotation to several classes and methods to indicate that these classes are deprecated and should no longer be used in favor of Servlet 3.
[ zeppelin - 1341 ] fix classloading issue in remoteinterpreterserver
fix commandsourcestack . getentity do n ' t return entity .
updated minSdk from VERSION _ CODES . P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure
corrected the variable name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java `
# 1353 - improve naming of bean and element collection ( # 1354 )
updated URLs in BasePage . java to use " static / all . css " instead of " wro / all . js " and added
added a new test method ` showLatestTimeseriesTest ( ) ` to validate the functionality of displaying the latest timeseries in IoTDB to ensure
rename ` appContextLocation ` to ` contextConfigLocation ` across multiple files to standardize the parameter name from " appContextLocation " to
added a check for the type of ` e ` before throwing it in ` OCSPChecker . java ` to ensure proper handling of ` Cert
benchmark : allow to turn off write output solution by default
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` with a test method for verifying slice size functionality to ensure that the slice size functionality
added a shapeless recipe for the waterproof and slime ball to the game registry to enable the waterproof and slime ball functionality
fix arrayindexoutofboundsexception when iterate non - zero vector .
added imports and logic to handle ownership of shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated import statements in IOHelper . java and added max directory and file name length checks in MultiKahaDBPersistenceAdapter . java to
added an ` isSeenTag ` method to the ` UpToTagChangeSetFilter ` class and modified the instantiation in ` Liquibase
[ beam - 1748 ] fix checkstyle violation in io . beam . io
fix typo find by codespell on fossies . org
change volume and up paint default values from gray and green to GRAY to improve visual consistency and readability of the code
replaced ` FrameLayout . LayoutParams ` with ` LayoutParams ` and added support for ignoreInsets in layout parameters to enhance layout flexibility and
added a duration parameter to the BuildTargetDurationListener and updated related tests to include the duration parameter to enhance functionality by providing additional context about the
replaced Spring @ Profile annotation with static imports from System . getProperties and added assumptions for enabling database profiles in multiple migration test classes to
added null check for the user object before processing claims to avoid potential NullPointerExceptions when user is null
camel - 1560 : added replacement from endpoint to camel route . thanks to benjamin for the patch .
use non - blocking set instead of concurrentskiplistset in cassandraconnection
api : listpublicipaddresses - add networkid parameter to listpublicipaddresses api command
added a test for ignoring battery optimizations in ShadowPowerManagerTest and implemented the isIgnoringBatteryOptimizations method in ShadowPowerManager
updated the way the Jetty version is retrieved by using ` __ buildProperties ` instead of a hardcoded value to improve flexibility and maintain
added tests for verifying invocation order in NumberOfInvocationsInOrderVerifierTest . java to ensure correct behavior of the verification process with different
added debug force evaluation logic in TRegexExecNode . java to improve debugging visibility for regex evaluation scenarios
modify the profile starting method to include a foreground flag to ensure the profile starts in the foreground mode for better user experience
refactor MiniSolrCloudCluster to use separate executor services for improved resource management to enhance code clarity and maintainability by using more d
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related logic
updated logging of the file name in CodeEditorView and added view removal logic in EditorTextActionWindow to improve clarity of log output and
updated skippedEntries to include exception message and entry name in ClassFileReader . java and JdepsTask . java to improve clarity of warning messages
added LinkStorage to Fetcher and updated doc storage setup in FetcherMain to enhance the functionality and improve the handling of Lucene documents during
updated the ` populateBubble ` method signatures and logic in ` BubbleBarController . java ` to include an existing ` Bubble `
updated warning logs in CronScheduledRoutePolicy and SimpleScheduledRoutePolicy to throw an IllegalArgumentException for missing parameters to improve error handling and provide clearer
updated method signatures in MotanServiceBeanPostProcessor , MotanRpcExt , and TarsServiceBeanPostProcessor to use Method
[ java ] use a new OptimalMulticastDelayGenerator for the loss handler .
updated Gson initialization and added properties for client details in ClientInformationResponseView . java to improve JSON serialization for client information
added a conditional check before setting the average price of an order based on the field amount to ensure that the order ' s average price is only
refactor rawExecutionReports method to streamline subscription process to improve code readability and maintainability
added a fail method to handle exceptions and modified the failure condition in LdapTimeoutTest . java to improve error handling and provide clearer output during
fix for ticket : 241 -- do n ' t crash if the installed / folder do n ' t exist .
updated password handling logic in AmbariServerConfigurationHandler . java and adjusted test expectations in RootServiceComponentConfigurationResourceProviderTest . java to
added a check to skip parsing if a segment is already parsed in ParseSegment . java to optimize performance by avoiding unnecessary parsing of duplicate segments
[ hotfix ] [ yarn ] add application _ attempt _ failures _ validity _ interval config option
make it possible to unload the h2 driver that be not include
hbase - 25827 make snapshot - based inputformat readtype configurable in hbase - mapreduce - client - hbase ( #
added fixed height and width parameters to the LoginInstanceRequest class to enable customization of login dimensions in the application
added corner radius parameter to multiple update methods in ActivityControlHelper , ClipAnimationHelper , and LauncherLayoutListener to enhance flexibility in
updated COMMANDS _ TO _ REMOVE to include " DESC ( RIBE ) " and added filter filters for warnings in filterSet to
refactor connection handling in TxnHandler to introduce retry mechanism to work around BONECP bug to improve reliability and reliability of database
http : / / issues . apache . org / jira / browse / amq - 4748 - add txnpreparebackupreserve
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to enable initialization of the ` strings ` array for better string
phoenix - 5997 phoenix explain plan for deletes do not clearly differentiate between server side and client side path .
updated exception handling in BaseServiceException to include a retryable check for specific SocketException messages to improve error handling by allowing retries for insufficient data
added support for rapid install types in the ` AdbHelper ` , ` AndroidDevicesHelperFactory ` , and ` RealAndroidDevice `
updated the SeedPattern regex to allow negative values to enhance flexibility in pattern matching for random seed generation
refactor MultimapSubject to use a factory pattern for creating IterableValuesForKey and IterableEntries to improve code readability and maintainability by redu
removed conditional check for device orientation in the hotseat display size calculation to simplify the logic for determining the vertical display size
transformer end - to - end : ignore transcoding if there be only one mediumitem
added localization support for strings in Picker . java to ensure consistent localization across the application
camel - 2343 fixed the issue that camel - cxf - rs do n ' t handle the exception
added Hibernate exception handling for HessimisticLockException and PessimisticLockException in PostgreSQL81Dialect . java to improve error
updated SQL query execution logic and modified imports in HiveStatement and TestJdbcDriver2 classes to enhance test reliability and maintainability while ensuring proper
[ beam - 8470 ] add usesunboundedpcollections category to pardo test .
updated HTML output for setting filename text in GpsSimpleViewFragment . java to simplify code and improve readability by removing unnecessary em tags
[ java ] remove leadership term id parameter from joinlogasfollower method .
updated HttpSender to store the HttpExchange instance in a field instead of calling getHttpExchange ( ) directly to improve code readability and maintainability
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated method names from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and its tests
added null checks for the tree before accessing markers and introduced a new test class for marker equality checks to improve robustness and prevent potential NullPointerExceptions
use double instead of float for font size , a suggest by valerybokov
[ mo ] fix parsing of email address in result parser
added handling for exclusions in RawMavenResolver to ensure proper tracking of artifact exclusions when processing artifacts
added null checks and improved exception handling in DSXAdapters , DSXPairInfo , and DSXBaseService to enhance robustness and
updated test files for ` TestBlockingIO ` , ` TestParsingTable ` , and ` TestValidatingIO ` to improve test coverage and ensure
drools - 90 : incremental compilation fail if kiemodule do not have a release id
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to
updated JacksonDataFormat and JacksonXMLDataFormat files to improve code organization and maintainability
fix hostfielddesc . java to use unreflectgetter / unreflectsetter instead of findstaticgetter / findsetter .
add a method parameter annotation for java . util . concurrent . CompletableFuture in DefaultNullnessAnnotations . java to ensure proper handling of completion stages
updated the freeze checkpoint calculation in PlaybackController . java to adjust the logic based on the elapsed time subtractors
removed unused imports and updated internal state management in AbstractCommonPowerMockRunner and PowerMockRunner to streamline code by eliminating unnecessary code
resolve http : / / code . google . com / p / mybatis / issues / detail ? id = 533 . this close
refactor indentation logic for method invocation and its select elements in TabsAndIndentsVisitor . java to improve code clarity and ensure correct
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter class to utilize the standard testing framework instead of the Apache Test
updated the write method in HtmlProcessInformationsReport to include an HTML td element to enhance the output formatting by adding wrapped text elements
removed unnecessary imports and refactored execution context management in JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository to streamline
added a conditional check to hide the new media folder before adding it to the root folder to improve user experience by preventing unnecessary visuals when
replace UnsupportedOperationException with IllegalArgumentException and modify widget removal logic in SplitPane . java to improve error handling and ensure proper handling of null actors
added handling for JavaType . Parameterized in RemoveUnusedImports . java to collect type parameters and their corresponding packages to improve type management by ensuring only
avoid npe in uniquemodlistbuilder . selectfile ( ) if there be no modinfo or modinfos
changed the logger variable to static in TicketGrantingTicketImpl . java to ensure that the logger is accessed directly from the class instead of the
updated the timeseries schema in ` PhysicalPlanTest . java ` to include a new timestamp with SNAPPY tags to accurately reflect the time
added a method ` isValue ( String value ) ` to ` AttrData ` and updated the ` Converter ` to check its value against its pairs
updated the condition for handling character keys in the CPlatformResponder and added utility methods in LWCToolkit for handling US International PC
[ java ] add publication connection timeout to c and spy simulator test .
added a check to return false for specific request URIs in GTVGFilter . java to prevent processing of specific CSS , images , and favicon
added assertion to verify installation failure of wellbeing test APKs to ensure that the device is rooted as the APKs are
# 269 - enh : add @ ignoreplatform ( oracle ) to testqueryforupdate ( # 269 )
updated the expected number of secure transport protocols from 1 to 3 in TestVertxTLSBuilder and added mocking for MultiMap in TestSimple
updated JavaLib1 . java paths in DiffRuleKeysScriptIntegrationTest . java to use the latest version to ensure compatibility with the latest Java
added a check to prevent haptic feedback dismissal from running concurrently to avoid potential conflicts and ensure smoother user experience during task navigation
improve error message when explosion exploder can not be find .
added a method to retrieve item IDs in SymbolInputAdapter to ensure proper ID retrieval for better data integrity
updated the API endpoint to use ` @ QueryParam ` for limit _ asks instead of parameterized values to improve flexibility in handling query parameters for
added a check to replace single quotes in the result if it contains a single quote to ensure proper handling of double quotes in XML output
added ` toString ( ) ` methods to ` KubernetesLeaderElectionDriver ` and ` ZooKeeperLeaderElectionDriver ` to provide a clearer string representation
refactor SqlSessionFactoryBean class structure to improve code readability and maintainability
[ 3.0 triple ] fix nullpointerexception when invoke method with generic call
replaced error handling with runtime exceptions in PolygonRegionLoader to improve error management by throwing a runtime exception instead of logging errors
added a method ` isStarted ( ) ` to the ` Deadline ` class and implemented timer initialization in ` RawStoreProxy ` to ensure a
added handling for closed channel exception in NettyRequestExecutor to provide clearer error messages related to channel closure issues
modified how genres is displayed in ItemListActivity to handle potential null values to ensure that the application does not crash when no genres is
[ flink - 21754 ] [ checkpoint ] do not call masterhooks . reset in region recovery
add a mappedcontainercomponent to allow the user to define a collection of mapped container .
hbase - 25826 walnode # costofactivememtables should n ' t fail if there be no active memtable ( #
http : / / issues . apache . org / jira / browse / amq - 4358 - fix retry on callback failure
fix checkstyle issue in util / tutorial / background . java and package - info . java
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server escape functionality to ensure correct handling of special characters in query results when using
camel - jbang - fix npe in camelmodule when route be null .
refactor JavaFXSEPort to utilize Util . wait instead of synchronized block for synchronization to improve code readability and reduce boilerplate
moved ParameterFlags from the com . kenai . jaffl package to the com . kenai . jaffl .
refactor crop handling in CropperUtils to improve type safety and clarity to enhance code maintainability and ensure proper handling of image objects
removed appName parameter from several configure methods in InputRC . java and replaced it with a direct method call to getAppName ( ) to simplify
add test to ensure install and uninstall work with ignored and broken dependency .
danielwagnerhall : do n ' t set headless = true by default in functional test
replace value assignment with interned version value to ensure proper memory usage and prevent memory leaks
added support for " MOVE " status in the recv _ status check to ensure proper handling of recent updates to the database
updated US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME definitions in FixedDateFormat . java
replaced ` org . apache . curator . shaded . com ` with ` com . google . common . collect . Lists ` in
[ hotfix ] fix the race condition in hsbuffercontext # startspilling ( )
fix : untrusted visit flag not work with untrusted visit permission
do n ' t try to register jabber protocol if not register yet .
updated the condition in BasicURLNormalizer to include additional hex values and added a test for curly brace in TestBasicURLNormalizer to enhance URL normalization
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a check to compare encoding rates in EncodingConfiguration . java to ensure correct handling of encoding rates by comparing with current codecs
added a method to retrieve the project path and modified the return type of the generateProjects method to return an immutable set of generated project paths to
removed unnecessary check for native digit before setting the zero digit and added validation for calendar ID in HostLocaleProviderAdapterImpl . java to improve code
added a new class MSwingUtilities with utility methods for image scaling to facilitate image manipulation and error handling in the application
camel - 16400 : camel - mail - should make it async so we can execute the callback .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to ensure proper refreshing of configuration properties
added unit test base on user forum issue
added Main and ScriptRenderer classes for scripting functionality to facilitate the rendering of JavaScript scripts within the SchemaCrawler plugin
added a condition to check if ` _ inputState ` is ` __ NONE ` in the ` Request ` class and implemented a new test for
added checks for non - positive dimensions before calculating descent in BitmapFont . java and introduced a method to check for descendant actors in Group .
updated failure handling to run close hooks in DeploymentManager and added a test for failed deployment in DeploymentTest to ensure proper context shutdown hook execution and
add a forceignore parameter to the tostring ( ) method in lexiconrecipemappings . java to allow the recipe ' s wild recipe to be
updated sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to improve test reliability by reducing sleep duration
replaced specific StringUtils imports with a wildcard import and modified conditional check for shortName to simplify import statements and improve code readability
use class loader to load holiday xml file , not hardcoded ` ` classpath : / / ' '
added a new utility class ` FieldUtils ` with methods to retrieve and set field names using reflection to improve code organization and facilitate
removed unnecessary condition in assertions in DeferredAttr . java and added a new DoubleStaticImport . java class with a test method to simplify the code
changed the layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for custom content to improve layout
added a method to update Xabber settings with a save of the last selected account to improve user experience by ensuring the last selected account is
added a new method ` setvar ` to handle command - line options for setting variable values to improve usability by allowing users to set variable
fix animal tame event be fire in catentity . close # 2338
improve error message when sort by value for range frame
pdfbox - 4892 : check that the font appearance contain the help text , a suggest by valerybokov
set the current application mode to the current one in PageListController . java to ensure the current application is consistently associated with the current application
added support for specifying Docker file path and building arguments in ImageFromDockerfile . java and created a corresponding test class in DockerfileBuildTest
added a null check before initializing threadInfos [ threadId ] to prevent potential NullPointerExceptions when accessing threadInfos [ threadId ]
updated conditional check in PieChartRenderer to use a constant for floating - point value to improve code readability and maintainability by using a
[ hotfix ] [ runtime ] add more log for singleinputgate and singlecheckpointbarrierhandler
added new table constants to the Schema class to enhance data handling capabilities in the application
added a minimumSimilarity parameter to the FuzzyQuery constructor and updated related classes accordingly to improve query scoring by allowing a minimum similarity to be
replaced the method ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView . java `
propagate immediateflush from outputstreamappender to outputstreamappender in layoutinsteadofencoder .
updated AutoConfigureAfter annotations in ZipkinAutoConfiguration . java to include additional auto - configuration classes to ensure proper loading of Rabbit and Kafka auto
modified the condition for removing a component in JLayer and added a new test class bug6875716 to handle NullPointerExceptions to ensure proper
replaced the import of ` avro . shaded . com ` with the direct import of ` com . google . common . base . Function
refactor blockcount calculation and introduce return block and unwind block creation in BciBlockMapping . java and GraphBuilderPhase . java
added null checks and methods for legacyRenderer in Label . java to improve code robustness and provide flexibility in rendering behavior
replaced intToFourBytes method with Ints . toByteArray in AbstractJweDecrypter and AbstractJweEncrypter to improve code
added a null check for mObserver in NavigationModeFeatureFlag . java to avoid potential NullPointerException when mObserver is null
simplified the generic type in the Comparator interface and added a new Department class with test cases to improve type safety and ensure correctness
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
updated the ` endTimeUtc ` method in ` UserRuleAnomalyFunction ` to use ` currentKeyMillis ` instead of ` null `
added a try - catch block around parsing integer values in VisualScoreTagTest . java to ensure that NumberFormatException is properly handled to avoid runtime errors
added a class loader to the enhancer configuration in MockFactory . java to ensure proper loading of classes during mock operations
added a new ` OriginalFormat ` class to handle string formatting in ` ConverterWithEnumFormat . java ` to facilitate the handling
replaced hardcoded date formatting strings with a constant pattern to improve maintainability and readability of the code
refactor JAWTRenderer class for improved performance to enhance rendering efficiency in the application
camel - 14850 - camel - aws2 - * : enable autowire on the lambda client , fixed test
server : check if mac address be valid before generate it in uservmmanagerimpl .
added a condition to check if the header name equals " Authorization " in ProxyServlet . java to ensure proper handling of authorization headers in the proxy
change method from submit to execute in TraceableExecutorService to improve command execution handling in context - aware scenarios
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes to
modified the condition for determining randUsePoints in SolrTestCaseJ4 . java to allow for a variety of points based on a random
replaced calls to ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to clarify that the method is
updated TimeFormat . formatForConsole method to include Locale parameter to ensure consistent formatting across different locales
refactor imports and enhance handling of named expressions in GroovyParserVisitor and GroovyPrinter to improve code readability and maintainability by using wildcard imports
added bounds checking for bottom , left , and right insetPx in Border . java to ensure appropriate values are set based on input values for
replaced the instantiation of ` GestureState ` with a static final instance of ` DEFAULT _ STATE ` and refactored related logic to
updated date handling in LlapServiceDriver to use java . time . Instant and DateTimeFormatter to improve compatibility with modern Java date - time utilities
updated openblas and openblas _ nolapack files for consistency to improve code maintainability and readability
fix bug where we be n ' t use ioutils when closing torrent
made the ` initTxnMgr ` method synchronized to ensure thread safety when accessing shared resources
updated wait time in ` AbstractDistribZkTestBase ` and changed socket timeout in ` AbstractFullDistribZkTestBase `
added a new class ` SearchResults ` to handle search results in Lucene to provide functionality for managing search results in a structured manner
threadcpusamplersupport : do n ' t refresh thread cpu if there be a new one
initialize primitive array if necessary to avoid potential npe .
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
updated the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the
added a new API endpoint to retrieve instance pools for the current instance to provide users with access to instance configuration and its associated information
refactor ` canEarlyTerminate ` logic to include ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix
updated InlineBytecodeGenerator to check if the method is a toString ( ) method and modified imports in InlineByteBuddyMockMakerTest to
added logging statements for compiling and preprocessing in CxxCompileStep and CxxPreprocessStep to improve troubleshooting and
add stringutil . removereader ( string , char ) to remove a character from a string
[ 3.0 ] fix metadata service protocol and url issue ( # 1748 )
[ drools - 584 ] add datatransformer interface for compile ( ) and transform ( )
changed the type of the ` values ` and ` num ` arrays from a generic collection to a ` Number [ ] [ ] ` to improve
removed the conditional check for ' interesting ' in the FormatStringChecker and added a conditional check for ' sig ' in the conditional statement to simplify
removed redundant assignment of SolrCore to improve code clarity and maintainability
refactor ITestDbTxnManager class for improved clarity to enhance maintainability and readability of the test code
refactor database connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a test method for the MapModel in CodeFirstPojoClient and CodeFirstPojoIntf classes to ensure the correctness of
pdfbox - 4892 : reorganize code , a suggest by valerybokov
refactor selection handling in ScaleDialog to improve clarity and functionality to ensure correct selection behavior based on the presence of selection options
fix nullpointerexception in forge when step height be not set .
pdfbox - 4892 : do n ' t throw and continue if there be no appearance stream
changed the type of the ` keys ` variable from ` SortedSet ` to ` LinkedHashSet ` to ensure the order of keys is maintained in the
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 in CancelEventTimer . java and added
updated the preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the
added a check for agent support before setting allConstructorsToPublic in MainMockTransformer . java and created two new test classes for static methods in
pdfbox - 4892 : optimize object check , a suggest by valerybokov
add a method to set the default window title to make it work with java 11 .
modified depth calculation based on pixel size in XRSurfaceData . java to ensure correct depth value is set based on pixel size for better visual
added error body to InvalidResponseCodeException and improved error handling in OkHttpDataSource to enhance error reporting and provide clearer error reporting for
added a static exit method in TopLogging . java and updated its usage in TopThreadGroup . java to improve error handling by providing a clear
updated the logic for determining the starting index of the regex in NativeRegExp . java to ensure the start index is only set for non - global
planner - 468 ignore fail test when upgrade to optaplanner 6.3 . 1
[ hotfix ] [ runtime ] fix typo in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and updated FeedEntryDAO to use this method to improve efficiency by avoiding unnecessary
change return type of appendToLabel method from void to AtomicCounter to allow method chaining in the same method
[ java ] use noopidlestrategy instead of busyspinidlestrategy in lowlatencymediadriver .
added support for handling ` HttpStatus . NOT _ MODIFIED ` in ` CacheControlHeadersWriter ` and ` CacheControlServerHttpHeadersWriter `
truffle / instrumentation : make instrumentation partial evaluation test more generic
updated the paintTabArea method in SynthTabbedPaneUI to correctly calculate and paint the tab area dimensions to ensure proper rendering of the
modified the ` getKrakenDepth ` and ` getKrakenMarketDataServiceRaw ` methods to accept an additional ` args ` parameter
camel - 14284 : added file separator support for file name that start with a slash .
added classpath handling and improved the build method for JavaProvenance in MavenProjectParser to enhance the flexibility and functionality of JavaProvenance
added trace logging for Hive functions and UDFs in HiveFunctionRegistry and implemented a test for random functions in TestInbuiltHiveUDF
reduced loop iteration count from 100 to 200 to improve test reliability by allowing more time for cloud state updates
skip hint for deleted column family . patch by jbellis ; review by brandonwilliams for cassandra - 1454
added a check for writable output files in NativeErrors . java to prevent test execution when the output file is writable due to root access
added package checking and error handling in LauncherModel . java to ensure the application is enabled before proceeding with operations
do n ' t swallow exception during database upgrade
added skip policy checks and improved exception handling in AbstractFaultTolerantChunkOrientedTasklet and its tests to enhance fault tolerance
replaced ` startsWith ( completed ) ` with ` regionMatches ( ) ` in ` LineReaderImpl . java ` to improve case sensitivity
added imports and modified data table handling in Recipe . java to utilize global data tables to improve code organization and maintainability by consolidating
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar to ensure tasks are properly dismissed when the
server : upgrade from 4.14 . 1 to 4.15 . 2 add dbupgradesystemvmtemplate interface .
removed unnecessary null checks for the connection variable in LdapClient . java to simplify code and improve readability by eliminating unnecessary null checks
refactor index handling in SequenceAction . java for clarity to improve readability and maintainability of the code
do n ' t log back the current keyspace if it do n ' t exist
added a check to skip synthetic fields in ReflectUtils . java to improve performance by avoiding unnecessary processing of synthetic fields
added a new LoggerProvider class and integrated it into ApplicationController to provide a logging provider for the Ninja application
updated ImmutableMap builder to use Object instead of String and modified port handling in ServerStatusCommand . java to improve type safety and simplify port assignment logic
added deprecation warning for having more than one glue class that configure the spring context to improve error handling and provide clearer feedback on deprecation issues
added a new method ` deepStart ` to convert a list of ` Startable ` objects to a stream of ` Startable ` objects to
remove shape . reserveprimitivewithextensionarray , deprecate since 20.2 .
make laser table and laser target block implement ilasertargetblock .
simplified the condition for validating object names in AbstractJdbcDatabase to improve code readability and maintainability by reducing redundancy
removed unused imports for CachingTokenFilter , TokenStream , and MemoryIndex in TestSolr4Spatial2 . java to streamline the code
http : / / issues . apache . org / jira / browse / amq - 4358 - fix memorylimittest . test
removed unnecessary null checks and improved condition checks in RequestHandlers . java to enhance code clarity and prevent potential NullPointerExceptions
replace ' - ' with ' . ' in the servlet name return statement to ensure proper formatting of the servlet name for logging
updated import statements and modified the handling of PYTHONPATH in ProjectBuildFileParser . java to improve code clarity and ensure PYTHONPATH
updated audio frame size calculations and error handling in DirectAudioDevice . java and Toolkit . java to improve robustness by ensuring audio data is
added null check for enums in ElasticSearchStringLookupService to prevent NullPointerException when enums are null
updated error message formatting in CommitLogReader . java to include more detailed error information to improve clarity of error reporting for better debugging
initialize WebSocketSession policy using containerScope to ensure proper policy is set for WebSocket connections
removed unnecessary check for static fields of the current type in the initialization logic to simplify the logic for determining initial static fields in the TypeScript translation
updated the web root context initialization in UserService . java to allow dynamic configuration of the web root directory
( chore ) camel - spring - test : migrate unit test to junit 5 ( # 4539 )
bugfix # 20527 , use registry . focusedcomponent ( ) instead of registry . getmostactivecomponent ( )
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure buffer state is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView . java to avoid potential NullPointerExceptions when mOriginalForeground and mOriginal
updated the range check in FloatingDecimal . java to use ' less than or equal to ' instead of ' greater than or equal to '
updated property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure compatibility with Java ' s
removed the maxVersion parameter from the getVersions method call to simplify version retrieval by eliminating unnecessary version count logic
added logic to set the origin header if it does not already exist to ensure the origin is set correctly for secure connections
replace visibility animations with animations for previousTask and nextTask in RecentsView and TaskView to improve user experience by providing smoother
enhanced error messages to include the field parameter in ORCRecordReader . java to improve debugging by providing context about the field being processed
added two new sample files for " Clear HLS : TearsOfSteel . m3u8 " and " Basic 4
removed redundant ` HIBERNATE52 _ ENTITY _ MANAGER _ INTERFACE ` and ` HIBERNATE43 _ ENTITY
updated log initialization to specify the class name in ExecRPCInvoker and WritableRpcEngine to improve logging clarity by specifying the context of the log
added diagnostic logging and introduced a new test for union types and fixed fields in TestSpecificCompiler . java to enhance error reporting and validate compilation behavior
modified WebSocketEndpoint to ensure proper session handling and logging to improve clarity and maintain session integrity for users who are not logged in
updated delay constants and method names for clarity in multiple services to improve code readability and maintainability by using a more descriptive naming convention
ww - 4892 update to support the newer version of the xwork dtd manifest
added conditional checks for stream stop behavior in WebCamInputPanel . java to ensure proper handling of video playback stop behavior
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
update geot - 5396 to geotools 3.0 , and fix geot - 5398
use ` s . skip ( 200 ) ` instead of ` s . substream ( 200 ) ` in targettype58 . java
hhh - 10956 - add a method to get the identifiergenerator from simplevalue
rename ` ` find ' ' to ` ` download ' ' for full text download
refactor URI registration handling in ` URIRegisterExecutorSubscriber ` and ` ShenyuClientRegisterDefaultServiceImpl ` to include host and
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for non - blank OSDb hash before retrieving information and changed List type to ArrayList < String > to improve error handling and type
added token transfer functionality to the RuntimeImpl and MUtil classes to enhance contract functionality by allowing token transfer based on provided values
camel - 14263 : camel - ftp - add support to change current directory when use stepwise mode
( chore ) camel - jackson : fix typo find by codespell on fossies . org
added assertions and modified join result checks in MapJoinOperator . java and added BloomFilter in HybridHashTableContainer . java to improve
updated HTTPSPDYAsyncEndPoint to accept an AsyncEndPoint parameter and added methods to retrieve local and remote host information to enhance functionality by allowing
added extra " id " to multiple adapters and fragments in the intent to ensure that the correct tweet ID is included in the intent for better data
replaced internal disconnect methods with a new disconnectWeb method and adjusted the handling of proxy authorization to improve clarity and functionality when dismissing proxy
replaced ` int _ numChildren ` with ` AtomicInteger ` for thread - safe incrementing children in ` TraceContext ` to ensure thread -
replaced JWT and RESPONSE enums with consistent naming conventions across multiple Java files to enhance code readability and maintain consistency across the codebase
added enabled = false to the test annotation in ValueTypeTests . java to prevent the test from running due to unintended behavior
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . internal
change the in predicate from IN to NOT _ IN across multiple classes to correct the condition from " IN " to " NOT _ IN " for
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to streamline account creation and display name retrieval to improve error handling and
added a null check for ` witnessService ` before validating permission to avoid potential ` NullPointerException ` during permission validation
updated the construction of ` taggedCol ` to use ` getExprString ( ) ` from ` colExprMap ` to improve clarity and
added a check to ensure the JavaDoc field is not null before setting it to avoid potential null pointer exceptions when accessing the item ' s documentation
rename holderMethod to holderMetadata in CompiledICHolder . java and introduce RedefineInterfaceCall . java with corresponding test methods to improve
update tabs component revalidation to use animation safety to improve user experience during smoother transitions
[ hotfix ] [ connector / kafka ] replace unsupportedoperationexception with unregisteredmetricsgroup
updated the calculation of the y - coordinate in the Polygon class to use a new oldX variable to improve code clarity and maintainability by
added import for Configuration and modified cache creation to use explicit type casting to ensure type safety and improve code clarity by explicitly defining the cache configuration
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 229748
refactor ShadowCookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
added a new configuration flag for dropping external tables and updated related tests to ensure proper authorization checks before dropping external tables to maintain backward compatibility
added an opening brace to the conditional statement in Stage . java and adjusted the background drawing calculation in ProgressBar . java to improve code readability and
truffle / sulong : cache byte order support for platform capability .
updated the property name from " namedPipesocketprovider . timeout " to " windowsprovider . timeout " in WindowsClientProviderStrategy . java
modified the initWebViewLogin method to accept a baseURL parameter and updated the logic to load the login web view based on the provided base URL
updated the error message in CallableStatementHandler from " Paramter " to " Parameter " to clarify that the JDBC type is specified for
removed the required attribute from the after parameter and updated its usage in the AuditEventsMvcEndpoint and its tests to allow the after parameter to be
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` across multiple classes to improve clarity and specificity regarding the purpose of the
added soft body removal and null assignment in SoftBodyTest . java to ensure proper resource management and prevent potential memory leaks
changed interface declarations from package - private to public for ` SinkFunctionProvider ` , ` SourceFunctionProvider ` , and ` OutputFormatProvider `
[ minor ] fix log message in zeppelinhubclient and zeppelinhubwebsocket
add test to reproduce problem with redundant namespace in jingle element .
fix checkstyle issue in generator / energy / bcstatcollector . java ( # 786 )
added support for HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
refactor conditional statements in plot member and denied handling to improve code readability and maintainability
updated the delimiter string length and adjusted formatting in SimpleReport . java to improve code readability and maintain consistency in formatting
removed the option for ignoring symbol files in the JavapTask and updated related classes accordingly to streamline the code by eliminating unnecessary
rename ` TickerDemo ` to ` StreamingTickerDemo ` and update related references to improve clarity and consistency in naming conventions
added null checks for contract type and address in ContractValidateException handling to improve error handling for unknown contract types and ensure proper contract address retrieval
g3d - 363 : do n ' t allow input3d to be re - used in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests during development
do n ' t throw exception when parse script tag payload
changed the method name from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName to clarify the purpose of the method as a bean class
updated the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to provide a
replaced ' this ' member assignments with ' IOSGLES20 . x ' and ' IOSGLES20 . x ' assignments to ensure
deleted the UploadPathActivity . java file to remove unused or redundant code from the project
updated return statements in SimpleTextFieldsReader to handle IndexOptions . DOCS _ ONLY to ensure correct handling of totalTermFreq and sumTotal
fix ( jdttreebuilder ) : set implicit flag on constructor declaration ( position = = - 1 )
added a Database parameter to multiple ` populateValidateIfNeeded ` methods in ` ColumnSnapshotGenerator . java ` to ensure compatibility with OracleDatabase during metadata
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
removed indexOptions declaration from DefaultIndexingChain and updated iterator assignment in PointInSetQuery to streamline code and improve clarity by directly using
removed a substring of 10 characters from rawName in SchematicHandler . java to simplify the mapping process by eliminating unnecessary substring operations
added a switch statement to check for specific collection assertion types in AbstractCollectionAssert . java and updated tests in CollectionAssert _ isUnmodifiable _ Test
changed the visibility of the Option enum from static to non - static to allow external access to the Option enum within the ProcessExecutor class
added a confirmation dialog to handle cases where character remaining text is negative in Compose . java and ComposeActivity . java to improve user experience
replaced the toggleKeepInSync method with direct file synchronization handling in FileDetailFragment . java to streamline the synchronization process and improve code
replaced ` DatatypeConverter ` with ` java . util . Base64 ` in ` ImageUtil ` and added unit tests for embedded Base64
added new files for ` ControllerCounter . java ` and ` DBCallback . java ` in the ` org . springframework . datastore . document
added ' final ' keyword to the ticketId parameter in the deleteTicket method to improve code clarity and enforce immutability of the ticket
added a new file FlywayMigrationRunner . java to create a database migration runner to facilitate the execution of flyway database
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in the ` HashMap ` class and added a new class `
update the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the new release
updated the ` modify ` method in ` CompressionCodec ` to accept nullable modifiers and added a warning log in ` WriterImpl ` and ` Z
added error handling for missing main entry in LauncherHelper and refactored jar creation in TestHelper to improve robustness by ensuring proper error
rename test classes to include " Tests " suffix to ensure consistency in naming conventions across test files
refactor hotspotprofilinginfo to use jvmci ir size instead of graal node count
make xssfsheet . cellcopypolicy a no - op instead of clone ( )
added a static method ` resetIconLoadResult ( ) ` to reset the icon load result in ` FloatingIconView . java ` to
replaced ` f . getValues ( ) ` with ` f . getRawValueCharSequences ( ) ` in ` EntityCapsManager . java `
updated IconRecentsView to use dynamic resource dimensions based on device orientation and added landscape orientation handling to improve layout responsiveness for land
deleted the AddAdapter . java file to the functionality is no longer needed in the project
avoid redundant call to get ( x ) . get ( x ) if the constructor code list be empty .
refactored the logic for processing sort columns and streamlined bucket column handling in OpTraitsRulesProcFactory . java to improve code readability
log4j2 - 1343 fix intermittent failure in testlogwatcher . looper ( )
added a print statement for " < any > " in Java2TypeScriptTranslator . java to enhance output formatting for better readability
updated the SDK version from " 4799589 " to " 4913185 " to reflect the latest features and improvements in the
added a conditional check to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS property to true if it does not already exist
removed the conditional check for ` classLoader ` in ` TypeCachingBytecodeGenerator . java ` to simplify the configuration by eliminating unnecessary singleton
updated method names to clarify their purpose to improve readability and understanding of the callback functionalities
refactor ` writeFile ` method to include an ` appendToFile ` parameter for better control over file writing to enhance file writing flexibility by allowing
updated the logic in ` MavenExecutionContextView ` and ` MavenRepositoryMirror ` to check the ` mavenSettings ` against ` getSettings ( )
added a name parameter to BuildRuleSourcePath and modified constructors in PathSourcePath and other classes to support naming conventions for better clarity
updated the condition in OAuth20CallbackAuthorizeEndpointController to use ` matches ` instead of ` equals ` for comparing client IDs and redirect URIs to
replaced direct calls to ` values ( ) . toArray ( EMPTY _ ANNOTATIONS _ ARRAY ) ` with ` AnnotationParser . toArray ( annotations
updated methods in UserManagerCompatVL to remove unnecessary type casting to improve code readability and maintainability by standardizing method calls
updated default value for the line separator property in GlobalConfiguration . java to provide clearer guidance on default line separator settings
fix a bug where bestpathaccuracytracker and bestpathaccuracytracker would n ' t work .
server side template engine : user input do n ' t have space in them
chore : update java and python dependency ( # 668 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` declaration and updated its implementation to handle potential IOException
refactor CountersReader to improve code organization to enhance maintainability and readability of the code
updated the methods in AllAppsRecyclerView to directly set containerType values for SEARCHRESULT , PREDICTION , and ALLAPPS to improve
hbase - 25836 add deprecation for hbase . ipc . server . reservoir . initial . max and hbase .
[ native ] fix e2e test for native window
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types to improve the accuracy of retrieving parameter types based on
refactor TestFSTs class for improved performance to enhance efficiency of file handling operations
[ change ] drawinputbox and latextextrenderer now account for the y - coordinate of the label .
hbase - 25850 increase initial size for increasingtoregionplitpolicy ( addendum )
removed unnecessary model loading state and loader initialization in LauncherClings . java to streamline the code and improve performance by eliminating unnecessary
changed the initialization of lists for keys and updates in ManagedSelector . java to streamline the code by eliminating unnecessary variable declarations
added a set of excluded datasource names to the SpringDataSourceBeanPostProcessor class to allow users to exclude specific Spring datasource beans from processing
added a call to storeUndoInfo ( ) in TableValuesView and removed unnecessary null check for cb in TableValuesPanel to ensure undo information
camel - 15836 - camel - aws : use specific client for kinesis client instead of default config
refactor channel triggering logic in VelbusSensorHandler to use a loop for better readability to improve code clarity and maintainability by
disabled unfavorable benchmarks in LocalCacheSelectorCode and modified delayable logic in BoundedLocalCache to disable tests due to unfav
added a test for illegal database names and improved error handling in the IoTDBSessionSimpleIT and PartialPath classes to ensure that illegal database
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly cleared after garbage collection
changed variable names from ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and refactored margin calculations to
refactor code formatting and improve readability in CharTokenizer . java to enhance code maintainability and clarity
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
cloudstack - 5892 : fix typo in xenserver _ network _ label
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 6
removed the private Set < String > metricNames and its getter method from SolrCore . java to streamline the code by eliminating unnecessary
replace usage of ` URI ` with ` Path ` for obtaining the working directory and absolute path in ` MavenManifestFactory . java ` to
replaced direct calls to ` System . getProperty ( " mac " ) . toLowerCase ( ) ` with a static final variable ` IS _ MAC
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the codebase
clear the slotList and populate it with another ' slotList ' instance to ensure the correct slotList is maintained from another ' frame '
initialize m _ predCount to - 1 in PredicatedNodeTest . java to initialize m _ predCount to - 1 before usage to reset
added imports and implemented the ` mergeProperties ` method in ` ConfigurationSpringInitializer ` to retrieve and merge configuration properties from the application
refactor logging setup to use ` org . slf4j . Logger ` instead of a switch - case structure to improve code readability
replaced instances of HashMap with LinkedHashMap in multiple classes to maintain the order of elements in the collections
added logic to locate jdbcHandlerMap if it is null and the type is an instance of Object to ensure proper retrieval of JDBC handler mappings for
added debug logging statements in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter to provide insight
updated the handling of the wellformed string in LocaleUtils . java to trim trailing semicolons to ensure proper parsing of language ranges without trailing
modified Http2ServerResponseImpl and VertxHttp2Handler to execute closeHandler on the handler context to ensure that the closeHandler is called
improve performance of xssfevaluationworkbook . gettable ( )
updated schema text formatting logic to check for BASIC instead of verbose to improve clarity and maintainability of the code
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to align with the
replace HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure predictable iteration order of data structures
added a check for properly cloned TableScanOperator lists in SkewJoinOptimizer . java to ensure the operator tree is properly cloned before proceeding
added a null check for the knownClient and modified the client retrieval logic in DynamicRegistrationClientConfigurationService and JsonFileRegisteredClientService to improve
fix the issue that statlist . close ( ) be n ' t clear ( # 187981 )
initialize userName , productName , and driverClassName with an empty string in MutableDatabaseInfo . java and MutableJdbcDriverInfo . java to ensure
updated the permission reference from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharing
added support for reading long values from a LongBuffer in ByteBuffersDataInput and ByteBuffersIndexInput to improve performance by handling large long data
replaced long long fields with separate sec and nsec fields in UnixFileAttributes . java and updated time conversion logic in Basic . java to
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior of humongous regions
added visibility control for the search bar in the AllAppsContainerView to improve user experience by controlling search visibility based on user preferences
( chore ) camel - env : use env . routes ( ) instead of env . router ( )
added null checks for ' cur ' and ' next ' in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` to handle page reloading in the menu to enhance user experience by allowing users to navigate to
changed log level from info to warn for non - existent entries in SQLManager to provide more granular control over logs that may lead to errors
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime errors
load extension from service loader instead of lookup from factory
added a closeTable ( ) method and overridden the finalize ( ) method in HiveHBaseTableInputFormat . java to ensure proper resource cleanup
added stopStatementExecutor ( ) method and logging in JdbcConnector , HiveViewImpl , and JdbcConnector classes to ensure proper resource management and enhance
updated XML document handling features and refactored hints initialization in multiple classes to improve XML document validation and ensure type safety during external entity loading
replaced JdbCommand . cont ( ) with a call to jdb . contToExit ( 1 ) and added OutputAnalyzer to improve
added a method ` getType ( Uri uri ) ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to provide a
replaced direct usage of runnable with Future in ExpressionThreadPoolManager to improve code clarity and maintainability by using explicit type casting
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure the correct HTTP port is used based on
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to ensure proper listener management for the button table
updated DEFAULT _ BATCH _ SIZE to account for the number of available processors to optimize batch size based on available processors for better performance
[ hotfix ] [ runtime ] log the exception when establish resource manager connection in taskexecutor
initialized ClassFile to null and updated exception handling in LambdaRewriter . java to improve null safety and enhance exception handling during class loading
improved error message in IllegalArgumentException for min and max parameters to enhance clarity in error reporting for better debugging
updated onMessage method signatures across multiple classes to include ' owner ' and ' entity ' as a parameter to enhance message handling by associating messages with
added new interfaces for managing database , Cursor , and Row in the com . codename1 package to provide a structure for managing database operations and
refactor assertion classes in multiple files for consistency to improve maintainability and readability of the codebase
# 113 - enh : add setbeanid ( ) method to ebeanserver to set bean id
updated the method to use ` getAddToSiteDescriptorXsl ( ) ` instead of a hardcoded xsl file to improve maintainability and
replaced direct instantiation of RequestMatcher with a list to store matchers to allow for multiple matchers to be applied to the security context
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource instances
move request / response from abstracthttp11processor to abstractprocessor so it can be reuse
updated logging messages and error messages in FileManager . java for consistency to improve clarity and maintainability of the logging during saving operations
reset mock control in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource cleanup and optimize resource management during
updated import statements in SyntaxTests . java to remove unnecessary class references and streamline assertions to improve code readability and maintainability by standardizing
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
simplify the parserdecorator by use the default mime type registry a fallbackparser
update fmlsecuritymanager . checkcallclass and fmlsecuritymanager . getcaller to return " none " for class that do n '
removed redundant parameters in AccountUtils and adjusted variable assignments in IndexedForest and CustomPopup to simplify code and improve readability by eliminating
updated the method name from " swap " to " rename " in TestCoreAdminApis . java and modified the parameters for the RENAME
added a test for JSX comments and refactored lookahead checks in the parser to improve test coverage and ensure correct parsing behavior
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording during test execution for debugging purposes
updated end - to - end tests to expect parsing error instead of failure when Buck config is missing to improve error handling and provide clearer
added physical memory checks and error handling in TestStringBufferAndBuilderGrowth . java to ensure the test does not exceed available resource limits
refactor ` MapToLocalDateConverter ` to use ` ConversionService ` instead of ` ConversionService . SHARED ` for conversion operations to
added a success variable to the HiveMetaStoreClient class to indicate successful execution of the meta store operation
updated string comparison from ` = = ` to ` . equals ( ` ` * ' ' ) ` in ` ResourceReferenceInfo . java `
added support for " amp . twimg . com " in tweet text checks and activity to enhance user experience by allowing users to view tweets
marked the AreaReference class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
updated assertions and reference kind handling in MemberName . java to improve clarity and correctness of method references
updated the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization around the ` runChange `
added a conditional check for MouseEvent in the EditNodeTextField to improve event handling logic for better usability
camel - 1566 : camel - core - allow to use static method in bean expression . thanks to benjamin for
update copyright year to match copyright year .
refactor exception handling in AgentRunnerTest for clarity to improve readability and maintainability of the code
updated multiple Java files to provide meaningful descriptions for dependencies and plugins to improve clarity and usability of the project property management code
replaced direct calls to activeGroup . faces with a local ArrayList for faces management to improve code readability and maintainability by reducing redundant
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
rename variable ` reentrantLock ` to ` lock ` for consistency to improve code readability and maintainability
updated the method ` getBomReference ` to include the ` mavenPackaging ` parameter and adjusted its usage in ` PrintMavenAsCy
modified back ( ) method to accept a component parameter to ensure the correct component is used for back navigation
refactor conditionals for TLS authentication in SASLAuthentication . java to improve code readability and maintainability
updated annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to use ' T ' instead of ' T @ Nullable ' to
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple Java files to ensure consistency in accessing configuration
bug fix : do n ' t remove boards pane when select a sheet
danielwagnerhall : add a getter for the session id in the remotewebdriver class .
added null checks before setting time interval in ImportContainerImpl and introduced new time interval assertions in ImporterGEXF2Test to ensure time
removed logging level from server port command in MockServerContainer . java to simplify server port configuration by eliminating unnecessary logging
updated error logging to include exception message instead of the exception object to improve error reporting for better debugging and error reporting
dispositionprocessor : use crawldocrawlmetadata instead of robotshardoringpolicy
( chore ) camel - it : disable flaky itestsystemtest
camel - 16400 : camel - scan - maven - plugin : fix test on window
added a method ` alternativePath ( ) ` to return a ` DataInputStream ` and ` ByteArrayInputStream ` to handle alternative path functionality to provide a way
logentryparsetester : use getfirstfilter ( ) . init ( ) instead of input . init ( )
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by allowing additional protection domain configurations
added dispose ( ) method to release resources associated with mesh , batch , and texture in WaterRipples to ensure proper resource management and
added a configuration option to disable unsafe external table optimizations and optimize dynamic partition pruning to improve performance by disabling unnecessary optimizations and operations
updated the description of the Authorization header from " use basic authorization with ` base64 ( resource _ server : shared _ secret ` to " No
removed the flag for showing the wallpaper in the Launcher and set wallpaper offsets in the Workspace to allow the wallpaper to be displayed
modified the return value of ` SybaseASADatabase . java ` to ` true ` in ` SybaseASADatabase . java `
nifi - 5353 : add autocommit = false to set commit / rollback on cleanup
solr - 3809 : fix config file replication when subdirectory be use
change the target ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency in the identification
change the return type of frame methods in multiple classes from ByteBuf to void to allow for more flexible frame handling by allowing the output buffer to
removed unnecessary parameters from multiple constructors in OAuth2 - related classes to simplify code and improve readability by eliminating unnecessary parameters
added an extended description for splitting text into key - value pairs in GenericUDFStringToMap . java to improve clarity on how to use
replaced the static final String INSTANT _ STAMPLE with a truncated version of the current time in PlainFormatter . java to improve performance by
updated timeout constant from 1000 ms to RETRY _ CLOSE _ TIMEOUT _ MS and modified the close method to handle retry logic to improve reliability
hhh - 14709 remove reflection - based access to privatelookup in classloadingstrategyhelper
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the purpose of the
disable a test that should not have at least one sample result
updated the error message from " rows and columns must be greater than zero " to " must be greater than zero " to clarify that
updated string concatenation and formatted return statements in DecisionNode , WagonCART , and DecisionNode . java to improve readability and maintain
added functionality to track and sort BoundSheetRecords in CSV processing to enhance functionality to display sheet names and their records in a structured manner
refactor calculations for average impulse in ThrustCurveMotor . java to improve clarity and accuracy of thrust calculations
nifty - jme : do n ' t set input manager when create input system .
added an assertion to ensure offset is non - negative in UniverseBuilder . java to prevent potential errors when accessing instance identity hash code fields
remove deprecate block . getmesh ( ) , use blockmesh instead
[ hotfix ] [ yarn ] rename keytabpath to localkeytabpath in yarntaskmanagerrunner
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matchers in ` LineReaderImpl ` to conditionally handle empty words to improve
fix : do n ' t push commitlog replica update when write _ commit _ log be true
added functionality to auto - open the web button in the CaptureActivity and PreferencesActivity to enhance user experience by allowing users to automatically open the web
added a test method ` testBatching ` to ` JoinedTableTest . java ` to verify batching behavior for Hibernate to ensure
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate entries to enhance clarity and debugging when persisting items
deprecated the use of the deprecated ` format ` option in ` CucumberOptions ` and updated related plugins accordingly to encourage the use
removed the save ( ) method from PMS . java to streamline code by eliminating unnecessary method calls
removed unnecessary check for empty text in back key handling to simplify the code for better readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new ` Capacity . java ` class with multiple capacity tests
replace ` goHome ( ) ` method with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to enhance functionality
added support for handling endnotes in XWPFDocument and updated related logic in XWPFParagraph and XWPFWordExtractor to enhance
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context during authentication transactions
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the versioning of the GDALVersionInfo
added a new file ` Lifecycle . java ` to manage network error handling to provide a mechanism for managing network errors in the application
updated the ` addURLToDownload ` method to include a ` getDACookie ( ) ` parameter and added a retry mechanism for 404 errors
removed unnecessary imports and simplified loop structure in RocketFigure . java to improve code clarity and reduce unnecessary complexity
added support for retina mode in PJOGL . java and updated viewport and scissor calls to use FBObject . TextureBuffer
add an option to auto - select project offline if pub unavailable
replaced PackedInts with BlockPackedWriter and updated related logic in DiskDocValuesConsumer . java to improve handling of block size and
fix order of routestatus in defaultrouter ( # 2325 )
removed unnecessary data frame management in GoAwayTest . java to simplify response handling and improve code readability
added fluent property introspection and corresponding test for fluent bean property management to enhance the functionality and ensure proper handling of fluent properties in map objects
updated ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to use ` HttpResponse ` instead of a generic ` ListenableFuture < ? > `
updated file URL handling to include a folder parameter and added related tests for sorting to enhance testing capabilities by allowing sorting of files in a specified folder
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity and accuracy of
added support for write image scaling on aarch64 pdf
added aggregation function handling to the TSServiceImpl class to enable dynamic selection of aggregate functions based on the processor ' s parameter
replaced LuceneTestCase with WithNestedTests . AbstractNestedTest and added cleanup method in TestSystemPropertiesInvariantRule . java to
added xcap enable / disable functionality to the PresencePanel based on the XCap server URI to enhance user experience by allowing dynamic configuration of the
ww - 4359 add ` ` struts . handle . exception ' ' config parameter to dispatcher .
added stopEditing methods to manage action finishing of text editing to improve user experience by allowing actions to finish editing operations
nifi - 1883 : fix npe in controlrate when group attribute name be null .
removed the ` includeUndoModify ` parameter from the ` showDialog ` method and added a preset selection checkbox in the ` ComponentConfigDialog `
add ` ` onerror ' ' handler for send message to client
added a condition to check for Windows OS in HTMLDataFlavorTest . java to ensure the test is only run on Microsoft Windows to avoid
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel . java to enable snapshotting of transactions in the database
replaced the direct addition of a new record ID with a loop that waits for a timeout before adding it to the queue to ensure thread safety
use java . util . zip . zipfile instead of jrecompat . getinstance ( ) .
added a check for null command class before initializing services in RegisteredServiceSimpleFormController to ensure that services are only created when a command class is
update default disk _ failure _ policy to be ` ` ignore ' ' instead of ` ` best _ effort ' '
removed the public access modifier from multiple method declarations in RipperInterface . java and RipStatusHandler . java to improve encapsulation and
[ java ] do n ' t use ipv6 address for discovery .
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline the job identifier factory configuration
updated import statements and method call in PinotSegmentRebalancer . java to include ClusterDataCache to enhance partition assignment management by utilizing a
kristianrosenvold : remove container delete from v140docker and v140docker protocol
danielwagnerhall : fix parsing of pipe - separated command
retry createglossarytests with retry on failure
updated references to ` Components . COMPONENTS _ SCHEMAS _ REF ` in ` ModelResolver . java ` to ensure consistent reference to
updated EntityDeletedEvent to utilize JsonUtils for reading JSON data to improve code readability and maintainability by utilizing a unified utility method
added support for GOP format matching in FormatConfiguration . java and updated related imports in DLNAMediaInfo . java and LibMedia
added a new file TestProfileReturnTypePrinting . java with methods to evaluate return type printing performance to verify the correctness of the return type
added locking mechanisms to manage configuration access in ParseConfigUtils . java to ensure thread - safety when accessing shared resources
added acquiring and releasing of columns segment operator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent memory
simonstewart : unignoring a couple of test in the firefox profile test
updated the method signatures and return types in HasAndroidDeviceDetails . java to improve type safety and clarity to enhance code readability and provide
do n ' t add non - dead bug to projectstats
# NOI18N - fix color for disabled label in import panel
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code for better readability and maintainability
added logic to return a current date if the recurrence is empty in the future to ensure that the scheduled action returns a valid date when no week
replaced the upload button ' s click listener with a menu item for enabling upload functionality to streamline user interaction by utilizing a dedicated
polish ` ` move messageexpressionconfigattribute ' ' to messageexpressionvoter ' '
added loadMetaData method implementation to MeXBTExchange and RippleExchange classes to enable loading of exchange metadata from an InputStream for improved
added a custom WritableSerializer to CrawlDbReader for JSON serialization of Hadoop Writable types to enhance the serialization capabilities of Hadoop Writable objects for better
remove testjaspicbasicauthenticator that do n ' t work with jaspic
added discovery service to the mdns service annotation to allow for customization of the discovery service in the application
fix a nullpointerexception when there ' s no message
added a custom ForkJoinWorkerThread to the ForkJoinPool instantiation in BPIndexReorderer and TestBPIndexReorderer to
removed redundant assertions for DATANODE and NAMENODE role in RoleCommandOrderTest . java to streamline tests by eliminating unnecessary role
added ` restoreLocalInfoFromTableInfo ( ) ` and ` dedupWithTableInfo ( ) ` methods in ` PartInfo . java `
standardized spacing in if statements across multiple files to improve code readability and maintain consistency
added a transformation matrix to the sprite batch in BitmapFontTest . java and changed the logo file format from " data / verdana39
[ hotfix ] [ python ] fix streamphysicalpythongroupwindowaggregate false positive for built - in aggregate
do n ' t send a node up / down event if a pending echo have already be mark .
fix miss storageproxy check for unreachable token owner
fix a bug in CoordMultiplyReplacer and add a test in GeoSymbolicTest to ensure correct handling of variable assignments and improve test coverage
updated content type handling in FormAuthenticator and SavedRequest classes to ensure proper content type is set based on saved request properties
updated access modifiers and added null checks for display in XToolkit . java to improve encapsulation and ensure local environment is not null before accessing
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced the Object metaLock with a ReentrantReadWriteLock for thread - safe locking to improve concurrency management by using read and write
added a test method to verify identity provider retrieval in different identity zones using a Zones token to ensure correct functionality of identity providers in different identity
updated job scheduling to use an ExpireJob in ObjectTypeNode . java and added null check for timestamp in PointInTimeTrigger . java to
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
fix ( broker ) : update subscription version when rebalance change
chore ( cairo ) : add ` cairo . detached . mk . mode ` property to specify mk - dir mode for detached table ( #
[ java ] do not send message to slow down when there be a slow follower .
fix ` ` auth ' ' and ` ` authors3 ' ' label pattern for year
refactor code to utilize CxxPlatforms for parsing time dependencies in DBinaryDescription , DLibraryDescription , and DTestDescription to
[ googletts ] clean up resource when the osgi service be deactivates
camel - 14850 : file / do consumer should not delete the done file if the name contain ` ` { file : name } '
added a new boolean flag ` reopenReaders ` to ` SolrConfig ` and modified the condition in ` SolrCore ` to check its value to
added dialect version attribute to mapwriter .
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to support date
added a new method ` dup ` in ` Attr . java ` and a new test class ` PrimitiveTypeInBoundForMethodRefTest .
refactor ` Condition ` class to an interface and update related methods to use lambda expressions to improve code readability and reduce boilerplate code
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java to improve query performance and accuracy in scoring calculations
removed several unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and reduce unnecessary dependencies
updated the method signature of ` providesUploadController ` to use ` direct _ nearby _ upload _ prefs ` instead of ` context ` to
added support for the " SYSIBM " and " SYSDUMMY1 " database modes in the Parser and Mode classes to enable compatibility
polish ` ` allow to configure a non - refresh scope sampler ' '
provide a way to get the last pid id for poifs ( thanks to franz for the patch )
replace NaN check withFinite check for noData in GeoTiffReader . java and add a new test case for handling negative infinity in Geo
updated import statements and refactored the execution logic in CliDriver . java and SessionState . java to improve error handling and ensure UUID generation
use rx . schedulers . from ( ... ) instead of executor - > observable . create ( ... ) in mockrestadapter
[ drools - 1084 ] add default implementation for ruleconditionmapper # selectbyruleidset ( # 1084 )
added a method ` addExitDescription ` to ` ExitStatus ` and removed redundant stack trace printing in ` AbstractJob ` and ` AbstractStep
fix npe in multiblockrenderhandler when the player do n ' t have the player .
renamed the variable ` columnFamily ` to ` columnFamilyColumn ` and updated related references in ` SliceReadCommand . java ` to improve clarity
removed unnecessary import of Collections and adjusted the range length calculation to streamline code for better readability and maintainability
refactor DefaultIOSInput to utilize UIAlertController instead of UIAlertView to improve code organization and enhance user experience by utilizing UI
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
updated parameter name from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more d
added an assertion to check if a message is null in AdvServiceTest to ensure that the service message retrieval is correctly validated before proceeding
refactor key handling in MappingMongoConverter to improve type safety and clarity to enhance code readability and maintainability by streamlining key
updated Timber log statement formatting in NearbyMapFragment . java to improve readability of log messages for place details
camel - 14263 : camel - core - remove camelcontext # getjavatype from the list of deprecated component
updated FuzzyLikeThisQuery to handle null terms more gracefully and added a new test for non - existing fields to improve robustness and ensure
refactor writeApplicationsLinks method to accept a boolean parameter for tabular list handling to improve readability and maintainability of the code by reducing
[ ds - 3952 ] remove deprecate dspace . utils . identifierservice and use identifierservicefactory . getinstance ( )
updated ` assignBytes ` method calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure compatibility with the
changed the method signature of getDisplayScript from abstract to a concrete implementation to allow the method to provide a default implementation for script retrieval without requiring an
danielwagnerhall : do n ' t use keypress / keyrelease in the remote webdriver to unignoring
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added a wait mechanism when there are no active interfaces in NetworkConfigurationWatcher . java and suppressed null checks in NetworkManagerListenerImpl . java to
added method ` getAllEmbeddedObjects ` to retrieve embedded objects from ` HSSFShapeContainer ` and implemented corresponding tests in ` TestEmbeddedObjects
removed the import of Shdr from ShaderNodeLoaderDelegate . java to eliminate unused dependencies and streamline the code
replaced variable names from ` hostParams ` to ` roleParams ` for consistency to improve code readability and maintainability by using more d
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font types
use gl11 . glpopattrib ( ) instead of glstatemanager . popattrib ( ) in hourglass
updated calendar handling in LiveTvGuideActivity to use the current time of the program list to ensure accurate display date formatting based on the current
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new classes ` CommonParentTest
added calls to dlopen for specific library files in the JREUtils class to load relevant library files for improved functionality
refactor variable substitution logic in FunctionParser and introduce a new method for handling multi - variable functions to improve code clarity and maintainability
add loop guard guard to protect non - overflowing unsigned range .
improve type conversion of ` ` instanceof ' ' to ` ` instanceof ' '
added a static LocalizedString class and updated various classes to utilize it for method arguments to improve localization support and enhance code readability by
add serverconfig . disablestartclasspathsearch ( ) to disable classpath search .
make data line format field final and use arrays . copyof for performance
update default value of the retries attribute from 0 to 2 in Reference . java and related test cases to increase the default value for ondisconnect and
added settings handling and updated command - line usage instructions in TexturePacker . java to enhance functionality by allowing specification of settings
added text views for uploaded images and used byWiki in AchievementsFragment . java to improve user interface by displaying upload count and wiki
added tests for annotation processing round and Enter scenarios in TranslatingJavacPhaseTracerTest . java to ensure proper handling of annotation processing and
added ` categoryinfo ` field and its getter method to ` MwQueryPage ` and modified ` CategoryInterface ` to include it to enhance
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error reporting
added accessibility support to TaskbarStashController by utilizing AccessibilityManager to enhance accessibility features and improve user experience
added a condition to check for the presence of the ' ^ ' character in the signature parsing logic to ensure that the NoSuchElementException is thrown when the
updated access flags handling and added multiple test cases for stubbing various Java classes to ensure correct access control and verify functionality through new stubbing tests
added null checks for input in IntervalFilter and LowpassIntervalsSource classes to ensure input is not null to prevent potential NullPointerExceptions
added unit tests for ` MapInterfaceTest ` to validate iterator behavior to ensure correct behavior of the ` next ( ) ` method on a map
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization of the TreeMap class
[ te ] fix timestamp conversion in imagedata to use second instead of milli .
grobcov do n ' t support f2m locus , make it possible to use grobcov instead
added encryption key deletion for accounts in AccountRemovalJob . java to ensure public and private keys are removed for accounts in the data store
( chore ) camel - netty : make keep - alive http header name consistent across the codebase
fix npe in postjoinmapoperation when there be no interceptor
no need to use custom inlining processor for text , comment , eclipse and cdi
remove spill support from longhybridhashtable , binaryhashtable and longhybridhashtable
refactor environment variable retrieval to use Optional for better null safety to enhance code reliability by avoiding potential NullPointerExceptions
ww - 4892 fix nullpointerexception when extension be null .
added SerializableMode import to Mockito . java and corrected code formatting in PluginSwitch . java to enhance serialization support and improve code readability
fix bug where @ nullable on bean do n ' t work correctly .
added support for parsing isolation level clauses in select statements in the Parser and TestCompatibility classes to enhance database compatibility checks and improve test coverage for isolation
added new constants for transport mode and HTTP path in HiveConnection . java to improve code readability and maintainability by reducing boilerplate
added an ` isCacheable ` method that always returns false in ` GlobalOrdinalsWithScoreQuery . java ` to ensure that caching
added a new file TestStrangeControl . java that implements a thread to test the StrangeControl functionality in a multithreaded environment
updated the generated file extension from " . json " to " . jsfile " and " . jslib " in JsFile and JsLibrary
added selection start and end variables along with setSelection and getSelection methods in ShadowEditText . java to enable customizing and retrieval of text selection
refactor gRPC server startup to use Closeable for better resource management to ensure proper resource management and prevent potential memory leaks
modified the ` use ` method in ` Jooby ` , ` Router ` , and ` JoobyTest ` classes to
added a null check for fst in FreeTextSuggester . java to ensure that Lookup is not supported at this time to prevent runtime errors
updated line separator handling and improved URL verification in T6729471 . java to ensure consistent line endings across different operating systems
added ABI writer class loading functionality in JavacInMemoryStep . java to enhance processor management by allowing the use of an instance of
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress the warning about the use of inverted
log a warning if pullmessageservice have shut down
refactor EnergyEndpointer class to improve code readability to enhance maintainability and facilitate future updates
updated the handling of displayed column keys in ` ComponentPresetChooserDialog . java ` to improve the determination of diameter indices based on the
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase to improve code cleanliness and reduce unnecessary dependencies
camel - google -heets fixed switch / cases indentation see camel - 14540
added a default method to retrieve the exported header style in CxxLibraryDescription and updated related references in CxxLibraryMetadataFactory and Cxx
deleted the file Constants . java and DistanceUtils . java to remove unused components to clean up the codebase
replaced the usage of ` Pattern . compile ( DELIMITER ) ` with direct substring extraction in ` RandomPartitioner . java ` to simplify
ensure fallback linker be initialize at run time , instead of fail build - time
add a test for creating inline rolebindings and refactor the create method in RoleBindingOperationsImpl to improve test coverage and simplify role binding creation logic
added debug logging for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging of session cookie configurations
update file name generation to use the current day of the year instead of the current day to ensure accurate file name generation based on the current year
fix a typo in the variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve code readability and
added error handling for invalid options in JavapTask and implemented a new test class T8033711 to improve error handling and ensure
replaced usage of ` collect ( toList ( ) ) ` with ` toList ( ) ` in multiple Java files to simplify code and improve read
[ hotfix ] [ runtime ] change error to warn in taskdriver
[ flink - 20527 ] [ network ] [ network ] disable tiered storage for all result partition
refactored issuccessstatus check into a helper function to improve code readability and maintainability
added useGL20 configuration to Cuboc and modified LwjglApplication instantiation to enable OpenGL20 support in the application
remove unnecessary check for void return type in jimplebody . java
updated imports and method signatures in OutputMacroExpander . java to improve code organization and enhance command line argument handling
fix intermittent test failure due to non - light job
added additional conditions to check for file paths containing " \ \ build \ " in the duplicateWords condition to ensure that only valid file paths are
[ # 7370 ] instructor : response comment : add data to instructorfeedbackresponsecomment load page data . ( # 737
removed unnecessary whitespace in the ` Container ` class to improve code readability and maintainability
added a new file TestEscapeThroughInvoke . java that implements a class with methods to test object escaping to demonstrate the behavior of
replaced direct calls to ` stream . skip ( start ) ` with Apache Commons IO for better readability to improve code maintainability and
added interceptor handling in ConnectionPool and improved error logging in DataSourceProxy to enhance connection pool management and provide better error reporting during SQL execution
changed the catch block from Exception to Throwable in CoreContainer . java to handle a broader range of error scenarios
hbase - 23393 lrublockcache # evictblocksbyhfile should return 0 if cache be evict from the map ( #
removed unnecessary check for zero task count in RecentsView . java to simplify code and improve readability
added instance config change listener in HelixBrokerStarter and increased sleep duration in HelixServerStarter to improve routing configuration handling and reduce
added CoinmateStatic and CoinmateMetadataServiceRaw classes and integrated it into CoinmateExchange and CoinmateMetadataServiceRaw
[ mng - 5391 ] fix the issue that basedir - system - path be not point to the project basedir .
pdfbox - 4892 : avoid duplicate key , a suggest by valerybokov
[ beam - 8470 ] add displaydata to ptransform for easy handling of display item spec .
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSION _ ERROR , null ) ` with ` assertThat (
enable weak cryptographic algorithms in the ClientJSSEServerJSSE configuration to enhance security by preventing encryption vulnerabilities
updated error messages in OptionData . java for clarity and consistency to ensure correct usage of subcommands and subcommands with OptionData
update module - info . java files for mmm and ppp modules to ensure proper module dependencies and organization
added error handling for connection ensureions in IOSImplementation . java to improve robustness by providing clear error messages when a server error occurs
updated sCheckingEvents assignment in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper cleanup of
added exception handling and improved error logging in FileSinkOperator . java and SortedDynPartitionOptimizer . java to enhance error management and ensure proper
added diagnostic output to the return statement in SchemaGenerator . java to provide visibility into diagnostic information during task execution
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in the ` SemanticAnalyzer . java ` file to improve exception
updated test cases in DataSourceMonitorTests . java to improve test coverage and reliability of data source monitoring
added a set to track loaded resource paths and modified the scanning logic to prevent duplicate resource scanning to improve performance by avoiding redundant scanning of loaded
fix npe in testserviceloader when there be no test instance .
added null check for ` o ` in ` RoutingInBoundHandler . java ` and updated response handling logic to ensure proper error handling and improve
[ ekey ] allow natip to be pass in . ekey . natip . fix npe .
update imports and class references in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Serializer to align with the new
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added checks to ensure the HttpParser ' s header and body buffer are valid before setting the state in HttpConnection . java to improve handling of
refactor the timeout handling in MultiTimeout . java to use AtomicReference for the upstream subscription to improve clarity and maintainability of the subscription
optimize leveledmanifest . getoverlappingstarvedsstables ( ) for good performance
added a test annotation to the TestOrcTimezone1 class to facilitate testing of ORC timezone functionalities
updated conditional logic and introduced substrings for metrics and timers in Debug . java to enhance functionality by allowing specific substrings for metrics and timers
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve robustness
updated JTable renderer to handle null columnClass and added a new test class Test6888156 to improve robustness of JTable rendering
added a check for the existence of the environment before adding it to the args list to ensure the correct shell path is used when the environment is
reduced the number of deleted feeds from 10 to 1 in DatabaseCleaningService . java to allow for more than one subscription to be deleted
replaced List with Set for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
updated method calls in BTreeMapTest . java to use transaction disable and fileMmapEnableIfSupported instead of deleteFilesAfterClose to
modified iterator initialization in SortedIntList and added a new test case for iterator allocation to ensure proper iterator behavior and validate functionality through unit testing
added unregister method call to JMXHelper in DefaultRemoteProxy . java and updated exception handling in JMXHelper . java to improve resource management and enhance
updated default writebuffer size from 4MB to 64MB in RocksDBConfigurableOptions . java to accommodate larger writebuffers for the
removed the first parameter from the constructor of Style to simplify the object initialization by eliminating unnecessary parameters
fix checkstyle issue in util / facebookshare . java
removed JSON graph logging and configuration for the pipeline in SamzaRunner . java to streamline the execution process by eliminating unnecessary output
* update the jme3 example to use the new jme3 library .
[ hotfix ] fix typo in looprotatebadnodebudget doc
updated the convertToMongoType method to include TypeInformation as a parameter across multiple classes to enhance type safety and ensure proper conversion of documents with nested pol
[ web ] display ` ` i ' ' instead of ` ` complex ' ' in inputboxes
simonstewart : make sendkeystoactiveelement return an empty array instead of a comma separate array
added methods to create a scaled BufferedImage instance with validation for target dimensions to ensure that the image dimensions do not exceed the specified target dimensions and prevent
removed unused methods and refactored the extendArgumentCheck and extendWrapStore methods in DBMaker . java to improve code clarity and maintain
fix issue with shift state not be update when tap on keyboard .
removed the ` DETECTED _ ACTIVITY ` constant from ` BundleConstants ` and updated related references across multiple files to streamline the code
updated import statements from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket
removed unused import of Buildable in AaptPackageResources . java to clean up the code and improve readability
added comments to clarify unused fields in multiple Java files to improve code readability and maintainability by providing clearer comments
updated the exception message in WebSocketUpgradeHandler to include the response status to provide clearer error context for invalid upgrade protocols
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed redundant code for plot owner checks in Merge . java to streamline permission handling for plot ownership checks
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline the code by elimin
replaced imports from Freetts ' s PhoneSet with MaryProperties ' s featureprocessors and updated the phone set initialization to improve code
refactor stripQuotes method to use PlanUtils for string manipulation to improve code maintainability and leverage existing utility methods
refactor rendering methods in DLNAResource and Request classes for improved clarity and functionality to enhance the rendering context management and ensure correct
add resolutiongroup and project . getremoteartifactrepositories ( ) when create defaultpluginmanager .
( chore ) camel - cxf : close spring context in unit test
chore : integrate new gapic - generator - java and rules _ gapic ( # 49 )
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable tests related to frequent failure
added a new File object instantiation in the ZipFile class to create a specific file based on the provided name
added a deprecated method handleAll that returns finallyBlock to signal that the method is outdated and should no longer be used
make channel a non - nullable by default
added call stack logging to GenericDAOImpl and introduced StackTraceUtils for reflection to enhance debugging capabilities by providing detailed stack trace information
removed the @ Test annotation from FormLoginIntegrationTests . java to eliminate unnecessary test execution for better test coverage
fix for mondrian - 1343 - unparsing of function call with parenthesis
refactor GET _ CONFIGS _ SELECTED _ MORE _ THAN _ QUERY to use cluster _ name instead of type _ name to
8015353 : fix innocuousthread supress warning for jdk 11
updated JsonTreeReader to improve error handling for unexpected json element reading to enhance robustness by providing clearer feedback on unexpected state during JSON element
added support for an optional " -- " option in TestCommand and a corresponding test case in ExternalTestRunnerIntegrationTest to ensure proper handling of
added overloaded methods ` dedup ` and ` indexSolr ` in ` SolrDeleteDuplicates ` and ` SolrIndexer ` to facilitate
[ hotfix ] [ table - common ] make the example use blink planner
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure a clean state for database operations
updated Progress and RSSReader classes to manage progress percentage and auto - showing behavior to improve user experience by allowing dynamic display of progress based on user
added a check to ensure the parent file exists before proceeding to prevent errors when the parent file cannot be read
added methods to write document to an output stream and safely close the document output stream to improve resource management and prevent resource leaks
updated print statements to include newline characters for runOptions , sketch , and exportClassPath to ensure proper formatting of output for better readability
replaced Box _ root with BlockBox _ root and added getter methods for its root and dots per point to enhance functionality by providing access to
added authentication logic for generic user search in ` CustomQueryFilterFactory ` and updated test configurations in ` TestLdapAtnProviderWithMini
added default port handling in NettyHttpServer , DefaultRouteBuilder , and related classes to improve route routing flexibility by allowing dynamic port assignments
[ snmp ] fixed npe in snmptargethandler and its test
added permission check to instructorfeedbackeditpageaction to show only instructors with submit permission .
deprecate org . hibernate . settings . availablesettings in favor of org . hibernate . settings . availablesettings
refactor path resolution logic in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve path handling and
updated log message formatting in DocumentsWriterPerThread . java to include additional documentstores to enhance clarity of log output for better debugging and
change dirt block output to unlocalized name , fixes # 149739
pdfbox - 4892 : fix typo , a suggest by valerybokov
increased the lock size from ` threads ` to ` threads * 1000 ` in ` FeedRefreshUpdater . java ` to accommodate
updated the ` exactSearch ` parameter in ` MetadataIndexNode . deserializeFrom ( ) ` and added a test assertion in ` MeasurementChunkMetadata
do n ' t pass a date format object to the method , since it be n ' t use anymore .
added preferred size adjustments for the pane in NavigationShareTab . java to improve the visual appearance of the FList by adjusting the
removed OffsetAttribute handling from BeiderMorseFilter and added a test for custom keyword attributes in TestBeiderMorseFilter to streamline
updated multiple Upnp audio and handler classes for consistency to improve code maintainability and readability across the Upnp library
fix erroneous position pass to burst . setcollidedat ( )
added JUnit 5 assertions and improved test factory methods in JsonTest . java to enhance test coverage and ensure proper exception handling for JSON serialization
[ hotfix ] [ runtime ] fix typo in mutablecontextdatasupplier javadoc
changed catch block from ` Exception ` to ` Throwable ` and updated error handling to log a warning instead of throwing a generic error to improve error
changed the parameter from true to https in the KubernetesMockServer constructor to enhance security by allowing HTTPS connections
use stamp of the default math node instead of the original one .
updated response methods in DefaultServlet and DefaultServletTest to allow " GET , HEAD , OPTIONS " instead of " METHOD _ NOT _ ALLOWED
tika - 3496 -- make sure to use locale . us in decimalformat for lat _ long
updated ` ShowFileRequestHandler ` to return an exception instead of throwing an exception for 404 errors and added a new test for handling 404 errors to
added exception handling functionality in ReflectorClassWriter and a corresponding test in ReflectorTest to improve exception management and ensure correct exception handling in the
added a clamp method to the Vector and Vector2 classes to enable vector clamping between specified min and max values
added OAuth2 client scope handling and updated authentication creation in ChainedTokenGranter . java to improve token flow by ensuring correct scopes are
updated BC _ instanceof method implementation to improve performance and maintainability of the code
replaced the setSaveFlags method with a static final Logger instance in EditorBottomSheetBehavior . java to improve logging management and reduce unnecessary flags
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and prevent accidental poll
hhh - 14655 fix classcastexception in nativesqlqueryimplementor # addscalar
added caching mechanism for font morx information using WeakHashMap in SunLayoutEngine . java to improve performance by reducing redundant calculations for morx
fix typedset . blockpositionbyhash use intarraylist instead of intbigarray
danielwagnerhall : use session id instead of session id for getcurrentwindowhandle
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future updates
refactor InjectorBuilderImpl to store instances in a map instead of a linked list to improve readability and maintainability of the code
updated ` RawTargetNodeFactory ` and ` BuildTargetToRawTargetNodeTransformer ` to use ` buildTarget . getBasePath ( ) `
modified the result assignment logic in EchoMessage . java to handle null values gracefully to ensure a default value is set when the input value is not
fix connection leak with keepalivemanager in jabber protocol . fix a problem where keepalivemanager be n ' t
removed the ' F ' suffix from the DEFAULT _ LOAD _ FACTOR in IntHashSet . java to simplify the constant declaration for better readability
added a method to retrieve all DataTypePhysicalVariation arrays in VectorizationContext and updated related classes to utilize this method to improve data type management
move htmlassettranslator and stringsresourcetranslator from zxing to client . j2se
modify the logic for returning the overview button status in OverviewState . java to ensure correct behavior when the overview actions are enabled
added JPA entity annotation to BaseActivityEventEntity . java to enable database interactions using JPA in the application
added tracing sections for " TouchInt " in NavBarSwipeInteractionHandler and TouchInteractionService , and changed SYSTEM _ TRACE to false
added a new file ` InvalidOptions . java ` to implement and verify the behavior of the ` javap ` class to demonstrate
added a conditional check to log an error if the number of displays differs from the supported bounds to improve debugging and error handling for incorrect display state
refactor ` getClientIdAndClientSecret ` method to be static in ` OAuth20Utils ` and move it to ` OAuth20UsernamePasswordAuthenticator
change the default value of ` _ unwrapServletException ` from ` false ` to ` true ` in ` ErrorPageErrorHandler ` and update `
added logic to set the status of the ShortcutInfo to DEFAULT in PackageUpdatedTask . java to ensure the infoUpdated state reflects the
camel - 14850 : fixed camel - seda with optional size parameter . thanks to benjamin for the patch .
make sure batch update work for all apps
added HttpClient initialization and validation in ThirdEyeApplication . java to enhance HTTP client setup and ensure proper configuration
added sorting functionality to JobInstanceFetchRequest and modified batch size handling in JpaJobPersistenceImpl to enhance data retrieval capabilities by allowing sorting options
added currency pair handling and improved order cancellation logic in CryptoFacilitiesTradeService to enhance order cancellation functionality and provide clearer error messages
make sure the keyboard be hide when the click do n ' t disappear
use native function handle for memcopy in llvmheap . memmove ( )
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability
make the tooltip block option on the tool tip manager configurable
updated DefaultDateTypeAdapter to accept a specified date style and time style as parameters to enhance flexibility in date formatting and improve handling of date
updated playerSet format from " < UID : " to " ( " in ListCommand . java to ensure proper representation of player IDs in the
added a check for empty lists in the List class to ensure proper handling of empty lists in the code
added error handling in ParametricCallable to wrap CommandException to improve robustness by ensuring all thrown exceptions are wrapped in CommandException
modified the getLikeExpression method to include a boolean parameter for LIKE operations to enhance flexibility in expression filtering based on regex patterns
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to enhance stream supplier functionality by
added locale handling to the runChild method in LuceneTestCase to ensure proper locale context is set for test execution based on available locales
chore ( deps ) : upgrade dependency com . google . cloud : google - cloud - pg to v2.10 . 2 ( #
refactor context handler initialization into a separate method to improve code readability and maintainability
camel - 17850 : camel - test - blueprint : added unit test for routebuilder ref
nifi - 1861 : fix test to check for contains ( ) instead of substring ( ) .
refactor returnTypeSubstitutable methods to remove unnecessary parameters and streamline type checks to improve code readability and maintainability by reducing complexity
added throttle functionality with an enum for CHARS and BYTES in TestExecutor . java to control processing throttle for improved performance monitoring
removed redundant pixel assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve code readability
refactor annotations in mmm and ppp classes to improve code organization and maintainability
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement it to provide a standardized interface for
camel - 16400 : camel - http - do not recognize ' org . apache \ . camel ' a a valid regex pattern . th
added a ability to clear the EntityManager in JpaItemWriter and JpaItemWriterBuilder classes to enable flexible control over entity management during
added null checks for shortcut information in the InstallShortcutReceiver , Launcher , and Workspace classes to enhance stability by preventing potential NullPointerExceptions
updated TwoDimensionalCollectionValuedMap instantiation to include a boolean parameter to enable the creation of the TwoDimensionalCollectionValuedMap with a specific
updated exchange specifications from " btc - e . nz " to " wex . nz " and modified the exchange name from " BTC -
added null checks in OrcEncodedDataConsumer and modified child buffer setting in EncodedTreeReaderFactory to improve code robustness and prevent potential NullPointerException
added null check for segment files in SegmentInfos . java and a test for OpenReaderAfterDelete in TestIndexReader . java to ensure that
[ te ] fix date range in elasticsearch search ( # 4892 )
modify the return statement in DeviceHandler to handle negative and maximum percent values properly to ensure accurate representation of percent values in the calculation process
updated the condition checks for limit in RangeInputStream . java and RangeReader . java from " limit < 1 " to " limit < = 0
camel - 16405 : camel - core - optimize rout configurers to reduce log noise
fix some minor typo and javadoc formatting
updated test classes to extend ` LuceneTestCase ` instead of ` TestCase ` and added a call to ` super . tearDown
added a new ` StatefulMapper2 ` class and modified ` OutputHandler ` to set the next input record in ` StatefulOperatorTest
remove null check before setting bitmap shaders for fill and stroke in the Area and Line classes to simplify code and ensure proper bitmap shad
removed database existence checks from the Blockchain class and updated imports in BlockchainTest to streamline the database initialization process and improve code clarity
trim whitespace from the matched group in SQLPlusSupport . java to ensure consistent formatting of the returned value
improve async connection support for apr / native .
ticket # 4892 : make sure divider location be always at the center of the view .
added health check metrics for controller in the PinotControllerHealthCheck . java and updated the health check method in PinotControllerHealthCheck . java to
hide the sharedAvatars view in LocalFileListAdapter to improve user interface by hiding unnecessary views
remove clientbundle from mebisresources . java since they be n ' t use anymore
updated condition checks in BurstSendReceiveUdpPing , ReceiveSendUdpPong , and SendReceiveUdpPing classes to ensure
added logging level check before executing command in LogInterceptor to avoid unnecessary execution when log level is not fine
replaced CountDownLatch usage with assertWaitUntil for span verification in EventBusTracingTestBase . java to improve test reliability by ensuring
updated locale handling in QueryParser by introducing getter and setter methods to improve encapsulation and streamline locale management
fix order of entry type in the entry customization dialog . it be use a linkedhashset instead of a collection .
[ jbrules - 3514 ] fix bug in manners when use betanode constraint
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` and ` OCSPResponse ` to handle unauthorized exceptions
added serverState variable and modified sleep logic in SSL . java to improve server state management and ensure proper error handling
added a new counter for open connections in SourceCounter and updated related methods in SourceCounterMBean and AvroSource to track and manage the number of
make executionstrategy . execute ( ) and executorserviceexecutionstrategy . fields public , add a builder method .
refactor BuckConfig to use a dedicated method for creating the default Java package finder to improve code readability and maintainability by encapsulating
replaced Writer initialization to use PrintWriter in ScriptExecutable . java to improve output handling by utilizing a more structured output stream
[ hotfix ] [ test ] use unique tmp file name in test
added import for DataTable and updated JRubyArgs accordingly to support data table handling in JRuby integration
updated visibility settings for author in SearchImagesRenderer . java and modified API query parameters in ApacheHttpClientMediaWikiApi . java to improve code cl
refactor ReadSentimentDataset to improve code readability to enhance maintainability and facilitate future updates
improve error message when parse formula fails
added bind address functionality and modified WebSocket connection handling to enhance socket management and improve code clarity
[ java ] do n ' t delete context aeron directory on close in consensusmoduleharness . close .
replaced manual size adjustments with a unified setSize method for stage and parent dimensions to streamline height management and improve code readability
changed the return type of sessionFixationAttribute check from String to Boolean . valueOf to improve clarity and prevent potential null pointer exceptions
fix ( lalogic ) : make switch statement consistent
danielwagnerhall : add backoff mechanism to chromedriver to make it faster .
added URI template support to ` TraceExchangeFilterFunction ` and modified ` ClientResponseWrapper ` to include ` HttpMethod ` and ` httpRoute ` to
fix npe in precompactedrow when purge be set to true
updated rendering intent return values in ICC _ Profile and ColorConvertOp classes , and added a new InvalidRenderIntentTest class to ensure correct
added ability to allow check for ` ` checked = ' ' on ' ' in contribution question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
resolve findbugs issue in kafkarecord and remove serializable from kafkaexactlyoncesink
added PGConnection to the connection proxy in PooledConnectionImpl . java and implemented a test for PGConnection in BaseDataSourceTest . java to
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for token encryption secret configuration and changed log level from warn to trace to provide clearer insight into the
remove deprecation of hazelcast . getresource ( ) in favor of hazelcast . getresource ( )
added topology handling and command reporting in AmbariManagementControllerImpl , AbstractServerAction , and FinalizeKerberosServerAction classes to improve event
added iterator and end handling in NamedListCodec and updated related tests in TestNamedListCodec to enhance functionality and ensure proper handling of iterables in
fix potential npe during migration
added schema inclusion rule to ApiExample . java to enable public access for schemas in the API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct expected value for
fix sdo # createlinearring to handle unclosed and closed polygon
added methods to retrieve base name and dimension count from Constant Pool to enhance functionality for better management of constant pool configurations
add a debug method for xssf formula evaluation output to allow more control over evaluation output
test : migrate cttest to junit5 ( # 4358 )
modified the constructor of ExoPlayerProfile and modified the condition for isLiveTv in PlaybackController to ensure correct handling of live T
added a return statement to the DynamicStyleBar class to prevent further processing in the method
added SLF4J logging statements for setting and resetting properties in the Utils class to enhance visibility into property settings for better debugging and monitoring
refactor ReactiveAuthorizationManager to improve code structure to enhance maintainability and readability of the authorization manager
updated the condition to promote both object and boolean types to ensure compatibility with both object types and boolean types
rename llvmobjectnuller to llvmaddressnuller and make frame . getobject ( ) and frame . getobject (
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add a new test suite to verify the behavior of caffeine cache default configuration
added a method to calculate the bounding box of a mesh to facilitate bounding box calculation based on vertex attributes
added a new option ` -- target - hash - function ` to determine which hashing function should be used for computing target hashes to provide flexibility
updated DefaultConfigurationProperties to improve configuration handling to enhance performance and maintainability of the code
updated high light color and alpha settings in ListViewMultiChartActivity and added arrow drawing functionality in BarChart to enhance visual feedback and ensure arrow
added a mapping for temporary PG path plan to the sg path plan map to ensure proper handling of temporary PG paths in the cluster plan router
[ hotfix ] [ test ] fix infinispan remote producer integration test
added synchronization and error handling in MavenArtifactFetcher , MavenDependencyResolver , and MavenRoboSettingsTest to improve code reliability and ensure proper
updated the fragment shader string format in SpriteBatch . java to include a conditional check for GL _ ES to ensure compatibility with OpenGL ES
hbase - 25827 fix npe in rsgroupinfo ( addendum )
added a try - catch block to load the JspPage and changed log level from warn to debug to improve error handling and reduce log verbosity for
added version awareness using a DummyVersionAwareTokenFilterFactory in the CustomAnalyzer and TestCustomAnalyzer classes to improve version handling and ensure compatibility
added a test for reading package archive information and updated the ShadowPackageManager to handle the retrieval of package archive information to ensure that the application info
replaced direct method invocation with MethodUtil . invoke across multiple classes to utilize ReflectUtil for package access verification to enhance security and maintainability
added new imports for ProjectConfigurationStartEvent and TaskStartEvent , and modified the progress listener to include progress updates for task and project configuration operations
douniaberrada : remove unnecessary synchronized block in androidwebdriver . java
do n ' t set initializationfailtimeout to 0 if it be less than 0 or less than 1000 .
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` sendHttpRequest ` method to
made the ` isNative ` field transient and modified the ` addEntry ` method to use ` false ` instead of reading the boolean value
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity and consistency of error reporting
rename ruleenablethandler to ruleenabletimeractionhandler and fix typo
fix javadoc error in javax . servlet . jsp module
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of authentication request processing logs
updated test cases to use new variable names for sink options and source options to improve clarity and consistency in naming conventions
added null check for repository before checking if the registrant is owner to improve error handling and provide user feedback when the repository cannot be found
added support for recognizing font names with extension " . otf " and " . OTF " in the SunFontManager class to enhance
refactor logic to check for target type and type fully qualified in AnnotationMatcher . java to improve clarity and maintainability of type matching logic
update error code from " OFF " to " SEVERE " in Grep . java to improve clarity and specificity of error handling
added check for debug logging before logging messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is not enabled
fix possible npe inurefireplugin ( fixes # 269 )
added a condition to check if the screen should be moved to the default screen when the home intent is clicked to improve user experience by ensuring home
updated maximum bitrate from " 110 " to " 30 " in the configuration to allow for a longer bitrate for improved performance
replaced the duplicate method ` getOptions ( ) ` with a direct call to ` optionsMap . values ( ) ` in ` CommandLineParser .
trim whitespace from the description returned from MutableDatabaseProperty to ensure consistent formatting of the returned description
simplified the path for the output file name in XOMParserTest . java to improve code readability and maintainability by removing unnecessary
[ hotfix ] [ runtime ] remove unused pid from processbsutoolunner log message
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to loaded music and sound objects
removed unnecessary imports and simplified the type assignment in OnBeanCondition . java to improve code clarity and reduce unnecessary dependencies
added ScreenRecord imports and annotations to RequestPinItemTest . java to facilitate screen recording for b / 215673732
do n ' t re - enable the lr pause button if it ' s already in use
refactor preferences handling by replacing PreferenceMultiline with a private PreferenceCategory variable for better encapsulation to improve code readability and maintainability by
fixed an issue where an empty xmppconnection would mark the connection a unavailable
refactor StringBuilder initialization in ObjectInputStream to use a specified initial capacity if utflen is greater than or equal to Integer . MAX _ VALUE to improve
disable metric export by default for test
refactor InterruptedException handling code to improve code readability and maintainability
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor connection handling logic in ConnectionCheckOperation . java to improve clarity and correctness of connection success checks
http : / / issues . apache . org / jira / browse / amq - 4358 - fix conversionservice . canconvert
[ ds - 3952 ] fix a bug that cause the test to fail .
set intent flags to FLAG _ ACTIVITY _ REORDER _ TO _ FRONT in PasscodeManager . java to ensure the activity is
refactor : deprecate patternparameterconfigurator and add template import
modified the ` beginDraggingWidget ` method to return a boolean indicating success or failure to improve error handling by preventing potential null pointer exceptions
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable the test due to LUCENE - 4488
added null check for the root and collected components in DynamicStyle . java to prevent potential NullPointerExceptions when root is null
add a confusion matrix to the testclassifier so that it can be write to a . conf file .
rename variable and method to avoid confusion
added unit tests to validate the functionality of getting connected devices and connection states in ShadowBluetoothHeadsetTest . java to ensure accurate reporting of
corrected the spelling of " # autowire " to " # autowired " in multiple test files to ensure consistency and accuracy
added " clone " to the set of methods and introduced a new constant for " finalize " in the ResultObjectProxy class to enhance object method
[ hotfix ] [ yarn ] add null check for counters object in integrationtestbiglinkedlist
return not _ implemented when objectobject . referringobjects be set to false .
updated the ` setRegisteredServiceFilter ` method to include a ` serviceId ` parameter and added a match check for ` SamlRegisteredService `
added a null check for the getActivity ( ) before invoking showStorageIssue to avoid potential NullPointerExceptions when accessing the activity
rename logger to avoid mislead warning
added methods to set and get the string type in DatabaseAdaptor and modified access levels for several methods in JDBCSessionDataStore to enhance encapsulation and
updated test cases in UIMAUpdateRequestProcessorTest to use suggested _ category instead of " english " to ensure tests accurately reflect the
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods to improve code read
refactor TaskletAdapter class to improve code structure to enhance maintainability and readability of the code
drools - 2200 dmn decision table should handle negative dmn model correctly
fix texturemap . create ( ) not call glflush on macos , and disable the default on splash screen .
added a tooltip text to the showCGCP checkbox in RocketPanel to enhance user experience by providing context - sensitive help
add a test to ensure that declaration be create by factory be create .
add text and description to hot reload and app ( # 6370 )
use hasspreadsheetlabel ( ) instead of islabelsimple ( ) for consistency
changed the type of BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) to ensure correct conversion from integer to double for
add context a an entry to the history entry , not a branch
added isAdmin parameter to the createUser method and implemented listUsers and userIsAdmin methods to enhance user management by allowing admin access to users
added null checks and equality checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created
polish dynatraceexporterv2 : replace % s with { }
updated method signatures in Context , Request , and Response classes to improve consistency to enhance code clarity and maintainability by standardizing method signatures
add setcapabilitiesFromSpongeBuilder to set capability from nbttagcompound
[ hotfix ] [ test ] fix flaky test in lifecycleutilstest
added validation for contract types in Wallet and refactored contract retrieval in GetContractServlet and TriggerSmartContractServlet to ensure proper contract creation and
added new package - info . java files for several packages in the com . ibm . dtfj package to provide package - level documentation for
refactor add method in DocumentsWriterDeleteQueue to improve concurrency handling to ensure thread safety when adding new nodes to the queue
added a HashSet to prevent duplicate JavaFileObject entries and updated test arguments in T7091528 to improve efficiency by avoiding unnecessary parsing of
updated the default value of the STRIP _ IPV6 property from true to false and modified the host assignment logic accordingly to disable IPv6
added support for adding new user parameters in the LoginServerTokenEndpointFilter to enhance user authentication by allowing users to add new users via OAuth token
added a new constant ` C _ KEY ` and updated language comparison logic in ` LanguageFactory ` and ` CPPParserTokenManager ` to
refactor thread pool executor usage in BuckEventBus , DefaultStepRunner , MoreFutures , and related classes to improve organization and clarity
added HTTP headers for cache control and expiration in FormAuthenticator . java and updated response assertions in ConstraintTest . java to ensure proper handling of cache
add exception message to log when exception be encounter
updated imports and class name in HSSFTests . java and TestEmptyDocument . java to improve clarity and organization of test classes and
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
avoid an npe when a java library do not have an output
added access controller priorities for before and after access controllers in Java2DRenderer to enhance access controller behavior during resource resolution
add a try - catch block to handle ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure the JDK does not fail on Windows systems when drawing
changed the access modifier of the HotspotThreadMBean variable and refactored CPU time testing logic to enhance thread CPU time verification and improve
fix tabandindentsvisitor when there be no comment
updated rate assertions in TestTriggerIntegration to use 100.0 instead of 5.0 and adjusted logging level in SimDistribStateManager to
replace ` equals ` method with ` equalsIgnoreCase ` for path comparison in ` DatabaseChangeLog ` , ` RanChangeSet ` , and ` Already
added a method ` getString ` to return a value from the map or a default string to enhance functionality by allowing retrieval of a string value from
updated date and time formatting logic in TweetActivity . java to support military date and time display based on locale settings to improve
nifi - 7590 return an empty list if there be no connection to process
fix miss keyboard popup on new note but still not focus on title
make sure to use a double quote for the file path when set the extraclasspath
make sure we do n ' t create a new array for each solve operation
int - 1188 add javadoc for genericmessage to clarify the purpose of the class
refactor SQL query construction in PostgresConnector and TaskAttempt classes to use a join method for better readability and maintainability to streamline
updated file filtering logic in AquaFileChooserUI to ensure selected filter does not exceed the current filter to improve user experience by preventing
fix checkstyle issue in io / ice / p2ptransportmanager . java ( # 780 )
modified the ` toFormulaString ` method in ` ArrayPtg ` to return " TRUE " or " FALSE " instead of returning a boolean
updated import statements in PGtokenizerTest . java to include specific assertions to improve test readability and ensure proper assertion methods
updated the handling of variable elements in ` Java2TypeScriptTranslator ` and added a new test for nested anonymous classes to improve the accuracy of
added a new SQL statement for creating a sequence in PostgreSQL to implement auto - increment functionality for PostgreSQL
updated byte reading logic in DataInput . java to handle negative values correctly to ensure proper handling of negative values and improve readability of UTF -
removed assertions for VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing in ImageParserTest . java to ensure tests validate the correct dimension spacing values
updated the way the parent is retrieved by removing an unnecessary call to getParent ( ) to ensure proper parent reference is maintained in the component hierarchy
refactor import statements in multiple Java files for consistency to improve code readability and maintainability
replaced ENGINE _ finish ( ) with ENGINE _ free ( ) and added ENGINE
refactor interleave control so it do n ' t trigger an event for every iteration
updated the way HttpContent is released in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leak
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are properly cleaned up after tests
added handling for URLs containing " twitter : / / " in BrowserActivity to launch the activity instead of loading it directly to improve user experience by
added a method to await the host status in DeploymentGroupTest to ensure that the host status is properly checked before proceeding with tests
updated logResult parameter from false to true in VisibilityController . java to indicate that labels are allowed for better debugging and monitoring
increase ` badClients . ribbon . MaxAutoRetries ` from 0 to 25 in ` RestTemplateRetryTests . java ` to
removed a print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to streamline output handling
added support for " fraction " resource type in the Resources and Converter classes to enhance resource management by supporting fraction values in the application
added a confirmation check for writing files in BasicFrame . java to ensure that write confirmation occurs before proceeding with further operations
add assertions to ensure groupId and artifactId are not null before proceeding with the findNewerDependencyVersion method to enhance code reliability by ensuring
hbase - 25827 namespacestatemanager . listtables ( ) throw quotaregionexceededexception when table be
refactor multiple token - related classes and attributes for consistency to improve code maintainability and readability across the token processing framework
rename TestFuzzPreLoop . java file to improve clarity and organization of test cases
added a check to ensure f0 is non - negative in HTSVocoder . java to prevent potential issues with negative f0 values
removed exception handling for connection catalog in SchemaRetriever . java and added null checks for primary and foreign key columns in TableRetriever . java to improve
remove request . clearencoders ( ) and use a concurrent map in the inputbuffer .
added SharedPreferences handling for empty pages in Workspace . java to enable conditional execution based on user preferences for empty pages
added a warning log indicating the deprecation of cucumber - needle to inform users to use cucumber - jakarta - c
refactor theme handling in ShadowThemeTest and ShadowArscAssetManager , and add address retrieval methods in ShadowVMRuntime to improve code maintain
updated error message formatting in VerifyFast . java for consistency to improve readability and maintainability of the test failure messages
no effective change - code cleanup - remove unused dbmigration
modified conditional checks for PROTO _ PROPERTY _ NAME and added new functions for GETPROTO and SETPROTOCHECK in Global . java , and made
updated the shuffle method to use a random seed to ensure consistent randomness in the readers list
updated display name retrieval logic in UsersAndGroupsSearchProvider to differentiate between local and remote clarification and known clarification
updated path handling in CookieRetrievingCookieGenerator to ensure a default value is used when the path is blank to improve robustness by preventing
updated closing brackets in multiple files for consistency to improve code readability and maintainability
changed variable declaration from ` getCacheName ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java ` to ensure
updated pageNumber comparison logic from comparing ` pageNumber ` to comparing ` ve . pageNumber ` to ensure that the correct page number is validated based on the
added a condition to check if the focused widget is equal to the current instance in the UIDropdown logic to ensure that the highlighting functionality
fix checkstyle issue in soundutil
refactor AppleCxxPlatformFlavorDomain usage in ApplePackageDescription and related classes to streamline access to apple platform flav
add test case for the new ` ` show ' ' statement
renamed the ` onConnect ` method to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
updated the EnglishPTBTreebankCorrector class to improve the accuracy of treebank calculations
added a new test class ` TestGetLoggerNPE ` to verify behavior of ` Logger ` methods with security policies to ensure that the logger
move context to engine so it do n ' t share the same map multiple time .
[ gr - 10711 ] make sure unsafe . getobjectvolatile always return an object [ ] .
added regex pattern matching for " NEXTVAL FOR " in NextValExpression and updated related methods to allow flexible handling of " NEXTVAL FOR
improve error message when resource bundle be not pre - cached
updated BoundedLocalCache to include a threshold for pending writes and added a test for clearing pending writes to improve cache management by ensuring pending writes
added order direction parameter to QuoineNewMarginOrderRequest and updated exchange specification to support new margin order direction functionality
added a new method ` boundInitialization ` in ` PropertyDescriptor . java ` and created a new class ` Test7192955 . java `
replaced the variable ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lw
fix issue with tabs not be able to turn off button after a release .
fix text area wrap height calculation in linecell
corrected a typographical error in the parser argument message from " argomento " to " argomento " to ensure accurate error
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
danielwagnerhall : format the result of string . format ( string , string ... ) should be format string . format
replaced the method ` getNamespaceURI ( prefix ) ` with ` getNamespace ( prefix ) ` in ` StaxXmlPullParser . java `
added a configuration option for nested joins in multiple test classes to control the behavior of nested joins based on user - defined settings
server : allow admin to be specify by root admin only
added JavacFileManager caching for class paths in SourceFileManager and updated CompletionTaskProcesor constructor to include a cursor parameter to
set Hive configuration variables for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest MatcherAssert . assert
add a nullable handler to the looper parameter in renderers that require it .
fix ( ilp ) : fix ioexception when map symbol file ( # 14658390 )
removed debug print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the test output and reduce unnecessary console output
removed the Reflection class and updated imports in Jooby . java and TypeConverters . java to streamline the codebase by eliminating
removed the shared executor from the ThreadlessExecutor class and added getter / setter methods for the ' waiting ' flag to simplify the code and improve
refactor DateTimeFormatter error handling and add new test cases in TestDateTimeParsing . java to improve code clarity and ensure proper handling of null index
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related references and methods to improve clarity and consistency in naming
added a new case for the WILDCARD case in Types . java and created a new class T7034495 . java with interfaces A
replaced the do - while loop with a while loop syntax in LotsOfEvents . java to improve code readability and maintainability by
updated conditional checks for getHopChar comparisons in TransclusionDecideRule . java to ensure correct handling of Hop characters in the rule transformation
disable micronaut version logging by default
added unit tests for handling Area3DPtg name records in HSSFEvaluationWorkbook to ensure correct functionality and accuracy of name definitions in
updated the description retrieval logic in MindIconFactory to handle cases where the name starts with a slash to improve user experience by providing a clear
modified the ` onHomeIntent ` method to accept a boolean parameter indicating the internal state to enhance flexibility by allowing the method to accept an
refactor code to encapsulate the retrieval of the preferDependencyTree variable to improve readability and maintainability of the code
added showDetails method implementations across multiple activities and updated FileDetailFragment to accept an active tab parameter to enhance user experience by allowing users to view
updated function names from " $ apply " to " apply " across multiple files to standardize naming convention for the apply function across the codebase
fix minimalencoder so that min symbol size do n ' t exceed max symbol size .
added required and since headers with and without parameters in SourceBuilder . java to enhance clarity of parameter descriptions and improve parameter handling
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter updates when data changes
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to simplify the codebase by eliminating unused functionality
updated type handling in RemoveJavaDependenciesAdapter and added assertions in Collections to improve type safety and ensure correct removal of specific string values
remove unused method from defaults3crtasyncclient
updated error messages in doDudPasswordTest for corrupted stream bounds to improve clarity and accuracy of error reporting
add miss content to expect size assertion error message
do n ' t bail out if there be a bailout or graalinternalexception in the graalcompiler
[ web ] fix a crash when load an image from an external web .
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the ` getOrderBook ` method in ` YoBit ` and modified related calls in ` YoBitMarket
rename gotWrongOOMEException to heapoomeexception and move it to vm . share . gc
added StreamReadConstraints import and configuration in StandardDataFlow . java to enable maximum string length constraints for JSON processing
updated the method of retrieving the engine configuration to handle empty values gracefully to improve robustness by avoiding potential null pointer exceptions when retrieving the engine
rename ` FullIterator ` to ` WheelIterator ` and update import statements in ` TimerWheelTest ` to improve clarity and consistency
improve error message if a bug pattern can not be find
increased the timeout duration in LocalChunkProviderTest from 3 seconds to 10 seconds to allow more time for chunk readiness checks to complete
changed the visibility of the menu item from true to false to disable the uncomplete checklists menu item for better user experience
refactor DefaultResultSetHandler to resolve discriminator results and introduce a new Contract class with associated tests to improve handling of discriminator results and ensure correct
added null check for defaultHome and updated receiver unregistration logic to improve robustness by ensuring proper handling of null values and unregistration of the
removed the import and annotation for VertxGen in PumpImpl . java to streamline code by eliminating unnecessary annotations
removed unnecessary casting to FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by reducing unnecessary type
trim whitespace from tokens in ConfigAttributeEditor and add a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure proper formatting of configuration
rename ClassUsingAnotherAuxiliary and SelfClassWithAux to improve clarity and consistency in naming conventions
substitute module in module loader for jdk9 + .
modify the way relKind is assigned based on the string type from ' r ' to ' pg _ ' in DatabaseMetaData . java to ensure
chore : [ google ] update java and python dependency to v3.15 . 3
updated the default case value of RQST from - 1 to 1 in ThriftHiveMetastore . java and HiveMetaStore .
added a new module - info . java file that defines and exports the " com . speedment . runtime . core " module with required dependencies
added flush state handling and updated fill state logic in SslConnection . java to improve connection interception handling for encrypted output and ensure proper fill state
log4j2 - 1343 log4j2 loggerfactory should not throw an exception if the loggerfactory can not initialize
added checks for the presence of server VM in the ExecutionEnvironment class and refactored related code to improve code clarity and maintainability by
refactor MongoOperations , ReactiveFindOperation , and ExecutableFindOperation classes to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to the PGProperty class to support SSL factory functionality in PostgreSQL connections
disable interprocesssemaphore edge test until we can fix it
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names during processing
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to support OSV terminal functionality to enhance terminal
added support for additional file extensions " . gr " and " . grs " in ClassType . java to enable processing of additional class types
replaced HashMap with TreeMap for combinedVectors and simplified related logic to improve performance and readability of test results
added a condition to check if ' values ' is not empty before iterating to ensure that ' i ' does not exceed the size of ' names
refactor WebSocketPolicy to improve WebSocket connection handling to enhance performance and reliability of WebSocket connections
changed ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` from static to instance variables in ` ShadowTelephony
add option performbasebasedresolution = true to standardmessageresolver . resolvemessage ( )
updated Class and CheckClassAdapter to use wildcard types for constructors in AsmUtil . java to improve type safety and eliminate potential ClassCastExceptions
added new classes LoggingAuditService and UaaAuditService for auditing user authentication to enhance logging and auditing capabilities for user authentication processes
added nullability annotations and temperature range checks in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to improve handling of null values
do n ' t generate intercepted method for non - abstract class
camel - 8061 : added proxy option to camel - http to allow to configure http proxy . thanks to benjamin
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to reflect the latest version of the template encoding
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to utilize the ` jdkSerialFilter `
camel - 14850 : camel - core - optimize to reduce object allocation if pool size be large .
replaced ` forceFinished ( true ) ` method with ` forceFinishScroller ( ) ` method in multiple animation classes to simplify the method
updated the method ` ensureRealtimeClusterIsSetUp ` to apply environment variables using ` ConfigUtils ` to ensure the realtime table configuration is
added methods ` isError ( ) ` and ` error ( ) ` to ` ValidationReport ` , modified error handling in ` DisallowValidator `
refactor inline QSB handling in InvariantDeviceProfile . java to improve clarity and functionality to enhance flexibility in managing inline QSB
updated createClassPath method to throw an exception and encoded the location string using URLDecoder to improve error handling and ensure proper encoding of special characters in
updated regex pattern in TransformSteps . java to allow wildcard matching for method parameters to enhance flexibility in matching method signatures
fix exception when set retina prop to null
replaced hardcoded timeout values with a protected timeout variable to improve readability and maintainability of the test code
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
[ hotfix ] [ runtime ] add seturl for docker image in environment
- add multiple call to System . gc ( ) in the KnowledgeAgentTest to ensure consistent garbage collection behavior
updated multiple Java files related to AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock to improve code organization and maintainability
updated the method name from ` createHardLink ` to ` copyFile ` and added error logging for file existence checks to enhance code readability and
renamed methods ` appendToDescription ( ) ` to ` getDescription ( ) ` across multiple classes to improve clarity and consistency in method naming
[ api ] add device check to mxnet functioninfo ( # 1748 )
added a conditional check for ` xml . Document ` before processing XML in ` Autodetect . java ` to ensure that XML elements are
updated test classes to use ` @ RunWith ( AndroidJUnit4 . class ) ` and removed ` InstrumentationTestCaseCase ` inheritance
added new GasLimitRule and ParentGasLimitRule alongside existing ProofOfWorkRule in CommonConfig . java to enhance the rule '
changed visibility of setupData ( ) from public to private and removed it from multiple test files to restrict access to the setupData ( ) method
rename ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class and update related references accordingly to improve clarity and
[ 3.0 triple ] fix stream close when listener be null .
[ flink - 20613 ] [ doc ] add site . baselink to the configuration of the restart strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` for validating SQL parsing and deparsing to ensure that the
refactor Common class to improve code structure to enhance maintainability and readability of the codebase
refactor LauncherInstrumentation usage to use try - with - resources for context layers to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ test ] fix typo in streamexecdeduplicate
added warning log for exception when send kafka message to topic
polish ` ` make simpleelasticsearch persistent entity immutable ' '
make sure segment3d . setcoord be always set to undefined
added gesture scrolling functionality in AskGestureEventsListener . java to handle horizontal and vertical scrolling with improved swipe actions to enhance user experience by
hive - 4913 : put deterministic ordering in the top - k ngrams output of udf context _ ngrams ( ) ( xuefu zhang via ashutosh chauhan )
updated imports for ScenarioScoped from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple
updated method calls in StatsLogCompatManager to retrieve folder icon properties to ensure accurate representation of folder icon properties for better functionality
changed the method from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
8015278 : add compiler . c2 . ir _ framework . testskeletonpredicates test case
added a ` setHandler ` method and improved the ` equals ` method in ` SelectionHighlighter ` to enhance the functionality of the `
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` to use it for string conversion
camel - 19751 : camel - account , marketdata , and metadataproducer should disable test until camel - 19751 be
updated condition in JansiWinSysTerminal . java to correct the condition from " ! = " to " ! = " to ensure proper
renamed methods and variables in BufferUtils for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
updated the expected data directory path assertion to use File . separator to ensure consistency in data path handling across different operating systems
fix autodispatcher on macos with pre - 10.15 support
replaced ` lockFile ` with ` lockName ` in the ` Lock ` class to provide a more descriptive lock name instead of a
replaced the variable ` appIcon ` to ` allApps ` and updated its retrieval from ` waitForLauncherObjectByClass ` to ` waitForLauncher
updated references from ` this ` to ` ClientDatagramEndPoint . this ` and simplified the return statements in ` ClientDatagramEndPoint . java
changed the SQL query in GET _ STEP _ EXECUTIONS from " oreder " to " order by " in JdbcStepExecutionDao
updated button handling logic in LwjglInput . java to ignore unknown buttons to improve robustness by preventing unknown buttons from being processed
added authorization checks for claimed tasks in TaskRestRepositoriesIT . java to ensure that only authorized users can submit and reject tasks during the task
replaced instances of ` logger ` with a single static final logger instance in ` OpenIdServiceResponseBuilder ` and ` GoogleAccountsServiceResponseBuilder `
updated expiration time handling in SsoAccessTokenProvider and added new test cases in SsoAccessTokenProviderTest to improve accuracy of token resolution and ensure
[ geos - 8470 ] skip test that fail on github build .
added methods to create , delete , and retrieve alarm suppression requests in GreetResourceMockedTest and OciMetricsCdiExtensionTest
reordered conditional checks for default close operation in JFrame . java to improve code readability and maintainability
modified LibraryScanner to use a database connection if available instead of retrieving it from PMS to improve reliability by ensuring a valid database connection is
replaced direct access to ` metricsContext ` with a call to ` super . initializeMetrics ` in ` SuggestComponent . java ` to
modified the logic for generating the output string based on the ` foldersCount ` value and adjusted the handling of the ` output ` variable to improve
change default value for " HashKnownHosts " from " yes " to " no " in ScpServerTestSupport . java and modify load
updated SourceVersion . java file to reflect new versioning changes to ensure accurate tracking of source versioning for better debugging and analysis
added a new test class ` ThreadFactoryTest ` to validate thread factory behavior to ensure that the correct thread group is used in the thread factory
refactor lock period retrieval in DelegateResourceActuator to use a separate method for improved clarity to enhance code readability and maintainability
added a new instance of TicketModel to the EditTicketPage to initialize the ticket model for further processing
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow dimissing apps from predicted
updated constructors in multiple assertion classes to include the selfType parameter for better type safety to ensure proper handling of assertion instances by associating them with
added a new menu option for quote functionality in TweetActivity to enhance user experience by allowing quote actions to be displayed
do n ' t re - enter lock if we throw an exception
do n ' t use passthrough for raw audio with decrypt only codec .
added a conditional check for the result before offering failure and accepting a failure in ServerHTTP2StreamEndPoint . java to ensure failure is only
updated German and French error messages in XSLTErrorResources _ de and XSLTErrorResources _ fr to improve clarity and accuracy of error
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for data integrity checks
( chore ) camel - mock - rest - adapter : replace use of observer with subscriber
refactor the error handling logic for creating the components . yml file to improve code readability and maintainability
added configuration for unique column names in Hive and updated test assertions to use a column qualifier to enhance the accuracy of result set behavior based on the
fixed an issue with the voice list in the client and remove the bfirsttime flag in client .
added session validity check and updated exception handling in Session . java and SessionHandlerTest . java to ensure proper error management for invalid sessions and improve
hhh - 13434 - remove unused exceptionhelper class from hibernate - testing - orm
change the key pair generator ' s random number from 256 to 255 to ensure compliance with security standards and improve randomness
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene ' s
[ hotfix ] add log for empty header list in checkpointrangeheaders
added support for RSA / ECB / OAEPPadding algorithm and improved exception handling for algorithm creation to enhance security and provide clearer
replace instances of DARWIN _ AARCH64 with MACOS _ AARCH64 in multiple Java files to ensure compatibility with the correct mac
catch a securityexception and log it instead of ioexception .
removed unnecessary condition checking for UNIX OS in AbstractTest . java to streamline code for better readability and maintainability
updated error handling and segment file management in FileUploadUtils and ControllerConf classes to improve error logging and ensure the segment is moved to the generated
replaced instances of ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory allocation using ` ByteOrder . nativeOrder ( )
change USE _ PIPELINE _ DOWNLOADER from false to true to enable the usage of the PIPELINE DOWNLOADER for improved functionality
removed unnecessary timezone offset setting in SimpleDateFormat . java and added a new test class Bug7130335 . java to streamline date formatting and
refactor variables in AllAppsView . java to use local variables instead of accessing mRollo . mState directly to improve code readability
api : return router instead of return default _ hypervisor _ info if not set
refactor StringBuffer methods for improved performance to enhance efficiency and reduce memory usage
[ hotfix ] [ table - planner - blink ] fix duplicate uid in rule resource
fix npe when subscribe url do n ' t have a listener
add a property to jolttransformjson to make the pretty print option configurable
make access _ table public to allow access to it .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to specify that no resources were found to improve clarity and accuracy of error reporting for
refactor ( xmpptransport ) : move dorun ( ) into it own method to allow subclass to override it
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added additional parameters for effective cluster version and upgrade suspension status in AmbariManagementControllerImpl . java to enhance functionality for handling upgrade
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the
replaced the initialization of ` wfields ` with a call to ` writer . getFields ( ) ` to streamline the code by elimin
updated EncryptionJwtCryptoProperties and OAuthProperties to set default encryption and signing key sizes to ensure consistent encryption and signing key size settings for enhanced security
hbase - 25827 addendum use getcolumnfamilycount instead of length = = 0 to avoid arrayindexoutofboundsex
replaced the AllowedResourceAliasChecker with a lambda expression for alias check to simplify the alias check logic for better readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and Serializable classes to improve code organization and readability
added ` IdleStrategy ` to the ` Cluster ` interface and a ` reset ` method to ` ClusteredServiceAgent ` to enable resetting of
updated the incrementing of the currentChunkID in the SequenceFile . Writer instantiation to ensure the correct chunk ID is used for writing operations
added a new file ` AbstractJobExecutor . java ` that implements the ` JobExecutor ` interface to provide an abstract implementation for batch job execution
replaced the return statement with a break statement in the replay method to improve control flow and ensure proper termination of the replay process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to return service IDs based on discovery availability to ensure that service IDs are only returned when discovery is enabled for improved functionality
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` new SecureRandom ( ) . nextInt
add option to verify runtime compilation framestates during bytecode parsing .
removed unnecessary calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline code by eliminating unnecessary calculations
added imports and modified the answer method in CallsRealMethods . java , and introduced tests for abstract methods in CreatingMocksWithConstructorTest .
refactor ` checkPackageAccess ` methods to accept ` Class ` instead of ` String ` for improved flexibility to enhance security by ensuring
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error setup methods to improve test structure and ensure proper error handling during plugin initialization
replaced instances of ` dtm ` with ` model ` for clarity to improve code readability and maintainability by using a more descriptive
added a new request ` REQUEST _ HAS _ TIS ` to ` TestInformationHandler ` and modified related conditions in ` LauncherInstrumentation
removed unnecessary try - catch block and added mutex access handling in ConnectAction . java to improve error handling and ensure proper mutex management during database connection
change data structures from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` and related methods to improve type specificity and
added new classes ` ArrayHelper ` , ` Asserts ` , ` Constructor ` , ` NativeRegExp ` , and ` Objects ` in the `
added handling for the ' HOME ' and ' END ' commands in the Less . java file and implemented bindings for home and end operations to enhance
removed synchronization around accessing connected plots in PlotHandler . java to simplify code and improve performance by reducing unnecessary synchronization
replaced the share intent creation with a chooser creation for launching activities to streamline the intent creation process and improve code readability
( chore ) camel - roster : make roster constructor package - private
added basic constraints to the certificate generation in TestUtils . java to enhance security by enforcing stricter certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address failures due to wrong transform offsets to
simplified the assignment of ` ps ` in ` TrieDateField . java ` and ` TrieField . java ` by removing unnecessary conditional
removed the TaskbarStateHandler class and related functionality from BaseQuickstepLauncher to streamline the codebase by eliminating unused components
added a new file ArrayLength . java to test the retrieval of the " length " field using reflection to ensure that the array type is correctly
increase timeout for hazelcast process destruction in hzstartit
replaced the Singleton annotation with the @ ApplicationScoped annotation and modified the save method signature to use the @ PostConstruct annotation to improve clarity
change assertion from ` assert value > = 0 ` to ` assert value > 0 ` and modify the logic for setting ` newValue ` to ensure
changed the type of threadNameField from charArrayToString to stringOopToString and updated its usage to improve clarity and consistency in handling
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
add font object to pgraphicsjava2d to allow customization of stroke
[ calcite - 2207 ] expand dynamic star in window and group by expression ( krisztian kasa , review
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to find intermediate children of ` Comment2000 `
added import for Messages and set a status warning icon in HTTPServer to improve user experience by providing a clear status warning message
remove deprecated getmodifiersex ( ) method , replace with getmodifiersex ( )
change amd64countleadingleadingzerosNode and amd64countleadingzerosNode from CYCLES _ 6 to CYCLES _
camel - 14850 : fixed npe when disposition notification be not set . thanks to benjamin for the patch .
refactor Locale class to improve locale handling to enhance code readability and maintainability
error console : add clear ( ) method to clear the log
updated mRecentsAnimationController initialization in RecentsView . java to ensure proper initialization of the variable
updated Debug and CaptionMap classes to use LocaleHolder for caption handling and modified related methods to improve locale management and simplify caption retrieval logic
added connectionPooling ( ) method to ConcurrentBatchIdentifierTest and SequenceOptimizerIdentifierTest , and modified executionCount in AbstractTest to improve connection
[ java ] adding opera driver to the list of supported session .
catch all exception in managejournalspanel and show error dialog if download fails
added new Lifx product entries , including multiple entries , LIFX White , White , and LIFX Color in the LifxProduct
added asynchronous request handling in OverseerCollectionProcessor and updated related methods in CollectionsHandler and CollectionsAPIAsyncDistributedZkTest to improve
reordered static final variables in PostgresDatabase and PostgresDatabaseTest to improve code readability and maintainability
updated LogPage , SummaryPage , and LogPanel to use the repository head if objectId is empty to ensure the correct repository reference is used for
* SkeletonInterBoneWire . java : use XYZ instead of Y for bone space calculation to ensure the bone ' s space position is
added a method to destroy the browser component and refactored the deinitialize method to the destroy method to improve code clarity and maintainability
added a call to waitForActiveCollection for " readApiTestViolations " in AutoScalingHandlerTest . java to ensure the test environment is ready
refactor screen terminal regex logic and update imports in Tmux . java to improve readability and maintainability of the code
updated the controller state check to include additional conditions in SoftResetAction . java to ensure the method only proceeds in specific states for better control
[ 1.19 . x ] disable on - disc stream cache to speed up texture pack reload
added an else clause to retrieve the root folder of a media resource in Request . java and RequestV2 . java to ensure proper handling of
server : fix typo find by codespell on fossies . org
replaced the direct deletion of a temporary file with a custom close method to ensure proper resource management and avoid potential memory leaks
added error handling for HTTP 403 responses in StandardGitHubRepository . java to improve robustness by logging the response headers when a GitHub issue is received
log4j2 - 1349 add method ` getOriginal ( ) ` to the ` messagefactory2adapter ` class and update test to
added @ SuppressWarnings ( " BanSerializableRead " ) annotation in DataSizeTest , DurationTest , and SizeTest classes to suppress the warning
updated regex pattern from " ( 0 - 9 ) { 1 , 2 } " to " ( 0 - 9 ) { 1 , 3 }
added tooltip delays and exception handling in ExtractionModelFrame . java to improve user feedback during tooltip display
refactor ProjectCommand to utilize an ImmutableSet of passedInTargets for improved handling of build targets to enhance code clarity and maintainability
added timezone setting and assertion for time formatting in TimeTest . java to ensure correct formatting of time values for UTC
refactor MediaSessionConnector class to improve session management to enhance performance and maintainability of media session handling
( chore ) camel - http11 : use getsslsupport from the handler instead of create a new factory
updated the method call from ` getAltitude ( ) ` to ` getAccuracy ( ) ` in ` GpsLoggingService . java `
added a check for future support in BinanceExchange and adjusted related methods in BinanceAccountService and BinanceTradeService to ensure that asynchronous
[ # 7372 ] admin : add instructor course to list of course ( # 7373 )
set the accept queue size for the connector in ThriftHttpCLIService to allow dynamic configuration of worker thread pool size for improved performance
replaced the use of ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to
camel - 14850 : camel - jms - allow to use ssl in jms component . thanks to benjamin for the
replaced ` UserException . parseError ` with ` UserException . validationError ` in ` DrillSqlWorker . java ` and updated
do n ' t assert that duration be zero for a really fast collection
fix nodewithjavadoc not return optional for method with line comment
replaced direct access to reserve memory with a method checking OS type to improve compatibility with macOS and handle potential crash scenarios
added calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure region closing checks are handled correctly during
hbase - 25813 add procid to hbaseadmin . waitforoperation and improve exception message
camel - cxf fixed the issue that cxfendpoint do n ' t call setserviceclass ( class < ? > )
refactor YAMLChangeLogSerializer to dump databaseChangeLog as a map instead of a newline to improve readability and maintainability of the code
updated output formatting in SchemaPrinter . java to include newline characters to improve readability of output messages
fix npe in schematichandler and remove unnecessary chunk regeneration
updated ` nowPlaying ` and ` footer ` constructors to use ` getActivity ( ) ` instead of ` getContext ( ) ` to ensure proper
added @ GenericGenerator annotation to multiple classes and updated the @ GeneratedValue strategy to use the ' native ' strategy to improve code clarity and
removed the country parameter from the getSystemTimeZoneID method and directly used it to simplify the method signature for better readability and maintainability
updated the write method to include position and remaining bytes in BZip2Codec . java and changed ByteBuffer creation in TestBZip2Codec .
move logging init logic from appw and appw to geogebralogger
added a constant VALUE _ TYPE _ EMPTY to the Type class and modified the initialization logic for the type to ensure proper handling of empty values and
replaced ` = = ` with ` . equals ( ) ` for group comparisons in GroupManager . java to improve performance and readability by
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
updated the implementation of SimplexNoise class to improve performance and maintainability of the code
added a new method ` newInstanceExact ` in ` TargetGraphFactory ` and updated tests accordingly to use it to improve performance by avoiding unnecessary
kristianrosenvold : rename getminrowcompactedsize ( ) to getminrowsize ( ) in favor of get
added ArtifactVersionAdapter for JSON serialization in MetadataCollection and changed parentMods and childMods to transient in ModMetadata to ensure proper serialization
refactor the handling of the previous element in the NativeArray to improve clarity and functionality to ensure proper management of the previous element in the
replace direct file saving with parent file retrieval in FileUploader . java to ensure that the current file is set to the parent file ' s ID
added a new file UTF8ReaderBug . java to test UTF - 8 character handling in XML parsing to ensure that supplementary characters are correctly
added unit test base on user forum issue
updated test cases to reference " depth / ethbtc @ depth20 " instead of " depth " in BinanceIntegration and BinanceUs
added a ` resetAllocation ( ) ` method to the ` Wrapper ` class and invoked it in ` SimpleParallelizer ` to reset allocation settings
removed the import of AssertTree from AmbariManagementControllerTest . java to eliminate unused dependencies and streamline the code
refactor property retrieval to use synchronized blocks for thread safety to ensure thread safety when accessing system properties
refactor ModelUtils to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert for improved clarity and organization to enhance code readability and maintainability
modified width and height calculations to include conditional checks for index to ensure proper handling of labels to avoid potential array index out - of - bounds errors
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , `
replaced direct usage of ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` in ` MoreLikeThis .
replaced CxxLink with BuildTargetSourcePath in Omnibus . java to improve code clarity and maintainability by using a
add an option to disable the botania versioning in the commanddownloadlatest command .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` variable in ` MediaFolder `
removed the argument " - b " from the AidlStep and updated the command line arguments in GenAidlTest to streamline
delete redundant obl false positive on edge
added a TODO comment to the FakeHttpLayer class to address a potential issue related to testing the functionality
[ hotfix ] [ runtime ] revoke leadership before handle error .
compositediscoveryclient . getinstances ( ) use reactivex ' s flowable api
rename ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ config ] add description of jobmanager . jobcomputer . recovers - from - failure option
update ` WidgetsFullSheet . java ` to use ` updateRecyclerViewVisibility ( ) ` instead of ` updateNoWidgetsView ( )
added class loading for WstxOutputFactory and improved test assertions in MultiVersionXmlParserTest and MultiVersionXmlParserTest to enhance
refactor test setup in AuditAliasCommandIntegrationTest to use a setup method to improve code readability and maintainability by encapsulating setup logic
removed debug log statements related to recommendation widgets in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up
( chore ) camel - cxf : skip test that be not applicable in the junit 5 . x
added a try - catch block around the update ( ) method call to handle potential exceptions during periodical refresh to improve error handling and logging for
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and improve the
added a method to check the default background fill values in HSSFCellStyle and updated color handling in HSSFPalette to ensure consistent
updated ZonedDateTimeFormatterBenchmark . java file to improve testing coverage for ZonedDateTime formatting
refactor the ` DistributedUpdateProcessor ` to utilize a ` shouldBufferUpdate ` method for improved readability and maintainability to enhance
added a condition to check if the stage is null when the motor is null to ensure proper handling of cases where the stage is not present
add ` ` / editreplace ' ' and ` ` / editscript ' ' to / editreplace and / editscript command . close #
refactor ExtendedMasterSecretExtension to improve code structure to enhance maintainability and readability of the codebase
changed the declaration of the InputProcessor variable from non - final to final in AndroidInput . java to ensure immutability of the processor variable
[ flink - 20613 ] [ runtime ] fix error message when reach end of stream while write
added " CUBE " to the list of supported databases in MySQLDatabase . java to enhance database compatibility with CUBE data
added a try - catch block around the rm call in TestReplicationHandler . java to handle potential IOException when attempting to delete a directory
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test
replaced reflection - based field access with direct access to the HTTP client properties in DefaultOkHttpClientFactoryTest to simplify code and improve readability
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the output object in RawMessageContentRedirectInterceptor to prevent potential NullPointerExceptions during processing
ggb - 2118 fix : do not show split pane in av , if there be no parent .
modified the ` jailerMain ` method to include a ` fromCli ` parameter to control the execution of the ` jailerMain
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a shared preference for pull unread status in TalonPullNotificationService to enable dynamic updates to the unread status of pull notifications
fix handling of non - null object with non - null value .
updated memory calculations and modified camera initialization in Box2DTest , Pong , and OrthographicCamera classes to improve performance and simplify camera
refactor ViewPostDetailFragment to streamline layout manager initialization for tablet and landscape orientation to improve code readability and maintainability by redu
change logging level from trace to warn in CLIService . java to provide more granular logging for aborted background operations
do n ' t generate interface body for abstract method , print them for debug purpose
ggb - 2333 do n ' t call app . invokelater on ie10 +
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter and modified its implementation to filter users based on their device ID to
updated the baseUrl for CGIARProvider from " http : / / droppr . org / 6 _ 5x5 _ tifs "
removed property change listeners and initialized bottomPanel to null in MotifFileChooserUI . java , and created a new test class bug65
refactor handle ( ) method to return a boolean indicating success or failure
refactor methods in BuildRuleResolver to simplify handling of optional rules and improve error messaging to enhance code readability and maintainability by reducing
added transportSpinner visibility based on makingShortcut flag to improve user interface responsiveness by hiding the transport spinner when making shortcuts
added null check for attributes _ field in ` ppp Attr . java ` and created new classes ` A ` , ` B ` , and
fix crash when back button do n ' t work on medium detail
added support for long view index in QueryServices and its options to enable or disable the view index based on configuration settings
replaced " V " with " v " in SDRTrunk . java to ensure consistent formatting of output values
updated the path handling in PrivateKeyParserTests to clean the private key path to ensure that the path is valid before proceeding with tests
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method and related calls to simplify the method signature by eliminating unnecessary
update IndexWriter initialization to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest testing framework version
added support for disabling strict column family check in Table creation to ensure that the table name does not match any of the specified column families and
[ java ] make sure we subscribe to the correct channel when start a new log recording .
replaced direct calls to ` startActivity ` with ` startActivitySafely ` and added visibility control for the voice button and application details to
added a condition to return early if the first element is " i " in the JSON node to handle cases where the first element is " i
refactor Procedure class to improve code readability to enhance maintainability and facilitate future modifications
updated resource bundle retrieval to include default locale and system class loader to ensure correct localization support for resource bundle retrieval
[ j2kt ] add normalizearraycreateskotlin pass to convert array literal to newarray
added checks for missing counts and modified logic in PerSegmentSingleValuedFaceting . java to ensure proper handling of counts and avoid unnecessary increments when
fix npe in modmetadata # getauthor ( mod ) when author list be empty ( # 2698 )
added OSGiTest . java and modified module - info . java to include a requirement for a static jdk . unsupported module to ensure
nifi - 1883 : fix problematic unit test for enabling referencing services graph
hbase - 25827 fix a bug in asyncprocess that could cause the test to fail ( addendum )
fix ( scan ) : fix type cast exception for @ typeelement in a class
added hasUserData method to SimpleFeatureImpl and its implementations in SimpleFeatureImplTest and Property classes to ensure that user data is properly checked and
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify exception handling for better code
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to adjust logging levels for the main class and its parent handlers to streamline logging configuration for
added a new class ` InJavaSourceSet ` to filter and aggregate Java source files while updating import statements in ` UsesJavaVersion . java
added a check for the " WFPC2u5780205 r _ c0fx . fits " file and updated resource retrieval
added a new method ` createGetter ( Object obj , String attribute ) ` to the ` ReflectionHelper ` class to provide a utility for creating
removed default preference check for " useExternalStorage " in DirectUpload . java to simplify the conditional logic for better readability
added a flag to control indexing without committing changes in the IndexerMapReduce and IndexerOutputFormat to improve performance by reducing unnecessary
api : do n ' t allow disk offering id to be pass whilst create volume
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy notes to ensure that the cell ' s text
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new test class ` Issue382 ` to handle specific error types in the Jooby framework to ensure proper error handling and
replaced the static method ` signum ` with a static import for ` Integer . signum ` and simplified the return statement in the ` PositionUtils
added visibility control for text holder in AttachmentAdapter to improve user interface by hiding unnecessary text when certain conditions are met
fix ( astparentconsistencychecker ) : fix bug in which an instance of ctreference be not consider .
simonstewart : fix a compile - time error in the firefox driver
fix liquid block not respect blockstateproperties . f _ 54688 _ ( # 54688 )
http : / / issues . apache . org / jira / browse / amq - 2902 - fix intermittent test failure
update time zone from PST to " America / Los _ Angeles " to ensure correct localization for the application
replaced ` existingObservation ` with ` distinctObservation ` for clarity and consistency to improve code readability and maintainability by using
updated system property access to include annotations for Nightly , Weekly , AwaitsFix , and BadApple in LuceneTest
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and updated logger initialization logic to improve clarity and ensure
added access control for class , method , and proxy in graalcontext to enhance security by restricting access to relevant classes
implement pgraphics2 . updatepixels ( ) in order to avoid unnecessary pixel update
updated HiveUtilities . verifyAndAddTransactionalProperties to use partition . getSd ( ) instead of table . getSd ( ) to ensure
updated conditions for determining overlay scroll behavior and introduced a new variable to track the last overlay scroll state to improve control over overlay scrolling behavior and ensure
hhh - 12936 - create unmodifiable batch builder for hibernate jdbcsessionowner ' s batch size
improve error message when shouldnotreachhere throw an unexpected input
added a new test class ` MockWithStaticStateDemo ` and modified ` PartialMockingRetainsStateTest ` to test its state to
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL parsing functionality works correctly for
modified the security action execution to handle null UGI cases to improve robustness by ensuring exceptions are thrown when the UGI is not initialized
modified error handling in OpenALMusic . java to include the error code when attempting to allocate audio buffers to improve error reporting by providing more
camel - 16400 : camel - core - rename method from ` reslovestringparameter ` to ` resolveparameter ` and deprecate
updated the logic for creating SQL types based on unscaled values and scale in RexNodeConverter . java to ensure correct handling of decimal values
refactor code to use Optional for optional handling for vendor and device properties to improve code safety by avoiding potential NullPointerExceptions
updated the assertion in WalletTestAccount003 to use ` Long . toString ( now ) . getBytes ( ) ` for the account update to ensure
replaced AxialStage selection with a direct RocketComponent selection in BasicFrame . java and updated child selection handling in DesignPanel . java
added methods to handle long running time configuration in Args . java to improve configurability and control over execution duration
updated comparison logic in ` FindRefComparison . java ` and changed priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _
updated imports and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to replace deprecated ServiceConfigurationError handling with utility
[ geot - 5598 ] fix xml unit test for decimal
refactor assertions in TestRestClientRequestImpl to improve readability to enhance clarity and maintainability of the test code
updated the condition to check if the reference database is equal before proceeding with the existing index check to ensure that the index exists only in the
refactor ` addAndroidConstants ` method and streamline proguard configuration handling to improve code readability and streamline property setting logic
replaced assertions using ` assertEquals ` with ` await ( ) . atMost ( 5 , TimeUnit . SECONDS ) ` in ` DuplicateCookie
added user _ args and is _ daemon and timestamp fields to ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance the build process by
svm : use thread - safe list instead of list for static resource bundle .
[ hotfix ] fix typo in hepplanner trace log message
added new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for
changed ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to be strict in ` FloatingDecimal ` and ` FormattedFloating
replaced unparseIdentifier with direct column name assignment in ColumnStatsSemanticAnalyzer to simplify column name handling and improve readability
added a test method to replace field declarations in JavaTemplateContextFreeTest . java and updated the contextFreeTemplate method in BlockStatementTemplateGenerator
added a condition to check if the method is not synthetic in InstantiateStaticClass . java and introduced a new test method in Bug1282 .
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path
added handling for pending rescue and conditions in IkStepDefinition . java to improve error management and manage resistance during control flow operations
changed ` equals ` and ` hashCode ` methods from ` final ` to non - final in multiple type classes and added overrides for these methods to
added a method to retrieve the SyncLevel from a string and updated the SyncLevel enum to improve flexibility in handling sync level configuration and provide
fix controlcommandstest # testperformancetest failure on slow machine
added a condition to check if the slice state is not CONSTRUCTION or RECOVERY in addition to being CONSTRUCTION to ensure that
* fix checkstyle issue in ` ` opencv _ core . java ' '
added ` sdkPath ` to ` AppleBundle ` and updated ` makeProcessExecutorParams ` method to accept ` ExecutionContext ` to enable
use a single cleanup callback instead of a lock in blob cleanup
server : create firewall rule for static nat instead of 1 - 1
refactor PasswordEncoder and StandardPasswordEncoder classes to improve password encoding efficiency and maintainability
added conversion of row types from sort and union to row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to
refactor BetterBlockPos class to improve code organization to enhance maintainability and readability of the code
updated the way the ServletContext is retrieved by using the current class loader to ensure proper context proxy retrieval by referencing the current class loader
replaced the use of a static version string with a method that checks if the nightly build is nightly to improve code read
added OracleDatabase import and modified statement processing logic in LoggingExecutor and JdbcExecutor to remove trailing trailing / ' s to ensure proper handling of database
add new property findbugs . nullderef . assumensp to prevent nullpointerexception
fix ( hawtio - jolokia ) : make jolokia test run on port 12345
improve audio slider height and show all time instead of hightlight .
added a method to add a multifactor authentication provider bypass to DuoSecurityMultifactorProviderBypassConfiguration to enhance multif
modified the parameters of the findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint methods in MaxRectsPacker
[ drools - 6582 ] update copyright year to match last edit in the file
added methods to set and retrieve a help page in PMS and refactored help tab update logic in HelpTab to improve code organization and
added new GeocodeProviderFactory and Constants interface files to the project to facilitate the creation and management of Omni Notes Beta
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to align with the correct package structure for
refactor tests to remove ExpectedException rules and improve exception handling in ResourceManagerImplTest and ResourceManagerOptionsTest to enhance code clarity and
fix ( py4j ) : do n ' t delete object that do n ' t exist on the gateway server
updated conditions in SegmentsInfoRequestHandler and modified collection creation in CollectionsAPISolrJTest to improve clarity and functionality of document fields in Solr
modify numPredictiveAppCols calculation to account for phone type to ensure correct selection of app columns based on device type
added a method to check for scalar subqueries in JoinUtils and refactored related calls in DrillJoinRelBase and NestedLoopJoin
add blockbuildcraft to keep item in the craft ' s inventory .
updated layout gravity and width settings for targets in DeviceProfile . java to improve layout responsiveness for the targets component
change yahoosession . run ( ) to yahoosession . start ( ) to make it consistent with other yahoo session
set the ` ms ` and ` client ` variables to null in ` HiveMetaStore ` and ` HiveMetaStoreClient ` classes to improve
updated the ` getDisplayScript ` method to accept a ` Category . DISPLAY ` parameter and added a test for the Hans - CN locale to
updated import statements for BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica . java to streamline dependencies by removing unnecessary static
replaced ThreadLocalRandom with a custom Random instance for generating random boolean values to simplify random number generation and improve performance
added a check for launcher readiness before backup operations to ensure backup operations are only performed when the launcher is ready
improved error messages in ` Cell . java ` to include specific variable values to enhance readability and provide clearer context for exception handling
added unit test base on user forum issue
rename methods and variables related to chart space to use " Bar " instead of " Body " to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve process management to enhance performance and maintainability of the code
test : migrate filemessagestoretest . java to junit5 .
added multiple logger configurations for various logger types in Grasscutter . java to improve logging visibility for better troubleshooting and
changed the visibility of ` highlightCnstScrRngQuery ` and its methods to static in ` SpanScorer . java ` ,
updated condition to check workspace state before exiting overview mode and added a method to retrieve the current state in the Workspace class to improve state management and
rename multiple assertion classes for consistency in naming conventions to improve code readability and maintainability across the assertion framework
only send notifynewtemplate ( ) if template cache be enable
added a new constant ` SCOPE _ SOLR _ CORE ` and refactored core scope handling in multiple classes to improve scope management and
added a primary key constraint for the measurement table in the DatabaseMetaDataTest . java file to ensure the measurement table is created as a primary key
change ` ` -- permissions - config - path ' ' to ` ` -- permissions - config - file ' ' in the pantheoncommand
refactor conditionals for session creation and security context handling in HttpSessionContextIntegrationFilter . java to improve code readability and maintainability by redu
added a new file TestIfWithDeadRegion . java that implements a method to retrieve a string with a dead region to demonstrate
rename english _ ud file to english _ usd for unit test
added high - resolution timer management in SnowflakeIdGeneratorTest . java to ensure thread safety during concurrent access tests
added a static UI setting in AppSettings and modified MainFragment to conditionally show the toast bar based on settings to enhance user experience by allowing
refactor the return statement in WindowsSecurity . java to use a lambda expression for better readability to improve code clarity and ensure proper resource
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and updated method names for clarity to improve code
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized messages instead of hardcoded strings to improve user experience
tika - 3452 -- add mime magic for xlsf and xlsf , also add tika - ooxml file
added logging statements and refactored join methods in multiple classes to use FixJava for improved clarity and functionality to enhance debugging capabilities and
( chore ) camel - eip - documentation - enricher : upgrade to camel - 1.5 . 0 and camel - 1.
add - dcassandra . skip _ schema _ check to skip schema check
added debug logging for stored audio notify and playback devices in DeviceConfiguration . java and set default capture device in PortAudioAuto . java to improve
added ` WebsocketConfig ` class and modified ` ReactorNettyWebSocketClient ` constructor and methods in ` ShenyuConfig `
fix : joor do n ' t log test failure in cachevalidationlistener .
updated content length handling in MoreIndexingFilter to check for empty values before adding to the document to ensure that only valid and non - empty content
move synchronization to a separate private method to improve code readability
refactor timeseries creation logic into a separate internal method to handle PathAlreadyExistException to improve error handling when concurrent inserting of non - existent time
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean results
changed access modifiers from public to protected for several methods in the Shadow classes to restrict access to these methods for better encapsulation
server : make sure we do n ' t have to finalize the owner in the db when allocate or reserve public ip be use by the caller
removed unnecessary value assignment for ` _ valueString ` in ` HttpParser . java ` and updated test names in ` HttpParserTest . java `
refactored thread initialization logic in J9VMInternals . java and removed the completeInitialization method from Thread . java to improve code organization
added an implementation of the ` getExternalStoragePublicDirectory ` method in ` ShadowEnvironment ` and created unit tests in ` EnvironmentTest ` to enhance
[ jbrules - 3504 ] add test case for mvel type coercion in jdk9
updated import statements and formatted code in multiple Java files to improve code readability and maintainability
added exception message to the log message in the construct ( ) method to provide more context for the error thrown during action construction
fix siputil . copyfrom to number that start with ` ` tel : ' ' .
refactor visibility logic for shared file icon in FileListListAdapter to improve readability and maintainability of the code
deprecated the deprecation of HIVEOPTSORTDYNAMICPARTITION in HiveConf . java and updated test cases in TestTxnCommands3 . java
refactor ` ExecuteStatementOperation ` and ` Operation ` classes to incorporate ` confOverlay ` as a parameter and log the query
replaced usage of ` Lists . newArrayList ( ) ` and ` Sets . newArrayList ( ) ` with direct usage of ` Arrays . asList (
replaced ` getName ( ) ` method calls with ` getTypeName ( ) ` method in ` OGRDataStoreTest ` to ensure consistency in type
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to simplify the interface by eliminating unnecessary functionality
refactor wallet class to improve readability to enhance maintainability and facilitate future updates
camel - 14284 : fixed the issue that camel - netty - http do n ' t work with the default port . thanks
update testnonblockingapi to use log instead of system . out . println
added a boundary check for the row index in the connection list to prevent index out of bounds errors when accessing the connection list
pmd : add rule violation for method with the same name as the enclosing class
added ExtendedPlatformComponent class and integrated its methods into ManagementFactory to manage platform managed beans to facilitate better management and management of platform
replace single quotes with double quotes in SQL statements to ensure SQL statements are formatted as single quotes for consistency
updated JSON parsing paths in various test classes to include the " org / km / xchange / bleutrade / dto " and "
refactor TextEscapeUtils class for improved readability to enhance maintainability and ease of future updates
added a filter parameter to the AbstractSpatialFieldType and modified the query creation in TestSolr4Spatial to conditionally return a filtered query based on
added progress indicator for auto - email sending in GpsLoggingService and invoked it in AutoEmailHelper to improve user feedback during auto - email
refactored inlinks from ArrayList to HashSet and added iterator method to improve performance and reduce memory usage
[ tradfri ] remove old discovery result when stop
modified testFilterForPartition method to accept a filterAtServer parameter to enhance flexibility in partition retrieval based on server settings
added " Abandoned " status to multiple workflow states in TicketModel and updated related pages to include this new status to enhance ticket management by allowing
set default value of columnAliasPrefix to null in DatabasePlatform . java to ensure columnAliasPrefix is always set to avoid potential null pointer exceptions
updated data handling in LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer to use BytesWritable instead of Text to improve
show a warning if the user run on a non - native jvm on a 64 - bit system
simplified conditional checks for PdfName . PARENT and PdfName . B in PdfCopy . java to improve code readability and maintainability by redu
added a new option " DAEMON " to the OptionEnum and implemented daemon functionality in TerminalClient to enable starting a web pendant
added a new class ` FlushIndexTask ` to handle index flushing in the benchmarking process to facilitate the flushing of index data
include estimated size of sstables when create a memtable flush writer . patch by jbellis
added a condition to check for SEASONS in the expectedOutput condition to ensure proper handling of SEASONS output alongside
added a new file LocalSocketAddress . java to test IPv6 availability of a DatagramSocket to ensure that the local address is correctly bound to
updated grid size coordinates in GridSizeMigrationTask . java to reflect new grid size parameters to ensure correct positioning of grid size points for better
replaced calls to ` getName ( ) ` with direct access to ` name ` in ` SerializerPojo . java ` to simplify code and
added support for read - only transactions and modifications in the Context class to ensure proper transaction management and prevent operations in read - only contexts
refactor LookAndFeelCommand class for improved readability to enhance maintainability and clarity of the code
updated logic in BlockBoxing . java to use ceiling instead of floor for lastRunEnd and adjusted offset check to improve accuracy in determining
added additional exception assertions in GracefulStopTest to ensure proper handling of EofException and EOFException in tests
refactor NetJavaImpl to simplify lock management and improve HTTP connection listener management to enhance code readability and maintainability by reducing complexity in
refactor NetworkParameters class for improved readability to enhance maintainability and ease of future updates
updated the allowAccountAssetOptimization setting logic in DynamicPropertiesStore . java to ensure asset optimization settings are consistently applied based on the current
added a new constant J9 _ GC _ POLICY _ NOGC to the VM class to manage garbage collection policy without garbage collection
added validation for transaction proto in TransactionCapsule . java to ensure proper handling of invalid transaction proto values
[ java ] remove strictexception rule which be no longer need .
updated resource path formatting and improved logging messages in HelpContent . java to enhance clarity of resource retrieval and provide a fallback mechanism for missing
added a new class ` ProcessorInfo ` to determine available CPU cores and read the ` / proc / self / status ` file to enhance CPU
added - html option to print stylesheet ( default stylesheet be default . xsl )
fix jakarta logback system constructor and deprecate the use of optional .
added service component recovery change handling and updated data updates in HostLevelParamsHolder and HostComponentRecoveryChangedEvent classes to improve handling of cluster ID and
removed conditional property for tag propagation in ` SleuthTagPropagationAutoConfiguration ` and updated test cases in ` SleuthTagPropagationAuto
refactor RustCompileUtils to use a switch statement for depType handling to improve code readability and maintainability by consolidating conditional logic
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to improve
hbase - 25819 halfstorefilereader . seekbefore ( ) should always seek to the first key in the file ( #
hhh - 14850 - deprecate generationtiming . always in favor of generationtiming . always
add parameterized test for layer norm with n ( 1.5678 )
refactor ` showShareFile ` methods to use ` getFileOperationsHelper ( ) ` in multiple activities to improve code consistency and maintainability by
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of ` LiquibaseUpdate `
convert the value of " proxyType " to uppercase when setting it to ensure consistent formatting of proxy type values
add a mod _ minecraftforge that hook to make sure the dungeon loot attempt be initialize .
refactor JdbcDatabaseSnapshot to use separate keys for table and column retrieval to improve code readability and maintainability while ensuring accurate filtering based on
added a new Container container with a CSS border setting in CSSBorderTest . java to enhance UI customization by adding a label to the container
added conditional configuration for RetryTemplate and introduced a new RetryableStatusCodeException class to improve error handling for HTTP status codes in the load balancer interceptor
update superclass constructor from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure compatibility with the new layout requirements
updated the calculation of parentTaskName from using nanoseconds to current time to improve accuracy of task name generation by using current time instead of current
added error handling and logging for parsing invalid Add Service requests to improve robustness and provide clearer error messages when parsing input fails
refactor code to simplify the condition for accepting versioned files only to improve readability and maintainability of the code
[ giac ] fix round for x [ 2 ] and x [ 0 , 1 ]
rename AnonCipherWithWantClientAuth class for consistency to improve code readability and maintainability
mark multiple instances of the method as deprecated in the ProducerTemplate class to indicate that these methods should no longer be used and may be removed in
updated JLayer class implementation to improve performance and maintainability of the code
use assertTrueAllTheTime in assertTrueEventually instead of sleepatfixedseconds in evictiontest .
replaced the ` encodeInternal ` method with a direct variable ` saltedPass ` in the ` Md5PasswordEncoder ` class to
replaced local reference to ViewTreeObserver with direct calls on mTaskRecyclerView to simplify code and improve readability by reducing unnecessary local
refactor Response class to improve error handling to enhance reliability and maintainability of response processing
change sstablemetadata . maxtimestamp from long . min _ value to long . max _ value
remove unused import and set preferred size to 200x60 in securitypanel . java
added null and empty checks for replies in multiple classes to ensure that replies are not null or empty before processing to avoid potential errors
refactor HitbtcBalance class to replace ToStringBuilder with Objects utility methods and add expected exception handling to improve code readability and ensure
fix ( sql ) : fix ` ` where clause do n ' t work with in statement ' '
updated return statement in RetriesExhaustWithDetailsException . java to return the actual addresses as a string to improve clarity and consistency
added OpenCookie import and refactored file opening logic in EditGcodeFile . java to improve cookie management and streamline file opening process
updated HTTP client imports and replaced deprecated connections in JsonToGrpcApplicationTests . java and JsonToGrpcApplicationTests . java to extend
updated energy handling logic in PipePowerWood . java to correctly account for the stored energy values to ensure accurate energy management in the battery
added a check to delete the temporary output file if it exists to ensure that temporary output files are properly cleaned up after session operations
updated the constructor parameter name from " date " to " id " in BitstampWebSocketTransaction . java and added new test cases for trade and
[ hotfix ] [ runtime ] optimize replay eip to reduce object allocation
updated expectedCitation string formatting in CitationStyleGeneratorTest . java to improve code readability and maintain consistency in formatting
added new constants and SQL statements for inserting columns in MediaTableFiles . java to improve code readability and maintainability by reducing redundancy
g3d - > show only definition for exam in av ; show only definition for equation in exam
add null check to prevent npe
added caching logic to handle cases where startRow is null and scanRoot is false to improve performance by reducing unnecessary scan operations
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved performance to enhance performance and reliability of mathematical operations
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a mechanism for enabling or disabling
[ hotfix ] [ runtime ] fix typo in execution vertex javadoc
added a condition to set the density to 3f when scaling is 3 to ensure consistent density display across different screen sizes
rename the ` optional ` field and related methods to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in variable
hbase - 25826 regionstatestore should log exception in info ( ) log ( addendum )
refactor assertTrueEventually to use a lambda expression instead of an anonymous class to improve readability and reduce boilerplate code
updated warning message format and improved async context handling in AsyncHttpConnection . java , modified test classes and logic in AsyncContextTest . java
added a boolean parameter ` showArrow ` to the ` title ` and ` subtitle ` methods in ` SearchUiManager ` to provide control over
added a break statement in Database . java and removed the testSetMode ( ) method from TestRowLocks . java to ensure proper handling of
skip llvm test that fail on amd64 only
refactor scalar handling to support Integer and IntValue types to improve type safety and ensure proper conversion of input values
update primary key validation logic in CreateTableStatement . java to provide clearer error messages for missing or mismatched primary keys to improve clarity
added conditional logic to set drawable resources based on LMP status in multiple classes to improve UI appearance for devices running the LMP language
throw an exception when there be no isolate to query for flutter view
added multiple HeadersConfigurer methods for adding content type options , protection , cache control , and frame options to streamline header writer configuration for better
refactor ObjectEnumerableAssert for improved clarity to enhance maintainability and readability of the code
kristianrosenvold : rename smoketest to distributedcdptest , and move it to the router
added type attribute to the @ aggregateroot annotation in eventsourcingrepositorytest .
added support for the " PREBUILT _ PYTHON _ RULES _ SUBDIR " option in the Python binary and test descriptions to
added client authentication handling in NetServerOptionsConverter and refactored client authentication settings in HttpServerOptions to improve flexibility and maintainability of client
updated paths in HiveConf and MetastoreConf to use user . name instead of " / user / hive " for repl root and cm
updated task view handling logic to include primary and secondary task views to improve the accuracy of task view management based on their IDs
increase timeout on the test to avoid occasional spurious failure
removed the clearAll ( ) method from DataTableTopComponent . java to improve performance by reducing unnecessary data clearing operations
fixed compiler error due to mislead variable name
[ type : fix ] fix bug in operatortreegenerator . consumeallchildrenpipelinebuilderwithexchange ( )
added use of ClassLoaderHandler in module - info . java to enable handling of class loader functionalities in the application
solve problem in event thread , do n ' t set the planning problem
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive information
changed the condition from checking if throwable is null to checking if it is not null to ensure that the code executes only when throwable is not null
updated null check for queryInfo in QueryTimeManager . java to enhance code readability and prevent potential NullPointerException
fix auto workbench ignore recipe with no material
fix gl200 text protocol decoder ( fix # 408 )
rename ` timeColumnName ` to ` incomingTimeColumnName ` and update related references in ` AvroRecordToPinotRowGenerator . java ` to
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
ww - 4494 add initializable support to container
sample longtasktimer in the ` ` timedover ' ' context to avoid leak
changed the data type of SYNC _ DELTA _ RATE from float to double and modified time calculations accordingly to improve precision in time
[ thymeleaf ] [ thymeleaf ] deprecate fragment expression in thymeleaf 4 . x
change type of _ attributes from HashMap to ConcurrentHashMap to ensure thread - safe access to the attributes data structure
resolve http : / / issues . apache . org / activemq / browse / amq - 2358 - fix amq -
added new color constants and updated extractInto method to return fallback colors based on color hints to improve color extraction accuracy and support for dark text hints
added data folder access check for sketch project data in SketchBuilder . java to ensure that only valid data folders are included in the source folder
replaced ` TextUtils . isEmpty ( ) ` with ` StringUtils . isEmpty ( ) ` in ` NotesHelper . java ` and updated related tests
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl to simplify the sessionRegistry initialization process
added logging for connection complete and failed reconnection attempts in NettyStreamingService . java to improve error reporting during connection failures and provide clearer
updated ProxyFactory from Factory to JavassistProxyFactory across multiple test files to ensure compatibility with the internal Java proxy implementation
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency and performance
refactor SocketExceptions to streamline message formatting and improve exception message handling to enhance code readability and maintainability by reducing unnecessary string construction
added a check to ensure the view directory is within the repository directory to prevent errors when the view path does not match the repository directory
remove jabref drag and drop from the < tab - header / >
added ` - XX : + UseCompressedClassPointers ` to multiple test classes to optimize memory allocation usage for compressed class pointers during testing
remove error logging for non - active or replay state in PeerSync . java to streamline the update process by eliminating unnecessary state checks
deleted the ConnectionHook . java file to the functionality was deemed unnecessary or redundant
solr - 12313 : remove testinjection . waitforreplicasinsync in favor of testinjection . waitforreplicas
( chore ) camel - swagger - java : fix assertion error in parameterassert
updated version handling in ApexLanguageModule to use the current external version instead of a hardcoded value to ensure compatibility with the latest apex
update copyright year for new file in src / test / java / org / bugzilla / show _ bug . cgi ? id = 4
refactor AggregateEngine to use IoTDBThreadPoolFactory and update executor service usage to improve thread management and ensure proper thread pool usage
updated WebSocketAsyncConnection to accept a ByteBufferPool instead of using StandardByteBufferPool to improve resource management by allowing the buffer pool to be utilized
added scrollToPositionWithOffset calls to rvThumbnails in UploadActivity . java to improve user experience by scrolling to the appropriate position of the
fix ( sql ) : fix timestamp column alias be override by other column alias
refactored animation handling in LauncherAnimUtils and added transition animation methods in LauncherStateTransitionAnimation to improve animation performance and maintainability
added a check to disable the default user agent in the HttpClient configuration to ensure proper user agent settings are applied when configured
added a pubsubHubbub property and its getter / setter in ApplicationSettings and modified FeedRefreshUpdater to check if the pubsubHubbub
changed the access modifier of the finalize method from public to protected to restrict access to the method for better encapsulation
updated method names and logic to check for synthetic classes in StubJarClassEntry . java and CalculateAbiFromClassesStepTest . java to
added dspacewebapp to dspace . app . util to make it work with the rest interface .
added null check for leftTableAlias and a method to retrieve it containing a column name in RowResolver to ensure that the column name is present in
[ hotfix ] [ runtime ] fix string concatenation in jobgenerator
updated transaction broadcast logging to use warning and error levels to improve error handling and provide clearer logging for transaction failures
fix flaky test by increase test timeout
removed redundant initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig ` and ` TestH
added a new enum TlsClientCertPolicy with a string - based way to handle client certificate policies to improve flexibility in configuring SSL
added a debug log statement to indicate when a new alert message is being saved to improve visibility into the subscription process for debugging purposes
added support for WebSocket headers in WebsocketRoutingFilter to enhance WebSocket request handling by associating protocols and sub - protocols with their headers
added a debug log statement for fetching query results in HiveQueryResultSet . java to improve traceability and debugging of query results retrieval
updated dimensions formatting in HolidayEventFormatter . java to remove redundant dimensions to streamline the output for better readability and maintainability
refactor ` FinalizePrivateFieldsTest ` to include an ` ignoreInnerClass ` method and modify inner class fields to improve clarity and functionality
refactor UnexpectedJobExecutionException class for improved clarity to enhance maintainability and readability of the code
deleted the module - info . java file and modified buttonShouldBeOpaque logic in AquaLookAndFeel . java and A
updated ` DrillSidewaysQuery ` and ` DrillSidewaysScorer ` to replace ` maxFreq ` with ` maxCost `
added a new mapping for GeoDegeneratePath in classRegsitry to ensure proper handling of GeoDegeneratePath instances
removed the ` preFill ` parameter from multiple ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool ` constructors
updated taskbar state handling in TaskbarLauncherStateController and added system UI flag in TaskbarStashController to improve taskbar behavior and
added null check before comparing the default style in CascadeDeleteVisitor . java to avoid potential NullPointerException when checking the default style
refactor GuiUtil methods for setting dimensions and update GarqueeLabel and StatusTab classes to improve code readability and maintainability
refactor icon retrieval logic in FileTreeViewHolder to utilize TreeFileExtension for better readability and maintainability to streamline icon selection
updated assertions in ParallelUniverseTest to check for variations of system resource qualifiers to ensure that the test accurately reflects the absence of
fix a potential concurrency issue in xmlreporter where multiple test run concurrently
add a test case for native probability function query
added a call to deregister the current thread in ClientContainer to ensure proper resource management and prevent potential memory leaks
hhh - 14825 fix drop temporary table on sybase phase 15 dialect
simonstewart : fixing color conversion in htmlunit to make it work with the new htmlunit driver .
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve code readability to enhance maintainability and facilitate future updates
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve clarity of memory allocation details in the
refresh ad timeline only when there ' s no adGroup
replaced direct equality check with a boolean variable for clarity to improve code readability and maintainability by suppressing the suppression of the
updated the string resource from ` deg _ text ` to ` unit _ hz ` in ` fetchPropertyValue ` calls to ensure accurate representation of
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
[ hotfix ] [ test ] fix compiler / label / testlabeloptions . java compile error
fix npe in flat vertex format when create new format .
added visibility tags for messages in various interceptor classes and ensured proper span tagging to improve traceability and prevent potential null pointer exceptions
replaced the use of ` ZoneId ` with a direct use of ` TimeZone ` in ` ScheduledTrigger ` to improve code clarity and
added AsyncBucket and InMemoryExtension classes , and modified related methods in Bucket4j and Extension classes to implement asynchronous and custom time measurement capabilities
added regex pattern matching for determining the classpath directory in resexhaust003 . java to improve error handling by checking for the presence of the
modified formatting and error handling in AbstractConnector . java to improve code readability and handle interrupted exceptions gracefully
updated method signatures in OngoingStubbing . java to improve clarity and maintainability of the code
added logic to reuse a web server based on an Optional < WebServer > to improve flexibility in server configuration based on user preferences
replaced productConstructor with constructor in HttpClientUtil . java and added a static import in SolrTestCaseJ4 . java to improve clarity
added a check to ensure that thread allowlist is not empty before clearing it to avoid potential errors when attempting to clear the allowlist
replaced ` setOutputSource ( outputSource ) ` with ` setItemWriter ( outputSource ) ` in ` TransformerWriterItemProcessorTests . java
fix dmndtanalyser to only run overlap query when hitpolicy . collect be specify
add test for sliding window combine with combine . globally ( )
added conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` and improved logging message format to
added assertion to check if the mbean server is running in the ManagedFileWatcherReloadStrategyTest to ensure that the test accurately reflects the
refactor import statements and formatting in the Solution class to improve code readability and maintainability
added privileged access control checks for menu bar usage in AquaMenuBarUI . java to enhance security by restricting access to the
fix fall distance do n ' t work properly on player / player change
refactor query creation and result retrieval in SimpleJpaRepository to enhance clarity and maintainability of the code
added timestamp , parent hash , nonce , and number to the BlockUtil builder configuration to ensure proper handling of genesis block arguments in the block creation
change loop safepoint insertion phase name to safepointinsertionphase if graaloptions . genloop safepoints be true
added null and empty checks for children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by preventing potential
changed access modifiers of constructors and methods in ArtifactResolver class from package - private to public to allow access to these methods from outside the package for
fix some memory leak relate to reactor . stop ( ) in chunkprocessingpipeline
added a check to ensure maxBufferedDocs is at least 1 in IndexWriter . java to enforce that maxBufferedDocs is at least 1 to
added logic to manage the login state in the LoginActivity to ensure the login process operates correctly during configuration changes
added null checks for source and value extraction in Pump . java and introduced a new test for UUID sorting in PumpTest . java to
modified access modifiers from private to protected for several methods in HttpShardHandlerFactory and LBHttpSolrServer to enhance encapsulation and improve code
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy . java and
added Jetty server and handler list functionality to TestJNDI . java to enhance the functionality of the JNDI server by integrating handler management
refactor code for improved readability and consistency in the SortedDynPartitionOptimizer . java file to enhance code clarity and maintainability by
change the return value of the loop check from instanceof NioEventLoop to true to ensure that the loop is always in a valid state before
updated the calculation of newNumNulls and setting logic in StatsUtils . java to ensure newNumNulls does not exceed newNumRows to improve
camel - 18175 : camel - jbang - export should export kamelets from camel - jbang - run or camel - jb
added authorization checks and updated import statements in OSMJob . java to enhance access control and improve error handling during OpenStreetMap uploads
remove some system . out . printlns and replace with basicptxtest . test ( ) .
added clientAuth functionality to IoTDBRestServiceConfig and updated related classes to allow configuration of client authentication based on user properties
replaced the variable ` mocksToBeInjected ` with ` new HashSet < Object > ( mockCandidates ) ` in the ` PropertyAnd
refactor bloomuriuniqfilter to make expected - size and hash - count configurable
updated getCursorAdapter ( false ) to true in HomeFragment . java and added a refresh preference in TweetPager . java to enable refresh
updated the intermediate header height ratio in ProfilePager . java from 1 f to 75 f to improve the visual appearance of the profile header
updated imports and logging in multiple Java files to utilize the new RecompilationEvent class to improve event handling during recompilation processes and
added HOST _ SYS _ PREPPED constant and its getter method in Configuration . java , and updated related classes to utilize this constant
updated the include method to include an additional parameter for handling unknown file formats and added a new test class for handling unknown file format warnings to enhance
remove trail slash from location when it start with ` ` / ' '
added support for entity and score in the StaticPipeline class to enable configuration of entity and score values for enhanced data processing
modified file path handling and added a configuration check for Whoops enabled in WhoopsModule . java to improve file path resolution and enhance
[ geos - 8470 ] catalogrepository . getdatastorebyname should return null if the datastore can not be find
refactor assertion methods in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test classes ` MultiLineJaggedText
( chore ) camel - e2e : fixed test case to show the issue
removed unnecessary writeMeasurementScheams and schemas lists in TsFileWriteAlignedWithTSRecord and TsFileWriteWithTablet classes to simplify
corrected a loop syntax and updated memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to
updated the log file path from " slf4j - log4j12 " to " slf4j - reload4j "
refactor assertion in HueBridgeHandlerOSGiTest to use waitForAssert for improved readability to enhance test reliability by ensuring
change package structure of multiple activity classes from ` com . its . androidide ` to ` com . its . androidide . activities ` to
[ drools - 1276 ] ignore kcontainersolverfactorytest until drools - 1276 be fix
added a constructor to PullRequestMergedEventsStream that reads the Pinot schema from a file , topicName , and personal access token to facilit
fix checkstyle issue in util / ast / expressionoperation / AbstractExpressionpart . java ( # 799 )
[ hotfix ] fix checkstyle violation in taskslot
fix ( netty - ws ) : use close listener instead of onfailure
updated lock release logic to handle LockException when removing the lock to improve robustness by gracefully handling potential lock acquisition failures
replaced Properties loading with ResourceBundle retrieval for GEM _ PATH and RUBY _ VERSION to improve flexibility and maintainability by using a
remove zero _ address field and replace with byteutil . empty _ byte _ array
fix checkstyle issue in util / classgraphclassloader . java ( # 746 )
[ hotfix ] [ test ] fix flaky test in jobmanagerstartuptest
fix : [ datastream ] update default _ format _ name to match java _ format _ string
added a new Bundle instance to FileDisplayActivity to enable customization of file display options
changed ` break ` to ` continue ` for particle processing in ` ParticleEmitter . java ` to ensure the loop continues when the particle is
updated expect statements in AmbariManagementControllerImplTest and AmbariManagementControllerTest to expect a single cluster name instead of two to
removed the nullable attribute from the SERVICE column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry .
refactor Bug4823811 . java files to improve code organization and maintainability
replaced direct addition of patternToDelete with a call to a pathRelativizer using the project filesystem ' s path relaxizer to improve
change requestfullstate ( ) to requestfullstate ( boolean isinitialrequest ) in deconzbridge
added an ` attribute ` property and updated the ` ShibbolethCompatiblePersistentIdGenerator ` class to utilize it for generating persistent IDs
updated the @ Inject annotation in RequestValidationService . java to ensure proper dependency injection for the service
added logging functionality to the hide keyboard message in UiThreadHelper . java to improve tracking of user feedback during keyboard hiding
removed unnecessary lines in ` FileNodeProcessor . java ` and added multiple import statements in ` MManagerBasicTest . java ` and ` M
refactor NavigableMap and NavigableSet classes for improved performance to enhance performance and maintainability of the code
add a testslurpfile ( ) which verify that the slurpfile ( ) and slurpfilenoexceptions throw
added @ FunctionalInterface annotation to several classes to indicate that these classes are intended to be functional interfaces for functional interfaces
refactor span retrieval in TraceWebFluxTests to use a helper method for better readability to improve code maintainability and reduce duplication in
added support for date conversions in ETypeConverter and modified HiveSchemaConverter to handle date types to enhance date handling and improve compatibility with Hive schema
replaced hardcoded carriage return with a constant - line separator from Patterns . COMMA _ SEPARATOR to improve code readability and maintainability
ggb - 1343 make sure table value be inited when user click on it
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability to enhance error handling for mismatched column counts in
refactor WANDScorer to improve handling of cases where no candidates are found in the current block to enhance accuracy and correctness of scoring
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to enhance clarity and maintainability of the code by
initialized ` curPixVal ` to a default value and added a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and
fix a bug in the biome dictionary where the list of supertypes would result in an infinite loop .
corrected the spelling of " withinTolerance " to " exceedsTolerance " in the BoundedLocalCache class to improve code readability and
replaced the @ Ignore annotation with @ Stability in TaplTestsLauncher3 . java to enable test stability for different flavors
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check for non - empty ` logFileSuffix ` in ` SnippetUtils . java ` to ensure that ` logFileSuffix ` is not
refactor PythonBuckConfig class structure to improve code readability and maintainability
added tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of system shared library names in the ShadowPackageManager
fix meiligao protocol decoder ( fix # 113 )
fix a nullpointerexception in powerdiode when there ' s no power
added an asynchronous task to trim cache changes and updated cache size handling to improve cache management and provide user feedback on cache size changes
move import of ` com . google . api . client . util ` from ` rendertasklistgenerator ` to ` com . google . common
updated access control checks to throw ` NotAuthorizedException ` instead of returning ` false ` to ensure proper error handling for unauthorized access control requests
refactor schedulePeriodically method signatures to use a new abstract method and suppress warnings for unused parameters to enhance code clarity and maintainability by
replaced refreshListOfFilesFragment ( false ) with onItemClicked ( ) for handling file selection events to improve user interaction by ensuring the
added a conditional check for multiple input streams and improved error handling in StreamUtil . java to enhance robustness by selecting a random input stream
refactor methods in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to simplify table creation
added a volatile boolean ` aborted ` and modified the ` start ( ) ` and ` abort ( ) ` methods in ` FixedRateFragIns
updated indentation logic in multiple parser classes to include a condition for less than 4 characters to improve code readability and prevent unnecessary indentation issues
added broadcast receiver for wifi status change in android . http : / / github . com / cincheo / cincheo
remove redundant control frame check in FrameGenerator . java to streamline the code for better readability and maintainability
added visibility setting for the collapse handle in the WidgetsBottomSheet to ensure the handle view is visible for better user experience
added new files ` Issue475 . java ` and ` XSS . java ` to handle HTML and JavaScript request handling to enable HTML and
added a condition to return early if no units are scroll to optimize performance by avoiding unnecessary processing
change condition from " > " to " ! = " in the contract list size check to ensure that the contract list size is not equal to
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes with null checks to ensure proper handling of enum values
added hashCode method to IPPPrintService and created TestRaceCond class for validation to ensure consistent hash code generation across print services
hhh - 14850 - fix db2z and db2i dialect to use getversion ( ) instead of getiversion (
bugfix : do n ' t try to connect if transaction fee > 0
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
add check for buffer encryption in queueinputbuffer and queuesecureinputbuffer .
removed the ' public ' access modifier from multiple classes in the AsynchronousAntn , BulkheadAntn , CommandBinding , and LiteralCommand
added import statement for Retrofit in Part and PartMap classes to utilize Retrofit functionality in the code
refactor JsonBuildHelper and ParamsBuildHelper to simplify handling of Java _ OBJECT _ FULLY and improve parameter handling to enhance code clarity
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of nullable types in AbstractFloatingView . java to enhance the functionality by allowing
fix : update gapic - generator - java with mock service generation fix ( # 119 )
update alpha calculation logic in ClipAnimationHelper and add hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on
removed an additional parameter from the createRenderScript method call in AllAppsView . java to simplify the render script creation process
fix typo find by codespell on fossies . org
refactor PluginListCellRenderer and PluginTableModel to utilize a dedicated method for system bundle checks to improve code readability and maintainability
updated import statements and formatted code for consistency in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replace hardcoded value of 0.005 with a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest . java to
refactor configuration handling by replacing ` rocketConfiguration ` with a new ` Configuration ` object and adding selectedIndex logic to improve code clarity and
updated the method to store the result of findAttache to improve readability and maintainability of the code
fix nullpointerexception in defaultrecordstore when mapservice . todata ( ) return null
kvm : throw instead of return null when it ' s not possible to enable the machine
updated error messages to include specific attribute names to improve clarity of error messages for better debugging
changed constructor parameters from ` InvocationContainerImpl ` to ` Object ` in ` BaseStubbing ` , ` ConsecutiveStubbing ` , and
added a method to strip method parameters and updated the getMethodLine method to use this new method to improve code readability and maintainability by encaps
updated VERSION _ NAME and VERSION _ CODE for the new GreatVoyage application to reflect the latest changes and improvements in the
make outputfilter more efficient by use set instead of list
update symbolmblayer to use new key , rather than hardcoded string
ggb - 2333 center popups when there ' s overlap feature
update error messages in ValidationSuite . java to use consistent capitalization to improve readability and maintain consistency in terminology
refactor StartingWindowListener implementation to improve task launching to enhance modularity and maintainability of the code
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to clarify that the functionality is inherited from MBeanServerConnection
updated exception messages in CheckPackageAccess . java to reflect package access and package definition security exceptions to improve clarity and specificity of error handling
increase await termination time in ThreadSafetyTest from 30 seconds to 90 seconds and add assertion to ensure that the executor service does not terminate
disable log if there be no ` ` xrlog . loggingenabled ' ' set
added @ JsonIgnore ( true ) annotation to Schema . java to prevent serialization of certain fields during JSON processing
increased test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder to allow more time for tests to complete successfully
updated method signatures and variable names in SimpleNaiveBayesClassifier for consistency and clarity to improve code readability and maintainability by
updated CheckDatabaseHelper to extend CheckHelperControllerModule and CheckHelperAuditModule to enhance audit logging capabilities during database operations
updated Prototype . java with changes in method implementations to improve consistency and maintainability of the codebase
added a check to assign a default value for tableIsTransactional if it is null to ensure that the table is marked as transactional when it
[ java ] remove fragment write from recording writer that be n ' t need .
fix subtitles not work with negative time value .
fix test failure cause by datastoremetricqueryimpl . getalias ( )
updated CurrencyPair instances from BTC _ CAD / CAD to BSD / USD and added multiple related currency pairs to standardize
hhh - 14686 fix resource leak in unit test
updated KafkaSender import statements from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to
added two new files , GwtBinaryIntegrationTest . java and A . java , to implement testing for GWT binary builds to ensure proper
modified mouse event handling in BrowserContentPane and changed ResultSetRenderer to ResultSetResultSet in SQLConsole to improve user interaction and handle potential exceptions during metadata
reformatted code for improved readability and consistency in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to enhance maintain
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to utilize a shared variable for XML security property
added new files ` InterfaceWithDefaultMethod0 . java ` , ` InterfaceWithDefaultMethod1 . java ` , and implemented default methods in subclasses to
replaced " LIKE ( ? | \ " % _ \ " ) " with " GLOB ( ? | * \ " ) " in
make dmnprofiles protect to allow subclass to access it
fixed - rscript . load ( ) and rscript . loadallasync ( ) method do n ' t work for slave node . #
refactor EspressoLanguage and StaticObject to improve code readability and structure to enhance maintainability and streamline the handling of volatile field
updated logging statements from ` debug ` to ` verbose ` in multiple files to provide more detailed information about the number of targets and their sizes
[ java ] retain and release the fml packet before send it to target .
added a new constant for HTTP Jetty server handlers in ExecConstants . java and updated WebServer . java to use this constant to improve config
replaced the handling of shortcuts to include removed shortcuts and improved the management of removed shortcuts to enhance shortcut management by ensuring removed shortcuts are properly
remove unnecessary type check for string in defaulthttpclientbinderregistry ( # 2598 )
removed the case for the home button in DetailFragment . java to streamline navigation by eliminating unnecessary navigation logic
added a condition to check if the Android Market is present in the includesPlayServices condition to ensure that services are only included with the Android
refactor TableBlockParser to handle edge cases for cell parsing and add tests for whitespace and zero - length headers to ensure proper rendering of tables
added support for a bridging header in NewNativeTargetProjectMutator and related classes to enhance flexibility in managing project bridging headers
refactor PotentiallyDeadCode . java to improve handling of unused methods and streamline source path generation to enhance code readability and maintainability
added diamond finding functionality and new classes related to redundant arguments to enhance type safety by warning users about redundant diamonds in type
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed unnecessary import and debug logging statement in SolrCacheHolder . java to streamline code by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory to ensure proper error propagation for authentication issues
modify the comparison of zero in the float comparison from ` d1 ` and ` d2 ` to ` d2 ` to ensure accurate comparison
added ` logback . dev . xml ` configuration file to JoobyMojo and updated Paths in Main . java to enable development logging configuration for improved debugging during development
added a new file JaasEventCheck . java that implements ApplicationListener to handle Jaas authentication events to improve event handling during authentication failures and
refactor the handling of views in QuickstepTransitionManager to use a list for managing visible views to improve code readability and maintainability by
refactor ConjunctionSolrSpellChecker to use ` . equals ( stringDistance ) ` instead of ` ! = ` to improve string comparison
changed the type of the ` fetchers ` variable from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
agent : make storage pool command timeout configurable
updated JDBC _ TABLE to JDBC _ SCHEMA in AbstractJDBCConnectorProvider . java to ensure correct table name is used for database connection management
corrected the spelling of " SQL " in multiple files to improve code readability and maintain consistency in naming conventions
updated schemaTypeCache initialization to use a synchronized map to improve thread safety and simplify schema type caching logic
update header handling logic in StaticServerHttpHeadersWriter to check for headers to ensure headers are not overwritten when they already exist to improve header management
added an import statement for JUnit ' s Ignore annotation and annotated a test in LatticeDemo . java to mark the test as ignored due
added a method to create the storage directory for the test to ensure the storage directory exists before running tests
added http . setChunkedStreamingMode ( 1024 * 1024 ) to StarTreeJobUtils . java to optimize streaming performance by allowing chunked
jasonleyba : add basicsyntaxchecker and test for basictype
hbase - 25813 addendum update hbase - thirdparty dependency to hbase - thirdparty
added a test to verify that beans with a recursive structure must not cause a stack overflow exception to ensure that the BeanPopulator correctly handles nested
added IOException declaration to the getRemoteName method in AccountingTransceiver . java to ensure that the method can gracefully handle potential I / O
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl . java and refactored HttpClient creation in ClientFactoryImpl . java to improve error
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser and related classes to enhance security flexibility by allowing AspectJ methods
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
removed the ' final ' modifier from the ' item ' variable and added an ' remove ' method to the OHLCSeries class , along with
updated method calls from ` invoke ( ) ` to ` invokeUrgent ( ) ` and modified assertions in ` CompactFormatIntegrationTest `
refactor the way joint edges are destroyed in the world to improve resource management by ensuring proper cleanup of joints to avoid potential memory leaks
fix match in contact list instance where no filter string be set .
[ hotfix ] [ test ] move sourcereadertestbase to test package
refactor exception handling in DocumentsStorageProvider to include a try - finally block for better error management to improve code readability and maintainability
added two new HookDefinition and JavaHookDefinition classes , and created a corresponding JavaHookTest class to implement and test the registration of before and
refactor deadlock handling in QueryExecutorImpl by introducing a new method ` flushIfDeadlockRisk ` to improve code readability
modified the ` setExoOptions ` method to include a ` allowTs ` parameter for better control over video playback options to enhance flexibility
removed the User , Form . TONE , and Role from the identifier collection in DMRDecoderState . java to clean up unused identifiers and
added a static INVISIBLE color and improved the toString method formatting in Color . java , and refactored imports in RailButtonShapes
updated the null handling logic in CountAggregationFunction and added a new test for total count with null handling in DataTableIntegrationTest to ensure correct
initialize ` deep ` to - 1 in ` InternalTransaction ` class to ensure proper initialization of transaction state
escape the name in XML format before appending it to the buffer to ensure that the name is properly formatted for XML data
updated the initialization of ` workDir ` to use a configurable directory in multiple classes to allow dynamic configuration of the work directory for better flexibility
[ jbrules - 3514 ] added support for deprecate attribute in the ruleset
fix amd64directcallop to use codebuffer . position ( ) instead of dummy
refactor TimeRange to use static final minStamp and maxStamp constants to improve code readability and maintainability by avoiding magic numbers
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the code
refactor code to encapsulate JSON emission logic into a separate method to improve code readability and maintainability by reducing duplication
refactor attachment checks in DetailFragment and GalleryActivity for improved readability and consistency to enhance code clarity and maintainability by standardizing
fix tank not drain when not need
updated CsharpLibrary . java to handle DotnetLibraryProviderInfo and source path resolution based on RuleAnalysisLegacyBuildRuleView to improve
of - 2321 : handle iq . type . get to send the service to other pep server .
[ intrinsics ] do not try to create an intrinsic graph if runtime be null
fix metrictrackingwidmillserverstub do n ' t refresh active work when it ' s empty
pdfbox - 4892 : cache object id and object offset , a suggest by valerybokov
added constructors to LwjglAppletApplication that accepts a Canvas parameter and updated the LwjglNativesLoader to manage native loading
updated DockerClientConfig handling in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve null safety and simplify string representation to enhance code readability and
refactor ` doPostAuthentication ` and ` AccountStateHandler ` to handle multiple messages based on ` ldapPasswordPolicyConfiguration ` to improve code
refactor Int2ObjectCache . java for improved performance to enhance efficiency in object caching operations
added a private String field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to enhance
refactor Readable class to improve method readability to enhance maintainability and ease of understanding for future developers
update JsoupNonVisualRegressionTest to use TestSupport for page break behavior to improve test reliability and maintainability by using a
updated the share menu item icon from ` share _ menu _ item ` to ` ic _ menu _ share ` to improve the visual appearance
added support for Java 9 and Java 8 in Constants . java to ensure compatibility with different JVM versions of Java 8 and 9
modified IS _ JDBC41 initialization to include both AbstractMethodError and NoSuchMethodError in addition to true to ensure correct handling of non - JDBC
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredList in Enclosed . java to improve performance and memory efficiency in handling collections
added multiple @ Override annotations in multiple authentication - related classes to ensure proper method overriding and improve code clarity
added duplicate lines for png , jpg , and gif in ChartProvider . java to improve code readability and maintainability
fix ` ` work directory not find ' ' error when import from an external database
removed a block from the return statement in JavacParser . java and added a new ExtraSemiTest . java file to simplify the
added support for querying users by date types including after and before keywords in the User and UserRepository classes to enhance functionality by allowing users to find
refactor Test15FloatJNIArgs class for improved clarity to enhance maintainability and readability of the code
updated import statements and URL parameters in mmm plugin . java and pppPlugin . java to improve versioning and accessibility of PlotSquared
updated substring logic in MockProcessContext and added a test for encryption and decryption to correct the substring handling and ensure correct functionality through unit testing
[ java ] aeronarchive : prevent recursive call in callback .
added a null check for the dependency before merging it in OpProcFactory . java to avoid potential NullPointerException when merging dependencies
added timeout attribute to @ Test annotations in SslBytesServerTest . java to ensure test execution has sufficient time to complete before proceeding
fix typo find by codespell on fossies . org
updated method names and added new interfaces in RealtimeIndexingCoordinator , RealtimeSegment , StreamProvider , and StreamProviderConfig to improve clarity
modified FailureWatcher to check for null before calling writeTo on exportedData to avoid potential NullPointerException when accessing viewCaptureDataSupplier
updated popup positioning logic and improved popup visibility checks in RecyclerViewFastScroller . java to enhance scrolling behavior and ensure proper positioning
updated the command to restart IntelliJ and added a tool window instantiation check in BuckEventsConsumer to ensure proper handling of tool window
added a conditional check for Windows before creating a JCheckBox in GeneralTab . java to ensure that the preventSleep checkbox is only added on Windows
updated import statements from ` javax ` to ` jakarta ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align with the
updated cropping and resizing calculations in QuickstepAppTransitionManagerImpl and FloatingIconView to account for vertical bar layout to ensure proper
added full - screen exclusive mode management to XWindow and its peers to improve user experience by managing the visibility state of the full - screen window
fix playeddurationstr ( ) and playeddurationstr ( ) issue
added credential handling methods for DAGs in DagUtils . java and integrated them in TezTask . java to enhance security by ensuring
optimize map iteration : entryset ( ) instead of keyset ( ) . in one case loop be change with parametrised constructor
trim whitespace from thread names when setting the thread ' s name to ensure consistent thread naming and avoid potential issues with leading or trailing spaces
updated the MsgBox message to indicate whether the next point has been logged to a file to improve user feedback by providing clearer guidance on
[ hotfix ] fix checkstyle violation in job
added a new abstract static class ` Unused ` with methods to retrieve integer , boolean , and double fields to ensure proper handling of unused types
ambari - 20836 . update hbase _ master _ host to hbase _ master _ hosts in hbase - e2e
deleted the EventReaderDeserializer and EventWriterSerializer interface files to remove unused components to streamline the codebase
modified the ` performJoin ` method to return a list of output records instead of a single instance to enhance flexibility by allowing multiple output records
updated delegate lock period validation logic and references across multiple classes to ensure proper handling of maximum delegate lock period and improve error messaging
fix npe when try to create a pf profile without a network rate .
removed default constructor and overridden the applySpecification method in CmcExchange to ensure proper initialization and specification handling for the exchange
updated configuration handling in GossipLocalNode to use " seed . node . ip . list " instead of " seedNodes " to improve flexibility
set default value of ` hazelcast . client . tpc . enabled ` to ` false ` in ` clienttpcconfig ` ( #
upgrade swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality
refactor the key assignment logic in NamedObjectList . java to handle blank names more gracefully to improve clarity and prevent potential null pointer exceptions
updated cleanup methods to use cleanupEmptyTableDir instead of cleanupEmptyDir across multiple classes to improve code clarity and handle FileNotFoundException during directory cleanup
refactor AsyncCache and Cache classes to improve code organization and maintainability
added import for RCFileInputFormat and registered it with Kryo in SerializationUtilities to enable handling of RCFileInputFormat in the serialization process
added methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java types and categories to enhance type mapping functionality for
added error handling for port parsing and improved response validation in Request . java to ensure proper error reporting for invalid host headers and provide clearer
refactor ShadowTimeZoneFinderTest to use ReflectionHelpers for method invocation instead of direct TimeZoneFinder usage to improve compatibility with SDK version P and enhance
no effective change - code cleanup - remove unused method
changed the access modifier of ` segment ` and ` dir ` from ` String ` to ` private final Directory ` in ` SegmentCoreReaders `
added methods to check for main thread profile existence in the aggregation system to improve performance by avoiding unnecessary queries when checking for main thread profiles
added error handling for annotation definitions in ` InterfaceValidator ` and a corresponding test in ` InterfaceValidatorTest ` to ensure that annotations are not allowed
updated constant names from " greekLowerCase " , " irishLowerCase " , " uaX29UrlEmail " , and " t
updated HSSFSheet and Sheet classes to improve code organization and maintainability
re - enable discovery search request processor since dspace 4.0 .
removed specific timezone entries from a list in BasicDateTime . java to clean up time - related data before processing
updated SurfaceSyncGroup initialization to include " TaskBarController " to clarify the purpose of the SurfaceSyncGroup
updated GridFsTemplate to directly use ` getId ( ) ` instead of ` getObjectId ( ) ` for deletion and modified GridFSResource initialization
added tests for retrieving total size and bytes in ShadowDownloadManagerTest and implemented related methods in ShadowDownloadManager to ensure the query returns at least
modified the condition for inserting characters in TextField to use a boolean for enter state to improve readability and maintainability of the code by simplifying
added equality check in GroupNodeViewModel to prevent unnecessary processing when the target is the same
refactor afterSetStatements method in Lower . java and BlockLexicalContext . java to improve statement handling logic to enhance code clarity and
added hashCode ( ) method to IntervalXYDelegate and updated equality checks in XYSeriesCollection to ensure consistent hash code generation and improve object comparison accuracy
add cleanup to clientqueuedisruptiontest to avoid test flakiness
refactor CloudWatchAppender and improve test structure in RegisteredServiceScriptedAttributeFilterTests to enhance code readability and maintainability while ensuring correct functionality
updated method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in Gson . java to improve
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . wait
added checks for empty language tags and improved language canonicalization logic in Locale . java and LanguageTag . java to ensure proper handling of language
cloudstack - 7037 : if kvm . ssh . to . agent be set to true , do n ' t allow ssh into
[ hotfix ] [ runtime ] fix checkstyle violation in schedulerwhen
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to remove the dependency on the viewpager extensions package
added a condition to exclude those containing " - " in the filter condition to ensure that the filter does not contain specific characters in the input string
updated sort column order text from " natural order " to " Natural column order " in BrowserContentPane . java and refactored
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java
updated the write method to encode but not space characters before writing to the remote address to ensure that the remote address is properly encoded without unnecessary space
fix the issue that itemstatetriggerhandler now also check for ` ` smarthome / items / ' '
remove unnecessary sync block in fasthttpdateformat # updateformatcache
refactor file moving logic to use a concurrent executor service to improve performance and resource management during file moving operations
added two overloaded trigger methods in WrapTimer . java to enable scheduling of timers based on specified conditions
modify type string handling to include LOCAL _ DATE and LOCAL _ TIME in addition to SQL _ TIMESTAMP to ensure correct handling of SQL date and time
added a verbose flag to the error logging process in AbstractStatusReporter to enhance error reporting flexibility based on user - defined settings
bugfix : do n ' t open radio tree menu if it ' s unbundled
s2s vpn : do n ' t allow connection to same vpn gateway between same account and customer gateway
updated error handling logic in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to ensure error handling is only invoked once
pdfbox - 4071 : log error if pdf be encrypt to avoid npe
[ 3.0 ] fix curator watcher not be able to wait for zk client to get child to change . ( # 3748
rename AnomalyDetectionResource and its test files to improve clarity and consistency in naming conventions
updated variable name from ` getSelectedItemId ( ) ` to ` id ` and refactored the ` deleteItem ( ) ` method to improve
refactor Java6Assertions and Conditions classes for improved clarity to enhance maintainability and readability of the code
modified the method signature of ` replaceOrderBulk ` to accept a list of ` ReplaceOrderCommand ` instead of a collection of ` ReplaceOrder
modified the method ` enterDefault ` to ` enterIdentNode ` and added a new method ` enterFunctionNode ` in ` Lower ` to
added a new class J9ConstantHelper with a method to retrieve long values from reflection to facilitate the retrieval of long values from
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for multi - threaded verification of ` ITarget ` to
of - 241 : make sure to remove all the roster item when a roster be offline .
updated method calls from ` getProperties ( ) ` to ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a
updated the loadHandle method call in FunctionObjectCreator . java to correct the syntax errors related to function handling
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerExceptions when accessing extTypeCustomDesers
remove system . setproperty ( ` ` mockserver . loglevel ' ' , ` ` warn ' ' )
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
renamed scoreMap to termScoreMap and updated associated references to improve clarity and maintainability by using a more descriptive variable name
updated conditional checks in U64 . java to use ' < ' instead of ' & 0x8000000000000000l ' and added an equals
update headline style in MainViewModel . java to improve text visibility and font size for better user experience
update the notifyChange method to include a check for dark text support to ensure the change behaves correctly based on the user ' s support for
[ hotfix ] [ checkpointing ] fix infinite loop in checkpointrequestdecoders
updated thread pool size and keep - alive time constants in the Parallel . java file and modified import statements to improve resource management and enhance clarity
replaced ` filter ` method with ` anyMatch ` for better readability in the ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver `
added tests to ensure tests fail on Windows ServerCore container to ensure compatibility and reliability of the OpenCV image factory functionality
resolve http : / / issues . apache . org / activemq / browse / amq - 2698 - allow to configure prefetch
change the protocol . getreturnvalue to throw any exception that be throw by the python proxy .
added a new annotation ` Issues ` to the ` Issue ` interface in the ` Issue ` class to provide a list of issue types and
updated user property from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and adjusted test imports
updated socket connection logic to use a resolved address if socksProxyHost is not set to null to ensure correct address is used when socks
[ hotfix ] [ javadoc ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from org . apache . commons . lang3 in ReflectionUtils . java to eliminate unused dependencies and streamline the code
replaced HashSet with LinkedHashSet for excludeProtocols , excludeCipherSuites , and selectedProtocols in SslContextFactory . java to ensure predictable iteration order of
added a static variable to track the system resource and updated logic to return it if it is already available to improve resource management by avoiding redundant
aead decryption : use aead ' s extra size of 16 byte instead of hardcoded value
added a test for handling invalid fallback URIs in the circuit breaker to ensure that the circuit breaker correctly throws an exception for invalid fallback URIs
added SSL support to the CloseableHttpClient configuration in AppPage . java to enable secure connections using HTTPS for improved security
updated PerformanceTest . java to set the size limit and removed the resetBytesReadCounter call to improve performance testing by limiting the size
added getter and setter for the ` preferAES ` property in the ` ProtectionPolicy ` class and removed it from ` StandardProtectionPolicy `
( chore ) camel - opentelemetry : use log instead of print to stdout
remove flaky test of elbintegrationtest . testloadbalancerinstanceoperations
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity by
added error handling for file creation in DiacriticTest . java to inform users when locale or file system is configured to prevent failures during
hhh - 13701 followonlockedingtest . testfollowondialockingtest fail on oracle 11 due to timeout issue
updated file handling in TextureUnpacker to improve error handling and file existence checks to enhance robustness by providing clearer error messages when the atlas
added synchronization to the service change handling in AmbariManagementControllerImpl . java to ensure thread safety during concurrent access to services and components
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the result set does not close the database statement to ensure proper resource management and prevent potential resource leaks
removed redundant input stream mark and reset logic in InputStreamBodyGenerator . java and added new test cases in ChunkingTest . java to improve code
added logic to remove pre - deleted database schemas from the response to ensure that only relevant schemas are returned for accurate data integrity
added a check to remove the " chunkedWriter " entry from the pipeline before writing to avoid unnecessary flushing during HTTP / 1 . x upgrade to
updated EnhancedBrowseFragment and FullDetailsFragment to check for the base item ID instead of the last deleted item ID to ensure accurate item deletion
refactor CSS rule handling by introducing a new interface ` RuleBank ` and updating methods in ` CSSBank ` , ` CSSParser `
tighten up exception handle in jtlscrypto . dofinal
added new TestMonomorphicObjectCall and Object classes with functionalities for testing and object finalization to facilitate testing of object
replaced the ` removeMetaDataSource ` method with a new ` toFront ( ) ` method in ` DataBrowser . java ` and `
hbase - 25827 fix scanquerymatcher . shouldseek ( ) to return null if no time range be present
[ hotfix ] [ runtime ] move local state sub directory from taskmanagerservices to taskmanagerservices
allow alter view to be alter _ logical _ view by default
fix search condition . matchtext ( ) to match whole / sub string
( chore ) camel - helix : catch exception when call routetablebuilderfactory . get ( )
fix a potential npe in the parameter map . patch by jbellis ; review by brandonwilliams for cassandra - 14
( chore ) camel - jms : use char [ ] instead of string for jms password .
bug 7092 : do n ' t throw an exception when call invalidate ( ) in apidispatcher .
refactor ` toSortedListWithCounts ` and ` equals ` methods to use ` ! = ` instead of ` Math . abs ( )
modified the ` initialize ` method to accept an ` original ` parameter and updated the status object to include warnings from the original simulation status to enhance
truffle : transfer to interpreter before get current time .
replaced direct usage of ` tree ` with a variable variable variable in the ` print ` method calls to improve code readability and maintainability
refactor LRUDictionary to ensure proper node initialization and state management to improve memory management and prevent potential null pointer exceptions
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic to enhance efficiency and clarity in packet processing
testquerydns : migrate to junit 5 ( # 4522 )
added a new file NutchServerInfo . java for managing Nutch server information to provide a structured way to retrieve job and running
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter . java to streamline token attribute handling and improve code
added timestamp support to CqlInserter , ThriftInserter , and SettingsColumn classes to enable writing timestamps based on user - defined
updated DSAParameterGenerator logic to use BigInteger . ONE instead of BigInteger . valueOf for better clarity and consistency to improve code readability and
updated NumberUtils and Numbers classes to improve handling of float and double values to enhance precision in conversion between float and double values for better precision
updated masking logic in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for new
added checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve handling of constraint violations for better error management
[ issue # 3543 ] fix setzeroifnotfound error ( # 3543 )
added methods to insert tabs into the tabs container and refactored tab creation logic to improve tab addition functionality and streamline the creation process of
replaced array size specification with zero - length arrays in multiple classes to improve performance and reduce memory overhead by using zero - length arrays
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironment
refactor return statements in MavenVisitor . java to include conditional checks for groupId , artifactId , and scope to improve code readability and maintainability
replaced " MOCK _ APP _ SECRET2 " and " MOCK _ NAME2 " with " MOCK _ NAME _ UPDATE
added a new file FormatCheckingTest . java to test class name format errors to ensure that the application correctly identifies and handles ClassFormatError exceptions
updated line number assignment logic in CodeGenerator . java to improve clarity by directly using the current line number instead of the statement ' s line
added a try - catch block around the retrieval of configuration properties to handle potential exceptions when accessing configuration properties
added overloaded ` createToggle ` methods for creating ` RadioButton ` instances with specified icon and command to enhance the functionality of the RadioButton
update the initial capacity of the cache in LRUCache and adjust CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl
int - 1188 add ' capacity ' attribute to channel and messagebus parser
fix npe in management name strategy when bundle name be null .
added support for load mode via ` ` -- external ' ' system property
[ hotfix ] [ test ] improve yarnsessionfifoitcase ' s shutdown hook stability
replaced the ` projectRoot ` variable with ` androidManifestPath ` in the ` RobolectricTestRunner ` class to improve clarity
http : / / issues . apache . org / jira / browse / amq - 4348 - fix handling of header not propagate
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
implement HasTests interface in RustBinaryDescription and RustLibraryDescription classes to provide test - related build targets for better build management
updated placeholder resource references in FileMessageVH . java from 120dp to ic _ recent _ image _ placeholder to improve clarity and consistency
refactor OnExitTest . java for improved test structure to enhance test reliability and maintainability
added a new method ` onUserPreferenceChanged ` to ` TaskbarManager ` to handle user preference changes to ensure the taskbar is re
refactor HeapDump . java to handle Ibm VM compatibility and improve heap dumping methods to enhance compatibility and maintainability across different JVM versions
( chore ) camel - mybatis : make sure to close the session on exception
simonstewart : use ie instead of firefox to make the test more robust
updated Java version from JDK 5 to Java 5 and refined trigger patterns in IteratorToFor . java to ensure compatibility with Java 5 and improve
set application state to unavailable in JmxApplicationProvider to ensure application is in an unavailable state before proceeding
updated position and limit calculations in ByteBufferAs - X - Buffer , Heap - X - Buffer , and StringCharBuffer classes to improve accuracy in
updated the method to use ` toString ( ) ` directly instead of ` toUri ( ) . toString ( ) ` for splitting strings to improve
added setEmpty methods for various data types and improved array handling in NativeArray , ArrayFilter , DeletedRangeArrayFilter , ObjectArrayData
changed enum declarations from package - private to public for Protocol and Transport to allow access to these enums from other packages
added a new document ` doc6 ` and updated related field additions in ` TestMultiPhraseQuery . java ` to introduce a new document
do n ' t assign pending ticket to reservation if the payment method be offline
added a ` _ onTimeoutThread ` field and modified the handling of timeout listeners in ` HttpChannelState . java ` to ensure proper thread
updated logging mechanisms in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use debug level logging
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
use local _ quorum for read command in local _ serial mode . patch by brandonwilliams , review by jbellis for
added a check for the " Home " model in the HeosDiscoveryParticipant and modified the player ' s serial number handling in HeosPlayer
added a new ` Wait ` class and updated ` PlainSelect ` and ` SelectDeParser ` to utilize it to enhance SQL query parsing
added Neo4j - related imports and refactored code to use AttributeController and Attributes for handling Neo4j node and edge
added null check for serverName in SessionManager . java to ensure robustness by preventing potential NullPointerExceptions
nifi - 3741 : move rocksdb metronome class to nifi - controller - repository
updated the method to retrieve the string value of " IS _ GRANTABLE " to ensure the correct retrieval of the string value from the results
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5308 .
camel - cxf : fix the test error of camel - cxf on macos
added logic to modify or add columns based on whether a column is newly added to the admin to ensure that columns are only modified when needed ,
added the Disposable interface to the Texture class to enable disabling of texture operations
updated WebappRegistrationCustomizerImpl to handle null bundles and modified OSGiAppProvider to extract WARs based on WebAppContext to
check goquorum compatibility only on mainnet if goquorum disable .
replace IOException with Throwable for error handling in HttpInput to improve error management by utilizing the ErrorState ' s error state
added a condition to skip locales that refer to " JP " in the LocaleTest . java file to ensure that the JVM is skipped for
updated API operation references from ` Wrapper ` to ` HostResponse . HostResponseWrapper ` across multiple files to clarify the purpose of the
updated equality check in FilteredQuery to include boost comparison to ensure accurate query equality and hash calculation based on boost
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
[ geogebra ] add symbol table to ` ` select first ' ' , and use vertical panel in ` ` text edit ' '
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that the garbage collection me
fix itemstossevent not be create if entity do n ' t exist
updated key - mapping and prepared statement setter classes to use ItemPreparedStatementSetter instead of KeyMappingPreparedStatementSetter to improve clarity and maintainability by
use identityqueryfilter to make test more robust
added null check for the ' type ' attribute in MiniAapt . java and implemented a corresponding test in MiniAaptTest . java to
added SpEL support to the OperatorEnum and created a new SpELJudge class to facilitate the judgeing of S
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 20727 , use lookup instead of service . providers ( )
updated ConscryptCertStore , ConscryptHostnameVerifier , Java8EngineSocket , Java8FileDescriptorSocket , and Conscrypt
remove attribute resolution warning for attribute names in ` AttributeResolution9 . java ` and replace ` l ` with ` 0L ` in ` Shadow
updated fullOptions to include a new version " 6 " instead of " 1.5 " to enable compatibility with the latest HID features and
[ calcite - 1757 ] pushprojectIntotablesourcescanrule rewrite project list when support metadata
added imports and modified the way localized names are retrieved in AboutActivity . java to improve code clarity and ensure consistent sorting of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added conditional logic to refresh shared preferences based on live streaming settings to ensure shared preferences are only refreshed when live streaming is enabled
added an exception parameter to the MappingException for better error reporting to improve debugging by providing more context about the exception thrown
( chore ) camel - file : replace assert with awaitility in test
fix test compilation after 3689
added support for checking supported transport schemes in GitClientApplication . java and updated repository URL handling in RepositoryUrlPanel . java to enhance transport support
added the delegation name for various input consumer classes and updated reason string formatting in TouchInteractionService . java to improve clarity of gesture handling and
fix changeparentpom npe when there be no mng metadata
added a check for the " Large Page Support " flag and modified logging flags in TestLargePageUseForHeap . java to ensure proper
bug cs - 15929 : check if cloud _ usage db exist before migrate event
updated the ` getTestParameters ` method to throw an ` IOException ` and modified the configuration directory path handling to improve error handling and ensure compatibility with
added a new test class for ObjectStreamClass functionality to verify serialization behavior and ensure proper handling of object stream classes
simplified conditional checks for null dataCenterInfo in ZoneAwareDiscoveryFilter . java to improve code readability and maintainability
updated logging level from error to warn in OpenTracingTracer . java to indicate a failure to capture tracing data is being captured
added a toString ( ) method to the Generator class to provide a clearer string representation of the generator ' s registered count
modified the handling of the ` doquote ` variable and ` dontquote ` variables in the ` URI . java ` class to ensure proper quoting
added resource existence check in ClusterControllerImpl to throw a NoSuchResourceException when the requested resource does not exist
refactor response extraction and signature validation in AccepttoApiUtils . java to improve error handling and simplify response validation logic
removed conditional logic for initializing ByteBuffer based on Android version to simplify code and ensure compatibility with newer Android versions
refactor SybaseASADatabase class for improved readability to enhance maintainability and clarity of the code
add ` ` forceprojection ' ' to ` ` hashjoininfo ' ' for backward compatibility .
added a method ` getStringDistance ( ) ` to return the value of ` sd ` to provide access to the ` getStringDistance ( ) `
added FLAG _ MUTABLE and FLAG _ IMMUTABLE flags to PendingIntent and updated related methods for better management of PendingIntent permissions
added methods to handle read column IDs in HiveFileFormatUtils and updated references in HiveInputFormat to improve the flexibility and functionality of reading
rename ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java `
added multiple instances of ` DisplayTemporaryToast ( ) ` to ` SavedExperiments . java ` and implemented it in the `
added version resolution logic to ` ServiceModule ` and a corresponding test case in ` ServiceModuleTest ` to ensure the service version is correctly set
added a new test class RawSerializationTest for Gson serialization to ensure correct handling of raw JSON representations of collections and parameterized objects
simonstewart : introduce sslcertificategenerator interface to allow the server to generate ssl cert
modified the loop to iterate over replies in reverse order and added padding based on the index of the reply to improve readability and ensure proper layout
increased the timeout duration in the ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access exceptions to
added a new test method ` testNGramFilterPayload ` to validate the payload functionality of the token filter to ensure that the NGram
refactor AclImpl class to improve code organization to enhance maintainability and readability of the code
added a new test for different array sizes in EasyRandomTest . java and removed redundant tests in SeedParameterTests . java to improve test coverage
bug 10613 : fix npe when stop vm due to exception
added a ThreadLocal for handling the ` tryWriteAgain ` boolean in ` SslConnection . java ` to manage thread - local behavior to improve
refactor condition checks and add visibility check for actors in the Actor class to improve code readability and ensure proper visibility checks for actors
added logging for rolling - update steps on deployment group name and message to improve error reporting during deployment failures
[ hotfix ] [ datastream ] fix checkstyle violation in flink - table - connector
added error handling for username not found in DaoAuthenticationProvider and created AuthenticationFailureUsernameNotFoundEvent to improve authentication reliability and provide clearer
updated AtMostXVerificationTest . java file to enhance test coverage for X - verification functionalities
updated default query type handling in QueryComponent , QParserPlugin , and related tests to use the correct LuceneQParserPlugin name to ensure
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added a new method ` isInitialized ( ) ` in ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a
updated the parameters and variable name from ` idToken ` to ` shouldHaveIdToken ` in ` ClientAPITokenIntegrationTest . java `
added transaction management methods in DatabaseAdapter and modified transaction handling in GncXmlHandler to improve transaction management and ensure data integrity during database operations
replace byte array handling with ByteArrayOutputStream for reading data to improve performance and reduce memory usage during string conversion
http : / / issues . apache . org / jira / browse / amq - 4358 - fix npe in messagingtemplate
added an implementation of the ` isAcceptable ` method in ` AutoFormatVisitor ` to check if the source file is an instance of `
added maximum buffered documents and RAM buffer size configurations in TestIndexWriterMergePolicy . java to improve performance by reducing the number of buffered document
added a ` clearWits ( ) ` method to ` Manager ` and a test method for updating witnesses in ` ManagerTest ` to
added error handling for iterator iteration in CopyOnWriteMap . java to ensure robustness by preventing NoSuchElementException when the iterator is not available
[ hotfix ] use log4j instead of log4j in flumenode
updated assertions in BasicAuthIntegrationTest and refactored DaemonStream to use ExecutorService for asynchronous execution to improve code reliability and ensure proper thread
replaced HashMap with LinkedHashMap for the nodes variable to maintain predictable iteration order
log internal error in jerseysupport and return 500 instead of 500
refactor header validation in Http2TestBase . java to use a helper method to improve code readability and maintainability by reducing duplication
added a switch - case structure to handle system properties in the System . java file to improve robustness by avoiding potential null pointer exceptions
changed method parameters from String to CharSequence in StringSubject . java and added corresponding tests in StringTest . java to allow for more flexible and
add miss jfr / jfr / internal / jvm . countertime ( ) and jfr / jfr / internal / jvm . get
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the datasource initialization to use a conditional assignment based on the forCompactor condition to ensure proper initialization of the datasource when using the compactor
[ hotfix ] [ doc ] fix typo in deploymentoptions
updated the method signature of ` updateTextButtonWithDrawable ` to accept a ` Drawable ` instead of ` Drawable . ConstantState ` to simplify
updated resource handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream and StandardCharsets to improve readability and performance of the code
added support for coalesce function in RexNodeConverter and registered it in SqlFunctionConverter to enable proper handling of coalesce expressions in SQL
camel - 16400 : camel - core - hl7 - unmarshal no longer throw exception on validation failure
set the context class loader in JavassistProxyFactoryFactory and ensure proper class loading in a finally block to improve resource management and ensure
modified the instantiation of DefaultDateTypeAdapter to use constructor parameters instead of creating new ones to improve code clarity and ensure thread safety when accessing
reformatted code for improved readability by adjusting spacing and alignment to enhance code maintainability and adhere to coding standards
refactor HttpClientRequestBase to simplify URI setting and query handling to improve code readability and maintainability by reducing unnecessary boolean logic
added a method to filter old entries based on their size to ensure that old entries do not exceed a defined limit of 50
hbase - 25826 walappender should log a warning rather than error
replaced the implementation of Iterable and Iterator methods with a new class NodeMapIterable to improve organization and encapsulation of NodeMap functionality
updated imports and variable names in DiscoveryClientRouteDefinitionLocator . java for clarity to improve code readability and maintainability by using more d
added a check for non - empty fields before adding to operations in MongoRecordReader and modified return condition in RexToMongoTranslator to ensure
of - 2370 : add ` ` admin ' ' to the list if it ' s empty .
replaced MultiFields with SolrIndexSearcher for term retrieval in multiple qparser plugins to improve efficiency and avoid potential null pointer exceptions
updated the method to return the object name and hash code using ObjectHelper to improve accuracy of bean representation in the ConstantBeanHolder
simplified the logic for determining the primitive type in GroovyParserVisitor . java to improve code readability and maintainability by reducing unnecessary
svm : remove uninterruptible hashcode ( ) from frameinforesultset .
( chore ) camel - seda : fix flaky seda blockwhenfull test
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level
updated the calculation of readLen in MessageUnpacker . java to ensure that the read length does not exceed the buffer ' s size to improve
updated import statements to use the core language package instead of the common one to ensure compatibility with the latest Micrometer library structure
updated SQL query to include user ID in the IconDB column to ensure the icon data is associated with the user ' s unique identifier
fix typo in defaultmqproducerimpl relate to http : / / issues . apache . org / activemq / browse /
do n ' t log resource that be whitelisted for class - info . class
fix duplicate key error in baremetal _ dhcp _ devices table in 4.10 to 4.20 upgrade
removed the IJava2DRenderer interface and updated Java2DRenderer class definition to simplify the codebase by eliminating unnecessary interface
added onTearDown method to DefaultAudioSink to notify listener when an audio track is tear down to ensure proper handling of offload
added configuration for delay initialization and scheduled the upstream task in UpstreamCacheManager to improve performance by allowing dynamic scheduling of the upstream tasks
[ hotfix ] [ doc ] fix typo in streamtype
updated assertion message in Recording . java to include the assertion failure cause to improve debugging by providing context on the assertion failure condition
updated FilestorePage and RootPage to include admin role requirements and modified message retrieval logic to enhance security by restricting access to filestore
ignore camel - elasticsearch rest test until they can be fix
refactor method acceptance logic in ExpressionControlBusFactoryBean for improved readability to enhance code clarity and maintainability by reducing red
rename button labels in OfferBookChartView from " leftButtonAltcoin " and " rightButtonFiat " to " sell
camel - 3490 fixed the issue of invalid restlet uri on camel - restlet
change signature of block . createnewblock ( ) to accept ` ` to ' ' instead of ` ` version ' '
updated serialization methods in BTreeMapJava and ConcurrentSkipListMapTest , and modified serialization handling in JSR166Test to improve serialization handling
do n ' t log ` ` nullpointerexception on startup rule execution error ' '
refactor conditional logic for better readability in Main . java to improve code clarity and maintainability
update method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to ensure correct file
deleted the PlainVerifier . java file and updated DefaultJwtSigningAndValidationService . java to remove unused code to streamline the codebase
added logic to close system windows when the app is triggered from an alt tab to improve user experience by providing clear feedback on recents when triggered
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog functionality and state management
updated MimeUtil . parseCharset calls to include UTF - 8 encoding to ensure proper handling of character encoding in MIME types
added a call to super . deinitialize ( ) in the TextField class to ensure proper resource cleanup and prevent potential memory leaks
updated imports and refactored testSerialization method in LogFormatTest . java to utilize TestUtilities for serialization to streamline code and improve
updated method calls to use ` previousUntilLastClause ` instead of ` previousClause ` and modified ` PreviousFill ` initialization in ` GroupBy
added validation for negative array size and improved argument handling in JAXWSExceptionBase . java to ensure proper error handling for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4522 )
updated thread join duration from 10 seconds to 60 seconds to allow for a longer wait time before proceeding with operations
[ hotfix ] [ test ] change default slotsharinggroup from legacy to pipelinedregion
added title management methods and updated i18nSafe attribute to false in multiple ShadowActivity , ShadowAlertDialog , and ShadowTextView classes to
replaced Apache Commons Logging with Apache POILogger for better logging practices to improve code maintainability and reduce dependency on Apache Commons
updated alarm handling logic in InstarHandler . java to replace occurrences of " active = " with " object = " to improve clarity and
improve stats for delete ( ) to include latency
modified the status check in Response . java to use a switch statement to improve clarity and maintainability of the code by using a switch statement
added a method to find the location of the javac main class in the file manager to improve error handling and provide a clearer error message
add project name to the create additional setting ( # 1193 )
added a new test class ` DeprecatedStubbingTest ` for verifying stubbing behavior in Mockito to ensure proper functionality and behavior of mock
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType `
fix partmod for when np have functional tag ; add nml and nx a a former for the former .
add boolean system property to disable rsa key exchange in fips mode
replaced variable name ` output _ reader ` with ` reader ` in multiple files to improve code readability and ensure proper resource management
refactored oAuth service management in PubSubAPI and SDMAPI to use a consistent handle ID and added deleteOAuthServiceAndAccessToken method to
updated the interpolator used in TaskbarEduView from AGGRESSIVE _ EASE to EMPHASIZED to improve
added ` UpdateRegionLocationPlan ` to ` ConfigPhysicalPlan ` and updated logging levels in ` ProcedureManager ` , ` DataNodeInternalRPC
added a new file ` FileDialogLeakTest . java ` to test the finalization of a ` FileDialog ` to ensure that the
hbase - 26969 move testopentableincoprocessor from org . apache . hadoop . hbase to org . apache .
svm : do not invoke trufflefeature . isinterruptible ( ) if the feature be mark for uninterruptible .
[ flink - 25836 ] [ protobuf ] remove the use of split method from protobuf codegenrowdeserializer / pbcodegen
change condition to check for non - null dimension ' disi ' in DrillSidewaysScorer . java to ensure proper handling of non
sync FakeMediaSource with a Handler for refreshing source info to ensure that the media source updates correctly when the manifest updates
added support for Java 9 and above in Constants . java and updated Helper . java to use this constant to ensure compatibility with Java 9 and above
[ log4j2 - 1349 ] filereportertest : do n ' t expect a nullpointerexception
changed the condition for checking end - to - end encryption keys from a false value to a true value to ensure that the end - to -
added functionality to enable the home button in the action bar and handle back navigation to improve user experience by allowing navigation to the home button in the
added support for retrieving user information in RpcServlet and RpcUtils to enhance user management capabilities in the application
added a conditional check for the operating system architecture in TestJdbcPluginWithMSSQL to ensure compatibility with additional system architecture requirements
updated the method call to use the original start class instead of the original start class to ensure the original class is used for the notFound operation
fix a bug where register and try - with - resource miss the local .
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
mac v nurse rostering : fix the swing lookandfeel to ` ` metal ' ' on all example to avoid mac ' s native laf which be untested and incorrect
update regex in AppPage . java to replace " V \ $ { version } " with " V \ \ $ { version } " to
refactor animation listener to use final variables for alpha and translation to improve code readability and maintainability by reducing unnecessary state management
dumpedprivatekey : update exception message to include version instead of base58
set extra data for new offer when edit offer data
updated the TicketPage to utilize a new parameter for milestone based on whether the milestone is open or not to improve clarity and functionality by
updated the RFBattery size from 640 to 80% in PipeItemsWood . java to improve the responsiveness of the R
modified the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRev ` parameters to enhance the retrieval of cluster keys
initialized ` downgradeAllowed ` to ` true ` in ` UpgradePack ` and added a test for its behavior to ensure that downgrade settings
replaced instances of ` ATTRIBUTE ` with ` ELEMENTSTART ` and ` ATTRIBUTENAME ` in multiple files to ensure consistency in handling XML
[ add ] configuration to disable emulate system load library .
replaced direct usage of APP _ NAME _ COMPARATOR with a getter method for better encapsulation to improve code readability and maintainability by
updated entry handling in DefaultPlatformManager and added directory existence check in FatJarStarter to ensure proper resource management and prevent file operations on
enhanced assertion message in TestSecretKeyCredentialHandler to include salt length and iteration details to improve debugging and traceability of credential validation tests
camel - 16405 : camel - routebuilderfinder now use springcontext instead of applicationcontext to be able to load route from spring .
[ hotfix ] [ doc ] clarify description of ` metric . reporter . limit `
hbase - 25827 testfulllogsconstruction # testfulllogsconstruction # testfulllogsconstruction # testfulllogscon
added a ` reuseAddress ` boolean and updated ` DatagramSocketOptions ` class with multiple methods to support address reuse in socket configuration to enhance
fix server shutdown message be n ' t use
douniaberrada : remove deprecate locatable interface ( no longer use )
updated error messages in VersionInfo . java to clarify field accessibility to improve error reporting for better debugging and understanding of schema schema
replaced equalityPredicateColumns with predicateColumns and updated related logic in StarTreeIndexOperator . java to improve clarity and consistency in predicate
move the init node and disconnect logic out of the handshake handler so that it do n ' t go into the fast - forward mode
fix a bug in the scaler xml that cause a npe when try to create a scaler xml file .
changed access modifiers of constants in RecordReaderFactory from private to package - private and added a new RecordReaderFactoryTest class to enhance encapsulation
added support forGreaterThanEqual and GREATER _ THAN _ EQUAL query scenarios in MongoQueryCreator to enhance query functionality to support greater than or equal
refactor group by expression handling in CalciteSqlParser to improve clarity and reduce duplication to enhance code readability and maintainability by redu
refactor FileChannelLinesSpliterator to include AtomicInteger for buffer reference management to improve resource management and ensure proper cleanup of mapped byte buffers
refactor code to use a local variable for the validator object to improve code readability and maintainability
added a schedule method to the CircuitBreakerImpl class and updated the test method to use it to improve concurrency handling and enhance test reliability by
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in mmm Launcher . java and ppp
changed " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in SubmissionController and File
updated the display name of the test from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to indicate that
added synchronized keyword to addExportedCount and getExportedCount methods in EntityGraph . java to ensure thread safety when accessing shared resources
updated import statement from ` IntRangeUtil1 . requireNonNegative ` to ` IntRangeUtil . requireNonNegative ` to ensure compatibility with
updated HttpParser to handle invalid characters correctly and improved the handling of character encoding to ensure proper parsing of HTTP headers and enhance error reporting for
updated the layout reference from trends _ activity to configuration _ activity to align the activity with the new configuration activity
updated print statement to include position information in SLWTTextListing . java to improve clarity of log messages for better debugging
refactored ForceLeaderTest and HttpPartitionTest to handle Tlog replicas more effectively and added a new ForceLeaderWithTlogReplicasTest
refactor Thread class to improve thread management to enhance performance and maintainability of the code
added new file suffix sets and a static set for template file suffixes in AbstractConfigurableTemplateResolver to improve flexibility and maintainability of template file
camel - 4440 fixed the issue that camel - cxf do n ' t set the namespace on the payload element .
formatted code in YamlRepresenter . java for consistency to improve readability and maintainability of the code
updated the method to format the day and month output in ToChar . java and added a test for truncation in TestFunctions . java to improve
added validation checks for transaction and write ID configurations in GenericUDTFGetSplits . java to ensure that transactions and write IDs are set correctly
removed unnecessary length checks and replaced ArrayList instances with Collections . emptyList ( ) for column name and type information to simplify logging and improve code readability
added support for check for null bookpath and refactored picture . hasnoinitialimage ( )
added a check for ContinueRecord . sid in the SSTDeserializer constructor and modified the manufactureStrings method signature to ensure proper handling of
added DEFAULT _ GRID _ COLUMN constant and modified grid column retrieval logic in AppPreferencesImpl and ExtendedListFragment to ensure consistent handling of default
updated the error message in the ` Platform ` and ` ComparisonFailureWithFieldsTest ` classes from " ( empty - differences in line breaks ?
added waitingforkeys field to decoderinputbuffer and updated related logic in clippingmediaperiod and samplequeue
removed the " / api / margin / v3 " prefix from paths in OkexV3 . java to standardize the API endpoint structure
consolidated multiple condition checks for x1 and y2 in LineUtilitiesTests . java to improve code readability and maintainability by consolid
added error logging for varargs and old array syntax in JavacParser . java and created two new classes T6569633 . java
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
modified the ` VariableContext ` class to include a new ` METHOD ` type and updated related logic to enhance the handling of method calls and improve
remove experimentalparser method and add test for invalid json
fix a bug that could cause the wrong buffer position to be set for a piece .
added HttpClientProperties as a parameter and implemented response timeout handling in NettyRoutingFilter to allow configuration of response timeout duration for HTTP requests
refactor ` NativeLinkTargetGroup ` to ` NativeLinkTarget ` and update related method calls in ` CxxLibraryFactory ` and `
added unit test base on user forum issue
added support for processing RexFieldAccess in ASTConverter and updated RexNodeConverter to convert ExprNodeFieldDesc to RexNodeField
replaced direct calls to ` values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to improve performance and
http : / / issues . apache . org / jira / browse / amq - 4358 - add noproxy predicate to proxy
refactored certificate chain handling in PKCS12KeyStore and improved keystore entry loading in StoreSecretKeyTest to enhance code clarity and ensure proper
added reflection access checks and refactored related methods in the ReflectionCheckLinker class to enhance security by ensuring proper access control for reflection classes
remove the ' public ' access modifier from the constructor of the collisionmap class .
tradewalletservice : deprecate getrawrawinputfromtransactioninput since it ' s deprecate
refactor logging level handling from if - else to switch - case structure to improve readability and maintainability of the code
server : fix problem with account , user field do n ' t set region _ id correctly .
fix for bug # 60284 - handle encrypt document exception in oldexcelextractor
add extra - image - builder -- add - exports = com . oracle . svm . nativeimage . builder / com - oracle . s
removed unnecessary whitespace in TimeLineCursorAdapter . java to improve code readability and maintainability
increase sleep time in batchingstateUploadSchedulertest from 10 to 50 second to avoid all attempt time out
modified directory creation logic in ShadowContext and improved file handling in ContextTest to enhance directory management and ensure proper deletion of temporary directories
refactor exception factory initialization to use Class . forName ( ) instead of custom ExceptionFactoryImpl class to improve flexibility and maintainability by using
updated WAIT _ TIME _ MS constant from 10000 to 60000 to increase wait time for better performance monitoring
updated import statements and added support for JWT claims in ConnectOAuth2RequestFactory , ConnectTokenEnhancer , and ConnectOAuth2RequestFactory
( chore ) camel - kafka : remove default value for breakonfirsterror
added a new constant selectableItemBackground in the R . java file to provide a visual representation of the selectable item background
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
fix nullpointerexception in txnsetoperation . getentry ( ) ( # 2698 )
fix issue with resumeworkfilehandler not be call when resumeworkfile be call .
follow up to r1557113 - fix failure when run under a security manager
update HSSFDataFormat to set the first format record if it does not already exist to ensure the correct format is set based on the
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
modified the condition for determining compressed chunk length in CompressedInputStream . java to ensure correct handling of input stream lengths based on the maximum compressed length
add an idempotent repository to camel - spring - data - redis to make it easy to clear string value .
fix vanilla bug in container repair where vanilla do n ' t use metadata .
[ mng - 5391 ] only show the local repository when it ' s the default layout .
added checks for task manager initialization and improved logging in LocalTaskManagerThread , JobManager , and TaskManager classes to ensure proper error handling
added deployment command to AbstractArtifactResolutionException to provide users with easy instructions for deploying files in the repository
updated the method for obtaining the internal temporal path in FileStorageUtils . java and modified the path construction in UploadFileOperation . java to
replaced the ` FeedEntryStatusDAO ` class with a new method ` findByEntries ` for fetching entry statuses based on a list of entries
added thread execution logic based on the DISABLE _ TIMINGS flag and refactored deployment options in BlockedThreadCheckerTest to
updated the ` instantiate ` and ` convert ` methods to accept a ` String ` parameter and added a null check for the ` ctorArg `
added support for loading contact files on devices running Android O and above to ensure compatibility with newer Android versions while maintaining compatibility
replaced setter methods for remote address and hostname with direct assignment to improve code readability and maintainability
added a null check for the realClass annotation in Robolectric . java to ensure that the shadowClass is not annotated with @ Implements
do n ' t require tl mutual authentication if tls _ mutual _ authentication _ required be set
added a test for requesting a plain HTTP endpoint over HTTPS throws SSLException in BasicHttpTest . java to ensure proper handling of SSL - related
( chore ) camel - kafka : add getconsumer and getproducer in abstractkafkaproducer
refactor code for better readability and organization in PageChangeListener . java and FrameRenderer . java to improve maintainability and clarity of widget
updated warning message to reflect SMS instead of email to improve clarity and accuracy of warning messages
# 513 - optimize query performance for @ draftable element
added error handling for IO exceptions in MultipartBody . java to improve robustness by logging exceptions related to resource temporarily unavailable
pdfbox - 4892 : fix typo find by codespell on fossies . org
refactor EndpointConfiguration , SpEL , MainSupport , package - info , and SSLContextParameters files to improve code organization and maintainability
fix attach file to current working directory if not already set
added LoadOptionsBuilder and updated SchemaCrawlerOptionsBuilder usage in AccessTest . java to enhance schema information handling and improve code clarity
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace exception throwing with returning null in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties from the prototype object to enhance the functionality of the ProjectProperty class by allowing dynamic configuration
added a try - with - resources statement for ConnectionInfo in AbstractDbmsOperationHandler . java to ensure proper resource management and prevent potential memory
[ hotfix ] fix checkstyle violation in datastreamjob
updated file output stream handling in TestContentProvider . java to include error handling for EPIPE to ensure proper resource management and avoid unnecessary closure of
camel - 14284 : camel - cxf - should use the real cxf class for camel - cxf service
added a condition to return true for " h2 - 14 " protocol and modified the conditional logic for TLS cipher checks to ensure compatibility with H
refactor method declarations and add parameter symbol management in LambdaToMethod . java , ClassFileVisitor . java , and ReflectionVisitor . java to improve
updated the regex pattern for SBARQ to correctly capture the WHNP value to enhance the accuracy of the regex pattern matching for better accuracy in
increased the timeout value in the copyURLToFile method from 5000 to 60000 to allow more time for file operations to complete
added a method to set the slop parameter in the QueryParser class to enhance query parsing accuracy based on phrase separation
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest to allow more time for tests to complete before timing out
increased the timeout value for metricsServers from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink
add ` terasology . scheduleparallel ` to make game task in parallel
update visibility condition for the compound view to include the availability of available edit options to ensure the compound view is only visible when there are edit options
added a progress calculation to ensure it does not fall below a maximum of 1 to improve user experience by preventing too high progress transitions
remove unused packetreceived method from session
added debug logging for authentication failure and refactored authentication response handling in the DelegatedAuthenticationGenerateClientsAction to improve debugging capabilities and streamline
added null checks for the service before accessing its metadata to enhance robustness by preventing potential NullPointerExceptions
added ` hidden = true ` to the ` PantheonCommand ` help text to indicate that the account level permissions should be displayed in the
added logic to exclude specific CoroutinesRoom classes from instrumentation to enhance performance by preventing unnecessary instrumentation of coroutines room classes
added synchronization to the ` isSupported ` method in ` NegotiateAuthentication . java ` to ensure thread safety when checking the support of ` Http
removed the setter method for initScripts in InitializingDataSourceFactoryBean to streamline code by eliminating unused functionality
camel - 16400 : temporary and persistent queue reply manager should not be thread safe . thanks to benjamin for the
rename AuthenticationProvider and TargetObject classes to improve clarity and consistency in naming conventions
added methods to handle opening and closing MC blocks for images in PdfDocument to ensure proper management of image tags in the PDF output
log4j2 - 1343 add patternlayout test which verify that patternselector . createselector work correctly .
simonstewart : launch the hta browser in multi - window mode
added a new class ` MwThankPostResponse ` and modified the ` thank ` method in ` Service . java ` to implement
added a new ` SocketBased ` interface and modified ` ChannelEndPoint ` and ` SslConnection ` to utilize it to improve socket management and
updated revokingStore initialization and modified max size setting logic in Manager . java to ensure proper enabling and disabling of revoking
added new test cases for implicit joins in HQLTest . java to verify the correct number of results returned from the JPA query to ensure
replace line breaks with line separators in assertion checks to ensure consistent line endings across different operating systems
replaced direct reference to ' toCommit ' with a collection for file commit across multiple classes to improve code clarity and maintainability by central
changed method access modifiers from ` final ` to non - final in ` BaseError . java ` to enforce immutability and ensure method access
added validation for user resource consumption percentage in ConsumeUserResourcePercentActuator . java to ensure that the percentage is within [ 0 , 100 )
added a condition to check for the show _ old _ login flag in AuthenticatorActivity to allow dynamic behavior based on user settings for legacy login display
rename the test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
updated response page setting logic in EditTeamPage . java to ensure correct navigation to the UsersPage
updated debug log message to include exception details to improve clarity of error reporting during plugin credential initialization
refactor shutdown logic in ConnectionManager to ensure proper handling of server socket channel closure to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future updates
refactor the logic for creating dynamic partition specifications in the BaseSemanticAnalyzer class to improve code readability and maintainability by encapsulating the
[ wasm ] make round hack in stringtemplate consistent with scientific notation
added visitDirectory method to JarDirectoryStep and implemented corresponding tests in DirectoryTraversal and JarDirectoryStepTest to enhance directory traversal functionality and ensure entries
added a new file JWKSetEditor . java that implements JWKSetEditor for setting text to enable customization of JWK set settings in the application
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionTreeTermsWriter to simplify the finish method and
add truffle boundary to resolve parameter klass on invoke and toespressonode .
updated default value of byIP from true to false in Fetcher . java to disable thread fetching per IP for improved performance
refactor the condition for setting timeToLiveOfQuery in StatementUtil . java to improve code readability and maintainability by consolidating conditions
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included target configuration hash in HaskellGhciRuleIntegrationTest
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
server : fix incorrect initial delay for network usage stats update
updated animation interpolators to use a final frame instead of a negative value in QuickstepAtomicAnimationFactory . java and AllAppsTransitionController .
adjusted swipe length calculation in Background . java to account for display density to ensure proper positioning of the navbar based on the display density
added a new module - info . java file and modified module declarations in QuicConnection . java , QuicStreamEndPoint . java , Server
json : fix null pointer exception in jsontype . gettypevalue ( ) .
removed unnecessary parentheses around context initialization in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ checkpointing ] remove unnecessary optional check of checkpointfailurenumber
refactor ` reportInnerClassReferences ` to use ` Element ` instead of ` TypeElement ` for better handling of package - related elements to improve
add space to the " test . tool . vm . opts " system property to ensure command line options are correctly formatted for better readability
replaced FluentIterable with Java Streams for listing file names to improve code readability and performance by utilizing modern Java features
[ 3.0 ] do n ' t register dubbo service to registry ( # 2178 )
allow security otr mode to be disable by default
added new properties for node label outline size and transparency in the rendering process to enhance visual customization of rendering of node labels based on specified size
updated ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated boolean parameters in Win32FontManager . java from false to true to enable conditional rendering in the font manager
added null check for the variable ' v ' before visiting it to prevent potential NullPointerExceptions when ' v ' is null
refactor error handling policy in JDTBatchCompiler to use an explicit IErrorHandlingPolicy to improve error handling behavior based on the environment '
added content alignment and text anchor properties to LabelBlock and its corresponding getter and setter methods to enhance flexibility in label rendering by allowing customizable
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor methods in IndexReader to improve code readability to enhance maintainability and facilitate future updates
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for the network interface to
added a Locale parameter to the ` fromRfc1123DateString ` method to enable formatting of date strings based on the specified locale
try to fix flaky test : filedownloadviaproxytest . download ( )
nifi - 10596 : add property to output no hit flowfile even if no hit find for a query
server : fix 8 hour cost calculation to 8 minute
[ java ] use try - with - resources for try - with - resources in election .
do n ' t drain watcher event on close ( ) in readfilestatep ( # 1748 )
refactor widget visibility and state handling logic in PageChangeListener . java to improve readability and maintainability of the code
added isWriteProtected ( ) method to Workbook and HSSFWorkbook classes , and improved error handling in FileSharingRecord , and
added a try - catch block around unregisterInvalidatedSessions ( ) method call to handle potential exceptions during session unregistration to improve error handling and
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the status message from " Bridge reports light as reachable = false " to " Bridge reports light as not reachable " to clarify the
fix fml crash when player be in loading state . close # 74303
add ` ` unit . millions ' ' and ` ` unit . thousands ' ' to the color instead of ` ` mil
refactor MessagePackParser to use a switch statement for handling different data types and add a new BinKeyPojo class to improve code read
added parameterized tests for querying queries with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure correct testing
added tests for serialization and deserialization of a map using Gson to ensure proper JSON representation and deserialization of nested maps
fix geometryutils . position ( ) by increment offset when x2 < y2
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code readability and maintainability by utilizing a centralized
do n ' t crash if testplan can not be find
refactor methods in GeneratedEntityTranslator and JdbcManagerSupportImpl to use LazyReference for DbmsType and DbmsOperationHandler to improve performance
modified the argIdent assignment logic to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only assigned when
updated the default SSL protocol setting in JettyHttpComponent9 . java to use a dynamic protocol from the scf object to improve flexibility
set default value of displayVolume to true in VolumeVO . java to enable display volume functionality by default
updated the version method to accept a boolean flag and improved message retrieval in JavahTask . java , and added a new VersionTest .
refactor logic in ChangeLogParameters to handle global change logs more efficiently to improve robustness by ensuring only valid change logs are processed and
changed log level from warn to debug for missing transactions in JtaTransactionManager . java to reduce log verbosity and improve performance during debugging
skip test for oracle due to basicformatterimpl cause exception
rearranged the order of socket timeout and handshake in the sslSocket configuration to improve readability and maintainability of the SSL socket timeout handling
updated actions to conditionally include the status bar height based on the MainActivity state to improve UI responsiveness by preventing the status bar
updated the ` CHA ` option to be a boolean value and made ` DefaultClassHierarchyOracle ` and ` NoOpClassHierarchyOracle `
resolve http : / / issues . apache . org / activemq / browse / amq - 2358 - set original thread context
replaced specific date and time imports with a wildcard import and refactored test methods to improve code readability and maintainability by utilizing
updated XML schema URLs to redirect entities based on SERVLET _ MAJOR _ VERSION to ensure compatibility with the latest servlet version of the
allow readiness . isready ( node ) to return true when a node be already a readiness .
range and index scan now only send request to enough replica to satisfy request cl + rr
added null and empty check for creationStatements in IdTableHelper . java to prevent potential errors when processing ID table creation statements
update RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig to reflect the latest version changes for improved RPC functionality
added security checks using System . getSecurityManager ( ) before accessing package - private classes in ObjectStreamClass and ObjectStreamField to enhance security by
removed unused imports and simplified return statements in Utils . java and XLCDCommunicator . java to improve code readability and maintainability
replaced ImmutableMap with a HashMap for storing metrics tags to improve code readability and reduce boilerplate code
simonstewart : fix checkstyle violation in clientdriversuite
set the default logging level from OFF to ERROR in the Launcher class to improve error reporting by using a more appropriate logging level
changed instance variables to be final in IconNormalizer . java to ensure immutability of these variables and improve code readability
added support for the first - call prepare - do parameter in the PrepareInterceptor class to enable flexible handling of the first - call prepare -
refactor workspace and focus handling in Launcher . java and update state management logic in AppsCustomizePagedView . java to improve
http : / / issues . apache . org / jira / browse / amq - 4358 - enable eager singleton for auth
added an ` ignoreInvisibleAssociations ` parameter to the ` incomingAssociations ` method and updated its logic to conditionally ignore visible associations based on
fix npe when remove pod ' s private ip capacity from db
updated the command description in ProfileServlet . java to provide clarity on empty diagram and Linux version to improve user guidance and guidance on
refactor ModelResolver and add a new RequiredRefFieldModel class and tests for required property handling to improve code organization and ensure required properties are
updated class names from ` CasCoreConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration ` and ` CasCoreStandaloneBootstrapConfiguration ` to
updated feature management logic in FeatureFlags . java to enhance performance and maintainability of feature management
fix a bug in configstore . getuniqueuniqueforlargehueid ( ) and add a unit test .
added image loading functionality in TimeLineCursorAdapter and TimelineArrayAdapter to enhance user experience by allowing images to be loaded from memory
updated documentation for compaction settings in HiveConf . java to clarify that compaction on insert - only tables will always run via queries instead of
added a null check for the storage path in the isDown ( ) condition to ensure that the code only proceeds when the storage path is
refactor resize checks in multiple classes to use a dedicated method for better readability to improve code maintainability and reduce duplication in logical hash bucket
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connections
added @ Deprecated annotation to the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the attribute is outdated and should not be used in
removed debug tracing logs in TouchInteractionService and RecentsAnimationDeviceState to streamline code for better performance and maintainability
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher to compare hits2 and hits3 instead of hits to ensure accurate testing of the expected lengths of the hits
added a new file LucenePackage . java that defines a LucenePackage class to facilitate the construction of Lucene packages
modify the calculation of sizeInBytes in RAMDirectory . java to correct the logic to correctly account for sizeInBytes being negative
mahout - 1343 - add estimate ( ) method to genericudafbloomfilter , genericudafevaluator , and
added a null check for the drawer toggle before animating slide animations to avoid potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method signature to suppress warnings about the unused subject parameter
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 536 : enable
fix msb export when there be no corporate field
added a method to cancel core recovery in ZooKeeper awareness to improve recovery cancellation handling for ZooKeeper - aware cores
replaced direct calls to System . currentTimeMillis ( ) with a new method for calculating current time and position difference to improve code readability and maintain
removed unnecessary print statements and simplified the condition for clicking on the first element to streamline code logic for better readability and performance
polish javadocs and fix typo
added security trust resolver , role hierarchy , and permission evaluator to the SecurityExpressionRoot class to enhance security expression configuration flexibility by allowing default values
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is correctly initialized based on primeSize
replaced direct calls to ` FileStorageUtils . getSavePath ( ) ` with a direct method ` getUsableSpace ( ) ` in
updated the combine method in DistinctSqlAggregation to handle multiple values and added a test for it to improve aggregation functionality and ensure correctness through
added a new test method ` call _ login _ should _ execute _ post _ login _ activities _ for _ user _ on _ successful _
make extractorspanishstrippedverb and extractorspanishstrippedverb configurable
refactor CharArraySet to initialize the ' code ' variable and simplify type checks in the contains method to improve code readability and maintainability
updated error messages for track count and refactored the check for unsupported track types in MuxerWrapper . java to improve clarity of error
refactor JsBundleGenrule to use AndroidPackageable instead of JsBundleAndroid to improve type specificity and streamline asset collection logic
set UTF - 8 character encoding in PinotClientRequestServlet and refactor StringDictionary to use byte arrays for character lookup to ensure consistent character encoding
updated case label from " Logical Analyzer " to " Logic Analyzer " and replaced applications array with corresponding drawable resources to improve clarity and
added instanceClassName and instanceClass variables to avoid redundant instantiation of the same Vector class to improve performance by avoiding unnecessary instantiation of the same class
removed the syncMetaLeader ( ) method from CMManager . java to eliminate unnecessary synchronization during leader synchronization
show a ' no response ' button only if the recipient be claim to instructor
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging capabilities during the test execution
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 548 : apply
added support for the new VOMI water heater device type in MiIoDevices . java to enable support for additional VOMI
replaced direct calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` to improve code readability and
added a new file CreateNewSpreadsheet . java to create an Excel workbook with various attributes and comments to facilitate functionality for creating
update ttl to time - to - live for spring . cache . redis . entryttl and spring . cache . redis . usekeyprefix to
replace CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION for insertion in LauncherBackupHelper . java and LauncherModel . java
updated testCompile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the
replaced synchronized blocks for ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to ensure thread
added a condition to check if the character is less than one in DocClassUtil . java to ensure proper handling of specific character cases
removed String . format from the return statement in Workspace . java to simplify the code by eliminating unnecessary method call
added import for Scope and implemented UI message messaging for missing validation errors to enhance user experience by providing clear error messages when no validation errors are found
updated import statements and added a method to configure web resources in IntegrationTestContextLoader . java to improve resource loading and manage WebApplicationContext in the
updated scroll handling logic and improved component accessibility in multiple classes to enhance responsiveness and ensure proper event responds to pointer events
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated related methods to use ` String ` instead of ` Long ` for client IDs and their approved
updated string construction in CellContentConverter to replace multiple occurrences of " $ 1 " and " $ 2 " with " $ \ n1 "
fix glob regexp transformation to match with \ r / \ n
mondrian : fix typo in mondrianproperties . java .
added error handling and stack trace printing in ProcessTools and updated file permissions in CustomLauncherTest and LocalManagementTest to improve debugging capabilities and ensure
removed the testEmbeddedImage method from the TumblrRipperTest class to streamline the ripper functionality by elimin
added a conditional check for ` symbol . slotFor ( storeType ) ` before converting ` storeType ` to avoid potential ` ArrayIndexOutOfBoundsException `
init the extractorwrapper when there ' s no next load
updated imports and modified IndexWriter configuration in BaseLockFactoryTestCase . java to enhance compatibility with UTF - 8 encoding and improve output stream management
added a method to check if the ServiceLoader is dynamic and refactored ServiceLoader initialization in TikaConfig to improve flexibility in service
added JavaFileObject handling and improved type safety in DocLint . java and DocLintTester . java to enhance code clarity and ensure
added a new constant IMPORT _ CMD and modified the condition for DELTA _ IMPORT _ CMD in DataImporter . java to support additional import
update changetype to not modify inner class when ignoredefinition = true
added import statement for android . util . Log in JettyService . java to utilize logging functionalities for improved logging functionality
modified the ` checkItemPlacement ` method to accept an additional ` ArrayList < Long > ` parameter for workspace screens to enhance functionality by
danielwagnerhall : add a " / quitquitquit " servlet to stop the jetty server
fix potential npe in sulong realtime segment ( # 3649 )
added a check for Windows OS before skipping Teredo nic entries to ensure proper handling of Teredo nic display names
show error dialog when add contact fails .
replaced bean definition registration with a bean component registration in AuthenticationConfigBuilder . java to improve code clarity and maintainability by using a more
update drawBitmap method to use null instead of left and top parameters to ensure compatibility with the latest bitmap rendering requirements
fixed v1.2 protocol decoder issue for totem and meitrack
changed access modifiers of ` getFontPath ` methods in ` SunFontManager ` and ` X11FontManager ` from public to protected to allow
added @ Deprecated annotations to EnhancedRandom . java to indicate that certain methods are outdated and should not be used in new development
fix flaky test clientmapstoretest . testclientmapmaxsizeexceedsmaxsizeexception
added an option to keep empty sentence in the document preprocessor , a suggest by valerybokov
added error handling for artifact subdirectory creation and modified return type of createArtifactSubdirectory method to return a boolean indicating success or failure to improve error
removed unused imports and refactored methods in ReusableCompiler , JavaLanguageServer , and JavaCompilerService to utilize NO _ MODULE _
added null check for answer in DirectAgentAttache . java to log a warning when a resource returns a null answer
refactor sendEmail method to throw MessagingException instead of catching it to simplify error handling during email sending
added api annotation to buildcraftapi and fix npe in pipeitemsobsidian
modify DateFormatEvaluator to accept a Locale parameter for date parsing to ensure consistent date formatting across different locales
added a boolean property ` includeDecals ` to ` StorageOptions ` and implemented its getter and setter in ` StorageOptionChooser ` to allow
updated generateDocumentation method to include a null parameter to enhance flexibility in documentation generation
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to improve performance logging accuracy and clarity to enhance code readability and maintainability
updated log messages in multiple classes for consistency to improve clarity and maintainability of log messages
updated version check in ignoreRecordAttribute . java to use a dynamic major version to ensure compatibility with the current runtime version of the class file
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP password authentication to verify the correctness of password handling in LDAP connections
replaced OrcInputFormat with BasicStatsNoJobTask and updated the conditional check for footer scan usage to improve code clarity and ensure
fix a bug where save all notification do n ' t work in the reload action . ( # 2595 )
refactor VisibleAdvance class for improved readability to enhance maintainability and clarity of the code
fix # 1193 : handle terminal exception in informer . start ( )
added support for dynamic number in EdgeDataTable and NodeDataTable to enhance data handling for dynamic number columns
updated code to use ` Objects . requireNonNull ` for null checks in ` ResolvedGroupArtifactVersion ` and ` mapPlugins ` methods to enhance code
update API assignment to handle null APIInfo to ensure the API variable defaults to the original value when apiInfo is null
updated HeadersConfigurer and CacheControlHeadersWriter classes to enhance header configuration capabilities and improve performance
added shader loading and disposal methods to FlameRenderer and updated lighting settings in PhotoPanel to improve shader management and facilitate
updated scene size from 460 to 520 and added context menu functionality to InsnListEditor to improve the responsiveness of theFX
updated conditional checks in CSSParser . java for index bounds and added error handling to improve robustness by preventing index out - of - bounds
added a check for the " isDecorated " property in UIServiceImpl . java to enable or disable the default look and feel decoration
removed unnecessary " EXISTS " clause from the COMPLETED _ REQUESTS SQL query and simplified method calls to improve code readability and maintainability by
updated F2 _ TEST and F6 _ UNKNOWN constants to F5 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRAN
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe handling logic
replaced HostDatabase with ColorStorage in ColorsActivity to utilize ColorStorage for better color management
refactor string manipulation methods for improved readability to enhance maintainability and ease of understanding for future developers
removed unused Logger imports and initialization in multiple classes to improve code cleanliness and reduce unnecessary dependencies
added a method ` getGlobals ` to return the ` Entry ` array from the ` map ` to provide a way to retrieve global data
added multiple assertions to the sendcoin method in MultiSign34 . java to ensure that the sendcoin method behaves as expected with the expected
test : migrate CUFilterTest to JUnit 5 ( # 4529 )
replaced hardcoded string " ; " with a dynamic system property path separator to ensure consistent use of the system ' s path separator for better
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow access to the method from other classes
added assertions for presence of properties in the metamodel for " id " and " name " to ensure that fields in the metamodel are correctly
removed unnecessary configuration parameter from Outlink instantiation across multiple parser classes to simplify code and improve readability by eliminating unnecessary parameters
removed the ` LexicalContext ` parameter from multiple methods related to unique names to simplify method signatures and improve code readability
added removal of unused imports and modified return statement in UseLambdaForFunctionalInterface . java and TypesInUse . java to improve code clarity
replaced the method ` appendClassSelector ( createFileSet ( ref ) ) ` with ` createFileSet ( ref ) ` in ` TestNG
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary
[ 1.19 . x ] fix registryevent constructor to pass registry name .
removed duplicate lines of x3 and y3 assignments to improve code readability and maintainability
added default methods for SBE decoding and limit in MessageDecoderFlyweight to indicate that these methods are not implemented by the SBE version
added a test for the elasticsearch client health check to ensure the elasticsearch client is up to date with the latest version
fix byte [ ] array copy in work receiver . patch by jbellis ; review by brandonwilliams for cassandra - 14
added versionId to ClusterDefinition and refactored related methods in GSInstallerClusterProvider to improve clarity and functionality by centralizing cluster name
camel - 14284 : camel - ftp - do not need to set the ftp configuration directly , so remove it from the endpoint
[ zeppelin - 1883 ] fetch dependency from zeppelin - server should return ready when there be an
added a conditional check to ensure no local variables are reserved for DCEed variables in ` Gen . java ` and created a test class to
added a check to return early if BasicConstraints is - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java
added a method to initialize after database connection and updated SQL insert statement for time values with specified time to ensure compatibility with PostgreSQL versions 9.5
updated WebSocket configuration to set a maximum message size and added buffer size validation in AbstractWebSocketConnection to improve message handling and enforce a minimum buffer size
lucene - 9365 : fix double write bug in mockramdirectory . undeleteall ( )
added null checks for scope in ClientRegistration and updated corresponding test cases to ensure scope is not required and enhance test coverage for authorization code grant scenarios
added null checks for orderBy before adding parameters in CartesianProductStream . java to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in test
server : do n ' t allow vm to be start in kvm state , if the vm be in destroyed state , do n ' t
modified logging initialization to store the result of LogUtils . initHiveLog4j to improve debugging by logging the initialization message
added a check to ensure tasks are not empty before processing to prevent potential NullPointerExceptions when processing assets
[ openpgp ] fix deletion of public key and node that do not exist .
fix nullpointerexception in delete ( ) and findbyfromid ( ) in case of null value
added checks for empty barcode in Code128Reader and Code39Reader , and threw exceptions if the image is null in Code128Reader and Code
replaced TreeSet with LinkedHashSet for storing CipherSuites to ensure uniqueness in the keystore
updated control character handling in Escaper . java and adjusted expected string in InternationalizationTest . java to improve validation for control characters and
fix ( sql ) : allow sqlsource to return a charsequence instead of a string
updated import statements and modified logic for handling aliasChildren in InternalMNode . java to improve code clarity and prevent potential null pointer exceptions
added a method to calculate the layout transition offset for a specific page in PagedView to improve page scrolling accuracy by correctly calculating scroll offsets based
renamed variable ` synthetic ` to ` pruned ` and updated related method calls for clarity to improve code readability and maintainability by standard
added a method to set the accessibility of the method in WidgetInterceptor to ensure that the method cannot be accessed externally
added a conditional check to ensure the default value is not set to " database . server . id " before setting the literal initializer to avoid unnecessary
updated the browser version in AbstractRipper . java from Macintosh to Windows NT 10.0 and AppleWebKit to support
added a web interface menu item to the BasicSystemUtils class to open a specific URL for the web interface to provide users with access to the
added a new static char array for the actual value name and updated how it is referenced in the HandleGetter class to improve clarity and maintain
avoid ArrayIndexOutOfBoundsException when building record in EncryptedSlideShow . java
[ hotfix ] [ runtime ] add more logging to page checkpointingio
removed a redundant call to loadBattlePassManager in Player . java to avoid null pointer exceptions during avatar loading to avoid potential null pointer
updated SSH version from 1.0 . 0 to 1.1 . 0 and modified command options in PortForwardingContainer . java to improve compatibility
added a large array and forced garbage collection in ThresholdTest . java to ensure proper resource management and avoid potential memory leaks
updated conditional checks in StdErrLog and added debug method calls in StdErrLogTest to improve logging accuracy and enhance test coverage for debugging purposes
fixed - rremoteservice . getremoteserivce ( ) method in spring data redis module do n ' t support service name
added methods to manage the selected state of a checkbox and CheckBox components in MultiButton . java to improve user interaction by allowing checkboxes to
updated the import and intent from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to align with the new activity ' s
http : / / issues . apache . org / jira / browse / amq - 4358 - fix bug in brokercontroller
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for better connection management to ensure proper resource management and prevent potential memory leaks
refactor background color retrieval to use a resource ID and streamline theme color retrieval to improve code clarity and maintainability by centralizing theme
renames occurrence of callparticipanttransportaddress to callpeertransportaddress so that it would well reflect our new call architecture that also include con
updated multiple type adapters in ToolingApiLauncher to use a unified factory method to improve code maintainability and readability by eliminating red
removed an unused variable from TestPayloadCheckQuery . java to clean up the code and improve readability
updated ConsoleReader to handle character masking correctly and added a test for line reading with mask to improve functionality and ensure correct handling of string input
added user name and command line information in BaseCommand . java to enhance debugging by providing user context and command line information
move modulesupport to ` org . graalvm . compiler . api . test ` ( # 2395 )
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
added a condition to check for the " one . util . streamex . emulateJava8 " property before comparing Java version to ensure compatibility
updated texture references in DecalTest , MusicTest , and SimpleDecalTest to use " sys . png " and modified songDuration
updated the registration and unregistration logic for the mCloseSystemDialogsReceiver to ensure proper resource management and avoid potential memory leaks
updated import statements for consistency in HostsRemovedEvent . java to improve code clarity and maintainability
updated ClientDetailsEntity to allow introspection and modified related logic in ChainedTokenGranter and IntrospectionEndpoint to allow introspection functionality
added HTML encoding for user and session attributes in HtmlSessionInformationsReport . java to ensure proper HTML formatting for user and session data
added a link for PhrasePrefixQuery and a link for SpanQuery in the query documentation to improve link organization and clarify the purpose
refactor : use isempty instead of size ( ) = = 0
update logic in NoValueOfOnStringType to check for string parent instead of literal string to improve accuracy in determining if an argument is a
updated method signatures in AbstractAssert and Assert classes to use Object instead of A to enhance type safety and simplify method signatures for better type safety
updated the package and import paths for ThrowingFunction and updated its implementation to improve type safety and clarity in the JWT plugin
updated the uploader behavior methods in AppPreferences , PreferenceManager , and UploadFilesActivity to use instance methods instead of static methods to improve consistency and
fix ( typefactory ) : fix bug when try to initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to ensure compatibility with Robolectric ' s Bitmap functionality
modified the visibility of the ` isValidSEnding ` and ` isValidEnEnding ` methods in ` DutchStemmer . java ` to
updated PageMarkerResources to use the correct drawable resource for the current page indicator to enhance user experience by providing a more accurate page indicator
added a volatile integer ` reinvocations ` and updated logging messages to reflect the new tracking of reinvocations in ` BasicInvocation . java
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to ensure proper
added miss break in forgotten break in case of failure
added preference - based logic to manage home screen visibility and haptic feedback in multiple classes to enhance user experience by allowing quick access to home
added handling for STRING / FORMULA cell types in ExcelBatchReader and created corresponding tests in TestExcelFormat to support both VARCHAR and FLOAT
fixed bug 1244446 - immutablefield no longer flags assignment in anonymous inner class .
added a private ` userAgent ` field in ` CommaFeedConfiguration ` and updated its initialization in ` HttpGetter ` to allow dynamic user agent
added ` @ XmlAttribute ( required = true ) ` annotation to ` AvroDataFormat . java ` to ensure that the ` @ XmlAttribute
changed log level from info to debug for file not found messages to reduce log verbosity and improve performance during debugging
rename the test class from QueueTest to QueuedPipeTest to clarify the purpose of the test being executed
updated version check logic in BukkitMain . java to use OfflinePlayer for unique ID retrieval to ensure compatibility with OfflinePlayer and handle potential
camel - 16400 : improve logging and handle exception in defaultroutescollector . findroutes
added vertex color functionality to PShape3D class to enhance customization options for rendering
updated ` SchemaDotFormatter ` to include a ` isPkColumnFiltered ` flag and modified foreign key handling in related methods to enhance filtering capabilities
removed ShadowMatrix import and directly used matrix . getValues ( m ) in ShadowMotionEvent . java to simplify the code by eliminating unnecessary
removed the ` MetaRules ` class from the ` com . facebook . buck . parser . api ` package in multiple files to simplify the
refactor class definition check and simplify pattern matching logic in GroovyEngine . java to improve code readability and maintainability by simplifying class definition
fix ( plugin ) : move brand plugin context to the branding package .
removed redundant string concatenation in System . out . println statements to streamline output formatting for better readability and maintainability
replaced multiple calls to updateMotors ( ) and updateActiveInstances ( ) with a single call to fireChangeEvent ( ) to streamline
added tests and refactored exception handling in ThrowableAssert _ hasCause _ Test . java to improve test coverage for expected and actual cause scenarios
removed unnecessary flattenName and packageName variables from AutomaticDependencies . java to streamline the code by eliminating unnecessary complexity
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in scope handling logic
added two test methods for setting a profile in firefox options and capability , and modified MarionetteTest . java to include this test
camel - 1568 : camel - core - allow to configure route description via application property . thanks to benjamin for
updated the implementation of JavacTreeMaker to improve performance and maintainability of the code
added a line to set the weight of the edge in ImporterCSV . java to ensure the edge ' s weight is correctly set for data
updated QuotaManagerImpl to use a new method for calculating cost per hour based on the current date to improve code readability and maintainability
updated SQL query to include additional attributes in DatabaseMetaData . java to enhance attribute retrieval by including additional attributes from the database
make sure that the binarized sentence be not build by the parser .
updated the User class to return detailed user information as a string to enhance debugging capabilities by providing detailed information about the user object
updated MessageHelper to check for null body before converting it to a string to improve error handling by providing a clearer message body when it is
[ hotfix ] [ runtime ] rename fromexecutionvertex to execution in taskdeploymentdescriptortest
fixed group visibility bug in roster access .
added a new classpath reference to the AbstractJRubyMojo class and removed the unchecked suppression in CucumberMojo to ensure
modified assertions in MethodHandleImpl . java and added a new static method userMethod in MethodHandlesTest . java to improve code clarity and
added imports for StopFilterFactory , AnalysisSPILoader , and HTMLStripCharFilterFactory in multiple files to enhance functionality and maintain consistency with the
updated width and height comparison conditions in URLImage . java from greater than or equal to match with placeholderImage dimensions to ensure correct handling of image
added a condition to check if the class name does not start with " META - INF / " and modified package name extraction logic to improve class
fix for image download in edt mode
updated assertions and logging in StackWalkerTest . java to use a dynamic expected value based on the Android version to ensure tests accurately reflect the
changed access modifier of addViewportJob method from protected to public to allow external access to the method for better usability
remove the unused ' partitions ' parameter from the SimpleWordCount and related tests to simplify the command - line usage and improve code clarity
removed server configuration settings in TestDatabase . java to streamline database test execution by eliminating unnecessary server settings
added null and empty check for block in NodePathsConvertOperator and enhanced return logic in SchemaQueryMergeOperator to improve robustness by handling cases
display total harvesting time in the call info screen .
adjusted font drawing parameters for FPS , Count , and max active counts in ParticleEditor . java to improve visual spacing and readability
added logic to update the keyserver port from Hadoop environment properties in UpgradeCatalog240 . java to ensure that the Hadoop environment ' s keyserver
issue # 1153 fp 1.11 . 2 add white background for transparent svg image add to freeplane map
removed ` @ Config ( minSdk = M ) ` annotation from ` ShadowKeyguardManagerTest ` and ` ShadowKeyguardManager ` to
updated the method signature of ` containsExactly ` in ` IterableSubject ` to accept varargs instead of first and rest parameters to enhance flexibility
updated Bandwidth builder to use new capacity and refill garbage collection methods and added key validation for AsyncBucketProxy to improve code clarity and
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code readability and maintainability
updated QueryProperties and related classes to use a new Generator with hooks and modified transformations in Optimizer and SemanticAnalyzer to utilize this new feature
added error handling for NoClassDefFoundError in REngine . java to set ' supported ' to Boolean . FALSE to improve robustness by
updated TraceWebFilter and TraceWebFluxTests to utilize a new SpanAndScope class for improved span management to enhance flexibility
updated exception handling in AbstractUpdateCommandStep to avoid null pointer exceptions to improve robustness by avoiding potential null pointer exceptions
updated the error handling in CommonsHttpSolrServer to include the base URL in the SolrServerException to improve error reporting by providing the base URL
updated landscape setting logic in HSSFPrintSetup . java to correct handling of print orientation to ensure correct display behavior based on print setup
update null handling in JavaVoidObjectInspector to return a null value to improve robustness by preventing potential NullPointerExceptions
added validation to check for invalid argument names in ArgDesc . java to ensure that invalid argument names do not cause runtime errors
added support for background location listeners in AndroidLocationPlayServiceManager to enable dynamic location updates based on the current activity context
updated conditional check for primitiveType in MeshBuilder . java to use ' = = ' instead of ' ! = ' to ensure correct comparison of
trufflestring : check for byte [ ] stride when compare string .
added a method to set the command list in ComboBox to ensure the combobox correctly reflects the command list state
nifi - 2596 : properly escape the filename in tl client alias .
updated command strings in ZkCLI . java to replace " / solr " with " / zkhost " and added " localhost " for Z
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . equals ( ) ` for
added a conditional check for remote gRPC status before posting a severe event to ensure that the event is only sent when the remote gRPC status is
refactor method signatures in XYItemRenderer and related classes for improved readability to enhance code clarity and maintainability by standardizing method
add nbttag compound to chunk tick to make sure it have a valid entity id
[ scene2d . ui ] improve error message for egl 1.2 . 0
add a method to get a list of supported locale and log an error if one of them be not support .
updated the server URI handling in RFC2616BaseTest . java to ensure the test verifies the correct server URI format
added a method to add a helper list to the Construction class to enhance functionality by allowing dynamic modification of helper lists
modified the return value logic in GlyphLayout . java to handle cases where the first character is an escape sequence to ensure proper processing of the output
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring privileged actions are enforced
refactor file synchronization and browsing logic in ReceiveExternalFilesActivity to handle null folder cases to improve robustness by ensuring files are not
fix npe if m _ serviceloaderclassloader be null
removed debug logging statement in BarrowmanCalculator and modified the calculation in TubeCalc to streamline the code for better performance and clarity
added a conditional check for Node instances and modified column addition logic in TimelineControllerImpl . java to ensure proper handling of node and edge data
added a method to register extra components for BrokerAdminApiApplication to enhance flexibility in handling broker admin API components
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to verify the behavior of query
peergroup : do n ' t filter out peers that do n ' t support witness .
attempt to fix a bug where the builder would not store the same tile multiple time .
updated ConfigNode and RatisClient classes to use a Supplier for RatisConsensus configuration to enhance flexibility in configuring consensus
refactor multiple Java files with no functional changes to streamline code for better readability and maintainability
added a check for the ManagedService annotation before unregistering and registering JMXHelper instances to ensure that JMXHelper registration only occurs when the ManagedService
tika - 2748 -- fix for tika - 2698 package parser to detect non - unicode entry name .
added a new file TestSplitThruPhiDivMod . java with two test methods for division and modulo operations to ensure that problematic division
added methods to lookup generic templates based on interface types and superclasses in TemplateRegistry . java to enhance the flexibility and functionality of generic type
updated ByteArrayOutputStream constructor parameters from 512 to 1028 to optimize memory usage for improved performance
added comments for Chinese , Indian , Korean , and Farsi symbols exclusion in PlayerSettingsScreen . java to clar
refactor byte transfer logic to limit the size of the transfer array to optimize memory usage to improve performance by reducing memory usage during byte transfer
remove redundant ` ` focus ' ' listener from menu and popup menu
modified the exception handling logic in SemanticAnalyzer to check for a non - null source AST node before throwing a semantic exception to improve robustness by
added logic to create and scale the AABB center extent based on the scale of skeletalMesh to ensure proper rendering of skelet
added ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide access
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning for improved configuration management
removed the getAccount ( ) method from UserListItem . java to simplify the account retrieval process by eliminating unnecessary account conversion
added unit test for installing packages and adjusted process name handling in ShadowPackageManager and ShadowApplicationPackageManager to ensure correct behavior of package installation
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added TransactionCapsule dependencies and methods to TransactionTrace class to facilitate transaction management and cleanup within the TransactionTrace class
add an option to shuffle member list before connect to the cluster client . fix # 1358
changed the type of ` val ` from ` Text ` to ` CrawlDatum ` to ensure compatibility with the latest data handling practices
refactor JsonDeserializer class for improved readability to enhance maintainability and reduce technical debt
updated CONFIG _ NAME and CONFIG _ DEFAULT _ PATH to change to CONFIG _ DEFAULT _ PATH and changed fetchSize from a integer to a Thread
corrected a typo in the error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java
removed unused import of ExecutionContext in TaskletStep . java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure a default value is set for the title variable
ensure that the response body be not null in the body of the response to avoid npe .
deprecate the old embeddedserverinstance in favor of the new one
change macadapter to be able to register mac event via reflection .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
reformatted the conditional check for Enum type in HandlerLibrary . java to improve code readability and maintainability
fix : make hideunprivilegedobjects final in pgconnection
change log level from info to fine in threadedacousticscorer . java and make audio data source test more robust .
added support for saving Giphy Android 11 video files when using Android Q to enable compatibility with Android 11 and above
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 536 : use
renamed multiple classes related to caching and password policy enabling to improve code clarity and maintainability
replaced manual logger retrieval with ` computeIfAbsent ` in ` MavenLoggerFactory . java ` to simplify code and improve readability by using a
hbase - 25827 remove dataoutputstream since it be n ' t use anymore
removed the configuration setting for " hive . stats . column . autogather " in TestAcidOnTez . java to streamline the
changed log level from info to debug for successful class enhanced log to reduce log verbosity and improve performance during development
added a method to retrieve the default OpenSSL provider name and updated the JSSE _ PROVIDER _ NAME assignment based on the RI condition
added Captor annotation processing to MockitoBeforeTestNGMethod . java to ensure that instances annotated with @ Captor are processed correctly
added checks to ensure that only ` onlyRun ` , ` testMethodNames ` , and ` className ` are not empty before proceeding to
updated imports and modified method logic in GroovyAutoComplete . java , GroovyLanguage . java , and GroovyAutoComplete . java to improve code cl
use osm instead of osm for osm - specific graphhopper
kristianrosenvold : re - enable retries on the http client , not on a slow machine .
removed the ` final ` modifier from the ` mHideSysUiScrim ` variable and added logic to update its value based on user
added cancellation handling and updated method signatures in Call , OkHttpCall , and CallTest classes to improve call cancellation logic and enhance test coverage for
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe handling logic
extend the RequestMatcher interface to extend from Spring Security Web Util to enable the RequestMatcher functionality in the application
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr . java ` to include `
add a test for j2kt and fix the boxedprimitiveequality warning .
added tests for handling display metrics with qualification and dimensions in DeviceConfigTest . java to ensure correct display metrics are applied based on screen dimensions
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource in RootCursor from a logo to a mipmap to improve visual consistency by using a different drawable resource
added errorBuilder . setContentText ( content ) to FileUploader . java to enhance error handling by setting the content text for better user feedback
updated references from LogUtil to OutputUtil in ConcurrentHashMap . java to standardize utility usage and improve code clarity
added methods to adapt user trades and trade data to improve code organization and facilitate trading functionalities
updated claiming logic in Claim . java and modified player clearing in SetBlockFast _ 1 _ 8 . java to ensure correct behavior of player
simonstewart : http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
added support for handling VARBINARY data type in BlobType to support VARBINARY data type in the application
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5481 - add support
added synchronization to the array type mapping logic in LibFFIContext . java to ensure thread safety when accessing shared resources
updated InboundBuffer to use ContextInternal and modified context handling methods to improve type safety and ensure correct thread context validation
updated connection and ldap timeout handling in LdapTimeoutTest . java and modified method signatures in Connection . java and LdapTimeoutTest . java to improve
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java to clar
fix the unit test error of camel - cxf
8181853 : fix doclint warning in javax . swing . plaf . synth
added support for saving BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper handling of Booster instances
added support for http proxy in jabref ( # 1868 )
rename ` MetricsKey . BLOCKCHAIN __ FORK _ COUNT ` to ` MetricsKey . BLOCKCHAIN _ FORK _ COUNT `
replace InternalError throwing with returning false in mmm Class . java and ppp Class . java to enable stub invocation for JEP 359
replaced MortBay logging imports with Apache Commons Logging for improved logging management to enhance code maintainability and reduce dependency on Apache
removed chunked transfer handling from the NettyRoutingFilter to simplify the request processing and reduce unnecessary complexity
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are cleared before processing new data
added a polling period parameter and improved error handling in the VerificationAfterDelayImpl class to enhance verification reliability by allowing more flexible polling
added SQL standard authorization manager and modified conditionals in SemanticAnalyzer to manage compaction state to enhance security by restricting access to table masking operations
[ zeppelin - 4641 ] fix copy of zeppelin . sh and zeppelin .
hbase - 25823 clean up catalogtracker after gettableregions ( ) call in hbaseadmin . gettablereg
added an @ Ignore annotation to the PartialEscapeAnalysisTest class to temporarily disable the test due to issues related to partial escape analysis
updated the ` calcXBounds ` method implementations in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes
refactor XML reader parsing to ensure resources are cleared after parsing to improve resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` to validate the behavior of the ` UseDiamondOperator `
added null and closed check for the result set before closing it to ensure proper resource management and prevent potential memory leaks
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 to ensure compatibility with the latest database features and improvements
fixed bug 1363447 - usesttringbufferlength no long report false positive for empty string literal .
removed error logging statement in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
modified the createDb ( ) method to return a connection object to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and CreateCustomMetricTest classes to improve code organization and maintainability
hbase - 25813 add an option for off - peak compaction max size ( chunhui )
updated BitstampDepositAddress . java to handle null addresses and added DepositAddressJSONTest . java with corresponding unit tests to improve
replace IllegalStateException with response . abort ( new IllegalArgumentException ( " Buffering capacity exceeded " ) ) to improve error handling by providing a more informative
updated the method to use ` toAbsolutePath ( ) ` for path conversion to ensure accurate path handling for deleted directories
updated ` InvocationFinishedEvent ` and ` DefaultMetricsRegistry ` to implement ` MetricsEvent ` and changed ` HashMap ` to ` ConcurrentHashMap `
refactor NetworkInterface retrieval to iterate through multiple elements until support for multicast to enhance robustness by ensuring only valid network interfaces are processed
added a loop to check for valid CheckSums before comparing " 1 : any " to ensure all valid sums are validated against " 1 :
added a clone ( ) method to the BufferedChecksumIndexInput class to throw an UnsupportedOperationException to ensure that the clone ( ) method is not used
replaced the use of Math . sqrt ( ) with radius * radius in the return statement to improve clarity and correctness of the circle
modified frequency band assignment logic in P25Channel . java and added overridden methods in P25ExplicitChannel . java to ensure consistency in frequency band
replaced ` tapSquare ` with ` tapRectangle ` for improved clarity to enhance code readability and maintainability by using more d
set default _ replicate _ on _ write to false by default
added a new query parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in ` Util ` to
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes to provide access to delegate tasks for enhanced functionality
added null check and improved error handling in FileActivity and FileDisplayActivity to enhance user experience by providing clearer feedback on file retrieval and
added a new method ` quic _ conn _ stream _ writable ` in ` ForeignIncubatorQuicheConnection ` and ` J
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5365 .
simplified the alignment parameters for TableCell instantiation in BaseTextFormattingHelper . java and TableCell . java to improve code readability and
added a new file TracingAutoConfiguration . java to define tracing configuration with MDC and ThreadLocal current trace context to facilitate easier
fix a bug in the corruption scenario where the second Para do n ' t have a content .
refactor the ` getPrunedQueryableSegments ` method to accept a list of queryable segments and store them in a variable to improve
refactor VertxBufferTest class for improved readability to enhance maintainability and ease of understanding for future developers
fixed bug in readmessagelogichyphensubmissionchunk , and add test case
change visibility of mContext from private to protected to allow subclasses to access the mContext variable
removed unnecessary imports of SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to streamline code and improve readability by eliminating red
added a new class ` MongoDataIntegrityViolationException ` and modified ` MongoTemplate ` to use it to improve exception handling for data integrity violations in
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
updated the method name from ` bitsToHumanReadable ` to ` bytesToHumanReadable ` and added a new ` mimeType2HUman
replace merge policy instantiation with a direct instantiation in TieredMergePolicy to simplify merge logic and improve code clarity
added a check to return early if mOverviewStateEnabled is false to optimize performance by avoiding unnecessary operations when the overview state is not enabled
kondrian : fix ` ` cpufeature not find ' ' error message
modified the ` loadSettingModels ` and ` contextInitialized ` methods to accept an ` InputStream referencePropertiesInputStream ` to enhance flexibility in loading
added null checks for the incoming Fields , Terms , DocsEnum , and LeafReader in FilterLeafReader . java to ensure that null values
add a check for negative key - sizes to jcecrmfencryptorbuilder .
updated exception handling in NetSocketReader and SoftEndOfStreamException to provide clearer error messages to improve clarity of exceptions by providing clearer
removed redundant @ Inject annotations across multiple Java classes to streamline the code by eliminating unnecessary dependencies
updated assertions in ` BundledDistributionTest ` and added assertions in ` PostgreSQLTest ` to validate database user attributes to ensure accurate validation of user
[ flink - 20613 ] [ stream ] allow user to specify job name for print and log
refactor scale calculation to account for two - panel devices to improve accuracy in scaling based on device profile characteristics
change iceplainsbiome to extend Snowybiome instead of grassybiome .
removed zone parameter from ` getMinTime ` and ` getMaxTime ` methods in ` DataUpdateManager ` and ` StorageUtils ` to simplify method
[ j2kt ] add the ` ` isqualified ' ' flag to the ` ` thisreference ' ' to the compilationunitbuilder
updated regex pattern in XhamsterRipper to allow additional characters in URLs to ensure accurate matching of the gallery photo URL
fixed potential concurrency issue in glowworld . getall ( )
hhh - 14355 oracledialect should include the schema in the table name when the schema be specify
fix checkstyle issue in ` flutterconsoleloggerfilter ` ( # 1749 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select or deselect all
[ java ] do n ' t use termwindowlength when calculate network publication offset .
fix incorrect javadoc for guildupdateownerevent .
limit the inPortalTicks counter only for creative entities to avoid potential issues with portal tick adjustments for non - creative entities
added support for chart compression and improved spacing calculations in ClusterMonitorTileSkin . java to enhance the visual appearance of the chart based on
updated multiple codec templates in ResponseTemplate , TransactionalListCodecTemplate , TransactionalMultiMapCodecTemplate , and TransactionalQueueCodecTemplate to improve code organization
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when handling large binary data sizes
removed the condition checking if header is not null in RendererConfiguration . java to simplify the null check for renderer initialization
cs - 15836 : do n ' t scale volume with the same disk offering if it ' s the same and custom service offer
updated import statements and refactored order builder usage in HitbtcAdapters . java and Order . java to improve code clarity and
fix typo find by codespell on fossies . org
updated the description of the JRubyScriptEngineFactory service from " jruby " to " jrubyscripting " to accurately reflect the
updated variable naming from ` name ` to ` displayName ` for clarity to improve code readability and maintainability by using a more descriptive
updated the condition in ParticipateAssetIssueActuator to include a check for negative values to ensure accurate validation of the preciseExchangeAmount against
added a loop to limit the iteration limit in the FeedUtils class to ensure that the loop does not proceed if the iteration exceeds 10
added a new test method ` testHDF4 ( ) ` to ` HDFParserTest . java ` to verify HDF4 file parsing to
added a new constant ` CALCITE _ 6092 _ FIXED ` to ` Bug . java ` and modified tests in ` SqlOperator
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintainability
added a new method ` quietCloseAll ` to handle closing multiple AutoCloseable objects to improve code readability and facilitate easier
updated the button reply message to use ` common _ yes ` instead of ` confirmation _ remove _ remote _ and _ local ` to provide a
added null checks before calling drawImage in Pixmap . java to avoid potential NullPointerExceptions when srcWidth , dstWidth , and dstHeight are
updated import statements and method invocation for class definition using ` Unsafe ` and ` ProtectionDomain ` to enhance class loading functionality and improve code stability
updated regex pattern for hostname matching in GUIUtil . java and added validation assertions in GUIUtilTest . java to improve accuracy of hostname validation and
replace boolean conflict flags with a long counter for tracking the number of conflicts to improve clarity and scalability in handling multiple conflicts during row operations
improve support for api 0.0 . 3 ( # 1181 )
modified the reference handling in ReferenceMemory . java to include a check for the current instance to improve memory assignment logic and prevent unnecessary assignments
modified the input path handling in the Injector class to check for seed files before adding them to ensure that only valid seed URLs are injected , impro
added a condition to check if ` hideOriginal ` is true before hiding the original view to ensure that the original view is not hidden when
updated the calculation of maxNodes and modified the condition in FullUnrollMaxIterations to ensure maxNodes does not exceed the maximum maximum size and
added texture coordinate support check in CombinedTexture . java and a corresponding method in UVCoordinatesGenerator . java to ensure only supported texture coordinates are
added error handling for file deletion in EncodeActivity and improved variable naming in SupplementalInfoRetriever to enhance code robustness and prevent potential runtime
( chore ) camel - tracing : added seek ( ) and close ( ) method
updated SQL query to use oldPrefixLength instead of a dynamic substring to improve accuracy in updating handle prefixes based on the new prefix length
replaced the addition of elements to a list with a constructor that initializes it directly from another list to simplify the code and improve readability by
deprecate abstracttimer constructor for backwards compatibility
added a nightly build warning dialog for users when running a nightly version of Universal Gcode Sender to inform users about known issues
[ # 7370 ] fix sorting of response by recipient team name ( # 7370 )
updated return statement to include " declarations . " in UnnecessaryThrows . java to improve clarity of the returned message for better readability
deleted ` CacheApplication . java ` and refactored ` CommonsApplication . java ` to use a new ` CacheData ` instance to
replaced instances of ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
updated configuration handling in RuntimeEnvironment for KitKat and above to ensure compatibility with devices running KitKat and above
added a new constant for updating the URL link exists state in VersionDefinitionResourceProvider . java and a corresponding test in StackManagerTest . java
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix npe in cfmetadata . getindex ( ) when oldindexname be null
added import statements for XML resolver helpers and readers in CheckPackageAccess . java to enhance access control for XML resolver classes
renamed methods from ` save ` to ` add ` and ` persistExecutionContext ` to ` update ` in multiple classes to improve clarity
graphutil : remove loopbegin input from loopexitnode in loopexitnode .
updated RecyclerView references in SearchAndRecommendationsScrollController to use WidgetsRecyclerView instead of RecyclerView to improve layout handling and maintain
added a conditional check for terminal support in ConsoleReader to ensure that terminal operations are only performed when supported
changed data types of ` timeAllowed ` from ` long ` to ` int ` and updated related logic in ` LBHttpSolrClient `
added session validity check in AbstractSessionCache and updated test cases in RemoveSessionTest to ensure session data integrity and improve test coverage for session handling
added null check for " columnNames " before processing differences in ChangedIndexChangeGenerator . java to avoid potential NullPointerExceptions during index change handling
replace Vector with ArrayList for managing RadioButton instances and add action listeners to improve performance and flexibility in managing button selections
refactor UserManagerCompat to support both NYCMR1 and NYMr1 for improved user creation handling to enhance compatibility
added methods to retrieve database major and minor version in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and modified the Reorganize
updated the handling of mismatched rules in ActionGraphCache to include the number of nodes in common and differing rules to improve clarity in
added LockDatabaseDesc and UnlockDatabaseDesc classes to represent database operations to provide a structured way to manage database operations in a structured manner
refactor RankingUIModel and RankingToolbar to streamline model field assignments to improve code readability and maintainability by redu
added handling for disconnect messages in HandshakeHandler . java and improved logging in NodeImpl . java to enhance connection stability and provide clearer
added a test method for setting and deleting storage groups in IoTDBAuthorizationIT . java and updated AuthorityChecker . java to include a new
chore : [ doc ] update php namespace to match open source code ( # 118 )
added variable declaration checks and improved type validation logic in assertions and classes to enhance variable type validation and provide clearer error messages for missing types
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to ensure proper handling of test context
[ java ] update countermanager to not allocate too much metadata buffer .
updated log message formatting in MultiSteps and SendEmail classes to improve readability and consistency of log output
added null check and cloning for joinKeys in JoinDesc . java to ensure safe access to joinKeys and prevent potential NullPointerExceptions
updated WebAuthnConfiguration to utilize a custom PrincipalResolver for authentication handlers to enhance flexibility by allowing custom principal resolvers for authentication handlers
modified the ` addSettingsFromFile ` method to accept an additional search path as an argument to enhance flexibility by allowing users to specify search paths
added ' final ' modifier to several fields in Oracle . java to enforce immutability and ensure immutability of these fields
[ hotfix ] [ checkpointing ] exclude unaligned checkpoint until rescaling be complete
throw unsupportedoperationvisitor instead of unsupportedoperationvisitor for order _ by , map _ value _ constructor
add a system property graal . compiletheworldtest . log that can be disable by default .
removed a check for LocalVariable instance in LambdaRewriter . java to simplify error handling by ensuring only valid local variables are processed
added support for MySQL in CreateTableGenerator to handle " timestamp " column types to ensure compatibility with MySQL ' s timestamp handling in the table creation
added context class loader management in EnvConfiguration . java to ensure proper resource management and avoid potential memory leaks
set the ejection delay to PLUGGED _ DELAY when stageNr is zero in SimulationListHandler to ensure the motor ' s
updated methods and configurations to use ` BeanDefinitionOrderRunnerConfig ` instead of ` FunctionalRunnerConfig ` to improve clarity and maintainability
modified TransactionUtil2 . java file to improve transaction handling logic
refactor issuer validation and resolution methods to accept an Optional < OAuthRegisteredService > as a parameter to enhance flexibility by allowing optional services to
updated string concatenation and added null check for DocCollection in ClusterState . java to improve clarity and handle potential null collections gracefully
replaced ` getStyle ( ) ` with ` getAllStyles ( ) ` in ` TextArea . java ` to ensure consistent access to all styles
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance functionality by allowing configuration of database and schema names
[ java ] do n ' t use ` leadershiptermid ` in an election for unsuccessful leadershiptermid
replaced static import of Shadows . shadowOf with a private method shadowOf in ShadowActivity . java and ShadowBluetoothDevice . java
refactor FileSelection . java to handle null or empty root cases and add a new test case in TestBugFixes . java to improve
re - added oninventorytick , deprecate since 1.20 . 1
fix exception when export from recaf
added a null check before invoking invalidateOptionsMenu ( ) on getSherlockActivity ( ) to avoid potential NullPointerException when accessing getSherlockActivity
modified widget binding logic to include options handling to improve functionality for better widget options management
[ ecobee ] add miss capability string to ecobeesensorthinghandler ( # 15955 )
reformatted code for consistency by adding spaces to improve readability and maintainability
added environment variable mappings for AAPT and AAPT2 in Genrule . java and updated corresponding tests in GenruleTest . java to ensure
dump access table only if trufflecompilationoptions . truffleinstrumentBranches be true .
added null check before dispose of message to prevent potential npe
added getter and initialization methods to the ` db ` field in ` TronStoreWithRevoking ` , modified visibility of ` db `
updated log warning messages to clarify that log watching is not implemented for log4j to provide clearer guidance on enabling log
replaced ` e . printStackTrace ( ) ` calls with ` fail ( " Cloning failed . " ) ` and ` return ` statements to
updated IOSImplementation . java to use a null check for the native instance and changed the body type from ByteArrayOutputStream to SmallByteArrayOutputStream to
* change getattribute ( string ) to getattribute ( vertexbuffer . type ) to use ordinal instead of string
removed " territory = en _ US " from the JDBC connection string in AbstractDIHJdbcTestCase . java to ensure proper connection termination
added null checks for firstExchangeCompletedTimestamp and lastExchangeCompletedTimestamp in RouteInfo . java to improve robustness by preventing null pointer exceptions
added locale support and updated javadocs in TestHtmlTag . java , added new output checks in TestUseOption . java , C1 .
updated condition to check if the result is incomplete and the size of items to ensure that the completion process does not exceed a maximum of 10 items
updated usage instructions and argument handling in HybridClusterIntegrationTestCommandLineRunner . java to replace TimeFieldSpec with a new timeColumnName variable to
refactor format handling in SiteSnapshotVariationsTest and OutputOptions to improve clarity and ensure correct file extension based on the provided format
updated condition to check for QSB enable state in DeviceProfile . java to ensure proper handling of QSB margin when not in QSBEnable
use objects . equals ( ) and objects . hashcode ( ) to improve null - safe comparison in animationlist
added a new ` _ date ` field and its setter method in ` AbstractGenerator ` , modified buffer handling in ` HttpConnection ` , `
replaced instances of Adler32 with CRC32 in Store . java to standardize the CRC implementation for improved performance
fix : allow xen . heartbeat . interval to be set to null
added a new constant ZERO _ AREA _ FIN and updated geometry warning handling in FinSetCalc to improve error reporting for zero area warnings and
fix elasticsearchio to not serialize _ retry _ on _ conflict field
hhh - 14655 add trunc ( ) and dateTrunc ( ) function for h2 , oracle , mysql
solr - 10362 : ignore memory pool not find error message when convert gauge
added a new boolean parameter ` useJavaScript ` to the ` ensureSignedUp ` method and modified exception handling in ` UserContext ` , while
updated error messages in ValidationTask . java to use class names with enclosing names for better clarity to improve readability and maintainability of the
[ te ] restore ` ` / generateanomaliesinrange ' ' to ` ` / replay ' '
replace instances of ` DataWord ( ) . getData ( ) ` with ` DataWord ( 1 ) . getData ( ) ` and add a
refactor code to improve child item notification and badge handling in AllAppsContainerView . java to enhance code clarity and ensure proper functionality of
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService , ResourceHandlerTest , and ServletContextHandler to clarify behavior after ContextHandlerCollection is started to improve code read
removed a condition that checks if the workspace identifier equals WORKSPACE _ CUSTOM to simplify the code by eliminating unnecessary checks
truffle / jdk / jfr / services / trufflejdkservices . java fails due to misuse of lookupmodule
added JUnit @ Ignore annotation to the ClassicSuperHandlingTest method to temporarily disable tests until call - through is set to false for unshadow
updated import statements to remove v1 dependency from ItBitDemoUtils , ItBitOrderBookDemo , ItBitTickerDemo , and ItBit
ww - 4892 use parameter . isdefined ( ) to check if the parameter be present
added private constructors to Utils , AsyncSocketFactory , and Whois classes to enforce singleton pattern and prevent instantiation
added try - with - resources for ObjectInputStream to ensure proper resource management and handle potential IOException
updated type checks to use " java . util . Vector " and " java . util . Hashtable " instead of Class . getName ( ) to
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to improve debugging by providing more context on the
added trimming to fragmentList size check to ensure whitespace is preserved before processing the fragment list
fix resourcepackfilenotfoundexception with modfile . getfilepath ( )
refactor PartitionToolbar to simplify the handling of TransformerBuilder nodes and edges to improve code readability and maintainability by reducing redundancy in
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to ensure proper handling of task views when displaying as
refactor calculate methods in CalculatorRestEndpoint and CalculatorServiceImpl to return BMIViewObject instead of Map < String , String >
simplified the comparison by removing the comparator in QueryCommand . java to improve code readability and maintainability
added a check for BlockHayBale before adjusting damage to ensure damage is applied only when the block is a
updated environment variable handling and added new command line constants in multiple classes to improve compatibility with OpenJ9 and enhance environment variable management
added support for custom plugin properties in the OptionsParser and corresponding tests to enhance the flexibility of plugin configuration handling in the application
updated the condition to check if the hashTable is not empty instead of null to ensure that the condition verifies if the hashTable is not empty
updated timestamp handling and test assertions in Timestamp and TimestampTest classes to improve readability and ensure correctness of timestamp representation
[ java ] do n ' t reuse archive context in cluster service agent .
added a check for the ` isCompiled ` condition in the compilation threshold check to ensure that compilation threshold is only checked when the vm is not
added testimage2 ( ) and testimage2joined ( ) methods to AbstractTest . java and updated their usage across multiple online test
refactor TogglableFlag to improve default value handling and add a change listener for the launcher namespace to enhance code clarity and ensure
updated logging statements to use parameterized messages instead of debug to improve log readability and provide more informative error messages
added a conditional check to return early if the current operating system is Android to optimize performance by avoiding unnecessary processing on Android devices
use hamcrest assertion instead of junit in tests / integration / user / dashboard / routestest . java
added new functional interfaces for byte , float , and short predicates in the com . speedment . common . function package to provide functional interfaces for
changed the return type of ` getSubsColor ` methods and related methods from ` int ` to ` String ` and updated related logic for setting
added a conditional check before deregistering the invocation registry to ensure the future is only completed when it is successful to avoid potential null pointer exceptions
replaced the creation and flushing of control frame bytes with a direct output method in AbstractWebSocketConnection to streamline the code and improve clarity
add check for redirect to prevent welcome screen again
added ShadowCheckedTextView class to facilitate testing of CheckedTextView functionality in Robolectric tests
made ParserState class serializable and added serialVersionUID to ParserState , modified GETTER _ CACHE and changeCallback fields to be transient in Accessor
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to include support for IDentrust D
removed redundant setting of context attributes in WebInfConfiguration . java to streamline code by eliminating redundancy
update occupant . getnick ( ) to use presence . from ( ) .
updated QuicSession and QuicConnection to include a context parameter across multiple constructors to enhance flexibility in session management by allowing context as a
updated CreateIndexTask . java to use writer . getConfig ( ) . setMergeScheduler ( ) instead of writer . setMergeScheduler ( )
pdfbox - 4892 : simplify code , a suggest by valerybokov
added imports for ComputedDateValue and updated default value handling in AddDefaultValueChange . java and AbstractDatabase . java to improve handling of Comput
fix typo find by codespell on fossies . org
resolve service provider metadata from an existing classpath
made the ` printer ` variable protected and refactored the creation logic in ` GraphPrinterDumpHandler . java ` to allow subclasses to
added BigDecimal import and updated order average price calculation using BigDecimal for precision to ensure accurate average price representation and avoid potential rounding issues
updated ProjectionOperation and TypeBasedAggregationOperationContext to use ' target ' instead of ' name ' for projections and adjusted related methods accordingly to
fakepayertest : do n ' t send the same player to the addviewer command if it already exist .
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and memory usage during drawable state updates
refactor connection handling in SPDYClient to improve clarity and maintainability to enhance code readability and maintainability by using more d
fix ( dubbo - common - serialize - protostuff ) : avoid npe in protostuffobjectoutput . writewrite ( object )
pdfbox - 4892 : fix checkstyle violation ; remove unnecessary semicolon
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
ggb - 220 do n ' t draw empty ax if there be no number to show
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap methods to ensure proper filtering and wrapping functionality is applied
[ amazonechocontrol ] fix checkstyle violation in xmlworkflowserviceimpl
added SSL handling for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything . java file to enhance security by
refactor clock rate handling in multiple classes to use a new method for retrieving the real used clock rate string to improve code clarity and maintain
modified TextureAtlas . java file to improve texture rendering functionality
updated the method to return the module name instead of the product name in ProjectGenerator and added a method to set the module name in Apple
[ hotfix ] fix testslot to release registry lock
# 113 - add support for ebean . find ( id ) . findids ( ) with inheritance
updated WebSocketServletRFCTest to use a ByteBuffer for reading from input instead of a close frame to improve clarity and maintainability of the
[ wasm ] fix memory leak in function reference
added ttl configuration to the SQL table creation in ` ClickHouseLogCollectClient ` and ` ClickHouseLogCollectConfig ` to allow
updated serialization types in CustomChangeWrapper and CustomPreconditionWrapper to use NAMED _ FIELD instead of NESTED _ OBJECT to improve cl
replaced QueuedThreadPool with Server and HandlerCollection in DeploymentExceptionTest . java to improve server management and context management during tests
added error handling for Fresco initialization and VectorDrawableCompat initialization in CommonsApplication . java and NearbyController . java to improve
update return statement to handle null or empty objectName cases to improve robustness by ensuring non - null and non - empty return values
updated error messages in ` Command . java ` and ` TestPrint . java ` to provide clearer context when a file cannot be opened to
[ hotfix ] [ table - planner ] fix nullpointerexception in environmentsettings
updated X500Subject variable naming and improved null handling for dname in KeyTool . java and Resources . java to enhance clarity and
fix mx javadoc issue in truffle gate cause by added @ deprecate annotation
replaced ByteBuffer encoding method with direct string conversion in Utils . java to simplify byte conversion process and improve code readability
added a new interface PermissionEvaluator with a method for permission evaluation to provide a mechanism for checking permissions for specific security contexts
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` LineReader ` class and implemented cleanup logic in `
fixed - masterfilesystem . isalive ( ) incorrectly check for server that do n ' t contain the server name
replaced CALC _ MERKLE _ ROOT _ FAILED and CALC _ MERKLE _ ROOT _ FAILED with
refactor ExpandWar . java to use URLConnection for accessing the JAR file and improve error handling to enhance robustness and maintainability of the
do n ' t swallow error decode response body
changed the container layout from center to centerAbsolute in Picker . java to ensure the wrapper displays the absolute position of the spinner
[ java ] : fix bug in networkbufferpool when request memory segment be interruptable .
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper management of the MBeanServer
replaced JUnit 4 runner annotations with a RetryTestRule in AbstractIT . java to improve test reliability by utilizing a retry mechanism
fix query state machine not be able to auto - commit if the session have a transaction id
[ net . hydromatic . optiq . test ] add package - info . java file
added support for acquiring " javax . microedition . khronos . opengles . GL " in the Instrumentation
[ hotfix ] [ test ] remove redundant code in streamtasktimerservicetest
refactor URI handling in ` Request . java ` and add a test for CONNECT HTTP method in ` RequestTest . java ` to improve robust
updated the access level of KEY _ LAST _ SEEN _ VERSION _ CODE to public and refactored methods to retrieve available storage points to
added methods for managing session availability and unavailability in SessionManager to improve session management by allowing dynamic priority changes for client sessions
added a package scan entry for " liquibase . pro " to the ServiceLocator to enable scanning of the Liquibase pro packages
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in the ` SyncedFolderProvider ` class to simplify the
updated the ` loadWithNewGlobal ` method to accept an additional argument list to enhance functionality by allowing more flexible argument handling
refactor code to improve readability by adjusting the assignment of startIdx and simplifying conditional statements to enhance code clarity and maintainability by
replaced ` length ( ) ` method calls with ` toIntExact ( ) ` for obtaining retained size in ` HiveClientModule . java
renamed methods related to randomization depth handling from " isExceedRandomizationDepth " to " hasAlreadyRandomizationDepth " to improve
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and a corresponding test in TestWindowFrame .
added a line to clear the headers from the proxy request to ensure that no duplicate headers are added to the proxy request
added a condition to skip tests if SA attach is not expected to work to ensure tests are skipped when SA attach is not expected to work
added null check for bgColor in GraphicsDevice . java and created TranslucentWindow . java for window translucency support to ensure proper
updated user information handling in UserInfoActivity to check for null values before displaying them to improve user experience by providing a clear error message when there is
added serialization support for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers cannot be used on different machine to prevent
[ flink - 20536 ] [ table - planner - blink ] support ` ` update - mode ' ' in kafk
added a new file MultipleOutputsIntegrationTest . java to implement integration tests for named output groups and source files to ensure that named outputs can be
updated regex pattern and added logic to update content in FileSettings . java to ensure that changes to the settings do not overwrite the original content
nifi - 7591 fixed statelesscontrollerserviceinitializationcontext . getflowcontents ( ) and statelessvalidationcontext . getvariables
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for testing purposes
added two new device statuses , " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
catch itemloadingexception rather than exception in modelloader . loaditem ( )
removed unused import statements and added an @ Ignore annotation in KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not
return 1 for non - 2x and non - 2x when call getcurrentsurfacescale ( )
refactor RussianLowerCaseFilter class implementation to improve code readability and maintainability
replaced serverProps and clientProps with EMPTY _ PROPS in CsvBulkLoadToolIT . java and simplified server configuration handling in QueryUtil .
replaced File . separatorChar with File . pathSeparatorChar in displayName to ensure consistent handling of file path separators across different operating systems
use a resettableinputstream for wavloader to avoid seek ( ) and seek ( )
added support for repeatFirstLineIndent in ColumnText by introducing a boolean parameter to control indentation behavior to improve code readability and maintainability
cast the ` oid ` to ` Object ` before comparison in the ` Oid ` class to ensure proper type handling and avoid potential ClassCastException
move metric tracker and health check into the constructor so it can be use from the hikariconfigpool
loopex : use controlflowanchored instead of controlflowanchornode .
added a line to disable focus painting for the button in the WindowsPlacesBar to improve user interface responsiveness by preventing unnecessary focus
updated the condition to check for instances of UniqueConstraint , ForeignKey , and PrimaryKey in DatabaseSnapshot . java to ensure proper handling of backing index
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and modified the API endpoint in ` AccountAPI
[ 3.0 ] do n ' t allow dc . title to be present in the group metadata
do n ' t throw an exception if there be no utterance
added unit test base on user forum issue
updated thread configuration from background to database update in FeedRefreshUpdater . java and added getter and setter methods for databaseUpdateThreads in ApplicationSettings .
increased the fast scroll threshold from 40ms to 10ms in RecyclerViewFastScroller . java to increase the scrolling speed and reduce
updated the SystemClassName initialization to use " Ljava / lang / System " instead of using a internal class name to ensure compatibility with the latest
hhh - 13644 procedure call should not throw npe on get _ random _ value
updated the initialization of ` apiProperties ` to handle null cases to ensure that a default map is used when ` getApiProperties ( ) ` is
added BinaryFrameGenerator and TextFrameGenerator classes for handling binary and text frames to improve WebSocket frame processing and ensure proper encoding of binary and text
simonstewart : make the pageloadingtest more resilient to flaky firefox driver
modified the calculation of lat and lon in RandomGeo3dShapeGenerator to use multiplication by Math . PI and added conditional checks based on random
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
changed the return value from false to true in SQLiteDatabase . java to indicate successful execution of the operation
do n ' t report ljava / util / concurrent / monitorenter in findjsr166lockmonitorenter
added MkdirStep to multiple classes and updated expected steps in FatBinaryTest to ensure proper directory creation for output files
improved error messages in MeshLeveler . java for coordinate comparisons to enhance debugging and provide clearer error messages when alignment errors occur
[ drools - 770 ] skip kie - pmml parsing and compilation if jpmml be unavailable to the classloader
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure correct handling of thermal status during shutdown
added a condition to create a temporary directory based on the operating system to ensure that temporary directories are only created on the operating system and improve compatibility
disable memory map by default on window
added a null check for the organization in the pom . xml file to ensure that plugis are required to have a organization in the pom
updated license agreement documentation in SepPostingsWriterImpl . java to clarify the purpose of the license file distributed with license agreements
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the project
updated the method to use the Java class path instead of an empty string to ensure compatibility with different environments by using the system ' s classpath for
replaced usage of ArrayUtils . EMPTY _ BYTE _ ARRAY with new byte [ 0 ] for cryptKeyInit , cryptKeyPriv , and md
added JUnit Pioneer annotations and a test method to skip Javadoc changes in the AddLicenseHeaderTest class to address issue # 3198
changed the LAUNCHER3 _ PHYSICS flag from false to true to enable the LAUNCHER3 _ PHY
added a new ` < div class = ' noPrint ' > ` tag in ` HtmlThreadInformationsReport . java ` to indicate that
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and changed version constants from LUC
added macosx symbolicator and task handles in BsdDebuggerLocal . java and expanded OS detection for Darwin in PlatformInfo . java
improve memory management by use a weakreference to prevent memory leak .
do n ' t log network dispatcher exception on reset by peer .
[ java ] : initialize admin buffer from aeron context if available .
added a break statement in the TouchImageView . java file to prevent fall - through behavior in a switch - case structure
chore : [ dialogflow ] update go _ package to match open source code ( # 130 )
remove handshake listener that be n ' t need since grizzly 1.6 . 0 upgrade .
added type checking for " java . lang . Object " and " java . lang . CONTRAVARIANT " in TypeUtils . java to
use concurrentskiplistset instead of nonblockinghashset for memtable pending flush
added null check for ` tree . errs ` and updated error handling logic in ` MemberEnter ` , ` JavaCompiler ` , and ` Err
changed the browser configuration from SWT . NO _ BACKGROUND to SWT . NONE to ensure consistent behavior across different screen configurations
updated the negative button from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
[ java ] fix division with negative value in integerstamp .
added a method to read an InputStream into a byte array before loading an image to improve image loading efficiency by utilizing a dedicated method for reading
added methods to manage declaration and undefining local variables in the SwitchCompiler and related classes to enhance variable handling capabilities and improve code clarity
added error handling for RSA cipher initialization in RSAClientKeyExchange . java to improve robustness by catching potential exceptions during initialization
added " psapi . lib " to the additional dependencies in WinGammaPlatformVC10 . java to ensure compatibility with the latest library updates
updated newline character handling in StringUtils and StringUtilsTest classes to ensure consistent line endings across different operating systems
updated HTML encoding settings and modified alert content in the TemplateEngineFreemarker and ApplicationController classes to ensure proper handling of special characters
replace ByteArrayInputStream with String for byte array conversion and print output before unmarshalling to improve performance and readability of the code
make some field final in samplerenderfactory to be non - static
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter class to avoid unnecessary dependencies when the
added logic to handle quoted characters in CommandLineBuilder and updated test cases accordingly to improve command line formatting and ensure correct behavior of quoted character handling
removed the ' public ' access modifier from multiple classes and interfaces in the Clock , DelegatingGauge , RegistryProducer , and VendorDefined interfaces
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks for improved performance
fix schema generator to correctly handle default value for object field
update file version to 532077 to reflect the new release of bug 532077
updated texture extension checks in FloatTextureData . java to include GL _ ARB _ texture _ float as a valid constant to ensure compatibility with
update version to 2.1 . 20050211 and add write method to fileserver
updated output directory assignment logic in ClassDump . java to include a null check for ` outputDirectory ` and ` jarStream ` to ensure proper directory
updated ` ShadowSQLiteConnection ` to measure performance using ` PerfStatsCollector ` to improve performance tracking for SQLite operations
updated tool path retrieval from ` getCurrentJDKTool ` to ` getTestJDKTool ` in multiple files to ensure compatibility with the latest testing
[ geos - 7018 ] add resourceerrorhandling enum for good error reporting
added bounds checking for bufferPosition in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure bufferPosition does not exceed buffer size and
update error response message to include the request URI when a missing resource is missing in DefaultServlet . java and JspServlet . java to improve error
modified the ForkJoinPool and ForkJoinWorkerThread classes to include an innocuous flag for thread creation and added AccessControlContext class to
updated CHECK _ EVERY _ N value and modified memory check logic in Caches . java to improve performance by reducing unnecessary memory checks and
hbase - 25827 testsplittransaction # testfullrollover ( ) should not call hregion . openhregion ( ) twice
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test for Jaas demo in DemoModulesTests . java to verify the correctness of Jaas configuration within the specified environment
added conditions to check if spanX and spanY before creating a folder and adjusted vertical position calculation in CellLayout . java to ensure folder creation
refactor CacheOffHeap class implementation to improve performance and maintainability of cache management
improve error message when you try to create a table that depend on a table with a higher id
added validation for row and column limits before setting tiles in TiledLoader . java and improved data string trimming in TiledLoader .
added synchronization to the setworkingset method to ensure thread safety during concurrent modifications
added a new Java file for calculating the Manasa solution to implement a solution that calculates the minimum and maximum stones based on input values
added a new interface to check for bad IP addresses and refactored the processor to use this interface to improve address validation and enhance code maintain
fix rendertype = = rendertype . getTranslucentmovingblock ( ) and remove unnecessary check for layer = = rendertype .
remove default tag from config comment if there be no config element
change type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and update related references in ` Capability
added null check for recieptents before sending email and changed time conversion from seconds to milliseconds to improve robustness by avoiding potential null
refactor single route check into a private method to improve code readability and maintainability
do n ' t fail fast docker client creation if the cache be already in image name cache
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated ` perfStatsCollector ` to include it to enhance metadata tracking
fix for npe in historic process instance query when process date do n ' t exist
replaced ` gradleImporter . importProject ( ) ` with ` gradleImporter . importProjectCore ( ) ` in ` OpenAndroid
added error handling for CommandFailedException in LiquibaseCommandLine to improve user feedback during command execution
updated TreeMap . java for improved functionality to enhance performance and maintainability of the code
added methods to enable or disable asynchronous stack traces in the Display class to improve control over asynchronous stack trace behavior in the application
added a method to set the glow color in BubbleTextView and used it in Folder to enable customization of the glow outline
set the style class of ' link ' and ' desc ' elements to " file - row - text " in LinkedFilesEditor . java to
added a test method to verify the class name matching in the ` alltypes ` table and modified the ` AbstractJdbc2ResultSetMetaData ` to
removed exception handling for file deletion in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the code by directly using IOUtils for
added null check for _ info before accessing its status in upgrading boolean to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a String provider to provide a way to initialize the provider with a specific string value
updated the condition for setting maximum RAM in LauncherPreferenceJavaFragment to include a check for 2048 - bit devices to ensure that maximum RAM is
add miss stats to empty _ local _ map _ stats when there be no data
add log to fileprofileactivator to make it easy to debug
fix error message when add a noname - valid pdf reference .
fix npe in guild # createroles when role be empty
updated return value in ExpandableUploadListAdapter and changed array size from 30 to MAX _ NUM _ UPLOADS _ SHOWN to improve
added assertions to verify deletion of dashboard users in DashboardUserMapperTest . java to ensure that the delete method behaves as expected and that the
rename parameter and fix typo in instructorfeedbackresultsspagedata . java
sulong : make execute ( ) and executewithtarget ( ) in llvmpointerstorenode and llvmmemorycached
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for external use
add usage help for the terasology command and remove the printusageexit method
added notification functionality for old interactions and reordered the switch case statements in DrawerActivity . java to enhance user experience by providing feedback when the
refactor CommandLineParserTest class for improved readability to enhance maintainability and clarity of test cases
added new interpolators for animation transitions in the QuickstepAtomicAnimationFactory and updated visibility of certain constants in PortraitStatesTouchController to
replaced the method ` Character : : toUpperCase ` with ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to
added native methods for frame management and object release in CWrapper . java to enhance performance and facilitate object management in the application
added constant value checks in mmm Checker . java and created a new ValueTest . java file to ensure correct handling of constant references and validate
updated test cases in MontgomeryMultiplyTest , TestMulAdd , TestSquareToLen , and TestSquareToLen files to
removed null check for constructors in PojoUtils . java to simplify code logic for better readability
refactor JiraConfiguration class to improve code readability to enhance maintainability and facilitate future updates
updated string concatenation syntax for error handling in UploadBuild . java to improve clarity and consistency in error reporting
updated bounds settings in DeviceProfile . java to include search bar offset to improve layout positioning for search bar display
improve disconnect logic to handle idle timeout .
refactor activity launching logic to run on the UI thread to ensure UI updates are executed on the main thread for improved responsiveness
removed unnecessary optional checks and methods in AppleSource . java to streamline code and improve readability by eliminating unnecessary complexity
increased the timeout duration for trigger firing latch from 22 milliseconds to 32 milliseconds and increased the timeout duration from 60 milliseconds to 9 milliseconds to
[ java ] use positioncount instead of outputpositioncount in floatselectivereader .
improve performance of abstractnodecostsearch . getbestpath ( )
added a condition to skip processing for specific UI components in ResourceEditorView . java to ensure that only relevant UI components are processed in the resource
fix crash when launch some apps which require icon to be load on the looper .
added a null check for commitPoint and assigned it from the deletion policy if it is null to ensure that the commit point is initialized before use
added unit tests for IMEI and MEID operations in ShadowTelephonyManagerTest . java and implemented IMEI and MEID
removed unnecessary debug debug methods in SimpleHostRoutingFilter to streamline code for better readability and performance
added dory ( ) methods to various classes and implemented the close ( ) method to ensure proper resource cleanup to prevent memory leaks
[ rip - 10 ] improve test coverage of normalmessagesendandresendandreceiveit
use standardcharsets . utf _ 8 instead of resolve charsets dynamically
hbase - 25827 bulkload should not crash if there be multiple hfile for the same file in a table - addendum
added a nullable ` commission ` field and updated constructors in ` DefaultWithdrawFundsParams ` and ` RippleWithdrawFunds
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to streamline code by eliminating unnecessary dependencies
consolidated multiple catch blocks into a single catch block for ` SolrServerException ` to improve code readability and reduce redundancy in exception handling
added null check and error handling for abstract method overload in Java2TypeScriptTranslator . java and updated tests in Java2TypeScriptTranslator .
added StacklessLogging to the FileSessionDataStore ' s sweepDisk method to improve error handling and logging for better debugging
made XML , HTML32 , and HTML40 entities public and changed access modifiers to package - private to improve encapsulation and restrict access to
updated test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a check for null or empty string before parsing claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by handling cases
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with the Hive framework ' s built - in
refactor processTypeHintForNestedDocuments to handle null source cases in UpdateMapper and add unit tests for handling null values in UpdateMapperUnit
updated core status handling in CollectionsAPIDistributedZkTest . java to use CoreStatus instead of CoreAdminResponse to improve clarity
initialize transformers and locators lists with new ArrayList instances to ensure that transformers and locators lists are properly instantiated
no effective change - code cleanup - string concatenation issue
improve bailout error message to include caller bytecode .
rename ` setOf ` method to ` copiedSetOf ` and update related method names for clarity to improve code readability and maintainability
( chore ) camel - mail : use objecthelper . getidentityhashcode to avoid npe
resolve http : / / issues . apache . org / activemq / browse / amq - 2748 - avoid npe on
updated the return statement to include setting the identifier property name to improve clarity and functionality of identifier handling
instrumentsfragment : launch ` ` wave generator ' ' activity instead of show a toast
added null checks and logging for missing sheets in KeyedProperties and SheetOverlaysManager classes to improve robustness by preventing potential NullPointerExceptions
feat ( shell ) : add test to verify log and exec be call
added a test method ` testNoWriter ` to ` TestReplicationHandler ` for detecting no index and creating a new one to ensure that
fix miss call to super . dispatchmethodKernelokra in graalkerneltester
refactor DefaultDnsClient to use List < List < Object > > and implement Comparable < DefaultMxRecord > for record sorting to improve
refactor thread creation in XToolkit to use a privileged action for better security to improve code readability and maintainability by reducing
added validation in SelectBox and set a specific Linux6 dropdown in UITest to ensure proper validation of the dropdown across different operating systems
replace throwing an exception with printing stack trace in JobGlobalListener to improve error reporting for better debugging
nifi - 5591 : fixed bug in flowbuilder . split ( ) that cause a nullpointerexception in splitstate . split (
change connectionState to be volatile and update its usage in the return statement to ensure thread safety when accessing connectionState
polish ` ` change default poll interval from 10 to 1000 ' ' in integration test
replaced direct ByteBuffer creation with variable length assignments and updated method calls in MemoryStack . java and MemoryUtil . java to improve memory allocation efficiency
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder to improve error reporting by providing
[ java ] unusedmodifier false positive with enum
refactor lambda expressions to method references and update logging statements for clarity to enhance code readability and maintainability by using method references
use ssl = { 0 } instead of ssl = { 0 } for test
correctly handle illegalformatexceptions in transformationhelper ( # 4121 )
replace userPermissions with activeConnectionPermissions in ActiveConnectionRESTService . java to ensure accurate access to active connection permissions
replaced direct equality checks with a custom EqualsBuilder in the Point class to improve code readability and maintainability by using a custom EqualsBuilder
added a null check for outputRoot in the process method to avoid potential NullPointerException when outputRoot is null
pdfbox - 4892 : add a filter to filter out annotation , a suggest by valerybokov
modified StackTraceCleaner class to improve error handling to enhance reliability and maintainability of stack trace management
added content type handling for CSS and JavaScript files in PluginServlet to ensure proper content type is set based on the request ' s source path type
hhh - 14686 skip testliteralinselectexpressiontest on oracle
updated the upgrade method parameters and logic in ForkController . java to improve clarity and ensure proper handling of version values
added getStats ( ) and getStatsSnapshot ( ) methods to multiple classes to provide detailed statistics for better tracking and tracking of document counts
[ scb - 2687 ] allow to configure kie . config . longpolling to be disable via kieconfig ( #
added accessibility support and refactored scroll functionality in multiple classes to improve user experience by enabling smoother scrolling gestures and
updated the initialization of unlocks in the UI and added a button in the PausedDialog to improve user interface by providing a convenient way to
added a line to clear the drop list in PlayerEventListener to ensure the drop list is clean before processing new drop events
[ hotfix ] [ stream ] add default param name to streamresult
updated IOException import and method signature in AttributeNormalizerTest . java to ensure proper handling of IOException during test execution
update print statements in TsFileSketchTool . java to include chunk type and skip the PlanIndex to enhance clarity of output by including chunk
added a ` ImmutableSet < String > ` to exclude specific Swedish headers from the ` UmbrellaHeader ` class to ensure that
fix a typo in the method signature of grizzlyasynchttpprovider .
added encode ( ) method to RequestPlugin . java to ensure data integrity during request processing
added support for DB2 dialect in RolapNativeSql to convert literal expressions to FLOAT ( " expr " ) for DB2 databases to ensure
added null and blank password validation in LdapAuthenticationProviderImpl to ensure that a valid LDAP user is provided to avoid runtime errors
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear the complexWriters list in ProjectRecordBatch . java to ensure that complex writers are properly managed during processing
added @ SuppressWarnings ( " serial " ) annotation to multiple Java classes to suppress warnings related to serialization
removed the public modifier from the ClassGraphClassLoader class and improved null - checking logic to enhance encapsulation and prevent potential NullPointerExceptions
added a condition to skip processing for specific schema errors and modified the return statement in ErrorResponseException . java to improve error handling and provide clearer
added a constructor to EventSourcingRepository that takes an EventStore , LockFactory , EventStore , SnapshotTriggerDefinition , and RepositoryProvider
refactor symbol handling logic for binary nodes in Attr . java to improve clarity and maintainability of symbol definition logic
modified the handling of displayed text in SearchedPeopleCursorAdapter to ensure proper formatting of search text to enhance user experience by providing clearer
when in standby mode , do n ' t send wak _ str when in standalone mode
tmi - tiff : change default value of tiff . planarconfiguration from tiffextension to tiffbaseline . planarconfig
added close ( ) method to ItemListTag . java to ensure proper resource management and prevent memory leaks
tweak the laser table to use average util instead of hardcoded array .
added two new files , SigInt . java and SigIntBarrier . java , to handle signal handling in a concurrent environment to provide a
refactor graph - related code to use HierarchicalGraph and EdgeIterable for better handling of hierarchical graphs to improve accuracy in determining the maximum edge count
refactor TCTLSeparatedProtocol to use Text class instead of byte buffer for null strings to improve efficiency and reduce memory usage when
[ # 7771 ] handle invalid rubric index in responsedetails and responsedetails ( # 7772 )
updated the condition in CatalogComparator to compare against the original schema case instead of the database instance to improve clarity and correctness of schema comparison
simonstewart : reset the proxy setting in the browsermobproxytest
updated criticalErrors append method to use Integer . toString for line and column values to improve clarity and consistency in error reporting
removed duplicate lines resetting the text watcher in InPlaceEditView . java to streamline code by eliminating redundancy
improve javadoc for internalbytearray and trufflestring .
[ hotfix ] [ runtime ] use tuple2 instead of tuple3 for each edge in outedgesfunction
updated assertions and class names for Java 6 and Java 6 to improve clarity and consistency in naming conventions
deleted the Class Á file and added a new DiacriticTest class to implement a test for Mac OS X to ensure proper
[ java ] fix intermittent failure in cluster membership test .
( chore ) camel - mng - defaultmaven : do n ' t try to get the reactor workspace reader if it ' s
updated SSL check to use ` equals ` for URI scheme comparison and modified IP port assertions in ` TestServiceRegistryConfig ` to improve clarity
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added ensureInstance ( ) method to encapsulate servlet initialization logic to improve code readability and maintainability by reducing duplication
added logging functionality and modified deltaServerTime handling in BinanceExchange and BinanceBaseService to improve tracking of server time changes and enhance debugging
updated Tomcat container adapter classes to include support for JavaServer Pages with NonStop ( tm ) Servlets for JavaServer Pages ( tm
modified the way animations are deregistered by checking for a valid Form before deregistering it to improve stability by preventing potential null pointer exceptions
modified ` decodeResource ` and ` drawBitmap ` methods to accept an additional ` BitmapFactory . Options ` parameter to enhance flexibility in bitmap
[ java ] : fix race condition with executor in publisher and subscription .
added click and long click functionality to the TimelineArrayAdapter to enhance user interaction by allowing linkifying tweet buttons
added " text " data type to unmodifiableDataTypes and modified conditionals in NumberType and ColumnSnapshotGenerator for handling numeric and column size to
shutdown instance factory after each test ( # 3683 )
updated method names and logic in AmbariManagementControllerImpl , State , and AmbariManagementControllerTest classes to improve clarity and
[ mielecloud ] fix nullpointerexception when reconfiguration fails
refactor methods in PreconditionEnforcer and CrawlServer to synchronize access and improve robots expiration checks to enhance thread safety and ensure proper handling of
updated display name retrieval to handle potential null values before checking for " Teredo " to enhance robustness by preventing potential NullPointerExceptions
updated SpriteBatch and ImageButton classes to include default shader handling and adjusted constructor parameters to improve shader management and ensure default shader is used when
added properties for synchronous commit option in TestUtil . java to enable synchronous commit functionality for better resource management
added type coercion functionality to handle duplicate elements in SortedSetTypeCoercer to ensure proper coercion of collections and improve error handling
refactor message string ID assignment and button handling in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality of favorite file
added a check to ensure the character index is within a valid range before proceeding to prevent potential errors when handling invalid characters
fix port issue when connect to a remote server .
updated the expectation in HostResourceProviderTest to return an empty map instead of null to ensure that the test correctly returns an empty map for clusters
[ hotfix ] remove unused logger parameter in yarnentrypointutils
add init ( ) and initstyles ( ) method in sipcommframe to initialize the color , style etc .
removed the ShadowHtml . java file and updated HtmlTest . java to reflect this change to simplify the codebase by eliminating unused shadows
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface
updated logger names to include " http3 " and " quic " alongside existing ones in HttpClientLoadTest . java to enhance logging
changed the access modifier of the addListeners method from private to public and added a new test for listener validation to enhance method accessibility and ensure
[ hotfix ] [ runtime ] fix typo in javadoc of statehandlestore
updated import statements from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty
[ # 7372 ] instructor : course : enroll : show student detail in student page ( # 7373 )
use try - with - resources to prevent resource leak
camel - 1145 : fix the unit test error of camel - itest
added ` BuildTarget ` as a parameter and refactored jar parameter retrieval methods in multiple classes to improve clarity and consistency in handling library
no effective change - fix typo in trusteverythingtrustmanager . java
bug 10717 : remove the unnecessary getpagesizeval ( ) from listcapacity api
added handling for the CLOSED state in IteratingCallback to ensure proper execution flow when the callback is closed
added a new boolean variable ` isAuthorized ` and modified the constructor parameters in ` AccessControlContext ` , and implemented the ` impliesCreateAccessControlContext
modified OSGiDeployer to handle non - AbstractOSGiApp instances before sending the deployment event to improve event processing and ensure proper
added handling for " tiff " codecV and container in DLNAMediaInfo . java to ensure correct MIME type is set for
refactor variable names and add synchronization around profile arguments in OptimizedCallTarget . java to improve code clarity and ensure thread safety when accessing
added a new file ` CubocDesktop . java ` and modified ` Map . java ` and ` MapRenderer . java ` to util
updated file paths in PolicyMonitorTest to use ' target ' instead of ' test - resources ' to ensure tests run in the correct location of
added a call to removeAllFiles ( ) in TrashbinActivity to ensure that the trash bin list is cleared when no longer needed
updated import statement from org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) to com . sun . jdi . Bootstrap
truffle / llvm : make checkglobalvariablestoragenode . execute ( ) return a boolean , and add checkglobalnode . check
modified the createLauncherEvent method to include an Intent parameter and updated event data accordingly to enhance event handling by associating components with their identifiers and
limit the amount of burned to a maximum of 100000 to improve stability by limiting the amount of burned to a specified threshold
refactor UniqueConstraintSnapshotGeneratorSnowflake to streamline imports and enhance functionality for handling unique constraints to improve code readability and maintainability
refactor item assignment logic in DMLTransformer to handle empty insertStatementBuilder case to improve clarity in selecting items based on the presence of
updated import statements in ServiceValidateControllerTests and modified the PGT URL parameter from " http : / / www . github . com " to
updated ` getDefaultValidFunctionName ` method to include ` isStatement ` parameter and improved function body handling to enhance function name validation and ensure proper
updated JarLauncher . java for improved functionality to enhance performance and maintainability of the code
updated generic type usage for collections and collections in multiple classes to enhance type safety and code clarity
add a dimension to deviceconfiguration so that it do n ' t interfere with other device .
added a test method to update a PGobject in the ResultSet with a specific date in the ResultSetTest . java file to ensure that the PG
added error handling for password reset requests in PasswordResetEndpoints . java and a corresponding test case in PasswordResetEndpointsTest . java to ensure proper
replaced getChildNodes ( ) . item ( 1 ) with getDocumentElement ( ) for obtaining the propertiesElement to simplify code and improve readability
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
rename ` timeInSec ` and ` prevTimeInSec ` to ` timeMillis ` in ` Isochrone . java ` and
fix a crash when try to bind to an invalid light relay block .
added a new ` Chainer ` class and updated ` CollectionSubject ` to use it to improve the functionality of the ` contains ` method to
refactor Model class to improve code structure to enhance maintainability and readability of the code
increased the recordedTime calculation from a fixed value to a fixed value of 619315200000L to enhance accuracy of recorded time
added a condition to resize the status if the terminal type is Windows to ensure the status display correctly when the terminal type is Windows
updated method for setting repository version state and added a condition to ensure the host version state is only set when it is not already set to INST
refactor code to replace hardcoded paths for Java dependencies with constants to improve maintainability and readability of the codebase
replaced HashSet with LinkedHashSet for artifacts and updated related methods to maintain insertion order to ensure predictable iteration order for artifacts
replace try - catch block with a final modifier for the operation variable to simplify the code and improve readability by reducing unnecessary exception handling
reordered the method call to resolve property configuration in KnativeEnvironment . java to improve code readability and maintainability
fix typo : commitlog _ archiver should be ` ` commitlog _ archiver ' '
added a new test method ` testCloudClientUploads ` in ` TestCloudSolrClientConnections . java ` to ensure that the ` MiniSolr
synchronize access to the allbindings field to ensure thread safety
added methods to clear temporary files and cache in ShadowContext . java and updated file handling methods in RobolectricTestRunner . java to
added LinkedHashSet and TreeMap imports to SecureXStream . java and updated related tests in XStreamPersisterTest . java to enhance order management and ensure
[ drools - 6258 ] allow to pass a kiemodule to the kierepository ( # 380 )
updated block event handling logic to check for Farmland types and moistures to improve robustness by ensuring only relevant farml
added a default implementation of getLocalIp ( ) in FinishedSpan . java to provide a default implementation for the method without requiring an IP
updated JdbcStepExecutionDao to use SerializationUtils for deserializing OBJECT _ VAL and added a test for storing integer values in AbstractStepExecutionDao
update comments in AbstractDictionary , BigramDictionary , HHMMSegmenter , and WordDictionary to improve clarity and consistency to enhance code read
fix build for tensorflow with cpython and mkl - dnn
refactor PluginTab to improve table structure and add a refresh button to enhance user experience by allowing dynamic refreshing of plugins
change log level for reload / save history file from info to warn .
server : fix vmware storagemanager npe when deployvm fail
camel - 16400 : camel - sftp - fix test / java / rmi / sftp / sftpservertestsupport . java
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the test code
replaced direct usage of ` Build . SERIAL ` with a utility method ` GetBuildSerial ( ) ` across multiple classes to improve code
refactor SwapGBuffers class implementation to improve performance and maintainability of the code
fix a bug that could cause a npe in the animator where it could lead to a npe .
added a test for setting smart replies in ShadowRankingTest and updated ShadowRanking to use a Reflector interface to enhance testing capabilities and
[ java ] do n ' t list record segment file in the archive if it ' s empty .
removed the call to ` resourceLoader . getConfigDir ( ) ` in ` CarrotClusteringEngine . java ` to streamline the directory
added null check for testRect in WindowsTreeUI and created a new class bug8004298 to handle potential null pointer exceptions to ensure
update ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the
simonstewart : throw a spotbugs exception instead of npe if a column vector can not be load .
added clientInfo initialization in SurrogateAuthenticationEventListenerTests . java to initialize client information before each test execution
added a boolean variable ` isUserView ` to the ` CardPresenter ` class to manage user view state more effectively
updated references from ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` to ` GraphvizUtility . isGraphvizJavaAvailable `
extracted the creation of histogram into a variable before calling getOrCreateHistogram to improve code readability and maintainability by reducing repetition
added a new module - info . java file for the SQLite connector to define module dependencies and exports for better modularity and encapsulation
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional checks for " web . type " and " api . type " in permissionsManager initialization to simplify the code by eliminating unnecessary
modified DateParser and TestDateParser classes to improve date parsing functionality
added a getDepth method that returns a value of 0.5 f in SpringLoadedState . java to provide a specific depth limit for better resource
replaced manual array copy with Arrays . copyOfRange for improved readability to enhance code maintainability and reduce boilerplate code
[ hotfix ] [ javadoc ] fix typo in executiongraph
removed unused SwipeLayout imports and refactored notification handling in NotificationActivity and NotificationRenderer to streamline the code by eliminating unnecessary
updated exception handling logic in DefaultExceptionConverter and modified test assertions in ExceptionsTest and EndpointTest to improve robustness by handling null values and ensure
fix npe in glowcontainer when lock be null
replaced MethodHandle retrieval with getDeclaredMethod for setting a field in ProxyMaker . java to improve compatibility with reflection for accessing the setter method
refactor query execution to use Integer type casting for bitand calculations to improve type safety and reduce casting errors
replaced the concatenation of " metrics " and " datasets " with a direct concatenation in the BaseEmailContentFormatter to simplify the return statement by
added logic to display or hide the layout provided panel based on the presence of a simple panel to improve user interface by providing a visual representation of
added a null check for the location variable in the dead server check to ensure robustness by preventing potential null pointer exceptions
updated BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check for missing parameters in the DSAPublicKey before generating a usable public key to ensure that a valid key parameters are provided to avoid
refactor MediaTypeRequestMatcher to use a new method for ignoring specific media types to improve code readability and maintainability by encapsulating the logic
updated logging to include task number from taskAttemptId in LlapBaseInputFormat . java to improve clarity of log messages by using task
added properties to the SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding to enhance test flexibility by allowing bean definition
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor package structure for multiple classes to improve organization and clarity to enhance maintainability and readability of the codebase
added a new test method ` issue151 ` to verify that the code does not have BRs or paragraphs in it to ensure that the code
added a new file CompatibilityTest . java to test the compatibility of XML properties to ensure that the Compatibility properties are correctly validated
added new utility classes for push notification and security handling to enhance the application ' s capability to manage push notifications and improve security management in the application
fix the bug that tablerebalancer # getnextsinglesegmentassignment return wrong number of replica
bump version to 2.7 . 0 and tidy release note
log4j2 - 1343 fix line separator in test .
fix ajp / apr / processor . java that throw a sockettimeoutexception if the read timeout occur .
initialized friction , restitution , density , and isSensor variables with default values to zero in FixtureDef . java to ensure
updated method names and parameters to replace ' fetchSaclingFactors ' with ' fetchScalingFactors ' across multiple classes to improve clarity and
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to improve reliability of broadcast idle wait functionality
added unit tests for reading font and link tags in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct
move gangestatisticscomponent . java to src _ work / src _ base and src _ common / gangestatisticscomponent
added permission handling for making phone calls in Launcher . java and a new utility method in Utilities . java to ensure compatibility with devices running Android
updated return value from 32 to 36 in SimulationPanel . java and modified method signatures to include flightData in PlotDialog . java , and
lucene - 7751 : fix bug in geopointdistancequery , geopointinpolygonquery , geopointinpolygon
added a synchronized method ` isDockerAvailable ( ) ` to check if a Docker client is available to provide a way to check if a Docker
added a new constant VPX named " vpx " to the CodecTypes class to provide a standardized representation of the VPX
added coordinatorAddress option to DistBuildFactory and DistBuildRunCommand classes , and modified the getCoordinatorAddress method in AbstractDistBuildExecutor
added a method to match a given path with a specified pattern in FsUtils . java and refactored the Timer class in WrapTimer .
added a condition to check if the value of ` ent . getValue ( ) ` is greater than zero before adding it to ` labelValues `
[ geot - 5396 ] fix bug with ` ` positive - generically true ' ' when result be null
added a test annotation to the TestPerfBenchMarkDriver class to enhance test coverage for performance benchmarking functionality
added materialization time handling in ObjectStore and a corresponding test in TestObjectStore to ensure correct materialization time is set during object creation and
added error handling for missing native dependencies in VoskSTTService to improve robustness by logging warnings and notifying the stt event
remove the ` ` is _ one _ wish ' ' property in the ` ` jmssampler ' ' gui and update the ` ` browse
update break weight logic in GlyphView . java to handle edge cases more explicitly to improve the accuracy of break weight evaluation
refactor sync check handling in RCFile . java to improve buffer management to enhance performance and reduce memory usage during checksum processing
added an @ AwaitsFix annotation for SOLR - 13028 in AutoAddReplicasPlanActionTest . java to indicate a pending
replaced direct calls to ` steps . getSortedByCounts ( ) ` with a new ` unwound ` list for storing step and processor
removed the ` keysToDataFlavorArray ` method and modified the ` setToSortedDataFlavorArray ` implementation in ` DataTransferer
hbase - 25826 testthriftservercmdline should use random port to avoid port conflict
added a condition to check if the input stream is at EOF in RegExpScanner . java to ensure proper handling of unexpected end - of - file
replace direct boolean checks with conditional checks for enabled metrics and timers in a static set to improve performance and ensure correct retrieval of enabled metrics and timers
fix npe in chatroomjabberimpl when nickname be null .
improve error message for missing or empty filename ( fixes # 339 )
refactor refresh token creation logic into a separate method for clarity to improve code readability and maintainability by encapsulating refresh token creation logic
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove unnecessary try - catch in yarnapplicationmasterrunner
added a new method ` nativeGetHardwareBuffer ` to return null in ` ShadowNativeImageReaderSurfaceImage . java ` to implement a
added SSL URI configuration to the BTCChinaExchange to ensure secure access to the BTCChina API for improved security
cpdtask : use the project ' s base directory if it ' s absolute
added OauthController and Oauth2PluginTest classes for OAuth token authorization handling to implement and test the OAuth2 authorization plugin functionality in the application
refactor SemgrexPattern class to improve code readability to enhance maintainability and facilitate future feature additions
[ stream ] add flatmap ( ) and flatcollection ( ) method to streamex
enhanced error logging message in RestCodec and added logging in ExceptionToProducerResponseConverters to improve clarity of error messages and enhance error handling
updated RobolectricTestRunner and RobolectricClassLoader to allow both org . specs2 and org . scala to be run
fix incorrect condition when check if the sdp be not in the transmittable audio encodings list
changed the default value type from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test case for default timestamps
added three new methods to check for station GML IDs and their corresponding counts in the document to enhance test coverage for different station types in the
added a volatile boolean field ` wasInvoked ` and updated related code references in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest `
added a configuration check before applying regex mapping in ColumnarDataSource and modified return statements in RowProcessor and BinaryResponseProcessor to ensure proper handling of
updated the CustomSeekProvider class to improve handling of seek positions and introduced a new test class for validation to enhance accuracy of seek position calculations and
added XLCDCommunicator and XLCDController classes , and updated FirmwareUtils to include it to enhance firmware handling capabilities for
[ drools - 5342 ] fix jaxp validation for kmodule ( # 5343 )
added retry logic and assertion checks for message emptiness in multiple event query classes to ensure that retries are performed only when messages are not empty
replaced manual thread state management with a timeout mechanism for thread joins to improve test reliability by allowing a longer wait time for thread states to
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
updated EnergyCost constant values from 20000 to 10000 to increase resource allocation limits for improved performance
updated method signature and added exception handling in DownloadPlugins . java to improve error management and ensure proper configuration management
deleted the SpringTransactionHooks . java file and updated the target class to AbstractSpringTransactionHooksTest . java to streamline transaction handling and
refactor AbstractClassAssert for improved clarity and structure to enhance maintainability and readability of the code
added a new file GetUninitializedStringValueTarg . java to demonstrate uninitialized string values to provide a test for verifying
added support for a provided deps query in AndroidLibraryDescription and updated GraphEnhancementQueryEnvironment to handle these patterns to enhance dependency resolution and
add a new feature flag for enabling keyboard transition synchronization to improve user experience during app transitions
replaced the retrieval of system anomaly message with a single static boolean flag for bugreport to improve performance by avoiding unnecessary system anomaly
added a new constant CINEPACK to FormatConfiguration and updated LibMediaInfoParser to utilize it to improve media format handling for Cine
added camera bobbing functionality and adjusted animation offsets in the Player class to enhance player control by allowing customizable hand movement effects
updated the data description mapping from ` b . data . describe ( ) ` to ` b . digest . toString ( ) ` in ` G
deleted the HSQLDBServerFilesFilter class and updated file listing logic to use FilenameFilter directly to streamline code by eliminating unnecessary
added a condition to check if restoreFromSeed and restoreFromKey is null to ensure that restoration occurs only when both seed and key are
updated the method used to retrieve the latest API version from ` APIUtils . getApiDataVideoVersion ( ) ` to ` APIUtils . getApi
added a method to check if a method invocation already exists based on the fully qualified class names to ensure that method invocations are returned only if the
replaced hardcoded array size with a static final constant for improved maintainability to enhance code readability and maintainability by avoiding magic
bugfix # 207372 - provide clear warning message if profiling mode be not configure properly .
added null checks for value in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskLastN , and Generic
bewareblockstoretest : use ` temporaryfolder ` rule instead of ` file . createtempfile `
added isitemstackdamageable ( ) method , and gethassubtypes ( ) method to provide access to damageable
fix mc - 167447 renderstate use line _ width instead of alpha .
simonstewart : set the ` ` browser . startup . page ' ' preference to ` ` 0 ' ' in firefoxdriver
added conditions to handle HTTP connection upgrade and connection status codes in Http1xClientConnection . java to ensure proper handling of HTTP upgrade requests and
rename the task from " compile " to " process - classes " to clarify the task ' s purpose in processing classes
replaced the shutdown method with a method that closes idle connections in HTTPHC4Impl . java to improve resource management by ensuring idle connections are
added a check for aggregate function suffixes before creating new metrics in AmbariMetaInfo . java to ensure metrics are only generated if they do
added a method to set fullscreen parameters in TaskOverlayFactory and updated corner radius retrieval in TaskView to enhance fullscreen functionality by allowing dynamic
added a new Java file to calculate the number of elements in a given array to provide a solution for counting the number of elements in a specified
initialize the SocketChannel variable to null to prevent potential NullPointerExceptions when the channel is not initialized
updated MutisignOperationerGodicTest . java file to enhance test coverage for improved reliability
added error handling in ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` in ` StaxEventItemReader `
simplified import statements in ShadowTextView . java and improved null handling in TestAttributeSet . java to enhance code readability and
updated JSON import statements in ClaimConversionServiceTests and ClaimTypeConverterTests to use the correct package path to ensure compatibility with the latest package structure
updated OS detection from " Linux " to " AIX " and added support for " Linux - s390x - 64 " in the
cs - 15936 : use router control ip instead of private ip for vr
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate synchronous execution of RunnableWith
int - 1188 remove unused test class presencemessagecomboboxtests
updated calculations to use Math . round for better error handling in PortraitPagedViewHandler . java to ensure proper handling of integer values
[ hotfix ] fix checkstyle violation in testclusterdumper . java
updated the return statement in ClassSize . align for better alignment and added additional checks for rowCache to ensure proper alignment of ClassSize with proper
camel - 16400 : camel - core - add type converter to the list of service that can be add to the registry so we can
added support for conditional tasks in SparkCrossProductCheck to enhance task management in the cross - product check process
updated filter actions for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED in Launcher
updated the conditional logic in ` LoginInfoEndpoint ` to include a check for ` jsonResponse ` to ensure that the login info prompt is present when
hbase - 25825 add a method to descriptivestring ( ) to display the time relate to the region .
renamed the ` message ` field to ` msg ` and ` result ` in ` HuobiAccountInfo ` , and updated related methods
add period to reserve word for mariadb ( fixes core - 3437 )
[ beam - 8470 ] update the description of portable worker ' s environment to reflect the official release of java 8 or 11
add changelog about launcher shortcut for android 7.1
updated access level of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil . java to allow access to NUM _ MILLI
removed a debug print statement that outputs the URI to clean up the code and reduce unnecessary console output
[ java ] check if aeron client must use the conductor agent invoker before invoke it .
added validation logic for implicit lambda parameters and updated parameter handling in the code to ensure proper validation of implicit parameters and suppress warnings for generic types
refactor menu item visibility and hiding methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating
replaced the list of reserved constants with BTC _ deposit in BTCETransHistoryResult . java and updated the corresponding test to
replace List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and ensure uniqueness of elements
mark the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
fix ( iotdb - server ) : fix last query with unseq time larger than sequence time
removed an unnecessary line break in the HttpResponse . java file to ensure consistent formatting of request string output
set system property to " org . slf4j . simpleLogger . simpleLogger . log . org . apache . http . wire "
added code to set the title bar ' s safe area to ensure the title bar displays a safe area for user interface accessibility
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure correct retrieval of TimeSeriesChunkMetaData from the list
added a SQL command for renaming columns in the AlterTest . java file to ensure the SQL syntax is correctly parsed and deparsed for the
change method visibility of copyState from package - private to public to allow access to the method from other packages
fixed - executorservice . executecallable ( ) method should return a completablefuture
allow file name to end with a . part suffix to be use in the filesystemsplit
[ hotfix ] [ core ] fix checkstyle violation in orc
rearranged null check for valueArg and nameArg in CompareFunctionsProcessor . java to improve code readability and maintainability
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task
removed unnecessary ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes
added checks for invalidated states in AbsSwipeUpHandler and null check for gestures in TaskAnimationManager to improve stability by prevent
added getLockTimestamp ( ) and setLockTimestamp ( ) methods to AppPreferences and PreferenceManager , and updated references in PassCodeManager and Draw
updated artist retrieval logic in MediaInfoParser . java to ensure a default artist is used when no ARTISTS is found to improve robust
add null check to avoid npe
nifi - 12661 : fix npe in splittext when input be empty .
added support for Windows key store in HttpsConnectorFactory to enable proper handling of Windows - specific key store configurations
increase default _ check _ timeout in resttemplatesendertest to 1 second
added a condition to check for the result code of FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure proper handling of remote
added animation capabilities to the Slider class by introducing animateFromValue , animateDuration , and animateTime variables to enhance user experience by allowing
updated assertions in LineSeparatorProcessorTest to compare ` lineSeparator ` instead of ` eol ` to ensure consistency in line separator handling across tests
change maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to optimize memory usage for texture packing
added a test for negated Ternary expressions in UnnecessaryParenthesesTest . java and updated the condition in UnwrapParentheses . java
camel - 16400 fixed the npe issue of hazelcastqueueconsumer . poll ( )
added a new ` TextFeedbackTest ` class and modified ` TestRunner ` to include functionality for testing normal operations to enhance test coverage and ensure
replace Math . round with Float . compare for score comparison to improve precision in score comparison logic
updated DENSITY _ 560 and DENSITY _ 4K cases in AddAndScaleMultiImage . java and modified resource saving in
added a new method ` arrayClassElementOffset ( ) ` in ` HotSpotReplacementsUtil ` and modified ` ArrayCopySnippets `
added logic to skip processing when the first stage is empty in DefaultLogPublisher . java to improve performance by avoiding unnecessary processing of empty stage
added support for remote SCM systems in Configuration and RuntimeEnvironment classes to enable configurable behavior for remote SCM operations
[ mielecloud ] fix crash when appliance be stop due to end state .
replaced usage of ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events to standardize event logging across the application and
updated logger variable name from ` log ` to ` LOG ` for consistency to improve code readability and maintainability
added unit tests for ProjectGenerationEvent handling in EventSerializationTest . java to ensure correct serialization and deserialization of project generation events
ggb - 1745 preview point do n ' t hide the input point if it ' s a function function
refactor JavaCompiler to improve code structure to enhance maintainability and readability of the code
add error log if there be a non - positive amount of time left for the random read to ensure that the test execution time remains within the
updated multiple Java files related to DumpHeap , TimSortStackSize2 , TestPollingInterval , BasicLauncherTest , BasicJMapTest ,
added " -- gc - sections " and " nocopyreloc " flags to the Ldflags list in NdkCxxPlatform
updated the fallback URI handling in SpringCloudCircuitBreakerFilterFactory and added a test for variable filtering in SpringCloudCircuitBreakerTestConfig to improve
simonstewart : move all the test to a separate directory so we can reuse it .
added checks for ` uri ` and ` localName ` in ` ReadOnlySharedStringsTable . java ` to ensure correct handling of XML namespaces and avoid
added a new method ` getAccountNet ` to ` HttpMethed ` for fetching account networks with a given node and query address to enhance
added a check for non - positive text width in SwingUtilities2 and modified GTKLookAndFeel initialization in Test6635110
refactor FlatteningIterator to simplify next iteration logic and improve clarity to enhance code readability and maintainability by simplifying the flattening
replace HTML replacement for title and body in NotificationUtils . java to ensure proper HTML formatting by removing HTML tags
doc : generate sample code in the java microgenerator ( # 438 )
update instructorfeedbackeditQuestionsuitest to re - load any existing question
hssfsheet . getfirstrownum ( ) and hssfsheet . getlastrownum ( ) return 0 instead of -
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
[ java ] : make sure we send an init event rather than notify the session open .
implemented hashCode ( ) method in AbstractParquetMapInspector class and improved null checks for keyInspector and valueInspector to enhance hash code generation
added a check for remotelyClosed in HTTP3StreamConnection to ensure proper session flushing and release buffer when remotely closed
changed the SplitReader interface to extend AutoCloseable and removed the close method from the SplitReader interface to allow for automatic closure of source split
removed the deepCopy method from GsonBuilder to streamline the code by eliminating unnecessary properties
sulong : store miss source map in llvarscanner . notfound
refactor file opening logic to directly process uploads in a loop instead of an array to simplify asynchronous processing and improve code readability
updated the dispatchStatusString method call in GrblController . java to ensure consistency in code formatting
updated the ClassLoader usage in MockFactory and added a new SearchingClassLoader class to enhance class loading flexibility for mocking classes
* add test to reproduce bug : jme3test . scene . simpleupdate ( ) do n ' t work with ` `
added support for LEFT _ SEMI _ JOIN in the ConstantPropagateProcFactory logic to enhance the handling of LEFT _ SEMI _ JOIN
refactor response completion and response termination logic in HttpReceiver and HttpSender classes to improve clarity and correctness in handling response and request completion
replace arraylengthoffset with arrayoopdesclengthoffset in hotspot implementation
http : / / issues . apache . org / jira / browse / amq - 4358 - use roundrobindispatch and
updated multiple Java files related to BadKdc to improve code consistency and maintainability across the codebase
added a check for ` isRunning ( ) ` before invoking ` appCtx . stop ( ) ` to ensure that the application context is only stopped
changed the return type of the drawItem method from void to GlyphLayout to enable method chaining for better usability
replaced direct JSON serialization and deserialization with MetricsPublisher in SpringmvcClient . java and updated exception handling in CodeFirstSpringmvc
updated variable names and logic in AccountAgeWitnessService for consistency to enhance code readability and maintainability by standardizing variable naming conventions
refactor code formatting and improve readability in StructureHeader . java and StructureReader . java to enhance code readability and maintainability
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and updated related tests to support resource URL provider exclusion to enhance the interceptor
added dexreturninliner . v ( ) . transform ( jbody ) to fix problem with return statement
add additional field to the enrichedruledto and ruleresource to provide more information about the rule
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated related tests in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - planner - blink ] remove sqldialect from executionentry
refactor ` AndroidBinaryGraphEnhancer ` and ` AndroidPackageableCollection ` to use a ` Supplier < ImmutableSet < String > >
pmd : add test for bug 3524607 ( annotated package )
added configuration for minimum cross compaction unsequence file level in IoTDBDescriptor . java to allow configuration of the minimum unsequence file level for compaction
[ hotfix ] move active resource manager class to new package
changed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to disable the test to
updated import statements and modified URI creation in ZipResource . java , and added a new test class for parsing feature files with spaces to improve URI
updated ExpandableUploadListAdapter . java for consistency and improved thumbnail handling in uploads to enhance the user experience by ensuring proper thumbnail generation and
updated RobolectricTestRunner to traverse all parent classes for configuration annotations and added corresponding test cases to ensure configuration merging functionality works correctly for
filter block and item registrations by their registry name before creating new lists to ensure that only relevant items are processed based on their registry names
refactor methods in AbstractDataChangedListener to extend AbstractDataChangedListener and update import statements in WebsocketCollector and WebsocketDataChangedListener
updated JSONPojoConvertor to handle enum types for number types and added color handling in tests to enhance functionality to support enum values and improve
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper ` to inform users that the ` -- view `
fix read gwt rpc method payload to be byte [ ] rather than string .
added orientation correction functionality to GyroControl to handle device orientation changes to improve the responsiveness of the GyroControl by properly
update BIOME _ LIST _ SIZE to use BIOME _ LIST _ SIZE from the biomeGenBase array length to ensure correct
replaced instances of ` println ` with ` print ` for function calls in ` GetInterfaceTest . java ` to improve clarity and consistency
removed duplicate declaration of the Environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized way to collect
added a preload parameter to MMapDirectoryFactory to enable customization of map directory preloading behavior
added custom metrics for enabled components in BukkitPlatform . java to enhance monitoring capabilities based on the enabled settings
updated QuickConnectREST . java file to improve functionality and maintainability of the code
added aspect ratio and default card image in CardPresenter . java to enhance the visual appearance of the card in the application
fix ( dspace - app - xmlui ) : do n ' t count login method if it be implicit .
update the clone method to handle empty arrays for longValues , doubleValues , decimalValues , byteStarts , and byteLengths in VectorHashKeyWrapper
added a new test method ` testSystemNanoTimeJit ` to handle the " testSystemNanoTimeJit " case in the Time
added trimming of lines in MultiPartFilter and printed the parameter in MultipartFilterTest to enhance robustness by preventing null pointer exceptions
fire livingexperiencedropevent rather than rely on entitylivingbase . experiencedrop .
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler for clarity and consistency to improve user feedback and maintainability by providing clear
[ sql - planner ] remove unsupportedoperatorsvisitor class and use planner . validate ( ) instead
added support for RdepsFunction in GraphEnhancementQueryEnvironment and updated related tests to enhance dependency management and ensure proper handling of target graph
refactor Character class to improve code readability to enhance maintainability and facilitate future feature additions
added logic to determine if a rocket is an entire rocket and updated selectionOption selection logic accordingly to ensure that the selection option is only
replaced ` Arrays . toString ( bytes ) ` with direct usage of ` assertEquals ( bytes , rs . getBytes ( 4 ) ) `
added boundary handling for offline and realtime tables in BaseBrokerRequestHandler . java and refactored related methods in PinotQuery . java to
simplify the logic for add socket reference to the poller in the apr processor .
updated regex pattern and modified album title extraction logic in EightmusesRipper . java to improve accuracy of album title processing and enhance
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to standardize method
added a condition to check if the profile is a phone and not in landscape mode to ensure proper layout behavior for phone devices in landscape
updated query assertions in PartTreeJpaQueryIntegrationTests to use unwrapping QueryImpl to ensure compatibility with the current Hibernate API practices
refactor code to use a new method ` readMatchingLines ` for reading lines from a file path to enhance security by ensuring privileged actions
removed dynamic method invocation for ` getResultStream ` in ` JpaQueryExecution ` to simplify the query execution process by eliminating unnecessary dynamic
added null check for entity in PhysicsProcess . java to prevent potential NullPointerExceptions when processing entities
add test to verify that clear a map when a value be indexed
add a new operation set for jitsi - meeting sip room . patch by dmitry mccandless , review by
update color calculation and html message formatting in Utils . java and UtilsTest . java to improve color representation and enhance test output clarity
fix : disable menu item when ` ` name ' ' be empty
updated the scratch path format and added recursive path steps in Aapt2Link . java to improve path accuracy and facilitate recursive building
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
ggb - 220 do n ' t clear selection when user click on a geos
[ hotfix ] [ yaml ] handle emptystackexception in ysldvalidator
added isCanceled ( ) method to BehaviorCall , Calls , ExecutorCallAdapterFactory , and OkHttpCall classes to provide consistent behavior for cancellation
refactor multiple classes to implement a default implementation of the ` isAnnotationPresent ` method across various classes to improve code consistency and reduce boilerplate code
added a default implementation for the removeAllWidgets method in UILayout . java to ensure that the method is implemented as a default method to prevent
[ hotfix ] [ test ] minor cleanup in yarnutilstest and yarnsessionfifoitcase
update return statement to use the maximum of getOutputSizeForUpdate instead of a direct call to getOutputSizeForFinal to ensure that the final output size
added video transcoding logic and logging for Fire TV stick usage in PlaybackController . java to ensure proper handling of high - res
[ spark dataset ] show dataset in mock mode instead of use appliedptransform
updated import statements and modified listener management in GpsLoggingService . java to improve listener management and ensure consistent preference handling based on user preferences
change parameter type of ` putString ` from ` boolean [ ] ` to ` byte [ ] fullwidths ` in ` vt320 . java `
added import for BaseItemDragListener and modified item assignment logic in FolderIcon . java to enable handling of BaseItemDragListener instances during drag
added ` createEmptyArtifact ` methods to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` TagConnector
removed unnecessary line breaks in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the check for after Aug1 in the video link condition to simplify the condition for loading video links
camel - 17028 : sftpoperations should compact the ' to ' path before copy it to the ' to ' variable
updated mock assertion to include a timeout of 20 seconds to improve reliability of mock endpoint verification in tests
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by using a
added support for lARGE _ frustum planies in BlockDoublePlant . java and BlockType . java to enhance double Plant functionality
replaced ` tree . focusable ( false ) ` with ` tree . requestFocusEnabled ( false ) ` in ` TranscodingTab .
server : do n ' t swallow exception , throw them instead
updated DB2 test system imports and modified condition checks in DockerDatabaseWrapper to streamline license handling and improve code clarity
modified the ` units ` field to be non - final and added a setter method for unit management in ` DoubleModel ` , along with updating
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC and ZMW
added sampling configuration to the PBR lighting class to ensure that the PBR lighting process uses the correct number of sampling settings
removed redundant " job . step " prefix from test tasklets in StepWithSimpleTaskJobParserTests to streamline test code by elimin
changed variable declarations from non - final to final for better immutability in CentralAuthenticationServiceImplTests . java to ensure immutability
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 535 . fix
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` and modified the handling of trigger changes
[ drools - 1560 ] fix bigdecimal coercion in executable model
added a link to the " org . eclipse . jdt . " package in WebAppContext . java to hide the jdt used by
modified return value of useAuthCache method from super . useAuthCache ( ) to always return false to simplify logic by removing unnecessary cache check
update namespace assignment to capitalize the first segment to ensure consistent casing of the namespace for better readability
camel - 16400 : camel - direct - do not throw directconsumernotavailableexception if no consumer available
added null check for zookeeper before setting it to prevent potential NullPointerException when zookeeper is not initialized
update progress bar step message in Loader . java to ensure consistency in progress reporting
added a new method ` runOnUiHelperThread ` to execute a Runnable on the UI helper thread to improve the responsiveness of the
added a method to update the last remote stream ID in HTTP2Session . java to ensure the session ' s last remote stream ID reflects
set text anti - aliasing on the graphics2d instance in both EditorHeader . java and EditorToolbar . java to improve text rendering quality
[ java ] : remove unnecessary nextoffsetposition from driver publication .
refactor : remove static import of enums in ctannotationimpl . java ( # 1181 )
refactor ExoPlayer class to improve code readability to enhance maintainability and ease future updates
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to improve performance by using a rectangle
added a new method ` newPrintStream ` to handle specific encoding for output streams to improve flexibility in setting output streams based on system encoding
updated vibration duration from 1 to 25 milliseconds in TouchableMovementMethod . java to improve user experience by allowing more time for vibration
fix ( flybush ) : fix compile error
refactor WebSocketClient constructor parameters for consistency and clarity to improve code readability and maintainability
danielwagnerhall : fix a bug in the i18ntest .
[ gr - 14936 ] bytecodeparser : do n ' t throw runtime error when load constant fails .
[ hotfix ] [ test ] add restoreauthsystemstate ( ) to xmlworkflowserviceit
added a LowercaseComparator for string comparison in CoNLLUFeatures . java to ensure case - insensitive comparison of features by using a lowercase
replaced multiple individual parsing methods with a single parse method for better clarity and performance to improve code readability and maintainability by reducing
danielwagnerhall : fixing issue with toggle option in multi - selection .
added validation for the length of keys in HighestKvno . java to ensure that the count is of a maximum of 9 characters to
added error handling for attribute retrieval in HDF5BatchReader to ensure only Huge objects BTrees with 1 record are supported to improve robustness
return writeresult instead of pdone . in ( ) for consistency between bigqueryio and bigqueryio
updated the XML root element name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added implicit parameters in ProcessGroupResource
added a new file TestMultiANewArray . java for testing multi - dimensional arrays in Java to ensure correct handling of multi - dimensional arrays
[ hotfix ] [ config ] remove unused secondary . storage . vm configuration
refactor block ID handling in SyncBlockChainMsgHandler . java to improve clarity and conditionally add IDs based on the index to ensure
set the theme of the PreviewViewer to the preference ' s theme to ensure the user interface reflects the current user ' s theme for better
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added idle timeout functionality and a test for HTTP client idle time in ` ConnectorTimeoutTest . java ` and updated ` ServerConnectorTimeoutTest .
add miss dcoref . dictlist , dcoref . dictpmi and dcoref . signatures to dictionary . properties ( #
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) `
removed unnecessary type casting in JpaPagingItemReader and updated test assertions in JobLaunchingGatewayParserTests to improve code readability and
change log level from warn to debug in DistributedQueue . java to reduce log verbosity for better troubleshooting
refactor ColorExtractionService to use a new method for extracting color palettes from the wallpaper to improve code readability and maintainability
added methods to set default data table entry and cell transformers in TypeRegistry to enhance flexibility in handling data table transformations
removed assertion for newAvailableShared and initShared in AtomicRemainder . java to streamline code by eliminating unnecessary assertion
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to
removed unnecessary whitespace in the condition check for USER _ PROPERTY to improve code readability and maintain consistency
added contact form route and created a new Contact class to handle posting and fetching contact data to enhance user experience by providing a structured way to
guacamole - 941 : make simpleuser permission object - friendly .
update RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release version
[ drools - 1361 ] fix checkstyle violation in traitfactory
updated methods to find metrics by name or alias like aliases instead of just name for better clarity to enhance code readability and maintainability by
replaced manual closing of per - document consumers with IOUtils . closeSafely to ensure proper resource management and prevent potential memory leaks
javadoc fix - add miss license header .
added an OnClickListener to the overflowButton to show the menu when clicked to improve user interaction by allowing menu interactions with the overflow button
updated error messages in Subject , OptionalSubject , and related tests to clarify null and non - null references to improve clarity and accuracy
ggb - 2321 fix line height of help button if heuristic flag be true .
move protobufferutilitiestest to core . util and move it to core . util package
fix splitpane # setdividerposition not work on android 4 . x
add support for copy cross reference file in aux file ( # 1748 )
mondrian : use serializable instead of object for the metadata map in the resource pool
rename variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the variable
show the update event when update the metacontact avatar .
updated import statements for Command class in ShellCommand and ShellFactoryImpl to align with the new package structure for better organization
added a test method to clean up the audit log table based on position to ensure that the audit log table is cleaned up correctly based on the
changed the type of the inject method in ComponentContext to Object and added a suppress warnings annotation to improve type safety and suppress unchecked warnings during bean
added regex patterns for parsing comments and updated related logic in ACLFileParser . java and ACLFileParserTest . java to improve comment handling and
updated the ` isReadable ` method in ` MapRDBFormatMatcher ` to use ` DrillTable ` instead of ` FormatSelection ` to
modified StarTreeImpl and TestStarTreeNodeImpl to support customizable ancestor dimension values to enhance flexibility in handling dimension names during node splitting
added user unlock check before dumping plugin manager in TouchInteractionService . java and refactored closeOpenViews method in Launcher . java
change condition from checking widthStr to checking positionStr to ensure positionStr is not null before proceeding with further operations
refactor PKIXValidator to improve certificate validation logic to enhance clarity and maintainability of the validation process
[ flink - 26011 ] [ hadoop - sink ] [ test ] add archunit test for the test code
updated package names for AlibabaDubboIntegrationBootstrap , AlibabaDubboPluginTest , ApacheDubbo
cloudstack - 4669 : remove skipprojectnetworks from listnetworks api call
replaced ` remove ` method with ` get ` for ` typeFieldName ` in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to
add a flag to store undo info and store it for property .
replace direct access to the ` sun . java2d . xrgradcache ` system property with a privileged action to enhance security by ensuring
( chore ) camel - core : replace assert with awaitility in streamclosttest
modified methods in DocConsumer , DocFieldProcessor , DocFieldProcessorPerField , and TermVectorsConsumer to handle null cases to improve stability
added imports and modified the handling of deprecated properties in ConfigurationMetadataGenerator . java and introduced nested configuration properties in AbstractJpaProperties . java to
refactor ` capacity ` and ` mask ` variables to use lengths of ` values ` in ` BiInt2ObjectMap ` and ` Int
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified file renaming logic in Hive . java to
add some debug code to the parallelnatiolender so that it do n ' t swallow exception .
added a null check for the context in SchemeAndroidIDE . java to avoid potential NullPointerExceptions during instantiation
ensure native image classloaders be set to the application classloader in the native image build process
modified the return type of the modifyGrantedAuthorities method and updated GrantedAuthority array handling in SwitchUserProcessingFilter to allow modification of author
refactor ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and create new classes ` RawJaxrsIntegrationTest `
fix # 1744 : do n ' t attempt to set query timeout in jdk 1.6
added DataProviders for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest . java to facilitate testing of
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter .
added support for MariaDB sequences in the MariaDBDatabase and updated CreateSequenceGenerator to check for MariaDB instances to enhance compatibility
updated error messages in ` MappedResizeableBuffer ` , ` UnsafeBuffer ` , ` CompilerUtil ` , and ` Int2ObjectCacheTest
replaced BrokerResponse import with TableDataManagerProvider and added server metrics initialization in multiple test files to utilize the offline table data manager functionality
enable MFL and MFL extension by introducing a new boolean property check to enhance security by allowing MFL extensions to be
updated ObjectIterator and ObjectHashSetIterator references from ObjectIterator < T > to ObjectHashSetIterator to simplify iterator usage and improve code clarity
update character count from 22 to 23 in Compose . java and TweetFragment . java to adjust character remaining text based on URI length to
added support for set a data point ttl ( # 1749 )
updated ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter for better control over Xcode prompting to
added a method to retrieve the terrain at a specific cell coordinate in the TerrainGrid class to facilitate access to terrain
added default value printing in ` ppp Pretty . java ` and created a new file ` T6665791 . java ` with Java
added error logging for missing quest encryption keys JSON in ResourceLoader . java to improve robustness by logging errors when the quest keys file
modify return statement to include a check for push status to ensure only non - push requests are accepted when not in push mode
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign operation for blockCapsule in BlockUtil . java to streamline the signing process by eliminating unnecessary signing
updated return statement in FileSystemView . java to handle empty root cases and added security checks in Win32ShellFolder2 . java to improve robust
updated methods and variable names for copying rows in the table to improve clarity and functionality to enhance code readability and maintainability by using more
refactor ListFragment to utilize a SparseArray for undo notes management to improve organization and maintainability of note handling in the user interface
improve handling of ` ` upload question ' ' and ` ` upload question comment ' ' feedback response
added null check for data and threw an exception for non - null values in bug8024061 . java to ensure proper error handling for non
no effective change - code cleanup - remove unused pstmtdelegate
replaced Padding class with Rect for default padding retrieval in AppWidgetResizeFrame . java and updated padding retrieval in Launcher . java to
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code readability and enhance argument handling for ConsString
updated ClassGraph and ScanResult classes to improve code structure to enhance maintainability and readability of the codebase
renamed the CountDownLatch variable from ' latch ' to ' goAwayLatch ' and updated its usage in the IdleTimeoutTest to
replaced calls to ` assertThat ( ) . getMessage ( ) ` with ` assertThat ( ) . hasMessageThat ( ) ` to
replaced the use of ` ThreadLocal ` with ` null ` for the ` currentBook ` variable in the ` Workbook ` class to
added support check for method invocation in contactsecurityvoter to ensure that the vote method only applies to supported object types
removed unused imports from DataLoader . java to clean up the code and improve readability
added atomic integer rowsAffected to postUpdateLog method across multiple command step classes to provide more informative log messages based on the number of rows
ggb - 2696 fix for left and top margin in suggestion panel ( and remove unused import )
set foregroundFPS and backgroundFPS to 60 values to standardize frame rates for better visual consistency
added ObjectReleaseTracker assertions in HdfsTransactionLog . java and TransactionLog . java to track and release references to ensure proper resource management and
replaced the use of DefaultWebSocketFrame with a ChannelFutureListener to ensure the WebSocket channel is closed when closing the connection
updated tests to replace ` TestApplicationEventListener ` with ` TestApplicationEventListener1 ` and added a new ` OnStateMachineError ` interceptor to
replaced the finishing of SettingsActivity with a new setListBackground method and refactored list background setting to improve code readability and
updated the import statement for StringUtils from Apache Commons Lang to OpenHAB ' s StringUtils and added a null check for the line variable to
added a method to accumulate a WeightedAvgAccum based on a long value and integer weight to enhance the accumulator ' s functionality by allowing
hbase - 25813 fix javadoc warning in put and replicationsink
replace VALID _ CACHE _ SET with REGEXP _ CACHE to store compiled regular expressions to improve performance by caching compiled regular expressions more efficiently
added a reset method to the GameThread class to ensure the GameThread instance is reset to avoid potential memory leaks
added a login method in DigestAuthenticator to check the realm against the login service to ensure that the login method operates correctly on the correct realm
refactor parameter handling in SavedRequestAwareWrapper to improve efficiency and readability to enhance efficiency and maintainability of parameter management in the application
updated InfoStatus messages to use variable ` lc ` instead of ` hiddenSingleton ` and improved ` LoggerContext ` toString ( ) ` to
replaced waitPoint . countdown ( ) with this . wakeup ( ) in CommitLog . java and HAService . java to simplify
added a check to prevent loading of images on Android O and implemented user auto - complete adapter in the PhotoViewerActivity to ensure that images are
updated schema info level from minimum to basic in SchemaCrawlerOptions to improve schema information accuracy in tests
use bufferedoutputstream instead of zipoutputstream to reduce memory usage
refactor TestPayloads . java to utilize Charset for generating fixed byte length Unicode strings to improve character encoding handling and simplify byte conversion logic
fix entity not be add to the world if it be n ' t a child of the world ( mc - 103516 ) ( #
added " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " to the list to support new container adapters in the
[ drools - 6251 ] fix the issue that protobufinputmarshaller do not correctly compare the result of accumulate ( ) and equal (
refactor comparison logic in NowSearchTerm and SearchTermBuilder for improved readability to enhance maintainability and clarity of comparison logic
pdfbox - 4892 : make class package protect , a suggest by valerybokov
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers to improve URL resolution flexibility and maintainability
added a new method ` newResponseBuilder ` to encapsulate response building logic to improve code readability and maintainability by encapsulating response creation
added notification for command start in AsyncBackgroundTaskManagerTest to ensure that the command starts successfully in the background task manager
refactor ` PreviewItemManager ` to remove the ` computePreviewDrawingParams ` method and introduce a null check for ` mReferenceDrawable
refactor tokenizer and character filter factory handling in LukeRequestHandler . java to improve code clarity and maintainability by using CharFilterFactory
replaced null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot arguments to enhance code readability and enforce null
added verbosity control to the createSubContext method in JavacStep . java and modified related error handling in JavacStep . java
added a condition to convert the schema to uppercase if the database type is Oracle to ensure consistent schema handling for Oracle databases
log4j2 - 1343 add logmanager . getcontext ( false ) . getsimplclassname ( ) to test description
added a new file TestShrinkToOneRegion . java that performs a system garbage collection to facilitate testing of the shrink - to -
replaced string splitting with Splitter for better readability in SandboxTestRunner . java to improve code maintainability and leverage built -
replaced usage of ` utf8ToString ( ) ` with direct usage of ` context ` in ` AnalyzingInfixSuggester
updated the handling of attachments in PushsaferMessageBuilder to correctly format and append " image / " to the encoded string to ensure proper encoding
do n ' t write provenance hash to stdout in stripprovenance command
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
removed the ' final ' modifier from the FORMATTER function in multiple field test classes to simplify the code for consistency and readability
updated UDFRound . java to replace Apache Commons Logging with Java ' s BigDecimal and RoundingMode for improved precision to enhance precision in rounding
refactor code to use configparser . valueasororElse for good readability
changed access modifiers of classes Test1 and Test2 from package - private to public to allow access to these classes from other packages
updated permission messages from " no _ permission _ event " to " deny . no _ enter " and modified plot handling logic to improve clarity
hhh - 14709 fix optimization for conditioninconstantset . addadditional ( )
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in
added box and circle creation with random transformations in Box2DCharacterControllerTest . java and reset friction in PlayerControllerTest . java
added tests for ` FLIGHT _ RECORDER _ OPTIONS ` and adjusted memory size limits in ` TestBadOptionValues . java ` to
updated output assertions in ObjectAlignment . java and Options . java to ensure correct validation of output values
added methods to retrieve and set the target package name from the Android manifest to enhance flexibility in instrumentation tests by allowing users to specify the target
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
fix unnecessary arraylist creation for acceptable throwaway item setting
replaced generic type declarations with direct type assignments for boolean , byte , short , and int in Test6987555 . java to simplify
reformatted code for improved readability and consistency to enhance maintainability and adhere to coding standards
[ java ] add javadoc to inflection to clarify behavior .
added getter and setter for locale in EvaluationContext . java to allow configuration of the locale used in the evaluation context
removed unused import of Plugin in SummaryPrinter . java to streamline code by eliminating unnecessary dependencies
added a break statement in the DrawerActivity . java file to prevent fall - through behavior in a switch - case statement
updated import statements and improved query object logging in MongoQueryCreator . java to enhance code readability and maintainability by using wildcard imports
added xwork . loggerfactory system property to allow customization of loggerfactory
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest to include " OnTargetNode " and " OnInputNode
add miss @ conditionalonmissingbean name to healthindicator
added concurrent map handling in LocalPStoreProvider to improve concurrency management when writing is disabled
changed the access modifier of the method ` deleteFiles ` from public to private to restrict access to the method for better encapsulation
rename ` Provider ` class to ` ServiceProvider ` and update related methods for better clarity to improve code readability and maintainability by using
truffle / javainterop : do n ' t throw runtimeexception when field access fails .
added checks for toolchains creation in AbstractCell and related classes to ensure consistent handling of changes in Android SDK locations
do n ' t remove the context if it have be add to the engine before remove it .
updated string comparison from ` indexOf ` to ` contains ` for error handling in ` AbstractCheckDescriptor . java ` to improve code readability and
updated PrebuiltCxxLibrary to set exported linker flags to improve clarity and consistency in linker flag management
updated the method name from ` onConfigurationChangedInternal ( ) ` to ` updateRecentsRotation ( ) ` in ` AbsSwipeUp
updated type parameters in multiple classes to use generics for better type safety to enhance code clarity and reduce unchecked warnings
updated the way the new block is passed by using ` getHashAsString ( ) ` from ` newBlock . getHeader ( ) . getHashAsString ( )
[ hotfix ] [ runtime ] use getstorepathphysic instead of getstorepathcommitlog in defaultmessagestore
close jvm metric in order to avoid memory leak
add extra stats to get message count when they ' re not found or miss
added @ Deprecated annotations to multiple query classes to indicate that certain classes are outdated and should not be used
added methods to check for the presence of a system UI object and execute keyboard input for the keyguard status view to improve test reliability by
changed ` logger ` from static to instance level and made ` principals ` and ` sessionIds ` variables final to ensure immutability of these
added a check for empty InMemoryCookieStore to return false when the cookie jar is empty to ensure that the method returns false for empty cookies
[ bonsai ] fix clear storage when rollback fails
changed method parameters from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to improve flexibility
[ java ] unignoring a couple of test in firefox .
added a finally block to ensure the destination connection returns to a temporary connection to improve resource management and handle potential IOExceptions
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references across multiple files to
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing shared resources
replaced the method ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced a new method ` wrapWith
added a new method ` updateFirstLineShowing ( ) ` to update the first line displayed in the TextArea to ensure the first line
added Hadoop Path imports and configurations for local , system , and staging directories in TestInformationSchemaWithPrivilege . java to ensure proper directory structure is
refactor graphics configuration retrieval logic to use a single if statement for clarity to improve readability and maintainability of the code
tika - 3497 -- fix oom in legacy mode for tika server
( chore ) camel - pipeline : remove deprecate doprocess method
updated PrintTagList . java to handle command - line arguments for model file and improve tag management to enhance usability by allowing users to specify
fix ( sql ) : fix alias issue 526 ( # 526 )
resolve http : / / issues . apache . org / activemq / browse / amq - 2188 - fix test
simplify startfromtruncatedrecordinglogtest by not wait for cluster ready
updated the arc calculation in LineBorder . java to use a rounded rectangle instead of an integer to improve rectangle positioning for better visual consistency
added a check for empty gallery images in PostGalleryTypeImageRecyclerViewAdapter to prevent processing when galleryImages is null or empty
added the " DEPLOYMENT _ ID " column to the database change log table to ensure the correct value is stored for the deployment ID in
pdfbox - 2576 : update usage message to reflect new interactive form class
removed the ` moreColumnOk ` parameter from several methods in ` AlterTableAddConstraint . java ` to simplify index usage by elimin
added support for provisional engines in QuickfixjComponent by introducing a map to manage engines to ensure that only active quickfixes are
added and modified methods for managing mixed content mode and display zoom controls in RoboWebSettings to enhance functionality and improve control over web content display settings
added corporea block , brick and slab block to the library .
refactor ConnectionFactory to improve code readability to enhance maintainability and facilitate future updates
added a new method ` EnableDisableMenuItems ( ) ` to control the visibility of menu items based on user settings to improve user experience by
updated the message for empty lists in ExtendedListFragment to include a favorite headline and filter list to enhance user experience by providing clearer feedback
replaced @ ServiceRegistry . Setting with @ Setting in EntityTests . java to improve clarity and consistency in setting management
updated MotorMountConfigurationPanel to use subpanel instead of this in MotorMountTableModel and modified MotorMountConfiguration
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` to allow dynamic line separator configuration
added getters and setters for creator and subject in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java to
reformatted the doStop ( ) method call in HandlerWrapper . java to improve code readability and maintainability
[ java ] avoid ioexception if aeron client try to write to an empty file .
renamed the ` NonMarkedFoo ` and ` MarkedFoo ` classes to ` FooCommand ` and updated related method signatures to
added methods to handle JMod files and adjust path separators based on their existence to improve handling of JMod files and ensure correct file paths for
changed nullable fields and methods in TreeBackedElement and TreeBackedPackageElement to improve null safety and clarify method signatures to enhance
replace direct assignment of tokenRequest with a PublicTokenRequest instance in Saml2TokenGranterTest and UserTokenGranterTest
[ hotfix ] [ runtime ] fix arrayindexoutofboundsexception in abstractfrompropertyvaluerangedescriptor
hbase - 25813 add sync ( ) method to zookeeperwatcher and use it in zookeeperassignment
fix ( glutil ) : check egl _ no _ context when no gl context be set
[ drools - 7 ] make ruleflowgroup deactivation thread - safe
fix npe if origin be unset ( # 2100 )
removed the handling of ` PipeNotExistException ` in ` DropPipeProcedure . java ` and added exception handling in ` IoTDBPipeIT .
add cleanup to clientqueuedisruptiontest to avoid test flakiness
refactor : use defaultjavaprettyprinter in ctreferenceimpl # tostring ( )
make registrationtest . validateinstance protect instead of public
updated imports in GeoPointField , GeoPointTokenStream , and TermEnum in GeoPointInPolygonQuery . java to improve code organization and
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to utilize it to provide a mock implementation for
replaced null checks with isEmpty ( ) for better readability in GuiIngameForge . java and UniversalBucket . java to improve
rename ` rewrite _ rule _ subtree _ stream ` to ` rewrite _ rule _ subtree _ stream ` and change ` follow _ path ` to
added a check to return 0 if the velocity is less than or equal to the positive value in TubeCalc . java to ensure that the
replaced calls to getBucket ( gcsUri ) with direct access to _ storage . create ( BlobId . newBuilder ( ) ) in Gcs
removed duplicate call to VertxUtils . blockCloseVertxByName in TestHighwayTransport . java to ensure proper resource management and avoid potential
# 1193 - postgreshistoryddl : create / replace history view in postgres database ( # 1193 )
updated test to check clustering engine with a different parameter value of 3 to improve test reliability by allowing more than three clustering engines
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
added a new ` ParserStateObjectInputStream ` class and modified ` ParserCacheCommand ` to utilize it to filter out invalid classes to enhance
added null checks for changeLog and objectQuotingStrategy in ChangeSet . java and DatabaseChangeLog . java to ensure proper handling of object quoting
updated MetainfoParser to use fromXmlStream instead of parse to improve compatibility with XML stream handling
deleted the CsrfControllerAdvice . java file to the functionality was deemed unnecessary or redundant
refactor endorsed directory handling by introducing a new method to quote path lists to enhance readability and maintainability of the code by
added screen off animation and updated animation properties in the launcher and all apps background drawable classes to enhance user experience by providing smoother transitions and
[ iotdb - 2324 ] fix type inference for long string ( # 7777216 )
regenerate client with updated copyright year ( # 4382 )
added expected path type handling and validation for Windows path parsing in WindowsPathParser . java and updated tests in PathOps . java to ensure correct
replaced the instantiation of ` MulticastSocket ` with a direct initialization of ` MulticastSocket ` to simplify the socket setup by removing unnecessary
replaced multiple instances of writer . close ( ) in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
return a cloned version of nBits in IndexColorModel to ensure that the returned bits are not modified externally
changed the access modifier of ` deriveCollectorName ` method from private to protected in ` ProfilerCollector . java ` and added unit tests in `
refactor type hint handling in MappingMongoConverter and add a test for type hints when writing simple types to improve code clarity and ensure type
added performance measurement for the creation of proxy factories in ` ProxyMaker . java ` to improve performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting for better debugging and error management
refactor reinflateWidgetsIfNecessary ( ) method to improve widget management across multiple screens to enhance widget management efficiency and maintainability
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure proper functionality of the right -
fix ( lwjgl2 , lwjgl2 , lwjgl3 ) : do n ' t call display . update ( )
update instructoreditstudentlistpageuitest to show a picture of a student
added methods and a set to track tests that are ignored due to environment variables to enhance the test ' s ability to ignore specific tests based on
removed the pointer parameter from the fling method in ScrollPane . java to simplify the fling method signature for better readability and maintainability
updated QueryDslJpaRepository to handle null pageable cases and added a test for null pageable in QueryDslJpaRepository
added computeMemorySize method to MemoryManager and corresponding tests in MemoryManagerTest to enable memory size calculations based on a fraction of memory to allocate
( chore ) camel - jms : adjust test timeout for the publishjmstest
refactor SnowballAnalyzer to improve code readability to enhance maintainability and facilitate future updates
updated the handling of the previous InternalBatch in StreamingAggTemplate . java to ensure proper index management and avoid null pointer exceptions
change assertion to throw error if plugin do n ' t require null check .
added a new method ` stream ( TableIdentifier tableId , computeIntensityDefault ) ` to the ` StreamSupplierComponent ` class to provide a
updated log messages to indicate when a file is moved to the watched directory and added a retry mechanism for better error handling to improve clarity of
refactor InjectorProxy , ReflectionUtil , and associated classes to use a new newInstance method with initialization arguments to enhance flexibility in creating instances from
[ hotfix ] [ stream ] do not close stream in flinkstreamingcreatefunction
added unit tests for ` ShowCreateTable ` , ` UnsupportedStatement ` , and ` CreateTable ` to ensure correct parsing and handling of SQL
changed return value from null to ImmutableList . of ( ) in AppleTest . java to ensure immutability of the returned list instead of
updated test data in NamedSetTest . java to include Quality Distribution and Inc to enhance test coverage for accuracy and accuracy
added connection state management and refactored WebSocket connection logic in DeconzBridgeHandler and WebSocketConnection to improve connection handling and logging clarity
replaced ` setAttribute ` with ` removeAttribute ` for session management to ensure proper session management by removing unnecessary attributes
hbase - 25478 - implement retries when enable table in testregionreplicareplicationendpoint ( # 2866 )
added PMS initialization and configuration initialization in FormatRecognitionTest . java to ensure proper initialization and configuration settings for the PMS component
cloudstack - 1751 : handle creation of ovadadisktemplate event in templatemanager and add event in objectindatastoremanager
updated imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and Spring framework to streamline test setup and
added multiple ` @ Override ` annotations in ` CentralAuthenticationServiceImpl ` , ` RemoteCentralAuthenticationService ` , and ` NoOp
updated database schema and table names to use " metricVal1 " instead of " metricVal " to ensure consistency in data integrity and correctness
added a check to ensure the document count matches the deleted document count in SegmentReader . java to ensure consistency in document count by throwing an exception
renames occurrence of ` ` exception ' ' to ` ` exception ' ' and add some logging method in ` siplogger `
updated FilamentFactory to include a shorter length requirement for staves w / no starting barline to ensure that staves w / no
removed default value for handleFileUploads in VertxPlatformHttpServerConfiguration and set it to true in VertxPlatformHttpEngineTest to simplify
sec - 2292 : add test to assert csrf bypass of method be case sensitive
replaced static class Fields with instance variable field in HotSpotObjectConstantImpl . java to improve code readability and reduce boilerplate
updated method names from ` add ` to ` addFrequency ` in multiple classes to improve clarity and consistency in spell check functionality
replaced the use of ` Instant . now ( ) ` with a local variable ` now ` in ` FileIO . java ` to ensure
fix ( smq ) : registercopy do n ' t copy selectquery definition to context
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable handling of resultset metadata during query compilation
updated the argument format in JsLibrary . java to include the project filesystem ' s root path to enhance clarity by providing context about the library
updated the slider position in the RailButtonConfig panel from - 180 to - 180 to ensure correct display of the angle in the user interface
move save to a separate thread so that it do n ' t block the main thread .
added expression language support to KerberosProperties . java to enable support for expression language in the Kerberos configuration
removed redundant null checks and refactored the setRemotePlayersHeldItemMountPointScale method in ThirdPersonRemoteClientSystem .
modified the setupViews method to include a ScrimView parameter and updated related methods to enhance the launcher ' s functionality by integrating Sc
[ flink - 20613 ] [ changelog ] add support for periodic materialization in changelog backend
added a private String value field and getter / setter methods to the ProtocolParameter class , and updated XML attribute handling to store and retrieve the value
add a test to verify that chunking be work with the head header
added isumped flag to checkrouterruntimeresponse to indicate if the router beumped
added a Content - Type header with " application / x - www - form - urlencoded " in SwitchToPostInterceptor and updated SearchRequest
refactor EmbeddedClientConnector class to improve code structure to enhance maintainability and readability of the code
added logging functionality to PhoenixResultSet and replaced exception throwing with a warning log message to improve error handling and provide a clearer warning
added multiple instances of AndroidNet initialization to ensure proper initialization of the AndroidNet object
updated the formatting of log messages in LLRealtimeSegmentDataManager . java to improve code readability and maintain consistency in log output
removed the optional ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to
[ hotfix ] [ tablemapreduce ] remove unused class from tablemapreduceutil
added a new boolean flag ` inflationFailed ` and modified ` root ` declaration in ` XMLLayoutInflater . java ` to handle failures
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
replace loweringtoolbase with an abstract class to allow lower tool to be a subclass of loweringtool .
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to provide clearer feedback
updated Makefiles . java and MakefilesTest . java to replace ` Scanners . among ( ) ` with ` Scanners . string (
replaced direct calls to reader . getDeletedDocs ( ) with MultiFields . getDeletedDocs ( reader ) and added null check for deleted
replaced super . setTransformRefresh ( ) with setBoundRefresh ( ) in SimpleBatchNode . java to ensure proper refresh behavior in the
[ gr - 10711 ] fix cfunction do not need safepoints in sharedmethod .
added a framebuffer size callback for window size updates in LwjglWindow . java to ensure that the window size updates correctly when the
replaced instances of ` centerTaskParallaxToRight ` with ` centerTaskParallaxOffscreen ` and updated animation logic to
updated ` LiteralNode ` to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and modified related methods accordingly to enhance type safety
added file length adjustment methods in CompoundFileWriter , FSDirectory , and IndexOutput classes to ensure accurate file length calculations during writing operations
removed manifest path check in AndroidNdkScriptGenerator and updated imports in AntScriptGenerator and LwjglDebugStarter to streamline
camel - 15836 - camel - aws2 - s3 : use sourcebucket instead of copysource to avoid path collision .
added permission check for wildcard roles in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to
updated imports and refactored URI registration logic in ZookeeperClientServerRegisterRepository . java to improve clarity and functionality of event handling and
replaced instances of ` makeDeepMock ` with ` deepStub ` and updated related method names for clarity to improve code readability and
added a check for empty call value in the contract ' s toByteArray method to ensure that the method returns a Byte object when there are no call
change debug log message to use { } instead of string concatenation
updated mapPBEAlgorithmToOID method to throw NoSuchAlgorithmException and changed PBE _ ALGO string from " PBEWithHmacSHA1And
tmi - tiff : do n ' t throw eofexception if the offset be out of range .
added validation for job parameters in CommandLineJobRunner and implemented a corresponding test case to ensure that job parameters are provided to be in the form name
updated message content assertions from " foo \ r \ n " to " foo " in SmtpTests and MailTests to ensure consistency in message
updated case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and conciseness of case statements
replace synchronized long lastSequenceId with AtomicLongFieldUpdater for thread - safe sequence ID management to improve performance and ensure thread safety when accessing and
added a new file ` Test . java ` containing a class that performs a summation function to facilitate the computation of a
updated minSdk and maxSdk configurations and changed private fields to protected in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder to
added a new Java class to implement a sorting solution that checks if a given integer is in ascending or descending order to provide a solution for determining
fix concurrentmodificationexception when add cf to table . patch by brandonwilliams , review by brandonwilliams
refactor taskbar recreation logic to improve readability and maintainability to streamline taskbar recreation logic based on screen size and orientation
updated SyncFutureCache . java to improve cache management to enhance performance and reliability of asynchronous operations
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and adjusted the LO
[ java ] uselessstringvalueof - fix false negative with literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to validate the behavior
add a builder method to hollowproducer to configure max type shard size
added new version identifiers " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBack
[ hotfix ] [ javadoc ] fix typo in compilationtask
updated database location handling in DDLTask . java and modified database location retrieval logic in TestSemanticAnalysis . java to improve clarity of database
added a call to ClearDatabaseChangeLogTableStatement in the AbstractJdbcDatabase class to enable clearing of database change log tables efficiently
added version handling and updated URL generation in RestClient and CallPath classes to improve version management and ensure correct service base URL retrieval
updated exception message from " Untable " to " Unable " and added closed state check to ensure proper exception handling and prevent operations on a closed
change the spelling of " mesurement " to " Measurement " across multiple files to enhance code clarity and maintain consistency in terminology
added JUnit test setup and modified FolderPickerActivityIT to extend AbstractIT and handle screen screenshot tests to improve test coverage and ensure proper functionality
only remove the guard phase when dev mode be enable .
added checks for string length in StringHelper and implemented tests for leading and ending quotes in StringHelperTest to ensure proper handling of strings with leading and ending
updated the handling of the " NOT _ CONTAINING " keyword in JpaQueryCreator and added a test in UserRepositoryFinderTests to
do n ' t send a push branch id if the auth delay be too long .
added a dispatch method for copying messages in P25MessageFramer to ensure messages are copied and processed correctly during message processing
added null checks for the handler before calling checkClosed ( ) in WebSocketImpl . java and a new test for clearing client handlers on end to
[ ds - 3952 ] fix discovery test to use correct workflow type
updated widget padding calculations to use internal padding resources instead of app - specific padding dimensions to ensure compatibility with devices that use internal widget padding resources
added hide functionality to Taskbar UI and TaskbarAllAppsController , and updated closeOverlay method in BaseActivityInterface to improve user experience by
removed synchronized keyword from launch method and replaced Thread . sleep with launcher . join to improve thread safety and ensure proper termination of the launcher
updated the calculation of Point coordinates in JavaSEPort . java to correctly reference the canvas coordinates during zoom operations
refactor notification handling in UploadService to use startForeground method instead of notify to improve code readability and maintainability by centralizing foreground notification
fixed bug 1363448 - excessivepubliccount no long report false positive for nested class with static final modifier .
hbase - 25826 fix flaky testthrifthbasetest . testthriftservicehandler ( addendum )
log half offset commit on debug instead of info
added error handling for FileNotFoundException in ResourceUtils and changed logging level from debug to trace in AbstractCipherExecutor to improve logging granularity and provide clearer
added a new method ` getTickers ( ) ` to ` Bittrex ` and created ` BittrexTickersResponse ` to
fixed entityentry . getenumconstants ( ) to return the current state .
fix potential ClassCastException when registering / unregistration session
updated the char array initialization to include additional characters ' \ u0005 ' , ' \ u0009 ' , and ' \ u000
added stylesheet handling functionality to ResourceService and updated related methods in ResourceHandler and DefaultServlet to improve resource management by allowing stylesheet to be accessed directly
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
updated the method call from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with the new pointer parameter strategy
changed the database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockro
removed the condition checking for the " isEnum " in the ObjectStreamClass class to simplify the condition for string handling
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and created a new ` SymbolNotFoundError `
added logic to handle single and multiple field names in BinaryResponseWriter to improve flexibility in handling document retrieval based on user - defined return fields
added WebSocket ping and pong handling in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to ensure WebSocket pause and ping functionality
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expressions
update DnsResolverProvider to use wildcard imports and improve DNS cache configuration to enhance code readability and maintainability by simplifying import statements and en
make trace messaging auto - config conditional on class
mondrian : fix quote identifier for db2
updated import statements across multiple Java files to update dependencies to ensure compatibility with the latest version of the project
fixed parse error for close tag in lightweight parser . http : / / github . com / codenameone / codenameone / issues
removed the setVisibility ( GONE ) statement from TouchCharInput . java to simplify the code by eliminating unnecessary visibility changes
added null check for the current user before comparing IDs to prevent potential NullPointerExceptions when the current user is null
refactor JSObjectLinker to handle cases where the index is invalid before setting a slot to improve robustness by avoiding potential null pointer
initialized ` randomStringGenerator ` , ` numericGenerator ` , and ` suffix ` to ` null ` in ` DefaultUniqueTicketIdGenerator `
mark the SecurityConfig class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added @ Deprecated annotations to multiple classes to indicate that certain classes are marked as deprecated since " TODO " to indicate that these classes are no longer
deleted the JoglDebugAdaptor . java file and updated GuiceStartup . java to handle jogl debug logging to streamline code
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and ` AWSPropagationTest ` classes for improved string representation to enhance read
added PendingIntent creation to mNotification in FileDownloader and FileUploader to enable updates to the current pending intent for notifications
refactor the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to introduce a ` set ` method to improve code
refactor DateTimeFormatter to improve date formatting to enhance code readability and maintainability
removed unnecessary class loading for shell folder manager in WToolkit . java to simplify code and improve readability by eliminating unnecessary class loading
added null and empty checks for administrator credentials in the KerberosOperationHandler class to ensure valid principal , password , and keytab are provided to
added width scaling constraints for tablets and two panels in BaseWidgetSheet . java to ensure minimum width is used for better layout management on tablet
fix ( opengl ) : call gl . beginrender ( ) and gl . endrender ( sketchwindowcolor ( ) )
refactor hashing logic in Hashing . java to improve performance and maintainability of the hashing algorithm
updated the ` accept ` method in ` FileSenderFactory ` to use a base name comparison instead of a string for file name comparison to improve
updated ` addToListIfNeeded ` method to include content description for icons in ` UserInfoDetailsItem ` to enhance accessibility by providing content descriptions for UI elements
added a new field ' newType ' and initialized it to null if the type is not null to ensure proper handling of the ' type ' variable
updated ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve responsiveness during activity start
added a static string for the web application home path in SolrJettyTestBase and updated references in JettyWebappTest to use this
reset selectedMotorSet to null and clear selection table to improve code clarity and ensure proper cleanup of motor selection state
added import for BufferUtil and called clearToFill method in ByteBufferPool to ensure buffer is cleared before use to prevent memory leaks
fix not be able to process notification rule trigger ( # 233 )
updated LDAP group configuration keys from " authorization " to " authentication " to ensure proper authentication level for LDAP groups
added exchange deletion and queue deletion in DurableOnTransient . java to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
refactor connection handling in PingService and ServerInfoService to improve error handling for connection failures to ensure proper server connectivity and provide clearer error
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ test ] fix checkstyle violation in quartz2adapter
sulong : handle illegalstateexception when execute library member lookup .
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
refactor ` NameResolver ` in ` ConfigMappedNameResolverFactory ` and ` DiscoveryClientNameResolver ` to use ` NameResolver . Args
added conditional handling for non - empty annotations in JavacParser and introduced a new method to determine earlier position to improve annotation processing accuracy and
added " com . sun . naming . internal . " to the CheckPackageAccess class to enhance access control for internal package names
changed the ` strict ` variable from ` false ` to ` true ` in ` StaxEventItemReader . java ` to enable strict mode
updated ` OfflineSorter ` and ` TestOfflineSorter ` to track exhaustance of partitions and modified the partition reading logic to improve error handling
refactor ActionResetingPool class structure to improve code readability and maintainability
added a check for the presence of the Y - coordinate in the LightStateConverter to ensure proper handling of color modes when determining if the light
refactor methods in CellLayout to accept an array of targetCell parameters and improve folder creation radius calculation to enhance code readability and maintainability
removed the call to showLoadingDialog in FileOperationsHelper and removed it from FileDetailFragment and OCFileListFragment to streamline loading dialog
added null and existence checks for uigestureFile before loading logs to avoid potential NullPointerExceptions when uigestureFile is not available
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for case matching to ensure consistent behavior across different locales in test cases
fix : xmlsuite listener do n ' t work if there be no listener
added a new method ` loadWithNewGlobal ` and refactored existing method calls in ` Global . java ` and ` Context . java
added JSON serialization and deserialization methods to StarTreeIndexSpec and updated tests in TableConfigTest to enable proper handling of star tree index specifications
added import for ObjectPostProcessorConfiguration in HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , Saml2
replaced double quotes with single quotes in string replacement methods across multiple classes to improve code readability and consistency in string handling
[ rhdm - 3957 ] fix npe when check for null value in in operator
added FieldCache import and commit method in TestDistributedSearch . java to avoid FC insanity during distributed search operations
act - 1188 add test case for message boundary event on subprocess inside nested process
updated method signatures and implementations in ProgramManager , PointerAnalysisImpl , and JimpleProgramManager to use ' target ' instead of ' method '
http : / / issues . apache . org / jira / browse / amq - 4338 - use messagegrouphashbucketcount
added constants for slot IDs and replaced boolean fips with slotIndex parameter in Secmod . java to improve code readability and maintainability by
added alignment support to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to enable flexibility
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
added MIDI imports and conditional checks for specific class types in JDK13Services . java to enhance functionality by enforcing only relevant classes are processed
added a check for keyword presence before updating the keywordToReference map to ensure the keyword is only added if it doesn ' t already contain the
multicast / splitter eip should check the size of the collection before call size ( ) .
remove unused code ( no functional change )
escape quote in flavor statsd ( fixes # 644 )
added udp port field and related methods to MemberImpl and MemberSerialization classes to enable support for udp connections on the same multicast address
rename the multicast class from OperatorMulticast to OperationMulticast to clarify the functionality of multicast operations
updated send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time for message sending
encapsulate error handling in a try - finally block for better resource management to ensure latch is decremented in a finally block to prevent potential
added import for ListIterator and overridden the destroy method in SessionFactoryServiceRegistryImpl to ensure proper cleanup of cachedEventListenerRegistry when the service is
danielwagnerhall : use jwt _ token from local storage instead of home page for test
[ api ] add test for map of tensor in ivalueutilstest
added a new ` TaskStackChangeListener ` to manage the ` INVISIBLE _ BY _ STATE _ HANDLER ` state during the pinned stack animation
pdfbox - 4892 : do n ' t fail if the date pattern contain a dash
camel - cxf fixed the unit test error of camel - cxf
refactor animation handling by extracting endAnimation logic into a separate method to improve code readability and maintainability by reducing duplication
added logging for play time adjustments in LauncherAnimationRunner to improve debugging capabilities and ensure accurate play time tracking
added a bailout option for exception handling in C1XCompilation and introduced a corresponding flag in C1XOptions to improve flexibility in
changed the default values of signup and passwd to null in Links . java and updated corresponding assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
replaced ` onlyFormat ` with ` format ` and introduced a new method ` getOnlyFormat ` to improve clarity and encapsulation of
added NoDataContainer support to GeoTiffReader and its test to enable handling of no data in the image rendering process
llvm : fix npe when there be no source section
replaced ` toString ( ) ` with ` new String ( output . toByteArray ( ) ) ` in JdbcExecutionContextDao and DefaultExecutionContext
replaced the ` client . blockUntilConnected ( ) ` call with a ` CountDownLatch ` to track the start of the connection state
added null check for arrays in ArrayTypeHandler to ensure proper handling of null values to avoid potential NullPointerExceptions
replaced the RegexpTunnel class with a reflection - based method for retrieving prefixes from a regular expression to improve performance by leveraging reflection for
updated application selection logic to use Application class instead of null to ensure compatibility with application - specific configurations
[ drools - 6640 ] avoid npe on mutable global rule in phreakfromnode
replaced Preconditions with TransactionUtil for asset name validation in AssetIssueActuator . java to ensure asset names , URL , and description are valid
make sure parent text field do n ' t cause copy to paste
updated device label and description in multiple classes for clarity and consistency to improve user understanding of device descriptions and enhance readability
replaced node setting methods with bulk addition methods for seed , active , and trust nodes to improve code readability and maintainability by consolidating
enhanced assertion messages in BaseTokenStreamTestCase and introduced a success flag to improve debugging information and ensure proper handling of thread failures
log4j2 - 1343 change policy to timebasedtriggeringpolicy to allow modification of the calendar interval
refactor item click handling in ShadowAdapterView and ShadowListView to improve code organization and readability to enhance maintainability and facilit
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
graphdecoder : do n ' t decode call to original method after pe
refactor HttpSessionDestroyedEvent to improve session attribute retrieval and add unit tests for security contexts to enhance code clarity and ensure correct retrieval of security
added a test method to change the service name in Zipkin using a manually provided name to ensure that the tracer correctly reflects the provided service
added logging statements to ` JavaInMemoryFileManager ` and ` JavacToJarStepFactory ` and modified the spooling behavior
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and updated references accordingly to clarify the purpose of
test fix : increase timeout in trylock
added a default cache capacity constant and updated related return statements in ConfluentSchemaRegistryDeserializerProvider to enhance performance by limiting the cache size
rename ` remind ` checkbox to ` checkAtStartup ` in ` UpdateInfoDialog . java ` to improve clarity and user experience by
added new methods and generated a node factory for various parameter types in NodeGenerator . java to enhance the functionality and flexibility of the NodeFactory
hhh - 14936 avoid unnecessary call to foreignkey . istransient in cascadingactions
added methods to handle " __ proto __ " and " setProtoCheck " in ScriptObject . java to enhance object prototyping functionality
updated the default read mode from " heap " to " mmap " and modified the ImmutableSegmentLoader to log successful segment loading to enhance performance and
added import for ByteArrayTemplate and modified logic to return a ByteArrayTemplate instance for byte class handling to enable proper handling of byte array templates in the
added Hipchat field and its getter / setter methods in SamlServiceProviderProperties , and created a new CasSamlSPHipchatConfiguration
changed commandRegistryUrls from a List to a Set and updated resource retrieval logic to ensure uniqueness of command resources and improve resource management
updated warning log to include context for uncovered HTTP methods and improved debug logging to enhance clarity of warning messages and facilit
camel - 16400 : camel - svn - allow sftp to login via url . thanks to benjamin for the
http : / / issues . apache . org / activemq / browse / camel - 14548 - allow to turn off lazy -
fix vmwareresource . java error due to wrong hyperhost name
updated method implementations in Timers . java to improve performance and maintainability of the code
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
mark multiple UAX29URLEmailTokenizer constructors as deprecated and update tests accordingly to ensure compatibility with the latest LUCENE _ 31
removed Map implementation from ScriptObject class and related tests to simplify class structure and improve code readability
refactor EventBusMetrics class to improve event handling logic to enhance performance and maintainability of event bus metrics
[ ds - 3762 ] add a new method getepersonlocale ( eperson ) to i18nutil to make it easy
updated JaversTransactionalDecorator to implement InitializingBean instead of @ PostConstruct and added ensureSchema method implementation to improve bean initialization handling and
removed null check for pgTypeName before putting it into the _ pgNameToSQLType map to simplify the code by eliminating unnecessary null check
added multiple server setups for both handler0 , handler1 , and handler2 in ScopedHandlerTest . java to ensure consistent server management
fix calltimeoutexception bug ( calltimeoutexception )
replaced ` StringUtils . isBlank ` with ` StringUtils . isEmpty ` in ` RestLoginProcessingFilter . java ` to handle empty passwords more effectively
updated permission check to compare " * " instead of an empty string to allow wildcard permission checks for better permission handling
rename ` encoding ` to ` sourceCharset ` and introduce ` setCharacterEncoding ` method in ` AbstractCompiler ` and ` ICompiler `
changed data type of postLogin and related methods from byte array to String in HostBean and TerminalBridge classes to improve performance and reduce memory usage
refactor simulation handling in GeneralOptimizationDialog to use final variables instead of creating new instances to improve code clarity and ensure immutability
camel - 17836 : camel - main - allow to turn on / off context reload by default .
updated logging configuration settings in CommonTestUtils . java to improve clarity and consistency in logging context
updated PrologSizeSanityCheck . java file to improve validation logic for Prolog size validation
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check for non - closingable streams before invoking ` invokeSafely ` in ` RequestBody . java ` to ensure that operations on
polish ` ` do n ' t set a tcp port if the setting be not enable ' '
modify movementdebugcommands to restore default speed value from prefab
updated random load balancer logic to include a half - length total weight to ensure that the random load balancer does not exceed the maximum number of weights
fixed bug in gsonparser that cause start _ absolute and start _ relative to be negative .
added comments to clarify sorting parameters in ApacheHttpClientMediaWikiApi . java to improve code readability and maintainability by providing clearer
refactor transaction coordinator initialization by replacing checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) in multiple classes to enhance code readability
pipe : fix the issue that pipetaskcoordinator could cause a deadlock if the underlying pipe thread be stick while wait for the pipe task
modified the DependencyJar creation logic to conditionally include the " preinstrumented " version based on a system property to enhance flexibility in managing
modified the conditional check from ' ! isSilent ' to ' ! isSilent ' in ExecDriver . java to ensure consistent behavior for silent execution
added validation to ensure dynamic fields have default values and requirements , and throw exceptions for unsupported attributes to improve error handling and provide clearer feedback for
do n ' t randomly read read repair if we do n ' t want to repair
replaced ImmutableSortedSet with Iterables and updated the method for adding system include roots to improve code readability and maintainability by using a more
refactor AdaptableX509CertSelector to handle null start and end dates more effectively and introduce sensitivity flags for Subject Key Identifier and
log4j2 - 1343 refactor refactor bufferSizeint initialization to use abstractappender . parse ( int , int )
deprecate guiscreenscreenevent in 1.16 , deprecate in 1.16
added methods to manage category addition , removal , and adding new categories in CategoryEditSearchRecyclerViewAdapter to improve category management functionality for better user
no - jira - fix for http : / / issues . apache . org / activemq / browse / amq - 233
added loops to update properties of massOverriddenBy and CDOverriddenBy for each RocketComponent to ensure accurate tracking of component overrides
fix memory leak in javacloudservice . compile ( )
refactor the ` doCompute ` method in ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < T > ` for enhanced
made the ` StripedExecutor ` volatile and added synchronization to the ` WanReplicationServiceImpl ` to ensure thread - safe execution of
added null checks for partition and table locations in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor code to use lambda expressions for thread creation in RemoteServiceRegistry to improve readability and reduce boilerplate code
added a new test class ` FilesTest ` and a ` delete ` method in ` Files ` to verify the functionality of the ` Files `
removed unnecessary try - catch blocks around the close ( ) method calls in ServerSocketAdaptor . java and SocketAdaptor . java to simplify the code
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
refactor currentWorkingDirectoryList management by replacing currentWorkingDirectoryList . clear ( ) with addWorkingDir ( f . toString ( ) )
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure ` itemBuilder
changed the access modifier of the static String variable from public to private to restrict access to the String constant for better encapsulation
updated Java URL settings for CSV and JSON jar files in SimplePostTool . java to streamline URL configuration for better clarity and maintainability
apps - 2338 make sure getsymbolicdiffers ( ) return true for both max and min
refactor exception handling in JavaxWebSocketClientContainerProvider and add shutdown registration in JavaxWebSocketClientContainer to improve error handling and
updated conditional check in Linux . java to use logical OR instead of logical AND to improve readability and correctness of the condition
ensure proper cleanup of web application context after each test
added search functionality to the RemoteBrowseHandler by introducing a method to retrieve search strings from query parameters to enhance user experience by allowing users to
removed the visibility of the neutral button from the SetupEncryptionDialogFragment to allow the button to be invisible when not needed
change itemserviceimpl . countnotarchived ( ) to countitems ( ) to take a list of collection , includearchived / include
updated SQL statement construction to use double quotes for column descriptions and column descriptions to ensure compatibility with SQL standards and improve readability
added error handling for OAuth2 exceptions in CheckTokenEndpoint to improve robustness and logging of OAuth2 - related errors
renamed multiple classes related to series painting and added a method for lookupSeriesPaint to improve clarity and maintainability of the codebase
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use HttpEntity and HttpResponse instead of postForEntity and assertEquals methods to
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and DataBrowser . java , and enhanced SQLConsole . java to
added support for running single test method with Surefire 2.22 . 0 and updated related warning panel logic to support compatibility with JUnit
updated exception handling in WorkerShellStep . java to throw a RuntimeException instead of a HumanReadableException to improve error handling by providing a more
[ hotfix ] [ core ] introduce flink . annotation . experimental in core class
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a boundary check for the index in the List class to ensure the index does not exceed the size of items to prevent index out - of
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct handling of parentheses in tests
added confirmation and requiredType options to the DebugPaste command in the DebugPaste class to enhance user experience by providing a confirmation option for
replaced calls to ` . get ( ) ` with ` orElseThrow ( ) ` for missing endpoints in multiple configuration classes to improve error handling
simonstewart : fix the focus problem for the mathquill ggb
replaced ` Arg ` class with a new interface ` AbstractGoBinaryDescriptionArg ` and updated related imports and methods to improve code organization and
added a check for the " application . env " path in Jooby . java and updated the way the logback environment is retrieved
replaced ` RetryListenerSupport ` with ` RetryListener ` across multiple files and introduced a new ` SecondDummyRetryListener ` class to simplify
fix decimal value in elasticsearch meter registry ( # 498 )
changed variable declarations from non - final to final for email , author , and commits lists to enforce immutability and ensure immutability of
replace a for loop with a do - while loop that appends dots at the end to improve readability and maintainability of the code
refactor how elements are retrieved and instantiated in the code to ensure proper handling of LinkedList instances to avoid potential null pointer exceptions
enhanced error message in StaxEventItemReader to include the resource URL to improve clarity of error messages for better debugging
testmultirenderertarget : improve lighting performance .
updated clientResult assignment to handle null currentProfile and added logging for client not being found at all to improve robustness by preventing potential null
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the correct namespace declaration is added to the element
added BigInteger and DSAParameterSpec initialization in KeyStoreManager . java to enhance security by integrating DSA parameters for improved security
updated index buffer retrieval from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape
set process definition engine version when persist process definition ( activiti - 5 )
updated property names from " resource . loader " and " file . resource . loader . class " to " resource . loader . file . class
updated thread verification logic in CEntryPointSnippets and VMThreads classes to include a new method to verify if a thread is attached to enhance
updated GenericUDFMapValues to handle null maps before adding them to retArray to improve robustness by preventing potential NullPointerExceptions when accessing
corrected a typo in the key from " interceptors " to " handlerInterceptors " to ensure the correct key is used for processing interceptor configuration
added configuration for oil well generation rate and spouts in BCEnergyConfig . java and updated OilGenerator . java to utilize
added a check for a " . clean - me " file in the ImportContext and updated directory checks in JobQueue to ensure the directory can
fix string - based exception message in memoryrealm
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability by eliminating redundancy
updated import statements in ZipConstants . java and added an import statement in ZipEntry . java to streamline code organization and improve readability by separ
refactor ` newFileSystem ` methods to improve file existence checks and error handling to enhance robustness by ensuring only valid file types are processed and
modified the width calculation for the condition panel in IfControllerPanel . java to simplify the layout and improve readability of the condition panel
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper initialization of the connection object
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to improve serialization
fix ( db ) : add deletebook method to databaseadapter to delete db entry
refactor multiple Java files with no functional changes to improve code organization and maintainability
update the position parameter in the AbstractAjpProcessor class from ` len ` to ` len - responseMsgPos ` to correctly account for the
improve adminconsole plugin startup / shutdown process by restart the plugin .
refactor unregisterHandlers method to use instance variables for binary and text consumers to improve code readability and maintainability by reducing unnecessary synchronization
added configuration properties for device ID transformation method , table , and log file in IoTDBDescriptor . java to enable customizable ID table behavior based
increased the number of documents in the ExitableDirectoryReaderTest from 2000 to 100 and updated related test assertions to allow more time for
updated the condition for determining if the access error is not null in TestSignatureInfo . java to correct the logic for determining if the timestamp is
refactored script creation to use a single ` witnessScript ` variable instead of recalculating the script code to improve code clarity and
added " fieldType " to the expression in IndexSchema . java to support additional schema types in the schema
added null and instance check for completer in Completers . java and created a new OptionCompleterTest class to ensure proper handling of options
fixed checkstyle issue in io / s3utils . java ( # 747 )
change data types of ` sourcePeerId ` from ` String ` to ` int ` in multiple classes to accommodate larger source peer IDs
modified FtpHelper . java to handle zip file uploads and added a new uploadFile method to improve file handling and upload process for zip files
removed unused imports and set the reply button ' s alpha value to default to 1.0 to streamline the code and ensure the reply button
fix flaky test by add a timestamp to the expected string
fix marycachetest failure on window
reset the subscribers set to a new set and simplify the condition to always check for non - null and non - empty state to improve performance and
added a null check for the marshaller and improved error handling in AbstractSamlObjectBuilder . java and AbstractSaml10ResponseView . java to
replace printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of stack trace
added a check for the existence of the asset directory in dev mode and modified asset handling logic in AssetsController and AssetsControllerTest to ensure proper
[ flink - 20613 ] [ rocksdb ] pass writeoptions to statebackend in put ( ) method of rocksdbkeyed
updated the default format string from " value - tag - index " to " value - index " to align the format with updated naming conventions
updated method calls and hint settings in MainActivity . java to improve code readability and maintainability by using req . getHints ( ) for
change default native flag from false to true for secp256k1 , altbn128 , SECP256K1 , and AltBN
rename DuclsSandboxTest to SandboxTest and update related references accordingly to improve clarity and consistency in test naming conventions
camel - 2640 fixed the issue that camel - cxf do n ' t log the exception
make sentimentcostandgradient . forwardpropagatetree public to allow access from other class .
updated SQL query to include time series parameters in the group by clause to improve accuracy of query execution by including time series durations
[ mng - 5361 ] warn user about interpolation $ { project . basedir } expression during profile activation
refactor Style class to improve readability to enhance maintainability and facilitate future feature additions
added zoom handling for the back button in ShareActivity to improve user interaction by allowing navigation to the zoom out button
added a condition to skip processing for deprecated fields in Json . java to ensure proper handling of deprecated fields during JSON processing
added animations for showing and hiding the send layout in LauncherFragment to improve user experience by providing visual feedback during layout presentation
updated method call formatting in Utils . java for consistency to improve code readability and maintainability
added Progressable parameter to multiple methods in Utilities and related classes to enable progress tracking during sequence writing operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove contribution from the panelByContribution and update panelOrdering and colors to ensure proper management of contribution data in the panel
updated the class name from ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and corrected a typo in the URL validation
added a check to initialize dPath to the user ' s user directory if it is empty to ensure the application uses the user ' s directory
fix e - ac3 output to 48000 by default
log4j2 - 1343 improve performance of mapfilter . filter ( )
updated VerificationInOrderWithCallsTest . java file to improve test coverage for order verification functionality
changed the method call from ` setFromAxis ` to ` setFromAxis ` to use the x - axis coordinate instead of z - axis to correctly
corrected the casing of the COLLECTION _ DELIM constant from " colelction . delim " to " collection . delim " to
add a test for listener state change at the start of the server .
[ netbeans - 5355 ] fix documentation for union type
refactor support for one - handed mode in RecentsAnimationDeviceState to improve code readability and maintainability by reducing repetitive
added onDetachedFromWindow ( ) method to manage task cancellation in AppsCustomizePagedView to ensure proper cleanup of running tasks
added dictionary resource support to MorfologikAnalyzer , MorfologikFilter , and MorfologikFilter classes to
replaced the ` count ` variable with a ` thrown ` variable and removed unnecessary exception checks to simplify the code by eliminating unnecessary exception
updated the initialization message format in GradleBuildService . java to use an empty string instead of a debug log message to improve clarity
replaced AtomicReference < Boolean > with AtomicBoolean for preventedByLocking and preventedByMVCC to improve thread safety and clarity
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by encapsulating tooltip text logic
increased the timeout duration for the zipkin server from 5 seconds to 10 seconds to allow more time for the zipkin server to start
fix npe in deviantart ripper and add agegate state to config
replaced KNOWN _ GOOGLE _ SIGNATURES array with new GOOGLE _ KEY and GOOGLE _ PRIMARY _
make importdirsolveallturtletest more resilient to build failure
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes in the application
added email description to the template in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to enhance the functionality by
replaced the method call to remove ( sel ) with a data . remove ( sel ) to ensure consistency in accessing the data object
refactor language retrieval logic in Locale . java and add error handling in LocaleTest . java to improve code clarity and ensure correct language retrieval
refactor Liquibase parsing process to use a dedicated method for creating UpdateVisitor to improve code readability and maintainability by centralizing
added a conditional check to return early if the screen pinning is active to optimize performance by avoiding unnecessary command execution when the screen is in
added functionality to display " No chart data available . " and a description to improve user experience by providing clearer context on the available chart data
added synchronization and refactored cookie validation methods in Http1xServerResponse , Http2ServerResponse , and HttpTest classes to ensure thread
refactor NettyResponse to separate chunking logic into a separate method for SSL handling to improve code readability and maintainability by reducing
added " : scheme " header to various test cases in Http2TestBase , Http2Limit , and TestHttp2Section8 _ 1
fixed - rlocalcachedmap . getkey ( ) , rlocalcachedmap . values ( ) and rlocalcachedmap . getentry
camel - 14284 : fix camel - jpa to use do start instead of do start on endpoint start
swapped the assignment of jumpSpeed in PhysicsCharacter . java to ensure consistent formatting of jumpSpeed assignments
added a condition to check if reparsedFunction is null when no syntax extensions are present to ensure proper handling of functions without reparsing
refactor logging variable names and improve order handling in BitstampPusherService . java to enhance code readability and maintainability by standardizing
added oldUploadSegmentHttpURI and getOldUploadSegmentHttpsURI methods to FileUploadDownloadClient to unify URI handling for HTTP and HTTPS
updated the method call to include a filter parameter in the MongoDbTailTrackingManager to enhance filtering capabilities during database query execution
added a test method to assert that the predicate fails if an expected header value is present to ensure that the predicate correctly identifies and handles various header
added a call to bound the alpha value to the range of 0 to 1 in RecentsView . java to ensure the alpha is within
updated string replacement in ManifestReversion . java to simplify version string formatting to enhance code readability and maintainability by removing unnecessary concatenation
[ hotfix ] fix checkstyle violation in datasyncconfiguration
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to ensure proper initialization of the JavaSnippetRepository instance
modified the condition for updating sums in StarTreeRecordStoreCircularBufferImpl . java to handle time bucket updates correctly to ensure that sums are
[ java ] update url to chromedriver . storage . googleapis . com in test
( chore ) camel - pgjdbc : use prepared statement instead of statement . execute ( )
fix for http : / / issues . apache . org / jira / browse / amq - 4682 - upgrade rome to
added handling for " Content - Length " in TransferCompletionHandler and updated NettyAsyncHttpProvider to use fluentCaseInsensitiveStringsMap for HTTP
refactor Dialog class to improve code readability to enhance maintainability and facilitate future modifications
removed the constructor from EnhancedRuntimeException that accepts a Throwable cause , enableSuppression , and writableStackTrace to simplify the code by eliminating
( chore ) camel - socketappendertest : fix intermittent ci failure
( chore ) camel - event - admin : remove unused code from camel - core
updated method signatures and exception handling in ByteArray . java for consistency to ensure compatibility with JDK8 and improve error logging
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling and prevent potential memory leak
camel - 6770 : enable restlet domain test until camel - 6770 be fix
remove unused parameter ` currentIdx ` from ` resizeAndRehashIfNeeded ` method to simplify method signature and improve readability
rename ` com . hazelcast . tests ` to ` com . hazelcast . test . modulepath ` in test
added a new method ` getSourceDirs ( ) ` to ` JavaLanguageServer ` and improved a message in ` JavaServerConfiguration ` to
removed the menu item for opening web pages and changed the action from " menu _ open _ web " to " menu _ mute _ has
updated method names and assertions related to ancestor and parent relationships in the AncestorDescendantTests and HasParentNode classes to improve clarity and accuracy
make worldeditplayer ' s y - coordinate non - negative by default
added PathNotExistException handling in selfCheckDataTypes method to improve error management for non - existent measurement schemas
removed extraneous quotation marks from a method call in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ operator ] move mailboxexecutor getter into operator factory
hbase - 25829 do n ' t allow user to set table state in meta ( addendum )
changed method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` and modified print statement formatting to improve code
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of directly instantiating the TestClass to ensure compatibility with
update delete handler to use lastupdatedatdata instead of remoteitems
modify the calculation for allAppsCellWidthPx to include allAppsCellPaddingPx to ensure proper alignment of app width based on padding
[ hotfix ] [ core ] introduce a constant for the first logging resolver in coreoptions
updated method calls to use ` this . doc ( ) ` instead of ` doc ( ) ` in ` BooleanScorer2 . java `
add a force merge operation to the writer to optimize the performance of data retrieval by consolidating segments
changed the return type of the ` close ( ) ` methods from ` Connection ` to ` void ` in the ` Session ` interface and its
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
updated exception handling conditions to check for null values instead of printing stack trace to simplify error handling by eliminating unnecessary stack trace printing
replaced IOException handling with a single ignore statement to simplify exception handling for better readability and maintainability
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with Android 7 and above
ruby flavor : wrap last term in a ( ? : ) / ( ? : ) rather than ( ? : )
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove the usecaches from the endpoint , it ' s not need anymore .
refactor CasGeoLocationConfiguration to use ` Resource ` instead of ` MaxmindProperties ` for database properties to simplify database read logic and
update test in instructorfeedbackresultspageuitest to use new instructor result page
fix use _ qualifier _ list _ optimization for raw scan
removed public access modifier from approvals methods and methods in the ApprovalStore , ApprovalsControllerService , and ApprovalStore
added a delay mechanism to cancel the download notification if a download has started to improve user experience by preventing unnecessary notifications during the download process
updated method names and logic in TaskbarDragLayerController and AbstractFloatingView to improve clarity and functionality to enhance code readability and maintain
updated project version from 1.0 . 11 to 1.0 . 13 and changed " 2000 - 2008 " to 2000 - 2009
replaced calls to ` Thread . yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure
refactor GsonBuilder class to improve serialization logic to enhance performance and maintainability of JSON handling
added null check for centerGeo before adding it to circleCenters and fixedPoints to avoid potential NullPointerExceptions when adding invalid center coordinates
remove espresso . home option , use graalvm . home . home instead
doc : fix typo in documentation ( # 2341 )
( chore ) camel - aws2 - kinesis : make deletessessionaction private
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
updated variable initialization and error handling in JoinQParserPlugin , SolrIndexSearcher , and TestJoin classes to improve code clarity and ensure
added an additional parameter to the triggerMediaScan method in FileDownloader . java to enhance media scan functionality by associating the file with the
removed conditional printing of test results in TestRunning . java to simplify the test result processing by directly calling postTestResults
added methods to set custom G - code settings in MainWindow to enhance user experience by allowing custom G - code settings
camel - 14284 : camel - additional - jaxb - use utf - 8 encoding for write output . thanks to david
refactor JsonElement class to improve data handling to enhance performance and maintainability of JSON processing
added imports and exceptions for handling " unset . sys . property " in TestBadConfig . java to improve test robustness by ignoring unset system
added a method to remove fragments and action bar in GpsMainActivity to improve user experience by managing the action bar visibility during fragment removal
updated spanishTokens and spanishTokens2 lists to include parentheses to ensure consistency in token handling across different token formats
replaced ` Range . asByteRange ( ) ` with ` Range . Byte ` in ` RemoteMediaHandler ` and ` RemoteRawHandler
updated G - code file path and modified G - code parsing logic to enhance functionality and improve G - code rendering accuracy
added support for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " in TestBack
updated formatting of assertions in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added a condition to close the exchangeClient if the query is complete and the output stage is null to ensure that the exchange client is closed when
fix integrity check when there be no file directory
removed unused import and initialized shardToClient in ChaosMonkey . java to streamline code by eliminating unnecessary dependencies
added null check for ` fas ` before accessing its private persistent file to prevent potential NullPointerExceptions when ` fas ` is null
removed unnecessary line breaks in NestedRepositoryTreePanel . java to improve code readability and maintainability
( chore ) camel - util : make extensiontypeheader constructor public
pdfbox - 4892 : do n ' t swallow ioexception , a suggest by valerybokov
make pushonshutdown default ` ` true ' ' to ` ` true ' ' and move related getter / setter into Prometheusproperties
added trigger error handling and error logging in ReactiveStateMachineExecutor to improve error management and logging for queued events during state machine execution
added a test for determining the first executable path of " python " in the ` BuckConfigTest ` class to ensure that multiple Python executable
added a default button to the root pane in InitialAccountRegistrationFrame . java to enhance user experience by providing a convenient mechanism for setting the default
added a new configuration option for dynamic semi - join reduction for map - joins in HiveConf . java and updated the condition in TezCompiler
updated error logging statements to include exception details to improve error reporting for better debugging and error tracking
remove reflection from util package and move utility class to util package
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding test cases in ` Oid
removed the ` center ` attribute from multiple ` Polygon ` , ` Polyline ` , and ` Rectangle ` classes to eliminate unused ` center `
simplified the conditional check for matching the output collection in RegisterAndProcessBundleOperation . java to improve code readability and maintainability by
refactor SslContextFactory to improve SSL configuration handling to enhance security and maintainability of SSL connections
[ hotfix ] [ config ] remove default _ max _ expectations from configurationproperties
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer error reporting for access confirmation errors
[ 3.0 ] fix classloader not be reset in consumer config ( # 11347 )
added support for copy row height and reset original row height in the shiftRows method to enhance flexibility in row shifting functionality
changed method names from setRolloverIcon to setRolloverPressedIcon for better clarity to improve code readability and maintainability by using
updated grid translation handling in TaskViewUtils and TaskViewSimulator , and removed the secondary translation method in RecentsView to streamline
refactor assertions in Assertions . java for improved clarity to enhance maintainability and readability of the code
added null checks and return statements for currentDateTimeFunction across multiple database classes to enhance robustness by preventing null pointer exceptions when accessing currentDateTime
added a method to convert a path to an anonymous path in IOUtils and updated Log4jUtils to use this method to improve path handling and
updated the ` call ` method in ` DigitalWellBeingToast ` to include a content description parameter and added a method to
[ amazonechocontrol ] increase timeout to 50 for catalogtracker . getmetastore ( )
updated LineNumberTagAggregator and TestDominance files to improve code organization and maintainability
return stateconverterutil . defaultconversion ( state , classtype ) instead of null in genericitem . getstate ( )
added integration test for Hibernate integration and refactored property handling in BidirectionalOneToOneNPlusOneTest . java to improve test
removed extra empty screen from the workspace and adjusted startSearchPageIndex initialization to ensure proper handling of empty workspace screens and improve search page
updated HashMap and HashSet initialization and added null check in IndexedValueMap to improve memory allocation efficiency and prevent potential NullPointerExceptions
updated string formatting in GoogleLineChart and GooglePieChart to use double quotes instead of single quotes to ensure consistency in number formatting across chart
refactor waiting logic in SendingAccountor . java to improve clarity and handle interruptions during send completion to enhance error handling and
walprettyprinter : add position to seek to the file
updated the netty transceiver initialization to use a port number of 0 instead of 1 to ensure that the transceiver does not fail
selenide - 349 : simplereport should sort event before generate a report .
added a test for CSV line description containing double quotes in CSVFileLoggerTest . java to ensure correct formatting of CSV lines containing escaped quotes in
update the coref chinese test to be compatible with the new coref spec
added check to ensure that we do n ' t send an invalid iq to a remote server . jm - 371
added @ JniImpl annotation to VM . java to enable the use of JNI for native image processing
updated fetcher2 logic and configuration settings to use protocol constants instead of hardcoded strings to improve clarity and maintainability of the code by using
added a condition to check if the video HDR format is not " dolbyvision " and removed several unnecessary print statements in MediaInfo
updated package name from " other _ package " to " other _ package2 " in AstTests . java to reflect the new organization of packages
minestom : change worldborder ' s diameter percentage to be less than 0.99
added a method to get WAL group replication status in HMaster to ensure proper replication status is returned only when the master is online and can host
make sure we remove the caller from the login view when the login fail
updated instances of ` markDataResourceOnline ` and ` markDataResourceOnline2 ` to use a new list of instance configurations to streamline
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
( chore ) camel - maven - plugin : improve error message when a miss reference to a pom file .
simplified the condition for comparing oldProto and newProto in PropertyMap . java to improve code readability and maintainability
refactor the handling of controller ID to accept a configId parameter across multiple classes to improve flexibility by allowing multiple relay configurations to be processed
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management by closing the session
removed the condition for generating refresh token in the consent approval check to simplify the condition for better readability and maintainability
removed a print statement that outputs the executor ' s string representation to clean up the code and reduce unnecessary console output
replaced a lambda expression with an anonymous enum NoopGetter in the extractor method to improve code readability and maintainability by using a standard
refactor ConditionalOnEnabledResourceChain class for improved resource management to enhance performance and maintainability of resource chain conditions
added a condition to check if the tree root has children in BarrowmanCalculator . java to ensure that the logic correctly handles cases where the
replaced `globals . getFilteredStream ( ) ` with ` globals . getUnfilteredStream ( ) ` in ` JBIG2Filter .
updated log messages in FacebookImpl to include " CN1 " prefix and modified session state handling to improve logging clarity and ensure proper execution of
updated return values in ShadowICU . java to replace " h : mm a " with " skeleton " and added a new test for date
removed KeyguardManager dependency and simplified condition for device lock check to streamline code by eliminating unnecessary dependency on KeyguardManager
fix npe when set the volume ' s default disk offeringid to null
replaced FileChannel with AsynchronousFileChannel and added a position variable to improve performance and control over file operations
refactor the SigInt and SigIntTest classes to improve code readability and maintainability to enhance code clarity and maintainability by standard
ggb - 2207 text size be not update properly , remove unnecessary updatebyboxresize call
change return value from - 1 to 0 in Asset . java to correct the logic to reflect the intended behavior of the method
updated the benchmarking logic to use a dynamic value loader and mapping function to improve flexibility and maintainability of the benchmarking logic
added onRefreshListener to UploadListFragment for notifying dataset changes to ensure that the adapter updates correctly when the data is refreshed
fix npe in bibdatabasecontext when file be null
refactor the ParticleEffect class to use the get ( ) method for accessing emitters instead of items to improve code readability and reduce
refactor Tomcat to simplify service and engine retrieval logic to improve code readability and maintainability by reducing redundancy
updated error messages to remove unnecessary spaces in ` BuildRuleFactoryParams ` and ` Console ` classes to enhance code readability and maintain consistency in
added a check to return early if the playback state is not playing to optimize performance by avoiding unnecessary processing when the playback is already in playing
replaced the retrieval method for ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify
refactor Java2TypeScriptTranslator and add InnerClassFieldClash test in StructuralTests to improve handling of inner class field clashes
add followRedirectFilterEnabled property and related functionality in DockerClientProfile and DockerClientFactory to enable or disable follow redirect filtering based on configuration
replace direct call to displayChanged with awtUnlock and awtLock for better resource management to ensure thread safety and prevent potential deadlocks when accessing the
hhh - 10183 fix test failure on sql server 2008
added a call to ` revert ( ) ` in ` OPCPackage . java ` and wrapped the ` verifyZipHeader ( input ) `
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
removed assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to
updated error messages in CGIHandler and added JavaVMCallbackHandler for handling runnable tasks to improve clarity of error messages and ensure runnable execution
added support for additional newline characters in the string to ensure proper handling of additional line endings
changed method signatures and data structures from List to Set in DistBuildService , ServerContentsProvider , and ServerContentsProviderTest to improve performance and
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to optimize performance by avoiding unnecessary
updated verification test methods and added error handling in IncorectBindingPuzzleFixedTest . java and DescriptiveMessagesOnVerificationInOrderErrors
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root
truffle / truffle : remove unused import .
updated JsonObject class to improve data handling to enhance performance and maintainability of JSON operations
updated conditions in SelectChannelEndPoint . java and adjusted HttpConnection . java to check for low resource idle time to ensure correct handling of idle time
fix farmlandblock . iscansustainplant ( ) not call on state and plant . close # 136
added tests for retrieving primary keys and multi - tenant tables in QueryDatabaseMetaDataIT . java and updated the query in UpgradeUtil . java to
added Locale . US to date parsing in HttpCookie . java and created a new class B6791927 . java to ensure consistent date
removed multiple redundant calls to db . close ( ) in DbHelper . java to improve code efficiency and prevent potential NullPointerExceptions
increase timeout in integration test to avoid intermittent failure
[ gr - 10611 ] economyallocator : add phase for tracera to economyallocationstage .
code area keybindings now listen for save _ all and save _ as
refactor ObjectMapper initialization in DrillTest . java to use a static block to ensure consistent line endings across different operating systems
update path handling in NativeEnvironmentRepository to change Windows paths to ensure consistent path formatting across different operating systems
refactored multiple test classes to utilize a private static Application instance and removed unnecessary dependencies to streamline code and improve resource management for the
[ java ] remove record log validation when prepare for new record .
chore : upgrade to v1beta1 , replace groupname with errorgroupname in itsystemtest
make testfuzzoptimizations # testoptimization less aggressive in travis
added a private boolean field ` reverseImage ` and updated its initialization in ` CameraManager . java ` to streamline the code by elimin
refactor condition checks to use ` . equals ( ) ` instead of ` . equals ( ) ` for better readability to improve code cl
fix : mdm match link do n ' t overwrite metadata attribute
updated JUnit imports and annotations in AuthenticationSuccessListenerTests . java to migrate to JUnit 5 and improve test structure
remove usage of new . arraylist ( ) and use indexof ( ) instead .
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated triggerTime variable to use LocalDateTime with default timezone to ensure consistent date formatting across different locales
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle abstract method errors in ` MethodHandleResolver . java ` to improve error
camel - 16400 : camel - core - optimize simple language . simple ( ) to check for valid ognl expression
removed the check for empty ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - 14284 : fixed jcloudspayloadconverter to copy input / output jclouds data
( chore ) camel - test - camel : remove @ ignore from camel - consul
added a new check for ACC _ STRICT access flags on default methods and created a new test class to ensure all methods have the ACC
[ java ] increase connection timeout in channelvalidatortest .
added a new file ` FileExtensions . java ` that defines CLANG _ SOURCES , CLANG _ HEADERS , and C++ _
replaced ` ThreadLocalDateFormat ` with ` ThreadLocal ` for thread - local date formatting to simplify the code and improve performance by elimin
remove deprecate vm option which be use in favor of usecgroupmemorylimitforheap
added displayName property and auto - display name to various classes for better customization to enhance user experience by providing a more descriptive display name for
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a specific exception for early termination processes
removed unnecessary whitespace in the apply function call to improve code readability and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4545 .
[ 1.19 . x ] fix npe in cap dispatcher when parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify exception handling for better code clarity
deprecate submitorderedcompletionservice and mark it a deprecate
modified the length calculation in HyphenationTree to correctly adjust the original length to ensure proper handling of the original length during hystrix operations
increase wait time for register to finish the process .
move simple account registration resource to the same package a the one in the plugins . java file .
update the description of PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to clarify that Java 8
added a boolean variable ` providersChanged ` to the ` ConfigurationManager ` class to track if providers have changed
added a method to handle quote tokens in the SemanticAnalyzer class to ensure proper handling of quoted identifiers in the token rewrite stream
added a null check for the ' name ' entry in the font in FileSystemFontProvider . java to ensure proper handling of missing ' name '
updated type casting and suppress warnings in SolrResourceLoader . java to improve type safety and eliminate unchecked cast warnings
updated boundary condition in Window . java for better boundary handling to ensure proper positioning of the hit component within its parent hierarchy
added null check for appManifest before accessing its target SDK version to prevent potential NullPointerExceptions when accessing appManifest
updated configuration settings and refactored JSON processing in ConfigurationMetadataGenerator . java and CasConfigurationMetadataCatalog . java to improve code clarity and
added userName field and its getter / setter methods to Driver and HiveSemanticAnalyzerHookContext classes to enable user identification during database operations
camel - 14263 : camel - xslt should use factory method to create the xsltbuilder instance
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorTestHelpers , and TestFirstInFirstOutComparator to support
removed redundant variable declarations in multiple test files to streamline code and improve readability by eliminating redundancy
fix npe in coyoteadapter when no context be available
log4j2 - 1343 throughputlogger do n ' t log message if there be no time
replaced the retrieval of JVM version checks with a direct debug build check to simplify the logic for determining if the JVM is in debug mode to
[ scb - 2687 ] fix performance regression introduce by meter detail model
updated logging mechanism to resolve the system property instead of printing to standard error to improve reliability by ensuring the correct logback configuration file is used
added @ NotNull annotations to method parameters in CipherExecutor , CookieRetrievingCookieGenerator , and CasCookieValueManager classes to enforce non - null
replaced BASH _ ESCAPER with SHELL _ ESCAPER in multiple files to standardize command escape handling across different
refactor container usage in tests to use try - with - resources syntax to ensure proper resource management and avoid potential memory leaks
changed the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to align test class with the new naming convention
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a ShieldAddress in RpcApiService to enable sending and receiving the shield address from the wallet
change return type of readConsoleInput ( ) from byte [ ] to String in multiple terminal classes to improve data handling by returning an empty string
updated regex patterns and variable initialization for the sRunFlavor variable in TestStabilityRule . java to improve accuracy in matching platform - specific
updated fragment handling in DefaultSolrHighlighter and added a test for multi - valued fields in HighlighterTest to improve fragment management and ensure correct
modified the tryToLogin method to accept username and password as parameters and updated the return code accordingly to enhance functionality by allowing authentication with specified credentials
updated entity handling logic in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp . java ` to
no functional change - code cleanup - format code
removed the wrapCollection method from the update method to simplify the method call by eliminating unnecessary collection wrapping
added logging and handling for IllegalCurrencyException in BTCEAdapters . java to improve error handling and logging for unknown currencies
do n ' t set clientid on subscription creation , just use the candidate sub name
pdfbox - 4892 : fix typo , a suggest by valerybokov
added support for tenant isolation in multiple test classes to enhance test flexibility by allowing different tenant configurations
replaced ImmutableMap . builder ( ) with direct casting of response value to a return statement to simplify code and improve readability by directly returning the
added a condition to check if ` attrs . size ( ) ` is greater than zero before validating the size of ` attrs ` to ensure that
added abstract methods ` getProjectJdkName ` , ` getProjectJdkType ` , and ` getProjectLanguageLevel ` in ` AbstractIj
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and
added tests for handling user details in GrantedAuthorityEffectiveAclsResolver to ensure proper functionality and validation of user - specific GrantedAuthority values
javaparsertypedeclarationadapter : use getsolvedjavalangobject ( ) instead of reflectionobject . class
added button management logic to return the maximum number of buttons support to ensure the application does not exceed a predefined maximum number of buttons available
updated import statement for AssertEquals from jdk . testlibrary . Asserts . assertEquals to com . oracle . java . testlibrary .
added a new ` MessagePackFactory ` class and modified the ` MessagePacker ` and ` MessageUnpacker ` constructors in both ` Message
added new tag ` is _ desert ` and ` is _ cave ` to the biome tag system and updated the forgeitemtags
renamed the method ` present ` to ` draw ` in multiple screens to improve clarity and consistency in method naming
add check for isHorizontal ( ) before setting BoxLayout and update UIIDs ( ) in ComponentGroup . java to ensure UIIDs are updated
replace DOI _ URL _ PATTERN matcher with matcher in DOIServiceImpl . java to improve clarity and consistency in URL matching logic
updated multitouch handling logic in AndroidInput and AndroidLocklessInput classes to use hasMultitouch instead of instanceof AndroidMultiTouchHandler
[ java ] close commit position counter when it be close in clusteredserviceagent .
added UserSite and UserSiteId classes in the application to support database interactions with UUIDs in the application
http : / / issues . apache . org / jira / browse / amq - 4358 - improve error handle for malformed
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , to workaround that also compart the capacity type .
replace openInput method with fileLength method in NRTCachingDirectory to improve file length calculation for better performance
refactor JavascriptCompiler to improve class structure and error handling to enhance code clarity and maintainability by using final modifiers for better immutability
removed synchronization from UISettings class and modified the store method to use a synchronized block to improve performance by reducing unnecessary synchronization
added a conditional check for native text input and changed the access modifier of the fireDataChanged method from private to public to enhance input handling and
[ hotfix ] [ spannerio ] improve spannerio ' s retry logic when emulator do not support one transaction .
use diamond operator to avoid raw type usage
updated ObjectInputStream to handle short arrays instead of double arrays and added CloneArray class for testing to ensure correct array cloning behavior for different data types
updated nonce retrieval and logging mechanisms in OIDCAuthenticationFilter . java to improve code clarity and error handling to enhance code readability and
added a condition to check for relationship fields in DCInputSet . java to ensure proper handling of relationship fields in the input set processing
added a new column ` CAPABILITIES _ SERVER _ SLOGAN ` to the ` ProviderMeta ` class and updated related methods to
simplified the condition for tinting the drawable and text based on the menu item state to improve code readability and maintainability by
added JUnit ' s Assume annotation and modified error handling in SolrRequestParserTest to improve test clarity and ensure proper exception handling during network
added a check to return early if missing symbol events are missing to improve performance by avoiding unnecessary processing when no symbols are found
updated string formatting in StringHelperTest . java to include additional data entries to enhance test coverage for data handling in the application
added a warning log for empty data providers in the ` Parameters ` class to inform users that the data provider returns an empty array or iterator ,
( chore ) camel - main : replace collections . empty _ map by collections . empty ( )
fix selection style for old map ( freeplane 1.9 . 8 )
updated variable name from ' mass ' to ' restitution ' in PhysicsRigidBody . java to improve clarity by using
added a new file ` AutoFtpActivity . java ` and modified ` FtpHelper . java ` to include a ` IActionListener
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability to enhance code clarity and ensure correct SQL string un
added getter and setter methods for component state in ImageViewer , OnOffSwitch , Component , GenericSpinner , and ImageViewer classes , and updated
added a new class ` RemoteExecutionEnabled ` for serialization and deserialization of boolean values to provide a mechanism for enabling or disabling remote execution
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading methods to use UTF - 8 encoding and added suppress warnings in multiple files to improve compatibility with character encoding and suppress S355
added an assertion to ensure shadow variables are not stale in AbstractScoreDirector to enhance stability by preventing stale shadow variables from being processed
updated the SEMIJOIN _ CONVERSION configuration option from " hive . enable . semijoin . conversion " to " hive . optimize . semi
added ' log ' warning to detect non - java . netty . buffer . bytearray / byte [ ] and non - java . io
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated directory handling in ` FileDisplay
added assertions to verify the presence and existence of the transaction hash in the PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly
schemaregion : deprecate ischemaregion # constructschemablacklist ( ) and rename schemaregionbasictest # testdeletetimeeries
throw illegalargumentexception instead of npe if newformat do n ' t have samplemimetype
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23Pool
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to enable JSON
added a check to throw an exception if creating an index on a view in MetaDataClient . java to indicate that creating an index on a view
added a new ` Website ` class and updated ` PopulatorImplTest ` to include a test for Java Net types populator to enhance
overwrite default locale to prevent failed test when have different system locale ( ! ` ` en _ us ' ' )
log a warning if fml have detect multiple badly download jar file .
updated the assertion in MultiPartParsingTest to use Matchers instead of containsString for sha1sum checks to improve readability and maintainability
added a check for single parameter and updated the passed local list in SimpleExprGenerator . java to ensure proper handling of variable expressions in the parameter
added a volatile boolean field to track the creation of the Vertx instance to ensure that the vertx instance is only created when it is not
updated ` writeAttributes ` method calls to use a single ` NodeModel ` parameter instead of null to improve code clarity and maintainability by
updated log message format from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplay
added a new flag ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` FeedREST
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) ` in multiple test
[ type : refactor ] fix issue with disruptor not be able to register consumer ( # 4369 )
updated the condition for playing sound in GwtMusic . java to ensure sound playback state is correctly checked for both paused and non - paused
added permission _ admin _ SUDO _ AREA to the area check logic in MainCommand . java and defined a new permission constant in Ca
replaced ImmutableMap with HashMap and refactored query options handling in ServerRequestPlanVisitor . java to improve code readability and maintainability by
updated conditional checks in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to use
updated attribute assertions in ResourcesTest to use a pure emoji string to enhance readability and maintainability of test cases
replaced NMTWaitForDataMerge native method with new native methods NMTOverflowHashBucket and NMTMallocWithPseudoStack
[ flink - 20613 ] [ serializer ] migrate javaeitherserializersnapshot to java . lang . typeutils . either
updated the AddressResolverOptions to use constants for default resolv options and added a new method to parse rotation options to improve clarity and maintain
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestR
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML paths from " liquibase / parser / core " to " www . liquibase . org / xml / ns
move commonmimetypelocator to test source so it can be run from other module .
update RepositoryVersionState from INIT to NOT _ REQUIRED across multiple files to clarify the intended behavior of repository version state management
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to enhance the accuracy of schema comparisons in the diff generation process
[ hotfix ] [ test ] migrate testbackwardanoamlyfunctionutils from junit to testng
added a new file ProgressiveJPEGTest . java to implement a graphics testing framework for JPEG progressive rendering to facilitate testing of
updated MaterialLoader to set the " AlphaDiscardThreshold " float and reset material attributes to improve clarity and ensure proper resource management during material loading
improve error message when native - image building on window
added a null and empty check before setting the size in the Label class to ensure that the code does not attempt to set the width and height
modify the method call from ` readVarInt ( ) ` to ` readVarInt ( ) % 1 _ 000 _ 000 ` to ensure
made the PushUtils class final and added a private constructor to prevent instantiation and ensure immutability of PushUtils class
replaced the calculation of ` length ` using ` bounds ` with a direct call to ` getLength ( ) ` from ` curConfig ` to
removed casting to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify the code by eliminating unnecessary type casting
updated the URL parameter in the load method from " . * csv " to " ( ? i ) . * csv " to ensure compatibility with
added accessibility announcement based on duration and app state in TaskbarStashController . java , updated SDK version in InvariantDeviceProfile .
replaced ` Args . getInstance ( ) . getMyKey ( ) . getNodeId ( ) ` with ` RefreshTask . getNodeId (
add targetjdk1.5 to make sure target only jdk 1.3 and jdk 1.5
use mockedconstruction in test instead of powermock
added console output streams for standard error and error in TestSchemaToolCatalogOps . java to enhance visibility of output and error during tests for better
added DFSClient parameter to multiple constructors of FanOutOneBlockAsyncDFSOutputSaslHelper to enable managing the DFS client for encryption
updated MongoQueryMethod to include RepositoryMetadata as a parameter to enhance query resolution by associating it with repository metadata
refactor to make it easy to add support for custom entity resolver
updated import statements in MetaDataEndpointImpl . java to include specific static imports for various database metadata classes to improve code clarity and maintainability by
updated the ALLOWED _ REPEATED _ DEADLOCKS constant from 5 to 10 and added a retry interval for deadlock attempts to
renamed variable ` xl ` to ` xAxis ` and updated related method calls in ` BarChartActivity ` and ` LineChartActivity1 `
added methods to validate character names and handle printable characters in FsUtils . java to enhance security by ensuring only valid system names are processed
rename static method selenide . in ( ) to selenide . using ( ) for clarity
( chore ) camel - maven - plugin : add processpluginconfiguration to defaultmaven request
fix potential divide - by - zero error in java . net . httpclient
test : fix itystemtest to work in both src / test and src / resources
updated return values for " STUB " in ModeledConnectionRecord and added methods to retrieve the remote host in AuthenticatedUser to improve connection
[ ds - 3762 ] add admin permission to community list request
added AtomicInteger to track longCompactionThreadCounter and shortCompactionThreadCounter for thread naming to improve thread naming clarity for better tracking of
updated package name retrieval in WallpaperChooser to utilize resource resources to improve flexibility and maintainability of package name management
updated the method for retrieving players in a plot to filter players in the plot visibility to improve code clarity and maintainability by centralizing player
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity files to improve code organization and maintainability
refactor MlibOpsTest to improve test coverage to enhance reliability and maintainability of the code
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test for expected properties in Scheme
simplified key and initialization vector retrieval in UploadFileOperation . java to streamline the key and initialization vector handling for improved efficiency
[ flink - 243688989 ] [ test ] add stability annotation for workprofiletest
removed a conditional check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks for bucketing
replaced ` setCursorPosition ` method with ` input . setCursorPosition ` to ensure the cursor position is updated on the correct input object
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced new classes ` LockFreeBucket _ FinalFields
add tpstats command to list of pending task in the thread pool
updated max bitrate retrieval to include user preferences in ExternalPlayerActivity and PlaybackController to ensure correct bitrate settings are applied based on user
updated ZipkinHttpSpanExtractor to include conditions for traceIdIsMissing and spanIdIsMissing , and added a new test for tracing as
make getuserpaymentaccounts ( ) abstract to avoid unnecessary hashset creation
fix checkstyle issue in util / fluttercompletioncontributor . java ( # 746 )
added a call to set the project in the LauncherUtils class to ensure the project is correctly configured for use
updated JsBundle , JsBundleBuilder , JsTestScenario , and JsLibraryBuilder to include ProjectFilesystem parameter to ensure that the build root is
updated multiple envelope and databinding classes for consistency to improve code maintainability and readability across the project
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future updates
removed the VersionConfig interface and modified the VersionBuckConfig class to use ImmutableSet instead of a standard version universes map to simplify the
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException when binding shadow classes
changed the access modifier of the validateTypes method from static to public and updated the exception message from " AST " to " LST " to
fix : update gapic - generator - java with mock service generation fix ( # 130 )
added SLF4J logging imports and a static final logger instance in SimulationStatus . java to enhance logging capabilities for better debugging and monitoring
updated VERSION _ POSITION _ Y and VERSION _ FONT to reflect the new version position and font size to reflect changes in the application ' s font
modified notification addition in UserInterfaceComponentImpl to run asynchronously to ensure thread safety when adding notifications
updated the documentation for the ` ReturnsElementsOf ` method in the ` AdditionalAnswers ` and ` ReturnsElementsOf ` classes to improve clarity
corrected the spelling of " non - string " in the error message for non - partition columns to improve clarity and accuracy of error
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` for validating document retrieval and indexing to ensure the
added a method to retrieve the version code in MainApp and updated references in FeatureList and WhatsNewActivity to utilize this method to
camel - 14284 : fixed issue with ambiguous request method invocation . thanks to benjamin for the patch .
updated references from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added methods to manage and check if a buffer is owned in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper disposal
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through
refactor JerseyClientConfiguration class to improve code readability to enhance maintainability and facilitate future updates
int - 1481 remove unnecessary import statement for characterstreamreadingmessagelistener and characterstreamwritingmessagelistener
updated variable names in tests for consistency and clarity to improve code readability and maintainability by using more descriptive variable names
added methods to adjust column and row counts in StringDict and Table classes to ensure proper handling of empty strings and improve data integrity
add container . withcustomizer ( ) ... to allow customization of container . createcontainercmd ( )
changed logging level from info to error in MediaInfo . java and updated exception handling in RendererConfigurationTest . java to improve error handling and ensure
added schemapattern option handling in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enable dynamic configuration of the schema pattern for data source
[ bcjsse ] return an empty array if id be null , to avoid npe .
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve readability and maintainability of bitmap creation logic
refactor Base64 class to improve encoding efficiency to enhance performance and reduce memory usage
sulong : add miss fallback method to llvmglobalcontainer .
alexeibarantsev : unignoring a test that fail on iphone .
updated imports in FlowBuilder and FlowJobBuilderTests to improve code clarity and maintainability
updated the ` AttributeResource ` and ` StyleResourceLoader ` classes to use an ` int ` for resource ID instead of ` ResName `
fix tl path resolution for context in defaultdockerclientconfig ( # 2365 )
make simplereactiveelasticsearch test use @ before instead of @ after
modified the handling of type assignments in ` ppp Attr . java ` and added a new class ` T6450290 . java `
added logging level configuration to ` LoggingFlags ` and a setter method in ` LoggingOptions ` to allow users to configure different logging levels for better
added logging statements to various classes for tracking database item deletions to improve debugging capabilities and facilitate easier debugging
added file management methods in FileActivity , FileDisplayActivity , and PreviewImageActivity to handle file options for improved user experience
added methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` for handling operations and matching logic to improve code modularity
modify numPredictiveAppCols calculation to account for phone type to ensure correct selection of app columns based on device type
updated StringUtils to use UTF - 8 encoding for string conversion to ensure proper handling of character encoding in string processing
added a new class ` RequestMatchers ` with methods to handle multiple request matchers to provide utility functions for validating request matchers in security tests
ggb - 220 do n ' t allow selection of input box in applet mode
update position calculations in the ProgressBar to include bgBottomHeight and bgRightWidth for proper positioning to ensure proper positioning by accounting for
[ native ] fix json file in presto - on - spark native runner
added ` extra _ L * ` and ` extra _ * ` fields to the ` BruteArgumentMoverHandle ` class and updated
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only occurs when the handler is invalidated
update layout calculations for landscape and landscape orientations and modify metrics tracking in the Workspace class to improve layout accuracy and ensure proper metrics are
added a condition to check if the robots . txt file is " / robots . txt " in the URL validation to ensure proper handling of robots
change nb - javac icon to a static icon , not a toolkit icon .
replace " continue " with " createWorld " and change " close " to " return " in the AdvancedGameSetupScreen class to improve cl
updated UDFOPDivide . java to include null check for decimal values and added a new test class TestUDFOPDivide
refactor code formatting and improve readability in AbstractJob , FlowJob , and StopAndRestartFailedJobParserTests to enhance code clarity
updated BeanDefinitionBuilder to use constructor arguments for authentication request matchers in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to enhance flexibility in
added onDestroy methods to unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper resource management and prevent potential memory leaks
updated references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure the correct reference to
refactor multiple Java classes for improved consistency and organization to enhance code maintainability and readability across the project
added a method to set the request timeout in the RaftServerConfigKeys to ensure the request timeout is correctly configured for the Raft server
updated logging level from error to debug and modified the handling of sealed tsFileResources to improve clarity of error messages and streamline the
added system properties to the model source setting in MavenModuleLoader . java to ensure system - specific properties are correctly set for the model loading process
added metrics for readiness checks in multiple classes to track the status of readiness checks for improved performance monitoring
add the animated torch model to the client , not the client
added null check before closing the writer to prevent potential NullPointerException when closing the writer
added a method to retrieve Hive configuration from a directory for Tez configuration to streamline configuration setup for testing purposes
added a new link for muting users in FeaturesActivity to provide users with information on their maintenance status
added initialization property for direct method handle in System . java to disable direct method handle functionality in reflection operations
hbase - 25813 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantssizeregionsplitpolicy
[ hotfix ] [ yarn ] fix npe in yarnclusterdescriptor when the plugins dir do n ' t exist .
hunspell : use getword ( ) . getpronunciations ( ) instead of getpronunciations (
removed unnecessary newline character from JSON string definitions in JsonUtilsTest . java to simplify test output formatting for better readability
added data to the compose extra for tweet ID in TimeLineCursorAdapter and TimelineArrayAdapter to ensure the correct tweet ID is utilized
log a warning when the underlying ring buffer data be lose for a reliable topic .
do n ' t throw ioexception when class be miss to analyze
replaced the import of Key with PublicKey in KeyFetcher . java to align with the new security standards for key management
updated the declaration of the ` isIncompatible ` variable in ` DLNAResource . java ` to ensure compatibility with the latest API changes
updated the ` createAccount ` method to use ` AccountCreateContract ` instead of ` Account ` to ensure compatibility with the latest contract requirements for
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4358 - fix for amq - 4
enable off - heap format by default and update default star tree format version to off _ heap to improve index performance and ensure consistent star tree format
limit the length of the title to 2048 characters before setting it to ensure that the title does not exceed a valid length to prevent potential issues with
replaced direct initialization of the ` previewPanel ` variable with a getter method in ` JColorChooser ` to improve code readability and maintain
changed log level from info to debug for extension checking in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during extension checking
added a null check for the reusable bitmap before setting inBitmap options to avoid potential NullPointerExceptions when accessing the reusable bitmap
added layoutParams import and getter method in FakeView . java to provide access to layout parameters for testing purposes
added a check to prevent an IllegalStateException when a Cursor is already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java
pdfbox - 4892 : search for kids / pages in a page , a suggest by valerybokov
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private field ' ts ' with getter and setter methods to the Message class to enable tracking and management of the timestamp timestamp in the message
refactored genericexceptionmapper and weblogicexceptionmapper to use a utility method
changed the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove all legacy parameter from / isochrone hint , not only from request
updated import statements and class visibility from public to package - private in multiple test files to enhance encapsulation and restrict access to test classes
refactor CSRF handling into a separate method for clarity to improve code readability and maintainability by encapsulating CSRF attribute setting logic
[ fix ] eclipseloaderpatchertransplants fail to load shadowclassloader in the bootstrap mode .
[ jbrules - 3514 ] add numericdisabled property to decision table , and use it in the parser
change log level from info to debug for default value logging in HiveConf . java to reduce log verbosity when debug level is not enabled
added null checks and refactored joystick button retrieval in Lwjgl3Controller . java and Lwjgl3
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest files to ensure compatibility with the latest Cucumber library structure
refactor the savePortForward method to use a local HostDatabase instance to improve code readability and maintainability by reducing redundant checks
added a new property ` SHOULD _ SNAPSHOT _ DATA ` to ` GlobalConfiguration ` and its getter / setter methods to control whether snapshot
refactor SyncedFolderObserver to add a check for a non - null file before scheduling the job to improve error handling and avoid unnecessary job
refactor LocationMarshaller to improve code readability to enhance maintainability and facilitate future updates
removed trackpad motion event checks in ` StatusBarTouchController . java ` and streamlined swipe handling logic in ` TouchInteractionService . java
refactor VectorReader interface to a simpler class structure to improve code readability and maintainability by reducing redundancy
updated import statements to replace ` ArgumentMatchers ` with ` Matchers ` in multiple test files to improve clarity and consistency in mocking framework
refactor path handling methods by replacing ` getRelativePathName ( ) ` with ` getRelativePath ( ) ` across multiple classes to improve clarity and consistency
updated the ` RecordReader ` and ` RecordReaderFileConfig ` classes to implement ` RecordReaderConfig ` and modified related method signatures to enhance
added a null check for the extractor before instantiating components from annotations in ControllerMethodInvoker . java to ensure that the extractor is only instantiated when
cloudstack - 5892 : set default max secondary storage for volume and vm ( # 5892 )
[ 1.19 . x ] fix inventory effect do n ' t work correctly on screen .
deprecate cold _ reads _ to _ omit and remove it from uncheckedoptions
added call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent memory leaks
[ issue # 3640 ] fix the issue that popmessageprocessor do n ' t report message count when retry ( # 3641
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to mark the test as ignored due to date comparisons
renamed ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated related
added upgrade request and response handling in UpgradeConnection and ClientConnectTest classes to ensure proper connection and response tracking for WebSocket upgrades
added timeout support and timeout functionality to AndroidImplementation to enhance network reliability by allowing customizable connection timeouts
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods in ` GitblitClient ` and ` RepositoriesPanel ` to
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL syntax can be correctly parsed and de
updated file assertion logic to differentiate between writable and executable files based on the root directory to improve accuracy of file accessibility checks for different operating
added logging for thread group and thread per group configuration in FixedThreadExecutor . java to improve monitoring and management of thread pools based on configuration
added null check for the field before checking its lowercase in AbstractChangeGenerator . java to prevent potential NullPointerException when field is null
replaced instances of ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to standardize event listener implementation and improve maintainability
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an override for the close method in DeflaterOutputStream to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` that tests JVMTI ' s GetSystemProperty functionality to ensure that JV
do n ' t generate a proxy for @ beandefinitioninject when there be no @ beandefinition
* jme3 - export the camera control in the jme3 module instead of the jme3 module
refactor PopupNotificationPanel to utilize SwingUtilities for window ancestor retrieval to improve code readability and maintainability by reducing redundancy
replaced several exception classes related to ambiguous no - instance exceptions with an inference exception to simplify exception handling and improve clarity in the inference process
added a method to retrieve the feature value to provide access to the feature value for external use
change parameter type from int to long in the after method to ensure compatibility with larger time values
added ` onBuild ` and ` executionDriver ` fields with their getter and setter methods in ` ContainerConfig ` and ` Info ` classes to
updated icon selection logic in Toolbar . java and adjusted positioning in FlowLayout . java to accommodate RTL layout to enhance visual
added support for enabling position increments in StopFilterFactory to enhance flexibility in processing stop words based on user configuration
added internetAddress field to EmailsTest and SystemErrorEmailReportTest classes to ensure proper email sending to the TEAMMATES Admin
added a new boolean variable ` mTryShareAgain ` and set it to false in ` FileActivity . java ` to manage sharing behavior during
added support for determining the tty name based on the version of the Jansi native PTY to ensure correct tty name retrieval based on the
replaced variable ` bytes ` with ` bytesSize ` for better clarity to improve code readability and maintainability by using a more d
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test reliability by ensuring async tasks
refactor API URL constants to use a base URL constant instead of hardcoded values to improve maintainability and reduce hardcoding of API URLs
increased sleep duration from 2 seconds to 1 second and added startup attempts for Kafka container to improve responsiveness during reading operations and ensure
updated SearchResultMatcher to use is ( itemName ) instead of anyOf ( ) for better readability to improve code clarity and maintainability by
added SSL trust management functionality to OkHttp . java to enhance security by trusting all certificates for improved security
refactor long - click button handling in NavbarButtonsViewController and TaskbarNavButtonController to utilize AssistUtils for assistant
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` for field _
added stdout and stderr fields with nullability in ShellStep . java and improved null safety check in Escaper . java to enhance code
increase timeout to reduce test flakiness
updated methods in AbstractDatabase to use objectName instead of tableName and schemaName for escaping database objects to improve clarity and consistency in object naming conventions
added a boolean field ` inputChanged ` to track input change status in ` MaterialRenameDialog . java ` to ensure the input field reflects
added a test for state change to other instances of same display in ShadowDisplayTest . java and implemented the setState method in ShadowDisplay . java
add directinvocationservice interface to allow call direct method from a service bean .
make sure xxx ( x | y ) work for web
updated SQL query construction to include conditional checks for PostgreSQL server version to ensure compatibility with PostgreSQL versions prior to 9.0
[ hotfix ] [ runtime ] fix checkstyle violation in queuechannel
modified the ` getPathsFromResource ` method to remove the ` IOException ` declaration and replace ` jarPath ` with ` pathUri ` to
added support for monitoring and monitoring node applications in the CollectorServer to improve application monitoring and context management for Jenkins applications
updated attribute resolution logic in HeadersBeanDefinitionParser and added new tests in HttpHeadersConfigTests to ensure proper handling of disabled and defaults - disabled attributes
hbase - 25819 protobufreader do n ' t throw eofexception if the first byte be negative at the beginning of the file
removed duplicate destroy ( ) calls in DefaultApplicationDeployer . java and added shutdown ( ) method in NacosRegistry . java to ensure
camel - mybatis - should fix switch / cases indentation see camel - 14540
update status code handling in GoAway classes from SPDY V2 to SPDY V3 to ensure proper processing of GoA
refactor JSON serialization and deserialization in AuditEventTests to improve readability and maintainability of the code
added checks to prevent rounding errors in the interpolation method and changed return value to 0 to improve performance by avoiding division by zero errors
fix path so it ' s consistent with the rest of the file system
refactor how the dx executable path is added to the builder to improve readability and maintainability of the code
added multiple assertions for ` PointRangeQuery ` instances in ` TestPointQueries . java ` to ensure type safety and correctness of query types
hbase - 25823 testhfilecleaner # testarchive should use namespace / table / region instead of hconstants . hfile
fix issue # 718 ( file transfer do not display total file length at the receiver side ) report by vincent lucas .
do n ' t swallow exception in jedisclustercommand . execute ( )
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to enhance the flexibility of
modified the initialization of HashMap and its types in QMap benchmark classes to improve performance and readability of the map operations
added a new HashMap instance named G _ SCH _ B in HybridPlotWorld . java to initialize the graph structure for hybrid plots
added null and empty checks for fields and refactored identifier handling in GroovyEngine . java to improve code robustness and ensure proper handling of
make sure the angle be not drawable after save a new one .
added configuration options for server socket timeout and TCP keep - alive in HiveConf . java and modified server transport initialization in HiveServer . java to
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to clarify the method ' s purpose in handling
no effective change - remove unused import
replaced Joda - Time imports with lambda expressions in RealtimeSegmentRelocator . java to improve code readability and leverage Time
createvpc : do n ' t return the success value of startvpc ( ) if the return value be null .
update windowAlpha calculation to ensure progress is non - negative and modify shapeRevealProgress condition in FloatingIconView . java to improve st
updated schema version error message from 3.2 to 4.0 in SecurityNamespaceHandler . java to ensure compatibility with Spring Security 4.0
modified multiple assertion classes related to Protos to improve consistency in naming conventions to enhance code readability and maintainability by eliminating redundant
( chore ) camel - disruptor : mark instance field final
added a new test class TestConfigureUDF and modified ExprNodeGenericFuncEvaluator to handle configuration retrieval to improve test coverage and ensure proper execution
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve accuracy of UTF - 8 string matching
updated logger calls to use direct calls on the internal logger instead of using a local logger variable to improve code readability and reduce boilerplate
replaced updatePurgedShardNodes and updatePurgedShards methods with deletePurgedShards and update
added support for a new language module " 17 " and " 17 - preview " in the JavaLanguageModule to enable support for a specific language
make fileappenderresiliencetest wait for compression job 30 second
[ hotfix ] [ runtime ] fix assertion in volatilereadnode
added a method to retrieve an unmodifiable list of steps and adjusted formatting in the getStep method to enhance thread safety and readability of the code
removed unused ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and ` contractAddressBase58 `
refactor code to store currency pair in a variable before checking its existence to improve code readability and maintainability by reducing redundancy
updated LongTaskTimer to use baseTimeUnit ( ) instead of TimeUnit . NANOSECONDS to ensure accurate duration measurement with base time unit
[ flink - 20610 ] [ euphoria - examples ] fix bug in reducebykeytranslator when partitioner be
changed variable types from String to CharSequence and updated logic for retrieving color values and entries to improve type safety and enhance code readability by using more
rename databaseversionhandler to databaseversionhandler and use systemproperties instead .
added a constant for the maximum number of tweet replies in the conversation to ensure that the query does not exceed the defined maximum number of tweetes
updated the refresh interval in AbstractCachedLDAPAuthorizationMapLegacyTest from 1 to 2000 to allow more time for data access by allowing more time for
http : / / issues . apache . org / jira / browse / amq - 4358 - fix checkpointing of partially ack
fix checkstyle issue in util / glowserver . java ( # 734 )
added a ` grow ` method and refactored the buffer resizing logic in ` DataIO . java ` to improve code readability and
added import statement for DataOutputStream in GdxSetup . java to enable writing operations for improved data handling
camel - 14284 : added getsubmittedfilename ( ) to the attachmenthttpbinding to avoid npe
added markReadForLoad ( ) method to LauncherFragment . java to ensure that the fragment is marked for read operations for loading
added ClassNotFoundException to the main method signature and modified exception handling in JarInstrumentor . java to improve error handling for negative array size exceptions during the
added a method ` checkForSpillPossibility ` to handle partition flushing in ` HashAggTemplate ` to improve error handling for out - of
changed the variable declaration of ` dsName ` from ` info . info . getDocStoreSegment ( ) ` to ` dsName ` and updated
added a default name ID format to the supported name formats list in SamlProfileSamlNameIdBuilder to ensure that the default name ID format
added redirect and error handling in ChangePasswordPage . java to improve user experience by preventing aborted password changes
updated the closing brace formatting in Deadlock2 . java to improve code readability and maintain consistency
added getmaxidletime ( ) method to the neoreceiver mbean to provide access to the max idle time of the receiver .
deleted the FontScalingTest . java file to the font size validation logic is no longer needed in the project
added validation to ensure both begin and end dates are valid and adjusted time calculations based on filter values to improve error handling and prevent invalid time values
added a check to return early if the number of vectors is less than zero to prevent unnecessary processing when there are no vector available
test : migrate executablereftest to junit 5 ( # 4539 )
added null checks for view and glassPane before setting them to null in JLayer . java and created a new test class bug699
camel - 16400 : added wiretap eip to configure eip to wiretap . thanks to benjamin for
change access modifier of action method from public to protected to restrict access to the method for better encapsulation
pql : add topn option for limit - to - top - n ( support by default )
[ java ] remove redundant aerondirectoryname variable in test to reduce flakiness .
fixed - rbatch . ping ( ) and rbatch . ping ( ) method should n ' t be call if connection be already queued .
replaced InputStream with URL for configuration variable handling and removed the LoopingByteArrayInputStream class to streamline the configuration variable loading process and improve resource
updated the model creation to use the criteria device from ` defaultDevice ( ) ` instead of ` defaultDevice ( ) ` to ensure the model
removed the onCreateOptionsMenu method and overridden onMenuItemSelected method in SimulationViewer . java to streamline menu initialization and item selection handling
pdfbox - 4071 : fix typo find by codespell on fossies . org
make the hawtio home directory configurable via system property ` ` hawtio . dirname ' '
added condition to handle empty comments and whitespace in Space . java to ensure proper handling of empty comments and whitespace values
changed ` mClosed ` , ` mActualDictionary ` , ` mNativeDict ` , and ` mStorage ` fields to be ` volatile
added printStackTrace ( ) method to Throwable for better error handling to improve debugging by providing stack trace information when exceptions occur
move customitemdroptest to integration and fix it
added handling for partition existence in DDLTask and updated related classes to support this feature to ensure partitions are only created if they do not already exist
improve nfsstorageresourceloader performance by use bufferedinputstream instead of bytebuffer
[ java ] remove unused local control stream id for echoservicenode and basicauctionclusteredservicenode .
add ogc : spatial _ operators element ( fes : spatial _ operators ) to support spatial operator
added import for LuceneTestCase and annotated BasicDistributedZkTest to indicate a pending fix for SOLR - 2161 to address
modified the parsing logic in Http11InputBuffer . java to include additional conditions for preface matching to ensure proper handling of parsing requests based on
[ java ] disable cluster in progress reporting by default .
updated HBase cache configuration keys to support multiple keys instead of multiple keys to improve flexibility and maintainability by allowing multiple cache keys for job properties
updated record handling in JSONRecordReader to use a running record count variable to improve clarity and maintainability of record tracking logic
filter out year information from merged items in CategorizationFragment to ensure only valid year information is processed in the application
updated drawColor method calls to use Mode . CLEAR instead of 0x00000000 to improve consistency in color representation across multiple classes
removed rendering method check for OpenGL 2.0 in Mesh . java to avoid runtime exceptions when using render methods with OpenGL ES 2.
added ActionContext import and set context in BackgroundProcess . java to ensure proper context is set for invocation handling
updated methods in BaseSemanticAnalyzer and QBParseInfo to include database name as a parameter to enhance table name handling by prepending the
added connection timeout configuration in TestConnections . java and changed the ' count ' variable in StubConnection . java to be final in StubConnection .
added multiple assertQuerySucceeds statements for the " approx _ percentile " function in TestHiveAggregationQueries . java to ensure that
updated DEFAULT _ IDLE _ TIMEOUT from ZERO to DEFAULT _ IDLE _ TIMEOUT and changed idleTimeout and idleWriteTimeout to DEFAULT _ WRITE
updated the method to retrieve shares using the user ' s platform account instead of the local account to ensure compatibility with the current user ' s account
updated Inet6Address and InetAddress enumeration to use generics and added null checks for scope _ ifname in deriveNumericScope method to improve type safety
refactor PlaybackControlView methods to use a new setButtonEnabled method for enabling and disabling buttons to improve code clarity and
update parameter names in Session and Token classes for consistency to improve code readability and maintainability by using more descriptive variable names
change from getTransitiveClasspaths ( ) to getImmediateClasspaths ( ) in DefaultJavaLibrary to ensure that the correct classpaths are
updated the default value of the UseExceptionProbability variable from true to ___ _ to allow for more flexible exception probability configuration
modified the assignment of newPlateColor based on icon type and added conditional color conversion based on whether the icon is themed to improve visual
guacamole - 5 : remove mysqluser . touserwithblobs ( ) and use userdirectory . init ( ) instead .
added " centre " alias to the aliases list in Middle . java to support center - related functionality in the application
added DirectUpload class and inject method in CommonsApplicationComponent to enable dependency injection for managing uploads
adjusted spacing for left and right axes in BarChartActivity and BarLineChartBase , and improved code readability in BarChartRenderer
added additional Java ABI variants to the flavors set in AndroidLibraryDescription . java and JavaLibraryDescription . java to enhance functionality by allowing
added operation event status to request parameters in OnlineHubService . java and changed the services list from final to an ArrayList in CompositeLogService
added debug logging for parameter annotations and introduced a conditional check for visibility annotations to improve debugging capabilities and ensure annotations are added if they do not exist
( chore ) camel - jms : cleanup duplicate @ setup / @ teardown method
modified the classpath handling in SortedArrayStringMapTest by introducing a variable for the process to improve code readability and maintainability by redu
updated file path handling in PackageResourceLoader to include a resource separator to ensure consistent file path formatting across different resource paths
refactor methods in DataSet to remove unnecessary ' this ' reference and improve clarity in method calls to enhance code readability and maintainability by
added JUnit @ Ignore annotation to WorkProfileTest . java to mark the test as ignored due to issue b / 243855320
escape percentage characters in the error message string and add a test for it to improve readability and provide clearer error reporting for exceptions
fixed - hibernate . jcachemanager . geturi ( ) throw npe if jcachemanager . getcachemanager ( )
fix log level of commandcontext . close ( ) for actitaskalreadyclaimedexception
added an initialization block for ALPNClientConnectionFactory in HTTP2Client . java to ensure ALPNClientConnectionFactory is properly initialized within the HTTP2
write base value instead of value for entity property
fix ( speaker ) : check thing handler initialization before call playnotificationsounduri
increased the timeout duration in await statements in ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest from 500 milliseconds to 5 seconds
changed log level from info to debug in LightThingHandler . java to provide a clearer error message when the effect light type cannot be determined
limit async - job execution thread pool to be 2 / 3 of maximum db connection limit
updated the ` smartNullPointerException ` method to accept an ` Object ` parameter and improved error messaging to enhance clarity and usability by
changed the parameter name from ` Frame ` to ` DataFrame ` in the ` generate ` method and removed unnecessary type casting to improve code clarity
removed redundant lines in package - info . java and module - info . java files to streamline code for better readability and maintainability
fix orc file format for empty orc file
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enhance functionality by allowing
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
update calculation in FinderPatternFinder and modify test parameters in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to improve
removed redundant checks for leadingIncludePaths in PreprocessorDelegate . java to simplify the logic and improve readability
fix potential npe in stringtemplate . matrixvectormultiplicationshouldusebrackets ( )
add $ $ x and $ $ x for find , $ $ x and $ $ find and $ $ findall to make it easy to
fix e - ac3 output to 48000 by default
patch from jon hermes , review by brandonwilliams for cassandra - 1454
updated the target value from 600000000 to 900000000 in HighDimensionsTest . java to adjust the scaling factor for improved performance
fix a bug in simpletypegt where split with a value of 0 would cause an indexoutofboundsexception
added a new test class ClassPathXmlJobRegistryContextTests to validate job retrieval functionality to ensure that the job registry properly locates and handles
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 : camel - restlet should not be use in producer get / users / ... restlet endpoint
camel - 15836 : camel - log4j2 - remove showout from camel - log4j - should not use showout
refactor code to use a new method ` writeChromeTraceMetadataEvent ` for creating ` ChromeTraceEvent ` instances to improve code readability
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to avoid
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout handling and improve image processing accuracy
replaced direct timestamp handling with ruby timestamp methods in Event . java and JrubyEventExtLibrary . java to improve timestamp management and streamline
added a check to return the resource if it does not already end with a slash and a corresponding test case to ensure that the application correctly handles
updated the name handle in ScriptFunctionImpl from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _
refactor variable names and logic in JEditTextArea for clarity and functionality to improve code readability and maintainability by using more d
fix npe in graphdecoder when callerloopscope be null
test : migrate sniperprettyprinterjunittest to junit 5 ( # 4342 )
refactor URLOutputStream instantiation to use try - with - resources and update exception message assertions to use equalToCompressingWhiteSpace to ensure proper resource
added multiple @ Entity annotations to Mail . java to enable database interactions and improve entity management
updated default values for tablespace and added a new command parameter for includeTablespace to ensure that the tablespace settings are set to true and
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for external usage
added logic to clear empty JSON data in ScanBatch and created a test for empty JSON directories in TestJsonReader to ensure proper handling of empty
updated failure comparison logic to include custom name in failure messages to enhance error reporting by providing more informative messages when the custom name is not null
added a LIB _ PATTERN pattern and modified the conditional check in LibUtils . java to improve clarity and ensure proper handling of CUDA libraries
updated exception handling from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages and PackageHelper to improve error handling
hbase - 26969 add check in masterfilesystem to avoid write out of file system in safemode
updated error message format in TranslatingJavacPhaseTracer . java to provide more detailed context when loading TracingTaskListener fails
( chore ) camel - maven - plugin : remove unused cache
fix update of presence status when connect to a jabber account .
remove unnecessary method from servletcontextdetails . withresourceandparams ( ) - it ' s not use anymore .
added a new integration test class for fetching account information to ensure the PollingAccountService correctly retrieves account information from the BTCE exchange
added mouse wheel functionality to vt320 and VDUInput classes to enable handling of mouse events for improved user interaction
refactor library path handling in Natives . java to improve code readability and maintainability by avoiding repeated calls to getExtractionDir (
no effective change - remove @ columnhstore
fix ( demo ) : add player skin flag to metadata index
make loadbalancerwithservicetests use master url instead of hardcoded test
make sure entryeventgetmember return a non - null member to avoid npe .
replaced ` System . getProperty ` with ` AccessController . doPrivileged ` for retrieving the operating system version to enhance security by using ` AccessController ` for
added a new configuration constant for the freemarker suffix and modified fileSuffix initialization to allow dynamic configuration of the file suffix based on the
http : / / issues . apache . org / jira / browse / amq - 4348 - fix hashcode computation in selectm
added animation callback and made variable declarations final in ToolbarPanel . java to improve code clarity and ensure immutability of variables
replace ` bindConditionally ` with ` bindWhen ` for caret binding in ` StyledTextAreaVisual . java ` to simplify binding
added ` CxxBuckConfig ` and ` declaredPlatforms ` fields to multiple classes and updated related methods to utilize these fields to
refactor ` JpaCountQueryCreator ` and related classes to use ` ParameterAccessor ` instead of ` SimpleParameterAccessor ` to enhance code
added a null check for the passwordAttribute before setting it in LdapAuthenticationProviderConfigurer . java to avoid potential NullPointerException when the passwordAttribute is
added array handling in DataUtilities to return a default value for byte and String arrays to ensure correct initialization of default values for byte and String arrays
modified SSL engine creation logic to handle null address cases more gracefully to ensure correct host name verification when address is null
updated assertions in TestFSTableDescriptors to use greater than or equal to improve clarity and correctness of cache hit count validation
simonstewart : delete all cooky by name , not only by path
added a flag to track the end of the launcher transition and modified the conditions for recreating controllers in AbsSwipeUpHandler and Recent
added " < meta charset = \ " utf - 8 \ " / > " to HTML HTML structure to ensure proper handling of special characters in
refactor methods in IndexReader to improve code readability to enhance maintainability and facilitate future updates
increased the maximum length of statistics key prefixes from 200 to 150 and simplified the path separator handling across multiple classes to improve performance and ensure
removed an unnecessary line of code in BasicComboBoxUI . java and added a new class bug6337518 . java to address a bug
updated TestRandomAccessBuffer . java for improved test coverage to enhance reliability of random access buffer operations
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added HomeContentProvider imports and notifying changes in multiple services to streamline content updates by utilizing the notifyChange method
added a new boolean variable ` mStayPressed ` and refactored methods in ` BubbleTextView ` and ` Launcher `
updated the ` getFallbackResponse ` method signatures to include an ` Throwable error ` parameter across multiple classes to enhance error handling by providing more context
removed the condition checking the ` env . _ compile _ only ` flag in the ` DumpBytecode . java ` file to simplify the logic
added null checks for tags before accessing their lengths in ChannelUri . java to avoid potential NullPointerExceptions when accessing tags
updated JAVA _ REGEX _ SPECIALS string and modified test methods in RegexpUtil and TestSqlPatterns to improve regex pattern handling and ensure correct functionality
added functionality to update and restore the title of the action bar in FileActivity and FileDisplayActivity to ensure the action bar title reflects the
updated conversion logic in PythonDslProjectBuildFileParser and added a new test for concat list functionality in ConfigSettingIntegrationTest to ensure correct
updated the schedule hour from " * " to " 0 " in CleaningService . java to allow for a zero hour for the scheduling period
refactor TransactionalValidationListener to handle partitioned tables and improve table path retrieval to enhance data integrity checks and improve error handling during partition retrieval
added a new annotation to the SnapPuller class to enable polling functionality in the replication process
changed the data type of generatedKeys from int to long and modified SQL execution logic to handle auto - increment functionality to ensure accurate key generation and
simplified the retrieval of the proxy object in the SimpleReferenceCache to improve code readability and maintainability
update test error messages from " no inlineable " to " failed to inline " across multiple files to improve clarity and accuracy of test failures
( chore ) camel - web - client : increase default keepalivetimeout to 10 and change threadpool name to be esh
deleted the HttpTestAccount001 . java file to the test class was deemed unnecessary or redundant
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and refactored tests in ` DispatcherTest . java
camel - 2640 fixed the issue that camel - cxf do n ' t support cxf message data format .
added handling for the ' ~ ' character in ClientUtils . java to improve functionality for user input handling
camel - slack : use java . time . duration for the consumer delay in camel - slack
fix the harvesting drop list not be able to drop a block . close # 1193
updated layout constraints in TranscodingTab . java and modified JCheckBox string concatenation in TranscodingTab . java to improve layout responsiveness and
added a new file ` bug8057791 . java ` to implement and test the Nimbus Look and Feel in a J
updated flag assignments in LambdaToMethod . java and introduced a new interface LambdaInterfaceStaticField . java with static field definitions to improve clarity
[ besu ] fix npe when engine api subscription be unavailable
changed the condition from checking if ' to . length ( ) > 0 ' to checking if ' to ' is not null to improve null safety
added conditional logic to handle bigInt vector mutators in ParquetFixedWidthDictionaryReaders and created a test for it in TestColumnReaderFactory
updated orientation checks and adjusted divider bar calculations in PortraitPagedViewHandler . java to improve layout responsiveness based on device orientation
added a logging aspect and its interceptor in the ` LogInterceptor ` class to enable logging before and after proceeding to facilitate easier
modified the dump string formatting in QueuedThreadPool . java to handle empty trace cases to improve clarity in thread state representation by providing appropriate context
updated CacheGenerator and CacheProvider to include an implementation parameter and modified related methods accordingly to enhance cache functionality by incorporating a new implementation
modified the parameters of the createReferenceMap method to include totalFrameSize to ensure the reference map is created with the correct total frame size
refactor TypesafeConfigurator class for improved clarity to enhance maintainability and readability of the code
camel - 16400 : camel - itest - karaf add karaf feature test for camel - graphql
removed the main method from RFE2891944 . java and added multiple static methods for testing BigDecimal values to streamline the code and
replaced URLEncoder . encode with direct string appending in HttpClientIntroductionAdvice . java to simplify code and improve readability by
refactor unsupportedPlatformTool to a class implementing UnsupportedPlatformTool to improve code organization and clarity by using a more descriptive class structure
changed the type of ` loopCount ` from ` double ` to ` int ` and updated the logging statement to use ` TimeUnit ` for better
added a size ( ) method to the FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of
[ scb - 2687 ] fix randomness issue in abstractaddressmanager
updated column specifications and layout specifications in VLCVideo . java to improve layout flexibility and visual consistency
replace bisq reference with bitsquare reference
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
make . m2 / user . xml and . m2 / repository configurable
added a call to bind the GL _ ARRAY _ BUFFER to the GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to
updated ServerHttpSecurity configuration settings to enhance security protocols and improve performance
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and updated CasCoreHttpConfiguration to include it to enhance HTTP client configuration by associating default headers with their values
improve error message when user do n ' t have a password .
deleted the NoOpConfigPathGetter . java file to the functionality was deemed unnecessary or redundant
replaced ` Codec . base16Decode ` with ` Bytes . fromHexString ` for signingKey assignment to improve code readability and leverage
replaced CascadedStyle with CSSName and added checks for float values and adjusted inline block positioning to improve code clarity and ensure
jbrules - 2842 : add optaplanner - core . impl . solver package to support new planner
updated ` RestUtils ` to utilize ` CaseInsensitiveHeaders ` and changed access level of ` getDefaultHeaders ( ) ` to private to enhance
http : / / issues . apache . org / jira / browse / amq - 4682 - change proxyserver and realm to
added a method ` getJobId ( ) ` to the ` StepContext ` class and a corresponding test in ` StepContextTests ` to provide
refactor comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare for consistency to improve code readability and performance
change defaultjdkhttpclient and jdkblockinghttpclient to log debug instead of error
updated imports in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials to improve clarity and maintainability of the authentication
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : do n ' t remove invalid filter from the network if the filter be our own .
pgpkeyring , pgpsecretkeyring : move static wrap method to bcpginputstream to avoid npe .
fix potential resource leak in minimallockedwritelockingwriteaheadlog
added a test method for selecting all rows from a view and modified column index handling in HiveBaseResultSet to improve test coverage and ensure correct column
updated the FocusTransitionTest . java file to improve test coverage for focus transition functionality
[ web ] move gwt - > gwt from org . gwtproject . core to com . google . gwt
added a check to ensure ` sourceTask ` is an instance of ` MapRedTask ` before attempting to retrieve its job instance to avoid potential
updated the initialization of the _ readListener variable in HttpInput . java to ensure readListener is not null to avoid potential NullPointerExceptions
refactor color change logic by introducing a private method ` changeComponentColor ` to improve code readability and encapsulate color change event handling
updated the constructor call in TaskHelper to use ' hidden ' instead of ' false ' to allow the constructor to access the ' hidden ' state
http : / / issues . apache . org / jira / browse / amq - 4358 - make test more reliable
pdfbox - 4892 : close randomaccessfile in ccittifffactory , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java and adjusted imports in BoundSql . java , SqlSource . java , and Language
lsra spill optimization : do not optimize spill interval
fix ( griffin ) : add groovy astnode builder to transform groovy script .
fix ( sql ) : make pgstatement . firstunclosedresult volatile
set default value of serviceAdvisorType to PYTHON to ensure compatibility with PYTHON service advisors
avro - 1041 . java : fix concurrentmodificationexception in genericdatumreader . getresolver ( ) .
make the path constructor return a list , a suggest by valerybokov
replaced direct byte array creation with a method to generate a memo byte array to improve test reliability by utilizing a random byte array for
added a new method ` setPersonalisation ` to the ` SkeinParameterSpec ` class for setting personalisation based on a date
removed redundant lines in CodeGenerator . java to streamline code logic for better readability and maintainability
removed the percent parameter from the scroll method and related calculations in multiple files to simplify the scroll method signature and improve readability by removing unnecessary percentage
changed the access modifier of the pointer variable from private to public and added reset methods for pointer management to allow external access to the pointer variable and
rename ContentDigestHistory class to BdbContentDigestHistory and update references accordingly to improve clarity by using a more descriptive class name
simplified import statements and modified type casting logic in CastExpression . java to improve code readability and maintainability by eliminating unnecessary
replaced the use of ArrayList with a boolean flag for determining if the accepted media types are empty to simplify the code and improve readability by
added a boolean value of false to TaskView . java to control the behavior of the task view
added isAutoIncrement method to LiquibaseDataType and modified CreateTableChange to include it in CreateTableChange to ensure that auto - increment
initialize errorText to " Internal Server Error " to provide clearer error reporting for command failures
added performance data import and updated JVM argument handling in LocalManagementTest . java to enhance performance testing capabilities and improve code maintainability
replaced ` add ` method with ` push ` method for ` currentStatus ` and ` boosterStatus ` in the ` BasicEventSimulation
added AJP connector setup and configuration for binding an AJP port in GitBlitServer . java to enable support for an AJP connector
added type coercion logic to handle compound types in TransTypes . java and created a new Intersection03 . java file to ensure correct
rename the test class from EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method to start a toolkit thread and ensured it is only started once to improve performance by avoiding unnecessary thread creation
add -- compress - in - parallel option for bundle content substitution .
remove surface for opengl ( hide on window )
[ hotfix ] [ test ] use class name instead of hardcoded string in test temp directory
added support for enabling HTTP services based on configuration to enhance flexibility in enabling HTTP services based on configuration
added a service property to GoogleCloudFirestoreTicketDocument and updated related methods in GoogleCloudFirestoreTicketRegistry to support tracking of service -
updated the Generate . java file to improve functionality to enhance performance and maintainability of the code
json _ format ( ` ` null ' ' ) should return java null for scalar function
updated BadgeRenderer to handle a dots - only mode in width calculations and modified isText and isIcon conditions to improve the badge rendering logic
removed the ' final ' keyword from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow for flexibility
add unit test for invalid exclusion of package name pattern in ognlutil .
modify deviceUdid initialization to handle both mac and iphone devices to ensure compatibility with different SDK versions for tests
updated logging levels and modified response handling in DefaultHttpClientFilter and TestDefaultHttpClientFilter classes to improve error handling and ensure proper handling of forbidden responses
refactor the binding and execution of the root script and state saving logic in AllAppsView . java to ensure the script is only executed when
added a new boolean flag ` TEXT _ BURN ` and modified the conditional check for line count to conditionally apply a shadow layer based on
added teardown methods to drop specific tables and views in TestColumnAccess and TestReadEntityDirect to ensure proper cleanup of test resources after tests are
added a line to retrieve a parser by its name in SecurityNamespaceHandler . java to improve clarity and maintainability by using a dedicated parser
added a test for maintenance in BoundedLocalCache and improved formatting in BoundedLocalCache . java to ensure correct handling of cache maintenance
refactor RawConnection to extend WebSocketConnection and implement frame completion and flushing methods to enhance WebSocket frame processing and ensure proper management of frame bytes
added three new test methods in SoftAssertionsPerfTest to verify the correctness of assertions in the SoftAssertionsPerfTest class
added a new constant TEST _ FAILURES _ EXIT _ CODE and modified the execute method in PythonRunTestsStep to handle test failures to ensure
added markup handling and adjusted xAdvances array initialization in GlyphLayout . java to improve rendering behavior when markup is disabled
refactor score comparison logic in TestBooleanRewrites . java to use streams for expected and actual scores to improve code readability and maintainability
updated the logic for determining the enclosing class of an anonymous class in TypeHandlerRegistry . java to ensure correct retrieval of the superclass instead of the
remove unnecessary instanceof check for player socket connection .
added a check for whether the drawing process has started in the Launcher and LauncherAnimUtils classes to ensure that the OnDrawListener is
refactor multiple classes including CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added NOT _ APPLICABLE status check to improve code readability and
changed the default return value of the method to true for MEDIAPARSERV2 to enable media info parsing by default
do n ' t write interceptor type for method that have a round _ type annotation
added assertions and permission verification for table partition operations in FolderPermissionBase . java to ensure proper permissions are granted for the specified table and its partition
updated the handling of provider registration status updates in GlobalStatusServiceImpl . java to include a dueToRegistrationStateChanged parameter to improve the cl
updated the color calculation logic in PastelColor . java to use a calculated color base instead of a fixed value to improve visual consistency by
updated imports and class name in ScriptEngineFactory . java to improve clarity and consistency in naming conventions
updated the handling of bitmaps in the HolographicViewHelper to use original and outline bitmaps to improve visual representation of the image
refactor request method handling to use ` HttpMethod . fromString ( ) ` for better readability and error logging to improve code clarity and ensure
add a parent to the multigrampreprocessor so we do n ' t get the last word in the phrase when generate the phrase .
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
added conditional logic to dynamically load the output format class based on the class name to improve flexibility in handling Hive ' s passthrough output formats
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added bounds checking for the start and length parameters in DOMBuilder . java to ensure valid input to prevent potential ArrayIndexOutOfBoundsException
refactor hierarchy and edge retrieval logic in ClusteringCoefficient . java and update return messages in DiameterUI . java and HitsUI .
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` containing an interface with static and default methods and a default method method to d
camel - 16400 : defaultkeyselector now support resolve property placeholder from the camelcontext .
replaced ` Throwable ` handling with a more general ` Throwable ` throw ` statement in ` LogResolverBean . java ` and ` ResourceResolver
renamed multiple Java classes related to security and certificate management to improve clarity and maintainability of the codebase
updated JGit version from " 1.0 . 0 . 201106090707 " to " 1.1 . 0 . 201
replaced ` clientId ` with ` clientKey ` in ` HttpClientIntroductionAdvice . java ` to ensure the correct client key
int - 1390 added transformerendpoint and methodinvokingtransformer a namespace handler for the ' transformer ' element .
updated constants and logic in ResumeObj . java to replace the BACK _ FACTOR with REWIND _ TIME and adjust related conditions to improve
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` and ` JavaSEPort ` classes , and
added checks for empty command usage and modified usage formatting in UtilityCommands and DocumentationPrinter to improve code readability and ensure proper formatting of command usage
updated attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in attribute naming
updated CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to include mergeFiles and unseqFiles lists to streamline the management of
fix checkstyle issue in util / observability / observation . java ( # 753 )
do n ' t synchronize ruleset when rebuild project
now that we have a thread - safe iterator in chain , we can be more aggressive when resolve field
use naming convention in elastic index ( fixes # 399 )
added methods for listener and command creation in IController , and overridden currentUnits in TinyGController , and updated BackendAPI to use I
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify rendering of a large horizontal rule with
replaced System . out . println statements with TTY . print calls in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
removed redundant occurrences of POST and REDIRECT in multiple Java files to streamline code for better readability and maintainability
updated the condition to check if frameLength is less than or equal to zero to ensure that frameLength is valid before proceeding with further operations
added return statements for zero values in IntFloatMap and IntIntMap classes to ensure proper value retrieval and return default values
refactor ImageDownloadService to use synchronous calls for setting and updating icon images to improve UI responsiveness by ensuring images are set on the
added a null check for the registered variable before processing demand to avoid potential NullPointerExceptions when processing demand
simplified the ` hasNextSibling ` method across multiple classes and updated return statements in ` IeNavigator ` to improve code readability and
fixed - nullpointerexception throw by redisdistributedmapcacheclientservice . getcachesource method if redis cluster do n ' t
updated logging messages in MobFileCache to provide clearer context for enabling or disabling MobFileCache to improve clarity of
modified ColConvCCMTest . java file to improve test coverage for column conversion functionality
replaced instance variable declarations for ` target ` and ` allowCovariantReturns ` with local variables ` allowCovariantReturns ` and ` synthetic
pdfbox - 4892 : add constructor to avoid unchecked warning ; add generic
updated the method for converting JSON strings to use ` asString ( ) ` instead of ` Float . toString ( ) ` and added a new class
http : / / issues . apache . org / jira / browse / amq - 4348 - add a return statement to the
added an asynchronous call to EventQueue . invokeLater in bug6638195 . java to ensure tasks are executed on the Event Dispatch Thread
updated the calculation of maxSize to use the max message size from the policy instead of the maximum text and binary message sizes to ensure accurate size management
update steeringValue calculations in TestAttachDriver , TestFancyCar , TestPhysicsCar , and TestPhysicsDriver
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to enhance security by using ` MessageDigest . isEqual ` for comparison
replaced date and timestamp handling with local date and LocalDateTime conversion in JdbcSerDe to improve accuracy and accuracy of date and time representation in the
update version from 2 to 3 and refactor metadata reading logic in ParseData . java to ensure compatibility with versions below 3 and streamline metadata handling
added FlywayJpaDependencyConfiguration and associated tests in FlywayAutoConfiguration and FlywayAutoConfigurationTests to enable custom fly
added a sorted ( ) method to ClassesImpl . java to ensure the classes are processed in a consistent order
added a method to get the current stable state in LauncherStateManager and modified the state retrieval in AbstractLauncherUiTest to improve state management
updated SharedInformer class to improve data access handling to enhance performance and reliability of data access operations
8274889 : test / sun / jdk / internal / foreign / testclosescope0 . java fail on jdk16
updated the test timeout from 500ms to 5000ms in AdaptServerSocket . java to allow more time for tests to complete before proceeding with
updated CaptchaChannelProcessorTests . java with new test cases to enhance test coverage for Captcha channel processing functionality
added logic to update the owning collection of an item based on change conditions to ensure the item reflects the correct owner collection before updating it to
added retry mechanism for saving properties in AbstractRegistry . java to improve stability by preventing multiple attempts for saving properties
updated the variable used in TrackingDirectoryWrapper from ' mergeDirectory ' to ' directory ' to ensure the correct directory is used for tracking directory
[ java ] false positive for unusedimportsrule when jdk < = 1.5
added validation for insert overwrite on bucketed Iceberg tables in HiveIcebergStorageHandler to ensure that insert overwrite queries are not performed
update assertions in BootstrapTests to check for both 3 and 2 SAML keys in the default identity zone configuration to ensure the correct number of SAML keys
updated method names and logic in Excluder . java to include " non - static " for field type checks to improve clarity and
no need to synchronize on gettoaddress ( ) , since it be thread safe .
added new comment types WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _
modified lock release methods to throw IOException instead of throwing them to improve error handling and provide clearer feedback on lock release failures
change package name from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to organize test classes under
added conditional checks for unary operators in SpelExpressionTransformer and updated method calls in LiteralNode , OperatorNode , and MongoQueryMethod to improve
updated ByteBuddy instantiation to use TypeValidation . DISABLED to disable type validation during bytecode generation
updated ` JavacRoundEnvironment ` and ` BuriedAnnotations ` to use ` TypeElement ` instead of ` DeclaredType ` to
test : increase innodb lock wait timeout to 1ms
removed the parameter from the setSystemProperties method and directly calls it in the LoggingApplicationListener class to simplify the method signature and ensure system property
refactor HTTP connection handling by introducing a method to check for redirect status codes to improve reliability of HTTP redirects and enhance code maintainability
added mappings for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants . java and updated MicroserviceFactory . java
updated the method to use ` getBeanName ( ) ` instead of ` getName ( ) ` for setting the ABOUT _ TO _ BEGIN _
updated DB _ PATH _ REGEX to static in BaseAndroidTestCase . java and modified database deletion logic in GeocodeHelperTest . java to
updated return statement to fetch unread count from HomeDataSource to ensure accurate tracking of unread counts based on current account
renamed the ` testVirtualThreadPool ` method to ` testVirtualThreadPoolPreview ` and added a new test method for testing virtual thread pool behavior
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and updated related logic in Wallet to limit the number of orders
added a null check for the user before fetching user settings in HomePage . java to avoid potential NullPointerExceptions when the user is null
updated the file matching logic in LocalFileSystem to use absolute paths and added a new test for relative wildcard paths in LocalFileSystemTest to ensure accurate
added maximum dimensions to the rectangle before setting the instance bounds to ensure that the component dimensions do not exceed a predefined maximum width and height
added logging functionality and deprecated the setConnectionManagerTimeout method in CommonsHttpSolrServer . java to improve error handling and provide a deprecated method for
removed multiple ExceptionHandler error handling calls in PrintController . java to streamline error reporting for document creation failures
refactor filename handling in CrateType and add RustBinaryIntegrationTest assertions in RustBinaryIntegrationTest to improve code readability and
added number check functionality in SpellChecker and a corresponding test case in SpellCheckerTest to ensure proper handling of number inputs and validate functionality
updated the declaration of the MESSAGE constant in HelloWorld . java to correct the formatting of the message string for consistency
refactor file action handling in FileDisplayActivity to improve code organization and readability to enhance maintainability and facilitate easier management of
added error handling in SnapPuller and set daemon mode to false in ReplicationHandler to improve stability and prevent application crashes due to
updated the parameters of the update method in StoreCachedTest . java to ensure consistency in the method call order
modified the constructor of StreamerLoader to use ' theMaterials ' instead of ' materials ' and added a check to remove specific MaterialColumn
added detailed components and updated string arrays in DependencyBank . java to enhance clarity and organization of dependencies in the application
added maximum recycled views for various UI components in the RecyclerView ' s pool to optimize recycling of views based on available dimensions
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure proper building of bin
limit the amount of goals to 30 and show a message if there be no location for a particular mining .
added multiple imports related to ` ParsedNode ` , ` ParsedNodeException ` , and ` ResourceAccessor ` in ` CreateProcedureChange . java
added null handling features in FilterOperatorUtils and corresponding tests in NullHandlingEnabledQueriesTest to ensure proper handling of null values and validate range and
update validation logic for bootstrap method argument types in JDynamicInvokeExpr . java to ensure that the bootstrap method ' s first three arguments are of
try to fix the test failure on the ci box
clear the formatters list in CucumberInstrumentation to ensure proper resource management during instrumentation
change the type of the contacts list from RegisteredServiceContact to DefaultRegisteredServiceContact and update related return statements to ensure type consistency and improve type
added a condition to adjust the visibility of workspace labels based on cell padding to ensure workspace labels are only hidden when the cell size does not exceed
updated assertions in ReplicationFactorTest to use a centralized method for clarity to improve readability and maintainability of assertion messages
change LLVMContext and LLVMLanguage to support initialization deferred and pre - initialized contexts to improve handling of context pre - initialization scenarios
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable tests to
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
replace Integer . valueOf ( values [ 0 ] ) and Integer . valueOf ( values [ 1 ] ) with Integer . parseInt ( values [ 0
updated error messages and modified directory handling in the Copy . java file to improve clarity of error messages and ensure proper directory traversal behavior
added methods to check if a segment name is a high - level consumer segment name before processing to improve code readability and maintainability by central
added startActivity and startActivityForResult methods to ShadowFragment and corresponding tests in FragmentTest to ensure proper error handling when fragment activity is not
updated DateTime instantiation in DueDateBusinessCalendar . java to use clockReader ' s current time instead of the current time to ensure accurate date
added " x86 _ 64 - none - linux - android " to the return value in TargetCpuType . java to specify the target architecture
added a method to delete all files associated with an account in FileDataStorageManager to ensure that temporary files are removed across accounts for better data
updated command line help formatting in SchemaCrawlerCommandLine . java to improve clarity and consistency in help output formatting
added a method to create a description with a unique ID and updated its usage in the Description class to enhance functionality by allowing unique IDs to be
replaced the manual decoding of bitmaps with a direct call to decodeBarcode to simplify code and improve performance by eliminating unnecessary hints
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and its associated methods to simplify constructor usage and eliminate
add test for geoscaling . range past start / end
added dependency tracking configuration to JRubyScriptEngineConfiguration and updated JRubyScriptEngineFactory to conditionally activate dependency tracking to enhance flexibility in
updated the request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
handle alreadyexistedexception when try to recreate a new table . patch by jbellis
refactor WelcomeWindow to use a cached image instead of a background image to improve image rendering performance and maintainability by reducing unnecessary background
modified tuner configuration handling and buffer resubmission logic in multiple classes to ensure unique tuner names and improve error handling during buffer submission and
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enhance testing capabilities for sh
added a conditional statement to include " db : hsqldb " in TestFilter . java to ensure proper handling of SQL database configurations
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do n ' t materialize the message when there be no stack trace .
refactor service loading logic in GraalServices . java to improve handling of multiple service providers to ensure compatibility with Java 8 and support JVM
added test to ensure that duplicate command handler be not subscribe to the correct command handler .
[ flink - 20865 ] [ documentation ] add fine - grained shuffle mode for batch job
fix entityfishhook not be able to place block on the wrong place . close # 4891
camel - 16400 : camel - ftp - create an aws - sftp component base on sdk v2 , fix description
renamed ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename the parameter ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class and related methods to
fix crash when update the scroll position state when there be no item .
added a conditional annotation to check for a missing REPORTER _ BEAN to ensure that the REPORTER _ BEAN is
- add support for mdc property in xmllayout to allow customization of mdc property .
added OMIT _ HEADER constant and its usage in CommonParams , BinaryResponseWriter , JSONResponseWriter , and XMLWriter classes to manage response
fix bug in getpropertyname ( ) and add test case
replaced a direct call to ` getBuildRuleType ` with a call to ` Description . getBuildRuleType ` to improve code readability and
fix a bug that cause the method numberer to not be remove from the scene .
fix npe in tradedatavalidation when dispute try to replay
added a ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified ` retrieveColumns ( ) ` method in ` TableRetriever
wallet : set confidencetype of non - SEEN _ IN _ CHAIN transaction to non - SEEN _ CHAIN .
refactor HttpClientIntroductionAdvice to streamline argument annotation handling to improve code readability and maintainability by reducing duplication
fix CraftingHelper to skip certain JSON files and exclude those starting with an underscore to ensure that only valid JSON files are processed by the Craft
hbase - 25827 add catch block around close ( ) in hregion . open ( )
refactor null and length comparison logic in Credential . java to improve readability and maintainability of the code
[ java ] do n ' t check for subscription image when check if the image be not present in the subscription .
updated the ` destroy ` method to throw an ` InterruptedException ` and simplified process destruction logic to improve error handling and ensure proper process termination
added oracle support to the conditional check in TestDefaults . java to ensure compatibility with additional database types
camel - 14850 : fix for http : / / issues . apache . org / activemq / browse / camel - 1489
throw a parsecancellationexception if there be more token in the query that have not be consume
camel - 16836 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
added a method to retrieve the data file name in the Model class and modified the Voice class to conditionally use the model based on the model
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition , along with corresponding test cases to enhance the configuration
added REQUEST _ READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT constants with default values in Configuration . java and updated ViewRegistry . java to use
do n ' t run deferred concept processing if there be nothing to save
added RedisCategory annotation and imports in RedisServiceRegistryTests . java to categorize tests as Redis for better organization and readability
refactor ` FindDeprecatedMethodsTest ` to use parameterized tests with ` @ NullAndEmptySource ` and improve type pattern handling to enhance test
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the component in the UI
removed unused imports from multiple classes to improve code cleanliness and reduce unnecessary dependencies
updated ` ContractEventTriggerCapsule ` , ` ContractEventTrigger ` , and ` LogEventWrapper ` to include a new method for event
updated filter condition to exclude filenames ending with an underscore to ensure that only valid session IDs are processed in the file filtering
replaced the ` clearRect ` method with ` fillRect ` and added color management for the graphics context to improve the visual appearance and
truffle - dsl : fix compilation error for invokers not be store in the package compilation data
removed unnecessary print statements from multiple Java files to clean up code and improve readability
added a conditional check to ensure scoreDocs [ 0 ] and scoreDocs [ 1 ] are only asserted if their score values are NaN to
replaced the direct assignment of ` oldKeys ` with a ` Set . copyOf ` to ensure immutability of the ` oldKeys `
added a method to handle empty time strings in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure proper handling
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
updated method signatures to use generics for ` vsContext ` and ` vsContext ` in multiple collectors to enhance type safety and eliminate potential runtime
[ drools - 6258 ] add test for edit session model with clocktype
updated HiveMetaStoreClient instantiation to use ' this . conf ' to ensure proper context is used for Hive client instantiation
added a conditional check to return early if modalness matches mModalness to optimize performance by avoiding unnecessary processing for the same modalness
added a test for CodecCapabilities creation from profile level in ShadowMediaCodecListTest . java and implemented native global settings in ShadowMediaCodecList
fix focus of confirm button when enter key be use ( # 5460 )
added validation for width and height in SunVolatileImage and improved error handling in XRSurfaceDataProxy and XRPMBlit
updated the group separator character from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent formatting
refactor ` _ loops ` from ` int [ ] _ loops ` to ` AtomicInteger [ ] _ loops ` and update related logic in `
added beta flavor functionality to AchievementFragment and LeaderboardFragment to enhance user experience by providing clear feedback on unavailable achievements
added access , name , and desc attributes from the context in SearchMethodVisitor . java to ensure that the search functionality reflects the current context
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and updated exception handling to include InterruptedException to improve synchronization and ensure proper error handling
removed unnecessary line breaks in DLNAResource . java to improve code readability and maintainability
change the required attribute of the @ xmlRootElement annotation from " batch - config " to " stream - config " in multiple classes to ensure
avoid race condition by call releasetxn ( ) in tablereader . readtxn ( )
use ssl . keymanager . algorithm or trustmanager . type a default algorithm in the thrift source .
refactor ` PrimitiveWrapperClassConstructorToValueOf ` to use ` TreeVisitor ` from ` Applicability ` instead of ` JavaIsoVisitor
fix tab key detection in the blockmania , fixes # 2698
replace ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to clarify that the access is not
updated method names and logging for unhandled exceptions in Check . java and added a new class T6199153 . java to improve clarity and
hive - 16964 : fix orc reader / tail duplication in orc ( sergey shelukhin , review
added a null check for the ` ex ` variable in ` JCache . java ` to prevent potential ` NullPointerException ` during execution
update myhentaicomics ripper to use https instead of http
added command - line option to show the current version of the application to facilitate users to view the current version of the application
fix problem with split applet list ( bug # 520 )
added support for default rotation preference in ConsoleActivity and enhanced input connection in TerminalView to improve user experience by allowing default rotation values when the keyboard
changed the type of the ` hq ` variable from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc >
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to avoid potential NullPointerExceptions when accessing ownerConnectionAddress
camel - 17894 : camel - jbang - provide a way to get the class name of the headersmapfactory to be able to
added a closing brace character to the JavaCompiler and Diagnostic classes to ensure proper syntax handling and improve code readability
in progress - issue int - 394 : jms osgi do not support custom connectionfactory and messagechannel .
updated the expected index in the expectation check from ` i + 1 ` to ` i + 2 ` to correct the positioning of the expected
( chore ) camel - script : avoid npe and improve error reporting
updated proxy instances in PooledConnectionImpl to support both PGStatement and CallableStatement types to enhance compatibility with PostgreSQL ' s proxying mechanism
flush sizetables and refresh size estimate on test failure
changed log level from error to warn in AtomicRemainder . java to provide a less severe log level for memory limit warnings
[ hotfix ] do not sort sstablesreader candidate in aggressive expiration check
fixed - rblockingdeque . pollfirstasync ( ) and rblockingqueue . polllastasync ( ) method do n ' t use
removed unnecessary parameters from printMap calls in JobInspectCommand . java to simplify output formatting for better readability and maintainability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
refactor sorting logic in ChildHolder to use a comparator to improve readability and maintainability of the code
[ issue # 5994 ] fix test case for acl client ( # 5995 )
change condition from numIndexDims to numDataDims in BKDWriter . java to ensure correct handling of data dimensions
[ hotfix ] [ network ] do not print stacktraces to stderr in notebookserver
modify the parameter name from ' funN ' to ' lt ' in ExpressionNodeEvaluator . java to correct the variable used in the list element
removed the public access modifier from the verifyIdsAreStable ( ) and getNodeId ( ) methods in NodeIdAccessor . java to restrict access
cs - 15836 : provide good error message when volume do n ' t have a valid storage pool .
changed method visibility from public to package - private in ItemWriter . java to restrict access to methods for better encapsulation
updated the parameter in the ThingImpl constructor from an empty string to a test string to enhance test coverage by providing a more descriptive identifier for
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replace FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a memory - based directory implementation
added a check to ensure the height of mDrawTextRectBuffer does not exceed the actual buffer height to prevent rendering issues when the buffer height
modified WalletAppKit . java file to improve functionality and maintainability of the wallet application
bugfix # 269 , remove hard - coded nashorn id and hat _ js _ nashorn . js
fix nullpointerexception when remove a checkboxitem in the chat transport menu .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
avoid npe in preferspayload when bsqblockexplorer be null
added a map of attribute - related attributes to the StandardSession class to store and retrieve session attributes for better management of session attributes
added assertions to verify the presence and presence of the ' plain ' bean in the database to ensure the correctness of the ' plain ' bean
updated the array initialization in MonotonicAppendingLongBuffer to use initialPageCount instead of pageSize to ensure correct initialization of the averages array
refactor BatchCommandLineLauncher for improved clarity to enhance maintainability and readability of the code
added HSQL database configuration and transaction manager beans in BatchMetricsApplication . java to enable SQL data source and transaction management for batch processing
make glowrootloghttpclient implement httpservice instead of unauthenticatedhttpservice
updated the graphics composite settings in the PageDrawer class to ensure consistent rendering behavior across different graphics states
removed unnecessary ` notifyAll ( ) ` calls in ` close ( ) ` and added synchronization in ` DocumentsWriterPerThread ` to improve
added methods to retrieve and set client properties for multiple and validation options in UiBinding to enhance property management and improve client property access for better data
simplified method calls by removing unnecessary method calls and using ` toString ( ) ` instead of ` name ( ) ` to improve code read
bugfix : do n ' t update the test plan when save the whole tree .
refactor Affix and Dictionary classes to support multiple patterns for condition handling to enhance flexibility in managing different patterns for affix conditions
replaced explicit generic List declarations with diamond operators in KrakenAdaptersTest . java to improve code readability and maintainability by
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
updated NBJavacTrees . java file to improve code structure to enhance maintainability and readability of the codebase
removed unsupported encoding check in VectorizedPrimitiveColumnReader to streamline code by eliminating unnecessary error handling for unsupported encoding
updated logging mechanism in HttpSolrCall . java to improve logging consistency and clarity to enhance code readability and maintainability while ensuring proper logging
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of the metadata service proxy before service instances are
limit ` maxlevel ` to 10 in ` defaultentityqueryrepository ` ( # 1562 )
updated error message formatting in HubChangeExecListener . java to include a check for a non - null changelog ID to improve clarity of error
add tricky harder test to try harder .
refactor ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int ` to improve error handling by utilizing the
removed unnecessary variable ` numEvents ` and adjusted the loop condition in ` ObjectStore . java ` to simplify the logic and improve readability by
polish ` ` remove unnecessary check for @ validated . class ' '
fix a bug where temporary block entity would not be remove .
remove redundant code in intrinsificationarraycopyphase . java to improve code readability and maintainability
enable debug log to help diagnose test failure
removed the WantedAnywhereAfterFollowingInteraction exception class and updated corresponding tests to streamline exception handling and improve clarity in stack
added checks for existence of accounts and keys in ` AccountPermissionUpdateActuator ` and updated address validation in ` PermissionAddKeyActuator `
scriptlauncher : use treemap instead of custom comparator
chore : [ iotdb / Workflows ] update go _ package to match open source code ( # 6383 )
replaced ` _ metadataProperties . addProperty ` with ` _ metadataProperties . setProperty ` in ` BaseSingleTreeBuilder . java ` to ensure consistency
updated AsmLoader constructor to accept a ClassLoader parameter to ensure proper class loading with the specified interface class loader
pdfbox - 4892 : avoid npe in rlineto , a suggest by valerybokov
updated namespace export logic in Java2TypeScriptTranslator to include ' declare ' conditionally based on definition scope
updated the HttpClientTest to start using an AbstractHandler instead of an EmptyServerHandler to ensure proper handling of HTTP requests by copying input streams to
simplified the listener parameters in HelloInput . java by removing unnecessary array syntax to improve code readability and maintainability
fix potential nullpointerexception in abstractsqmpath
updated package declaration for multiple test classes in the oc _ framework _ test _ project . test to ensure consistency in package structure across test files
refactor BufferedImage creation logic to handle different image types and filter conditions more effectively to improve image processing efficiency and support for different image types
[ gr - 20613 ] start up jvmci native library in libgraal .
removed the DataflowPortabilityApiUnsupported class from the UsesTimersInParDo class to streamline the code by eliminating unnecessary
chore : mockphishingprotectionservicev1beta1impl . java replace remove ( ) with poll ( ) for the response
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
log warn when max - size per - node config do not allow any data in map
update return messages from " AST " to " LST " in multiple files to clarify the purpose of the error messages related to L
score judgment : fix an off - by - one error in threadedacousticscorer .
replace AssertionError with returning null in NetHooks . java to simplify error handling by returning null instead of throwing an assertion
updated method calls in ApplicationControllerFluentLeniumTest to use window ( ) . title ( ) instead of serverAddress ( ) to improve
added default implementation of ` makeString ` methods in ` ParallelIterable ` , ` RichIterable ` , and ` RichIterableTestCase
replaced the hardcoded order value with a static final constant in OidcServicesManagerRegisteredServiceLocator . java to improve code readability and
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer and updated related methods to allow validation of weak associations based on a rule to enhance flex
updated the Deflater class implementation to improve compression efficiency and performance
added a try - catch block that throws an IOException if a Throwable occurs to handle potential exceptions to ensure that IOException is thrown when an exception occurs
[ type : fix ] avoid npe if content be empty .
refactor NearbyListFragment to directly use the places list instead of storing it in a variable to improve code readability and reduce unnecessary
updated content type check to be case - insensitive in MailConverters . java to ensure consistent handling of content types regardless of casing
fix format for openssh public key spec . also , add support for openssh 1.0 key format .
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for folder name binding to improve flexibility in handling folder names
replaced specific Hibernate annotations with a wildcard import and modified entity retrieval logic in InheritanceCacheTest . java to streamline imports and enhance
updated import path for DefaultOAuth2RequestFactory and added a method to retrieve user approval request in TofuUserApprovalHandler to ensure correct
fix influxdb name convention not apply to tag value ( # 645 )
do n ' t print error message when there be no resolution
changed the key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure the correct cookie key is used for handling requests
added a static method ` classMetadataUnsupported ( ) ` to ` Platform ` and updated its usage in ` Subject ` and ` Platform ` classes to
added functionality for managing the " Clear All " option in OverviewActionsView and set a click listener in RecentsView to enhance user
updated ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider ` to use ` final ` for ` desiredRepoVersion ` and
remove memoryleaktest since it ' s not really useful
update the URL generation in ServletTester . java to include the local host ' s IP address to ensure the URL is correctly formatted for local
do n ' t run ban command if plotSquared do n ' t hook into mvdwplaceholderapi
fix partition assignment test by assert cluster size
implemented a SingletonHolder class to facilitate singleton initialization to improve flexibility in loading FFI providers based on JAFL settings
tika - 2369 -- add test for hierarchical file list in batchprocesstest
added null checks and improved null handling in MongoTemplate to enhance robustness and prevent potential NullPointerExceptions during object saving
updated position conditions in NodeClass . java to use NODE _ LIST instead of 0 to ensure correct handling of position values based on input and successor
added a new private final BigDecimal ` accTradeValue ` to ` BithumbTicker ` and its getter method to enable tracking and retrieval of
updated logging messages in RealtimeSegmentDataManager and AvroUtils to include segment name in log messages to improve log readability and provide clearer
replaced hardcoded maximum parallel threads with a static final constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor .
use copyonwritearraylist instead of arraylist in fixedbytesvmutableforwardindex
fix javadoc issue report by checkstyle
added a null check for destBuffer in FlipTransition . java to avoid potential NullPointerExceptions during execution
( chore ) camel - msv : remove @ ignore from camelmsvtest
updated conditional check from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` to ensure proper validation of account capsule
increased the length of generated values from 6 to 10 in JdbcExpiringCodeStore and related tests to accommodate a larger code
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching behavior for unique constraints
removed redundant code and improved language description processing in MediaDetailFragment . java to streamline code and enhance readability by eliminating unnecessary
catch all possible classcastexceptions from arrayindexoutofboundsexceptions in findbugs2 . java
added ` withReferenceFilter ` and ` withFilter ` methods to ` ListImagesCmd ` and ` ListImagesCmdImpl ` classes to allow
camel - 16400 : camel - jms - add bridgeerrorhandler to endpoint doc . thanks to benjamin for the
added logic to break on lines containing " # ifndef " or " # endif " and set allOps to true if no ops are
added return statements to indicate a failure in the DatabaseCommand class to ensure the method correctly handles cases where the operation fails
added new politician values " President of Umpa Lumpa , " Prime Minster of Cheeseland
no effective change - code cleanup - replace string . length ( ) with string . isblank ( )
updated RestletComponent to conditionally format the URL based on the port to enhance flexibility in URL generation by allowing dynamic port assignment based on
removed unnecessary imports and added a case for BlockID . WALL _ SIGN in SchematicFormat . java to streamline the code and
added a system property for maximum query length in QTestUtil and removed overridden configurations from SessionState to optimize query performance by setting a maximum length
updated visibility modifiers , refined HTTP configuration handling , and improved error logging in WebServer . java to enhance code clarity , maintain encapsulation , and provide more informative logging for debugging purposes
updated Sinks and KafkaSink references from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSource
updated the logic for determining if the application name is not null in HiveConf and HiveSparkClientFactory to ensure the default application name is
corrected variable name from ' whiteName ' to ' includedName ' in ManagedClassFactory . java to improve code readability and maintain consistency
[ java ] add maximize window to the window handle to make it consistent with other driver .
refactor methods in LocalCellProviderFactory and related classes to improve access to main cell Buck - out paths to enhance code clarity and
added an assertion to check if the exception message contains " entity expansions " to ensure proper handling of entity expansions in the exception
update table offset and length assignments to mask values with 0x7FFFFFFF to ensure proper handling of unsigned values in TrueTypeFont
removed the overridden customize method from DirectMethodHandle to ensure that the customized field is not null to prevent potential null pointer exceptions
refactor buffer allocation and update coordinate checks in LineChartRenderer . java to improve code readability and maintainability by avoiding repeated array allocation
refactor flavor checks in AndroidBinaryDescription for better clarity and functionality to enhance error handling for unrecognized flavors and improve code maintainability
updated buffer array index from offset to i in LwjglGL11 . java to ensure correct buffer generation based on the correct index
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` to demonstrate and test class resolution
disable shutdown hook if shutdown _ enabled be set to true
updated FilterChainProxy and FilterChjainProxy to use FilterChjainProxy instead of FilterChainProxy and adjusted related logging statements to
replaced Collections with Arrays for sorting and modified return statements in PercentileAggregationFunction . java to improve code readability and maintainability by using
added checks to ensure ` schema ` and ` mdSchema ` are loaded before loading them to improve stability by preventing unnecessary table loading when
initialized ` baseType ` to ` null ` in ` DatabaseInfoRetriever ` and initialized ` literalPrefix ` , ` literalSuffix ` , and `
updated HTML link references in multiple Java files to use placeholder syntax to improve code readability and maintainability
updated EvaluatorFactory to use static instances of ObjectEqualEvaluator , ObjectNotEqualEvaluator , ObjectContainsEvaluator , and BooleanNotEqualEvaluator to improve
updated variable names from " osx " to " osx _ config " across multiple files to standardize naming conventions and improve clarity
added sound effect handling methods in AllAppsView . java to improve user experience by enabling sound feedback during interactions
changed the exception type thrown in the main method from Exception to IOException to ensure that the main method handles both IOException and IOException gracefully
enable granularity for the left axis in BarChartActivitySinus to improve accuracy in chart representation
refactor version comparison logic to use a dedicated method for clarity to improve code readability and maintainability by centralizing version comparison logic
updated the handling of ` docroot ` and ` otherroot ` in ` ContextHandlerGetResourceTest . java ` to use ` MavenTesting
added a close ( ) method to Connection and its implementations in JsonAsyncHttpPinotClientTransport , PinotClientTransport , PreparedStatementTest ,
improve mockappender by use a linkedblockingqueue instead of separate count
[ beam - 4142 ] add precondition check to ensure that the resource id be a directory
removed redundant import statements for SpriteBatch classes in IsometricStaggeredTiledMapRenderer . java to streamline code and reduce
removed duplicate call to unbindHandle in ItemServiceImpl . java to streamline code by eliminating redundancy
refactor configuration and attribute handling in Config and Attribute classes to improve code readability and maintainability
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
removed unused imports and updated button tinting logic based on the user ' s navigation mode to simplify code and improve button intensity based on the
change error handling in PolyBenchLauncher to throw an exception instead of returning an error message to improve error handling by providing a clearer exception
refactor ClassWriter to replace bootstrapMethodIndex , nameAndTypeIndex , and memberIndex with refKind and memberIndex to enhance clarity and
added BlockFormattingContext parameter to findBox and findElementBox methods in BasicPanel . java to enhance layout positioning by incorporating
added a method to retrieve standard error output and improved error handling in WorkerProcess and WorkerShellStep to enhance error reporting and provide clearer
added null checks for the operator in CheckedListReplaceAll . java and improved error handling for NullPointerExceptions to enhance robustness and provide clear
added conditional logic to handle write operations in SslConnectionTest to improve connection stability by ensuring write operations are performed only when necessary
added device configuration listener functionality to DeviceFlag and changed visibility of default and current value in FeatureFlags to improve responsiveness to device configuration changes
added an import statement for JUnit ' s Ignore annotation and annotated a test class to temporarily disable the test due to issue 2.2 .
removed import of MalformedURIException in StandardRequestHandler . java to streamline code by eliminating unnecessary dependencies
[ # 7372 ] instructorfeedbackeditpage : fix focus on the end date box ( # 7373 )
refactor synchronization and subscription logic in KrakenStreamingTradeService . java to improve readability and maintainability of the code
change error message from ` System . err . println ` to ` System . out . println ` in ChangeableUrls . java to correct output
added support for ` randomAccessRows ` in the ` SparseRowMatrix ` class to provide flexibility in creating ` RandomAccessSparseVector `
bug cs - 15829 : add null check for volume poolid in deletevolume usage event
refactor file input handling to differentiate between local and remote environments to improve flexibility in specifying the plan path based on the Hive configuration settings
[ beam - 8470 ] use non - deprecated guava import in ubtestprovider
[ hotfix ] fix memorycctprovider registration in memorycallgraphbuilder
fix npe if no multichat operation set be available for a user .
check if file can be write to avoid illegalargumentexception
added a new FolderSyncActivity class and updated DrawerActivity to handle folder synchronization to improve user experience by providing quick access to sync folders and
[ hotfix ] [ test ] fix the close of the buffer pool in sequentialchannelstatereaderimpltest
improve spanish tree normalizer to handle marble with comma
replaced the way point values are appended to offlinePointWriter in SimpleTextBKDWriter . java to improve efficiency by using a packed
added a new LocaleRandomizer and its corresponding test class to provide functionality for generating random locale - based random values based on available locales
tika - 3457 -- add mime - type test for font and font - printer metric
added 8.0 , 9.0 to the list of supported versions in Installer . java and AutoUpgrade . java to ensure compatibility with
removed unnecessary ` AccessController . doPrivileged ` call in ` TCPTransport . java ` to streamline security management during thread name setting
modified the read method call to include a default read timeout of 0 in Http2AsyncParser . java to ensure that the read timeout is set
updated WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to increase the initial delay for improved
updated the error message to include the previous column name in the primary key column restriction to improve clarity and accuracy of error reporting for better debugging
added date formatting support for customizable date fields in ThirdEyeJiraClient to enhance date handling capabilities in the application
refactor priority frame generation to use a new generatePriorityBody method to enhance code clarity and maintainability by centralizing header generation logic
added a constant for the maximum scalar replacement code size and updated the condition for scalarReplace to ensure scalar replacements only occur when the entire class length
added DATE _ TAKEN to the projectionTest array and updated sorting logic accordingly to include a new date column for media data retrieval
updated drawImage parameters in TexturePacker2 . java to correct rectangle positioning to ensure correct rendering of images by removing unnecessary padding
added WebSocketUpgradeFilter to JettyWebSocketServerContainer and improved logging in JettyWebSocketServletContainerInitializer to enhance WebSocket upgrade filter management and
shutdown the validate sign service and transaction handle pool to prevent memory leaks
added ` RawJsonRequestBodyAnnotationProcessor ` and registered it in ` JaxrsSwaggerGeneratorContext ` , and registered it in ` Echo `
added a new method ` newTarget ` in ` LoggerUtils ` to create a new ` Target ` instance with specified target type and extension to
updated ListBeanContainer to utilize ArrayList for entries and added a new BeanContainerTests class with a test for operation verification to improve performance and
fix typo in testmetricsregionserver . java ( # 1748 )
fixed memory leak in cachedoutputstream when exchange be complete
fix teltonika position to use deviceid
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line to improve code readability and
added null check for assignment operators in Attr . java and created a new test class in FailOver15 . java to ensure proper handling of null
added a boolean flag ` enableAccountHandling ` to control account handling behavior in ` FirstRunActivity ` and ` BaseActivity ` to control the
[ geot - 5769 ] heuristically find main connected polygon in isoschroneresource
updated DrillViewTable to accept a list of paths for views and modified WorkspaceSchemaFactory to accept a schemaPath parameter to enhance flexibility
added configuration parameters for PooledByteBufAllocator in PooledByteBufAllocatorL . java to enable customizable allocator configurations for Netty performance
updated ObjectInputStream to handle short arrays instead of double arrays and added CloneArray class for testing to ensure correct array cloning behavior for different data types
added LLAP _ IO _ THREADPOOL _ SIZE configuration to configure the number of threads used for low - level IO to improve thread management
register ssllogger and debug class for jdk 11 +
updated latlongrid . java to calculate the minimum range and added assertions in TestLatLonGrid . java to improve boundary checks and ensure correct
danielwagnerhall : extend expectconditions to implement new method ` invisibilityofelementwithtext ` and ` refreshed
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and modified its access level to enhance file replacement functionality by allowing insert
added a new test method ` reflector _ getOuterClass ` to ` SomeInnerClassReflector ` in ` ReflectorTest . java `
updated configuration parameters from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources " and
refactor message handling in HubChangeExecListener to use a variable for the message to improve readability and maintainability of the code
added properties field and its getter / setter methods to the Link class , along with corresponding getter and setter methods , and created tests for overriding properties
removed redundant @ EqualsAndHashCode annotations and added a toString method in YamlConfigFileDTO to streamline code and provide a clearer string representation of
updated generic type parameters in ` AwaitableServerClientCallConfiguration ` for ` ReqT ` and ` RespT ` to ensure type safety
added CallerSensitiveAdapter annotations and refactored forName methods in mmm Class . java and ppp Class . java to enhance security by ensuring
replaced Hamcrest ' s Matchers with Hamcrest ' s IsEmptyString and updated authentication handling in RequestItemRepositoryIT
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` for improved thread management to enhance code clarity and maintainability by using more
changed the access modifier of the setSecurityContextAccessor method from private to public to allow access to the method from outside the class
replaced the HumanTimeConverter with a ChronicConverter and updated related imports in TimeStepdefs . java to enhance compatibility with Cuc
fix the spelling of " sis " and " sis . " in the modbanners . java file .
updated the proxy creation logic to use ` exchangeSpecification . getUri ( ) ` instead of ` ExchangeSpecification ` to ensure the proxy uses the correct
removed unnecessary print statements and simplified output format in RecordGenerator . java to improve code readability and maintainability
camel - 14850 : remove auto commit from kafka consumer when auto commit be enable
modified lock handling in Liquibase classes and added database change log support in StandardLockService to improve lock management and ensure proper output statements
updated the ` @ SuppressWarnings ` annotation in ` AbstractAuthorizeTag ` and added warnings in ` AuthorizeTagCustomGrantedAuthorityTests ` to improve type
mondrian : fix concurrency issue in database . java and sessionremote . java
refactor property resolution logic in SpringBootAutoConfigurationMojo . java to use ResolvedProperty class to improve clarity and maintainability of property
changed the base symbol from ' baseSymbol ' to ' counterSymbol ' in the VirtExMarketDataService class to ensure the correct
( chore ) camel - core : fix checkstyle violation
updated the way the " testId " field is set in HoneycombJdbcInterceptor to use System . getProperty ( " testId "
synchronize access to dateformat , longformatformat , and dateformat in defaultjobparametersconverter
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
change heightmap . setheightscale ( ) to use heightscale instead of 256 to ensure consistent height scale across the application
removed type check for String in SecurityConfig and changed assertion from assertEquals to assertNotSame in SecurityConfigTests to ensure consistency in string equality
modified the initialization of dumpPartitionId to default to false to ensure that the default value of dump - partition - id is set to false when
added imports and implemented mocking for transaction output handling in UTXOSetTest . java to enhance test coverage and ensure proper functionality of transaction
[ java ] unusedvariableto - rule - fix # 1181 unusedvariableto - fix # 1186
pdfbox - 2576 : avoid npe , a suggest by valerybokov
added a test for new job parameters overriding previous restart parameters in JsrJobOperatorTests . java to ensure that the job restart properties are correctly
added a new boolean field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ( ) ` in `
refactored the assignment of ` principal ` to improve clarity to enhance readability and maintainability of the code
replaced direct core shutdown with an executor service for better handling of core closure to improve thread safety and ensure proper resource management during core closure
added null check and visibility setting for mActionsView in RecentsView . java to ensure mActionsView is only visible when fullscreen
refactor parameter handling in RunIdIncrementer to use a default JobParameters instance to improve robustness by avoiding null pointer exceptions
refactor BasicEntity and TestUtil classes for improved code organization to enhance maintainability and readability of the codebase
added assertions to verify the expected results of the getMatchedDevices method in SchemaRegionBasicTest to ensure the test accurately reflects the expected
[ 3.0 ] try to invoke metric event handler in try / catch block ( # 10399 )
updated EigenvectorCentrality . java to handle zero max cases and added a new EigenvectorCentralityBuilder .
updated multiple Java files to use dynamic port assignment and improved registry lookup format to enhance flexibility and maintainability of registry management
fixed netbeans 4.0 and 4.1 compatibility issue in geometrygenerator
change the amplifier value from 2 to 0 in BlockEntityBeacon . java to ensure correct delivery behavior for Beacon messages
refactor TubeCalc class to improve code readability to enhance maintainability and simplify future updates
disable http client health check by default
defaultvalidator : make group list immutable and add inherited group to the group list .
updated the ` @ key headful ` annotation and modified the main timeout in the ` bug8057791 ` class to improve clarity
modified the initialization of the ScheduledExecutorService to use a daemon thread to ensure that threads are not daemon to prevent application crashes due to main method
fix lexica botania version string error in the lexicon
added a reflection access check in the JavaAdapterFactory class to enhance security by ensuring proper access control for types
camel - 13850 : camel - mina : added option ` ` lazy - session - creation = true ' ' to the test method
updated initialization of IO context in CombineHiveRecordReader and HiveContextAwareRecordReader to include RecordReader as a parameter to enhance flexibility
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to streamline the codebase
added a new method ` configurationChanged ` in ` FileStore ` and improved file existence checks in ` ScanClassPath ` to enhance file management
added try - catch blocks around session callback registration and unregistration methods to handle potential exceptions during callback registration and unregistration
removed leading slashes from index file paths and added new entries for " 22 . cfs " and " 23 . nocfs " to simplify index
[ hotfix ] make akkarpcserviceutils . createserpcservice ( ) configurable
added a retry mechanism to set the maximum number of attempts for mapreduce in TestExportSnapshot to improve stability by allowing retries when the map
pdfbox - 4892 : turn on non - symbolic flag , a suggest by valerybokov
added a new test class ` SslConnectionTest ` to validate SSL connection behavior to ensure that SSL connections are correctly closed before filling the connection
added validation for IPv4 and IPv6 addresses and improved error handling in InetAddress and NetworkInterface classes to ensure that only valid addresses are processed and
added a test for date serialization in the DefaultTypeAdaptersTest class to ensure correct serialization of dates in a collection using Gson
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
nifi - 2590 added additional logging for generated SQL in PutDatabaseRecord . java to improve traceability of SQL generation and ensure correct
adjusted loop condition in TableOutput . java to correct index calculation to ensure proper alignment of the table output based on the remaining width
pdfbox - 4071 : remove unneeded null check , a suggest by valerybokov
change priority of VA _ FORMAT _ STRING _ EXTRA _ ARGUMENTS _ PASSED to high _ PRIORITY in FormatStringChecker . java
add property to ignore non final loop variable in a for - each statement .
added PDF version 1.5 and full compression settings in PDFExporter , updated sample file , and modified PDFExporterTest to use Java . g
added unit tests for LdapUserDetailsMapper to ensure correct handling of role attribute mappings to ensure correct functionality and behavior of role attribute mapping in LDAP
configure ldap read timeout ( in milli second )
8274894 : jdk / jfr / event / gc / gc / g1 / testdescription . java fails due to
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
replace ` shouldCacheIterator ` with ` shouldAvoidAllocation ` across multiple classes to improve clarity and maintainability of the code
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only occurs when the handler is invalidated
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex values in Workspace . java to optimize folder creation orientation and improve performance during folder
updated import statements and modified property handling in OciConfigConfigSource . java to improve configuration management and ensure proper property retrieval
refactor Testjsig class to improve code structure to enhance maintainability and readability of the code
change mana calculation to take count of the stack . getcount ( ) into account .
regenerate client with updated copyright year ( # 4382 )
removed the serialVersionUID field and added a @ SuppressWarnings annotation in P11TlsPrfGenerator . java to suppress serialization warnings for better code clarity
replaced the validation check for the tsFileNotValid variable with an isEmptyFile check and added error handling for the origin file existence to improve
added new classes Switch21 and Switch19 with methods for pattern matching , null , and guard pattern handling to provide a structured way to handle specific
updated error messages in ComparableSubjectTest to remove redundant details to streamline error reporting for better clarity and maintainability
[ bugfix ] add test case for standalone flag in ooxml ' s openxml4j
updated the validation logic and improved array size validation in Int2ObjectCache . java to enhance error handling and ensure proper array size validation
replaced security filter chains and customizers with ordered filter chains in WebSecurityConfiguration to ensure consistent ordering of security filter chains based on bean definitions
removed TimeInForce . GTC from the order type in BinanceTradeService . java to simplify the order data by eliminating unnecessary
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer and added validation for min and max values to improve code maintainability and ensure
change KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to align key separator
camel - 16400 : added documentation for the jms component . thanks to benjamin for the patch .
updated the method in SourceUtils to handle NoSuchFieldError and added a new test class TestGetBound to improve error handling and ensure correct type
refactor LeafFilterFactory to use a helper method for creating filter predicate builders based on Parquet type to improve code readability and maintainability
added checks to ensure the original artifact name starts with the SCOPED _ TARGET _ BEAN _ PREFIX before processing to prevent potential issues with artifact
update the certificate handling logic to read all certificates from the input stream and generate a unique server key to improve security by ensuring only valid certificates are
modified the DNS fallback logic in mmm Config . java and added a new DnsFallback . java file to improve handling of null values and ensure
ww - 4446 add more information when throw exception from defaulttheme . writetags
replaced the boolean success field with a string url field in DepositAddress . java to provide a more descriptive name for the URL
refactor the return statement in WindowsSecurity . java to use a lambda expression for better readability to improve code clarity and ensure proper resource
removed " address " scope from the CommonOAuth2Provider and its tests to simplify scope configuration by excluding unnecessary scopes
fix concurrentmodificationexception in managedselector # submit ( )
added BIG _ DECIMAL _ 182 _ 04 constant and updated WLedHandler to calculate hue and saturation values to ensure accurate representation of color values
replaced the use of ` Stream ` with a ` Set ` for VALID _ CALLERS in ` VectorizationProvider . java ` to improve
added a caseJSRInst method in InstSwitch . java to handle the case of JSRInst in the InstSwitch class
http : / / issues . apache . org / jira / browse / amq - 4358 - subscription - activatingsubscriber now
refactor database update and insert operations in DBMSProcessor . java to improve code readability and handle SQL errors more gracefully
added elevation property to ContactItemInflater for compatibility with devices running Lollipop or higher to enhance the visual appearance of contact items
[ java ] rename typeinformation to identifier to be more descriptive .
replaced direct file read and write operations with privileged actions to enhance security by ensuring privileged actions are enforced for file operations
refactor Groovy parser and printer to handle binary operators and space handling to improve clarity and functionality of binary operations in the code
updated warning log message to include the exception class name instead of the exception message to improve logging clarity by providing more context in the warning message
modified byte and compressed flag handling in RecordInputStream and UnicodeString , and added a test for UMLat read write in TestUmlat
added unit test for file download with norway characters in the name to ensure that the download functionality correctly handles file names with orway characters
replaced RuntimeException with CancellationException and added cancellation checks in AsyncResource . java and fingerprint scannerSample . java to improve error handling and provide
[ hotfix ] [ state ] fix potential npe in timedmemberstatefactory
added a new test method to remove objects from an explicit collection in MongoTemplateTests . java to ensure proper functionality of the removal of objects from
update copyright year to 2022 , for svg , pdf , and font
change newline character from \ n to % n in the String . format method to improve readability and consistency of error messages
added functionality to manage the state of the clear - all button in RecentsView and PagedView to ensure proper scrolling behavior based on
added COMMON _ HMS _ PROPERTIES map and refactored parameter handling in HiveIcebergMetaHook and HiveIcebergSer
replaced instances of ` BindException ` checks with a new method ` isAddressInUse ` to improve code readability and maintainability by central
added a command line argument to specify the test class path in TestNestmateAttr . java to ensure the test class path is correctly
removed unused Logger import and changed VERBOSE definition to verbose _ schema to streamline code by eliminating unnecessary dependencies
add checkstyle rule and fix some warning
# 714 - enh : add use of nested savepoint for nested transaction ( # 714 )
replaced ` int ` with ` ThreadLocal < Integer > ` for ` fetchSize ` in ` QueryProcessExecutor ` and updated related methods
[ java ] remove backoffidlestrategy and sharenetworkidlestrategy from embeddedpingpong .
allow return null from non httpclientresponse instead of throw an exception
added HDP _ VERSION retrieval and system property setting in SliderAppsViewControllerImpl . java to ensure the HDP _ VERSION environment variable
replaced the ` loaderClass ` and ` jusl ` fields with private ` loaderClass ` and added ` close ( ) ` methods
added DeepCloner functionality and modified parameters in ParameterizedRobolectricTestRunner and RobolectricTestRunner classes to enhance XML parameter
added bind for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to enable stack trace visibility in the WebServer configuration
added type checking for OBJECT in NativeObject . java to ensure proper handling of OBJECT types to prevent potential runtime errors
replaced specific OopField declarations with a more generic OopField and updated the handling of well - known classes to improve type resolution and
updated JwkKeyListView to utilize PublicKey instead of RSAPublicKey and added base64 encoding for modulus and exponent in JSON output to
[ gr - 10611 ] make ro - data writable only when spawnisolates be enable .
modified MBeanServerMXBeanUnsupportedTest . java file to enhance test coverage for unsupported methods
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and streamline the code
updated methods in Actuator , CreateAccountActuator , TransferActuator , and VoteWitnessActuator to include getOwnerAddress ( ) as a
http : / / issues . apache . org / jira / browse / amq - 4898 - add an example of how to
replace direct usage of ` toByteArray ( min ) ` and ` toByteArray ( max ) ` with calculated values for min and max in ` sendCommand
[ corenlp ] fix proto serialization of node and edge with empty index .
[ java ] remove non exist set entry when remove correlation id from async event .
added conflict handling in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure proper state management during file operations
added generic type parameters to the ExecutionContext class and related methods to improve type safety and eliminate unchecked warning in the code
replaced references to ` StrUtils ` with ` org . apache . lucene . analysis . charfilter ` in multiple filter factory classes to
added support for Oracle and MySQL driver properties in DatabaseFactory to enable remarks reporting and use information schema for Oracle and MySQL databases
updated the constructor of ` SignedSupportingClassProxyFactory ` to accept a handler parameter and added a serialVersionUID to the ` mockedMethods `
updated time tracking in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of Date . getTime ( ) to improve accuracy in
[ hotfix ] [ table ] wrap classloader in executioncontext to avoid classloading issue
added buffer change handling in TerminalView and updated buffer height calculation in TerminalTextViewOverlay to improve responsiveness and ensure proper handling of buffer
updated formatting and added null checks in processConfigFile method to improve code readability and ensure proper handling of configuration files
modified the freeze and disable logic in OperationActions and OperationRegistry to support different TVM freeze scenarios to ensure proper handling of frozen operations based on
added support for insecure SSL configuration in TlsConfig and TlsUtils to enhance security options for trust store operations
refactor code to simplify source and class path handling in JavadocTool . java and introduce new classes T7091528 . java to
replace nodeColumns with edgeColumns and add edgeIdColumn for case - insensitive ID matching to improve code readability and ensure consistent handling of edge
added cascade option to the @ OneToOne relationship in DefaultUserInfo . java to enable cascade for the association to be retrieved from the DefaultAddress entity
http : / / issues . apache . org / jira / browse / amq - 4358 - replace message . hashcode ( )
updated the character set for the " X - ISO " header and response body in AsyncProvidersBasicTest . java to ensure proper handling of Unicode
[ hotfix ] [ rocksdb ] remove unused test method in rocksdbSerializedcompositekeybuilder
added a method to retrieve the static permissions from a ProtectionDomain and updated the logic for subjectPd assignment in SubjectDomainCombiner to
fix npe in recipe handler when pick up recipe . close # 1193
modified the parsing logic in the Parser class to correctly handle cases where the " ( " character is unexpectedly encountered ) " condition to ensure proper
added a method to display a error popup for connection errors in UploadMediaDetailFragment , UploadMediaDetailsContract , and UploadMediaPresenter to improve
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to check for unsupported media types to ensure proper handling of
change bitwise operation from bitwise AND to bitwise AND in NodeBitMap . java to ensure correct handling of long values for bitwise operations
refactor ImportLayoutStyle class structure to improve code readability and maintainability
refactor ConsoleUIService to replace GitBashConfigValue with useStdIn and add TERM _ PROGRAM constant to improve input handling
replace mock behavior with assertThat for better readability in ShadowAccountManagerTest . java to improve test reliability and clarity by using a
do n ' t cache the enclosing type in analysistype # getenclosingtype
renamed method calls from ` getEntries ( ) ` and ` getEntries ( ) ` to ` property0 ( ) ` and ` entries ( )
[ flink - 18441 ] [ runtime ] fix set null value in putallcallable to avoid race condition .
[ rocketmq ] fix npe when consumer be empty or not not on client instance ( # 8752 )
[ java ] generate source identity when create a new connection to the driver .
added a new file ` TopTabAction . java ` that implements the ` Presenter ` interface to display a top - level tab to enhance
camel - 17850 : camel - core - optimize rout engine to do as much in init phase vs start phase .
updated imports in AggregateItemReaderTests . java and modified test setup annotations to improve test structure and ensure proper setup of tests
updated the return type of the Procedure constructor from Object $ { valueTypeCap } to Object $ { valueTypeCap } < T > to improve type
updated import statements and added methods for managing Wikidata edits in AchievementsActivity , NetworkingModule , and OkHttpJson
added a validation check for the ' len ' parameter in OfflineSorter . java to ensure that ' len ' is within the maximum Short . MAX
fix problem with ` ` int . max _ value ' ' and ` ` long . min _ value ' ' .
renamed multiple dataset classes in the project to improve consistency and clarity in naming conventions
updated exception handling to include acceptable credential types in ProvisionClusterRequest . java and modified test expectations in ProvisionClusterRequestTest . java to improve error
updated random value generation for ` v [ 0 ] ` and ` v [ 1 ] ` in ` TestVectorUtil . java ` to ensure
changed the return type of the compareBy method from int to long and refactored time comparison logic to improve precision and simplify time comparison logic
added SSL handling in TestUtil . java and modified PGPropertyTest . java to set SSL property to true to enhance security by allowing SSL connections
# 1528 fix ` ` exe ' ' or ` ` dmg ' ' file download in chrome
added null check for oldConfig before calling setFlightConfiguration in BaseMotorMount . java and RecoveryDevice . java to avoid potential NullPointerExceptions
added a condition to check if transcoding is disabled based on the renderer ' s configuration to ensure proper rendering behavior when transcoding is disabled
added a check for empty gherkinRows and improved return behavior for empty lists in DataTable , TableDiffer , and TableDiffer
added a new static string ` CustomIgnoreTag ` and conditionally remove it from the iterator if the native code starts with ` CustomIgnoreTag
camel - 16400 : optimisticlockingaggregationrepository now throw optimisticlockingexception rather than runtimeexception .
fix : add parent config property to allow reflection
refactor PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and update toolbar padding accordingly to improve layout responsiveness and ensure
deleted the ClusterNodeInfo . java file to the functionality was deemed unnecessary or redundant
updated return statement in ShieldedTransferActuator . java to ensure proper functionality of the method
added debug output for standard and legacy ciphersuite selection in ServerHandshaker . java to improve visibility into ciphersuite selection during handshake processes
updated ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle single and multiple templates appropriately to improve user experience by
added a ` nodeLabelMap ` to track duplicate node IDs and updated related logic to allow users to check for duplicate node labels instead of ignoring
added a new file R2303044ListSelection . java that implements list selection functionality to demonstrate the use of selected items
[ java ] remove unused registration id and add error check for already in use correlation id .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when accessing mWorkspace
added a new test method to verify compound name retrieval in StepScopePlaceholderIntegrationTests . java to ensure that compound names are correctly managed and validated
replaced row counting logic to directly use the current row count from parentStats to streamline row counting logic for better readability and maintainability
added path URL formatting and streamlined path parameter filtering in SpringBootDocBuildTemplate . java , and updated mock value handling in DocUtil .
change logger to be final in GuiActivator , NotificationManager , and SystrayActivator classes , and streamline action handling in
replace ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and add materializeSourceFilesOnDemand ( ) method to
updated RuntimeException to include JSON parsing error message to improve error reporting for better debugging and error reporting
added a conditional check for DEBUG before logging a string message in WidgetsModel . java to improve performance by avoiding unnecessary string formatting when debugging
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of ` numTerms ` in ` SimilarityBase . java ` and added a test for discount overlaps in ` TestSimilarity
added reflection - based method checks for sending messages in SimpleMailMessageItemWriterTests and MimeMailMessageItemWriterTests to enhance test reliability
added new exit and quit methods with corresponding properties in Global . java and removed the duplicate quit method from ScriptingFunctions . java to streamline
fix typo in loanbrokersharkdetectordemo
rename methods and variables from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming
[ vmware ] fix npe when a cookie not find in the vwware web service request context .
swapped the order of authorities and authority assertions in the ResinAcegiAuthenticatorTests . java file to ensure consistency in the assertion
eckey : use non - negative r and s value when generate a bigintegertobytes .
changed the property key from " fml . disabledMods " to " fml . modStates " to align the system property with the
refactor account selection logic into a separate method for clarity to improve code readability and maintainability by reducing redundancy
improve error message when we ca n ' t connect to the client
added error handling to ensure an empty result is returned from the validator smart contract call to improve stability by preventing crashes due to unexpected
refactor JSON reading in TexturePackerFileProcessor to use JsonValue for better handling of empty files to improve code clarity and prevent potential
removed conditional check for ` getDataSource ( ) ` and ` getDataSourceJNDI ( ) ` in ` PooledConnection . java ` to simplify the
increased the TARGET _ MB and WINDOW constants from 10 , 000 to 1 , and modified the count calculation to optimize memory allocation and
added null checks for currentConsole before invoking write methods to prevent potential NullPointerExceptions when currentConsole is null
( chore ) camel - aws2 - kinesis : increase wait time for credential to be refresh
replaced multiple instances of AlertDialog . Builder with a new method ` showInfoAlert ` to improve code readability and maintainability by central
updated the method signature of ` test ` to include a ` pack ` parameter and added a package argument to enhance flexibility in testing by allowing
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 and modified Hamcrest matchers imports to
consolidated multiple import statements into a wildcard import and added a check for provided dependencies before adding to the list to improve code readability and
added a set to manage ZipFileInputStream streams and updated releaseInflater calls to ensure proper resource management and prevent memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to improve code readability

corrected the method name from ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in ` BlobServer ` and
replaced calls to ` findAny ( ) ` with ` findFirst ( ) ` and added a new method ` getAnnotations ( Class < T >
added support for " ppc64 " and " ppc64le " architecture checks in Bits . java and ByteArrayAccess . java to support
improve error message for activity resolution failure in RoboMonitoringInstrumentation . java to provide clarity on the reason for resolving activity issues
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of MINUTES for time comparisons to improve performance by reducing the wait time
[ test ] use ` java . time ` api instead of ` date ` class
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a Toast message indicating that YouTube Player doesn ' t work on Lollipop yet to inform users about it ' s not
added error handling for unterminated SQL statements in Parser . java and new test cases in StatementTest . java to ensure proper parsing of SQL statements
fix crash when there be no vibrator .
updated table border and cellspacing settings , modified column background color assignment , and introduced arrowhead handling for primary keys to improve column appearance and
added a method to check if a configuration variable is encoded in HiveConf and updated SetProcessor to handle URL decoding based on this check to improve
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve certificate validation logic to enhance security and maintainability of the certificate handling process
validate uri in wavefrontconfig ( # 3903 )
refactor ImageView references to NetworkedCacheableImageView and update related classes to utilize a new caching mechanism to improve image loading efficiency
removed the ` View ` parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and eliminate unnecessary parameters
updated Gamepad API versions in DependencyBank and BuildScriptHelper to reflect the new release of the controllers to ensure compatibility with the latest gamepad
refactor methods in LaunchedURLClassLoader to improve code readability to enhance maintainability and facilitate future updates
updated ` DataSourceHealthIndicator ` to utilize ` DataAccessUtils ` for querying results and improved column count validation to ensure that the database
add ` ` no - cache ' ' header to lubomics response .
updated warning message formatting to use Locale . ENGLISH to ensure consistent behavior across different locales
modified the constructor of SolrQueryParser to accept an additional QParser parameter to enhance flexibility by allowing different analyzer implementations
added copyright year to several Java files and removed unused imports in PendantAction . java and FileBrowserToolbar . java to prepare for the
removed redundant code in MainTest . java to streamline code by eliminating unnecessary complexity
refactor TypeContributions class to improve type inference logic to enhance performance and maintainability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VectorizedRowBatch for VoidColumnVectors
updated the parameter name from templateName to req . getName ( ) in StatementGenerator . java to ensure consistency by using the request object ' s name
removed the method isTypeMatch for checking boolean types in AbstractConfig . java to streamline the configuration handling by eliminating unnecessary boolean type matching
[ java ] add offer method to the sessiondecorator so that it can be use for correlation id and timestamp .
updated method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndex ` in ` XForwarded
fix the bootstrap inserter so it do n ' t generate empty static block when there be no bootstrap .
refactor maxFileSize and flushSize initialization to use value retrieval from TableDescriptorBuilder instead of accessing them directly to simplify code and improve readability
use the requestedCommits variable instead of maxCommits in BranchGraphServlet . java to ensure that the number of requested commits does not exceed the maximum
updated method signatures in bug6794831 . java to include InvocationTargetException and changed invokeLater to invokeAndWait to improve error handling and ensure
added a static final ` BUILD _ ID ` constant and refactored metadata handling in ` CachingBuildEngine ` to improve build identification and
removed unused imports TxInputUtil and TxOutputUtil from TransactionCapsule . java to clean up the code and improve readability
removed duplicate line of code in HttpProtocol . java to streamline the code for better readability and maintainability
added import for TezConfiguration and integrated it into TezConfigurationFactory to facilitate configuration management in the Tez framework
added a null check for keyPurposes in TimestampedSigner . java to avoid potential NullPointerException when keyPurposes is null
modified the conditional structure in the CustomPlaybackOverlayFragment class to improve readability and maintainability of the code
added an ` forget ` method to the ` OpenALAudio ` class and modified the stop logic to check for null values before stopping the least
fix position discontinuity report twice in simplebaseplayer # invalidatestate
added DecimalFormat and NumberTickUnit instances for different numeric formats in NumberAxis . java to improve formatting and representation of floating - point numbers in the
replaced instances of builder ( ) with TargetGraphAndBuildTargets . of ( ) in multiple files to simplify the code and improve readability
removed the IndexFileNameFilter class and updated related conditions in IndexFileDeleter . java , IndexWriter . java , and TestIndexWriter .
added fullboundingboxladders property to forge dummy container to avoid unstitched texture stitcher .
added a default compression level parameter to multiple methods in ApkBuilder and SignedJarBuilder to improve flexibility in handling different compression levels during Ap
added a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to ensure that static fields in generated Java files are
added support for the BYTES data type in multiple classes and updated related logic to enhance functionality to support byte data representation in the MetricFieldSpec and
updated string construction and message formatting in multiple failure error classes to improve readability and consistency of error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` to improve code
added CacheManager and CacheManager imports and updated test methods in SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPagination
fix the pronunciationmodel to work with locale - dependent pronunciation property .
modified the form body builder initialization in SimpleHttp and added new test cases in TestHttpPlugin to handle null post data gracefully and improve test coverage
added a dispatcher to shutdown the okhttp service in ClientSideSlb and updated tests in ClientSideSlbTest to ensure proper resource management and
modify texture positioning logic in TextureRegion . java to account for vertical flipping to ensure correct vertical positioning when vertical flipping is applied
throw invalidconfigurationexception instead of hazelcastexception for unknown discovery strategy property .
changed the contextPath variable from final to non - final and added a null check for it to ensure that contextPath is set to " NA " when
[ drools - 6640 ] fix handling of modified type during kie - container reinitialization ( # 6640 )
added a new constant B _ TREE _ MAP _ ROOT _ HEADER and validation in BTreeMap . java to ensure correct serialization of the
added support for ` precompiledHeader ` and updated related methods in ` AbstractCxxSourceRuleFactory ` and ` AppleDescriptions ` to
replaced WeakReference with a custom AccWeakReference class to manage security context during image updates to enhance security by ensuring privileged actions are
changed access modifier of findNextIndex method from package - private to private in ObjectSet . java and modified removal logic in OrderedSet . java to
changed the value of isDirect from true to false in VertexBufferObject . java to correct the logic for determining if the object is direct
fix a bug in maryclient . getaudioreffecthelptext ( ) that throw an exception if an effect do n ' t
updated return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to improve method usability by providing
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added a null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
refactor border spacing calculations in ` DeviceProfile ` and ` CellLayout ` to differentiate between folder and folder layouts to improve layout consistency and
replaced NumberFormat parsing with a custom ValueNumeric class for numeric values to improve code readability and maintainability by centralizing value parsing logic
added a condition to check if the response is not deferred in the login or error page to ensure proper handling of deferred authentication scenarios
updated command - line arguments checks from " -- module - startd - ini = " to " -- add - to - start " to improve
added a default partition value to the dynamic partition values in DynamicPartitionFileRecordWriterContainer to ensure that a default partition value is used when no
[ hotfix ] add null check for operatorfactory in streamnode and streamgraph
updated the construction of the ` getConflictId ` , ` getGroupId ` , and ` getType ` methods in ` DefaultArtifact . java ` to
camel - kafka : fix rebalance issue with offsetstaterepository . getstate ( )
improve error message if a dependency be miss in the classpath .
change gmail notifications config key from enable to enable .
doc : [ flink - 30536 ] [ protobuf ] update java documentation for the java . security . crypto . key
updated the expected message count in LumberjackMultiThreadTest from 125 to 25 and increased the concurrency limit to improve test reliability by
check if the player be not dead to prevent player from become inactive .
updated method signatures in Exchange . java to improve code clarity and maintainability
api : updateuser api : fix typo in api _ key and api _ key parameter description
replaced switch - case statements with if - statement for better readability in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning ,
refactor AbstractMetaDataExportMojo class structure to improve code readability and maintainability
added SQL integrity constraint violation handling in Hive . java to ensure that dropping a table is not allowed to drop materialized views that are used
corrected the casing of the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency with naming conventions in
added a new deprecated class ` RoboExecutorService ` in the ` org . robolectric . util . concurrent ` package to mark the
added conditional checks for root groups in GroupTreeView and adjusted menu items accordingly to ensure proper functionality for root groups in the user interface
removed unnecessary whitespace and improved path validation logic in BraveClientExecutionInterceptor . java to enhance code readability and ensure correct path handling
updated the argument handling in TestDynamicNumberOfGCThreads . java for improved clarity and flexibility to enhance the flexibility of
changed return types and variable types from ImmutableList to ImmutableSet in CxxPlatforms . java and KnownBuildRuleTypes . java to improve type safety
updated SQL table creation logic to handle optional create options and parameters to improve flexibility in SQL table creation options handling
improve the visual appearance of the chat background of the chat window .
test : migrate ctiteratortest to junit 5 ( # 4511 )
added clear ( ) method calls in various tokenizer classes to ensure proper token management and prevent overriding of next ( Token ) method
[ java ] astinitializer should n ' t crash on block statement .
added configuration checks for StateMachine and StateMachineFactory with missing configurers in StateMachineConfiguration and StateMachineFactoryConfiguration classes to ensure that
danielwagnerhall : remove unnecessary link element from selenium test suite
updated StringConverter logic to set maximum fraction digits for both Double and BigDecimal types and adjusted corresponding tests to ensure accurate formatting of formatted values based on
remove the check for currentunitofwork . isstarted ( ) in aggregatelifecyclestate . getcurrentscope ( ) .
updated touchable insets in TaskbarDragLayerController to use a region instead of content to improve user interface responsiveness by allowing more flex
removed a conditional check for the ' ~ ' character in the FencedCodeBlockParser to streamline the code by eliminating unnecessary
added support for a socket timeout property in multiple classes to enable customizable socket timeouts for stream operations
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to ensure proper handling of interruptions during test execution
updated BufferedReader initialization to use UTF - 8 encoding when reading from URL to ensure proper handling of character encoding in HTTP response reading
refactor List . java to improve code structure to enhance maintainability and readability of the code
added constructors to AsyncFileImpl to handle URI and Path respectively , and updated context handling with an exception to improve error handling and ensure proper context
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to enable stable status management for improved API documentation
nuage vsp : return empty list instead of exception when no domain be configure on physical network
renamed the method from ` retryUploads ` to ` retryFailedUploads ` and updated its logic in ` FileUploader . java ` to improve
updated Java version constants in ConstantPoolTagTests . java to reflect new requirements for class file generation to ensure compatibility with Java 9 and above
ignore some error line in recompile ( ) and recompile with - xlint ( )
add a method to clear the client header map to facilitate the removal of client headers
replaced Vector with ArrayList and updated related method calls to improve performance and simplify code readability
updated the default grid column value from 4.0 f to 3f to improve visual representation of grid column appearance
updated the condition to include a check for ` ! forViewCreation ` in the ` hasTableDefined ( ) ` method to ensure that the table
updated regex pattern and variable assignments in TestHS2HttpServer . java for improved clarity to enhance readability and maintainability of the
do n ' t swallow exception in graphprinter # parsesnippet ( )
simonstewart : fix the iedriver to work with firefox
replaced direct addition of BYTE _ BLOCK _ SIZE in ByteBlockPool with Math . addExact to ensure byteOffset does not exceed BYTE _
changed static fields firstEncoder and secondEncoder to instance variables and modified string formatting to use Locale . ENGLISH to ensure consistent formatting across different locales
improve tcp transport to catch unexpected error
add suppresswarnings ( ` ` serial ' ' ) to papplet . java
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and updated the ` OcamlDebugLauncher ` class to simplify
add ` ` save / discard change ' ' and ` ` return to main window ' '
added response type validation in OAuth20DeviceCodeResponseTypeRequestValidator and improved error logging in OAuth20AccessTokenEndpointController and Nexmo
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure proper validation of the buffer index
hbase - 25811 tablemapreduceutil . inittablemapperjob ( byte [ ] , string , class < ? extends inputformat
removed duplicate calls to the append method in AbstractJRubyMojo . java to streamline code by eliminating redundancy
truffle : throw an exception if a language be not find or internal .
added deprecation warning for reserved master commit duration in ReplicationHandler to ensure users are aware of mutually exclusive commit durations for compatibility with Solr 7.
hhh - 14850 - change cache variable name to ` ` cacheforeignkey ' ' to be case sensitive .
use object [ ] instead of long [ ] for handle in eckeypairgenerator .
[ hotfix ] [ runtime ] support suspend job in cancellation state
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState ` to simplify the
refactor filtering and handling of port table and port overrides in UniFiControllerCache . java to improve code readability and streamline
updated thread ID handling from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve thread management by using
remove offer from offerbooklistitems when the offer be already in the list with the same id
replace hard - coded tls version with constant in test
updated MockitoMethodInvocationControl to handle Class types in intercepting and modified SystemClassUserTest and SystemClassUserCases to streamline return
updated NotLoadedException to include the current instance in multiple classes to improve exception handling for specific database objects
added import statement for DisplayUtils and set extra _ file in the intent to ensure proper handling of file data in the intent
added error handling and file management methods in StoreDirect and StoreWAL classes to improve resource management and ensure proper cleanup of compaction files
added task snapshot retrieval and removed redundant calls to stopSwipePipToHome in AbsSwipeUpHandler . java to improve task tracking and
added a hidden property and its getter / setter methods to CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to enhance the
[ hotfix ] [ test ] update remote address in loggingkafkaproducertest
geos - 5396 use styledlayerdescriptor . getld ( ) instead of resourcepool . parsedld ( )
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious shortcuts from being launched
added ID management functionality to TideMapLoader , TmxMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile
updated methods in Manager class to improve functionality to enhance performance and maintainability of the code
updated JDBC connection and session builder to include version 0.13 to ensure compatibility with the latest IoTDB features and improve session management
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo and updated diffOutputControl initialization to handle null values to improve
use put ( ) instead of putifabsent ( ) in jmxregistry to avoid potential npe .
benchmarker : do n ' t log error when single benchmark fails
changed the access modifier of the doPutRecord method from protected to package - private to allow subclassing of doPutRecord for better flexibility
fix checkstyle issue in io / files / tools . java and fileselectorfragment . java
added asynchronous response content tests and updated request handling in FastCGIProxyServletTest . java to improve performance and reliability of HTTP responses in
added a call to start the ReadInteractionsService service to enable launching the ReadInteractionsService for reading interactions
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are only logged when the
added logic to set the mail server port or a default value of " 25 " if none is provided to ensure that the application uses a valid
add retry mechanism to retry sslfactory reload on file change
updated the date format in ObjectMapperProvider from " yyyy - MM - dd ' T ' HH : mm ' Z ' " to " yyyy -
updated the assertion message in SpyingOnRealObjectsTest to clarify the absence of a private class due to Mockito issues to
added functionality to handle line endings on line endings on newline in InlineBoxing and LineBox classes to improve handling of line endings
updated the path string construction to handle null parent cases to ensure proper string construction when the parent directory is not available
removed unused import of DocCollection in TopicStream . java to clean up the code and improve readability
refactor input stream creation in NinjaServletContextTest and add a new test for handling Windows 1250 parameters in multipart form data to improve
updated property configuration in AbstractCasEndpointTests . java to include exposure rules to enhance endpoint flexibility by allowing exposure inclusion for web endpoints
added a validation check to ensure the current graph is a dynamic graph to prevent runtime errors caused by invalid dynamic graph configurations
feat : allow @ scopeone to be use with @ eagerinit ( class < ? > bean ) and fix findbugs warn
add option to suppress exception in jsonpath expression
removed duplicate creation of ControllerLeaderLocator in HelixServerStarter . java to streamline the code by eliminating redundancy
updated usage messages in CLHSDB and HSDB to reference " - help " instead of " CLHSDB " to clarify
refactored the configureChunkProvider method in FaultTolerantStepFactoryBean and removed explicit listener registration in SimpleStepFactoryBean to stream
[ beam - 1343 ] remove deprecate write class , use it from transforms . write
refactor ` ShadowAccessibilityManagerTest ` to replace direct calls to ` getAccessibilityManager ( ) ` with a private variable ` accessibility
add sticker bar notification for usage statistic group ( # 1751 )
removed unnecessary ` SourcePathResolver ` usage from multiple classes in ` AndroidLibraryDescription ` , ` JavaSourceJar ` , ` JavaLibraryDescription
refactor PostgreSQLDatabaseConnector to use a new PostgreSQLEnumDataTypeHelper class for handling enum data types to improve code organization and facilitate
update the expected log path in LogFileTests to use File . separatorChar to ensure consistency in file path handling across different operating systems
replaced instances of ` getMapLocalWork ` with ` getMapRedLocalWork ` across multiple files to ensure consistency in naming conventions related to
added support for dropping index tables in HiveMetaStoreClient to ensure proper error handling when attempting to drop an index table
added visibility check to update disabled flags in RecentsView to ensure actions are disabled when the visibility is not visible to improve user experience by
speed up repl by highlight ` ` ! ' ' on window
clean up crosssitescripting and add a new method addoptionallocalvariable
updated the method for retrieving file paths to use ` toString ( ) ` instead of ` toUri ( ) . getRawPath ( ) ` to
removed an unnecessary line of code in SelectBox . java to improve code readability and maintainability
changed the ` _ metaDataComplete ` variable from ` true ` to ` false ` to correctly reflect the status of metadata completion
changed the return type of ` removeTaskTarget ` to void and modified bitmap handling in ` ThumbnailSearchResultView ` and ` WorkEdu
added environment variable mappings for release flavors in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest . java to
modify vardefinit assignment logic in mmm Lower . java and add a new class T6500701 . java with a test method
added tests for handling new lines in comments and Javadoc in AddImportTest . java to ensure proper handling of new lines in Javadoc and general format
added a hubMode property to AbstractLiquibaseChangeLogMojo and defined its value in AbstractLiquibaseMojo to
simplified the initialization of skipPolicy in JsrFaultTolerantStepBuilder . java and adjusted the conditional check in JsrChunk
added error handling for linkDb path in IndexerMapReduce . java to ensure that a valid linkDb path is used for indexing to avoid
replaced reflection - based method lookup with reflection - based access for setting the index thread pool to improve flexibility and maintainability of the code
removed the SMS address format from the address string to simplify the address format for better readability and maintainability
added a copy method to serialize and retrieve job executions in MapJobExecutionDao to improve data integrity by preventing unintended modifications to job executions
added a new file ` DownloadTest . java ` to implement a test class for downloading PNG data to facilitate testing of image loading
updated language normalization in multiple classes and modified assertions in tests to ensure consistent language identification and improve code clarity
updated exception handling for ROUND arguments in GenericUDFRound . java to use ArgumentTypeException instead of ArgumentArgumentException to improve error clarity and provide
fix npe in managedependencies when there be no managed dependency
updated AntPathRequestMatcher matchers in SecurityConfig . java to exclude specific links from security configurations to enhance security configuration by restricting access to specific
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a check to prevent processing of java . lang . Object in bean definition processors to improve efficiency by avoiding unnecessary processing of java . lang
added an @ Ignore annotation to the HttpClientRedirectTest . java file to temporarily disable the test for future development
updated the ` SUPPORTED _ THING _ TYPES ` set to ` SUPPORTED _ THING _ TYPES ` in ` OpenWebNetBinding
remove unnecessary check for socketstatus . open / stop / timeout in aprendpoint
deleted the SunToolkitSubclass . java file , which contained a method to flush pending events in the AWT toolkit to the functionality
replaced MathUtils with Matrix4 and added a new method hasRotationOrScaling in DefaultRenderableSorter . java to improve translation handling and
added a new test method to TypeHandlerRegistryTest to verify registration of wrapper handlers before primitive types to ensure type handlers are correctly registered before primitive
pdfbox - 4892 : handle alternate color space in pdseparation , a suggest by valerybokov
replace hardcoded URLs with dynamic build configuration values in CommonsApplication and Utils classes to improve configurability and maintainability by centralizing URL
camel - 16400 : camel - health - add health check for component that have extension for connectivity verification - camel - health
fixed an npe in the thorn chakram when there ' s no block at that position .
added a test for altering tables with indexes with primary keys extending primary keys in AlterTableWithViewsIT . java to ensure that the
updated offset initialization in FileFloatSource and added conditional assertions in TestFunctionQuery to improve clarity and efficiency of document handling in tests
removed the ` DrillMongoConstants . ID ` from the fields in ` MongoRecordReader . java ` to eliminate unnecessary references to the ID
added disconnect functionality to YeelightHandlerBase and DeviceBase , and improved error handling in WifiConnection to ensure proper disconnection
added support for auto _ increment syntax in the Parser and created a test for integer creation in TestCompatibility to ensure proper handling of integer values and
fix # 1186 : add test case to make sure sharedinformerfactory do n ' t timeout
server : fix npe , save template detail in private template instead of create a new list
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage instead of Point to improve code clarity and efficiency by
removed deprecated constants from LauncherSettings and adjusted the schema in LauncherProvider to streamline code and improve maintainability by eliminating unused
[ drools - 6641 ] move broker and event generator resource to example
added a new ` legendTop ` variable and updated related calculations in ` PieChart . java ` to improve the positioning of the legend
added a check to return early if the world transform is empty to optimize performance by avoiding unnecessary processing when the world transform is empty
add a new file MaryScriptCreator . java to create MaryScript from input and output files to facilitate the creation of
added a new attribute for the remote source host in the flow file to ensure the server connects to the correct remote host for flow management
removed redundant code for closing the compaction logger and ensured the logger is properly closed to improve resource management and prevent potential memory leaks
replaced " xlink : href " attribute with " href " attribute in ComponentDescription . java to standardize the attribute key from " x
camel - 15836 - camel - aws2 - s3 : add custom executor name for s3 stream upload
hbase - 25829 log regionserver when no matching procedure be find during cluster shutdown
added null checks before logging stopped spans in Slf4jSpanLogger and DefaultTracer classes to enhance robustness by preventing potential NullPointerExceptions
trim whitespace from the active option before adding it to the configuration to ensure consistent option handling by removing leading and trailing spaces
added depth - related preference handling in DepthController to improve wallpaper zoom behavior based on user preferences
added an assertion to verify the success count of the overseer in OverseerTest . java to ensure the overseer ' s
modified the return value of the ` getKernelVersion ` method to always return true for kernel versions 2.3 and 39 to simplify the logic
modified ExecConstants . java to update method implementations to improve performance and maintainability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for test cases
added a method to set scan attributes for paging in ScanUtil and updated TableSnapshotResultIterator to utilize this method to enhance scan attribute management
added a check to ensure lowRange is within the range of 1 , 000 , 000 in both Request . java and RequestV2 . java
changed access modifiers of keySizeEstimator and valueSizeEstimator to protected in AbstractCachedSource and adjusted cache size estimation in AsyncWriteCache to enhance
update zoneId assignment in HostJoinDaoImpl . java to ensure correct zone UUID is set for host response
[ zeppelin - 1887 ] fix utf - 8 encode issue in livy interpreter
updated the filesystem removal logic in ZipFileSystemProvider . java to ensure the correct filesystem is removed from the filesystems list
replaced the ` obj ` field with a ` json ` field in ` HttpRequestBuilder ` to store JSON data instead of storing it in a
updated the polling wait time in SoftAutoCommitTest from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 5 `
# 113 fix flaky test : testng / selenidelogger . java fail if browser be not stable
renamed multiple classes related to the dial package to improve clarity and organization of the dial - related components
updated log error messages in SyncQueue . java for consistency to improve clarity and maintainability of error logging
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to incorporate the latest
updated method from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added
remove hard - coded path for patchy in the client launch provider
[ hotfix ] use factory method to create yarnclusterdescriptor in yarnitcase
reset empty local map stats when there be no data to include
deleted the AllTests . java file to the test class is no longer needed in the project
added new character constants and logic to append non - breaking hyphens and zero - width spaces to the string builder to improve character handling for better
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify behavior of mocking stack trace invocations to
replaced direct calls to ` getResultMappings ( ) ` with a method call to ` getResultMappingsForRowKey ( ) ` to improve code
added a new boolean variable ` eventHandled ` to the ` UIText ` class to track event handling for better event management
deleted the ` Controller . java ` annotation and renamed the ` Weldby ` class to ` WeldModule . java ` to streamline
ruby : capture group in empty check when enter group in tregex
replaced the retrieval of ` LIQUIBASE _ PRO _ LICENSE _ KEY ` with a protected variable ` liquibasePro
mondrian : rename ` ` setmemberreader ( ) ' ' to ` ` setMeasureshierarchymemberreader ( ) ' '
[ gr - 20611 ] add option to generate debug information for tracknodesourceposition .
mondrian : fix typo in mondrianproperties . java .
added support for retrieving specific source paths in Kotlin - related classes to enhance the flexibility and usability of Kotlin build process
added aliases for BATK , BRAH , and MANDAIC in Character . java and updated CheckScript . java to util
replaced direct equality checks with ` . equals ` in ` ExecutionCommand ` and added a utility method ` stringToExecutionCommand ` in ` Stage
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to the SystemScope class to provide a readable string representation of the object for easier debugging and logging
refactor CSS parsing logic to handle percentage processing and improve parameter validation to ensure that the cmyk ( ) function behaves as expected and
added a new test method to validate the reverse range scan functionality in LocalIndexIT . java to ensure that the local index returns all rows for
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase . java ` and updated test method names in `
updated toast messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and LiveTvGuideActivity to use localized strings to
removed unnecessary parentheses in while loops in RendererUtilities . java and adjusted corresponding test assertions in RendererUtilitiesTests . java to streamline conditions and improve
refactor KrakenStreamingAdapters to utilize ArrayNode for retrieving ask and bid sizes instead of separate iterators to improve code readability and
added error handling for SQLite execution in FileContentProvider . java to log an error when adding a column twice during upgrade from 24 - > 30
remove debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor calculation and modified data size calculations in ConvertJoinMapJoin . java to improve memory management and ensure accurate data size calculations
updated the ` buildView ` method to accept a ` Context ` parameter and utilized themed attributes for background resources to enhance flexibility by
added an assertion mechanism for authentication in SecurityMockMvcResultMatchers to enhance flexibility in handling authentication results
vpc : setgatewayid do n ' t throw nullpointerexception in setvpcid ( )
[ beam - 10955 ] ignore flink savepoint test on version 1.11
fix the position of intdef annotation on field in the ui module
modified the loop condition to only iterate through the size of actions to improve performance by avoiding unnecessary iterations when processing actions
updated the ` BitmexStreamingExchange ` class to extend ` BitmexExchange ` instead of ` BaseExchange ` to ensure compatibility with
[ ds - 3762 ] add test to verify the behavior of the parent / child relationship metadata field
fix a nullpointerexception in lodcontrol when spatial be null
updated conditional token filtering logic in ConditionalTokenFilter and modified related tests in TestRandomChains and TestConditionalTokenStream to ensure correct token filtering behavior
fix unsafestorenode . setstateafter to set the state after the field node .
replaced the call to ` super . putAddress ` with ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to verify that the event repository is not empty to ensure that the event repository behaves as expected when no events are loaded
hhh - 14709 fix typo in authenticationattributeprocessor . java ( # 14709 )
added null checks for the key parameter in MacOSXPreferences and created a new file RemoveNullKeyCheck . java to ensure that null keys
removed the implementation of the setTypeface method in CodenameOneTextPaint to ensure that a runtime exception is thrown when a typeface cannot
implemented the ` open ` method in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
simonstewart : remove the deprecated fail ( ) method from the webdriverrunner
removed the condition checking if the item ' s size is greater than zero to simplify the logic for handling empty items
refactor DefaultResultSetHandler to simplify result object creation and introduce a boolean flag for constructor mappings to improve code readability and maintainability by
updated SQL syntax in CreateTableGeneratorTest to include double quotes around the table name in the CREATE TABLE statement to ensure compatibility with SQL standards
added filtering capability to the VectorizationContext by introducing a boolean flag and modifying the return logic accordingly to enhance filtering capabilities based on primitive types
updated the type specification for moveSelectorConfig in ExhaustiveSearchPhaseConfig . java to ensure type safety during configuration inheritance
replaced a new ReorganizeTableStatement instantiation with a direct reference to modifyDataTypeStatement to streamline code by eliminating unnecessary parameters
[ iotdb - 4566 ] fix cluster _ name in confignode and datanode ( # 9368 )
updated connection logging and exception handling in PeerGroup . java and related classes to improve error handling and logging clarity during connection attempts
nano . write ( ) : write blink , conceal , italic , hidden , and underline to nano . write ( )
use adventurenxtconverter . fromadventure instead of hardcoded fixtypes in schematic reader
update return message in NoToStringOnStringType . java to clarify the reason for returning " No # toString ( ) on String "
updated JVM memory settings in TestThreadFailure . java from " - Xmx64m " to " - Xmx32m " to improve
mondrian : retry analyzer do n ' t count fail or skip
update return statement to use the variable ' bandwidth ' instead of ' tokens [ 0 ] ' to ensure correct retrieval of the token based on the
danielwagnerhall for future implementation of selectpopup ( ) , deselectpopup ( ) , and capturenetwork
updated the doPrintEntry method to remove the parameter for storePass and streamlined the key validation process to improve code clarity and ensure compliance
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for dialog and frame opacity and background color in the Dialog and Frame classes to ensure proper state management for undecorated dialogs and
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the `
updated RedisObjectFactory to use RedisStandaloneConfiguration for connection management to enhance configuration flexibility for Redis connections
added check if a message have be play in the chat room after a delay . resolve http : / / github . com / cinch
replaced ` new Callback . Adapter ( ) ` with ` Callback . NOOP ( ) ` in the ` notifyContent ` method call to
refactor ShareOperation creation to use the OperationsService for better handling of sharing operations to improve code reusability and maintainability by centralizing
removed the condition for determining if the value is being injected in BeanDefinitionInjectProcessor . java and added the @ Inject annotation in FieldPropertyInject
replaced direct calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` for clarity to improve code readability and
add check for nullpointerexception in smackintegrationtestframework to avoid npe .
now correctly handle interop subdirs in readexifjpeg ( )
added support for ` ENABLED _ LS ` in ` VersionTargetGraphMode ` and modified ` VersionedTargetGraphCache ` to utilize it to
added a condition to check if the media format is a video before proceeding to ensure proper handling of video formats in the rendering logic
chore : integrate new gapic - generator - java and rules _ gapic ( # 49 )
added loading functionality to LwjglNativesLoader and modified load method in LwjglApplet to enable dynamic loading of native services
added support for an optional Unicode escape feature in the CSVRequestHandler to enhance flexibility in handling special characters in CSV output
added validation for only the Authorization Code grant type in ClientRegistrations . java and updated corresponding tests in ClientRegistrationsTests . java to ensure
enhanced exception handling in Throwable and SuppressedExceptions classes to include additional context and improved error messaging to enhance debugging capabilities and provide clearer
added a new SQL query and updated the OrderedResultIterator initialization in the DerivedTableIT and ClientAggregatePlan classes to enhance query functionality and
added RSquare mapping to the RegressionEvaluator and updated StreamExpressionTest to verify its value to ensure the correctness of the RSquare
[ mdc ] add request header to context in threadcontextmdcservletfilter .
refactor MapWork handling in SparkPlanGenerator to improve code readability and maintainability by using a local variable to enhance code clarity and
added methods to retrieve folder images and country images in PdfJndiReport and PdfSessionInformationsReport classes to improve image retrieval efficiency and maintain
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests to
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for
take ' ismethod ' flag into account when execute interop function .
removed duplicate sleep delay in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating redundancy
added a new file ` KernCrash . java ` that implements a custom font with text rendering to demonstrate and display a
added a fail ( ) method call in LinkedHashTreeMapTest . java to ensure that the test fails without causing errors during execution
added a method ` getInterfaceAddresses ( boolean addPrefix ) ` to retrieve network interface IP addresses based on a prefix to enhance functionality to allow
cancel a scheduled task in the hikkeeperpool if it ' s already cancel
updated the client address reference from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in GroupTransferService . java to ensure
refactor assertion methods in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to validate the functionality of ` MapDB ` to ensure the correctness of map operations
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added logic to validate max age based on today and birth year in ValidatorTest . java to ensure that only valid max age fields are validated against
added GrblLookups for alarm and error codes and updated error handling in GrblController . java to improve error reporting and enhance
updated the scroll return statement to include a condition for zero screens to improve user interface feedback by providing appropriate strings when no screens
removed the ' count ' parameter from the ' getTrades ' method and related calls to simplify method signatures by eliminating unnecessary parameters
updated ConsoleReader to strip ANSI characters and improved index handling in MemoryHistory to enhance readability and prevent potential null pointer exceptions
removed the " . jdk " suffix from the path for jdkPath in JavaBuild . java to simplify the path for the jdk
refactor code to use ` getType ( ) ` directly instead of ` getDescription ( ) . getBuildRuleType ( ) ` in multiple files to
8274889 : jfcmodel . wiresettings ( ) should use a logger instead of system . out
added a check to ensure tolerance is positive in MaximumInscribedCircle . java to prevent illegal argument exceptions when tolerance is invalid
added methods to create and drop a view in TestUtil . java and a test for view privileges in DatabaseMetaDataTest . java to enhance testing
added support for checking stable floats and doubles in NaNTest . java to ensure tests are skipped based on CPU architecture requirements
added a new ` DesktopTaskbarUIController ` class and modified ` TaskbarManager ` to utilize it to control the visibility of
added task count functionality to the ModItemAdapter and updated progress keeper notifications to improve user feedback during task execution and ensure proper UI updates
refactor mmm and ppp files for improved organization to enhance maintainability and readability of the codebase
refactor AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to use a Collection instead of a Set for interceptor management to improve code
changed the DomainAwareServicesManager interface to extend ServicesManager and removed the @ FunctionalInterface annotation to allow the DomainAwareServicesManager to extend
fix resourcepackloader to generate packinfo name with modid .
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
added grow ( ) and growx ( ) methods to Cell class to enable dynamic resizing of cells in the application
refactor DefaultInputHandler to use generics for key bindings and streamline currentBindings management to improve code readability and performance by eliminating
resolve : http : / / issues . apache . org / activemq / browse / amq - 2698 - add try /
changed the data type of ` longs ` from ` long [ ] ` to ` byte [ ] [ ] ` and updated the loop to
deleted the JobParametersPrototype . java file to the functionality was deemed unnecessary or redundant
added support for security configuration in MappingsTable to enhance security checks during data connection operations
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
disable dump to file by default for now
workaround sonar problem on amazon and afts
[ java ] do n ' t update producer limit if it be already in use .
added a condition to check for no info output when dbInfo is null to ensure proper handling of output options when no info is present
allow the presto driver to be configure with ssl = false
added DOMOutputOptions to the build method in DOMConverter . java to enhance error output formatting for better debugging
refactor assertion methods in Assert . java to improve code readability and maintainability
[ java ] add ` ` retain ' ' and ` ` topic ' ' field to event .
update test case name from " FAILURE " to " Test1 " in EventSerializationTest . java to ensure test case name is correctly associated with
[ flink - 20613 ] [ table - planner - blink ] support tumble function in create table statement
changed the import statement for the Parsed class from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` to streamline dependencies
refactor AbstractSessionContext to use read - write locking for SSL context management to improve thread safety and reliability in SSL context management
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` for clarity and updated print statements to
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to align with the
changed log level from debug to trace for no firmware update handler available for a thing with the specified UID to improve logging granularity for better debugging and
added tests for handling null values for date and timestamp in GetObjectTest . java to ensure that the database correctly handles null values for date and timestamp
refactor string handling in StringSubject and Subject classes for improved clarity and consistency to enhance readability and maintainability of the code
added a test method to verify repository permission handling for multiple teams in UserModel to ensure proper functionality of repository permission checks for different repository registrants
added a new file ` Test7088020 . java ` containing a class that tests method handles to ensure that ` WrongMethodTypeException `
replaced the audience restriction matching logic with a audience URI collection in Saml2ResponseValidator . java to improve clarity and efficiency in
refactor cache refresh methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener for better organization to improve code readability and maintainability
changed the initialization of ` _ stderr ` from ` System . err ` to ` null ` and modified error message printing logic to handle potential null
added a new warning constant SEPARATION _ ORDER and implemented stage order checks in BasicEventSimulationEngine to enhance error reporting for active stages
updated the table configuration from offlineTableConfig to realtimeTableConfig in the query optimization to ensure that the query optimizer operates with real -
modified the execution of the ` CREATE _ METRICS _ AGGREGATE _ TABLE _ SQL ` and added functionality to handle ` split
updated SavepointV2 and FileStateHandle classes to improve functionality and maintainability of the code
added BluetoothClass support and test cases in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enhance functionality and ensure BluetoothClass is
corrected spelling of " contains " to " containsProfile " in multiple files to improve code readability and adhere to coding standards
drools - 4952 fix npe when sum ( [ ] ) be use with a null or empty list .
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) to simplify code by removing unnecessary
updated coreNodeName construction to use getCoreName ( ) instead of coreName to ensure correct retrieval of core name from node properties
change chat activity to use the backpressure update mechanism instead of multiple call to update
updated TaggerParserPosTagCompatibilityITest . java with new test cases to improve test coverage for tag compatibility functionality
added @ SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress the test case for
modified element type checks in mmm Types . java and added a new class T7005671 . java with multiple array testing methods to enhance
updated triangle coordinates from 2f * dmax to 20f * dmax in DelaunayTriangulator . java and updated test
added ` @ Override ` annotation to multiple classes in ` ArrayDeque ` , ` HashSet ` , ` LinkedHashMap ` , ` LinkedList ` , `
refactor JWTClaimsSet initialization to use builder pattern with issueTime , expirationTime , and audience claims to improve code readability and maintainability
improve performance of stack overflow check .
added shadow methods for SQLiteDatabase and ContentValues in Robolectric - related classes and removed deprecated methods from ShadowContentValues and SQLiteDatabase
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced bytesPerDim with ArrayUtil . ByteArrayComparator for comparison to improve flexibility and maintainability of the comparison logic
added a new ` script ` variable and modified locale handling in ` Locale . java ` to support additional language and script properties to enhance locale management
updated the method to return the last set text alpha instead of the current text alpha to ensure the text reflects the last set state instead of
corrected a typo in the warning message from " Confimap PropertySources " to " ConfigMap PropertySources " to ensure clarity in warning
updated test suite initialization to use UaaJunitSuiteRunner . allSuiteClasses ( ) instead of multiple test classes to streamline test setup
trim whitespace from token elements in GzipFilter and related tests to ensure consistent handling of whitespace and improve test coverage
updated the assignment of _ outputType in Response . java to ensure consistency in output type handling
updated the default regex implementation from JDK to JONI to ensure compatibility with the latest JDK standards
replaced Handler with FutureTask and modified callback handling in ViewCapture . java to improve performance and simplify callback management for view properties rendering
fix for ticket : 284 -- add support for style query parameter to the web interface
added a check to create a parent folder if it doesn ' t already exist to ensure that the parent folder exists before creating it to prevent errors
updated node discovery bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " to ensure that
( chore ) camel - jbpm : fix class name of inonly and inout
pdfbox - 4892 : remove static import , a suggest by valerybokov
updated ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and modified ` AllAppsGridAdapter ` and ` AllAppsRecyclerView `
updated multiple Java files related to DalvikThrowAnalysis , DexNullArrayRefTransformer , IDalvikTyper , P
fix ( prettyprinter ) : print super for implicit type parameter
[ hotfix ] fix memory leak in operatorcontext
updated string formatting in multiple files for consistency and clarity to improve readability and maintainability of error messages
replaced eviction counter with an AtomicLong and updated related methods in ConcurrentLRUCache . java and FastLRUCache . java to improve
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
updated the condition from checking localHost to checking if intendedDestination is an instance of Inet4Address to ensure that the correct destination is used for
set data root and source root for the database in mainframe to ensure that the application can access the correct database location
added constructors to AdminClientBootstrapConfiguration and AdminServerBootstrapConfiguration to log successful enabling of the Solon Admin client and server to enhance
[ hotfix ] [ table - common ] fix typo in tableenvironment javadoc
updated statement timeout configuration by removing the setStatementTimeout method and modifying its usage across multiple files to simplify the code by eliminating unnecessary timeout
removed unnecessary parameter ` hangingTscTimeout ` from multiple method signatures and added a conditional statement in ` JSweetTranspiler ` and
added GeoLocationRequest and GeoLocationResponse serialization classes to the authentication plan to enable serialization support for GeoLocationRequest and GeoLocationResponse in the
updated precondition checks and replaced usage of ImmutableSourceArtifactImpl with BuildArtifact in the ArtifactFilesystem and ArtifactFilesystemTest classes to ensure correct handling of
tika - 2338 -- allow xls file to be read from a jxl file , and do n ' t throw an exception
make sure ` ` show ' ' and ` ` length ' ' be not triggered concurrent modification
[ java ] add a delay between read from the channel input stream and write to the pipe .
added equality check for ` actual ` and ` expected ` in ` GuavaOptionalSubject ` and corresponding unit tests to ensure proper error handling for
updated visibility checks in BackgroundAppState and ShelfScrimView and modified mMidAlpha calculation in ShelfScrimView to
added a null check for the navigation variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions when navigating outside the navigation
mow - pinimage : do n ' t set ` ` position ' ' for absolute position
rename ErrorOccuredInOnExceptionRoute . java file to improve clarity and consistency in naming conventions
[ astro ] change astro discovery job to schedule with fixed delay
simplified variable initialization for ` irrUnit ` and ` pemUnit ` to improve code readability and maintainability
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang due to performance issues
updated import statements in GuiceFactoryTest . java to include specific dependencies to enhance dependency injection capabilities and improve test coverage
added a systemFeatureList to manage system feature states in RobolectricPackageManager to enable tracking of supported features for improved functionality
refactor property handling in RCAFrameworkLoader and add test cases for augmenting path properties to improve code readability and ensure correct property access
removed a log statement that logs the start of the cancellation watch dog to streamline logging for better clarity and performance
added a null and empty check for enumerationValues in RADProperty . java to ensure that the enumerationValues array is not null or empty before
added handling for start and end text in BoxBuilder and updated InlineBoxing logic to improve the logic for creating and updating inline boxes based on
resolve http : / / github . com / whatismyip / whatismyip . akamai / issues / 2 , make
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column in UpgradeCatalog260 . java to streamline database type handling
updated error messages in BaseTableDataManager to provide clearer guidance on directory permissions to improve user experience by providing clearer guidance on
updated the DatasetUtilities class for improved data handling to enhance performance and maintainability of dataset operations
added a line to append the selector ID in the Matcher class to enhance the readability of the key representation for easier debugging
updated debug logging statements and simplified point transformation in GouraudShadingContext . java to improve readability and maintainability of the code
updated taskbar visibility management and added functionality to manage taskbar visibility to improve user experience by allowing dynamic control over the taskbar visibility based on
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintainability
added a type check for the ` conn ` in the ` CockroachDatabase ` class to ensure proper handling of ` JdbcConnection `
refactor file index handling in ServerMainTest . java to improve clarity to ensure correct file index assignment and avoid potential null pointer exceptions
added methods to retrieve media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to improve access to media recording
make shaderhelper . useshaders public instead of confighandler . useshaders
updated the filter condition in DruidAdapterIT . java from " C = 6588 " to " C = 13500 " to ensure
updated variable initialization for ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
pdfbox - 4892 : disable external entity in xmp meta parser , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replace conditional check with a while loop for processing scripts in UrlHelper . java to improve code readability and maintainability
renamed the variable from ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic to improve clarity
refactor border property checks to use a helper function to improve code readability and maintainability
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during debugging
refactor ` InternalDropAllCommandStep ` and ` HubUpdater ` to include ` HubRegisterResponse ` to enhance the handling of the registration
replace ` & 0xff ` with ` Byte . toUnsignedInt ` in multiple files to improve data handling by using ` Byte . toUnsigned
remove unnecessary whitespace in OpenTracingTransactionProducer . java to improve code readability and maintainability
update caching behavior in AbstractCachingBuildEngineBuckConfig to use CACHE instead of ENABLED to improve caching efficiency by using a more appropriate dependency
change the value of rangePannable from true to false in CategoryPlot . java to disable the range prompt functionality for better user experience
updated the condition for setting main active state and view management in AllAppsContainerView . java to ensure proper view management based on the current page
changed access modifiers of ` glCaps ` , ` GcodeRenderer ` , and ` FPSAnimator ` from package - private to private to
added import for CancellationException and catching it in FunctionTest . java to handle potential CancellationException during operations
changed constructors of JarFileResource and JarResource from package - private to protected in JarFileResource and JarResource classes to enhance accessibility for
refactor DefaultTrackSelector class to improve track selection logic to enhance performance and maintainability of track selection functionality
added a loop to wait for unseqMerging in LevelCompactionTsFileManagement . java to ensure that concurrent merging occurs before proceeding
updated the fee currency from AUD to BTC in the BTCMarketsAdaptersTest to reflect the correct currency for user trades
updated SQL query syntax and test assertions in multiple files to improve code clarity and maintainability by using a consistent table structure
refactor Unicode class to improve code readability to enhance maintainability and facilitate future modifications
modified the ` installAutoInstance ` method to include a ` Service ` parameter and added functionality to update LLAP settings based on service version and
[ hotfix ] [ test ] fix checkstyle violation in sendheadersfirstpublisher
[ java ] make SSEcustomerkey nullable and use builder instead of custom deserializer .
added handling for BIG _ DECIMAL case in RangePredicateEvaluatorFactory and improved exception messaging to enhance error handling and provide clearer context for unsupported
refactor TreeBackedProcessorWrapper to use ` javacProcessingEnvironment ` instead of ` inner ` to improve code readability and maintainability
added annotation logging for generic parameter types in ParameterInfo . java to improve visibility of annotated annotations for debugging purposes
add ac3 support and fix seek in demo app
[ grid ] return a json response with null value when set a localnode .
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to address the use of deprecated methods
added a test method for selecting data into a schema in IoTDBExtendTemplateIT . java and modified DataNodeTemplateSchemaCache . java to
modified RTimerTree . java file to enhance performance and maintainability of the code
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
jme3 - core : fix issue # 358 ( text box do not look nice )
updated client thread and scheduler initialization in ClientConnector . java to include unique names to improve clarity and debugging by providing unique names for client threads
refactor ViewResultsFullVisualizer to replace protected JScrollPane and resultPane with private JSplitPane and improve layout management to enhance encapsulation
added documentation for the ' phoneNumbers ' and ' phoneNumbersListDescription ' fields in ScimUserEndpointDocs . java to provide clarity
changed access modifiers of classes and constructors in DeleteFiles , IndexFiles , and IndexHTML to public and added private constructors to enhance encapsulation and
added null checks for responseMap and status codes in JsonHttpPropertyRequest and URLStreamProvider to improve error logging for null properties and HTTP responses
refactor SolrRequestHandler to improve request handling logic to enhance performance and maintainability of the Solr request processing
make sure we do n ' t run the test if the default parallelism be set
[ hotfix ] fix checkstyle violation in testvmware
added handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error reporting by distinguishing between SCARD _
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system output warnings related to test purpose
camel - bindy : fix the unit test error of camel - bindy
change default value of ` ` usowner ' ' and ` ` usTimeStamp ' ' from ` ` true ' ' to ` ` false '
updated method signatures from ` Runnable ` to ` ThrowingRunnable ` in ` runAndCheckException ` to improve clarity by explicitly indicating the type
refactor string manipulation to handle null values for ` via ` , ` viaContext ` , and ` pathFromSeed ` to avoid potential NullPointerException
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored data retrieval methods in Liquib
change default value for proxy . cert . validity from 7 to 90
updated thread handling logic in ThreadHandler . java to improve smooth movement accuracy and performance to enhance performance by reducing the frequency of time measurements
added null check for pagination and adjusted URL construction logic in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of pagination when the pagination
added null check for CompactionInfo client and created a test for it to ensure that a null client does not cause a warning when attempting to
added onSaveInstanceState method call for fragments in ShadowFragmentActivity and created a corresponding test in FragmentActivityTest to ensure that fragment state changes are
reformatted code for improved readability by adding missing braces to enhance code clarity and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the color resource loader correctly parses the red color reference
added error handling for query result retrieval in AbstractJPAQuery and a new test for unique results to improve robustness by handling NoResultException
part of fix for bug sf # 917562 ( community search do n ' t look in sub - communities )
updated the depth preference retrieval in DepthController to use LawnchairApp for improved functionality to ensure compatibility with Lawnchair app
removed redundant import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary duplication
removed the parameter ` now ` from the ` updateTotalEnergyAverageUsage ` method and its usage throughout the ` EnergyProcessor
added null checks for extensions and improved string representation in ExtensionStack . java to enhance robustness by preventing NullPointerExceptions during string construction
3 . x : fix flatmap not dispose on error
added connection timeout settings to MultiGetRequest and updated connection manager initialization in ControllerStarter to enhance connection management and provide better error logging for timeout
reformatted the assignment of ` androidPlatformTarget ` in ` AndroidPrebuiltAarDescription . java ` to improve code readability and maintain
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to standardize test class naming for better clarity
added SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher to fetchers in EdgeSyncCursor . java and updated image inclusion method in Base
added a new test method to verify output hash calculation when caching is not writable to ensure that output hash is correctly calculated when the cache is not
camel - 14284 : camel - netty - allow to use bytebuf by default in camel - netty4 .
updated the method call to use the table ' s canonical name instead of the old name to ensure accurate partition alteration by using the correct table
improve error message when try to create a vertx instance with prefernativetransport option set to true .
improve test coverage of enumtypehandlerserializertest and add test for colortypehandler .
[ hotfix ] [ doc ] fix typo in streamex
removed query hint settings for query timeout in SessionImpl . java to streamline query execution by eliminating unnecessary hints
add a staticloggerbinder to make it easy to configure slf4j ' s logger
hbase - 25813 fix concurrentmodificationexception in append , delete , increment , and put
added orientation changes and updated conditional check in TaskbarManager . java to ensure proper handling of window orientation changes
unescapes xml before send to jabber room . fix a problem with jabber nickname that could lead to jabber
modified the order of parameters in the longStackPut method and added a new test class for the compact functionality to ensure correct behavior of the long
added @ SuppressWarnings ( " mutable " ) and @ SuppressWarnings ( " equalsHashCode " , " ArrayToString " , " SubjectOfZero "
make executionflowcontroltest . holder thread - safe
formatted conditional statements in DLNAMediaInfo . java and DLNAResource . java , and improved array copy handling in FF
updated NBWriteServlet to accept a boolean parameter forlimited operations to enhance flexibility in handling different write scenarios
update total difficulty in importlight for invalid block
modified playback action handling for non - seekable players to simplify action logic for better readability and maintainability
switch to use copyonwritearraylist instead of synchronize list in native - libraries .
added a null check and updated calculations for position , bendAngle , and bendDistance in AllAppsView . java to ensure proper memory
added a check for the presence of a colon in the key before processing to ensure proper handling of additional key formats
added a PrincipalResolver bean to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enhance the configuration of the principal resolver for better
replaced ObjectMapper with JSONParser and ObjectBuilder in DelegationTokenResponse . java to enhance JSON parsing capabilities and improve error handling
added a method to remove trailing slashes from a StringBuilder in IoUtil to improve string handling by ensuring trailing slashes are removed from the builder
added methods for pattern matching with empty patterns and implemented corresponding tests in PatternsMatcherTest to enhance functionality and ensure correct behavior when matching patterns with
updated error message formatting in LoadIncrementalHFiles . java to improve readability and maintainability of the code
fix fire potion not be able to place block on water . close # 2321
removed unnecessary whitespace in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintainability
refactor decreasePercent calculation and formatting in ContractStateCapsule . java , ReceiptCapsule . java , and ResourceProcessor . java to improve
added input read handling and improved debug logging in AsyncContentProducer and BlockingContentProducer to enhance error handling and provide clearer debugging information during
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that a mandatory weight field is provided to avoid runtime errors
added imports for ` FindAndReplaceStep ` and ` ImmutableMap ` , and modified the handling of the " Info . plist " variable in `
fixed laser turret not turn if it ' s not the target team
changed the type of adaptOrder calls to OrderCreateApiRequest . OrderCreateApiRequestBuilder and changed the return type to Object to improve type safety and
added a new file ` PreParseGrammarTest . java ` with XML grammar parsing functionality to facilitate testing of XML schema grammars
added @ SuppressWarnings ( " doclint : missing " ) annotation to multiple Java files to suppress warnings related to missing documentation warnings
added FontManager import and font overriding logic in ExtendedEditText . java to ensure font settings are applied for better text rendering
added a check to return an empty list if no user is found in the AuthorizeTag class to ensure that the method returns an empty list when
camel - 4892 : do n ' t encode uris that contain unsafe character .
added setupdata ( ) method to set up geotools geotools test data
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] do n ' t allow restore attempt for already cancel task
simonstewart : add server . rmi . create property to create rmi registry
[ hotfix ] use string . join instead of string . join
updated display metrics handling in multiple test classes to ensure correct behavior of qualifier retrieval and improve test coverage for default resource qualifiers
[ java ] take cluster member id into account when allocate service heartbeat counter .
added conditional logic to set total thread allocated bytes based on thread version in TestThreadMXBean . java to ensure compatibility with different operating systems and
added handling for negative and positive infinity in the CustomExpression class and modified hash code calculation to ensure proper handling of NaN values and improve hash code
updated logging statements in AjaxListener . java to use parameterized messages and changed error levels to warning to improve clarity of debug and error handling in
added authentication routes for " / authenticate " and " / authorized " in the AuthenticityController and created a corresponding test case to enhance user
added an assertion to ensure the next node is alive in LoweringPhase . java and reorganized code formatting in SnippetTemplate . java
updated logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure correct logging context for the HttpClientRequestImpl class
update track selection order to use natural order
refactor RuntimeSerialization class to improve code readability to enhance maintainability and facilitate future updates
do n ' t crop image if it be crop by the original cropbox .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` to ` DeviceProfile ` and updated its usage in ` WidgetPreviewLoader ` and `
added content type name handling in MailContentHandler to ensure valid content disposition filename is set to avoid potential errors when content disposition filename is not provided
updated the URI construction in ThumbnailsCacheManager . java to use a local ID instead of the remote path to improve the accuracy of the thumbnail
added methods to mark and reset input streams if supported to ensure proper handling of input data when marking and resetting are performed
added @ Deprecated annotations to multiple AsyncProcessor , AsyncSubject , and SerializedSubject classes to indicate that the classes are outdated and should no longer be
added a configuration option to show or hide error stacks for the server to improve error handling by allowing users to customize the visibility of error stack traces
fix the bug in deletetemplate and add a warning log when domain cleanup fails
remove bailouts from sparcarithmeticlirgenerator . emitforeigncall ( )
[ drools - 5287 ] make decisiontableconfigurationadapter . java compatible with legacy Drools 5 . x api
refactor onRequestPurchaseResponse to use a Runnable for asynchronous callback execution to improve responsiveness by ensuring callback is executed on the UI thread
[ hotfix ] [ test ] increase default _ timeout _ millis for unboundedsourcesystemtest
updated the import statements and modified resource name handling in ShadowAssetManager . java to improve clarity and correctness of resource name resolution based on
deleted two files MrefStat . java and MrefStat1 . java with new classes and methods to demonstrate the use of
fix scope if insight match do n ' t have a scope
added error handling for " no trades " and " bad status " in BTCETradeServiceRaw . java to improve robustness by
use hamcrest assertion instead of junit in integrations / cdi / core
added ` getPaymentRequestUrls ( ) ` method to ` BitcoinURI ` class and corresponding tests in ` BitcoinURITest ` to enable retrieval
planner - 383 fix illegalargumentexception when use a non - parameterized collection
removed duplicate call to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
do n ' t allocate jfr buffer if there be no lock owner
[ flink - 20610 ] [ runtime ] fix nullpointerexception in basicabstracttuples
updated import statements and refactored linter configuration file handling in LintUtility . java to improve code readability and utilize InputResourceUtility
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post that runs updateBackgrounds ( ) to ensure
fix off - by - one error in inventory . oninventorytick
added a new case OCELOT _ BABY to the PlayerEvents class to handle the OCELOT _ BABY
[ hotfix ] [ state ] add @ publicevolving annotation to statestatettlconfig
added null check for parameter in PreparedStatement and Array classes to ensure proper handling of null values to improve robustness and prevent potential NullPointerExceptions
[ java ] add help text for archive tool to help with invalid recordings .
replaced double quotes with single quotes in the StringBuilder method to improve code readability and consistency
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` to validate JSON snapshot serialization to ensure proper handling
invalidate transaction and block cache on test failure .
added support for enabling and disabling the LeLensMask feature in AmcrestHandler and DahuaHandler to enhance user control
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify error handling by
refactor ChangeLogIterator constructor to accept List < RanChangeSet > and ChangeSetFilter as parameters to improve flexibility and maintainability of
make sure launcher exit with non - zero code if guest exception be encounter .
ec2utils : fix option _ out _ tracking on window
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor the code to use ` dropParentUntil ` instead of ` withInitializer ` for clarity to improve readability and maintainability of
# 1188 - enh : add servercache . copy ( boolean nearcache ) to enable / disable near - cache
added a new test method ` testHiddenBorder ` to verify visibility of the hidden border in the ` VisualRegressionTest ` to ensure that
updated the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` Project
updated references from LIVE _ URI to PROD _ URI and added logging for Kucoin host exceptions to improve clarity and error handling
removed unnecessary " classpath : " prefix from resource loading and improved search path handling to enhance code readability and maintain consistency in resource path management
updated unit representation from " μ g / m ³ " to " µ g / m ³ " to
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure
deleted the Tls12SocketFactory . java file to the class is no longer needed for TLS socket creation
fix : do n ' t overwrite non - exist bib file entry ( # 1748 )
added a check for Robolectric legacy mode in ResourcesTest . java to skip resource tests for compatibility with Robolectric
added a check for FirebirdDatabase in DoubleType . java to return a specific DOUBLE PRECISION data type to ensure proper handling of double precision
added null checks for ` dataSource ` and ` transactionManager ` initialization in ` DefaultBatchConfigurer ` to ensure proper initialization of ` dataSource `
simonstewart : add an api annotation to the unittest stubs package to make it easy to run the test .
updated the command to " ping - c5 127.0 . 0.1 " and modified test timeouts in OutputStreamTest to include a timeout
no effective change - code cleanup - use try - with - resources
updated TermScorer to conditionally use ' NONE ' for FREQS based on scoreMode to ensure correct scoring behavior when scores are not
added null - check for metric updates in DataflowMetrics to ensure metrics are not null to avoid potential NullPointerExceptions
server : fix npe in search by account and datacenter virtual address .
refactored the DynamicPartitionPruner to use a new method for finding the target object inspector to improve code readability and maintainability by
added a method to delete build artifacts for specified outputs in the ArtifactFilesystem class to ensure that existing build artifacts are deleted correctly during the execution step
added logic to set the row selection interval based on the selected row in the table to ensure the correct position of the motor table when the selected
add a test method that check that arraystoreexception can not be throw .
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added support for custom user agent in the HttpClientBuilder and HttpClientConfiguration classes to enhance flexibility in configuring HttpClient metrics and user agents based on
refactor session creation to use a dedicated method for restoration to improve code readability and maintainability by centralizing session restoration logic
updated assertions in IssueTest . java to specify the expected size of results and changed the results type from HashSet to Object in Reporter . java to
added handling for null file content types in ByteArrayDataSource initialization to ensure robustness by avoiding potential null pointer exceptions
added activationrequestdenied event to handle activation request
fix minor bug in graphapplet and add some javadocs
update ` updateSnapshotRadius ` method in ` RecentsView ` and move it from ` TaskView ` to ` RecentsView
added SLF4J logging and modified schema generation in StaticMicroserviceVersions . java to improve traceability and debugging of Swagger generation process
updated the return type of the put methods in ArrayMap from void to int to enable method chaining by returning the index value instead of void
updated KafkaContainerCluster to use Duration for startup timeout and streamline brokers processing to improve code readability and maintainability by simplifying the configuration
[ rocketmq - 3550 ] fix the issue that mqpushconsumer # sendback do n ' t retry the message . (
update header checking logic in StaticServerHttpHeadersWriter and add a test for header writing in StaticServerHttpHeadersWriterTests to ensure headers are
added package access check before loading an event listener in EventListenerList . java to enhance security by ensuring package access is validated before adding events
added a new ` CustomAdapter ` class and modified ` ApplicationsFragment ` to utilize it for managing applications list and image lists to enhance
updated the applyIcon method to accept both mIcon1 and mIcon2 parameters and modified null check conditions to enhance functionality by allowing null tasks
use try - with - resources to prevent resource leak
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 533 . convert
added JUnit test annotations and removed the ExecutionContext variable in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests
added a Poller class with asynchronous execution and improved byte handling in the DataInputStreamWithTimeout class to enhance performance and ensure proper handling of input
added support for ENABLED _ TS in VersionTargetGraphMode and updated VersionedTargetGraphCache to support ToposortBasedDepsAwareExecutor for impro
updated UpgradeCatalog150 . java file to improve code organization and maintainability
rename ` testnet3 ` static constant to ` oldtestnet ` for clarity
remove selection for one geos in the properties view to avoid unnecessary update
updated onboarding preferences handling in AppsDividerView and added null safety in ActivityContext to improve code robustness and prevent potential null pointer
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for resource closure to improve performance and error handling during index output operations
pdfbox - 4892 : do n ' t throw exception if the path iterator be empty
remove unnecessary synchronized block when initializing localAddress in SocketChannelImpl . java to improve performance by reducing unnecessary synchronization
added a new method ` addToRow ` to handle multiple values in an ` row ` map to improve the handling of multiple values in the row
added a method to check if the operating system is Windows and modified file renaming logic to ensure proper handling of file operations on Windows systems
replaced the original charset array with a constant CHECK _ DIGIT _ STRING in Code39Reader . java and updated references in Code39Writer
fix a bug in nodegen when an unexpected return type be not implement .
removed unnecessary conditional check for stored field type in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : truncate timestamp with nanoseconds in where clause ( # 4247 )
removed unnecessary conditional check for postRunnableStacktraces in LwjglCanvas . java to simplify the code for better readability and maintain
update description in AbstractGCSProcessor . java for consistency to improve readability and maintainability of the description
replaced the ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization by waiting until
updated method calls in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use " single " instead of null to ensure consistency in directory context
removed the size parameter from the UserData class and introduced a filterCount counter in the FaultTolerantChunkProcessor to simplify the data handling and
added tab initialization functionality and improved error handling in T4994049 . java to enhance code readability and maintainability while ensuring correct
replace multiple conditional checks with a single assume statement for WindowsTerminal checks to improve code readability and maintainability by using a unified assume statement
remove admin access from getfeedbacksessionssessions action ( # 2321 )
adjusted calculations for newSelection and adjusted threshold values in AllAppsView . java to improve the responsiveness of the user interface by adjust
do n ' t force threadinfo . initialize ( ) if there be no threadinfo
added loadModelList ( ) and refresh ( ) in DataModelManagerDialog , modified connection list handling in DbConnectionDialog , and improved
replaced instance variable ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` and updated various methods to use ` String . valueOf ( )
refactor segment size calculation to utilize SegmentInfo instead of a separate method to improve code readability and maintainability by reducing duplication
fix a bug that cause an armature modifier to be n ' t apply if the verticle be n ' t present in the object .
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
replace direct creation of UnsupportedOperationException with a custom implementation to avoid filling in stack trace to improve error handling by avoiding unnecessary stack trace allocation
updated the method to return the average line height instead of calculating label bounds directly to improve accuracy of height calculation for better readability and performance
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility by allowing
refactor code to improve the handling of quoted strings in ` valStr ` to enhance readability and maintainability of the code
replaced ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) ` and updated traceId handling
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 844448 - add
updated the assertion in TestSqlEntityProcessorDelta to correctly reference the second element of the COUNTRY _ CODE _ S in the query to ensure
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
updated variable names from ' e ' to ' ev ' for consistency and clarity to improve code readability and maintainability
updated the ` doBefore ` method to remove the ` throws IOException ` declaration and modified the ` IndexSearcher ` instantiation in ` IndexSearch
added a main method to create a JTable with a scroll pane and a data field to enable users to add rows to a GcodeTable
make webapp connect timeout configurable , remove hard - coded value
updated various Java classes to improve type safety and clarity to enhance code readability and maintainability by standardizing type declarations
modified TestMediaService . java file to improve test coverage for media service functionality
removed the constant ` HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` from the ` Messages . java ` file
add a new file MarketsPrintTool . java to print all MarketCurrency and CryptoCurrency from a Fiat and Crypto Currency to
do n ' t allow non - ascii or dash in account id , add validation
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enable asynchronous security key registration for enhanced security management
rename ServerSpanThreadBinder class files to improve clarity and consistency in naming conventions
updated user pointer retrieval to use userData instead of getUserPointer ( ) in BulletPhysics . java and adjusted related calculations in BlockItem
updated the type of the builder from " Location " to " the _ geom " and added " number " to the Csv2Shape class to
updated method call from ` callGasWord . longValueSafe ( ) ` to ` gasCost . longValueSafe ( ) ` in ` VM .
updated parameter handling methods in Parameters . java to improve clarity and maintainability of the code
added functionality to ignore null values in piePlot to ensure that null values are ignored during plot processing
refactor ResourceBundle . java to streamline loading and caching logic for better performance to improve efficiency and maintainability of the bundle loading process
pdfbox - 4892 : fix typo , a suggest by valerybokov
fixed issue with alloweditdduringediting on executescriptaction and accelerateableaction
added a userModified flag to the LoginSamlAuthenticationProvider class to track if the user has changed
added a new file ` TestSealedObjectNull . java ` to test the behavior of a ` SealedObject ` using a null cipher
replaced the onOpen method with setResponse and succeeded methods in ConnectPromise . java and updated the succeeded method in WebSocketClientConnection . java to
replaced the use of Tag . SNOW with a static Set of Material based on server version to ensure compatibility with versions 1.17 and
added trade ID tracking and modified Trade construction in CryptsyAdapters , CryptsyPublicTrade , and CryptsyAdapterTest to
added error handling to close the HMS connection in HiveStreamingConnection . java to ensure proper resource management and handle potential exceptions during connection closure
use random . nextlong ( ) instead of current time ( ) for seed generation
updated device profiles from 518 to 567 and added a new Nexus 5 device profile to enhance the functionality of the Nexus 5 device
refcount : fix npe on refcount disconnect before connect
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve code flexibility and reduce direct dependency on specific implementation
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP token in FormatToken and TokenFormatter classes , along with corresponding tests to
added checks for file length and improved file overwrite logic in SaveTask . java and its test cases in SaveAndLoadTaskTest . java
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety when accessing shared resources
log4j2 - 1343 add support for mutable logevent in smtpmanager
changed the PADDING property from LengthLike to NonNegativeLengthLike to ensure proper handling of non - negative length values
removed unnecessary calls to createUser ( headers ) in multiple resource classes to simplify context creation by eliminating unnecessary user retrieval
improve handling of jimple exception trap in methodirbuilder .
updated method call formatting and improved error message formatting in JUnitRunner and AndroidPlatformTarget classes to enhance code readability and provide clearer
reduced cacheSize from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to check if ' start ' is zero in InvocationStageTrace . java and updated test data in TestInvocationPublishModelFactory .
added work around for npe in fips keystore . load ( )
updated the UpstreamCheckUtilsTest to use a dynamic port instead of a hardcoded port to improve test reliability by ensuring the test oper
ggb - 2696 dock split pane should n ' t change their parent , not just the panel dimension
update glrenderer . setshaderstoragesizeblocks ( ) to only set max compute shader , geometry shader , and tess
updated method signatures in PopulatorContext . java to improve clarity and maintainability of the code
do n ' t send saveall notification for non - default project ( # 2321 )
added character encoding handling and improved JSON output writing in ZQLJobManager to ensure consistent character encoding and prevent issues with UTF - 8 encoding
added a check for the length of arguments before checking if the last element is an instance of Table to ensure that the argument length is valid before
refactor FakeOSSOHeaderDecoder to use static final prefixes for header definitions to improve code readability and maintainability by centralizing header
added @ Deprecated annotations to multiple Java files and marked the option as hidden to indicate that the option should no longer be used and may be removed
removed debug logging statements for loading the Apache Derby driver class to clean up the code and improve readability
updated test methods to include a timeout of 5000 milliseconds and modified assertions in CepEspTest and CepJavaTypeTest to improve test reli
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance and reduce execution time
refactor the ROLLBACK operation to use case - insensitive comparison and add a check for the Liquibase Hub mode to improve code
added new constant string values for Java VM versions in Constants . java and a corresponding test in TestDDRExtensionGeneral . java to support support
modified the message formatting in FontFamily . java for better clarity and added a new DebugFonts . java file to enhance error reporting for
added HTTP _ 1 _ 1 import and conditional logic in NegotiatingServerConnectionFactory to support HTTP / 1.1 negotiation for improved
added HTTP2 rate control import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to ensure proper handling
added a new Java file ` Test6741426 ` that implements a Runnable for rendering a JComboBox and JTextField using Nimbus
updated the error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception ' s message to improve clarity of
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure that paths are valid before execution to avoid potential NullPointerExceptions
fix : move s3copyobjectrequest to package com . cloud . bridge . service . core . s3
refactor setup category methods to remove accentColor parameter and streamline setup setup calls to streamline category setup process and improve code readability by
updated the error message in TemporaryFolderUsageTest to include the root file path to improve clarity of the error message for better debugging
replaced static TypeInformation < ? > from ( Class . class ) with ClassTypeInformation . MAP and ClassTypeInformation . OBJECT in MappingMongo
add address validation to the clientnetworkconfig . addaddress ( ) method
add " keynectisrootca [ jdk ] " to VerifyCACerts . java to include support for keynectisroot certificate
performance improvement : return the actual output batch size , not void
added a conditional check before setting the menu mode and reset the model ' s arbitration status to ensure the menu mode is only set when not
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added two new test files , FinalizerInfoTest . java and HeapInfoTest . java , to test finalizer and heap information to ensure
camel - 14284 : camel - core - use doonnext instead of map to avoid npe
add check for custom burningman to avoid issue with issuance
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
increased the size of longData from 1 , 000 , 000 to 1000 , 000 in BatchValidateSignContractTest . java to optimize
change method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
replace " @ " with " from : " in the query handling to ensure consistent query formatting across the application
removed conditional check for rebalance in SimulatorDiscoverer . java to simplify the code by eliminating unnecessary complexity
added a new endpoint to import YubiKey accounts via a POST endpoint to enable users to import accounts from the YubiKey account registry
updated shader program names and texture retrieval methods across multiple classes to improve clarity and consistency in shader usage
added null check for ` cnt ` in ` paintOnTopLoop ` and modified padding in ` SideMenuBar ` and ` Toolbar `
fix javadoc typo in abstractwriterprotocol
added a check for null subName before setting the caption in HierarchyBase . java to ensure that a valid caption is assigned when subName
fix ` ` immOBILE ' ' data flag not support for graservity .
added null check for ` sim ` and improved string comparison in ` CustomExpression . java ` to enhance robustness by preventing potential null
send republish request instead of requestblindvotelistfromnetwork
add test case for postgresql connection with thread pool
updated string literals in SubtitleUtils . java and RemoteUtil . java to use single quotes instead of double quotes to improve code readability and
replaced hardcoded newline character with a constant for line separators in DefaultJavaPrettyPrinter . java to improve code readability and maintainability by
singleimplementor : replace atomicreference with atomicreferencefieldupdater in singleimplementor .
added null check for filters and adjusted query list addition logic in SimpleFacets . java and added a test case in SimpleFacetsTest .
fix : add child bridge thing to the merged thing
replace calls to ` printHelp ( ) ` with specific error messages in ` Ktab . java ` to improve user feedback by providing clearer
added a check to return the existing output file if it exists to optimize performance by avoiding unnecessary processing when the output file exists
added parsing logic for date strings with tee and plus / minus in DateConverter . java and created a corresponding test in DateConverterTest .
added JPA query support in PostRepository and SpringDataJPALockTest to verify that a Post is found by its slug to enhance data
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related error handling logic to
added a ` SimpleClientHttpRequestFactory ` for setting connection and read timeouts in ` ClientRegistrations . java ` to improve HTTP client request handling
added unit tests to verify the existence of a non - critical file in the Source class to ensure that the source functionality behaves as expected with
graalvm : remove system property set graalvm . version
added validity seconds handling for access token and refresh token in ClientAdminBootstrap to ensure proper configuration of access token validity settings when creating new clients
updated the SDK version retrieval logic to incorporate a conditional check for the Android API version to ensure compatibility with the latest API features and
refactor code to remove unnecessary ' this ' references in PropertyPlaceholderHelper . java to improve code readability and maintainability by reducing complexity
removed the unused comment " number " from the Subject Public Key Algorithm in the certificate fingerprints output to simplify the output by eliminating unnecessary
updated ZkSolrClientTest . java to improve collection tracking and synchronization to enhance test reliability by ensuring all collections are processed in parallel
remove BigInteger import and add its type to simpleTypes to streamline data handling by eliminating unnecessary BigInteger type usage
added a condition to check if the button text is " view " before showing a toast to ensure the toast is displayed when the button text is
added a condition to check if MEncoder is no out of sync when not in MEncoderNoOutOfSync to improve performance by avoiding unnecessary
reduce event loop size from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow up to 15 event loop threads for
changed access modifiers of several fields and methods in CountMin4 , IncrementalResetCountMin4 , and AdaptiveWindowTinyLfu
added methods for retrieving file float sources and created test cases for external field sorting to enhance functionality and ensure correct sorting behavior in the external file field
change error message from " Invalid URL " to " Connection Error " in DoiFetcher . java to improve clarity in error reporting for connection
added source information to event output and modified event processing to include source information to enhance event representation by associating components with their IDs for better event
make shaperenderer . check ( ) protect to allow subclass access
added handling for SynchronizeFileOperation in FileActivity to manage file synchronization status more effectively
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder and URLEncoder for generating the preview image to improve compatibility with the
added a check for initialization status and null check for client property " cn1 $ infinite " in InfiniteContainer . java to ensure proper handling
updated the initialization of the ` total ` variable and modified the calculation logic in ` IntHashSet . java ` to ensure accurate total value calculation and
added a conditional check for the ' locked ' state before updating an entry in FeedRefreshUpdater to improve error handling by logging an error when the
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve readability and maintainability of the
replaced the List < Integer > with an array for managing edges and refactored the tree creation logic to improve code readability and efficiency
added IOUtils import and improved resource handling in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
update bibtexparser . parsecomment ( ) to remove \ n , \ x0d and \ x0a
added strict mode handling to properties file parsing in Main . java and corresponding tests in MainTest . java to improve error messaging for unknown parameters during
allow custom constraint to be always validate by bean introspection . fix # 1358 ( # 1358 )
camel - 14284 : camel - http4 - do not require an http protocol
added a call to waitForThingsToLevelOut with a timeout of 30 seconds to ensure that the tests do not hang indefinitely
removed redundant checks for byte length in UBJsonWriter . java to streamline code for better readability and maintainability
updated test cases in ApplicationTest . java to improve test coverage and reliability
replace String details with StringBuffer for better performance to improve performance and memory usage during string operations
rename the ` Type ` enum to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions related to Rob
[ java ] make recordingdescriptorpoller and recordingsubscriptionpoller abort if dispatch complete .
added cache key and lookup key attributes in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to enhance data
added a new file ` PutfieldError . java ` that tests for ` IncompatibleClassChangeError ` to ensure that the expected exception is thrown during runtime as a validation of behavior
translate ip address before trigger a connection to make sure that only valid ip address be send to the backend .
hbase - 25813 add log for enqueuetransfer flush ( rajesh balamohan )
replace usage of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple Java files
[ java ] move encodedlength ( ) from flyweight to flyweight .
updated TestMethodResultMapBuilder . java for improved test coverage to enhance reliability of method result mapping functionality
added handling for Integer - specific exceptions in the FindNullDeref class to improve error handling for invalid null deref calls
[ hotfix ] [ runtime ] remove unused constructor from tasklocalstatestoreimpl
updated return values for time , minute , and day ago strings in mmm Utils . java and ppp Utils . java to improve clarity
updated handling of DeepShortcutView instances in Utilities . java and FloatingIconView . java to improve compatibility with both DeepShortcutView and Image
updated JwtIssuerValidator to use a Predicate for validating JWT claims to enhance flexibility in validating JWT claims based on issuer URLs
updated method names for quick and market rates in Coinmate classes to improve clarity and consistency to enhance code readability and maintainability by
make cobertura data available for use in test
added a check to ensure the EventBus sticky registration is only registered if it is not already registered to prevent potential registration of unnecessary sticky instances
added ASCII - only check to normalize method in NormalizerBase . java to prevent normalization of non - ascii strings from being normalized
[ hotfix ] [ runtime ] fix typo in jobcoordinationservice
added error handling and assertions for SQL update execution in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update Statistics SQL
( chore ) camel - cometd : upgrade the competd test to junit4
added attrs ( AttrKind . OK , WIDTH ) for HR and modified related method calls in HtmlTag . java to restrict the width attribute to
added a line break tag writing in HtmlCoreReport . java to ensure proper HTML formatting for line breaks in the report
updated ramBytesUsed calculation to include a null check for scores to improve memory usage accuracy by avoiding potential null pointer exceptions
added a new ` StringHolder ` class and a ` StringHolderTypeAdapter ` class for handling various string types during JSON serialization and deserialization to
set extra data from mining parameters in MergeCoordinator to ensure the correctness of the extra data is utilized from the mining parameters
added a static map to configure arguments for parsing and output file in DependencyParser . java to improve argument handling by allowing for more flexible argument
( chore ) camel - util : fix typo in pathparamserverendpointconfig
updated variable name from ` configedThreshold ` to ` configuredThreshold ` and introduced a constant for default migration delay in ` MigrationRuleListener `
renamed parameter ` part ` to ` partOrList ` in ` attach ` methods across multiple classes to improve clarity and consistency in parameter
rename the resource to avoid conflict with other module .
added a regex pattern to determine the basic category from a string in SpanishTreebankLanguagePack to improve the accuracy of category extraction based on
hhh - 14610 deprecate entityloader . loadbyuniquekey and replace with uniqueentityloader . load ( )
hbase - 25826 fix the race condition in regionserversnapshotmanager and regionserverflushtableproceduremanager ( # 2539 )
fix width / height set to zero in some case
fix checkstyle issue in io / hikariconfig / hikaridatasource . java ( # 753 )
updated ` assureMatchVersion ` method across multiple filter factory classes and set it to ` Version . LATEST ` to ensure compatibility with
fix proxy generation for executable method where it be not abstract . fix # 2373
pdfbox - 4892 : avoid npe , a suggest by valerybokov
renamed multiple subject classes related to Protos from " Subject " to " Subject " to improve clarity and consistency in naming conventions
check that payload length be non - negative before send a websocket frame .
move publishsubscribechannel and publishsubscribechannel from ' channel ' to ' dispatcher ' ( not the ' channel ' package )
updated executionId type from String to Long across multiple classes to ensure consistent handling of execution IDs across different components
fix issue with digest . update ( byte ) for image size
added imports for various parameters and logging in SolrConfig and SolrConfigHandler classes to enhance code clarity and facilitate logging of overlay
updated the delayUntil value in FileSyncAdapter . java to increase synchronization delay from 24 days to 3 days to avoid too many automatic synchronizations
updated the formatting of the file last modified time in SegmentV1V2ToV3FormatConverterTest . java to ensure consistency in file
fix ( iotdb - core ) : do n ' t store full path in query process
updated DefaultPackageScanClassResolver to handle URL entries with plus characters and improved error logging to enhance robustness and clarity in handling URLs
[ flink - 20655 ] [ table - planner ] [ table - blink ] introduce timestampextractorutils to make it easy
added a new file ` SpringSecurityAuthenticationSource . java ` implementing ` AuthenticationSource ` for LDAP authentication to provide a way to retrieve principal and
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
update minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest API level
refactor dialog creation from ` Dialogs . autoSuggestDialog ` to ` SimpleFormDialog . build ` to improve user experience by util
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
added ` final ` keyword to the ` collectionName ` parameter in the ` stream ` method and updated the ` ReadDbObjectCallback ` instantiation to
updated zoom factor calculation and type casting for zoom in MapOverviewImageMouseHandler . java to improve accuracy of zoom values and ensure proper type handling
added similarity support to KNearestNeighborClassifier by introducing DefaultSimilarity and updating related method calls to enhance classification accuracy by allowing customizable similarity
replaced SolrQueryParser with ConstantScoreRangeQuery in query creation to simplify query handling and improve code maintainability
updated the method for retrieving reasons from ` lowResourceCheck . toString ( ) ` to ` lowResourceCheck . getReason ( ) ` to improve
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling and corresponding tests in ShadowBluetoothGattTest . java and ShadowBluetoothGatt . java to ensure proper
refactor the creation of the ServletInputStream into a separate method to improve code readability and maintainability
[ vosk ] log warn if unsatisfiedlinkerror
channelprocessingmanager : use concurrenthashmap instead of hashmap to ensure thread - safe access
updated Japanese and Chinese resource files to include " all " , " grouped " , and " summary " options to improve clarity
updated condition to check for size greater than 1 in JDBCTypeMapping . java and adjusted corresponding test cases in JDBCTypeMappingTest . java to
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety when modifying player additions and removals
replaced the method ` isScreenReaderActive ( ) ` with ` accessibilityStateTester ` and improved the handling of control code
added ` COMMAND _ BEHAVIOR _ SIDE _ NAVIGATION ` to the condition checks in ` MenuBar . java `
removed an unused import and modified the subscription logic in PoloniexManualExample . java , and added state change logging in WampStreaming
added a validation check for energy limit in UpdateSettingForEnergyLimitContractActuator . java and updated corresponding error messages to ensure energy limit
rename ` url1 ` to ` javaUrl ` in ` PostmanJsonBuilder . java ` and add ` protocol ` to ` UrlBean
camel - 16400 : added getter / setter for the namespaceprefixref property on the SoapJaxbDataFormat class
updated assertions in TestRange to use a new utility method for date comparison to improve code readability and maintainability by reducing duplication
added JettySolrRunner functionality and security checks in BasicAuthIntegrationTest . java and ZkStateReader . java to improve server management and
add price feed to trade chart display code for sticky market price
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve clarity and
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should return the
added functionality to download a file in FileDataStorageManager to enable dynamic file management during downloads
[ java ] : use randomaccessfile . setlength in unmappedrawlog .
added a method to check if the registry is running and implemented a retry mechanism for file deletion to improve reliability of file deletion by allowing retries
removed unnecessary import statements and added a call to startLoading ( ) in Quick3dMain . java and TextureTest . java to streamline
added multiple @ SuppressWarnings ( " rawtypes " ) and @ SuppressWarnings ( " unchecked " ) annotations to several classes to improve code clarity and
added null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when accessing instances
added a new error message for transaction isolation level and modified logic in PhoenixConnection to ensure that isolation level is only set when transactions
added transaction attribute handling and error rollback logic in multiple classes to enhance transaction management and improve error handling during processing
refactor CasManagementWebAppConfiguration to use DirectCasClient and introduce a new security interceptor class to improve client functionality and enhance security
removed the ` editCategory ` functionality from the ` ListFragment ` and added it to the ` NavigationDrawerFragment ` to streamline the user
renamed the method ` cancel ` to ` cancelMatchingOperation ` and modified the method name from ` observeDownloadWorkerState ` to ` observe
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to utilize TypedValue for better text size management to improve code clarity and ensure
do n ' t create a new constant frame if the fact be already valid
updated multiple Java files related to DistBuildTargetGraphCodec , convertingPipeline , Parser , and VisibilityPatternParser to improve code organization and maintainability
return a new ArrayList instance instead of the original spans in ArrayListSpanAccumulator to ensure that the spans list is immutable before use
removed unnecessary lock handling in Liquibase . java to simplify code and improve readability by eliminating unnecessary locking mechanism
[ scb - 786 ] when instance cache be not sync to sc cause by bug , auto fix it .
updated foreign key and index name handling in TableRetriever . java to provide unique names based on column names to improve clarity and maintainability of
camel - 15836 - add uri - endpoint - override option to all aws2 component - aws2 - s3 component
removed currency pair parameter from getBitstampUserTransactions method in BitstampAccountService . java and added a new method in BitstampAccountServiceRaw
added a try - catch block to handle NoSuchComponentException when retrieving a component instance to improve error handling by returning null when a component is not
modified push method to return a boolean and use pushtoken to enhance security by preventing unauthorized push requests
refactor LegacyAddressTest to read from a text file instead of hardcoding addresses to improve code readability and maintainability by using a BufferedReader
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
added a snackbar setup method in NotificationsActivity and modified DrawerActivity to close the drawer to enhance user experience by providing a clear
improve robustness of nettyasynchttpprovider by ensure channel be close even if there be no filter
replace null checks with StringUtils . isEmpty for LDAP attribute checks and update method names for clarity to improve code readability and maintainability by standard
refactor DefaultAnnotationEngine and Stubber classes for improved consistency to enhance code maintainability and readability
added an ignore annotation for the MemoryManagerTest class to temporarily disable the test due to an existing issue tracked under PHOENIX - 2840
nifi - 2321 added timezone support to aboutdto and flowresource .
updated assertions and loop logic in Splitter . java and StorageService . java to improve readability and control over split behavior to enhance code cl
removed unnecessary try - catch blocks around object reading in BeanContextSupport . java to simplify code and improve readability by eliminating unnecessary exception
removed redundant synchronized block for adding circuit to activeCircuits to improve performance by reducing unnecessary synchronization overhead
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
[ flume - 212 ] [ test ] move pollablesink and source from eventdrivensourcerunner to sinkrunner
updated logging behavior in FastBindLdapAuthenticationHandler . java to improve clarity of error logging to enhance readability and maintainability of the code
renamed ContainerOrderFocusTraversalPolicy class to improve clarity to enhance code readability and maintainability
make sure freehand = function do n ' t throw exception
updated constructor formatting in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve code readability and maintain consistency
refactor connection handling and execution logic in SchemaCrawlerMain and Executable classes to improve resource management and ensure proper closure of database connections
bump default tl version to v1.2 on jdk 17 +
corrected the spelling of " metadata " in exception messages to ensure clarity and accuracy in error reporting
refactor audio handling logic in MediaManager . java to improve clarity and correctness to ensure proper audio stop behavior when mCurrentAudioQueuePosition
updated debug logging statement in HttpConnection . java to include the connection object to improve log clarity and reduce unnecessary debug checks
added @ Transient annotation to JpaPersistentPropertyImpl and updated related unit tests to support transient fields in JPA persistent properties
updated UpgradeResourceProviderTest to use " HDP - 2.2 . 0 " instead of " 2111 " and modified related assertions to
truffle : make eval return object , not symbol .
say ` ` could not guess encode of url ' ' instead of ` ` text / ' '
updated the configuration key from " hive . tez . dynamic . parition . pruning . max . data . size " to " hive
remove parsing error , since we do n ' t use it anymore
douniaberrada : remove the constant dictionaryindexconfig . default _ offHEAP which be never use .
replaced hardcoded newline characters with a system - dependent line separator to ensure consistent line endings across different operating systems
rename DebugHelper . java file to improve clarity and consistency in naming conventions
added a boolean field ` ownsTexture ` to track texture ownership in ` ParticleEffect ` class to ensure only components owned by the texture are
added LDAP authentication configurations to HiveConf . java to enhance security by integrating LDAP features
( chore ) camel - datacatalog : upgrade google - cloud - datacatalog to v1beta1
replaced direct access to INPUT _ METHOD _ SERVICE with Context reference and updated soft input toggle logic to improve code clarity and ensure consistent behavior
added a test for converting primitive data structures to a map of primitive types in DataTableTypeRegistryTableConverterTest . java to ensure correct conversion of
updated the memory size from 100x500 to 10x50 and added a file deletion in TestFileSystem . java to ensure proper memory management and
update error message for M2.4 exception to include a check that the code be close before filing a bug report
migrated ` dropSequences ( Connection conn ) ` method to be abstract in ` AbstractDatabase ` and overridden it in subclasses to ensure proper
added a null check for the status variable in MainWindow . java to prevent potential null pointer exceptions during execution
assign the result of createField to f variable instead of relying on directly using the existing variable to improve code readability and maintainability by
bug fix : update of hierarchical icon on style change
added a new test method to verify the behavior of an existing query after an upsert on a non - existing object to ensure that the query correctly
hbase - 25813 fix the ' mid ' calculation in some data type ( chunhui )
added stats tracking for app launches in Launcher and updated broadcast intent handling in AppsCustomizePagedView and Stats to improve user
replaced the manual rendering of a graphics object with a drawing operation to improve rendering efficiency by drawing the image directly
update instructorfeedbackresultspagedata to store team member in response instead of email
added a check for zero inventory IDs and created a test for ID generation in the Inventory class to ensure that the player ' s ID is always
added a conditional check for the ' found ' state before breaking the loop to ensure that the loop only continues when a certain condition is met
updated conditions in ReloadableJava parser visitors to check if returnType is null instead of using emptyList ( ) to ensure accurate handling of return value annotations
modified TileMapRenderer to handle null blended tiles and initialized blendedTilesArray as an empty array if available to improve robustness
removed unnecessary imports from the @ Classes annotation in Probe . java to streamline code by eliminating unnecessary dependencies
try to fix some potential npe in getarea ( )
updated the initialization of lockOnSync to use ' this ' instead of ' this ' and changed the throttleRate assignment to improve clarity and
pipe : fix the issue that modify speed do n ' t work in the emzuli pipe
increased the timeout value in ZkController instantiation from 1000 milliseconds to TIMEOUT milliseconds to allow more time for ZkController initialization and improve
added a test method to verify the passcode parameter with client parameters in TokenMvcMockTests . java to ensure proper handling of client parameters in
added support for ` LengthFilter ` and ` KeepWordSet ` constructors in the ` brokenOffsetsConstructors ` map to ensure proper handling of input
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to enable the test to run and validate
fix ( griffin ) : fix handling of 64 - bit arg in llvmx86 _ 64bitVAstart
replaced direct pointer retrieval with a method call to ` btCollisionObject . getInstance ` in ` btCollisionObjectArray ` and `
added a new method to retrieve the copyright year and updated the OPENROCKET _ URL to include additional copyright information to enhance accessibility and provide
added getdistributedobjects method to jetclientinstanceimpl and corresponding test
added debug print statements in FinSet . java and updated expMOI values in MassCalculatorTest . java to improve debugging capabilities and ensure
updated memory constant from TOTAL _ MEMORY to MAX _ MEMORY and modified the semaphore initialization to ensure the application uses the maximum available memory
[ iotdb - 4358 ] fix typo in schemafetcher and createanddatatime series ( # 4358
improve handling of delayed payout tx and add check for burningman service activation
updated the input string construction in JsonLoaderTest . java to utilize a new json method and added exception handling for big integers to improve JSON
updated the validation condition for tableSize in ObjectSet . java to allow a maximum capacity of 0x40000000 to improve error handling for large
updated import statements in ColumnSnapshotGenerator . java and refactored data scale handling in ColumnSnapshotGenerator . java to improve code clarity and
removed the ` @ AddToRuleKey ` annotation from several fields in ` AppleTest . java ` to simplify the field definitions for better
added error handling for security exceptions in FileHelper and updated content handling in TextHelper to improve robustness by catching SecurityException and ensuring content is
added a new constant ` StyleWithMultipleAttributes ` and corresponding test cases in ` ShadowThemeTest ` to support theme attribute resolution with multiple attributes
fix hssfworkbook . createsheet to correctly check for sheet name
updated the tint method from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct element color is used for the account
added a null check for replyHandler in DefaultEventBus to avoid potential NullPointerExceptions to improve code stability by avoiding potential null pointer exceptions
added binary collation support to MariaDbDbmsType and its subclasses to enable dynamic collation management for database types
added a new method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to enable handling of specific
refactor ItemLauncher to streamline navigation handling by introducing a new method for retrieving the user view destination to improve code readability and maintain
change return statement from OK to temporaryRedirect in FeedREST . java to provide a temporary redirect to the application ' s public URL instead of a
[ flink - 20686 ] [ kinesis ] add check for non - serializable deserialization schema in kinesis consumer
( chore ) camel - base - engine : fix checkstyle error
replaced the sleep duration with a try - finally block for ZkStateReader instantiation to ensure proper resource management and prevent potential memory leaks
rename methods and methods related to icon transitions from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple
replaced direct filling of the buffer with a new method ` read ( EndPoint endPoint , Buffer buffer ) ` to improve code readability and
replaced instances of ` BufferUtil . allocate ( length + 11 ) ` with ` ByteBuffer . allocate ( length 11 ) ` in ` AB
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success to improve error handling by providing a boolean indicating success or failure to
replaced direct order comparison with Integer . compare for better readability in AbstractConfigLoader . java to improve code clarity and performance by using
added a new class PicOfDayAppWidget to display image of app widgets to enhance user experience by providing a visual representation of app widgets
do n ' t allow internal lb vmserviceofferingid to be default
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` and modified join condition handling in ` HiveParserCalcitePlanner .
[ hotfix ] [ runtime ] deprecate legacy api in favor of new one
added user and password options for remote JMX access in NodeToolCmd . java to enhance security by allowing users to access remote JMX credentials
removed duplicate initialization of BytesRef scratch in Stemmer . java to streamline code by eliminating redundancy
updated method calls and parameters in AppsCustomizePagedView . java to include the number of widgets per page to enhance functionality by allowing
minimum scale to fix rotation problem in mobile browser ; also use 3d for thumbnail when possible
updated rotation calculations in GcodeRenderer to ensure proper positioning and prevent negative Y - axis values
added a new option WORKSPACE to the OptionEnum and updated the TerminalClient to utilize it to enhance functionality by allowing configuration of workspace directory
updated the file name from " options . apt " to " options . html " in CLIManagerTest . java to ensure the test file
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and ensure PollutionPrevention
updated OAuthConfirmationController to use a Map for model attributes instead of a ModelAndView for better model management to improve code readability and maintain
added an eventually assertion to the second - level cache hit count assertion in HibernateIT . java to ensure that the cache is cleared and
refactor EventBusHook class to improve event handling logic to enhance event processing efficiency and maintainability
updated the MultiPaintEventTest class to improve test coverage for rendering events
changed the declaration of mNewScale from final float to non - final to allow for potential subclassing of WorkspaceStateTransitionAnimation
refactor SyncFactory to improve code structure to enhance maintainability and readability of the code
added unique key handling in LukeRequestHandler to ensure unique keys are only added if the same field matches the schema
added roundBorderColor property and updated color handling in BorderEditor and EditableResources classes to support customizable rounded border colors
fix issue with assert . neverpartofcompilation in binaryparserexception .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulingschedulingtest
added logging statements in ` GatewayRSocket ` , ` GatewaySocketAcceptor ` , and modified return values in ` PingPongApp `
added toolbar menu item click functionality to the RecentChatFragment to enhance user interaction by providing instructions for displaying construction messages
refactor InfoDropTarget and UninstallDropTarget to extend UninstallDropTarget and modify startActivityWithUninstallAffordance method to improve
rename symboltable . gettail to peek , not add .
update URLs from " https : / / test . wikipedia . org " to " https : / / commons . wikimedia . org
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by encapsulating index
replaced calls to ` Collections . sort ( ) ` with direct calls to ` sort ( ) ` in multiple classes to improve code readability
added date and time patterns to the FormatData _ hr _ HR . java file to provide proper formatting for date and time representations
added a call to clear focus on the clickedView in DetailFragment . java to ensure the clicked view is cleared when no longer needed
updated ` DescriptionsAdapter ` and ` SpinnerLanguagesAdapter ` to use ` spinnerDescriptionLanguages ` and improved language selection logic to enhance
updated time zone names from " WSST " to " WSDT " across multiple language files to reflect the correct daylight savings time zone
added native methods for registering and accessing fields in the FastGetField class to enhance flexibility in field registration and access handling based on the
added default value handling for UNION types and null types in ReflectData . java and corresponding tests in TestReflect . java to ensure proper handling of
( chore ) camel - seda : fix flaky seda blockwhenfull test
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerException when the resource class is null
hhh - 14709 add a constructor that take a DatabaseVersion parameter to the HapiFhirDialect , HapiFh
httpproducer fix for http : / / issues . apache . org / activemq / browse / camel - 2379 - http
increased socket timeout from 60000 ms to 120000 ms to allow more time for distributed operations to complete successfully
added an assertion to verify that the count of tickets in FREE status and final price _ cts is greater than zero to ensure that the
refactor Parser class to improve code structure to enhance maintainability and readability of the code
refactor CasProcessingFilter class for improved clarity to enhance maintainability and readability of the code
refactor : use getfirstelementchild instead of getfirstchild for nestablenode in template parser
planner - 260 add support for add enum to the look - up strategy
updated port values for metaPortStart and dataPortStart in ClusterEnvBase . java and added a waitingToShutDown method in Cluster
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5482 .
added a new content type constant for " application / octet - stream " in WebdavEntry . java to ensure correct content type is set for
added a method to retrieve the queue size from the LazyTraceThreadPoolTaskExecutor and created unit tests for its functionality to ensure that the getQueueSize
fix distanceop to handle line that do n ' t reach the minimum distance .
changed variable name from ' required ' to ' requiredLabel ' in AbstractUITag . java to clarify the purpose of the variable
updated the ` next ( ) ` method to call ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to ensure progress
added a method ` getAsUnescapedPath ( ) ` in ` SchemaPath ` and updated references in ` VectorUtil ` to use this method
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure polygons contain at least 3 points and adjusted localVertices assignment logic to ensure that polygons contain at least three points and avoid unnecessary
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to utilize a unified ObjectMappers class for impro
added null check for coeff in GeoImplicitCurve . java and improved conditional checks to enhance code robustness and prevent potential NullPointerExceptions
modified the handling of ` nameLength ` and ` multibyteFlag ` in ` ExternalNameRecord ` and added a test for Unicode name
http : / / issues . apache . org / activemq / browse / amq - 2358 - fix typo in processor
added logic to return login prompts based on the presence of " username " and " password " in the LoginInfoEndpoint to ensure that only
replaced ` remove ` method with ` removeIf ` for listener removal to improve listener management by ensuring only unique listeners are removed
added a case for " actionToggleSpin " in PieChartActivity to enable toggling of spinner state in the chart
server : kill the vhd process if copy _ vhd _ to _ secondarystorage return null
hbase - 25819 skip table normalization if it have a namespace quota ( # 2698 )
updated import statements and added a resize method for float arrays in AndroidInput . java to improve code organization and ensure proper resizing of float arrays
added a method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the formatting of the ` @ VisibleForTesting ` annotation to
ignore a test that be never fail and be blocking by prs
fix the hopperhock place item in the wrong place . close # 2321
added authentication dialog functionality in SsoWebViewClient . java to enhance user experience by providing required authentication options
updated assertions and added methods for document deletion and query handling in TestStressIndexing2 . java to improve clarity and functionality of document deletion
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase until fix
replaced ` get ` method with ` computeIfAbsent ` for initializing ` typeList ` and adjusted the calculation of ` csize ` , `
added configuration to allow single value as an array in DefaultEntityMapper to enhance data deserialization capabilities for improved data handling
updated localization messages in VersionChangeLogs . java to include specific localization options
bugfix # 205271 , use cl . app . categories instead of ` ` application ' '
drools - 1882 fix evaluation of instanceof expression with infix operator
nifi - 1883 : added mime type attribute to gethttp to store the mime type of the flowfile .
add a new provenance entity to the resourcehistorytable and use it to create a bundle with conditional delete and conditional update
rename ` exit ` to ` done ` in ` HelpActivity ` and add search functionality check in ` SearchBookContentsActivity ` to improve cl
updated NatsConfiguration . java file to improve functionality and maintainability of the Nats configuration
updated the invalidateStalePartition method to accept a list of partition names with a MetastoreContext parameter to improve the handling of partition invalidation based
make viewresultsfullvisualizer more efficient by use circular fifobuffer
chat bubble icon move from ic _ group to ic _ chat _ bubble
changed ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile `
updated import statements and method names in MocksCreationTest . java for consistency to enhance readability and maintainability of test method names
added a new constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator
increased awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time for asynchronous phaser operations
removed the BuildSlaveFinishedStatusEvent class and updated the publishBuildSlaveFinishedEvent method signature to simplify the event publishing process by eliminating
fix findbugs encode warning in vmwarestoragemanagerimpl . java cause by findbugs .
[ ds - 3382 ] add test case for deposit workspace item without a workflow
filter classpath files by their names in the stream to ensure unique entries are processed to avoid errors
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unnecessary functionality
refactor argument handling in SpecificCompilerTool to use contains method instead of equals for better readability to improve code clarity and maintainability by
added null check for table before deleting the directory in HiveMetaStore . java and implemented partition management in TestHiveMetaStore . java to
updated asynchronous thread configurations and improved logging in HiveConf , SQLOperation , and SessionManager classes to enhance concurrency management and provide clear
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for the execution command service and component name to improve code readability and maintainability by centralizing
added a new field ` diff ` to the ` ConferenceInfoDocument ` object to store the current configuration information for better tracking and management
add a new method to clear the log entry ( # 1193 )
updated return conditions in ChannelEndPoint . java to check if the channel is open and the socket is input / output shutdown to ensure proper handling of
refactor SetNullableGenerator to improve code readability to enhance maintainability and facilitate future updates
camel - 16400 : camel - report - incident should use ` ` cxf : / / cxf - example - reportincident
replaced specific imports with a wildcard import in NettyRoutingFilter . java and refactored form data handling in FormIntegrationTests . java
added ` @ ApiOperation ` annotation and overridden methods in service classes and methods to provide a clearer and consistent way to perform API operations and
updated lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to simplify the update method signature and ensure proper
updated the FG _ FK color value from 90 to 200 to adjust the color range for better visual consistency
do n ' t require mp3 by default
test : fix secondaryindexmanagertest . testnotmarkedasbuilt ( )
pmd - plugin add an about button to the general preference page
[ hotfix ] [ test ] fix exception assertion in customserializationitcase
refactor MediaFormatUtil to improve code readability to enhance maintainability and facilitate future updates
added a method to check if a cell is editable in the GeneralTab class to provide a default implementation for cell editing behavior
added a boolean flag ` onlyPrintCommands ` to control the display of unused dependencies to improve user experience by allowing users to choose whether to print
updated VocalTractModifier to increment the tmpCount variable and modified VocalTractScalingProcessor to adjust scaling factor from 2.0
updated import statements in multiple test files to ensure consistent usage of BaseScalarUdfTest across the project
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper comparison and hashing of instances of UaaAuthenticationDetails
update testskeletoncontrolrefresh to use skinning animation instead of custom one
truffle - dsl : rename nodefilter to nodecountfilter to be more generic
updated condition to check for SYNC _ FETCH _ BATCH _ NUM in NodeImpl . java to ensure that the size of the sync block
fix parse error for ` ` debugexpr ' ' in debugexprparser .
updated dependency resolution logic in ExcludeDependency . java to check for classpath dependencies to ensure dependencies are processed correctly based on their scope
renamed the methods ` tmp ( ) ` and ` lerp ( T target , float alpha ) ` to ` dst2 ( T
[ grid ] initialize args array to avoid nullpointerexception
updated ` RustBinaryDescription ` to use ` ImmutableList < String > ` for linker flags instead of ` List < String > ` to improve
[ # 7370 ] add retry mechanism for apppage to verify status ( # 7371 )
added configuration for Hive query name and modified logging in GenericUDTFGetSplits to include the external DAG name to improve clarity in
fix checkstyle issue in io / atlas / tileatlas . java ( # 701 )
fix ( gradle - daemon ) : do n ' t try to write on a closed stream
updated the ` validateQuery ` method to accept additional parameters for improved error handling to enhance flexibility in query validation by allowing more flexible
updated INDEX _ VERSION from 1 to 2 and refactored repository handling in LuceneExecutor . java to improve code clarity and streamline
[ flink - 20613 ] [ test ] add test for kryo serializer registration
added null check before removing a property in the BlueprintConfigurationProcessor and updated the configTypes collection accordingly to ensure only non - null properties are removed
refactor boolean handling in MetaStoreDirectSql to utilize BooleanUtils for improved type conversion to enhance code readability and maintainability by
added hideCustomizationDrawer ( ) method to Launcher . java to improve user interface by hiding the customization drawer
added a constant for warning and refactored term vector handling in TermVectorComponent . java and TermVectorComponentDistributedTest . java to
added support for optimistic types and improved logging behavior in the compiler to enhance performance monitoring and provide better visibility into compile jobs
refactor Expect class to improve readability to enhance maintainability and ease of understanding for future developers
added UnixSocketConfigurationStrategy to DockerClientFactory and updated DockerMachineConfigurationStrategy to include it to enhance Docker client functionality by allowing unix socket access
added testEvenLowRateIP annotation and overridden it in CloseableDoSFilterTest to ensure that tests are executed even when the low rate IP
camel - 14850 : reactive stream with no active subscription throw an illegalstateexception instead of illegalstateexception
refactor Vectorizer and TezCompiler to improve map work validation and processing to enhance code clarity and ensure correct processing of map work
modified the superclass constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to ensure compatibility with the updated LogDivertAppender
fix nullpointerexception in guipackage . getinstance ( ) in jmetertreemodel .
sulong : fix memory leak in function with weak linkage .
updated multiple Java files related to class visibility and accessibility to enhance encapsulation and improve code maintainability
# 539 - enh : add test case for defaulttransactionthreadlocal with ebean
added a check for invalid operation handles and log warnings in the HiveStatement class to enhance error handling and provide clearer diagnostics for invalid operation handles
fix : rename alter _ table _ alter _ column _ null to alter _ table _ alter _ column _ drop _ not _ null
camel - 18131 - add integration test for create a secret manager endpoint with minimal configuration
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed the exception message from the internal server error response to simplify the error message for better readability
updated the ` fromContent ` method to include a ` subTree ` parameter in the ` fromContent ` method to enhance functionality by allowing tree
updated column width calculation in HSSFSheet and added unit tests for column width calculations to ensure correct column width calculations and validate functionality through unit
added configPath parameter to the Commands . less function call to include the path path for less command execution
replaced Set with Collection for tables and weakAssociations in DotWriter and GraphExecutable classes to improve flexibility in handling collections instead of collections
change default SSH container image from a sha256 address to a version 1.0 . 0 to ensure compatibility with the latest Docker image configuration
removed assertion for non - null hostId in AgentManagerImpl . java to simplify error handling for invalid hostId values
replaced the handling of single - valued columns in DefaultGroupKeyGenerator to simplify the calculation of rawKey for better readability and maintainability
updated the testSeekingExceptions method and modified seek behavior in TestMultiMMap . java to improve error handling for seeking exceptions to ensure
fix bcsilicon recipe not use ingredientstack . of ( )
rename method put ( ) to putobject ( ) for clarity
simplified visibility setting for child view in CellLayout and refactored drag exit handling in Workspace to improve code readability and maintainability
updated the rewrite function in ModifyRequestBodyGatewayFilterFactory and added a test for an empty request body in ModifyRequestBodyGatewayFilterFactoryTests to ensure
updated access control checks in ConstructorFinder , FieldFinder , and MethodFinder to include package access control to enhance access control by ensuring only public fields
changed logger warning statements to trace level in LoggingHandler . java to improve logging performance by reducing unnecessary warning logs
refactor prefix extraction logic in WhiteBlackList . java and add new test cases in Issue348 . java to improve code clarity and
added gallery options menu functionality to enhance user interaction by allowing gallery attachments to be displayed
refactor MongoDBServiceFactory to use a singleton instance for the service to improve memory efficiency by reusing the service instance
add unit test for inline constant mutator that replace true / false with true / false
avoid deadlock in recordtest . decode ( ) by use blackhole
fix : update gapic - generator - java with mock service generation fix ( # 130 )
[ knx ] fix issue with channel not be associate with group address notation ( # 5338 )
added a call to clear the witnesses in the ManagerTest class to ensure that the witnesses are properly cleared during tests
do n ' t swallow exception in jdbcpagesink . abort ( )
removed the " stack " property and replaced it with getter and setter functions in NativeError . java to streamline stack management by eliminating
removed a condition that checks if the path name starts with a dot to simplify the path filtering logic
corrected the spelling of " onboard " to " autoload " in the ThirdEyeAnomalyApplication and ThirdEye
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before further operations
update BOLDWEIGHT _ NORMAL value from 190 to 0x190 to ensure consistent bold weight representation in the HSSFFont class
changed fThreadGroup to be volatile and modified the fLookForStuckThread variable to be final in the Timeout class to ensure thread safety
refactor ValueResultData class methods for improved clarity and consistency to enhance maintainability and readability of the code
updated hash code calculation and equality check in FuzzyQuery . java to ensure proper hash code computation and avoid null pointer exceptions
removed debug print statements for target output in PushedResourcesTest . java to clean up the code and reduce unnecessary console output
replace ` SharedRandomAccessFile ` with ` void ` for ` removeFile ` and ` removeDirectory ` methods in ` SharedOpenFilesCache `
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the method signature of ` retrievePersonAttributes ` to accept an additional ` HashMap < > ( 0 ) ` parameter and modified the principal creation
updated logging levels from info to warn in OpenWebNetBridgeHandler . java to provide warnings when connectivity issues occur
replaced intHash and longHash methods with their hash methods across multiple classes to standardize naming conventions and improve performance
added a constructor to ThumbnailGenerationTask and modified bitmap null check to ensure storageManager is not null and improve image view reference validation
updated the condition in the while loop to check count and retries before stopping the loop to ensure that the loop does not proceed if the number of
add test case for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1933
removed unnecessary parentheses in multiple Java files to improve code readability and maintainability
updated character validation condition from 33 to 32 in FileResolver . java to ensure that control characters are valid for valid space characters
added a call to ` cmp . requestFocus ( ) ` in the ` Display . java ` file to ensure the component ' s focus is
update test data and add test data for final instructor home page
rename ` JsonParserAsync ` and related classes to ` JsonStreamParser ` to improve clarity and consistency in naming conventions
modified Crouton handling in DetailFragment and MainActivity to improve user feedback based on message presence to enhance user experience by providing clear feedback on
added a test for schema queries and fetching with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct behavior of schema templates and
refactor Dialog class to improve code readability to enhance maintainability and facilitate future modifications
refactor process creation to use ProcessBuilder instead of direct execution to improve flexibility by allowing different process environments and command execution
updated local host retrieval from ` getLocalHost ( ) ` to ` InetAddress . getByName ( " 127.0 . 0.1 " ) `
refactor subsystem assignment logic to use a loop and a helper method for better readability to improve code maintainability and streamline the subsystem path
added assumptions to tests in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed when the Apple platform is available
jvmciversioncheck should n ' t fail if ` java . specification . version ` or ` java . vm . vendor ` be
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page performance testing
updated BinaryParser and PlainTextParser to use a context parameter for source reading and added charset handling in ParsingExecutionContextView to improve flexibility
added support for MultiPartFormDataCompliance in HttpConfiguration and introduced a new MultiPartFormDataCompliance enum to facilitate handling of multipart form
added JDK - 17 support in GradleDistributionManager to support JDK 17 features and improvements
added a method to add types to the SnapshotControl class and refactored the addition of types to improve code readability and maintainability by
refactor Term class to improve code structure to enhance maintainability and readability of the code
modify return statement to handle null or empty inputs for runWith to ensure proper handling of null or empty input values
resolve http : / / issues . apache . org / activemq / browse / amq - 2698 - allow xaconnectionfactory
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
pdfbox - 417 : improve error message , a suggest by valerybokov
updated the variable ` mTintAmount ` to use ` mTintAmount ` instead of ` amount ` to improve code readability and maintainability
added a new file ` SumZeroFunctions . java ` to implement aggregation functions for summing zero values to provide functionality for summing zero values
updated SQL query parameters in FirstValueFunctionIT . java and NthValueFunctionIT . java from NOT NULL to UNSIGNED _ LONG to
hbase - 25811 bucketallocator . getallocatorfailwarningsmessage ( ) should print the cause of bucket allocator exception
added a null check for propName before inserting it into roleObject . getProperties ( ) to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation to several fields and modified event handling logic in StatusBarTouchController . java and RecentsView . java to
added methods to log a container ' s stream and updated the logContainer method to include a parameter to keep the stream open when logging container information
mvstore : improve performance of cache operation
updated LONG type from " L " to " J " in PrimitiveType . java to correct the representation of the long value as a long type
changed the access modifier of the delegatingApplicationListener method from instance to static to allow the method to be called without creating an instance of Deleg
camel - rest : ensure message body be not null to avoid memory leak .
added a new file ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to implement a tasklet
* draw all drawables only once in euclidianviewforplanecompanion .
add miss ` ` out - of - bounds ' ' comment to findbugs
updated the ` sendStateEventToTest ` method to accept an ` ordinal ` parameter across multiple classes for state handling to enhance accessibility features
added checks for Lavf / User - Agent in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on user
improve error handle for issue in scrolltoerrorline ( ) .
modified the layout configuration for the menu button based on the theme to ensure proper alignment of buttons based on the UI theme
added " libskia " preload option to Skia configuration and updated value list to include " libskia " preload option to enable loading
add unittestnet to the list of available unit test
added error handling for format arguments in QueryCommand and improved test cases for query owners to ensure that format arguments are not specified and provide clear
replaced capacity variable with a length - based variable for improved clarity and consistency to enhance code readability and maintainability by using a
updated the walkRuleAndAdd method to include an additional parameter for source rule handling to ensure dependencies are visited based on the project ' s source
do n ' t add source file patch for module that do n ' t exist anymore .
[ java ] remove protocol version check from candidate term id check in election .
updated OwnCloudClientManagerFactory to set default policy based on SAML authentication status to enhance flexibility in client management based on authentication requirements
fix npe in readbatch and writebatch when map table resource be null
refactored code to use utils . close ( ) instead of try - catch block
refactor ` AnonymousAuthenticationFilter ` to utilize ` Supplier < SecurityContext > ` for improved security context management to enhance security context management by
modified the removeActor method to accept an additional boolean parameter for controlling actor unfocus behavior to improve flexibility in actor removal by allowing un
replace hardcoded string with a variable for valid configs in the prompt method to enhance code readability and maintainability by avoiding magic strings
add log level to netty http server configuration
refactor multiple Java classes related to DatumAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replaced direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) to ensure UI updates are performed on the
( chore ) camel - groovy : optimize and improve performance of camel - groovy
do n ' t warn on artifact that be not include in the plugin dependency .
changed access modifiers of several methods and constants from static to public in CliFrontendParser , ProgramOptions , and ProgramOptionsUtils to allow access to
updated the class name from ShadowSharedPreferencesEditor to TestSharedPreferencesEditor and added a test for committing values to improve code clarity and
removed the retrieval of the storage key alias and its certificate chain from the HttpsMessenger class to streamline the code by eliminating unnecessary
danielwagnerhall : improve error message if a jsontobeanconverter can not convert to response
changed access modifier of updateImage ( ) method from private to protected in ImageButton and ImageTextButton classes to allow subclass access to updateImage
fix npe when drop certain resource ( # 49881 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enable retrieval and retrieval of spatial location calculator configurations for better
updated multiple Java files related to community detection and components to improve code consistency and maintainability across the project
replaced the method ` keySet ( ) . isEmpty ( ) ` with a new ` isEmpty ( Node < V > _ root ) ` to
updated foreground and background method calls in AttributedStringBuilder . java to use RGB color parameters instead of a fixed column value to ensure proper color representation
modified the doFingerprint assignment logic in PeerSync . java and added a system property for fingerprint management in PeerSyncTest . java to allow fingerprint
change access modifier of movefunds method from private to public to allow access to the method from other classes
removed redundant event emissions in MongoTemplate and added test cases for PersonWithIdPropertyOfTypeUUID in MongoTemplateTests to streamline event
fix settransactiontest and fix collectioncontainer logger .
fix for tika - 1188 -- make sure that the tikainputstream be close after use .
updated ApiBag rule to use ApiException instead of ApiBag . ExceptionWithErrObject to handle specific API exceptions more gracefully
removed unnecessary line breaks in OptionsParser . java to improve code readability and maintainability
[ # 7372 ] instructorfeedbackactiontest : fix typo in log message ( # 7373 )
[ hotfix ] remove ` ` throw exception ' ' from constructor in externalworkerservice
added step property and related getter / setter methods to HmDatapoint and HomematicTypeGeneratorImpl classes to allow dynamic adjustment of
updated logging messages and added exclusive and read lock handling in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of
refactor scheduleJobs ( ) method call to improve clarity to enhance code readability and maintainability by removing redundant calls
simonstewart : re - enable the failing test
replace static Deque < Boolean > and Deque < Integer > openStack with a ThreadLocal < Logger > loggerTL to improve performance by
updated FunctionInitializer and FunctionInitializerTest to use MockitoJUnitRunner instead of JMockit for unit testing to improve test reliability and
added type checking and boxing logic in ` Types . java ` and introduced a new class ` T6995200 . java ` to
updated task view orientation handling in RecentsView and removed digital well - being toast initialization in TaskView to improve user experience by ensuring the
hbase - 25813 fix the flakiness of testflushfromclient ( addendum )
added logic to clone and delete a original repository if the contract details exist in the cache to ensure proper handling of contract data and maintain integrity during
updated balance calculations to use dynamic properties instead of a constant for token fee to ensure accurate balance calculations by using the asset issue fee from the repository
refactor RealisticRenderStrategy to use URI - based cache management to improve memory management and avoid potential memory leaks
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code read
added support for unselected styles in Component and Label classes to improve text width calculation based on selected font options
updated initial array lists to specify initial capacity and streamline action list handling to optimize memory usage and improve code readability
removed the ' flags ' parameter from multiple method signatures in ShadowApplicationPackageManager and added a new FLAG _ PRIMARY constant in ShadowUserManager to
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
do n ' t run test for api < 25 since it ' s not require .
[ TradfriGatewayHandler ] only warn about gateway with old firmware
simonstewart : fix typo find by codespell on fossies . org , improve javadoc
updated conditions in BoxLayout and DefaultLayout to include " table - cell " display in addition to " block " to ensure proper handling of display
refactor JsonDecoder logic to improve handling of token tokens and add a test for reordering fields to enhance code readability and ensure correctness
solr - 10141 : upgrade to caffeine 2.3 . 5 to fix issue with removal listener
disable savepointtestbase due to intermittent failure
added unit test annotations to the DroolsMvelParserTest class to ensure unit test coverage for the new parser functionality
changed instance variables in ContextRegisterListener to be final to ensure immutability and prevent unintended modifications
modified ObjectHashSet to allow initialization of ObjectHashSetIterator and added cacheIterator functionality to improve flexibility and control over the iterator initialization process
added batchBytes management in SparkReduceRecordHandler and ReduceRecordSource , along with a default value in VectorizedRowBatch to optimize performance by
replaced context . MODE _ WORLD _ READABLE + Context . MODE _ WORLD _ WRITEABLE with Context . MODE _ PRIVATE in
modified log messages to clarify the behavior of the close ( ) method and added handling for abort scenarios to improve debugging and ensure proper cleanup
updated the method call to use mState instead of getState ( ) and added accessibility imports to improve animation behavior based on the current state and
hbase - 25839 fix the warning log in protobuflogreader to be log at debug level
modified scope assignment in UaaTokenServices and added a test to verify that the persist scope length is greater than 1000 characters to ensure that the
updated import statements and added a toString method in AvailableJDBCDrivers . java , and modified test class names for consistency to improve code clarity and
resolve split - packages : move everything from kie - api under org . kie . api : split - packages : move everything from
( chore ) camel - itest : remove unused jdbctableservice
added methods to retrieve left , top , and bottom padding in CellLayout and modified bitmap creation logic in Launcher to improve padding handling and ensure
added a conditional check for the ` sb . length ( ) ` before initializing the ` cands ` list to ensure ` cands ` is
refactor SamlMetadataUIParserAction to use Action and add service user interface metadata handling to improve code clarity and ensure proper execution of
added a method to check open ports for LDAP processes to ensure that only valid ports are open for testing purposes
[ log4j2 - 1349 ] do n ' t use - 1 a the default shutdown timeout
modified URL handling and logging in Fetcher . java and HTMLMetaProcessor . java to improve URL filtering and enhance content redirection logic
updated SolrQuery in TestSpellCheckResponse to use " name : samsang " instead of " * : * " and modified the
refactor Console initialization to use reflection for compatibility with old and new Karaf Console API to ensure compatibility with Karaf Console API and
changed the access modifier of ` getVerticesColors ` from public to private and modified how colors are retrieved based on mesh compatibility to enhance encapsulation
added file filtering to skip timestamped report directories during the copy process to improve the efficiency of copying reports by excluding non - timestamped subfolders
( chore ) camel - datavalidator : migrate to parameterizedtest
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java and threw a TemplateProcessingException if it is null to ensure proper error handling when binding errors
removed console output for event coordinates in JoglInput . java to streamline code by eliminating unnecessary console output
added a method to allow extracting private fields and modified field retrieval logic to allow flexibility in field extraction behavior
added a line to replace device name with the actual device name in WebDataHandler . java to ensure the application uses the correct device name for
replaced direct instantiation of ` Lookup ` with a fallback method using ` MethodHandles . lookup ( ) ` when available to improve flexibility and
modified the ` weights ` method to accept an ` int ` instead of a ` double ` and added a new method ` weightsByDouble `
added a Database parameter to the ` writeCustomHTML ` method across multiple writer classes to enable handling of database - specific changes in the HTML writing
updated assertions and simplified key deserialization in BTreeMap . java to improve code readability and maintainability by removing unnecessary type casting
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to include BalanceInsufficientException and InvalidProtocolBufferException
bugfix # 205271 , write zero to file if profiler . heap . zerofile be set to true
refactor message sending in Main . java to use ` Scope . getCurrentScope ( ) . UI . sendMessage ( ) ` instead of standard output
updated byte buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record assignment in Horton
added imports for ` ChunkListener ` , ` ItemProcessListener ` , and ` ItemWriteListener ` in multiple batch processing classes to enhance batch
refactor code for improved readability and structure in AbstractProviderModule . java to enhance maintainability and clarity of the code
updated print statements in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser to simplify title logging and improve code readability
updated Test7005594 . java file to improve test coverage and fix existing issues
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5482 .
refactor TopKRollupPhaseOneJob class structure to improve code readability and maintainability
server : do n ' t allow vm to be start in virtualmachine mode if the guest ip be set to virtualmachine .
updated Gamepad . java to replace mModifierDigitalTriggers with mModifierAnalogTriggers and introduced a new MCOptionUtils class to enhance
refactor ` iteratesOverSequence ` and ` iteratesOver ` methods in ` IterableSubject . java ` and ` IterableTest . java ` to
camel - 8080 fixed the issue of apply the filter to the external header on camel - http
added assertions to test the count values in the ActivityHistorySQLServerStoredProcedureTest class to ensure that the database queries return zero for various data
added a new ` LargeValueFormatter ` class and updated value formatting in chart classes to improve code readability and maintainability by using a
replaced hardcoded string ' z ' with a constant INNOCUOS _ CHAR and updated related logic to improve code readability and maintain
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to eliminate unnecessary warnings related to incompatible argument types
tracera : fix typo find by codespell on fossies . org
added a TODO block to generate a generated method stub in NullAssertionValidator . java to address the auto - generated method stub issue in the codebase
added import for RuleKeyAppendable and invoked it to append a " . buck " suffix to the build rule key if available to enhance
added check to ensure the system profile directory exists before creating it and refactored test setup and teardown methods to improve resource management and ensure proper
refactor the creation of the ThreadFactory in TestcontainersDockerCmdExecFactory to use a dedicated method to improve code readability and maintainability
refactor message retrieval in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code clarity and maintainability by
added a method to set the " accept " attribute to " image / * " in the ImageFileInputDialog to ensure that the image input
updated ElasticIndexWriter and TestElasticIndexWriter to replace NodeBuilder with TransportClient and optimize client instantiation to improve code clarity and reduce dependency
added detailed information about witnesses and their class types in ForkController . java to improve debugging by providing detailed information about the witness ' s type
added a new test class ` NullPointerAndEmptyArrayTest ` for testing null pointer and empty array scenarios to ensure that the class handles null
refactor ` findConfiguredGeneratedSourcePathsUsingDeps ` method and update ` getDepToGeneratedSourcesMap ` method in ` IjProject
updated the ` constructWildcards ` method to accept a function for replacement wildcard patterns with any character delimiters to enhance flexibility in wildcard pattern matching based
added validation for ` TableScanOperator ` aliases in the ` Vectorizer ` class to ensure that map work has more than one alias to work
updated import statements in WeatherQueryTest . java for consistency to align with the latest Mockito library structure and improve error handling
added error handling for setting firmware values in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting firmware settings fails
replaced specific imports with a wildcard import and refactored the ` getLangs ` method to return a set of accepted languages to simplify code
updated assertions in LazyTraceScheduledThreadPoolExecutorTests . java for clarity and consistency to improve readability and maintainability of the test code
hbase - 25827 takesnapshot and disabletablestatisticsnapshothandler need to lock the snapshot before load the . tableinfo
[ j2kt ] implement finally via control flow and introduce runtimemethods . createplatformisnullcall ( )
added a new test method to verify the modification of the HTTP RPC endpoint in the explorer to ensure that the HTTP RPC endpoint is correctly configured and
added a volatile boolean ` isSuspended ` and modified thread state handling in ` Thread . java ` , and updated version checks in ` Test _
replace occurrences of ` Javadoc . Since ` with ` Javadoc . Hidden ` and ` Javadoc . Serial ` in ` Java11JavadocVisitor ` and
( chore ) camel - spring - boot : use objecthelper . isnotempty to avoid npe
removed redundant @ Override annotations across multiple security - related classes to streamline code and improve readability by eliminating unnecessary overrides
added module import handling and modified assertions in Java2TypeScriptAdapter , updated assertions in EnumTests , and introduced a static field in MyComplex
change language from XMLConstants . W3C _ XML _ SCHEMA _ NS _ URI to " http : / / www . w3 .
added badge handling and content description setting in BubbleTextView . java to improve user experience by providing appropriate badge descriptions
added mouse wheel listener to handle mouse wheel rotation in TestMouseWheelScroll . java to improve user interaction by allowing mouse wheel interactions in the
added close statements for document streams in VisualTester . java and a new test method in VisualRegressionTest . java to ensure proper resource
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to align
refactor VacuumController , VacuumFrame , and VacuumView to use String type instead of Object to
removed redundant currency conversion for DSH and QTUM in BitfinexAdapters . java to simplify code and improve readability by eliminating
updated imports and refactored default value fields handling in JsonFormat . java to improve code clarity and maintainability while ensuring default values are
removed redundant code related to array and enum type handling in JacksonXmlFormatMapper to streamline code and improve readability by eliminating
updated thread variable references in VirtualThread . java for better clarity and consistency to improve readability and maintainability of the code
refactor DirectoryTaxonomyWriter to use a consistent variable for term terms and improve cache management to enhance code readability and maintainability by reducing
refactor VetoableChangeSupport class to improve code structure to enhance maintainability and readability of the code
adjusted the calculation for the vertical position in BrowserContentPane to correct the vertical positioning of the content pane
pdfbox - 4892 : remove useless exception declaration ; remove unused param
added unit tests for setting short and long support messages in ` ShadowDevicePolicyManagerTest ` to ensure proper security exceptions are thrown when accessing device
ggb - 269 fix : ` ` close ' ' button should be ` ` show ' ' , not ` ` show ' ' .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory files to improve code readability and maintainability
replaced sleep durations with ThreadHelper waitUntil for better synchronization in BackendInitializerHelper . java and updated GcodeParserUtilsTest . java to
updated logic for handling release status and last update preference in SwingStartup . java to improve code clarity and ensure correct version updates based on release
added functionality to optionally include generated XML file comments in database migration to enhance XML generation by allowing users to control the inclusion of generated files during migration
updated command usage from " < player > " to " | * > " in multiple plot command descriptions to allow for wildcard player permissions in the
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused thread filter implementations to streamline the codebase by elimin
update method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to ensure consistency in method naming conventions
added a condition to check if parallel classes are constants in TestNGContentHandler to enhance functionality by allowing parallel classes to be processed
updated the logic for enabling the active master in the RouteInfoManager and changed the null check for oldAddr to improve code readability and
refactor : remove static import of enums in ctmethodimpl . java ( # 2595 )
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across the codebase
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method to accept a separator parameter in ` DigestUtils ` to enhance flexibility in handling different character encoding for
updated the return statement to handle null values for SYSTEM _ ACTIONS _ ENABLED and modified the conditional check in TestAction to improve code robustness
( chore ) camel - it0074 : add it0074 package to make it work with maven 3 . x
stop pfutilities . getlocaladdress ( ) in favor of getlocalhost ( )
updated string case handling in AbstractClient . java to ensure case - insensitive comparison for time strings
added assertions to verify the presence of timeColumn , timeUnit , and totalDocs in SegmentMetadataImpl to ensure that the metadata is correctly stored as
updated the color import from ` java . awt . Color ` to ` net . sf . openrocket . util . Color ` and modified
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
use getannotationtypesbystereotype instead of getannotationnamesbystereotype for scope
danielwagnerhall : fix double overflow to click on hidden element .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added support for a custom JNDI location for JTA TransactionSynchronizationRegistry in JtaTransactionManager to allow flexible configuration of the JNDI
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library . java to streamline the code by eliminating unnecessary functionality
change variable name from enabledCiphers to result for clarity to improve code readability and maintainability
[ bigquery ] convert java . time . instant . toepochmilli ( ) to java . time . temporal . instant . between (
replaced explicit null checks with a requireNonNull method for buffer and user credentials to improve code readability and reduce duplication
refactor ( valuesresolver ) : rename inputmap to inputmap for clarity
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that the row and column indices do not exceed the table
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interaction by allowing the selection
[ java ] unnecessarylocalbeforereturn - fix false + with member selector
replaced the initialization of ` scriptEngineManager ` with a local variable ` scriptEngine ` for clarity to improve code readability and reduce
updated calculations in ` EuclideanDistanceSimilarity ` and ` EuclideanDistanceSimilarityTest ` to return values directly instead of NaN to improve
only create backup if need
refactor the relativize method to accept two Path objects and add checks for path normalization to ensure that path comparisons do not add extra dot
added null checks for column size and decimal digits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values for column size and decimal
fix unit test which randomly fail on window
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpc
rename ErrorHandlerController to Error403Controller and create new Error404Controller and Error403Controller classes to improve clarity and organization of error
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal . java
disable javac / netbeans api for collection . toarray in java 11 +
fixed - concurrentmodificationexception in connectionpool . getconnection ( ) .
updated method names and references from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to improve clarity
pdfbox - 4892 : check for id _ tree in destination name , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to include the class loader when throwing an Error to improve error reporting by providing more
added exception handling for reader and writer exceptions in LargeStreamletTest . java to improve error handling and ensure proper thread join behavior
updated the logic to set the current item for extra pages based on user preferences to ensure the correct number of extra pages is displayed based on user
added error handling and modified bitmap processing in AndroidImplementation . java to improve image processing robustness and prevent application crashes on unsupported SDK versions
replaced the ` @ SuppressSubnodes ` annotation and simplified the labeling logic in ` BaseParser . java ` and ` ImplicitActionsConverter
[ flink - 20611 ] [ table - runtime ] use try - with - resources to prevent resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused code to streamline the codebase
added keyboard input functionality to ` AbstractLauncherUiTest ` and modified the assertion in ` LauncherInstrumentation ` to ensure keyboard input works correctly
added JSON processing functionality to FileDumper by creating a filenameToUrl map and using ObjectMapper to generate a JSON file to facilitate easier
bugfix # 20727 , reset profilingserver resultsnotified flag to prevent deadlock
blender loader : add the loaded image to the loaded feature , not just texture
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to check for the " application "
updated test values for a new ISBN randomizer from " 9781797745008 " to " 978179784500
updated notification sound setting to parse the notification ringtonone from a string to improve user experience by allowing custom sound settings
added a method to report loop counts in RootNode . java to enable reporting of loop counts when the call target is an instance of LoopCount
added logging for finalizing the version for standard repository type in FinalizeUpgradeAction . java and updated cluster entity merging in ClusterImpl . java to
cloudstack - 3246 : unable to use portable ip if the portable ip range be delete and readded atleast once . fix the query use to look for available portable ip .
removed duplicate call to streamManager . open in ItemOrientedStep . java to streamically open the step execution context
added a new file ` CountedLoopProblem . java ` that includes a method for generating a counted loop problem to test the behavior of the
fix argument pass to executecompiledmethod ( ) from hotspotgraalruntime
[ gr - 10611 ] throw jvmcierror if the field be miss a type long or jlong .
replaced ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing ` and updated corresponding tests to enhance tracing capabilities
modified constantsum question details and test cases to include received points instead of total points
remove call to DynamicColors . applyToActivitiesIfAvailable in BaseApplication . java to streamline color handling when available
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads and ensure proper thread termination
modified return statement in IntPointField to use intValue ( ) and added multiple assertions in TestPointFields to ensure correct value conversion and improve test
make mybutton arc size a fraction of 0.1 instead of a fixed value of 10 .
change the width of veryHighWidth from 768 to 640 in AddAndScaleMultiImage . java and change ratioWidth from 720
replaced the configuration variable ` minifySqlEnabled ` with ` shrinkWhitespacesInSql ` in multiple files to streamline SQL source builder configuration
updated wait conditions and state handling in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve clarity and functionality of state transitions
added multiple configuration classes to multiple test classes and updated import statements in DefaultMultifactorAuthenticationProviderResolverTests and related classes to streamline the
updated the reading method for long data from ` raf . readLong ( ) ` to ` buf . readFully ( ) ` and improved data handling
( chore ) camel - http : avoid unnecessary fluentTemplate . to ( string ) method call in camel - http
updated the creation of ClassPath instances to use separate boot and system boot paths to improve clarity and maintainability of the class path handling logic
introduce custom scope provider to allow custom script scope
added methods to get and set a layer manager in the AnimComposer class to ensure proper handling of layer managers in the AnimEvent class
added a check for an empty queue in DeferredHandler and removed the showDefaultScreen method from Workspace to improve performance by avoiding unnecessary updates when
added null checks and improved exception handling in MapRecordProcessor and TezProcessor to enhance error logging and robustness in exception management
refactor ` center ` and ` center2D ` from ` Vector ` to ` Vector2D ` and introduce a deprecated ` set
refactor TestBadUseCases to use JUnit ' s ExpectedException rules instead of static assertions to improve test readability and maintainability by
added null check for subparams in QueryExecutorImpl and introduced a test for multi - execution in StatementTest to ensure proper handling of parameters and
[ netbeans - 4952 ] only log customized security env if they be set
added an " rctag " parameter to the GET request in ReviewInterface . java to include an additional permission for the edit action
updated test cases in Test . java to improve test coverage and reliability
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity by using a more accurate variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added writesectiondefinition ( ) method to the rtfdocumentheader class to support section definition in the document header .
added distance calculation and error handling for large jump scenarios in GpsLoggingService to improve accuracy of location accuracy and log warnings related to large jump
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 to clean up code and improve performance by eliminating unnecessary
doc : generate sample code in the java microgenerator ( # 438 )
replace boolean fields with Object references for rootNameFn , rootNameFn , and sourceFilterFn in InsightFilter to improve memory management and
simplified the addition of elements to the ` data ` and ` added ` lists in ` AllAppsList . java ` to improve code
refactored SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and removed the ThemedPreferenceActivity to streamline theme
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
removed unnecessary whitespace in assertRootArcs ( ) method to improve code readability and maintainability
added an assertion to verify the existence of the security policy to ensure that the security policy is a file to prevent runtime errors
camel - 14284 : olingo2 should override getconfiguration ( ) in olingo2component to ensure olingo
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for operations to complete before proceed
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception handling
added ' send ' and ' publish xmppi ' action for http file upload . smack - 8
camel - 5536 : fixed potential memory leak in camel - netty
[ clickhouse ] allow ' - ' a a valid host name in jdbc url .
removed the system property " org . apache . jasper . compiler . disablejsr199 " from FragmentActivator . java to enable
add support for null value in CSVRecordReader and CSVRecordReaderConfig to allow configuration of null string values in CSV output
added LiquibaseService annotations to multiple connection classes to skip certain services to facilitate the processing of Liquibase services
updated cursor handling in VariableNameUtils to use JavaSourceFile instead of J . CompilationUnit to improve compatibility with Java source files in the code
added ` ` event . topics ' ' property for command and state trigger
corrected the spelling of " BeanCurrentlyInCreationException " to " BeanCreationException " in TraceWebAutoConfiguration . java to
updated case statements in SolrXmlConfig and added comments in TestSolrXml to indicate that the " zkCredientialsProvider " and "
fixed mana tablet not be able to damage properly on the creative inventory . close # 148 .
added a method to set the identifier collection in the current call event to ensure the current call event has a fresh identifier collection before processing
removed HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter imports from TestRandomChains . java to streamline code by elimin
updated the key derivation method in ScryptUtil from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
improve assertion error message in TypeDefinitionRegistry . java to provide clearer context on the assertion failure
added visibility control for the share icon in LocalFileListAdapter to improve user interface by hiding unnecessary icons
updated the crossorigin attribute of CSS links from HTTP to HTTPS in multiple filter and tests to enhance security by using secure links
updated RouterFilter , RouterServerListFilter , and RouterDistributorTest to handle null and empty headers more effectively to improve code robustness and
enhanced assertion in TestIndexWriterMergePolicy to include additional context to improve debugging by providing more context on the assertion failure
added @ Deprecated annotation to multiple Java files to indicate that these classes are outdated and should not be used in new implementations
added null check for context in CrawlerSessionManagerValve and modified request expectations in TestCrawlerSessionManagerValve to enhance robustness by ensuring
added a conditional check for security enabled before returning the JspApplicationContext to enhance security by enforcing privileged actions when security is enabled
updated length calculation logic in RocketComponentConfig . java to accommodate minimum and maximum values to ensure proper handling of component boundaries based on
added ` Scopes . SINGLETON ` scope to the ` NonceService ` binding in ` OpenIDAuthenticationProviderModule ` to improve clarity and
update child links in FileWrapper to include random and hasher parameters to enhance functionality by allowing updates to child links more effectively
refactor ` doExecute ` method and ` buildRealURL ` method parameters for clarity and consistency to improve code readability and maintainability
increase delay in RetrievalBlockingMessageStoreTests from 100 to 500 milliseconds to improve test reliability by allowing more time for asynchronous operations
implement shift - a - always functionality in the AnyKeyboard class to allow customization of shift - code behavior
[ hotfix ] [ runtime ] make isleader ( ) thread - safe
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer . java to use isReference ( ) instead of getName ( ) to ensure that references are
updated method signatures to accept a boolean parameter for no cache in ArtifactCacheFactory to enhance flexibility by allowing the use of a noop flag in
added a delay of 3 seconds and modified exception handling in TestListenTCPRecord . java to improve responsiveness by allowing a longer wait time
updated the handling of methodCall . arguments in PatchExtensionMethod . java to preserve original arguments during method call modification to improve code clarity and
refactor ` RawNativeLibraries ` to use a set of ` RawNativeLibraryImpl ` instances instead of a map to improve performance and simplify
int - 1087 add namespace support for ' apply - sequence ' and ' ignore - send - failures ' for the router
removed unused x509 publish URL and view name variables from ClientKeyPublisherMapping and JwkViewResolver to streamline code and improve clarity
updated the way readers are assigned by introducing a separate variable for SolrIndexReader to improve code clarity and ensure proper handling of single readers
replaced the custom ValueSourceParser with a custom Double2Parser for " max " and " min " functions to simplify the code and improve
simplified return statement in the Container class to improve code readability and maintainability
removed unused variables ' n ' and ' minScore ' in Highlighter . java and modified the next ( ) method signature in TokenSources .
server : fix user creation of new user ( uuid ) record in db
updated CasMultifactorAuthenticationWebflowConfiguration and CasMultifactorAuthenticationWebflowContextConfiguration to use a qualifier for flowBuilderServices to
updated WriteJdbcPTest . java to adjust connection settings and improve table naming conventions to enhance database connection management and improve code readability
removed the conditional check for " editor . laf " in the DefaultPlatform class to simplify the look and feel registration process for better read
refactor methods to directly use ` stateEntity ` instead of ` getDesiredStateEntity ( ) ` for consistency to improve code readability
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a conditional check for ` running ` in ` RootFolder . java ` and updated the status line in ` NavigationShareTab . java `
bugfix : do n ' t generate thread id for each call in cpu call graph
ggb - 2118 fix for toolbar not work in desktop
added NetworkAddressChangeListener implementation and updated warning and trace log messages in HomekitImpl . java to enhance network address management and improve logging clarity
replace lease retrieval with leaseRenewalTime retrieval in TestHDFSEventSinkOnMiniCluster . java to ensure correct handling of lease
removed the use of Optional for prefixHeader and linkStyle in CxxLibraryDescription . java to simplify the code by eliminating unnecessary type
added null check for exception message in ExceptionHandlerRegistryFactory and introduced a new test for handling fatal IO with a null message to enhance robustness
modified the ` nextID ` variable to be volatile and updated its usage throughout the ` DirectoryTaxonomyWriter ` class to ensure thread safety and
resolve intermittent failure in vmtransportnetworkbrokertest . fix intermittent ci failure .
implemented the HasSourcePath interface in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to enhance
replaced StringBuffer construction with direct string concatenation in IllegalArgumentException to simplify error handling and improve performance
added a custom index field name for faceting in ` OrdinalMappingAtomicReader ` and updated related tests to enhance index handling and ensure
updated the ` toEpochMilli ` method in ` Instant ` to handle negative seconds and negative nanoseconds correctly to ensure accurate conversion of time values
changed the method of retrieving buffer attributes to use the string representation of the buffer type to ensure consistency in attribute retrieval across different renderers
added functionality to block and update scripts in the app to ensure that the application blocks updates when necessary
added a new file ` TestCMoveLimitType . java ` with methods for handling character buffer operations to demonstrate the behavior of
reset temporal attributes in ChannelState and improve audio packet handling in AudioPacketWaveRecorder and OverflowableTransferQueue to ensure accurate metadata management and
improve the code base on user forum issue
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor console initialization to use a custom method for version printing to improve code readability and maintainability by encapsulating console logic
replaced token validation logic to use a token hash instead of a stored token to enhance security by ensuring the token is validated against both stored and
improve handling of eofexception in http / 1.1 input buffer .
added unit test for groupprovider . deletemember , groupprovider . addmember , and groupprovider . removemember .
( chore ) camel - ftp : use object [ ] instead of new object [ ] { }
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed for protocol version 2
updated ` DefaultJavaLibrary ` and related classes to use ` SourcePath ` instead of ` BuildRule ` for compile time classpath dependencies to improve
added new ` ConstructorArgsDemo ` and ` StrictDemo ` classes , and renamed ` StupidFinal ` to ` FinalDemo ` and
fix memory leak in directtemplatecomponentcollectionfactory . close ( ) . add close ( ) method to close feature iterators .
updated the assertion in WriteResponseHandler to include a multiplication by 2 * DatabaseDescriptor . getReplicationFactor ( ) to ensure that responseCount does
added a null check for the index number before comparing dates in ItemRowAdapter . java to avoid potential NullPointerExceptions when accessing the index
corrected the spelling of " areAnchestors " to " areAncestors " in multiple files to improve code readability and maintain
added a check to return early if the application width is less than 12 to prevent unnecessary processing when the width is less than 12 characters
updated equality check in ChangeLogParameters and added a new test for parameter values in ChangeLogParametersTest to ensure correct comparison of change logs and
changed the loggers variable from static to instance and made it final to enhance immutability and prevent unintended modifications
updated return statement to use getBasePlot ( false ) instead of directly returning the plot object to ensure that the method returns a base plot instance
do n ' t delete temporary file if the upload dir do n ' t exist
added a boolean parameter ` sendStatus200 ` to multiple classes and updated related classes accordingly to enable handling of HTTP status status responses in the server
added a check to ensure the comment string is greater than zero before processing the multi - line comment to prevent potential errors when processing comments with empty
added IntelliJ file type management functionality in BuckModule . java to manage file types based on specific file names based on specific matchers
replaced specific function imports with a wildcard import and modified the return type of multiply methods in ComposedUtil . java to simplify import statements and
8308365 : rtm test use rTMLocking on unsupported o . a . ppc
standardized spacing and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code structure to enhance maintainability and readability of the code
added a mockitoPackageImport method to the AbstractModbusOSGiTest class to facilitate the use of ChannelTypeUID
fix wrong index check in polyglotexceptionimpl . gethostcall ( ) .
set system context to null in AndroidTestEnvironment and add reset functionality in ShadowFontsContract to ensure proper resource management and prevent potential memory leak
added toMillis method to TimeGranularity and updated DateTime initialization in PinotDataSourceDimensionFilters and PinotDataSourceMaxTime to improve time handling and
fix break / continue flow on try - with - resources statement
enhanced assertion logic to check array size and provide clearer error messages for arrays mismatch to improve debugging and provide clearer feedback on assertion failures
[ 1.19 . x ] fix switch / cases indentation see # 1193
corrected a logical error in the bitwise operation for index assignment in MeshBuilder . java to ensure proper handling of index values by correcting the
nifi - 5591 : remove unused controllerserviceprovider dependency from standardprocessscheduler
added support for processing Kotlin plugin properties in KotlincToJarStepFactory and introduced a test for it in Kotlin
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION 150 in DragController . java ,
added permission checking for shortcut access in LauncherModel and updated shortcut management in LauncherModel to ensure shortcuts are refreshed only when the required permissions
added support for HISTORY _ SEARCH _ BACKWARD case in ConsoleReader to enhance user experience by allowing history search operations
added null check for core names in CoreAdminHandler and enhanced error handling in CoreAdminHandlerTest to ensure proper handling of null core names and
added marker selection functionality in NearbyMapFragment to manage and hide the bottom sheet when a marker is selected
added exception handling to print stack trace in FileSyncAdapter . java to improve error handling and debugging for file synchronization issues
refactor memory check logic in TestMemoryAwareness to use OutputAnalyzer for better error handling to ensure accurate matching of system memory metrics with expected
refactor FeedQueues to filter feeds based on heavy load settings before refilling and merging them to improve performance by avoiding unnecessary ref
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` Locale . US ` for case conversion to ensure consistent behavior across different
updated XML _ MIME from " text / xml " to " application / xml " across multiple test files to align the MIME type with the intended
updated file references to use the instance ' s configuration file to ensure the configuration file is accessible from the singleton instance
removed a sleep statement from the waitUntilReadyAndTimeout method in HostPortWaitStrategyTest . java to simplify the test by eliminating
replace IntMath with LongMath and modify the handling of distinct aggregation in HiveExpandDistinctAggregatesRule . java to improve precision in counting distinct aggregates
added multiple checks for ` GraphicsEnvironment . headless ( ) ` in ` mmm Toolkit . java ` to throw a ` Headless
modified the condition to check if the current recipe matches the furnace ' s world before verifying if it can be smelled to
planner - 249 add thread count description to solver log .
fix : search with revinclude do n ' t select wrong resource ( # 2328 )
add a new test class ` Issue582Test ` with a test method for sorting features to validate the functionality of sorting features in a map
[ native ] add e2e test for division by zero
updated LoadingCache . java file to improve cache management functionality
added a rule for " AvoidNonConstructorMethodsWithClassName " in NamingRulesTest . java to ensure that non - constructor methods are handled correctly
danielwagnerhall : catch staleelementreferenceexception and return null instead of throw an exception .
refactor database snapshot handling in ViewExistsPrecondition . java and add hasView method in JdbcDatabaseSnapshotGenerator . java to improve error handling
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations and a new method to log matrix transformations in Utilities . java to improve user interface responsiveness during task view animations
change FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a new method ` walk ` in ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to handle document frequency calculations to
updated the create method signatures to include SolrQueryRequest as a parameter across multiple augmenter factory classes to enhance functionality by integrating query request handling
added new trigger statements for database interactions in ` SingleTableMySQLTriggerTest . java ` to ensure that null content and validUntil fields are handled
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a setComparator method to improve code clarity and ensure comparators
updated query prefix formatting in PhoenixQueryBuilderTest . java to include quotes around column names to ensure consistency in SQL query syntax across different
added Spark initialization to the init method and await its execution to ensure proper resource management and prevent potential memory leaks
added methods to retrieve total storage pool , limit , and fee in DynamicPropertiesStore . java to enhance functionality for saving and restoring total storage
added support for loading external assets from external source directories in AssetsController to enhance flexibility in loading external assets from different source directories
updated mapMark key retrieval to use a variable to improve code readability and maintainability
added a ` TokenRewriteStream ` parameter to several methods in the ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` classes
removed ` IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` classes to
updated variable names in JxBrowserManager for clarity and improved error handling in FileUtils to enhance code readability and maintainability by redu
added a check for " AppVersion " in image creation and updated format comparisons to use ` . equals ( ) ` instead of ` = =
[ somfytahoma ] use thing . getuid ( ) instead of thing . getridgeid ( ) . getid (
( chore ) camel - util : disable flaky test on github
replaced SSLContext initialization with static keystore properties in OpenWireConnectionTimeoutTest . java to streamline SSL configuration and improve maintainability
add nangauge and stack trace for dynatraceexporterv2
added a call to remove a session ID from sessionIdToSessionInfo to ensure proper cleanup of session information associated with the current session
added hostname assignment for alerts in HeartBeatHandler and updated log message formatting in AlertReceivedListener to ensure unique hostname is used for alert
simplified the logic for determining if buffers are empty in ChannelEndPoint . java to improve code readability and maintainability by reducing unnecessary
resolve split - packages : move everything from kie - api under org / kie / api , not under org . kie
added unit tests for media player seek functionality in ShadowMediaPlayerTest . java and modified the seekTo method in ShadowMediaPlayer . java to
rename createTask ( ) to createThrowingTask ( ) in multiple files to clarify the purpose of the method related to task creation
added border settings for the tab close button in the CloseButtonTabbedPane based on whether the functionality is AQUA _ LAF to
added a POST request method with connection and read timeouts in TSPTimeStampService . java and modified test assertions in TestSignatureInfo . java to
( chore ) camel - thoughtworks - thoughtworks : add new xstream createxstream method that take a ClassLoader
added error handling for diamond application in ` Attr . java ` and introduced a new ` DiamondRaw . java ` class to
[ calcite - 2341 ] add ` ` targettype ' ' to the reloptutil method signature ( addendum )
updated the condition checks for setting IDs and values in Http2Settings . java to ensure correct handling of unsigned long values to improve clarity and
deleted the file Issue664Test . java to remove unused test files to clean up the codebase
added error handling for session insertion in SessionsPoolTest to ensure proper operation on disposed sessions even when a session is created from a pool
mondrian : fix jsonwriter . object ( ) bug in geoserverwmsbuilder
remove setindex method that be n ' t need
added checks for manual unstashing in TaskbarStashController to ensure that the application can still unstash before proceeding with further operations
camel - 14263 : camel - routeCoverage should not use customid attribute to determine if the route can be retrieve or not . th
updated the ` getEventMismatchMessage ` method to accept a boolean parameter for wait for the expected event count to enhance flexibility in event mismatch messages
added a new file ` HeaderFixer . java ` that includes a processor for header file processing to facilitate the processing of headers
added functionality to send a broadcast when the first load is complete in Launcher . java and updated LauncherProvider . java to ensure that the
deleted the file SuperJumperAndroid . java to the functionality was deemed unnecessary or redundant
modify the return value of ` SystemTableScan . java ` to check if the table is distributed and modify the query structure in ` TestStar
remove keyvaluesproviderequestionaware and Observationconventionaware interface .
do n ' t store miss miss map entry in the registry when it ' s miss .
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct calculation
added caching mechanism for format records and updated date and format retrieval logic in HSSFCellStyle . java to improve performance by reducing redundant
updated the URL in RemoteAuthenticationEndpointTests to filter user attributes to ensure that only relevant users are processed by the authenticated user
updated condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor . java
update launcher _ allapps _ exit log to include workspace and page index
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
- remove deadlocktest since it be n ' t use anymore
added null check for newInput and enhanced marker management in BugContentProvider , BugGroup , and DeltaInfo classes to improve robustness and cl
added " Reopen in Browser " menu item and implemented server opening logic to improve user experience by allowing users to open the server directly from the
added a new error message for cases where multiple outputs are specified in semantic operations to ensure consistency in output handling by providing clearer error messaging for
remove dead code from basictest . addentrylistener ( )
fix arrayindexoutofboundsexception in reverse ( ) method
removed unnecessary line breaks in setOpen method call to improve code readability and maintain consistency
added a boolean variable ` first ` to the ` TestPayloads ` class to initialize the variable ' first ' to false before processing the payload
replaced the overview mode check with a direct method call to showOverviewMode to simplify the code and improve readability by eliminating unnecessary
[ hotfix ] [ test ] fix networkroutetest failure
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE to accommodate larger message handling limits
rearranged variable declarations in NestedArithmeticTest . java and removed unused declarations in AMD64FloatConvertNode . java to improve code
simplify the logic for adding bytes to the pending buffer in HttpClientRequestImpl . java to improve code readability and maintainability by redu
updated artifact replacement logic in GetMavenDependenciesTask . java to exclude " < < solr - > analysis - " from the string replacement to
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed unnecessary println statement and adjusted substring logic in ReferenceUtil . java to streamline code and improve readability by eliminating unnecessary output
add query type to the visibility predicate ( # 1188 )
added support for dynamic HTTP JSON - RPC port configuration in the CommonParameter and Constant classes to enable or disable HTTP JSON - RPC functionality based on
added a check to ensure the folder is an instance of DropTarget before removing it to avoid potential ClassCastException when removing the drop target
refactor stub jar creation logic into a separate method for clarity to improve code readability and maintainability by centralizing the creation of stub
added new feature descriptions for Setup wizard , Probe Module , and Workflow Helper in StartPageTopComponent . java to improve user interface clarity and
remove duplicate call to schedulewithfixeddelay ( ) in cassandradaemon
removed unnecessary type casting for Boolean in OnlineTestCase . java to simplify code and improve readability
changed the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that the application returns all user attributes
refactor HttpChannelState to streamline timeout handling and error reporting to improve code readability and maintainability while ensuring better error management
changed the implementation of the CreateEndPoint class from implementing Runnable to extending Invocable . NonBlocking to ensure that CreateEndPoint implements non - blocking
updated TABLE _ HEADER _ SEPARATOR regex and added a new COL string constant in TableBlockParser . java , and enhanced tests in TablesTest .
updated return value from 32.0 f to 31.5 f in Camera . java to improve camera rendering accuracy
added a preference for " startonbootup " in GpsSettingsActivity and modified URL return statements in Utilities and GeneralLocationListener to enhance
increased the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger client secrets
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to call ParameterRegistration # enablePassingNulls ( true ) to clar
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
refactor PinotFS initialization to use PluginManager and streamline file URI scheme handling to improve code maintainability and ensure proper initialization of file
added locale check in TimeLineCursorAdapter and TimelineArrayAdapter to set a default date formatter if the locale is not " en " to
added MetalLookAndFeel import and set the UI look and feel in bug8032878 . java to enhance user interface
refactor ping handling in Bot . java to improve thread safety and manage exception handling to ensure thread safety during message sending and manage exceptions more effectively
removed the message retrieval from the error object in GlobalErrorHandler to simplify error handling by using the throwable directly instead of its message
rename module - related methods in ModuleTable and PackageTable to use " from " instead of " module " to improve clarity and consistency in
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging and error tracking
replaced the use of ` super . equals ( ) ` with ` isEqualTo ( ) ` and added deprecation annotations for ` hashCode ( )
refactor variable declarations for clarity and consistency in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintain
updated zoom level values in BasicMapViewer from ( byte ) 10 and 20 to ( byte ) 0 and ( byte ) 24 to improve map
refactor admin user and user group initialization to use ImpersonationUtil for improved clarity to enhance code readability and maintainability by
8058686 : filesystemprovider . readlink ( ) do n ' t throw classcastexception when permission be not find
added ArgumentExtractor support to the DelegatedClientAuthenticationAction and its tests to enhance service resolution flexibility by allowing specification of argument extractors
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure that the
tilecache . destroy ( ) be n ' t destroy in tilesizanger , but create in createtilecaches ( ) instead .
removed redundant calls to removeAllViews in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the info row addition process and improve code readability
refactor cleanEntriesForFeedsWithoutSubscriptions method and improve logging and deletion logic to enhance code readability and maintainability while ensuring accurate cleanup
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` calls with a new variable ` auth ` in ` ImmutableAssertionTests . java `
nifi - 2741 : use temporaryfolder in test instead of file - based - clusternodefirewalltest
fix problem with conic far point [ need backport ]
refactor EOF checks in RandomAccessReader . java for clarity to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
refactor CImage and CPlatformWindow classes to improve image handling and buffer allocation to enhance code readability and maintainability while ensuring robust image
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to streamline the code by removing unnecessary dependency on
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in multiple classes to improve clarity and consistency in
replaced manual null - checks with ` java . util . Objects . equals ` in multiple classes to improve code readability and leverage built
disambiguation : resolve class from binary name instead of canonical
added verification methods for default page locations in NinjaDefaultTest . java to ensure proper handling of specific HTML error locations in the application
rename ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and modify related calculations in ` DeviceProfile ` and ` Invariant
adjusted the bottom padding value in timestampsViewPaddingBottom in DetailFragment . java and modified the position offset in ListFragment . java to improve
updated exception handling in ZkStateReader to use Thread . currentThread ( ) . interrupt ( ) instead of Exception to improve thread interruption
added null checks for header values in HttpFields . java and implemented a new test in RequestTest . java to ensure that empty headers are handled
server : check if static nat service be support in a specified network id , do n ' t try to find it on the network
added calls to reset header scrolling state and set FAB visibility in OCFileListFragment to ensure proper UI behavior during state changes
added a call to remove extra empty screen in the workspace to improve user experience by ensuring extra screen elements are removed
added a fixedWidth flag and modified glyph positioning logic in BitmapFont . java to improve glyph positioning behavior based on the presence of a
removed the boolean parameter for showing the changelog title and refactored the createFragment method to use a new createArgs method to simplify the code
added preEvent , preTransition , and postTransition methods to AbstractStateMachineFactory to enhance state machine interceptor functionality for better event handling
refactor ConfigDescriptionProvider to improve code structure to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase for Windows compatibility to enhance role management
refactor facet counting logic to use a boolean variable for clarity to improve code readability and maintainability by reducing redundancy
updated property handling in CheckstyleReport . java to improve clarity and ensure correct directory path is used for cache file configuration
added logic to stop Jetty replicas based on the base URL of active slices and active slices to improve the reliability of the test by ensuring
added a fileName parameter to the newInstance method in FileActionsDialogFragment to allow customization of the file name when creating a dialog
fix issue with reorder direction on external device .
updated API endpoint paths and variable names in InnerTransferRequest and AccountAPI classes to improve clarity and consistency in API structure
fix jet test for run job without explicit execution id
added a new annotation interface ` EnableAdminClient ` in the configuration files to provide a mechanism for enabling or disabling the admin client in
simplified import statements and added new visitIdentifier methods in FindTypes . java to improve code readability and maintainability by eliminating
added a action text color setting in AuthenticatorActivity to improve the visual appearance of the authenticator action
added ComparableField imports and implemented find methods in StreamSupplierComponent , AbstractManager , MockManager , and MockManagerImpl classes to enhance type safety
rename ` addTestStepsForBeforeHooks ` and ` getAfterHooks ` methods to ` createTestStepsForBeforeHooks ` and ` get
corrected the spelling of " noArgMethod " in multiple test files to improve code readability and maintain consistency in naming conventions
added a ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` in ` SparkClientImpl ` to call it to
added ` getImplicitPreCoercionValue ` methods to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller ` ,
initialize lastDisplayedUser to Optional . empty ( ) to ensure lastDisplayedUser has a default value to avoid potential NullPointerExceptions
added a method to ` QueryDslMongoRepository ` to fetch entities based on a specified order specifier to enhance functionality by allowing query results to
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions during stop operations
planner - 1343 add a break statement in case of a failure in defaultplannerbenchmark
feature - xread ( ) , xreadgroup ( ) , xread ( ) and xread ( ) method add to pipeline pipeline interface
removed comments related to ` FIXME # MN ` in ` LinkedBufferInput . java ` and ` StreamInput . java ` while updating method
added WebSecurity customization and updated security configuration methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security configuration flex
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to implement
added a method to register content providers with the ShadowContentResolver and updated ContentProviderController to utilize this method to improve the registration process for
updated the ` version ` parameter type from ` Version ` to ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with
fixed - singleconnectionmanager should set keepalivetimeout to true in case of connection timeout .
[ java ] : rename multicastsenderflowcontrol into multicastsenderflowcontrolsupplier for clarity .
ggb - 2852 locus : do n ' t crash if no point in 2d
added concurrent imports and improved error handling in multiple files to enhance thread safety and ensure proper resource management during asynchronous operations
simonstewart : add ability to take a screenshot from the selenium driver to the httpwebclient
refactored assertions from ` assertEquals ` to ` assertJ ` in multiple test files to improve readability and leverage AssertJ '
remove deprecate contextreference . getcontextreference since it be no longer use .
modified exception handling in StubberImpl . java and added new tests in StubbingWithBadThrowablesTest . java and Uninstantiable
updated actor retrieval logic and exception handling in Actor . java and Group . java to improve error reporting for invalid actors and enhance code clarity
added location permission handling functionality in LocationPickerActivity and ContributionController to enhance user experience by enforcing location access permissions
added test case for http : / / issues . apache . org / activemq / browse / amq - 276 to show how
added cookie specification to request configuration in GetHTTP . java to enhance security by enforcing standard cookies
replaced manual intersection check with a method call to ` overlaps ` to simplify the logic and improve readability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering method to improve audio
added support for a monitoring URL in the ScrollingPanel and SystemInformationsButtonsPanel classes to enhance user experience by providing access to monitoring information
[ hotfix ] [ k8s ] remove unused kubernetes . service . create - timeout option
added conditional logic to set icon resources based on place description in NearbyListFragment to improve user experience by providing appropriate icons based on place
added a null check for the class package before adding it to the allClassesByPackage map to avoid potential NullPointerExceptions when the package is null
added a new file PrintInlining . java that demonstrates the use of an inlining program to demonstrate
fix : correct handling of nested brace in javadoc inline tag ( # 1193 )
[ java ] remove unused variable in archivetest .
updated EdgeDataTable to retrieve both edges and meta edges instead of just edges to ensure consistency in data handling between graph edges and their meta edges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to improve code clarity and reduce unnecessary dependencies
change playback speed error message from % d to % f and add logging for playback speed setting to improve logging clarity and facilitate
added remove room from cluster cache when cluster start
updated the ' minimize ' property from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to accurately reflect the intended number of
added key clipping and generation options to TextureHelper to enhance texture functionality by enabling MIPS generation
refactor ` PythonDslProjectBuildFileParser ` to use ` CloseRecordingProjectBuildFileParserDecorator ` instead of ` ProjectBuildFile
[ j2cl ] add normalization pass that can be execute from a library in the j2cl transpiler .
replaced ` nextResponseBodyConverter ` method calls with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverter
[ hotfix ] [ runtime ] exclude memorysegment from memorymanager
bug 54892 - consolesessionvo : add @ temporal to support timestamps
added new files Hbs . java and HbsTest . java implementing Handlebars for template handling to enable the use of Handlebars for template
updated visibility handling for HintMessage and refactored setUpIncomingMessage method in ChatMessageAdapter . java to improve user interface responsiveness
[ iotdb - 4647 ] fix csv import error when import header name with type ( # 7600 )
# 1868 fix flaky test : waituntildialogappears ( ) ( # 1869 )
added a condition to return null if distinct column indices are greater than 2 in ReduceSinkDeDuplication . java to optimize performance by avoid
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5482 .
regenerate client with updated copyright year ( # 4382 )
updated Jetty websocket bundle dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and
saml : make identity . getattributes ( ) . entryset ( ) return an unmodifiable map .
fix ` ` update code ' ' header after save program change
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct object return values in multiple classes to
changed the method used to store the timestamp value from ` resultSet . getDate ( colName ) ` to ` resultSet . getTimestamp ( colName ) ` to
added a check for " javax . naming . Context " in the context binding to ensure proper handling of context instances in the JNDI report
added conditional logic to create default database options based on database type to improve flexibility in handling database options based on database type
changed edgeType check from " double " to " mutual " to ensure proper handling of mutual edges in the GEXF importer
replaced the private static final int FLAG _ SLIPPERY with an import statement for FLAG _ SLIPPERY in Status
truffleconstantfieldprovider : optimize array dimension calculation , a suggest by valerybokov
added Google Drive folder path preference and updated related classes to utilize this new preference to enhance user control over the folder path for Google Dr
add method to shuffle text when enter key do n ' t work
updated method signatures to include @ Nullable annotation for target parameters in Truth . java to improve null safety and clarify that target values may
updated bitwise operations in ArrayUtil . java for handling new case 2 to improve clarity and correctness in bitmap size calculations
added a new test file ` ApiExceptionTest . java ` and modified ` ClassInstrumentor . java ` to check if a constructor can be instrument
added a synchronized multimap for managing anti - operation states in StreamIn and StreamInManager to manage and manage waiting for anti - operation states
added a new boolean field ` isKeyguardSecure ` and its getter / setter methods in ` ShadowKeyguardManager ` , and updated tests
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization of the StringDialog class
modified the string handling and added a conditional check for 3 - part overrides in GrblUtils . java to ensure proper parsing of status strings
updated method name from assertEmptyThrowsMutipleFailureExceptionForManyThrowables to assertEmptyThrowsMultipleFailureExceptionForManyThrowables to improve clarity
added a checkDrained ( ) condition in AsyncFileImpl . java and a new test case in FileSystemTest . java to ensure that
reduced LIGHTS _ NUM and LIGHT _ INTESITY from 4 to 8 and updated light shader paths to optimize lighting performance
replaced instances of ` new FakeProjectFilesystem ( ) ` with ` workspace . getProjectFileSystem ( ) ` in multiple test files to standardize
changed the type of ` loadRerunFile ` and related methods from ` List < String > ` to ` List < PathWithLines >
rename Gson , JsonArray , and JsonObject classes to improve clarity and consistency in naming conventions
removed the @ NotNull annotation from TEST _ DIRS array to address a todo related to issue 2022.1
added a call to close the ParcelFileDescriptor in ShadowParcelFileDescriptor to ensure proper resource management by closing the ParcelFileDescriptor
refactor prefix index management to use a thread - local atomic integer instead of a static integer to improve performance and simplify access to the prefix index
added LogLevel annotation to TestDistributedStatsComponentCardinality to facilitate debugging by setting debug logging level for HTTP connections
added calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that the IntList is not immutable to prevent
added null annotation to ` onApplicationEvent ` and modified ` GrpcClientBuilder ` to utilize ` PluginEnum ` for gRPC plugin URL
refactor demo package to use a supplier for workDir to improve code readability and reduce boilerplate code
invalidate function array if the insight key do n ' t change .
added platform - specific handling for generating the manifest file on Windows to ensure consistent line endings in manifest files across different operating systems
do n ' t report redundant nullcheck of nonnull value in findnullderef
added @ Nullable annotation to ` getConfigDescription ` methods in ` ConfigDescriptionRegistry ` and improved null checks in ` ThingResource ` to enhance
make masterjobcontext . createcancellationexception throw a runtimeexception instead of a runtimeexception .
pdfbox - 4892 : init stream if necessary , a suggest by valerybokov
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR in FeatureFlags . java to provide a feature flag for
refactor FragmentActivity initialization to utilize Robolectric ' s buildActivity method to improve code maintainability and reduce boilerplate code
rename ` getFileCoordinates ` to ` processFileCoordinates ` and introduce ` getDecimalCoords ` method in ` ShareActivity ` to improve cl
rename ABCase classes to TestABCase classes to improve clarity and consistency in naming conventions
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for the blackhole
updated the handling of rocket changes by introducing a new handler variable and invoking it to ensure that changes are properly triggered when the rocket
add a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe to change Maven dependency groupId and artifactId to ensure that
refactor IndexingJob and SegmentChecker to improve path handling and add validation for segment paths to enhance robustness by ensuring only valid paths are
updated comparison operator from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor PreprocessorDelegate to use Supplier for replacement paths and source path maps to improve performance and reduce memory usage during path resolution
rename ` JsonExamples ` class to ` Examples ` and update package - info . java to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java for entry path operations to improve visibility into stream operations and facilitate easier troublesh
refactor methods in FindsByLinkText . java for improved clarity to enhance maintainability and readability of the code
added a new Main class to demonstrate the use of the Java OOP entry point to facilitate the execution of the
fix a bug that cause some thread to hang when register a sip account .
removed redundant continue statements in NativeScanner . java to streamline code for better readability and performance
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unnecessary
replaced ` ImmutableSet . Builder ` with ` Supplier < ImmutableList < BuildRule > > ` for managing queried dependencies to improve code readability and
updated method from ` stream ( ) . count ( ) ` to ` size ( ) ` for remoteContainsResults to improve code clarity by
added charset extraction from ContentStreamBase in ExtractingDocumentLoader to ensure proper content encoding is included in metadata based on the content type
cloudstack - 5892 : use preparedstatement . setstring ( ) instead of string concatenation in databaseconfig . java
fix crash when click on a non - existent slot in window .
add -- ignoretransitiverepositories cli option to ignore remote repository .
removed the duplicate ` @ Inject BackgroundJobManager ` annotation from ` ContactsPreferenceActivity . java ` to streamline the code by elimin
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android features and ensure compatibility
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is not initialized
added a condition to break the loop if the index matches the string length and matches the start and end of the matcher to ensure proper handling of
added configuration to the IntegrationTest annotation to specify the server port to ensure the test runs under a valid port for testing purposes
added a new user - defined function called " reverse " in FunctionRegistry . java and created a new user - defined function UDFReverse . java
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple classes to ensure accurate retrieval of context path and
refactor Tracer class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] ignore flaky rocksdbstatebackendreaderkeyedstateitcase . java
replaced specific JUnit assertions with a wildcard import and simplified import statements in XMLChangeLogParserTest . java to improve code readability and
added synchronization and a test for clearing the star tree record store in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during
updated forecast time constants from 0 to 60 , 24 , and 8 in OpenWeatherMapOneCallHandler . java to improve accuracy of time
fix flakiness in abstractpagetemplatetest . testlastfetchtime and . testlastfetchtime ( )
added logging functionality and improved handling of splitTaskIds in RemoteTargetGluer and FloatingHeaderView classes to enhance debugging capabilities and ensure
updated CucumberPropertiesParser to use ` splitAndThenFlatMap ` for parsing rerun files and changed return type of ` parseR
added multiple livingrock and quartz chisel items to the Botania creative tab to enhance the creative structure by including additional mod
updated assertions in TestRadioButtons to include the expected size of retrievedOptions instead of the expected size to ensure that the expected size of retrievedOptions
added support for file size options in RCFileCat and introduced methods to retrieve number of rows to enhance functionality by allowing users to specify file size
refactor multiple Java classes related to clustering and triangle handling to improve code organization and maintainability across the clustering implementation
added a check for variousNDArray methods in JnaUtils . java to prevent illegal argument exceptions when attempting to create MXNet NDArrays
[ hotfix ] make intention of comment clearer
[ java ] unusedprivatemethod : false positive with private constructor .
renamed variables from lexicalScope to lexScope for clarity to improve code readability and maintainability by using a more descriptive variable
int - 1188 add auto - startup test for sftp adapter
added getter methods for level and root in Node , Quadtree , AbstractNode , and STRtree classes , and updated constructor signatures in STRtree
modified version parsing logic to handle both single and double - digit minor version numbers to improve accuracy in extracting version information from the version string
added check for empty tag before updating item in ItemRegistryImpl . java and changed log level from warn to debug in ItemRegistryImpl . java
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a new method ` fromDateTime ` in ` DateTime
hhh - 17100 fix serialization issue with custom type
rename Log4j2ConfiguratorServlet class files to improve clarity and consistency in naming conventions
replaced multiple instances of creating HiveException and AuthorizationException with direct return statements to simplify exception handling and improve code readability
refactor CGoCompileStep to use String . join for joining command prefixes and add a new test for prebuilt C++ libraries with wrapped
fix : add @ buildable annotation to sundr . builder . patch by jbellis
removed the @ Override annotation from the Only class to streamline code by eliminating unnecessary overrides
added TIMEOUT _ THREE _ HOURS constant and set socket timeout in HttpClientFactory to improve connection stability by allowing three - hour timeouts for HTTP
added new performance event scopes for " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target
add ` ` enable all but trace ' ' to ` ` enable trace ' ' mapping
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary singleton checks
updated username retrieval logic to utilize OwnCloudAccount for better display name handling to improve user identification by ensuring the correct display name is used
added BatchStatus import and a test for resuming a paused job instance in SimpleJobLauncherTests to ensure that the job launcher correctly handles paused
added null check for cacheConfig in HttpSyncDataService and improved data refresh handling in DataRefreshFactory to enhance robustness by preventing
[ grid ] refactoring of dockersession to make it public
javaparser should use getnameasstring ( ) instead of tostring ( ) . getname ( ) .
pdfbox - 4892 : do n ' t parse dictionary with no root object , a suggest by valerybokov
mahout - 2692 - fix testdistributedlanczossolvercli . java and testdistributedlanczos
refactor HttpServerTestBase class to improve test structure to enhance maintainability and readability of the test code
updated test assertions in PortletApplicationMapTest to check for keys instead of entries to improve clarity and accuracy of test coverage for map attribute retrieval
added tests for handling nested bean lists with null values in BeanTableSchema to ensure correct behavior of nested bean collections when ignoring nulls
fixed - spring _ starter _ spring _ config _ spring _ starter _ spring _ config _ spring _ starter _ spring _ star
fix index calculation in ` ` todouble ( ) ' ' method of ` ` mockindicator ' ' , and add test
added execInContainerWithUser method to ContainerState and modified execInContainerPattern to use it to improve flexibility in executing user commands in
refactor NettyWebSocket to use explicit assignment for interestedInByteMessages and interestedInTextMessages to improve readability and maintainability of message
added unit tests for various semgrex and negated attributes in SemanticgrexTest . java to ensure correctness of semantic graph relationships and
added a broadcast intent to clear the pull unread status in HomeFragment to enhance user experience by allowing users to clear the pull unread status
removed conditional logic for setting pre - gingerbread and over - scroller in TouchImageView . java to streamline scroller initialization
add flush ( ) method to defaultprofilevalidationsupport to flush data
camel - 16400 : fix potential npe in camelcontext . start ( )
added a floating action button and its functionality to open or close a fade - in fade - in menu to enhance user experience by providing access to
added a new ` InlineParslet ` class and modified the ` ToDateParser ` to handle inline tokens to improve date parsing functionality to
updated TestAnonymousClassUnloading . java for improved test coverage to enhance reliability of anonymous class unloading tests
updated error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java to use " toppniv " instead of
added a condition to check if the server is checked before binding the OperationsService connection to ensure the operation service is only available when the server is
replaced ` getBeginColumn ( ) ` and ` getEndColumn ( ) ` with ` getBeginLine ( ) ` and ` getEndLine ( )
added waitFor ( ) methods to manage process wait states in CxxPreprocessAndCompileStep . java and ManagedThread . java to ensure proper
added a boolean flag ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and updated ` CoreAuthenticationUtils ` and ` CasPersonDirectory
wait for cluster size before check if map be load in case of eviction .
add option to turn off ssl protocol by default in netty - web .
replaced AtomicBoolean with AtomicReference for thread - safe access to improve concurrency handling in the SetOnce class
updated key retrieval logic in QueryDslMongoRepository and added a test for empty path expressions in SpringDataMongodbSerializerUnitTests to ensure
updated assertions for RoundRectBorder in RoundRectBorderTest . java to ensure round rect borders are equal and not equal with self to improve cl
added a check for empty genesis configuration before creating a cluster and improved error handling for empty clusters to enhance robustness by preventing operations
remove ` ` parallel ' ' test , no longer need
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array
inverted the conditional check for the ' windows ' variable in ProcessInformationsPanel . java to ensure that the condition is met only on non
added a new private static method ` empty ( ) ` and renamed methods ` maxN ( ) ` to ` greatest ( ) ` in
added null checks and improved WebSocket client handling in BitmexStreamingService , BitmexStreamingMarketDataService , Bitmex
added validation for latitude and longitude in GeoPointField to ensure only valid latitude and longitude are accepted to improve data integrity by throwing an exception for
updated methods in OozieProxyImpersonator and WorkflowFilesService to retrieve file names instead of creating new ones to improve clarity and
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated getTableDocument method to accept a boolean parameter for managing dependent tables to enhance flexibility in table document retrieval by allowing more control over dependent tables
added a check for consecutive uploads without coordinates in UploadActivity and defined a counter in UploadPresenter to ensure that uploads are only submitted when there are
added caching functionality and modified profile retrieval in ProfileResources . java to improve performance and efficiency of profile data retrieval
refactor JpaMetamodelEntityInformation to improve property setting logic and enhance ID property extraction to enhance code clarity and ensure proper handling of
phoenix - 4892 add index timestamp test when upgrade from table - view to view .
re - register default exception mapper in dropwizard resourcelocatorexceptionmapper if registerdefaultexceptionmappers be not set
fix ( entry editor ) : do n ' t re - enable store field action
added a new parameter ` ownerPtr ` to the ` nativeCreateNSWindow ` method and updated its usage to correctly reference the owner ' s
updated SQL table alteration in FileContentProvider . java to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure consistency
added stok functionality to the tile class to allow customization of the skin in the game
fixed - redisson . buckets . get ( ) method throw npe if redisson client do n ' t have a specific codec . #
do n ' t warn on findunrelatedtypesingenericcontainer when assertion be disabled
added BackProgressAnimator to manage back progress animations in LauncherBackAnimationController to improve user experience during back navigation transitions
changed the visibility of ` _ initialPageNo ` from final to non - final and added a conditional check for ` pageNo ` to ensure
fix crc - 16 calculation in jedisclustercrc16 and increase total operation count in crc16benchmark
added comment parsing functionality to FormattedSqlChangeLogParser and corresponding tests in FormattedSqlChangeLogParserTest to allow users to specify comments
do n ' t create a new jararchiver instance when we do n ' t have it yet
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to provide clearer error handling for loading class
removed redundant condition check for aggregation in TSServiceImpl . java and added multiAggregationTest method in DaemonTest . java to simplify aggregation logic and
added support for reading pixels using Uint8Array and checking format and type in GwtGL20 . java to ensure compatibility with GWT backend and
updated method signatures and added a new test for debug info in OutputMemoryTest . java , and modified memory invocation in PrintR . java to
improve error message when java . lang . instrument . inlinebytecodegenerator throw an illegalstateexception
add class initialization trace ( s ) of class ( es )
http : / / issues . apache . org / jira / browse / amq - 4358 - fix typo in basere
load topic route from caffeine instead of use guava cache
mbtilesdatastorefactory . createdatasource ( ) now support read - only mode
updated the regex pattern for invalid source and target release in ` INVALID _ SOURCE _ TARGET _ RELEASE ` to allow for more flexibility in
updated the URI construction logic in DetailFragment . java to include a check for location intent availability to improve user experience by allowing access to the Google
added a null check for inherited parameter contexts in StandardParameterContextDAO to avoid potential NullPointerExceptions when accessing inherited parameter contexts
updated ClassLoader . java files with new functionality to enhance performance and maintainability of the code
added functionality to set and test the origin response headers in ProxyRequestHelper and ProxyRequestHelperTests to ensure that the response headers are correctly set
added a new ProfileSettingDrawerItem instance to GpsMainActivity to enhance the user interface by integrating profile setting drawer functionality
added XML _ VALIDATION _ ATTR constant and updated related logic in multiple classes to allow dynamic configuration of XML validation based on servlet context parameters
simonstewart : fix a typo in the error message and add a new test for javascript string handling .
added maxRows functionality and modified fetch size handling in IoTDBStatement . java to allow dynamic adjustment of fetch size based on user - defined limits
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` and modify its logic to improve clarity and functionality
added node and mouse event handling for node and mouse left clicks in StandardVizEventManager to enhance user interaction by allowing selection of nodes and
refactor memory setting in ManyToOneRingBuffer to use a dedicated zeroBuffer method to improve code readability and maintainability by centralizing buffer
replace direct reference to ` xorGroup ` with a reference to ` Memory ` in ` TerminalNode ` to improve memory management and encapsulate X
added methods to retrieve the height and width of an image in LCDUIImageMonochromeBitmapSource to ensure consistent retrieval of image dimensions
refactor SourcePathResolver to simplify path retrieval and absolute handling to improve code readability and maintainability by consolidating path resolution logic
fix dstu2 encoding and parsing of identifier value ( # 1748 )
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and utilized ` containsEncodedParts ` to improve URL handling for WebSocket
rename ` EXTERNAL _ TEST _ SUITES _ CONFIG ` to ` EXTERNAL _ TEST _ SUITES _ EXECUTION _ CONFIG
refactor HaskellBinaryDescription to encapsulate CxxPlatform retrieval logic into a separate method to improve code readability and maintainability by
added imports for ` IndexReader ` , ` IndexReader ` , ` Similarity ` , and ` Field ` classes in multiple Java files to
updated the ` peek ` method in ` ConcurrentLinkedStack ` to handle null values and added new test methods for pop and iterator bubbles
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before creating an array to avoid potential NullPointerException when mDirectories is null
updated gesture end condition in RecentsView . java to include conditions for overview state and first layout to improve gesture handling logic based on layout
added multiple package - info . java files for various Lucene packages to provide package - level documentation and organize code structure
added a line to set the text of the visibleAutoLeveler using a localization string to improve user experience by providing a more descriptive text
added postOptimizeCallbacks method in DirectUpdateHandler and DirectUpdateHandler2 , and implemented event listener handling in UpdateHandler to enable post -
updated Inflater and Deflater initialization to use a boolean flag and adjusted input handling for compression to ensure proper compression behavior and prevent potential
removed the check ( user _ data ) method from Shaderc . java to simplify the code by eliminating unnecessary checks
added a condition to check if the local meta store is enabled in the RetryingMetaStoreClient to ensure retries are only attempted when the local
updated import statements and added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to improve error handling by ignoring
refactor methods in Subject class to improve code readability to enhance maintainability and facilitate future updates
use ` weak ` and ` strong ` reference type for ` typeMap ` in ` abstractserializationservice `
fixed an issue with the hssfpalette . findsimilarcolor and add a unit test .
doc : [ v2 ] fix docstring formatting ( # 2383 )
alexeibarantsev : add two more test for getattribute ( ` ` id ' ' ) and getattribute ( ` `
added a flags parameter to the registerReceiver methods in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to allow for more flexible
update ffmpegtest . java to use mockito 4.0 . 0
fix memory leak in openalmusic and fix memory leak
replaced the hardcoded failure message string with a constant to improve maintainability and readability of the code
[ te ] change order of anomaly to allow migration ( # 2595 )
refactor Toast handling in BaseActivity and DetailActivity to use a new showToast method to improve code readability and maintainability by
updated the Request creation to use the correct HTTP method and request template to ensure accurate request creation by using the delegate ' s HTTP method and request
added name validation and updated LDAP referral handling in LDAPCertStore . java to improve error handling and ensure valid names are processed
refactor the retaining logic in GatewayRSocket . java into a separate retain method to improve code readability and maintainability by reducing
rename ` AdapterViewTest ` to ` ListViewTest ` and add a new test for ` OnItemClickListener ` to improve clarity and
[ hotfix ] [ test ] fix checkstyle violation in checkpointfailuremanageritcase
remove genericitemuiprovider since it be n ' t use anymore .
add method to set the selected object and add getter / setter for it .
added an import and annotation for the FileSystemPool in MetaInfConfigurationTest . java to indicate that a static method of FileSystemPool is being used
added serverConnector configuration to set the server host using HTTP _ INFO . bindAddress to ensure the server connection connects to the specified bind address for
updated access token validity seconds based on heartbeat mode and grant types in DynamicClientRegistrationEndpoint . java to enhance flexibility in managing access tokens and
added a new ` CloverInstrumentationFilter ` class and modified the filtering logic in ` TestInterfaceAudienceAnnotations ` and ` SplitLogCounters
added support for the Smartmi Evaporative Humidifier in MiIoDevices . java and updated the command line in Read
ignore plausible to break if the mining duration tick be below the threshold
changed the access modifier of the setScrollRangeDelta method from private to public to allow access to the method from other classes
ambari - 20827 . ambari should log error if ambari do n ' t have a repository for a particular family . (
modified the return condition in IntHashSet to use logical OR instead of logical AND to simplify the logic for determining missing values
added Serializable annotation to RuleAdministrator class to enable serialization for the RuleAdministrator object
updated CrossOriginFilter to use Set instead of List for allowed origins and introduced allowed origin patterns to enhance performance and flexibility by allowing wildcard origin
migrate g3d hud test to use g3d / knight . g3db instead of g3d / cube _ anim
added error handling for solidified position in Manager . java and updated numHashCache assignment in WitnessService . java to improve robustness by
hbase - 25813 execresult . get ( string , object ) should return null if the value be null ( addendum )
added a method to check access permissions and modified error response handling to ensure proper response is sent only when the response is not null
refactor ClassMirror and StubJar to streamline the creation and handling of class bytes to improve code readability and maintainability by reducing
added an internal link text field to the FileDetailSharingFragment to improve user feedback on the sharing of internal links based on file type
updated the assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent locale handling for accuracy comparison
use ! = instead of = = in modelzootest . testdatewithtimezone
added methods to hide the keyboard in the AllAppsContainerView and LauncherAllAppsContainerView classes to improve user interface responsiveness by
added inmemoryeventstoragesource to configurers in eventhandlingconfigurationtest and sagaconfigurationtest
replaced the parent path retrieval logic in BsdFileStore . java with a new method getmntonname in BsdNativeDispatcher .
add test case for issue # 1599 resolve type from methodcallexpr
added x , y , and z parameters to the " spawn " command and implemented error handling for argument parsing to improve command functionality and ensure proper
added MIN _ CONTENT _ DIMEN constant and updated methods to use getContentAreaWidth ( ) instead of getDesiredWidth ( ) to
remove unnecessary debug output from test ( graal - 48 )
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to relies on
added pluginCheckClassNames to the failedChecks collection and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280 . java to improve
updated method signatures in Environment . java to improve code clarity and maintainability
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with a BadApple annotation to address a known bug related
modified the way the home path is constructed in CodenameOneImplementation . java and removed a warning in HashtableContent . java to improve path
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific resource imports with a wildcard import in LiquibaseEntityResolver . java and updated the ResourceAccessor initialization in XMLChangeLog
added Security . setProperty ( " jdk . tls . disabledAlgorithms " ) to ComHostnameVerifier . java and JavaxHostnameVerifier .
replaced the constant ` CxxDeps . EMPTY ` with ` CxxDeps . of ( ) ` in multiple files to standardize the
renamed expectedDirectory and actualDirectory to expectedStubDirectory and actualFullDirectory in StubJarTest . java to improve clarity and consistency in
removed the redundant ` @ DoNotSub ` annotation from the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to ensure
updated folder name hint logic to handle empty titles gracefully to improve user experience by providing a clear hint when the title is empty
updated ` loadClientByClientId ` method calls to include a default value of " uaa " to ensure correct client context is used for testing
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to handle closed states to ensure accurate representation of values when they are
refactor MimetypeIconUtil class for improved readability to enhance maintainability and reduce technical debt
renamed method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in terminology
added a new test method ` negateInstanceOf ` in ` UnnecessaryParenthesesTest . java ` and updated the type check in `
added a ` built ` flag and modified the way ` o ` is initialized in ` Location ` and implemented a ` teleport ` method to enable
replaced deprecated Base64 encoding methods with utility methods from Spring ' s Base64Utils to improve code maintainability and readability by utilizing
added ProjectComponent dependency and updated Statistics event handling in TranslatorManagerHelper . java to improve project - related statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation being referenced
added a null check for the result in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value to
refactor setUpRevampedTweet method to include muffled state handling to improve tweet visibility management by ensuring muffled users are
updated the visibility and display logic for the verified text in UserProfileActivity based on user settings to ensure the verified text is displayed correctly based on
updated the visibility of the ` timeDiffFromServer ` variable and improved the instantiation of ` AbucoinsDigest ` to enhance encapsulation
( chore ) camel - mongodb : fix npe with autowired = true
added a new parameter ` sourceIndex ` to the ` AttributeMapping ` class and updated related methods accordingly to allow dynamic indexing of sources based on
ignore corrupted statistic when alter partition
added a call to isSecurityEnabled ( ) in AuthParams . java to enable security checks for user authentication
move eastasianwidth and connectivity receiver into their own module to allow for easy debugging .
[ geos - 5390 ] escape email in geoserver home page ( # 5390 )
move modulemanager # enrichreflectionswithsubsystems ( module ) to modulemanagerimpl and move it to terasologyengine
updated the way feature counts are written in JoinModeller . java by introducing a variable for the number of features to improve code readability
make sure input string be not empty before call algebraprocessor . getmath ( )
( chore ) camel - kafka : add log guard on resume strategy critical path
replace ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SPE
updated IgnitionConfigurationHandler , MotorMountHandler , and ParallelStage to replace " automatic " separation with " launch " and
tika - 3496 -- improve mime type validation for msownerfiletypes and add unit test for nls .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored on JDK 1.7
refactor lock file creation into a separate method to improve code readability and maintainability
updated the preferences for version 5.3 from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added
added a check to return null if the user is FEDERATION _ USER to enhance security by preventing unauthorized access to fed
fix executemethodnode to exclude truffleobject .
refactor JakartaClientShutdownWithServerWebAppTest to use streams . toList ( ) instead of Collectors . toList ( ) to
- do n ' t try to access the file if the access chain be deny .
updated Collection and Map classes to improve functionality to enhance performance and maintainability of the code
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to facilitate the use of Lucene ' s versioning features in the indexing process
added handling for OracleDatabase and AbstractDb2 indices and updated schema handling in MissingPrimaryKeyChangeGenerator to ensure correct schema information is maintained during
added MetastoreException to the method signatures and modified exception handling in MsckOperation and TestMSCKRepairOnAcid to
[ hotfix ] [ kafka ] retry committing when an error occur during the recovery
fix ( broker ) : fix issue with message receipt handle not be remove in the forward message dlq activity
added a ` withServices ` method to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to support multiple services to enhance
fix ( recaf ) : use static import of collectionutil . copyset in export and structcontextdecorator
removed unused HTMLCleaner imports and simplified XML parsing in FeedParser . java to streamline code and improve readability by eliminating unnecessary
removed conditional check for ` AppsCustomizePagedView . DISABLE _ ALL _ APPS ` in ` Launcher . java `
changed data types of energyReactiveVArACSumConsumed and energyReactiveVArACSumProduced from int to double in Meter
added a new file ` bug4150029 . java ` that implements a file applet with temporary directory setup to address issue # 415
added functionality to track if Spark configuration has been updated and modified Spark client handling to improve resource management and ensure proper closure of Spark client instances
added long press indicators to AppIcon , AppIconMenuItem , and AppIconMenuItem classes , and modified Launchable and Workspace classes to utilize
added handling for empty POLYGONs in WKBWriter and updated related tests in WKBWriterTest to improve robustness and ensure correct
refactor UnflavoredBuildTarget creation to use Builder pattern and encapsulate interners to improve code readability and reduce boilerplate
added a new file MultiplyByMaxInt . java with a test method for integer multiplication to facilitate testing of integer multiplication with
updated drawer indicator enabling logic for the current file in OCFileListFragment to improve user experience by enabling the navigation drawer when the current
changed the package of TestRAMDirectory from ` org . apache . lucene . index . store ` to ` org . apache . l
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to improve performance
drools - 4951 dmn compile error message should use msg . err _ compiling _ feel _ expression _ for _ name
replaced instances of " @ ContainedBy ( A . class ) \ n " with " @ Repeatable ( A . class ) "
updated message formatting in AbstractController to include send duration to improve clarity of file sending duration in console output
updated class name handling in OpenMBeanAttributeInfoSupport . java to include package access check to enhance security by ensuring package access is validated before loading
fix readresponseresolver to take response count into account . patch by brandonwilliams , review by jbellis for cassandra -
decrease freeSize by applying a roundTo16 operation to ensure freeSize is accurately incremented based on the size of the store
refactor touch event handling in AnyKeyboardView and AnyKeyboardViewBase to accept a MotionEvent parameter to improve clarity and functionality of touch
replaced instances of SslContextFactory with SslContextFactory . Server in multiple server - related classes to enhance SSL context management and improve compatibility with server -
removed the PrivilegedSocket class and directly created a connection object in PG _ Stream . java to simplify the socket creation process by directly creating a socket
refactor InputTest class to improve test coverage to enhance reliability of input validation logic
added functionality to pause blurs in the QuickstepLauncher and updated animation handling in the AbsSwipeUpHandler to improve animation control and ensure
added a null check for curLatLng before adding the current location marker to prevent potential NullPointerExceptions when adding the current location marker
updated ` removeSecret ` method to use ` clientDetailsService . retrieve ( clientId ) ` instead of direct access to ` client ` to improve
updated SqlSourceBuilderTest to use JUnit 5 ' s @ BeforeEach annotation and modified SQL query string formatting to improve test setup consistency and
fix for http : / / issues . apache . org / activemq / browse / amq - 2358 - wait for thread
added tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper error handling and reporting for unknown column keys in the dataset
updated filterConditions to handle potential null pointer and added return statements in ZookeeperSyncDataService to improve code robustness and prevent potential NullPointerExceptions
* add clone field to lightcontrol so it do n ' t have to clone itself .
updated the logic for setting the hideStacks variable and improved stack trace handling in StdErrLog . java to enhance code readability and maintain
refactor HttpSessionEventPublisher to utilize the existing Context method instead of direct context publishing to improve code clarity and ensure that the ApplicationContext
added a semantic check for the CREATE CQ statement ' s FOR syntax in ASTVisitor . java to ensure proper error handling for syntax changes from
[ hotfix ] fix checkstyle violation in flinkIoTDBSink
added counter for custom simplification in the canonicalizer phase to track when a node be simplify .
updated the context parameter in the fileIcon set method from null to context to ensure the correct context is used for file type icons
updated indexOrConstraintName to use schema . getName ( ) instead of readIdentifierWithSchema ( ) in mmm Parser . java and pp
[ bigquery ] support read bigquery . table . time field ( # 11804 )
added ` findViewWithTag ` method in ` ShadowView ` and ` ShadowViewGroup ` , and a corresponding test in ` ViewGroupTest `
specify generic type for enumeration in multiple classes to improve type safety and eliminate unchecked cast warnings
removed unused import of PColumnFamily from IndexTool . java to clean up the code and improve maintainability
added JSON _ VALUE and JSON _ CREATOR constants , updated enum value retrieval logic , and improved method name handling in JavaClassUtil to enhance
svm : fix resourcefeature to check if the classpath be a jar
updated CUDA _ R _ 32F and CUDA _ C _ 32F constants in cublas and cudnn classes to improve clarity and
modified ResourceLoader class to include file listing for layout directories to enhance resource loading functionality by allowing multiple layout directories
use always attachable block face for redstone torch ( # 1193 )
[ hotfix ] [ table - planner - blink ] add support for varbinary type in reltostageconverter
added import statement for DateHelper in NoteAdapter . java to utilize date utilities for date handling functionality
replaced BACKUP _ SAVED message with BACKUP _ SAVE _ SUCCESS message and added checks for backup existence and file existence to
mow - 495 fix position of the overlay in the case of relative position ( e . g . on tablet )
simplified the creation of a temporary file in ShadowParcelFileDescriptor . java to improve code readability and maintainability by reducing
replaced ` poll ` and ` offer ` methods with ` removeFirst ` and ` addFirst ` methods in ` StackBasedSecurityContextHolderStrategy
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
canonicalization of x ^ y = = ( x ^ y ) = = ( x ^ y ) to x = = ( x ^ y
added a constant STRING _ ARRAY to the TypeFactory class to provide a specific type for String arrays in the application
refactor keyboard hiding logic into a separate method and update logging calls to improve code readability and maintainability by centralizing the hideIm
force bit density to fix network issue
refactor assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for improved readability and consistency to enhance maintainability
limit the number of texture use by the par1playerusagnooper to avoid multiple call to glteximage2d . getgl
[ java ] start try stop log recording when prepare for election .
added a condition to reset startPosn when inTransform is true to ensure startPosn is set correctly based on the transform state
add query option to skip star tree in debug output ( # 2695 )
added a lockNearbyView flag and modified refreshView method to handle refresh behavior to improve user experience by allowing nearby places to be refreshed
add maptransformer . of ( ) , . of ( ) , . inverse ( ) , and . bimap ( ) method
updated methods in EmeddedObjects and EmbeddedObjects classes to improve performance and maintainability of the code
added support for handling launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to improve widget management by allowing retrieval of loaded launcher widgets
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to align with the new event
added methods for getting and setting process ID and calling UID in ShadowBinder and implemented corresponding tests in ShadowBinderTest to enhance process ID management and
refactor ExpectationFailure class to use private fields and implement equals and hashCode methods to improve encapsulation and ensure proper handling of Throwable causes in
bitcoinserializer : remove warn log when no support be deserializing message
replace conditional calculations for newW and newH with direct assignment to targetWidth and targetHeight and add conditional calculations for newW and newH
added support for special characters in Markdown literal handling and updated Markdown rendering tests to improve Markdown formatting and ensure correct handling of line breaks
added a neutral button to the alert dialog and refactored password sharing logic into a separate method to improve user experience by providing clear feedback
refactor ` MappingMethods ` to use reflection for mapping address and unmapping buffer methods to improve code readability and maintainability by centralizing
changed access modifier of test methods from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java
added slider command - line options for slider AM keytab and slider keytab directory in LlapOptionsProcessor . java to enhance user experience by
modified the tearOutGraphViewContainer constructor to accept a JFrame parameter and added animation support to improve flexibility in managing the graph view
added a flag to track loader completion and refactored shortcut management in LauncherModel . java to improve shortcut management and ensure proper workspace loading
modified NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to use final sets and simplified isFinished logic to improve
updated method signatures in ` IssueInterface ` and ` ValidationReport ` to use ` messageType ` instead of ` error ` and introduced ` JsonValidation
added a method to safely retrieve the cipher provider name in RSAClientKeyExchange . java to improve error handling and provide clearer debugging information for
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration in container specifications
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity for non - critical issues
modified the output formatting in AggregateLifeCycle . java to ensure proper indentation during aggregation operations
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to these constants from other classes
removed the @ Ignore annotation from CovariantOverrideTest . java to mark the test as ignored due to potential issues with covariant overrides
refactor methods in Pattern . java to utilize Qtype class for better type management to improve code readability and maintainability by reducing
camel - 16400 : camel - core - reloadstrategy should not try to load route definition from a resource a xml if it ' s
added space minimum and maximum settings to the X - axis in ScatterChart to improve visual spacing for better data presentation
format adjustments in ExpressionStringBuilder . java for consistency to improve code readability and maintainability
added shouldPreserveDataStateOnReapply method to SplitScreenSelectState and its implementations in BaseState and StateManager to ensure data state
added a check for the presence of the " UTF8 " key in the properties file to ensure that the UTF8 key is present in the
updated print statements in TestReproduceMessage and refactored test annotations in LuceneTestCase to improve clarity of system output and
added a UI event for long - pressing an AllApps item in StatsLogManager and integrated logging in ItemLongClickListener to enhance user tracking
added null check for log in StoreWAL . java and created a new test case for committing double commits in Issue112Test . java
show sector land info only if the sector preset be not null
added generic type specification for CompositeType in multiple classes to ensure type safety and avoid unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
added a randomSelection parameter to the buildNearbyRandom method and replaced betaDistributionNearbyRandom with LinearDistributionNearbyRandom to ensure that
move temporary cache to a common class instead of use a scheduled task
hide the sql view and wms layer container when create a new layer page
initialize Availability _ availability to UNAVAILABLE to ensure consistent handling of availability states
updated method signatures and logic in FetchInvDataMsgHandler and PbftDataSyncHandler to accept BlockCapsule instead of blockNum to
fix : migrate gapic - generator - java to grpc _ service _ config ( # 49 )
replaced the ` _ freeSpaceReclaimDisabled ` boolean with an ` _ freeSpaceReclaimQ ` integer and updated related methods to
changed access modifiers of KDC options from public to private static final and added a new class KdcDefaultOptions to enhance encapsulation and fac
removed redundant assignment of the writer variable and added null assignment for the writer variable to improve code clarity and prevent potential null pointer exceptions
removed unnecessary whitespace and adjusted index declarations in ProfilePager . java to improve code readability and maintain consistency in variable declarations
rename the method from ` paintBackground ` to ` paintComponentBackground ` in the ` Slider ` class to improve clarity and consistency in
added a method to retrieve property values from a class constant using reflection to improve flexibility and error handling for object value constants
added logging for initialization failures in KafkaService . java to improve error handling and debugging for service initialization failures
changed the type of ` RESOURCES _ TO _ ACQUIRE ` from ` Set ` to ` ImmutableSet ` to allow resources to be accessed without
messagebus : make the ' auto - create - channels ' optional for the default - output endpoint
added keyword support to HTMLDocument and a corresponding test case in TestDemo to enhance document indexing by allowing users to specify keywords for matching documents
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android SDK versions
added an else clause to the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to ensure that the addresses list is consistently
updated the instantiation of CorrespondenceSubclassToFactoryCall to use the class reference instead of a new instance to ensure compatibility with the current
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
improve error message if no valid isbn from ebook . de . tools / isbn
fix infinite loop in polyglotimpl . enterifneeded ( ) and polyglotlimit . outofboundexception ( )
added null check for the text before firing data changes to prevent potential NullPointerExceptions when the text is null
make the sentimentmodel a bit more flexible by allowing the simpler model to be categorized
added line trimming to the SuffixURLFilter class to ensure consistent formatting of input lines
added a check to return early if the player is in godmode to optimize performance by avoiding unnecessary processing when in godmode mode
ggb - 2696 bugfix : the popup of checkbox creation dialog be n ' t unregister properly .
updated constructors of LinkedHashMapCache to remove unnecessary parameters to simplify constructor parameters for better readability and maintainability
refactor channel closing and writing logic in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex and updated validation logic in FixAcidKeyIndex . java ; refactored KeyIndexBuilder usage in O
added Locale . ROOT to exception handling in DirectUpdateHandler2 . java to ensure consistent error reporting across different locales
add node guard to write node usage if necessary .
fix a bug in the bciblockmapping : do n ' t follow exception dispatch edge if the start bci be within the end bc
change getclassificationvariance to return 0.26 for non - voting designation
replaced usages of ` BuildTarget . copyOf ( ) ` with direct assignments in various files to simplify code and improve readability by removing unnecessary object copying
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` to improve clarity and
change ` ` create offer ' ' to ` ` confidence progress indicator ' '
updated HTTP header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 to ensure correct handling of the
fixed an issue where the blockindex would wo n ' t be write to the right place after the block have move . close # 2
added new view types for message handling in CrowdfundingChatAdapter to improve flexibility in view management for different message types
replace ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL .
fix an off - by - one error in the construction of an sbar expression .
modified the TexturePacker and TexturePacker classes to remove the canvas parameter and implement a new writePackEntry method to streamline image insertion
moved the ` getVisitors ` method to the ` apply ` method in ` RefactorModule ` and updated stream processing in ` AddGrad
added methods to retrieve child elements by name and its children in Xml . java to enhance functionality for better XML child management and retrieval
set the " Content - Charset " header for the POST request to " UTF - 8 " in HttpSolrServer and its tests to ensure proper
added ` @ SystemUiControllerFlags ` annotation and updated UI state management in ` TaskThumbnailView ` and ` AllAppsTransitionController ` to
added private ClientConfigurationService field to IntrospectingTokenService to facilitate client configuration management during token introspection
improve error message when hive record reader can not be create
removed the ownerId field from the NodeEntry class to streamline the code by eliminating unnecessary fields
rename backupsnapshotafertakingsnapshot to backupsnapshotaftertakingsnapshot to make it clear that it ' s the same a backupsnapshot
added score adjustment to the merge method in TextFragment to ensure consistent merging of textFragments by using the maximum of the score
removed the private Digester variable from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added a validation check for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that the maximumUn
added a check to return early if currently opened editors are empty to avoid unnecessary processing when no currently opened editors are available
fix bddmockito . verify ( ) to work with new version of mockito
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5482 .
modified the ` sayHi2 ` method in ` CodeFirstPojoClient ` , ` CodeFirstPojoClientIntf ` , and
make abstractsplitbraintest . testsplitbraintracingplitrainprotectiontest more resilient to name mismatch ( # 1
added checks for logout configuration before adding the logout filter in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure logout functionality is only applied when
[ giac ] fix problem with [ degree ( ) = = 0 ] [ 1 ] , [ degree ( ) = = 0 ] [
refactor DockerComposeContainer to utilize a map for logging consumers and streamline log following logic to improve code readability and maintainability
updated the generic type parameter in the testMapping method from ` expected ` to ` actual ` to enhance type safety by explicitly specifying the type parameter
removed unused imports from AmbariMetaInfoTest . java to improve code clarity and reduce unnecessary dependencies
add a static method ` fromSupplier ` to create a ` ThrowingSupplier < T , E > ` from a ` Supplier < T >
replace ` break ; ` with ` return ( true ) ; ` in ` ConsoleActivity . java ` to ensure the method returns a successful result
camel - 14284 : fix the issue that camel - platform - http do n ' t handle buffer body for post request . thanks
added methods to handle platform - specific path separators in MorePaths . java and updated argument handling in CopyStep . java and AarWithLib
added a null check for authorizationContext before processing parameters to avoid potential NullPointerExceptions during parameter processing
updated the load method to throw an exception if it fails and added a privileged action for the loadLibraryOnlyIfPresent check to enhance security
updated SDK version from " 4611349 " to " 4514284 " and added tests for text sound behavior in ShadowTextToSpeech
queuetransactionlog : add hashcode ( ) and equal ( ) to encapsulate transaction log key .
added support for enabling SQL without a profile in the JdbcEnvironmentProperties and JdbcEnvironmentRepository classes to enhance flexibility in SQL configuration by allowing
added a try - finally block around the write operation in ConnectHandler . java to ensure that the _ data variable is reset after writing to the
fix compile error cause by eclipse compiler generics .
changed the parameter name from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to
updated ` loadValue ` and ` getThreadInfo ` methods in ` CachedThreadStatesGaugeSet ` to include a stack trace depth parameter to improve
added a new field ` prevTlogOnPrecommit ` and modified the sleep duration in ` LeaderTragicEventTest ` to enhance
updated the job URL from " FastAsyncWorldEdit - P2 - V6 / " to " FastAsyncWorldEdit - 1.17
refactor segment generation logic to create a output directory if it doesn ' t exist to ensure the output directory exists before creating the input file ,
added utility methods for calculate normal vectors in ObjUtils and updated TriangulationHelper to use this new method to improve code readability and maintain
updated the query parameters in JdbcAuditService to include the identity zone ID in the find method to ensure accurate retrieval of audit events based on the
updated SpanCollector . java for improved functionality to enhance performance and maintainability of span collection logic
added a null check for the session manager ' s getCurrSession ( ) method in AuthorizationFilter . java to ensure that the session info is
refactor TransactionIsolationLevel class structure to improve code readability and maintainability
rename printLVgroups to printLogicalVolumegroups in OshiController . java to improve clarity by reflecting the
added thread name setting for the current thread in TestSession . java to improve traceability of the current thread during the forwarding process
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
simplified the return statement in LauncherExtension . java by returning a new ArrayList instance instead of an ArrayList to improve code efficiency and read
added a new OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance touch controller functionality in the
replaced the ` scaleHotseatWithWorkspace ` method with a new method ` getHotseatScaleAndTranslation ` in ` Launch
added a check for JUnitRule in DefaultStackTraceCleaner and implemented a test for filtering elements outside Mockito internal classes to ensure that only
replaced instances of ` dstNull ` and ` srcBuffer . hasArray ( ) ` with ` dstByteArray ` and ` srcByteArray `
refactor balance listener initialization and removal in DepositListItem . java to improve code clarity and ensure proper management of balance listeners
added conditional logic to set color based on edge mode in RealisticRenderer to ensure proper rendering behavior when different edge modes are used
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated logging retrieval in multiple test files to ensure robustness by preventing
remove invalid pattern check from gl200 protocol ( fix # 2370 )
updated playback time calculation logic in FullDetailsActivity . java to improve accuracy of playback refresh timing based on last refresh time
handle multi - word token in spanishtreereader . thanks to benjamin for the patch .
added a condition to clear the " iso " locale data if the first value is an empty string to ensure that empty language data is handled correctly
updated ReactiveLoadBalancerClientFilter to override the scheme based on the server ' s secure status to ensure correct scheme is used for Reactive load balancer requests
log4j2 - 1343 fix memory leak in defaultmessagestore
remove ` final ` from the method ` fullFilePathFromClassName ` in ` NativeImageDebugInfoProvider . java ` to allow for flexibility
refactor the implementation of the Correspondence class to use a lambda expression to improve code readability and reduce boilerplate code
rename ` isNonUSSupported ` to ` isNonENLanguageSupported ` and update related references to improve clarity and consistency in
remove unnecessary null check for redeemdata in localtransactionsigner .
add forgeforgeclient to allow customization of tessellator and terrain texture .
added a return statement in TxCacheDB . java to prevent further processing in the method
updated import statements to use jdk . internal . org instead of com . sun . xml . internal . ws in BoundMethodHandle . java
refactor FastDictionary class implementation to improve performance and maintainability of the code
improve handling of closed io connection . thanks to jessey for the patch .
updated the initial values of FlightEvent instances and modified the epsilon calculation in FlightEventsTest . java to enhance the accuracy of flight events
[ beam - 8470 ] update bigquery - storage - grpc to 1.26 . 0 , update bigquery - protobuf to v1
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the correct namespace declaration is added to the element
add instructorfeedbackresultspage . getprofilepicturelink ( ) to store link to student that have the correct display name / course id
added short rules to the DefaultPasswordValidator and adjusted defaultRules initialization to allow alphabetic and numeric sequence rules to enhance password validation flexibility
danielwagnerhall : refactored code to use string - based command constant instead of string - based command string
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to eliminate unnecessary dependency on the test class
modified the scale and padding arguments in DLNAMediaInfo . java to simplify the code and improve readability
remove speculative guard movement phase from tier during test .
updated the condition in AuthenticationManagerBeanDefinitionParser to exclude alias checks and added a test for bean definition overriding to ensure proper validation of authentication manager
added handling for both the ` _ host ` and ` _ server ` fields in the ` ForwardedRequestCustomizer ` class and updated tests
added a call to setLength ( 0 ) in ConsoleReader . java to reset the StringBuilder length to avoid potential NullPointerExceptions during string manipulation
change access modifier of allowedRoles and disallowedRoles lists from private to protected to allow subclasses to access these lists while maintaining encapsulation
update OpenIDE - Module - Specification - Version to 1.32 and OpenIDE - Module - Specification - Version to ensure compatibility with the latest
hbase - 25827 add config for netty server ' s neTTY TLS wrap size
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated imports and added new test cases in FixedLengthTokenizerTests . java to improve test coverage and ensure exception handling for incorrect line length exceptions
update protocol binding in OpenSamlAuthenticationRequestFactory to allow customizable SAML2 protocol URIs to enhance flexibility in authentication protocol configuration
added AttachedSurfaceControl import and modified SurfaceControl transaction handling in DepthController . java to improve the functionality of SurfaceControl operations on the root
updated version string from " main " to " 2.5 . x " in AsciidoctorConventions . java to reflect the
hbase - 13850 bulkload create / prepreparebulkload action change from write to create ( addendum )
updated the subList method for unSeqMergeList and adjusted measurement schemas in MergeTaskTest to ensure the merge list starts from the first element to
camel - 7490 fixed the issue of convert body to inputstream in genericfileconverter . thanks to stan lewis for
added login handling to DefaultShardManager and DefaultShardManagerBuilder to enable conditional login of the shard manager based on user login settings
[ zeppelin - 1181 ] fix delete global reference on user data callback .
corrected the casing of the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to ensure
modified the response completion handling in HttpSender . java to check if the completion has been marked before attempting to obtain a result from it to ensure
update comment logic to only show comment for user student that have the response giver
added support for disabling linked profiles and improved profile handling in BMPImageReader . java to enhance security and prevent issues when
update location parameters in setSimpleCuboid method calls in ClassicPlotManager . java to correct the logic for setting a plot block to ensure
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5481 : pmd
refactor gridPresenter initialization into a separate method and add grid sizes based on poster size settings to improve code readability and maintainability by
updated return values in ContributionsListFragment from false to true to reflect successful functionality in the ContributionsListFragment
added a test for skipping a specific range in DistinctPrefixFilterIT . java and modified the logic in BaseResultIterators . java to
pdfbox - 4071 : add test for acrobat checkbox group property , a suggest by valerybokov
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to enable retrieval of the last modified timestamp of
added a check for the presence of a " metaTable " in the tableProps for default file format validation to ensure that only valid metadata tables
change cashdeposit currency name field from text field to combo box
changed catch block from IOException to Throwable in WriteFlusher . java to handle a broader range of error scenarios
added a new boolean variable ` mStartedEnterAnimation ` and modified animation handling logic in ` IconRecentsView . java ` to improve animation
added a new public String field named activeKeyId to the UaaConfiguration class to provide access to the active key ID for better configuration management
updated action labels and descriptions in SendMailActions . java to include " @ text / " prefix to improve clarity and consistency in action labels
make socketserver . isactive volatile to ensure thread safety
replaced the ` isDesc ( ) ` method with ` isAsc ( ) ` in the ` SelectionPartiallyOrderedByDescOperation `
cast to charsequence to prevent java . lang . classcastexception
added a check for the application name in the DisplayUtils class to ensure that the application name is correctly identified in the calendar range
hbase - 25827 master should automatically set hbase . rootdir . perms if hbase . security . authentication be enable
changed return statement from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
added a null check for the state format in CollectionsHandler and updated state format handling in ExternalCollectionsTest and AbstractFullDistribZkTest
updated logging statements in CentralAuthenticationServiceImpl . java and modified ticket validation logic in AbstractTicket . java to improve logging clarity and ensure
pdfbox - 4892 : handle illegalargumentexception , a suggest by valerybokov
simplified the conditional check for file types in AbstractFileResourceSet . java to enhance code readability and maintainability
[ mng - 5391 ] fix path translation in expressionevaluator for file parameter
split protobuf coders into a single protobuf extension so we can reuse protobuf coders
updated JpaQueryParsingToken instantiation to include a false parameter to ensure compatibility with signed numeric literals in query parsing
updated ` generateLaunchLugFromRASAeroRailGuide ` and ` RailGuideHandler ` to include ` parentLength ` and
removed the getNonceFactory method that returns null in BitmexStreamingExchange . java to simplify the code by eliminating unnecessary functionality
( chore ) camel - mail : use format string for log message
[ java ] update driverconductortest to use default timeout .
changed the default value of initializeLoadedClasses from true to false in ScanSpec . java to disable class initialization during scanning by default
added a call to grabFocus on the searchField in FullTextSearchPanel . java to ensure the search field reflects the current user input
refactor NioParams initialization in TlsConnectionLogging . java to improve readability and maintainability of the code
replaced an assertion with a comment for the random number retrieval in StatementTest . java to clarify the test ' s purpose to ensure
updated assertion message formatting in TestSolrConfigHandler . java to improve clarity of error reporting for expected values
replaced HttpMethod with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests . java to improve test reliability by mocking
updated regex pattern in FilterResourcesStep . java to include density handling for drawable matching to improve accuracy in matching drawable display based on density
added a new private variable ` buttonUIID ` and ` elementPrefix ` for retrieving and updating UIID based on the component type to improve
removed the import of DisplayMetrics and updated the rotation condition in RecentsAnimationDeviceState . java to simplify the code by eliminating
added two new files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , for testing
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to indicate that
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
simplified the condition for determining needsToUpdateCredentials in FileDownloader and FileUploader to improve code readability and maintainability
storefilescanner should close all storefilescanners if they be null
replaced calls to ` get ( ) ` with ` getOrDefault ( ) ` for retrieving received byte , received bytes , packets , and packets
added nonce parameter and assertion for token claims in TokenMvcMockTests . java to ensure correct retrieval of claims for a specific token
updated multiple Java files related to chart editors for consistency to improve code maintainability and readability across the chart components
set the width and height of the form layered pane to ensure proper layout behavior for the form layered pane
removed unnecessary imports and added a method to calculate the maximum height of the owner to improve code clarity and ensure proper height adjustment based on the
modified ` openDatabase ( ) ` and ` openSharedDatabase ( ) ` methods to return a boolean indicating whether the database connection is connected to
replaced direct access to ` DOCKER _ COMMAND ` with ` Platform . DOCKER _ COMMAND ` in ` DockerTestUtils .
added null check for input stream in TestIsartorValidationFromClasspath . java to improve error handling and provide user feedback when input stream is
added a color attribute for folder leave behind in TaskbarView and updated drawing methods accordingly to allow dynamic color customization of the leave behind icon
show an error dialog when run canary plugin with android studio .
apiresponseserializer : log a warning if the identityproxy table name be null
added modulePersistEnable and modulePersistDisable lists with corresponding getter and setter methods in StartArgs . java to manage module persistence state based on user
updated argument validation logic and improved error message in GeminiMarketDataService . java to enhance clarity and correctness of the
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain insertion order for questions in the flow scope
add a simple test case to show how to handle the case where a role be add .
updated the removeExclude method calls in AuthCheckFilter . java to include specific JSP elements to enhance security by excluding certain JSP elements from
refactor the Scheduler class to manage postRunnables more efficiently by introducing an ` isExecutingRunnable ` flag to improve thread safety
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to improve method flexibility
replace character type casting with integer reading in XMLParser . java to handle unexpected end - of - stream scenarios to improve robustness by preventing
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address issues related to
update arrow positioning in DeepShortcutsContainer to ensure proper positioning of the arrow based on icon visibility
fix : remove printstacktrace ( ) from jabrefexecutorservice # handleinterruptedexceptions
refactor ` AbsSwipeUpHandler ` and ` RecentsView ` to include a refresh view parameter for better handling of task updates
pdfbox - 4892 : remove reference to org . apache . pdfbox . extractttffonts , a suggest by valery
updated InternetAddress instantiation to include an additional boolean parameter and improved validation in HostnameFormatSpecifier to ensure proper email formatting and error handling for invalid
removed unnecessary references to ` mOperationsService . this ` in multiple activity classes to simplify code and improve readability by eliminating unnecessary references
updated the handling of ` maxDocId ` and introduced ` _ currentDocId ` in ` SizeBasedDocIdIterator ` to improve cl
added overloaded methods to ` FileDialoger ` for opening files with or without an existing file name to enhance file selection functionality by allowing
updated widget span and page count settings in AppsCustomizePagedView and added a method to update page counts in AppsCustomize
added a method to transform active instances and updated bound calculations in FlightConfiguration . java ; updated expectedLength in FlightConfigurationTest . java
updated message body in MicrometerMessageHistoryTest and SpringMicrometerMessageHistoryTest to use " direct : " instead of
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3762 ] filter out hidden field from the response metadata .
added a test method to verify that the StarTreeConfig builder sets dimension names to null to ensure that the builder correctly handles missing dimensions and
added fluent argument " recipients " to the recipientList method in FromBuilder . java to support dynamic recipient list building in the route builder
refactor InlineLayoutBox to improve parent retrieval and repaint logic to enhance layout handling and ensure proper repaint behavior based on painting information
replaced the detection method operation mechanism with a service connection for managing authentication operations to improve the reliability and reliability of the authentication process by
